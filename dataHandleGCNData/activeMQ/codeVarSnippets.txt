AmqpSender sender subscriptionsByConsumerId get dispatch getConsumerId if sender null if dispatch getMessage null LOG trace dispatch getMessage getMessageId else LOG trace dispatch getConsumerId sender onMessageDispatch dispatch if dispatch getMessage null LOG trace dispatch getMessage getMessageId else if command getDataStructureType ConnectionError DATA_STRUCTURE_TYPE Throwable exception ConnectionError command getException handleException exception else if command isConsumerControl ConsumerControl control ConsumerControl command AmqpSender sender subscriptionsByConsumerId get control getConsumerId
void deleteTemporaryDestination ActiveMQTempDestination destination DestinationInfo info new DestinationInfo info setConnectionId connectionId info setOperationType DestinationInfo REMOVE_OPERATION_TYPE info setDestination destination sendToActiveMQ info new ResponseHandler Override public void onResponse AmqpProtocolConverter converter Response response throws IOException if response isException Throwable exception ExceptionResponse response getException
void handleException Throwable exception
public void createReceiver final Receiver protonReceiver throws Exception org apache qpid proton amqp transport Target remoteTarget protonReceiver getRemoteTarget ProducerInfo producerInfo new ProducerInfo getNextProducerId final AmqpReceiver receiver new AmqpReceiver this protonReceiver producerInfo
SuppressWarnings public void createSender final Sender protonSender throws Exception org apache qpid proton amqp messaging Source source org apache qpid proton amqp messaging Source protonSender getRemoteSource ConsumerInfo consumerInfo new ConsumerInfo getNextConsumerId final AmqpSender sender new AmqpSender this protonSender consumerInfo
public void processSaslExchange ConnectionInfo connectionInfo if sasl getRemoteMechanisms length SaslMechanism mechanism getSaslMechanism sasl getRemoteMechanisms if mechanism null
public void processSaslExchange ConnectionInfo connectionInfo if sasl getRemoteMechanisms length SaslMechanism mechanism getSaslMechanism sasl getRemoteMechanisms if mechanism null LOG debug mechanism getMechanismName mechanism processSaslStep sasl if mechanism isFailed connectionInfo setUserName mechanism getUsername connectionInfo setPassword mechanism getPassword if tryAuthenticate connectionInfo transport getPeerCertificates sasl done Sasl SaslOutcome PN_SASL_OK else sasl done Sasl SaslOutcome PN_SASL_AUTH LOG debug mechanism getMechanismName else
Test timeout public void testMessagesAreAckedAMQProducer throws Exception int messagesSent ActiveMQAdmin enableJMSFrameTracing assertTrue brokerService isPersistent Connection connection createAMQConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue name getMethodName MessageProducer producer session createProducer queue TextMessage message null for int i i messagesSent i message session createTextMessage String messageText i new java util Date toString message setText messageText
Test timeout public void testSelectingOnAMQPMessageID throws Exception ActiveMQAdmin enableJMSFrameTracing assertTrue brokerService isPersistent Connection connection JMSClientContext INSTANCE createConnection amqpURI connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue name getMethodName MessageProducer p session createProducer queue TextMessage message session createTextMessage String messageText new java util Date toString message setText messageText p send message restartBroker connection session String selector message getJMSMessageID
Test timeout public void testSelectingOnActiveMQMessageID throws Exception ActiveMQAdmin enableJMSFrameTracing assertTrue brokerService isPersistent Connection connection createAMQConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue name getMethodName MessageProducer p session createProducer destination TextMessage message session createTextMessage String messageText new java util Date toString message setText messageText p send message restartBroker connection session String selector message getJMSMessageID
Test timeout public void testMessagesAreAckedAMQPProducer throws Exception int messagesSent ActiveMQAdmin enableJMSFrameTracing assertTrue brokerService isPersistent Connection connection JMSClientContext INSTANCE createConnection amqpURI connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue name getMethodName MessageProducer p session createProducer queue TextMessage message null for int i i messagesSent i message session createTextMessage String messageText i new java util Date toString message setText messageText
connection start try Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue queueName int messagesReceived MessageConsumer consumer if selector null consumer session createConsumer queue else consumer session createConsumer queue selector try QueueViewMBean queueView getProxyToQueue queue getQueueName if queueView getQueueSize return catch Exception e
if selector null consumer session createConsumer queue else consumer session createConsumer queue selector try QueueViewMBean queueView getProxyToQueue queue getQueueName if queueView getQueueSize return catch Exception e LOG debug e Message msg consumer receive while msg null assertNotNull msg assertTrue msg TextMessage TextMessage textMessage TextMessage msg
private void sendMessageToQueueUsingAmqp throws Exception Connection connection createAmqpConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getQueueName MessageProducer producer session createProducer queue try TextMessage message session createTextMessage producer send message
private void sendMessageToQueueUsingStomp throws Exception Connection connection createStompConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getQueueName MessageProducer producer session createProducer queue try TextMessage message session createTextMessage producer send message
private void readMessageFromQueueUsingAmqp throws Exception Connection connection createAmqpConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getQueueName MessageConsumer consumer session createConsumer queue connection start Message received consumer receive assertNotNull received
private void readMessageFromQueueUsingStomp throws Exception Connection connection createStompConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getQueueName MessageConsumer consumer session createConsumer queue connection start Message received consumer receive assertNotNull received
protected void addTranportConnectors throws Exception TransportConnector connector null if isUseOpenWireConnector connector brokerService addConnector openwirePort openwirePort connector getConnectUri getPort openwireURI connector getPublishableConnectURI
TransportConnector connector null if isUseOpenWireConnector connector brokerService addConnector openwirePort openwirePort connector getConnectUri getPort openwireURI connector getPublishableConnectURI LOG debug openwirePort if isUseTcpConnector connector brokerService addConnector amqpPort getAmqpTransformer getAdditionalConfig amqpPort connector getConnectUri getPort amqpURI connector getPublishableConnectURI LOG debug amqpPort if isUseSslConnector connector brokerService addConnector amqpSslPort getAmqpTransformer getAdditionalConfig amqpSslPort connector getConnectUri getPort amqpSslURI connector getPublishableConnectURI
LOG debug openwirePort if isUseTcpConnector connector brokerService addConnector amqpPort getAmqpTransformer getAdditionalConfig amqpPort connector getConnectUri getPort amqpURI connector getPublishableConnectURI LOG debug amqpPort if isUseSslConnector connector brokerService addConnector amqpSslPort getAmqpTransformer getAdditionalConfig amqpSslPort connector getConnectUri getPort amqpSslURI connector getPublishableConnectURI LOG debug amqpSslPort if isUseNioConnector connector brokerService addConnector amqpNioPort getAmqpTransformer getAdditionalConfig amqpNioPort connector getConnectUri getPort amqpNioURI connector getPublishableConnectURI
amqpURI connector getPublishableConnectURI LOG debug amqpPort if isUseSslConnector connector brokerService addConnector amqpSslPort getAmqpTransformer getAdditionalConfig amqpSslPort connector getConnectUri getPort amqpSslURI connector getPublishableConnectURI LOG debug amqpSslPort if isUseNioConnector connector brokerService addConnector amqpNioPort getAmqpTransformer getAdditionalConfig amqpNioPort connector getConnectUri getPort amqpNioURI connector getPublishableConnectURI LOG debug amqpNioPort if isUseNioPlusSslConnector connector brokerService addConnector amqpNioPlusSslPort getAmqpTransformer getAdditionalConfig amqpNioPlusSslPort connector getConnectUri getPort
amqpSslPort connector getConnectUri getPort amqpSslURI connector getPublishableConnectURI LOG debug amqpSslPort if isUseNioConnector connector brokerService addConnector amqpNioPort getAmqpTransformer getAdditionalConfig amqpNioPort connector getConnectUri getPort amqpNioURI connector getPublishableConnectURI LOG debug amqpNioPort if isUseNioPlusSslConnector connector brokerService addConnector amqpNioPlusSslPort getAmqpTransformer getAdditionalConfig amqpNioPlusSslPort connector getConnectUri getPort amqpNioPlusSslURI connector getPublishableConnectURI LOG debug amqpNioPlusSslPort if isUseAutoConnector connector brokerService addConnector autoPort getAdditionalConfig
p setPriority TextMessage amqpMessage amqpSession createTextMessage amqpMessage setText p send amqpMessage p close amqpSession close amqpConnection close ActiveMQConnectionFactory factory new ActiveMQConnectionFactory openwireConnectionURI Connection openwireConn factory createConnection openwireConn start Session session openwireConn createSession false Session AUTO_ACKNOWLEDGE Queue jmsDest session createQueue TEST_QUEUE MessageConsumer c session createConsumer jmsDest Message message c receive assertNotNull message
public Connection createConnection URI remoteURI String username String password String clientId boolean syncPublish throws JMSException ConnectionFactory factory createConnectionFactory remoteURI username password syncPublish Connection connection factory createConnection connection setExceptionListener new ExceptionListener Override public void onException JMSException exception
public TopicConnection createTopicConnection URI remoteURI String username String password String clientId boolean syncPublish throws JMSException TopicConnectionFactory factory createTopicConnectionFactory remoteURI username password syncPublish TopicConnection connection factory createTopicConnection connection setExceptionListener new ExceptionListener Override public void onException JMSException exception
public QueueConnection createQueueConnection URI remoteURI String username String password String clientId boolean syncPublish throws JMSException QueueConnectionFactory factory createQueueConnectionFactory remoteURI username password syncPublish QueueConnection connection factory createQueueConnection connection setExceptionListener new ExceptionListener Override public void onException JMSException exception
private void doTestRequestResponse throws Exception MessageProducer requestProducer requestorSession createProducer requestDestination MessageConsumer replyConsumer requestorSession createConsumer replyDestination TextMessage requestMessage requestorSession createTextMessage requestMessage setJMSReplyTo replyDestination requestProducer send requestMessage
private void doTestRequestResponse throws Exception MessageProducer requestProducer requestorSession createProducer requestDestination MessageConsumer replyConsumer requestorSession createConsumer replyDestination TextMessage requestMessage requestorSession createTextMessage requestMessage setJMSReplyTo replyDestination requestProducer send requestMessage LOG info requestDestination toString Message msg replyConsumer receive if msg TextMessage TextMessage replyMessage TextMessage msg LOG info
Override public void onMessage Message message try TextMessage requestMessage TextMessage message LOG info
LOG info LOG info requestMessage toString Destination replyDestination requestMessage getJMSReplyTo if replyDestination Topic LOG info Topic replyDestination getTopicName else LOG info Queue replyDestination getQueueName TextMessage replyMessage responderSession createTextMessage requestMessage getText replyMessage setJMSCorrelationID requestMessage getJMSMessageID if dynamicallyCreateProducer responseProducer responderSession createProducer replyDestination responseProducer send replyMessage else responseProducer send replyDestination replyMessage LOG info
protected void onException JMSException e
protected BrokerService createBroker String uri throws Exception
Test timeout public void testTransactedConsumer throws Exception ActiveMQAdmin enableJMSFrameTracing final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName
Test timeout public void testTransactedConsumer throws Exception ActiveMQAdmin enableJMSFrameTracing final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize MessageConsumer consumer session createConsumer queue Message msg consumer receive TestConfig TIMEOUT assertNotNull msg assertTrue msg TextMessage
final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize MessageConsumer consumer session createConsumer queue Message msg consumer receive TestConfig TIMEOUT assertNotNull msg assertTrue msg TextMessage LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize session commit
Test timeout public void testRollbackRececeivedMessage throws Exception ActiveMQAdmin enableJMSFrameTracing final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName
Test timeout public void testRollbackRececeivedMessage throws Exception ActiveMQAdmin enableJMSFrameTracing final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize MessageConsumer consumer session createConsumer queue Message msg consumer receive TestConfig TIMEOUT
sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize MessageConsumer consumer session createConsumer queue Message msg consumer receive TestConfig TIMEOUT LOG info msg assertNotNull msg assertTrue msg TextMessage assertEquals false msg getJMSRedelivered session rollback msg consumer receive TestConfig TIMEOUT assertNotNull msg assertTrue msg TextMessage assertEquals true msg getJMSRedelivered
assertEquals msgCount queueView getQueueSize MessageConsumer consumer session createConsumer queue Message msg consumer receive TestConfig TIMEOUT LOG info msg assertNotNull msg assertTrue msg TextMessage assertEquals false msg getJMSRedelivered session rollback msg consumer receive TestConfig TIMEOUT assertNotNull msg assertTrue msg TextMessage assertEquals true msg getJMSRedelivered LOG info queueView getQueueSize assertEquals msgCount queueView getQueueSize session commit
Test timeout public void testTXConsumerAndLargeNumberOfMessages throws Exception ActiveMQAdmin enableJMSFrameTracing final int msgCount connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName sendMessages connection queue msgCount QueueViewMBean queueView getProxyToQueue getDestinationName
Queue queue session createQueue getDestinationName connection start final MessageProducer producer session createProducer queue producer setDeliveryMode DeliveryMode PERSISTENT final Message m session createTextMessage Testable t new Testable Override public synchronized void run try for int i i i producer send m synchronized producer producer notifyAll TimeUnit MILLISECONDS sleep msg catch Exception ex
final Session session connection createSession false Session AUTO_ACKNOWLEDGE final Queue queue session createQueue getDestinationName connection start Testable t new Testable Override public synchronized void run try for int i i i MessageProducer producer session createProducer queue synchronized session session notifyAll if producer null msg TimeUnit SECONDS sleep msg catch Exception ex
connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName connection start final MessageConsumer consumer session createConsumer queue Testable t new Testable Override public synchronized void run try for int i i i consumer receiveNoWait synchronized consumer consumer notifyAll TimeUnit MILLISECONDS sleep i msg catch Exception ex
Test timeout public void testConsumerReceiveTimedThrowsWhenBrokerStops throws Exception connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName connection start final MessageConsumer consumer session createConsumer queue Testable t new Testable Override public synchronized void run try for int i i i consumer receive i synchronized consumer consumer notifyAll msg catch Exception ex
connection start final MessageConsumer consumer session createConsumer queue Testable t new Testable Override public synchronized void run try Message m consumer receive synchronized consumer consumer notifyAll if m null msg return m consumer receive if m null msg catch Exception ex
Test timeout public void testConnectionsAreClosed throws Exception ActiveMQAdmin enableJMSFrameTracing final ConnectorViewMBean connector getProxyToConnectionView getTargetConnectorName
Test timeout public void testExecptionListenerCalledOnBrokerStop throws Exception ActiveMQAdmin enableJMSFrameTracing connection createConnection Session s connection createSession false Session AUTO_ACKNOWLEDGE connection start final CountDownLatch called new CountDownLatch connection setExceptionListener new ExceptionListener Override public void onException JMSException exception
Test timeout public void testSendLargeMessage throws JMSException InterruptedException connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE String queueName getDestinationName Queue queue session createQueue queueName MessageProducer producer session createProducer queue int messageSize String messageText createLargeString messageSize Message m session createTextMessage messageText
Test timeout public void testDurableTopicStateAfterSubscriberClosed throws Exception String durableClientId getDestinationName String durableSubscriberName getDestinationName BrokerView adminView this brokerService getAdminView int durableSubscribersAtStart adminView getDurableTopicSubscribers length int inactiveSubscribersAtStart adminView getInactiveDurableTopicSubscribers length
Test timeout public void testDurableTopicStateAfterSubscriberClosed throws Exception String durableClientId getDestinationName String durableSubscriberName getDestinationName BrokerView adminView this brokerService getAdminView int durableSubscribersAtStart adminView getDurableTopicSubscribers length int inactiveSubscribersAtStart adminView getInactiveDurableTopicSubscribers length LOG debug durableSubscribersAtStart inactiveSubscribersAtStart TopicConnection subscriberConnection JMSClientContext INSTANCE createTopicConnection getBrokerURI subscriberConnection setClientID durableClientId TopicSession subscriberSession subscriberConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic subscriberSession createTopic getDestinationName TopicSubscriber messageConsumer subscriberSession createDurableSubscriber topic durableSubscriberName assertNotNull messageConsumer int durableSubscribers adminView getDurableTopicSubscribers length int inactiveSubscribers adminView getInactiveDurableTopicSubscribers length
LOG debug durableSubscribersAtStart inactiveSubscribersAtStart TopicConnection subscriberConnection JMSClientContext INSTANCE createTopicConnection getBrokerURI subscriberConnection setClientID durableClientId TopicSession subscriberSession subscriberConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic subscriberSession createTopic getDestinationName TopicSubscriber messageConsumer subscriberSession createDurableSubscriber topic durableSubscriberName assertNotNull messageConsumer int durableSubscribers adminView getDurableTopicSubscribers length int inactiveSubscribers adminView getInactiveDurableTopicSubscribers length LOG debug durableSubscribers inactiveSubscribers assertEquals durableSubscribers durableSubscribersAtStart assertEquals inactiveSubscribers inactiveSubscribersAtStart subscriberConnection close durableSubscribers adminView getDurableTopicSubscribers length inactiveSubscribers adminView getInactiveDurableTopicSubscribers length
connection factory createConnection connection start Session session connection createSession false ackMode final Destination destination if topic destination session createTopic getDestinationName else destination session createQueue getDestinationName MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try message acknowledge done countDown catch JMSException ex
MessageProducer messageProducer session createProducer queue for int i i MSG_COUNT i TextMessage message session createTextMessage message setText i messageProducer send message DeliveryMode PERSISTENT javax jms Message DEFAULT_PRIORITY javax jms Message DEFAULT_TIME_TO_LIVE session close QueueViewMBean queueView getProxyToQueue getTestName assertEquals queueView getQueueSize int counter session connection createSession true Session SESSION_TRANSACTED MessageConsumer messageConsumer session createConsumer queue do TextMessage message TextMessage messageConsumer receive if message null counter
MessageProducer messageProducer session createProducer queue for int i i MSG_COUNT i TextMessage message session createTextMessage message setText i messageProducer send message DeliveryMode PERSISTENT javax jms Message DEFAULT_PRIORITY javax jms Message DEFAULT_TIME_TO_LIVE session close QueueViewMBean queueView getProxyToQueue getTestName assertEquals queueView getQueueSize int counter session connection createSession true Session SESSION_TRANSACTED MessageConsumer messageConsumer session createConsumer queue do TextMessage message TextMessage messageConsumer receive if message null counter
Test timeout public void testQueueTXRollbackAndCommit throws Exception final int MSG_COUNT connection createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Queue destination session createQueue getDestinationName MessageProducer producer session createProducer destination MessageConsumer consumer session createConsumer destination for int i i MSG_COUNT i
final int MSG_COUNT connection createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Queue destination session createQueue getDestinationName MessageProducer producer session createProducer destination MessageConsumer consumer session createConsumer destination for int i i MSG_COUNT i LOG info i TextMessage message session createTextMessage i message setIntProperty i producer send message session rollback assertEquals getProxyToQueue getDestinationName getQueueSize for int i i MSG_COUNT i
TextMessage message session createTextMessage i message setIntProperty i producer send message session rollback assertEquals getProxyToQueue getDestinationName getQueueSize for int i i MSG_COUNT i LOG info i TextMessage message session createTextMessage i message setIntProperty i producer send message session commit assertEquals MSG_COUNT getProxyToQueue getDestinationName getQueueSize SubscriptionViewMBean subscription getProxyToQueueSubscriber getDestinationName assertNotNull subscription for int i i MSG_COUNT i
Test timeout public void testQueueTXRollbackAndCommitAsyncConsumer throws Exception final int MSG_COUNT final AtomicInteger counter new AtomicInteger connection createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Queue destination session createQueue getDestinationName MessageProducer producer session createProducer destination MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try
connection createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Queue destination session createQueue getDestinationName MessageProducer producer session createProducer destination MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG info message getJMSMessageID catch JMSException e counter incrementAndGet int msgIndex for int i i MSG_COUNT i
try LOG info message getJMSMessageID catch JMSException e counter incrementAndGet int msgIndex for int i i MSG_COUNT i LOG info msgIndex TextMessage message session createTextMessage msgIndex message setIntProperty msgIndex producer send message LOG info session rollback assertEquals getProxyToQueue getDestinationName getQueueSize for int i i MSG_COUNT i
LOG info session rollback assertEquals getProxyToQueue getDestinationName getQueueSize for int i i MSG_COUNT i LOG info msgIndex TextMessage message session createTextMessage msgIndex message setIntProperty msgIndex producer send message LOG info session commit assertEquals MSG_COUNT getProxyToQueue getDestinationName getQueueSize SubscriptionViewMBean subscription getProxyToQueueSubscriber getDestinationName assertNotNull subscription assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
LOG info session commit assertEquals MSG_COUNT getProxyToQueue getDestinationName getQueueSize SubscriptionViewMBean subscription getProxyToQueueSubscriber getDestinationName assertNotNull subscription assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return counter get MSG_COUNT LOG info session commit for int i i MSG_COUNT i LOG info msgIndex TextMessage message session createTextMessage msgIndex message setIntProperty msgIndex
public void sendMessages int messageCount throws JMSException Connection connection null try connection createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName for int i i messageCount i MessageProducer messageProducer session createProducer queue TextMessage message session createTextMessage i message setIntProperty i messageProducer send message
Connection connection JMSClientContext INSTANCE createConnection remoteURI false Session session connection createSession false Session AUTO_ACKNOWLEDGE String destinationName System currentTimeMillis Destination destination session createTopic destinationName connection start ExecutorService executor Executors newCachedThreadPool for int i i CONSUMER_COUNT i ConsumerTask consumerTask new ConsumerTask initLatch destinationName remoteURI i latch ITERATIONS executor submit consumerTask connection start initLatch await LOG debug latch getCount sendMessages connection destination ITERATIONS LOG debug latch getCount latch await TimeUnit SECONDS
outbound setIntProperty nInt outbound setFloatProperty nFloat outbound setDoubleProperty nDouble outbound setStringProperty outbound setLongProperty nLong outbound setObjectProperty Boolean valueOf bool openwireProducer send outbound Message inbound amqpConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals
outbound setStringProperty outbound setLongProperty nLong outbound setObjectProperty Boolean valueOf bool openwireProducer send outbound Message inbound amqpConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName
outbound setObjectProperty Boolean valueOf bool openwireProducer send outbound Message inbound amqpConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName
propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName LOG debug propertyName fail propertyName else
String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName LOG debug propertyName fail propertyName else LOG debug propertyName fail propertyName else
outbound setIntProperty nInt outbound setFloatProperty nFloat outbound setDoubleProperty nDouble outbound setStringProperty outbound setLongProperty nLong outbound setObjectProperty Boolean valueOf bool amqpProducer send outbound Message inbound openwireConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals
outbound setStringProperty outbound setLongProperty nLong outbound setObjectProperty Boolean valueOf bool amqpProducer send outbound Message inbound openwireConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName
outbound setObjectProperty Boolean valueOf bool amqpProducer send outbound Message inbound openwireConsumer receive propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName
propertyNames inbound getPropertyNames int propertyCount do String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName LOG debug propertyName fail propertyName else
String propertyName propertyNames nextElement if propertyName indexOf propertyCount if propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals propertyName equals LOG debug propertyName if inbound propertyExists propertyName assertTrue inbound propertyExists propertyName LOG debug propertyName else if inbound propertyExists propertyName LOG debug propertyName fail propertyName else LOG debug propertyName fail propertyName else
assumeFalse transformer equals Connection openwire createJMSConnection Connection amqp createConnection openwire start amqp start Session openwireSession openwire createSession false Session AUTO_ACKNOWLEDGE Session amqpSession amqp createSession false Session AUTO_ACKNOWLEDGE Destination queue openwireSession createQueue getDestinationName MessageProducer amqpProducer amqpSession createProducer queue MessageConsumer openwireConsumer openwireSession createConsumer queue ObjectMessage outgoing amqpSession createObjectMessage outgoing setObject UUID randomUUID amqpProducer send outgoing Message received openwireConsumer receive assertNotNull received
assumeFalse transformer equals Connection openwire createJMSConnection Connection amqp createConnection openwire start amqp start Session openwireSession openwire createSession false Session AUTO_ACKNOWLEDGE Session amqpSession amqp createSession false Session AUTO_ACKNOWLEDGE Destination queue openwireSession createQueue getDestinationName MessageProducer openwireProducer openwireSession createProducer queue MessageConsumer amqpConsumer amqpSession createConsumer queue ObjectMessage outgoing amqpSession createObjectMessage outgoing setObject UUID randomUUID openwireProducer send outgoing Message received amqpConsumer receive assertNotNull received
Connection openwire createJMSConnection ActiveMQConnection openwire setUseCompression true Connection amqp createConnection openwire start amqp start Session openwireSession openwire createSession false Session AUTO_ACKNOWLEDGE Session amqpSession amqp createSession false Session AUTO_ACKNOWLEDGE Destination queue openwireSession createQueue getDestinationName MessageProducer openwireProducer openwireSession createProducer queue MessageConsumer amqpConsumer amqpSession createConsumer queue ObjectMessage outgoing amqpSession createObjectMessage outgoing setObject UUID randomUUID openwireProducer send outgoing Message received amqpConsumer receive assertNotNull received
public void doTestSendTextMessageOfGivenSize int expectedSize throws JMSException
public void doTestSendTextMessageOfGivenSize int expectedSize throws JMSException LOG info expectedSize String payload createLargeString expectedSize assertEquals expectedSize payload getBytes length Connection connection JMSClientContext INSTANCE createConnection getBrokerAmqpConnectionURI long startTime System currentTimeMillis Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue testName getMethodName MessageProducer producer session createProducer queue TextMessage message session createTextMessage message setText payload producer send message long endTime System currentTimeMillis
TextMessage message session createTextMessage message setText payload producer send message long endTime System currentTimeMillis LOG info endTime startTime startTime System currentTimeMillis MessageConsumer consumer session createConsumer queue connection start LOG info Message receivedMessage consumer receive assertNotNull receivedMessage assertTrue receivedMessage TextMessage TextMessage receivedTextMessage TextMessage receivedMessage assertNotNull receivedMessage endTime System currentTimeMillis
public void doTestSendBytesMessageOfGivenSize int expectedSize throws JMSException
public void doTestSendBytesMessageOfGivenSize int expectedSize throws JMSException LOG info expectedSize byte payload createLargeByteArray expectedSize assertEquals expectedSize payload length Connection connection JMSClientContext INSTANCE createConnection getBrokerAmqpConnectionURI long startTime System currentTimeMillis Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue testName getMethodName MessageProducer producer session createProducer queue BytesMessage message session createBytesMessage message writeBytes payload producer send message long endTime System currentTimeMillis
BytesMessage message session createBytesMessage message writeBytes payload producer send message long endTime System currentTimeMillis LOG info endTime startTime startTime System currentTimeMillis MessageConsumer consumer session createConsumer queue connection start LOG info Message receivedMessage consumer receive assertNotNull receivedMessage assertTrue receivedMessage BytesMessage BytesMessage receivedBytesMessage BytesMessage receivedMessage assertNotNull receivedMessage endTime System currentTimeMillis
protected void readMessagesOnBroker int count throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue for int i i MESSAGE_COUNT i Message message consumer receive RECEIVE_TIMEOUT assertNotNull message
protected void readMessagesOnBroker int count throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue for int i i MESSAGE_COUNT i Message message consumer receive RECEIVE_TIMEOUT assertNotNull message LOG debug i message getClass getSimpleName String gid message getStringProperty String seq message getStringProperty
protected void readMessagesOnBroker int count throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue for int i i MESSAGE_COUNT i Message message consumer receive RECEIVE_TIMEOUT assertNotNull message LOG debug i message getClass getSimpleName String gid message getStringProperty String seq message getStringProperty LOG debug gid
connection cf createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE assertNotNull session Queue queue session createQueue getDestinationName sendMessages name getMethodName MSG_COUNT false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals MSG_COUNT proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while count MSG_COUNT enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
Test timeout public void testBroseOneInQueue throws Exception JmsConnectionFactory cf new JmsConnectionFactory getAmqpURI connection cf createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageProducer producer session createProducer queue producer send session createTextMessage producer close QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration while enumeration hasMoreElements Message m Message enumeration nextElement assertTrue m TextMessage
connection cf createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE assertNotNull session Queue queue session createQueue getDestinationName sendMessages name getMethodName false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
connection cf createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE assertNotNull session Queue queue session createQueue getDestinationName sendMessages name getMethodName false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
connection cf createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED assertNotNull session Queue queue session createQueue getDestinationName sendMessages name getMethodName false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
Queue queue session createQueue getDestinationName sendMessages name getMethodName false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals proxy getQueueSize MessageProducer txProducer session createProducer queue for int i i i txProducer send session createMessage assertEquals proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
connection start final int MSG_COUNT Session session connection createSession false Session AUTO_ACKNOWLEDGE assertNotNull session Queue queue session createQueue getDestinationName sendMessages name getMethodName MSG_COUNT false QueueViewMBean proxy getProxyToQueue getDestinationName assertEquals MSG_COUNT proxy getQueueSize QueueBrowser browser session createBrowser queue assertNotNull browser Enumeration enumeration browser getEnumeration int count while enumeration hasMoreElements Message msg Message enumeration nextElement assertNotNull msg
public void sendMessages int messageCount throws JMSException Connection connection null try connection createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName for int i i messageCount i MessageProducer messageProducer session createProducer queue TextMessage message session createTextMessage i message setIntProperty i messageProducer send message
request onSuccess pumpToProtonTransport request catch Exception e LOG debug try if closeTimeout request sync else request sync closeTimeout TimeUnit MILLISECONDS catch IOException e LOG warn e getMessage finally if transport null try
final AmqpTransactionId txId session getConnection getNextTransactionId final ClientFuture request new ClientFuture new ClientFutureSynchronization Override public void onPendingSuccess transactionId txId Override public void onPendingFailure Throwable cause transactionId null LOG info txId session getScheduler execute new Runnable Override public void run if coordinator null coordinator isClosed LOG info txId coordinator new AmqpTransactionCoordinator session coordinator open new AsyncResult Override public void onSuccess
session getScheduler execute new Runnable Override public void run if coordinator null coordinator isClosed LOG info txId coordinator new AmqpTransactionCoordinator session coordinator open new AsyncResult Override public void onSuccess try LOG info txId coordinator declare txId request catch Exception e request onFailure e Override public void onFailure Throwable result request onFailure result Override public boolean isComplete
if transactionId null throw new IllegalStateException preCommit final ClientFuture request new ClientFuture new ClientFutureSynchronization Override public void onPendingSuccess transactionId null postCommit Override public void onPendingFailure Throwable cause transactionId null postCommit LOG debug transactionId session getScheduler execute new Runnable Override public void run try
if transactionId null throw new IllegalStateException preRollback final ClientFuture request new ClientFuture new ClientFutureSynchronization Override public void onPendingSuccess transactionId null postRollback Override public void onPendingFailure Throwable cause transactionId null postRollback LOG debug transactionId session getScheduler execute new Runnable Override public void run try
while deliveries hasNext Delivery pendingDelivery deliveries next if pendingDelivery remotelySettled continue DeliveryState state pendingDelivery getRemoteState AmqpTransactionId txId AmqpTransactionId pendingDelivery getContext AsyncResult pendingRequest pendingRequests get txId if pendingRequest null throw new IllegalStateException if state Declared LOG debug txId getTxId Declared declared Declared state txId setRemoteTxId declared getTxnId pendingRequest onSuccess else if state Rejected
if state Declared LOG debug txId getTxId Declared declared Declared state txId setRemoteTxId declared getTxnId pendingRequest onSuccess else if state Rejected LOG debug txId getTxId Rejected rejected Rejected state Exception cause AmqpSupport convertToException rejected getError JMSException failureCause null if txId isCommit failureCause new TransactionRolledBackException cause getMessage else failureCause new JMSException cause getMessage pendingRequest onFailure failureCause
private Mechanism findMatchingMechanism String remoteMechanisms Mechanism match null List Mechanism found new ArrayList Mechanism for String remoteMechanism remoteMechanisms if mechanismRestriction null mechanismRestriction equals remoteMechanism
private Mechanism findMatchingMechanism String remoteMechanisms Mechanism match null List Mechanism found new ArrayList Mechanism for String remoteMechanism remoteMechanisms if mechanismRestriction null mechanismRestriction equals remoteMechanism LOG debug remoteMechanism mechanismRestriction continue Mechanism mechanism null if remoteMechanism equalsIgnoreCase mechanism new PlainMechanism else if remoteMechanism equalsIgnoreCase mechanism new AnonymousMechanism else if remoteMechanism equalsIgnoreCase mechanism new CramMD5Mechanism else
Mechanism mechanism null if remoteMechanism equalsIgnoreCase mechanism new PlainMechanism else if remoteMechanism equalsIgnoreCase mechanism new AnonymousMechanism else if remoteMechanism equalsIgnoreCase mechanism new CramMD5Mechanism else LOG debug remoteMechanism continue if mechanism isApplicable username password found add mechanism if found isEmpty Collections sort found match found get found size
markAsInvalid if contains offered DELAYED_DELIVERY markAsInvalid Map Symbol Object properties connection getRemoteProperties if properties containsKey QUEUE_PREFIX markAsInvalid if properties containsKey TOPIC_PREFIX markAsInvalid if properties containsKey PRODUCT markAsInvalid if properties containsKey VERSION markAsInvalid if properties containsKey PLATFORM markAsInvalid else
Test timeout public void testCreditNotGrantedUntilBacklogClears throws Exception final int MSG_COUNT AmqpClient client createAmqpClient AmqpConnection connection trackConnection client connect AmqpSession session connection createSession AmqpReceiver receiver session createReceiver getTestName AmqpSender sender session createSender getTestName true for int i i MSG_COUNT i AmqpMessage message new AmqpMessage message setText i sender send message if i
Test timeout public void testReceiverCloseSendsRemoteClose throws Exception AmqpClient client createAmqpClient assertNotNull client final AtomicBoolean closed new AtomicBoolean client setValidator new AmqpValidator Override public void inspectClosedResource Session session
Test timeout public void testCreateQueueReceiverWithJMSSelector throws Exception AmqpClient client createAmqpClient client setValidator new AmqpValidator SuppressWarnings Override public void inspectOpenedResource Receiver receiver
Test timeout public void testCreateQueueReceiverWithNoLocalSet throws Exception AmqpClient client createAmqpClient client setValidator new AmqpValidator SuppressWarnings Override public void inspectOpenedResource Receiver receiver
Test timeout public void testUnsupportedFiltersAreNotListedAsSupported throws Exception AmqpClient client createAmqpClient client setValidator new AmqpValidator SuppressWarnings Override public void inspectOpenedResource Receiver receiver
try assertNull receiver receive TimeUnit SECONDS fail catch Throwable ex AmqpMessage delivered null try delivered receiver receive TimeUnit SECONDS catch Throwable ex fail long receivedTime System currentTimeMillis assertNotNull delivered Long msgDeliveryTime Long delivered getMessageAnnotation assertNotNull msgDeliveryTime assertEquals DELAY msgDeliveryTime longValue long totalDelay receivedTime sendTime
AmqpMessage message3 receiver1 receive TimeUnit SECONDS receiver2 flow AmqpMessage message4 receiver2 receive TimeUnit SECONDS assertNotNull message3 assertNotNull message4 assertEquals message3 getMessageId assertEquals message4 getMessageId message3 accept message4 accept LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS
assertNotNull message3 assertNotNull message4 assertEquals message3 getMessageId assertEquals message4 getMessageId message3 accept message4 accept LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS assertNotNull message LOG info message getMessageId message accept
message3 accept message4 accept LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS assertNotNull message LOG info message getMessageId message accept LOG info splitCredit receiver2 flow splitCredit for int i i splitCredit i AmqpMessage message receiver2 receive TimeUnit SECONDS
assertNotNull message4 assertEquals message3 getMessageId assertEquals message4 getMessageId message3 accept message4 accept assertTrue destinationView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return destinationView getInFlightCount LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS
message3 accept message4 accept assertTrue destinationView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return destinationView getInFlightCount LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS assertNotNull message LOG info message getMessageId message accept
return destinationView getInFlightCount LOG info int splitCredit MSG_COUNT LOG info splitCredit receiver1 flow splitCredit for int i i splitCredit i AmqpMessage message receiver1 receive TimeUnit SECONDS assertNotNull message LOG info message getMessageId message accept LOG info splitCredit receiver2 flow splitCredit for int i i splitCredit i AmqpMessage message receiver2 receive TimeUnit SECONDS
AmqpClient client createAmqpClient AmqpConnection connection trackConnection client connect connection setStateInspector new AmqpValidator Override public void inspectDeliveryUpdate Sender sender Delivery delivery if delivery remotelySettled LOG trace sender getName settled countDown AmqpSession session connection createSession AmqpSender sender session createSender getTestName false for int i i MSG_COUNT i AmqpMessage message new AmqpMessage message setText i sender send message if i
Test timeout public void testPresettledSender throws Exception final int MSG_COUNT AmqpClient client createAmqpClient AmqpConnection connection trackConnection client connect AmqpSession session connection createSession AmqpSender sender session createSender getTestName true for int i i MSG_COUNT i AmqpMessage message new AmqpMessage message setText i sender send message if i
Test timeout public void testSessionClosedDoesNotGetReceiverDetachFromRemote throws Exception AmqpClient client createAmqpClient assertNotNull client client setValidator new AmqpValidator Override public void inspectClosedResource Session session
AmqpConnection connection trackConnection client connect AmqpSession session connection createSession final AmqpReceiver receiver session createReceiver getTestName receiver flow sendMessages getTestName false AmqpMessage message receiver receive TimeUnit SECONDS assertNotNull message message accept QueueViewMBean queue getProxyToQueue getTestName ObjectName slowConsumerPolicyMBeanName queue getSlowConsumerStrategy assertNotNull slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean abortPolicy AbortSlowConsumerStrategyViewMBean brokerService getManagementContext newProxyInstance slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean class true TimeUnit SECONDS sleep TabularData slowOnes abortPolicy getSlowConsumers assertEquals slowOnes size
final AmqpReceiver receiver session createReceiver getTestName receiver flow sendMessages getTestName false AmqpMessage message receiver receive TimeUnit SECONDS assertNotNull message message accept QueueViewMBean queue getProxyToQueue getTestName ObjectName slowConsumerPolicyMBeanName queue getSlowConsumerStrategy assertNotNull slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean abortPolicy AbortSlowConsumerStrategyViewMBean brokerService getManagementContext newProxyInstance slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean class true TimeUnit SECONDS sleep TabularData slowOnes abortPolicy getSlowConsumers assertEquals slowOnes size LOG info slowOnes CompositeData slowOne CompositeData slowOnes values iterator next
sslContext setKeyStore keystore getCanonicalPath sslContext setKeyStorePassword sslContext setTrustStore keystore getCanonicalPath sslContext setTrustStorePassword sslContext afterPropertiesSet if broker null stopServer if System getProperty null File file new File System setProperty file getAbsolutePath broker createBroker broker setSslContext sslContext String connectorURI getConnectorURI TransportConnector connector broker addConnector connectorURI port connector getConnectUri getPort
sslContext setKeyStore keystore getCanonicalPath sslContext setKeyStorePassword sslContext setTrustStore keystore getCanonicalPath sslContext setTrustStorePassword sslContext afterPropertiesSet if broker null stopServer if System getProperty null File file new File System setProperty file getAbsolutePath broker createBroker broker setSslContext sslContext String connectorURI getConnectorURI TransportConnector connector broker addConnector connectorURI port connector getConnectUri getPort
message setBody new AmqpValue EncodedMessage encoded encode message InboundTransformer inboundTransformer getInboundTransformer OutboundTransformer outboundTransformer getOutboundTransformer for int i i WARM_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate long totalDuration long startTime System nanoTime for int i i PROFILE_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate totalDuration System nanoTime startTime
message setBody new AmqpValue EncodedMessage encoded encode message InboundTransformer inboundTransformer getInboundTransformer OutboundTransformer outboundTransformer getOutboundTransformer for int i i WARM_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate long totalDuration long startTime System nanoTime for int i i PROFILE_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate totalDuration System nanoTime startTime
Test public void testTypicalQpidJMSMessage throws Exception EncodedMessage encoded encode createTypicalQpidJMSMessage InboundTransformer inboundTransformer getInboundTransformer OutboundTransformer outboundTransformer getOutboundTransformer for int i i WARM_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate long totalDuration long startTime System nanoTime for int i i PROFILE_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate totalDuration System nanoTime startTime
Test public void testComplexQpidJMSMessage throws Exception EncodedMessage encoded encode createComplexQpidJMSMessage InboundTransformer inboundTransformer getInboundTransformer OutboundTransformer outboundTransformer getOutboundTransformer for int i i WARM_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate long totalDuration long startTime System nanoTime for int i i PROFILE_CYCLES i ActiveMQMessage intermediate inboundTransformer transform encoded intermediate onSend outboundTransformer transform intermediate totalDuration System nanoTime startTime
private void consumeMessages AtomicLong count throws Exception JmsConnection connection JmsConnection factory createConnection connection start Session session connection createSession false ActiveMQSession AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue long v while v count decrementAndGet if count get
private void publishMessages AtomicLong count throws Exception JmsConnection connection JmsConnection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageProducer producer session createProducer queue producer setDeliveryMode DeliveryMode NON_PERSISTENT while count getAndDecrement BytesMessage message session createBytesMessage message writeBytes payload producer send message if count get
Ignore Test public void testBrowserLeak throws JMSException InterruptedException connection createConnection Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getDestinationName session close for int i i NUM_ITERATIONS i session connection createSession false Session AUTO_ACKNOWLEDGE QueueBrowser browser session createBrowser queue int j Enumeration enums browser getEnumeration if enums hasMoreElements
for int i i NUM_ITERATIONS i session connection createSession false Session AUTO_ACKNOWLEDGE QueueBrowser browser session createBrowser queue int j Enumeration enums browser getEnumeration if enums hasMoreElements LOG debug queue getQueueName else Message message Message enums nextElement if message null LOG debug new Object j message queue getQueueName LOG debug queue getQueueName try browser close catch JMSException e
QueueBrowser browser session createBrowser queue int j Enumeration enums browser getEnumeration if enums hasMoreElements LOG debug queue getQueueName else Message message Message enums nextElement if message null LOG debug new Object j message queue getQueueName LOG debug queue getQueueName try browser close catch JMSException e LOG error e browser null
LOG debug queue getQueueName else Message message Message enums nextElement if message null LOG debug new Object j message queue getQueueName LOG debug queue getQueueName try browser close catch JMSException e LOG error e browser null LOG debug queue getQueueName try session close catch JMSException e
Test public void testCodecRejectsToLargeFrames throws Exception amqpWireFormat setMaxFrameSize MESSAGE_SIZE AmqpHeader inputHeader new AmqpHeader DataByteArrayOutputStream output new DataByteArrayOutputStream byte CONTENTS new byte MESSAGE_SIZE for int i i MESSAGE_SIZE i CONTENTS i output write inputHeader getBuffer output writeInt MESSAGE_SIZE output write CONTENTS output close try codec parse output toBuffer toByteBuffer fail catch Exception ex
protected void doTestInvalidHeaderProcessing int port final AmqpHeader header boolean ssl throws Exception final ClientConnection connection createClientConnection ssl connection open port connection send header AmqpHeader response connection readAmqpHeader assertNotNull response
Override public void removeDestination ConnectionContext context ActiveMQDestination destination long timeout throws Exception super removeDestination context destination timeout DestinationInfo info destinations remove destination if info null if getBrokerService isUseVirtualDestSubs for ConsumerInfo consumerInfo virtualDestinationConsumers keySet VirtualDestination virtualDestination virtualDestinationConsumers get consumerInfo if virtualDestinationMatcher matches virtualDestination destination VirtualConsumerPair key new VirtualConsumerPair virtualDestination destination ConsumerInfo i brokerConsumerDests get key if consumerInfo equals i brokerConsumerDests remove key null
Override public void virtualDestinationAdded ConnectionContext context VirtualDestination virtualDestination super virtualDestinationAdded context virtualDestination if virtualDestinations add virtualDestination
private void fireVirtualDestinationAddAdvisory ConnectionContext context ConsumerInfo info ActiveMQDestination activeMQDest VirtualDestination virtualDestination throws Exception if info null VirtualConsumerPair pair new VirtualConsumerPair virtualDestination activeMQDest if brokerConsumerDests get pair null ConnectionId connectionId new ConnectionId connectionIdGenerator generateId SessionId sessionId new SessionId connectionId sessionIdGenerator getNextSequenceId ConsumerId consumerId new ConsumerId sessionId consumerIdGenerator getNextSequenceId info new ConsumerInfo consumerId if brokerConsumerDests putIfAbsent pair info null
private void fireVirtualDestinationAddAdvisory ConnectionContext context ConsumerInfo info ActiveMQDestination activeMQDest VirtualDestination virtualDestination throws Exception if info null VirtualConsumerPair pair new VirtualConsumerPair virtualDestination activeMQDest if brokerConsumerDests get pair null ConnectionId connectionId new ConnectionId connectionIdGenerator generateId SessionId sessionId new SessionId connectionId sessionIdGenerator getNextSequenceId ConsumerId consumerId new ConsumerId sessionId consumerIdGenerator getNextSequenceId info new ConsumerInfo consumerId if brokerConsumerDests putIfAbsent pair info null LOG debug pair info setConsumerInfoVirtualDest info virtualDestination activeMQDest ActiveMQTopic topic AdvisorySupport getVirtualDestinationConsumerAdvisoryTopic info getDestination if virtualDestinationConsumers putIfAbsent info virtualDestination null
SessionId sessionId new SessionId connectionId sessionIdGenerator getNextSequenceId ConsumerId consumerId new ConsumerId sessionId consumerIdGenerator getNextSequenceId info new ConsumerInfo consumerId if brokerConsumerDests putIfAbsent pair info null LOG debug pair info setConsumerInfoVirtualDest info virtualDestination activeMQDest ActiveMQTopic topic AdvisorySupport getVirtualDestinationConsumerAdvisoryTopic info getDestination if virtualDestinationConsumers putIfAbsent info virtualDestination null LOG debug info virtualDestination fireConsumerAdvisory context info getDestination topic info else info info copy setConsumerInfoVirtualDest info virtualDestination activeMQDest ActiveMQTopic topic AdvisorySupport getVirtualDestinationConsumerAdvisoryTopic info getDestination if virtualDestinationConsumers putIfAbsent info virtualDestination null
Override public void virtualDestinationRemoved ConnectionContext context VirtualDestination virtualDestination super virtualDestinationRemoved context virtualDestination if virtualDestinations remove virtualDestination
Override public void virtualDestinationRemoved ConnectionContext context VirtualDestination virtualDestination super virtualDestinationRemoved context virtualDestination if virtualDestinations remove virtualDestination LOG debug virtualDestination try consumersLock readLock lock try if getBrokerService isUseVirtualDestSubsOnCreation if AdvisorySupport isAdvisoryTopic virtualDestination getVirtualDestination for ConsumerInfo info virtualDestinationConsumers keySet if virtualDestinationConsumers get info equals virtualDestination fireVirtualDestinationRemoveAdvisory context info for VirtualConsumerPair activeMQDest brokerConsumerDests keySet ConsumerInfo i brokerConsumerDests get activeMQDest if info equals i brokerConsumerDests remove activeMQDest null
private void fireVirtualDestinationRemoveAdvisory ConnectionContext context ConsumerInfo info throws Exception VirtualDestination virtualDestination virtualDestinationConsumers remove info if virtualDestination null
private void handleFireFailure String message Throwable cause LOG warn message cause
if persistenceAdapterToStart null checkStartException throw new ConfigurationException persistenceAdapterToStart setUsageManager getProducerSystemUsage persistenceAdapterToStart setBrokerName getBrokerName LOG info persistenceAdapterToStart if deleteAllMessagesOnStartup deleteAllMessages persistenceAdapterToStart start getTempDataStore if tempDataStore null try tempDataStore start catch Exception e RuntimeException exception new RuntimeException tempDataStore e
deleteAllMessages persistenceAdapterToStart start getTempDataStore if tempDataStore null try tempDataStore start catch Exception e RuntimeException exception new RuntimeException tempDataStore e LOG error exception getLocalizedMessage e throw exception getJobSchedulerStore if jobSchedulerStore null try jobSchedulerStore start catch Exception e
public boolean checkQueueSize String queueName long count long queueSize Map ActiveMQDestination Destination destinationMap regionBroker getDestinationMap for Map Entry ActiveMQDestination Destination entry destinationMap entrySet if entry getKey isQueue if entry getValue getName matches queueName queueSize entry getValue getDestinationStatistics getMessages getCount count queueSize if queueSize
protected void checkUsageLimit File dir PercentLimitUsage storeUsage int percentLimit throws ConfigurationException if dir null dir StoreUtil findParentDirectory dir String storeName storeUsage StoreUsage long storeLimit storeUsage getLimit long storeCurrent storeUsage getUsage long totalSpace storeUsage getTotal storeUsage getTotal dir getTotalSpace long totalUsableSpace storeUsage getTotal storeUsage getTotal dir getUsableSpace storeCurrent if totalUsableSpace totalSpace final String message dir
dir StoreUtil findParentDirectory dir String storeName storeUsage StoreUsage long storeLimit storeUsage getLimit long storeCurrent storeUsage getUsage long totalSpace storeUsage getTotal storeUsage getTotal dir getTotalSpace long totalUsableSpace storeUsage getTotal storeUsage getTotal dir getUsableSpace storeCurrent if totalUsableSpace totalSpace final String message dir LOG error message throw new ConfigurationException message long bytePercentLimit totalSpace percentLimit int oneMeg if diskUsageCheckRegrowThreshold percentLimit storeUsage getTotal storeLimit bytePercentLimit storeLimit totalUsableSpace long newLimit bytePercentLimit totalUsableSpace totalUsableSpace bytePercentLimit if newLimit storeLimit diskUsageCheckRegrowThreshold
if totalUsableSpace totalSpace final String message dir LOG error message throw new ConfigurationException message long bytePercentLimit totalSpace percentLimit int oneMeg if diskUsageCheckRegrowThreshold percentLimit storeUsage getTotal storeLimit bytePercentLimit storeLimit totalUsableSpace long newLimit bytePercentLimit totalUsableSpace totalUsableSpace bytePercentLimit if newLimit storeLimit diskUsageCheckRegrowThreshold LOG info storeName percentLimit storeUsage setLimit newLimit LOG info storeName newLimit totalSpace newLimit oneMeg else if storeLimit totalUsableSpace final String message storeName storeLimit oneMeg storeCurrent oneMeg dir getAbsolutePath totalUsableSpace oneMeg if isAdjustUsageLimits
protected void logError String message Throwable e if useLoggingForShutdownErrors
connector setDurableDestinations durableDestinations String defaultSocketURI getDefaultSocketURIString if defaultSocketURI null connector setBrokerURL defaultSocketURI if isUseJmx ObjectName networkMbean createNetworkConnectorObjectName connector try getManagementContext getObjectInstance networkMbean catch InstanceNotFoundException e LOG debug networkMbean registerNetworkConnectorMBean connector if networkConnectorStartExecutor null networkConnectorStartExecutor execute new Runnable Override public void run try
if defaultSocketURI null connector setBrokerURL defaultSocketURI if isUseJmx ObjectName networkMbean createNetworkConnectorObjectName connector try getManagementContext getObjectInstance networkMbean catch InstanceNotFoundException e LOG debug networkMbean registerNetworkConnectorMBean connector if networkConnectorStartExecutor null networkConnectorStartExecutor execute new Runnable Override public void run try LOG info connector connector start
protected synchronized ThreadPoolExecutor getExecutor if this executor null this executor new ThreadPoolExecutor TimeUnit SECONDS new LinkedBlockingQueue Runnable new ThreadFactory private long i Override public Thread newThread Runnable runnable this i Thread thread new Thread runnable this i thread setDaemon true thread setUncaughtExceptionHandler new Thread UncaughtExceptionHandler Override public void uncaughtException final Thread t final Throwable e
producerExchange setConnectionContext context producerExchange setProducerState new ProducerState new ProducerInfo final ConsumerBrokerExchange consumerExchange new ConsumerBrokerExchange consumerExchange setConnectionContext context transactionStore recover new TransactionRecoveryListener public void recover XATransactionId xid Message addedMessages MessageAck aks try beginTransaction context xid XATransaction transaction XATransaction getTransaction context xid false for int i i addedMessages length i forceDestinationWakeupOnCompletion context transaction addedMessages i getDestination addedMessages i for int i i aks length i forceDestinationWakeupOnCompletion context transaction aks i getDestination aks i transaction setState Transaction PREPARED_STATE registerMBean transaction
public TransactionId getPreparedTransactions ConnectionContext context throws Exception List TransactionId txs new ArrayList TransactionId synchronized xaTransactions for Iterator XATransaction iter xaTransactions values iterator iter hasNext Transaction tx iter next if tx isPrepared
public void serviceTransportException IOException e if stopping get status get PENDING_STOP transportException set e if TRANSPORTLOG isDebugEnabled
else if e getClass BrokerStoppedException class if stopping get SERVICELOG debug ConnectionError ce new ConnectionError ce setException e dispatchSync ce transportException set e try Thread sleep catch InterruptedException ie Thread currentThread interrupt stopAsync else if stopping get inServiceException inServiceException true try
private void forceRollbackOnlyOnFailedAsyncTransactionOp Throwable e Command command if brokerService isRollbackOnlyOnAsyncException e IOException isInTransaction command Transaction transaction getActiveTransaction command if transaction null transaction isRollbackOnly
Override public synchronized Response processRemoveConnection ConnectionId id long lastDeliveredSequenceId throws InterruptedException
try broker preProcessDispatch messageDispatch catch RuntimeException convertToIO throw new IOException convertToIO dispatch command catch IOException e if messageDispatch null TransmitCallback sub messageDispatch getTransmitCallback broker postProcessDispatch messageDispatch if sub null sub onFailure messageDispatch null throw e else if TRANSPORTLOG isDebugEnabled
else taskRunner null transport start active true BrokerInfo info connector getBrokerInfo copy if connector isUpdateClusterClients info setPeerBrokerInfos this broker getPeerBrokerInfos else info setPeerBrokerInfos null dispatchAsync info connector onStarted this catch Exception e status set PENDING_STOP throw e finally
public void delayedStop final int waitTime final String reason Throwable cause if waitTime status compareAndSet STARTING PENDING_STOP transportException set cause try stopTaskRunnerFactory execute new Runnable Override public void run try Thread sleep waitTime stopAsync
LOG debug return if stopping compareAndSet false true List TransportConnectionState connectionStates listConnectionStates for TransportConnectionState cs connectionStates ConnectionContext connectionContext cs getContext if connectionContext null connectionContext getStopping set true try stopTaskRunnerFactory execute new Runnable Override public void run serviceLock writeLock lock try doStop catch Throwable e
Override public Response processBrokerInfo BrokerInfo info if info isSlaveBroker
TransportConnection c iter next if c this duplexNetworkConnectorId equals c getDuplexNetworkConnectorId LOG warn c duplexNetworkConnectorId c stopAsync c getStopped await TimeUnit SECONDS setDuplexNetworkConnectorId duplexNetworkConnectorId Transport localTransport NetworkBridgeFactory createLocalTransport config broker getVmConnectorURI Transport remoteBridgeTransport transport if remoteBridgeTransport ResponseCorrelator remoteBridgeTransport new ResponseCorrelator remoteBridgeTransport String duplexName localTransport toString if duplexName contains duplexName duplexName substring duplexName lastIndexOf MBeanNetworkListener listener new MBeanNetworkListener brokerService config brokerService createDuplexNetworkConnectorObjectName duplexName listener setCreatedByDuplex true
setDuplexNetworkConnectorId duplexNetworkConnectorId Transport localTransport NetworkBridgeFactory createLocalTransport config broker getVmConnectorURI Transport remoteBridgeTransport transport if remoteBridgeTransport ResponseCorrelator remoteBridgeTransport new ResponseCorrelator remoteBridgeTransport String duplexName localTransport toString if duplexName contains duplexName duplexName substring duplexName lastIndexOf MBeanNetworkListener listener new MBeanNetworkListener brokerService config brokerService createDuplexNetworkConnectorObjectName duplexName listener setCreatedByDuplex true duplexBridge config getBridgeFactory createNetworkBridge config localTransport remoteBridgeTransport listener duplexBridge setBrokerService brokerService duplexBridge setDurableDestinations NetworkConnector getDurableTopicDestinations broker getDurableDestinations info setDuplexConnection false duplexBridge setCreatedByDuplex true
Connection connection createConnection transport connection start else throw new BrokerStoppedException brokerService catch Exception e ServiceSupport dispose transport onAcceptError e remoteHost catch Exception e ServiceSupport dispose transport onAcceptError e remoteHost Override public void onAcceptError Exception error onAcceptError error null private void onAcceptError Exception error String remoteHost if brokerService null brokerService isStopping
else throw new BrokerStoppedException brokerService catch Exception e ServiceSupport dispose transport onAcceptError e remoteHost catch Exception e ServiceSupport dispose transport onAcceptError e remoteHost Override public void onAcceptError Exception error onAcceptError error null private void onAcceptError Exception error String remoteHost if brokerService null brokerService isStopping LOG info remoteHost null remoteHost error getLocalizedMessage getRootCause error getMessage else
public String getPublishableConnectString throws Exception String publishableConnectString publishedAddressPolicy getPublishableConnectString this
Comparator Map Entry ObjectName DestinationView getComparator return new Comparator Map Entry ObjectName DestinationView Method getter findGetterMethod DestinationView class getSortColumn SuppressWarnings Override public int compare Map Entry ObjectName DestinationView left Map Entry ObjectName DestinationView right try if getter null Object leftValue getter invoke left getValue Object rightValue getter invoke right getValue if leftValue Comparable rightValue Comparable if getSortOrder equalsIgnoreCase return Comparable rightValue compareTo leftValue else return Comparable leftValue compareTo rightValue return catch Exception e
Override public void setRootLogLevel String level throws Exception ClassLoader cl getClassLoader if isLog4JAvailable cl return Class loggerClass getLoggerClass cl Class levelClass getLevelClass cl if levelClass null loggerClass null return String targetLevel level toUpperCase Locale US Method getRootLogger loggerClass getMethod new Class Method setLevel loggerClass getMethod levelClass Object rootLogger getRootLogger invoke null Object null Method toLevel levelClass getMethod String class Object newLevel toLevel invoke null targetLevel if newLevel null newLevel toString equals targetLevel
throw new IllegalArgumentException ClassLoader cl getClassLoader if isLog4JAvailable cl return Class loggerClass getLoggerClass cl Class levelClass getLevelClass cl if loggerClass null levelClass null return String targetLevel level toUpperCase Locale US Method getLogger loggerClass getMethod String class Method setLevel loggerClass getMethod levelClass Method toLevel levelClass getMethod String class Object logger getLogger invoke null loggerName if logger null Object newLevel toLevel invoke null targetLevel
info setSelector sub getSelector addInactiveSubscription key info sub else String userName brokerService isPopulateUserNameInMBeans context getUserName null if sub getConsumerInfo isDurable view new DurableSubscriptionView this brokerService context getClientId userName sub else if sub TopicSubscription view new TopicSubscriptionView context getClientId userName TopicSubscription sub else view new SubscriptionView context getClientId userName sub registerSubscription objectName sub getConsumerInfo key view subscriptionMap put sub objectName return objectName catch Exception e
if dest isQueue if dest isTemporary temporaryQueues put key view else queues put key view else if dest isTemporary temporaryTopics put key view else topics put key view try if AsyncAnnotatedMBean registerMBean asyncInvokeService mbeanTimeout managementContext view key null registeredMBeans add key catch Throwable e LOG warn key
view removeAndRemember temporaryQueues key view view removeAndRemember temporaryTopics key view if registeredMBeans remove key try managementContext unregisterMBean key catch Throwable e LOG warn key LOG debug e if view null key view getSlowConsumerStrategy if key null registeredMBeans remove key try managementContext unregisterMBean key catch Throwable e LOG warn key
temporaryQueueProducers put key view else queueProducers put key view else if dest isTemporary temporaryTopicProducers put key view else topicProducers put key view else dynamicDestinationProducers put key view try if AsyncAnnotatedMBean registerMBean asyncInvokeService mbeanTimeout managementContext view key null registeredMBeans add key catch Throwable e LOG warn key
else queueSubscribers put key view else if dest isTemporary temporaryTopicSubscribers put key view else if info isDurable durableTopicSubscribers put key view try ObjectName inactiveName subscriptionKeys get subscriptionKey if inactiveName null inactiveDurableTopicSubscribers remove inactiveName registeredMBeans remove inactiveName managementContext unregisterMBean inactiveName catch Throwable e
else if info isDurable durableTopicSubscribers put key view try ObjectName inactiveName subscriptionKeys get subscriptionKey if inactiveName null inactiveDurableTopicSubscribers remove inactiveName registeredMBeans remove inactiveName managementContext unregisterMBean inactiveName catch Throwable e LOG error subscriptionKey e else topicSubscribers put key view try if AsyncAnnotatedMBean registerMBean asyncInvokeService mbeanTimeout managementContext view key null
protected void buildExistingSubscriptions throws Exception Map SubscriptionKey SubscriptionInfo subscriptions new HashMap SubscriptionKey SubscriptionInfo Set ActiveMQDestination destinations destinationFactory getDestinations if destinations null for ActiveMQDestination dest destinations if dest isTopic SubscriptionInfo infos destinationFactory getAllDurableSubscriptions ActiveMQTopic dest if infos null for int i i infos length i SubscriptionInfo info infos i SubscriptionKey key new SubscriptionKey info if alreadyKnown key
catch Throwable ignore LOG debug namingServiceObjectName ignore Thread t new Thread Override public void run if brokerName null MDC put brokerName try if started get server null LOG debug try MDC remove connectorServer start serverStub server toStub finally if brokerName null
Override public void stop throws Exception if started compareAndSet true false MBeanServer mbeanServer getMBeanServer if mbeanServer null for Map Entry ObjectName ObjectName entry registeredMBeanNames entrySet ObjectName actualName entry getValue if actualName null beanServer isRegistered actualName
if actualName null beanServer isRegistered actualName LOG debug actualName mbeanServer unregisterMBean actualName registeredMBeanNames clear JMXConnectorServer server connectorServer connectorServer null if server null try if connectorStarted await TimeUnit SECONDS LOG debug server stop catch IOException e LOG warn e getMessage try if namingServiceObjectName null getMBeanServer isRegistered namingServiceObjectName
mbeanServer unregisterMBean actualName registeredMBeanNames clear JMXConnectorServer server connectorServer connectorServer null if server null try if connectorStarted await TimeUnit SECONDS LOG debug server stop catch IOException e LOG warn e getMessage try if namingServiceObjectName null getMBeanServer isRegistered namingServiceObjectName LOG debug namingServiceObjectName getMBeanServer invoke namingServiceObjectName null null
public void unregisterMBean ObjectName name throws JMException ObjectName actualName this registeredMBeanNames get name if beanServer null actualName null beanServer isRegistered actualName this registeredMBeanNames remove name null
protected synchronized MBeanServer findMBeanServer MBeanServer result null try if useMBeanServer if findTigerMbeanServer result findTigerMBeanServer if result null List MBeanServer list MBeanServerFactory findMBeanServer null if list null list size result list get if result null createMBeanServer result createMBeanServer catch NoClassDefFoundError e LOG error e catch Throwable e
public synchronized void purge throws Exception final long originalMessageCount destination getDestinationStatistics getMessages getCount Queue destination purge
Override public Destination addDestination ConnectionContext context ActiveMQDestination destination boolean createIfTemporary throws Exception destinationsLock writeLock lock try Destination dest destinations get destination if dest null if destination isTemporary false createIfTemporary validateMaxDestinations destination
LOG debug broker getBrokerName destination destinationsLock writeLock lock try Destination dest destinations remove destination if dest null updateRegionDestCounts destination for Iterator Subscription iter subscriptions values iterator iter hasNext Subscription sub iter next if sub matches destination dest removeSubscription context sub 0l destinationMap unsynchronizedRemove destination dest if dest Queue Queue dest purge dispose context dest DestinationInterceptor destinationInterceptor broker getDestinationInterceptor
return o DestinationFilter parseFilter info getDestination Subscription sub createSubscription context info List Destination addList new ArrayList Destination destinationsLock readLock lock try for Destination dest Set Destination destinationMap unsynchronizedGet info getDestination addList add dest subscriptions put info getConsumerId sub finally destinationsLock readLock unlock List Destination removeList new ArrayList Destination for Destination dest addList try dest addSubscription context sub
try for Destination dest Set Destination destinationMap unsynchronizedGet info getDestination addList add dest subscriptions put info getConsumerId sub finally destinationsLock readLock unlock List Destination removeList new ArrayList Destination for Destination dest addList try dest addSubscription context sub removeList add dest catch SecurityException e if sub isWildcard LOG debug sub dest getActiveMQDestination e getMessage else
public void activate SystemUsage memoryManager ConnectionContext context ConsumerInfo info RegionBroker regionBroker throws Exception if active get this context context this info info
public void deactivate boolean keepDurableSubsActive long lastDeliveredSequenceId throws Exception
inAckRange true if inAckRange if ack getLastMessageId equals messageId destination Destination node getRegionDestination callDispatchMatched true break if callDispatchMatched throw new JMSException ack else if ack isPoisonAck if ack isInTransaction throw new JMSException ack int index boolean inAckRange false List MessageReference removeList new ArrayList MessageReference for final MessageReference node dispatched
dispatchSelector setExclusiveConsumer exclusiveConsumer else if isAllConsumersExclusiveByDefault Subscription exclusiveConsumer null for Subscription s consumers if exclusiveConsumer null s getConsumerInfo getPriority exclusiveConsumer getConsumerInfo getPriority exclusiveConsumer s dispatchSelector setExclusiveConsumer exclusiveConsumer ConsumerId consumerId sub getConsumerInfo getConsumerId getMessageGroupOwners removeConsumer consumerId boolean markAsRedelivered false MessageReference lastDeliveredRef null List MessageReference unAckedMessages sub remove context this if lastDeliveredSequenceId RemoveInfo LAST_DELIVERED_UNSET for MessageReference ref unAckedMessages if ref getMessageId getBrokerSequenceId lastDeliveredSequenceId
final ProducerInfo producerInfo producerExchange getProducerState getInfo final boolean sendProducerAck message isResponseRequired producerInfo getWindowSize context isInRecoveryMode if message isExpired broker getRoot messageExpired context message null if sendProducerAck ProducerAck ack new ProducerAck producerInfo getProducerId message getSize context getConnection dispatchAsync ack return if memoryUsage isFull isFull context memoryUsage fastProducer context producerInfo if isProducerFlowControl context isProducerFlowControl if isFlowControlLogRequired LOG warn memoryUsage getLimit getActiveMQDestination getQualifiedName destinationStatistics getMessages getCount else
messagesWaitingForSpace put message getMessageId new Runnable Override public void run try if message isInTransaction if context getTransaction null context getTransaction getState IN_USE_STATE throw new JMSException if message isExpired LOG error broker messageExpired context message null destinationStatistics getExpired increment else doMessageSend producerExchangeCopy message if sendProducerAck ProducerAck ack new ProducerAck producerInfo getProducerId message getSize context getConnection dispatchAsync ack
if sendProducerAck ProducerAck ack new ProducerAck producerInfo getProducerId message getSize context getConnection dispatchAsync ack else Response response new Response response setCorrelationId message getCommandId context getConnection dispatchAsync response catch Exception e if sendProducerAck context isInRecoveryMode brokerService isStopping ExceptionResponse response new ExceptionResponse e response setCorrelationId message getCommandId context getConnection dispatchAsync response else LOG debug message e finally
final ConnectionContext connectionContext createConnectionContext try int maxPageInAttempts if max messagesLock readLock lock try maxPageInAttempts messages size max finally messagesLock readLock unlock while shouldPageInMoreForBrowse max maxPageInAttempts pageInMessages memoryUsage isFull max doBrowseList browseList max dispatchPendingList pagedInPendingDispatchLock connectionContext doBrowseList browseList max pagedInMessages pagedInMessagesLock connectionContext catch BrokerStoppedException ignored catch Exception e
it remove op run else registerCallbackForNotFullNotification break if firstConsumer firstConsumer false try if consumersBeforeDispatchStarts int timeout if timeBeforeDispatchStarts timeout timeBeforeDispatchStarts if consumersBeforeStartsLatch await timeout TimeUnit MILLISECONDS LOG debug consumers size else
else registerCallbackForNotFullNotification break if firstConsumer firstConsumer false try if consumersBeforeDispatchStarts int timeout if timeBeforeDispatchStarts timeout timeBeforeDispatchStarts if consumersBeforeStartsLatch await timeout TimeUnit MILLISECONDS LOG debug consumers size else LOG debug timeout consumers size if timeBeforeDispatchStarts consumersBeforeDispatchStarts
LOG debug timeout consumers size if timeBeforeDispatchStarts consumersBeforeDispatchStarts iteratingMutex wait timeBeforeDispatchStarts LOG debug timeBeforeDispatchStarts catch Exception e LOG error e toString messagesLock readLock lock try pageInMoreMessages messages isEmpty finally messagesLock readLock unlock pagedInPendingDispatchLock readLock lock try pageInMoreMessages dispatchPendingList isEmpty finally
Override public void messageExpired ConnectionContext context Subscription subs MessageReference reference
result add ref count finally messages release finally messagesLock writeLock unlock if count pagedInMessagesLock writeLock lock try if isPrioritizedMessages resultList new PrioritizedPendingList else resultList new OrderedPendingList for QueueMessageReference ref result if pagedInMessages contains ref
if context isAllowLinkStealing clientIdSet put clientId context else throw new InvalidClientIDException getBrokerName clientId oldContext getConnection getRemoteAddress else clientIdSet put clientId context if oldContext null if oldContext getConnection null Connection connection oldContext getConnection LOG warn clientId oldContext getConnection if connection TransportConnection TransportConnection transportConnection TransportConnection connection transportConnection stopAsync new IOException clientId oldContext getConnection getConnectionId else connection stop
Override public void messageExpired ConnectionContext context MessageReference node Subscription subscription
Override public boolean sendToDeadLetterQueue ConnectionContext context MessageReference node Subscription subscription Throwable poisonCause try if node null Message message node getMessage if message null node getRegionDestination null DeadLetterStrategy deadLetterStrategy Destination node getRegionDestination getDeadLetterStrategy if deadLetterStrategy null if deadLetterStrategy isSendToDeadLetterQueue message ActiveMQDestination deadLetterDestination deadLetterStrategy getDeadLetterQueueFor message subscription if deadLetterDestination equals message getDestination
dlqExpiration System currentTimeMillis else stampAsExpired message message setExpiration dlqExpiration if message isPersistent message setPersistent true message setProperty if poisonCause null message setProperty ActiveMQMessage DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY poisonCause toString ConnectionContext adminContext context if context getSecurityContext null context getSecurityContext isBrokerContext adminContext BrokerSupport getConnectionContext this addDestination adminContext deadLetterDestination false getActiveMQDestination setDLQ true BrokerSupport resendNoCopy adminContext message deadLetterDestination return true
long maxPurgedDests this brokerService getMaxPurgedDestinationsPerSweep long timeStamp System currentTimeMillis for Destination d map values d markForGC timeStamp if d canGC list add d if maxPurgedDests list size maxPurgedDests break if list isEmpty ConnectionContext context BrokerSupport getConnectionContext this context setBroker this for Destination dest list Logger log LOG if dest BaseDestination log BaseDestination dest getLog
d markForGC timeStamp if d canGC list add d if maxPurgedDests list size maxPurgedDests break if list isEmpty ConnectionContext context BrokerSupport getConnectionContext this context setBroker this for Destination dest list Logger log LOG if dest BaseDestination log BaseDestination dest getLog log info dest getName dest getInactiveTimeoutBeforeGC try getRoot removeDestination context dest getActiveMQDestination isAllowTempAutoCreationOnSend
Override public void addSubscription ConnectionContext context Subscription sub throws Exception if context isFaultTolerant context isNetworkConnection tempDest getConnectionId equals sub getConsumerInfo getConsumerId getConnectionId tempDest setConnectionId sub getConsumerInfo getConsumerId getConnectionId
public void addSubscription ConnectionContext context Subscription sub throws Exception if context isFaultTolerant context isNetworkConnection tempDest getConnectionId equals sub getConsumerInfo getConsumerId getConnectionId tempDest setConnectionId sub getConsumerInfo getConsumerId getConnectionId if LOG isDebugEnabled
catch Exception e if sendProducerAck context isInRecoveryMode ExceptionResponse response new ExceptionResponse e response setCorrelationId message getCommandId context getConnection dispatchAsync response registerCallbackForNotFullNotification context setDontSendReponse true return else if memoryUsage isFull if context isInTransaction int count while memoryUsage waitForSpace if context getStopping get
public void doCleanup long now System currentTimeMillis for Map Entry SubscriptionKey DurableTopicSubscription entry durableSubscriptions entrySet DurableTopicSubscription sub entry getValue if sub isActive long offline sub getOfflineTimestamp if offline now offline broker getBrokerService getOfflineDurableSubscriberTimeout
for Map Entry SubscriptionKey DurableTopicSubscription entry durableSubscriptions entrySet DurableTopicSubscription sub entry getValue if sub isActive long offline sub getOfflineTimestamp if offline now offline broker getBrokerService getOfflineDurableSubscriberTimeout LOG info sub try RemoveSubscriptionInfo info new RemoveSubscriptionInfo info setClientId entry getKey getClientId info setSubscriptionName entry getKey getSubscriptionName ConnectionContext context new ConnectionContext context setBroker broker context setClientId entry getKey getClientId removeSubscription context info catch Exception e
Override protected List Subscription addSubscriptionsForDestination ConnectionContext context Destination dest throws Exception List Subscription rc super addSubscriptionsForDestination context dest Set Subscription dupChecker new HashSet Subscription rc TopicMessageStore store TopicMessageStore dest getMessageStore if store null SubscriptionInfo infos store getAllSubscriptions for int i i infos length i SubscriptionInfo info infos i
private boolean isDuplicate MessageReference node boolean duplicate false if enableAudit audit null duplicate audit isDuplicate node if LOG isDebugEnabled if duplicate
private void syncWithStore Message currentAdd throws Exception pruneLastCached for ListIterator MessageId it pendingCachedIds listIterator pendingCachedIds size it hasPrevious MessageId lastPending it previous Object futureOrLong lastPending getFutureOrSequenceLong if futureOrLong Future Future future Future futureOrLong if future isCancelled continue try future get TimeUnit SECONDS setLastCachedId ASYNC_ADD lastPending catch CancellationException ok continue catch TimeoutException potentialDeadlock
for ListIterator MessageId it pendingCachedIds listIterator pendingCachedIds size it hasPrevious MessageId lastPending it previous Object futureOrLong lastPending getFutureOrSequenceLong if futureOrLong Future Future future Future futureOrLong if future isCancelled continue try future get TimeUnit SECONDS setLastCachedId ASYNC_ADD lastPending catch CancellationException ok continue catch TimeoutException potentialDeadlock LOG debug this potentialDeadlock catch Exception worstCaseWeReplay
private void pruneLastCached for Iterator MessageId it pendingCachedIds iterator it hasNext MessageId candidate it next final Object futureOrLong candidate getFutureOrSequenceLong if futureOrLong Future Future future Future futureOrLong if future isDone if future isCancelled it remove else try future get TimeUnit SECONDS catch ExecutionException expected it remove catch Exception unexpected
if hasSpace if isDiskListEmpty expireOldMessages if hasSpace memoryList addMessageLast node node incrementReferenceCount return true else flushToDisk if systemUsage getTempUsage waitForSpace maxWaitTime ByteSequence bs getByteSequence node getMessage getDiskList addLast node getMessageId toString bs return true return false catch Exception e
if hasSpace if isDiskListEmpty expireOldMessages if hasSpace memoryList addMessageFirst node node incrementReferenceCount return else flushToDisk systemUsage getTempUsage waitForSpace node decrementReferenceCount ByteSequence bs getByteSequence node getMessage Object locator getDiskList addFirst node getMessageId toString bs node getMessageId setPlistLocator locator catch Exception e
private void discardExpiredMessage MessageReference reference
Map Connection List Subscription abortMap new HashMap Connection List Subscription for final Entry Subscription SlowConsumerEntry entry toAbort entrySet ConnectionContext connectionContext entry getValue context if connectionContext null continue Connection connection connectionContext getConnection if connection null LOG debug connectionContext if abortMap containsKey connection abortMap put connection new ArrayList Subscription abortMap get connection add entry getKey for Entry Connection List Subscription entry abortMap entrySet final Connection connection entry getKey final List Subscription subscriptions entry getValue if abortSubscriberConnection
if abortMap containsKey connection abortMap put connection new ArrayList Subscription abortMap get connection add entry getKey for Entry Connection List Subscription entry abortMap entrySet final Connection connection entry getKey final List Subscription subscriptions entry getValue if abortSubscriberConnection LOG info connection getConnectionId subscriptions size if LOG isTraceEnabled for Subscription subscription subscriptions LOG trace new Object connection getConnectionId subscription getConsumerInfo getConsumerId subscription getActiveMQDestination try scheduler executeAfterDelay new Runnable Override public void run connection serviceException new InactivityIOException subscriptions size maxSlowCount maxSlowDuration
for Subscription subscription subscriptions LOG trace new Object connection getConnectionId subscription getConsumerInfo getConsumerId subscription getActiveMQDestination try scheduler executeAfterDelay new Runnable Override public void run connection serviceException new InactivityIOException subscriptions size maxSlowCount maxSlowDuration 0l catch Exception e LOG info connection getConnectionId subscriptions size else for Subscription subscription subscriptions final Subscription subToClose subscription LOG info subscription getConsumerInfo getConsumerId subscription getActiveMQDestination try ConsumerControl stopConsumer new ConsumerControl
catch Exception e LOG info connection getConnectionId subscriptions size else for Subscription subscription subscriptions final Subscription subToClose subscription LOG info subscription getConsumerInfo getConsumerId subscription getActiveMQDestination try ConsumerControl stopConsumer new ConsumerControl stopConsumer setConsumerId subscription getConsumerInfo getConsumerId stopConsumer setClose true connection dispatchAsync stopConsumer catch Exception e LOG info subscription getConsumerInfo getConsumerId e try scheduler executeAfterDelay new Runnable
else for Subscription subscription subscriptions final Subscription subToClose subscription LOG info subscription getConsumerInfo getConsumerId subscription getActiveMQDestination try ConsumerControl stopConsumer new ConsumerControl stopConsumer setConsumerId subscription getConsumerInfo getConsumerId stopConsumer setClose true connection dispatchAsync stopConsumer catch Exception e LOG info subscription getConsumerInfo getConsumerId e try scheduler executeAfterDelay new Runnable Override public void run try
Override public boolean isSendToDeadLetterQueue Message message boolean result false if message null result true if enableAudit messageAudit isDuplicate message result false
Override public boolean isSendToDeadLetterQueue Message message boolean result false
if destination getActiveMQDestination isTemporary brokerService isUseTempMirroredQueues try final Destination mirrorDestination getMirrorDestination destination if mirrorDestination null return new DestinationFilter destination public void send ProducerBrokerExchange context Message message throws Exception message setDestination mirrorDestination getActiveMQDestination mirrorDestination send context message if isCopyMessage message message copy message setDestination destination getActiveMQDestination message setMemoryUsage null super send context message catch Exception e
msg setDestination replyTo msg setResponseRequired false msg setProducerId this producerId msg setProperty job getJobId final boolean originalFlowControl context isProducerFlowControl final ProducerBrokerExchange producerExchange new ProducerBrokerExchange producerExchange setConnectionContext context producerExchange setMutable true producerExchange setProducerState new ProducerState new ProducerInfo try context setProducerFlowControl false this next send producerExchange msg finally context setProducerFlowControl originalFlowControl catch Exception e
private void dispatch InMemoryJob job throws IllegalStateException IOException if canDispatch
Override public JobScheduler getJobScheduler String name throws Exception this lock lock try InMemoryJobScheduler result this schedulers get name if result null
Override public boolean removeJobScheduler String name throws Exception boolean result false this lock lock try InMemoryJobScheduler scheduler this schedulers remove name result scheduler null if result
public void log AuditLogEntry entry
Override public Response messagePull ConnectionContext context MessagePull pull throws Exception if isLogAll isLogConsumerEvents
Override public void addConnection ConnectionContext context ConnectionInfo info throws Exception if isLogAll isLogConnectionEvents
Override public Subscription addConsumer ConnectionContext context ConsumerInfo info throws Exception if isLogAll isLogConsumerEvents
Override public void addProducer ConnectionContext context ProducerInfo info throws Exception if isLogAll isLogProducerEvents
Override public void commitTransaction ConnectionContext context TransactionId xid boolean onePhase throws Exception if isLogAll isLogTransactionEvents
Override public void removeSubscription ConnectionContext context RemoveSubscriptionInfo info throws Exception if isLogAll isLogConsumerEvents
Override public int prepareTransaction ConnectionContext context TransactionId xid throws Exception if isLogAll isLogTransactionEvents
Override public void removeConnection ConnectionContext context ConnectionInfo info Throwable error throws Exception if isLogAll isLogConnectionEvents
Override public void removeConsumer ConnectionContext context ConsumerInfo info throws Exception if isLogAll isLogConsumerEvents
Override public void removeProducer ConnectionContext context ProducerInfo info throws Exception if isLogAll isLogProducerEvents
Override public void rollbackTransaction ConnectionContext context TransactionId xid throws Exception if isLogAll isLogTransactionEvents
Override public void beginTransaction ConnectionContext context TransactionId xid throws Exception if isLogAll isLogTransactionEvents
Override public void forgetTransaction ConnectionContext context TransactionId transactionId throws Exception if isLogAll isLogTransactionEvents
Override public org apache activemq broker region Destination addDestination ConnectionContext context ActiveMQDestination destination boolean create throws Exception if isLogAll isLogInternalEvents
Override public void removeDestination ConnectionContext context ActiveMQDestination destination long timeout throws Exception if isLogAll isLogInternalEvents
Override public void addSession ConnectionContext context SessionInfo info throws Exception if isLogAll isLogSessionEvents
Override public void removeSession ConnectionContext context SessionInfo info throws Exception if isLogAll isLogSessionEvents
Override public void addBroker Connection connection BrokerInfo info if isLogAll isLogInternalEvents
Override public void removeBroker Connection connection BrokerInfo info if isLogAll isLogInternalEvents
Override public void preProcessDispatch MessageDispatch messageDispatch if isLogAll isLogInternalEvents isLogConsumerEvents
Override public void postProcessDispatch MessageDispatch messageDispatch if isLogAll isLogInternalEvents isLogConsumerEvents
Override public void processDispatchNotification MessageDispatchNotification messageDispatchNotification throws Exception if isLogAll isLogInternalEvents isLogConsumerEvents
Override public void addDestinationInfo ConnectionContext context DestinationInfo info throws Exception if isLogAll isLogInternalEvents
Override public void removeDestinationInfo ConnectionContext context DestinationInfo info throws Exception if isLogAll isLogInternalEvents
Override public void messageExpired ConnectionContext context MessageReference message Subscription subscription if isLogAll isLogInternalEvents String msg msg message getMessage toString
Override public boolean sendToDeadLetterQueue ConnectionContext context MessageReference messageReference Subscription subscription Throwable poisonCause if isLogAll isLogInternalEvents String msg msg messageReference getMessage toString
Override public void fastProducer ConnectionContext context ProducerInfo producerInfo ActiveMQDestination destination if isLogAll isLogProducerEvents isLogInternalEvents
Override public void isFull ConnectionContext context Destination destination Usage usage if isLogAll isLogProducerEvents isLogInternalEvents
Override public void messageConsumed ConnectionContext context MessageReference messageReference if isLogAll isLogConsumerEvents isLogInternalEvents String msg msg messageReference getMessage toString
Override public void messageDelivered ConnectionContext context MessageReference messageReference if isLogAll isLogConsumerEvents isLogInternalEvents String msg msg messageReference getMessage toString
Override public void messageDiscarded ConnectionContext context Subscription sub MessageReference messageReference if isLogAll isLogInternalEvents String msg msg messageReference getMessage toString
Override public void slowConsumer ConnectionContext context Destination destination Subscription subs if isLogAll isLogConsumerEvents isLogInternalEvents
Override public void slowConsumer ConnectionContext context Destination destination Subscription subs if isLogAll isLogConsumerEvents isLogInternalEvents LOG info destination getName StringBuffer buf new StringBuffer buf append subs getConsumerInfo getConsumerId getConnectionId buf append buf append subs getConsumerInfo getConsumerId getSessionId buf append
else try Destination regionDestination Destination messageReference getRegionDestination final RedeliveryPolicy redeliveryPolicy redeliveryPolicyMap getEntryFor regionDestination getActiveMQDestination if redeliveryPolicy null final int maximumRedeliveries redeliveryPolicy getMaximumRedeliveries int redeliveryCount messageReference getRedeliveryCounter if RedeliveryPolicy NO_MAXIMUM_REDELIVERIES maximumRedeliveries redeliveryCount maximumRedeliveries long delay redeliveryPolicy getInitialRedeliveryDelay for int i i redeliveryCount i delay redeliveryPolicy getNextRedeliveryDelay delay scheduleRedelivery context messageReference delay redeliveryCount else if isSendToDlqIfMaxRetriesExceeded return super sendToDeadLetterQueue context messageReference subscription poisonCause else
final RedeliveryPolicy redeliveryPolicy redeliveryPolicyMap getEntryFor regionDestination getActiveMQDestination if redeliveryPolicy null final int maximumRedeliveries redeliveryPolicy getMaximumRedeliveries int redeliveryCount messageReference getRedeliveryCounter if RedeliveryPolicy NO_MAXIMUM_REDELIVERIES maximumRedeliveries redeliveryCount maximumRedeliveries long delay redeliveryPolicy getInitialRedeliveryDelay for int i i redeliveryCount i delay redeliveryPolicy getNextRedeliveryDelay delay scheduleRedelivery context messageReference delay redeliveryCount else if isSendToDlqIfMaxRetriesExceeded return super sendToDeadLetterQueue context messageReference subscription poisonCause else LOG debug maximumRedeliveries messageReference getMessageId else if isFallbackToDeadLetter return super sendToDeadLetterQueue context messageReference subscription poisonCause
if RedeliveryPolicy NO_MAXIMUM_REDELIVERIES maximumRedeliveries redeliveryCount maximumRedeliveries long delay redeliveryPolicy getInitialRedeliveryDelay for int i i redeliveryCount i delay redeliveryPolicy getNextRedeliveryDelay delay scheduleRedelivery context messageReference delay redeliveryCount else if isSendToDlqIfMaxRetriesExceeded return super sendToDeadLetterQueue context messageReference subscription poisonCause else LOG debug maximumRedeliveries messageReference getMessageId else if isFallbackToDeadLetter return super sendToDeadLetterQueue context messageReference subscription poisonCause else LOG debug messageReference getMessageId regionDestination getActiveMQDestination return false catch Exception exception
if isDuplex duplexInboundLocalBroker NetworkBridgeFactory createLocalAsyncTransport brokerService getBroker getVmConnectorURI duplexInboundLocalBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error serviceLocalException error duplexInboundLocalBroker start localBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error
duplexInboundLocalBroker NetworkBridgeFactory createLocalAsyncTransport brokerService getBroker getVmConnectorURI duplexInboundLocalBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error serviceLocalException error duplexInboundLocalBroker start localBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error if futureLocalBrokerInfo isDone
duplexInboundLocalBroker start localBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error if futureLocalBrokerInfo isDone LOG info localBroker error getMessage LOG debug error futureLocalBrokerInfo cancel true return serviceLocalException error remoteBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o
localBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o serviceLocalCommand command Override public void onException IOException error if futureLocalBrokerInfo isDone LOG info localBroker error getMessage LOG debug error futureLocalBrokerInfo cancel true return serviceLocalException error remoteBroker setTransportListener new DefaultTransportListener Override public void onCommand Object o Command command Command o
if l null l onStop this try if startedLatch getCount LOG trace new Object configuration getBrokerName this remoteBrokerName brokerService getBroker removeBroker null remoteBrokerInfo brokerService getBroker networkBridgeStopped remoteBrokerInfo remoteBridgeStarted set false final CountDownLatch sendShutdown new CountDownLatch brokerService getTaskRunnerFactory execute new Runnable Override public void run try serialExecutor shutdown if serialExecutor awaitTermination TimeUnit SECONDS List Runnable pendingTasks serialExecutor shutdownNow
LOG trace new Object configuration getBrokerName this remoteBrokerName brokerService getBroker removeBroker null remoteBrokerInfo brokerService getBroker networkBridgeStopped remoteBrokerInfo remoteBridgeStarted set false final CountDownLatch sendShutdown new CountDownLatch brokerService getTaskRunnerFactory execute new Runnable Override public void run try serialExecutor shutdown if serialExecutor awaitTermination TimeUnit SECONDS List Runnable pendingTasks serialExecutor shutdownNow LOG info pendingTasks staticDestinationsLatch countDown syncExecutor shutdown if syncExecutor awaitTermination TimeUnit SECONDS
private void doStartLocalAndRemoteBridges if disposed get return if isCreatedByDuplex Properties props null try props MarshallingSupport stringToProperties remoteBrokerInfo getNetworkProperties IntrospectionSupport getProperties configuration props null if configuration getExcludedDestinations null excludedDestinations configuration getExcludedDestinations toArray new ActiveMQDestination configuration getExcludedDestinations size if configuration getStaticallyIncludedDestinations null staticallyIncludedDestinations configuration getStaticallyIncludedDestinations toArray new ActiveMQDestination configuration getStaticallyIncludedDestinations size if configuration getDynamicallyIncludedDestinations null dynamicallyIncludedDestinations configuration getDynamicallyIncludedDestinations toArray new ActiveMQDestination configuration getDynamicallyIncludedDestinations size catch Throwable t
Override public void serviceRemoteException Throwable error if disposed get if error SecurityException error GeneralSecurityException
protected void addProxyNetworkSubscriptionClientId final DemandSubscription sub final String clientId String subName if clientId null sub null subName null String newClientId getProxyBridgeClientId clientId final SubscriptionInfo newSubInfo new SubscriptionInfo newClientId subName sub getDurableRemoteSubs add newSubInfo
if command isMessageDispatch safeWaitUntilStarted MessageDispatch md MessageDispatch command serviceRemoteConsumerAdvisory md getMessage getDataStructure ackAdvisory md getMessage else if command isBrokerInfo futureRemoteBrokerInfo set BrokerInfo command else if command BrokerSubscriptionInfo final BrokerSubscriptionInfo brokerSubscriptionInfo BrokerSubscriptionInfo command syncExecutor execute new Runnable Override public void run try staticDestinationsLatch await if disposed get BrokerSubscriptionInfo subInfo brokerSubscriptionInfo
else if command getClass ConnectionError class ConnectionError ce ConnectionError command serviceRemoteException ce getException else if isDuplex LOG trace configuration getBrokerName command getDataStructureType if command isMessage final ActiveMQMessage message ActiveMQMessage command if NetworkBridgeFilter isAdvisoryInterpretedByNetworkBridge message serviceRemoteConsumerAdvisory message getDataStructure ackAdvisory message else if isPermissableDestination message getDestination true return
reply setCorrelationId message getCommandId remoteBroker oneway reply else switch command getDataStructureType case ConnectionInfo DATA_STRUCTURE_TYPE if duplexInitiatingConnection null duplexInitiatingConnectionInfoReceived compareAndSet false true duplexInitiatingConnection processAddConnection ConnectionInfo command else localBroker oneway command break case SessionInfo DATA_STRUCTURE_TYPE localBroker oneway command break case ProducerInfo DATA_STRUCTURE_TYPE break case MessageAck DATA_STRUCTURE_TYPE MessageAck ack MessageAck command DemandSubscription localSub subscriptionMapByRemoteId get ack getConsumerId if localSub null
private void serviceRemoteConsumerAdvisory DataStructure data throws IOException final int networkTTL configuration getConsumerTTL if data getClass ConsumerInfo class ConsumerInfo info ConsumerInfo data BrokerId path info getBrokerPath if info isBrowser
LOG debug new Object configuration getBrokerName remoteBrokerName info return if isPermissableDestination info getDestination LOG debug new Object configuration getBrokerName remoteBrokerName info getDestination info return if isDuplicateSuppressionOff info addConsumerInfo info else synchronized brokerService getVmConnectorURI addConsumerInfo info else if data getClass DestinationInfo class final DestinationInfo destInfo DestinationInfo data BrokerId path destInfo getBrokerPath if path null networkTTL path length networkTTL LOG debug new Object configuration getBrokerName destInfo networkTTL
if disposed get if error DestinationDoesNotExistException DestinationDoesNotExistException error isTemporary if messageDispatch null LOG warn messageDispatch getMessage getMessageId error try MessageAck poisonAck new MessageAck messageDispatch MessageAck POSION_ACK_TYPE poisonAck setPoisonCause error localBroker oneway poisonAck catch IOException ioe LOG error ioe fireFailedForwardAdvisory messageDispatch error else LOG warn error return LOG info new Object localBroker remoteBroker error
Response response future getResult if response isException ExceptionResponse er ExceptionResponse response serviceLocalException md er getException else localBroker oneway new MessageAck md MessageAck INDIVIDUAL_ACK_TYPE networkBridgeStatistics getDequeues increment catch IOException e serviceLocalException md e finally sub decrementOutstandingResponses else try remoteBroker oneway message
ActiveMQDestination dests staticallyIncludedDestinations if dests null for ActiveMQDestination dest dests if isPermissableDestination dest DemandSubscription sub createDemandSubscription dest null if sub null sub setStaticallyIncluded true try addSubscription sub catch IOException e LOG error dest e LOG trace configuration getBrokerName dest else LOG info configuration getBrokerName dest else
addRemoteBrokerToBrokerPath info DemandSubscription sub createDemandSubscription info if sub null if duplicateSuppressionIsRequired sub undoMapRegistration sub else if consumerInfo isDurable if isProxyNSConsumerBrokerPath sub getRemoteInfo info getSubscriptionName null info getSubscriptionName startsWith DURABLE_SUB_PREFIX final BrokerId path info getBrokerPath addProxyNetworkSubscriptionBrokerPath sub path consumerInfo getSubscriptionName else if isProxyNSConsumerClientId sub getRemoteInfo getClientId isProxyBridgeSubscription info getClientId info getSubscriptionName addProxyNetworkSubscriptionClientId sub sub getRemoteInfo getClientId consumerInfo getSubscriptionName else sub getDurableRemoteSubs add new SubscriptionInfo sub getRemoteInfo getClientId consumerInfo getSubscriptionName addSubscription sub
Override public void onServiceAdd DiscoveryEvent event if serviceSupport isStopped serviceSupport isStopping return String url event getServiceName if url null URI uri try uri new URI url catch URISyntaxException e LOG warn url e return if localURI equals uri LOG debug uri return if connectionFilter null connectionFilter connectTo uri
String url event getServiceName if url null URI uri try uri new URI url catch URISyntaxException e LOG warn url e return if localURI equals uri LOG debug uri return if connectionFilter null connectionFilter connectTo uri LOG debug uri return if activeEvents putIfAbsent uri event null
LOG warn url e return if localURI equals uri LOG debug uri return if connectionFilter null connectionFilter connectTo uri LOG debug uri return if activeEvents putIfAbsent uri event null LOG debug uri return URI connectUri uri try connectUri URISupport applyParameters connectUri parameters DISCOVERED_OPTION_PREFIX catch URISyntaxException e
if activeEvents putIfAbsent uri event null LOG debug uri return URI connectUri uri try connectUri URISupport applyParameters connectUri parameters DISCOVERED_OPTION_PREFIX catch URISyntaxException e LOG warn new Object parameters connectUri e LOG info localURI connectUri Transport remoteTransport Transport localTransport try if getSslContext null SslContext setCurrentSslContext getSslContext else
LOG info localURI connectUri Transport remoteTransport Transport localTransport try if getSslContext null SslContext setCurrentSslContext getSslContext else SslContext setCurrentSslContext getBrokerService getSslContext try remoteTransport TransportFactory connect connectUri catch Exception e LOG warn connectUri e getMessage LOG debug e try discoveryAgent serviceFailed event
if getSslContext null SslContext setCurrentSslContext getSslContext else SslContext setCurrentSslContext getBrokerService getSslContext try remoteTransport TransportFactory connect connectUri catch Exception e LOG warn connectUri e getMessage LOG debug e try discoveryAgent serviceFailed event catch IOException e1 LOG debug e1 getMessage e1 return try
discoveryAgent serviceFailed event catch IOException e1 LOG debug e1 getMessage e1 return try localTransport createLocalTransport catch Exception e ServiceSupport dispose remoteTransport LOG warn localURI e getMessage LOG debug e try discoveryAgent serviceFailed event catch IOException e1 LOG debug e1 getMessage e1 return
return try localTransport createLocalTransport catch Exception e ServiceSupport dispose remoteTransport LOG warn localURI e getMessage LOG debug e try discoveryAgent serviceFailed event catch IOException e1 LOG debug e1 getMessage e1 return finally SslContext setCurrentSslContext null NetworkBridge bridge createBridge localTransport remoteTransport event
if dest isTopic RegionBroker regionBroker RegionBroker brokerService getRegionBroker TopicRegion topicRegion TopicRegion regionBroker getTopicRegion String candidateSubName getSubscriberName dest for Subscription subscription topicRegion getDurableSubscriptions values String subName subscription getConsumerInfo getSubscriptionName String clientId subscription getContext getClientId if subName null subName equals candidateSubName clientId startsWith configuration getName DemandSubscription sub createDemandSubscription dest subName if sub null sub getLocalInfo setSubscriptionName getSubscriberName dest sub setStaticallyIncluded true addSubscription sub break catch IOException e
catch IOException e LOG error dest e LOG trace dest else if configuration isSyncDurableSubs isPermissableDestination dest if dest isTopic RegionBroker regionBroker RegionBroker brokerService getRegionBroker TopicRegion topicRegion TopicRegion regionBroker getTopicRegion String candidateSubName getSubscriberName dest for Subscription subscription topicRegion getDurableSubscriptions values String subName subscription getConsumerInfo getSubscriptionName if subName null subName equals candidateSubName subscription DurableTopicSubscription try DurableTopicSubscription durableSub DurableTopicSubscription subscription if durableSub getSubscriptionKey getClientId equals localClientId RemoveSubscriptionInfo sending new RemoveSubscriptionInfo
public void serviceRemoteException Throwable error
public void serviceRemoteException Throwable error LOG info error getMessage
public void serviceLocalException Throwable error
public void serviceLocalException Throwable error LOG info error getMessage
else dequeueCounter incrementAndGet localBroker oneway new MessageAck md MessageAck STANDARD_ACK_TYPE catch IOException e serviceLocalException e remoteBroker asyncRequest message callback else if command isBrokerInfo synchronized this localBrokerInfo BrokerInfo command localBrokerId localBrokerInfo getBrokerId if remoteBrokerId null if remoteBrokerId equals localBrokerId LOG info ServiceSupport dispose this
if user null equals user env put Context SECURITY_PRINCIPAL user else throw new Exception if password null equals password env put Context SECURITY_CREDENTIALS password else throw new Exception boolean isConnected false while isConnected try context new InitialDirContext env isConnected true catch CommunicationException err if failover
NetworkConnector connector getBrokerService addNetworkConnector connectorURI connector setDynamicOnly isDynamicOnly connector setDecreaseNetworkConsumerPriority isDecreaseNetworkConsumerPriority connector setNetworkTTL getNetworkTTL connector setConsumerTTL getConsumerTTL connector setMessageTTL getMessageTTL connector setConduitSubscriptions isConduitSubscriptions connector setExcludedDestinations getExcludedDestinations connector setDynamicallyIncludedDestinations getDynamicallyIncludedDestinations connector setDuplex isDuplex connector setLocalUri getBrokerService getVmConnectorURI connector setBrokerName getBrokerService getBrokerName connector setDurableDestinations getBrokerService getBroker getDurableDestinations connectorMap put connectorURI connector referenceMap put connectorURI
if uuidMap containsKey uuid LOG warn uuid return URI connectorURI uuidMap get uuid if connectorMap containsKey connectorURI LOG warn connectorURI return int referenceCount referenceMap get connectorURI referenceMap put connectorURI referenceCount uuidMap remove uuid LOG debug new Object connectorURI uuid referenceCount if referenceCount return NetworkConnector connector connectorMap remove connectorURI connector stop
protected URI toURI SearchResult result throws Exception Attributes attributes result getAttributes String address String attributes get get String port String attributes get get String protocol String attributes get get URI connectorURI new URI protocol address port
protected String toUUID SearchResult result String uuid result getNameInNamespace
Override public void namingExceptionThrown NamingExceptionEvent event
private static LRUCache Destination DestinationBridge createLRUCache return new LRUCache Destination DestinationBridge private static final long serialVersionUID 7446792754185879286L Override protected boolean removeEldestEntry Map Entry Destination DestinationBridge enty if size maxCacheSize Iterator Map Entry Destination DestinationBridge iter entrySet iterator Map Entry Destination DestinationBridge lru iter next remove lru getKey DestinationBridge bridge lru getValue try bridge stop
void handleConnectionFailure Connection connection if connection null this started get return LOG info connection toString replyToBridges clear if this foreignConnection compareAndSet connection null for DestinationBridge bridge inboundBridges try bridge stop catch Exception e this connectionService execute new Runnable Override public void run try doInitializeConnection false catch Exception e
this connectionService execute new Runnable Override public void run try doInitializeConnection false catch Exception e LOG error e else if this localConnection compareAndSet connection null for DestinationBridge bridge outboundBridges try bridge stop catch Exception e this connectionService execute new Runnable Override public void run try
catch InterruptedException e if connectionService isTerminating return try if local initializeLocalConnection localSideInitialized set true else initializeForeignConnection foreignSideInitialized set true if localConnection get null foreignConnection get null for DestinationBridge bridge inboundBridges bridge start for DestinationBridge bridge outboundBridges bridge start
return null try QueueSession replyToConsumerSession QueueConnection replyToConsumerConnection createQueueSession false Session AUTO_ACKNOWLEDGE Queue replyToConsumerQueue replyToConsumerSession createTemporaryQueue replyToConsumerSession close bridge setConsumerQueue replyToConsumerQueue bridge setProducerQueue replyToProducerQueue bridge setProducerConnection QueueConnection replyToProducerConnection bridge setConsumerConnection QueueConnection replyToConsumerConnection bridge setDoHandleReplyTo false if bridge getJmsMessageConvertor null bridge setJmsMessageConvertor getInboundMessageConvertor bridge setJmsConnector this bridge start
try QueueSession replyToConsumerSession QueueConnection replyToConsumerConnection createQueueSession false Session AUTO_ACKNOWLEDGE Queue replyToConsumerQueue replyToConsumerSession createTemporaryQueue replyToConsumerSession close bridge setConsumerQueue replyToConsumerQueue bridge setProducerQueue replyToProducerQueue bridge setProducerConnection QueueConnection replyToProducerConnection bridge setConsumerConnection QueueConnection replyToConsumerConnection bridge setDoHandleReplyTo false if bridge getJmsMessageConvertor null bridge setJmsMessageConvertor getInboundMessageConvertor bridge setJmsConnector this bridge start LOG info replyToProducerQueue
return bridge getConsumerQueue else OutboundQueueBridge bridge OutboundQueueBridge replyToBridges get replyToProducerQueue if bridge null bridge new OutboundQueueBridge Override protected Destination processReplyToDestination Destination destination return null try QueueSession replyToConsumerSession QueueConnection replyToConsumerConnection createQueueSession false Session AUTO_ACKNOWLEDGE Queue replyToConsumerQueue replyToConsumerSession createTemporaryQueue replyToConsumerSession close bridge setConsumerQueue replyToConsumerQueue bridge setProducerQueue replyToProducerQueue bridge setProducerConnection QueueConnection replyToProducerConnection
else OutboundQueueBridge bridge OutboundQueueBridge replyToBridges get replyToProducerQueue if bridge null bridge new OutboundQueueBridge Override protected Destination processReplyToDestination Destination destination return null try QueueSession replyToConsumerSession QueueConnection replyToConsumerConnection createQueueSession false Session AUTO_ACKNOWLEDGE Queue replyToConsumerQueue replyToConsumerSession createTemporaryQueue replyToConsumerSession close bridge setConsumerQueue replyToConsumerQueue bridge setProducerQueue replyToProducerQueue bridge setProducerConnection QueueConnection replyToProducerConnection bridge setConsumerConnection QueueConnection replyToConsumerConnection
try result session createQueue queueName catch JMSException e1 String errStr queueName LOG error errStr e JMSException jmsEx new JMSException errStr jmsEx setLinkedException e1 throw jmsEx else try result session createQueue queueName catch JMSException e try result jndiOutboundTemplate lookup queueName Queue class catch NamingException e1
return null try TopicSession replyToConsumerSession TopicConnection replyToConsumerConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic replyToConsumerTopic replyToConsumerSession createTemporaryTopic replyToConsumerSession close bridge setConsumerTopic replyToConsumerTopic bridge setProducerTopic replyToProducerTopic bridge setProducerConnection TopicConnection replyToProducerConnection bridge setConsumerConnection TopicConnection replyToConsumerConnection bridge setDoHandleReplyTo false if bridge getJmsMessageConvertor null bridge setJmsMessageConvertor getInboundMessageConvertor bridge setJmsConnector this bridge start
try TopicSession replyToConsumerSession TopicConnection replyToConsumerConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic replyToConsumerTopic replyToConsumerSession createTemporaryTopic replyToConsumerSession close bridge setConsumerTopic replyToConsumerTopic bridge setProducerTopic replyToProducerTopic bridge setProducerConnection TopicConnection replyToProducerConnection bridge setConsumerConnection TopicConnection replyToConsumerConnection bridge setDoHandleReplyTo false if bridge getJmsMessageConvertor null bridge setJmsMessageConvertor getInboundMessageConvertor bridge setJmsConnector this bridge start LOG info replyToProducerTopic
return bridge getConsumerTopic else OutboundTopicBridge bridge OutboundTopicBridge replyToBridges get replyToProducerTopic if bridge null bridge new OutboundTopicBridge Override protected Destination processReplyToDestination Destination destination return null try TopicSession replyToConsumerSession TopicConnection replyToConsumerConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic replyToConsumerTopic replyToConsumerSession createTemporaryTopic replyToConsumerSession close bridge setConsumerTopic replyToConsumerTopic bridge setProducerTopic replyToProducerTopic bridge setProducerConnection TopicConnection replyToProducerConnection
else OutboundTopicBridge bridge OutboundTopicBridge replyToBridges get replyToProducerTopic if bridge null bridge new OutboundTopicBridge Override protected Destination processReplyToDestination Destination destination return null try TopicSession replyToConsumerSession TopicConnection replyToConsumerConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic replyToConsumerTopic replyToConsumerSession createTemporaryTopic replyToConsumerSession close bridge setConsumerTopic replyToConsumerTopic bridge setProducerTopic replyToProducerTopic bridge setProducerConnection TopicConnection replyToProducerConnection bridge setConsumerConnection TopicConnection replyToConsumerConnection
try result session createTopic topicName catch JMSException e1 String errStr topicName LOG error errStr e JMSException jmsEx new JMSException errStr jmsEx setLinkedException e1 throw jmsEx else try result session createTopic topicName catch JMSException e try result jndiOutboundTemplate lookup topicName Topic class catch NamingException e1
if dest null destName null skipMessage msgRef else if dropAll skipMessage msgRef else if dropTemporaryTopics dest isTemporary dest isTopic skipMessage msgRef else if dropTemporaryQueues dest isTemporary dest isQueue skipMessage msgRef else if destFilter null matches destName skipMessage msgRef else dropped false return next sendToDeadLetterQueue ctx msgRef subscription poisonCause if dropped getReportInterval if dropCount getReportInterval
private void skipMessage String prefix MessageReference msgRef
Override public Broker installPlugin Broker broker throws Exception ForcePersistencyModeBroker pB new ForcePersistencyModeBroker broker pB setPersistenceFlag isPersistenceForced
Override public Subscription addConsumer ConnectionContext context ConsumerInfo info throws Exception if AdvisorySupport isAdvisoryTopic info getDestination info getDestination isTemporary info isBrowser String destinationName info getDestination getQualifiedName
if AdvisorySupport isAdvisoryTopic info getDestination info getDestination isTemporary info isBrowser String destinationName info getDestination getQualifiedName LOG debug info getSelector destinationName String selector info getSelector null MATCH_EVERYTHING info getSelector if ignoreWildcardSelectors hasWildcards selector Set String selectors subSelectorCache get destinationName if selectors null selectors Collections synchronizedSet new HashSet String else if singleSelectorPerDestination MATCH_EVERYTHING equals selector boolean containsMatchEverything selectors contains MATCH_EVERYTHING selectors clear if containsMatchEverything selectors add MATCH_EVERYTHING LOG debug selector selectors add selector
Override public void removeConsumer ConnectionContext context ConsumerInfo info throws Exception if AdvisorySupport isAdvisoryTopic info getDestination info getDestination isTemporary if singleSelectorPerDestination String destinationName info getDestination getQualifiedName Set String selectors subSelectorCache get destinationName if info getSelector null selectors size boolean removed selectors remove MATCH_EVERYTHING
SuppressWarnings private void readCache if persistFile null persistFile exists try try FileInputStream fis new FileInputStream persistFile ObjectInputStream in new SubSelectorClassObjectInputStream fis try LOG debug subSelectorCache ConcurrentHashMap String Set String in readObject if LOG isDebugEnabled final StringBuilder sb new StringBuilder sb append append persistFile getAbsolutePath append sb append subSelectorCache forEach k v sb append append k append append v append
try try FileInputStream fis new FileInputStream persistFile ObjectInputStream in new SubSelectorClassObjectInputStream fis try LOG debug subSelectorCache ConcurrentHashMap String Set String in readObject if LOG isDebugEnabled final StringBuilder sb new StringBuilder sb append append persistFile getAbsolutePath append sb append subSelectorCache forEach k v sb append append k append append v append LOG debug sb toString catch ClassNotFoundException ex
LOG debug subSelectorCache ConcurrentHashMap String Set String in readObject if LOG isDebugEnabled final StringBuilder sb new StringBuilder sb append append persistFile getAbsolutePath append sb append subSelectorCache forEach k v sb append append k append append v append LOG debug sb toString catch ClassNotFoundException ex LOG error ex finally in close catch IOException ex
LOG debug try FileOutputStream fos new FileOutputStream persistFile try ObjectOutputStream out new ObjectOutputStream fos try out writeObject subSelectorCache finally out flush out close catch IOException ex LOG error ex finally fos close catch IOException ex
public void onFailure IOException e if shuttingDown get
Override public void start throws Exception this getServer setAcceptListener new TransportAcceptListener Override public void onAccept Transport localTransport ProxyConnection connection null try Transport remoteTransport createRemoteTransport localTransport connection new ProxyConnection localTransport remoteTransport connection start connections add connection catch Exception e onAcceptError e try if connection null connection stop catch Exception eoc
Override public void onAccept Transport localTransport ProxyConnection connection null try Transport remoteTransport createRemoteTransport localTransport connection new ProxyConnection localTransport remoteTransport connection start connections add connection catch Exception e onAcceptError e try if connection null connection stop catch Exception eoc LOG error eoc Override public void onAcceptError Exception error
NamingEnumeration results context search destinationBase roleBase constraints while results hasMore SearchResult result SearchResult results next Attributes attrs result getAttributes if attrs null continue acls addAttributeValues roleAttribute attrs acls for Iterator String iter acls iterator iter hasNext String roleName iter next LdapName ldapname new LdapName roleName Rdn rdn ldapname getRdn ldapname size LOG debug rdn getValue toString roles add new GroupPrincipal rdn getValue toString return roles catch NamingException e
SuppressWarnings protected synchronized void query throws Exception DirContext currentContext open entries clear final SearchControls constraints new SearchControls constraints setSearchScope SearchControls SUBTREE_SCOPE DefaultAuthorizationMap newMap new DefaultAuthorizationMap for PermissionType permissionType PermissionType values try processQueryResults newMap currentContext search queueSearchBase getFilterForPermissionType permissionType constraints DestinationType QUEUE permissionType catch Exception e LOG error new Object queueSearchBase getFilterForPermissionType permissionType e for PermissionType permissionType PermissionType values try processQueryResults newMap currentContext search topicSearchBase getFilterForPermissionType permissionType constraints DestinationType TOPIC permissionType catch Exception e
DefaultAuthorizationMap newMap new DefaultAuthorizationMap for PermissionType permissionType PermissionType values try processQueryResults newMap currentContext search queueSearchBase getFilterForPermissionType permissionType constraints DestinationType QUEUE permissionType catch Exception e LOG error new Object queueSearchBase getFilterForPermissionType permissionType e for PermissionType permissionType PermissionType values try processQueryResults newMap currentContext search topicSearchBase getFilterForPermissionType permissionType constraints DestinationType TOPIC permissionType catch Exception e LOG error new Object topicSearchBase getFilterForPermissionType permissionType e for PermissionType permissionType PermissionType values try processQueryResults newMap currentContext search tempSearchBase getFilterForPermissionType permissionType constraints DestinationType TEMP permissionType catch Exception e
group true Attribute name memberAttributes get groupNameAttribute if name null LOG error new Object memberDn groupNameAttribute result getNameInNamespace break principalName String name get if objectClass equalsIgnoreCase userObjectClass user true Attribute name memberAttributes get userNameAttribute if name null LOG error new Object memberDn userNameAttribute result getNameInNamespace break principalName String name get else group true
principalName String name get else group true principalName memberDn replaceAll if group user group user LOG error memberDn result getNameInNamespace else if principalName null DefaultAuthorizationMap map this map get if group user try members add DefaultAuthorizationMap createGroupPrincipal principalName map getGroupClass catch Exception e NamingException ne new NamingException principalName map getGroupClass ne initCause e throw ne
LOG error e if context null refreshDisabled return if context null refreshDisabled refreshInterval System currentTimeMillis lastUpdated refreshInterval this updaterService execute new Runnable Override public void run if context null refreshDisabled refreshInterval System currentTimeMillis lastUpdated refreshInterval if isContextAlive try context createContext catch NamingException ne return LOG debug try query
public void objectAdded NamingEvent namingEvent DestinationType destinationType PermissionType permissionType
public void objectRemoved NamingEvent namingEvent DestinationType destinationType PermissionType permissionType
public void objectRenamed NamingEvent namingEvent DestinationType destinationType PermissionType permissionType Binding oldBinding namingEvent getOldBinding Binding newBinding namingEvent getNewBinding
ActiveMQDestination oldDest formatDestination oldName destinationType LdapName newName new LdapName newBinding getName ActiveMQDestination newDest formatDestination newName destinationType if permissionType null objectRemoved namingEvent destinationType permissionType SearchControls controls new SearchControls controls setSearchScope SearchControls OBJECT_SCOPE boolean matchedToType false for PermissionType newPermissionType PermissionType values NamingEnumeration SearchResult results context search newName getFilterForPermissionType newPermissionType controls if results hasMore objectAdded namingEvent destinationType newPermissionType matchedToType true break if matchedToType
break if matchedToType LOG error oldBinding getName newBinding getName else if oldDest null newDest null AuthorizationEntry entry entries remove oldDest if entry null entry setDestination newDest DefaultAuthorizationMap map this map get map put newDest entry map remove oldDest entry entries put newDest entry else LOG warn oldDest catch InvalidNameException e
if matchedToType LOG error oldBinding getName newBinding getName else if oldDest null newDest null AuthorizationEntry entry entries remove oldDest if entry null entry setDestination newDest DefaultAuthorizationMap map this map get map put newDest entry map remove oldDest entry entries put newDest entry else LOG warn oldDest catch InvalidNameException e LOG error new Object oldBinding getName newBinding getName e
public void objectChanged NamingEvent namingEvent DestinationType destinationType PermissionType permissionType
public void namingExceptionThrown NamingExceptionEvent namingExceptionEvent context null
boolean warned false boolean locked false while isStopped isStopping try lockFile lock if warned try TimeUnit MILLISECONDS sleep lockable null lockable getLockKeepAlivePeriod 0l catch InterruptedException e1 locked keepAlive break catch IOException e if warned LOG info lockFileName warned true
Override public void commit boolean onePhase throws XAException IOException if LOG isDebugEnabled
protected ProtocolInfo detectProtocol byte buffer throws IOException TcpTransportFactory detectedTransportFactory transportFactory WireFormatFactory detectedWireFormatFactory wireFormatFactory boolean found false for String scheme protocolVerifiers keySet if protocolVerifiers get scheme isProtocol buffer
public void logRequest Logger log Object command
public void logResponse Logger log Object response
public void logAsyncRequest Logger log Object command
public void logOneWay Logger log Object command
public void logReceivedCommand Logger log Object command
public void logReceivedException Logger log IOException error
public void logRequest Logger log Object command
public void logResponse Logger log Object response
public void logAsyncRequest Logger log Object command
public void logOneWay Logger log Object command
public void logReceivedCommand Logger log Object command
public void logReceivedException Logger log IOException error
private BrokerService lookupBroker final BrokerRegistry registry final String brokerName int waitForStart BrokerService broker null synchronized registry getRegistryMutext broker registry lookup brokerName if broker null waitForStart final long expiry System currentTimeMillis waitForStart while broker null broker isStarted System currentTimeMillis expiry long timeout Math max expiry System currentTimeMillis if broker null try
private BrokerService lookupBroker final BrokerRegistry registry final String brokerName int waitForStart BrokerService broker null synchronized registry getRegistryMutext broker registry lookup brokerName if broker null waitForStart final long expiry System currentTimeMillis waitForStart while broker null broker isStarted System currentTimeMillis expiry long timeout Math max expiry System currentTimeMillis if broker null try LOG debug brokerName registry getRegistryMutext wait timeout broker registry lookup brokerName catch InterruptedException ignored if broker null broker isStarted
private TransportServer bind URI location boolean dispose throws IOException String host extractHost location
public static void stopped String host SERVERS remove host TransportConnector connector CONNECTORS remove host if connector null
Override public void handle IOException exception if broker isStarted ignoreAllErrors allowIOResumption
Throwable cause exception while cause null cause IOException String message cause getMessage if message null message contains noSpaceMessage LOG info exception exception allowIOResumption return cause cause getCause if ignoreSQLExceptions Throwable cause exception while cause null if cause SQLException String message cause getMessage if message null message
allowIOResumption return cause cause getCause if ignoreSQLExceptions Throwable cause exception while cause null if cause SQLException String message cause getMessage if message null message if message contains sqlExceptionMessage LOG info exception cause return cause cause getCause if stopStartConnectors
if ignoreSQLExceptions Throwable cause exception while cause null if cause SQLException String message cause getMessage if message null message if message contains sqlExceptionMessage LOG info exception cause return cause cause getCause if stopStartConnectors if handlingException compareAndSet false true LOG info broker exception exception new Thread
new Thread Override public void run try ServiceStopper stopper new ServiceStopper broker stopAllConnectors stopper LOG info broker catch Exception e LOG warn e finally new Thread Override public void run try allowIOResumption while hasLockOwnership isPersistenceAdapterDown LOG info
private void stopBroker Exception exception
private boolean hasBeenModified boolean modified false File localFile new File file getAbsolutePath if localFile exists if localFile lastModified lastModified
protected Properties doFindLogWriterProperties String logWriterName throws IOException String uri path logWriterName ClassLoader classLoader Thread currentThread getContextClassLoader if classLoader null classLoader getClass getClassLoader InputStream in classLoader getResourceAsStream uri if in null in LogWriterFinder class getClassLoader getResourceAsStream uri if in null
if sub null NetworkBridgeUtils matchesNetworkConfig config sub getConsumerInfo getDestination ConsumerInfo ci sub getConsumerInfo copy ci setClientId key getClientId subscriptionInfos add ci for Subscription sub topicRegion getSubscriptions values if sub null NetworkBridgeUtils isForcedDurable sub getConsumerInfo config getDynamicallyIncludedDestinations subscriptionInfos add sub getConsumerInfo copy try AdvisoryBroker ab AdvisoryBroker brokerService getBroker getAdaptor AdvisoryBroker class if ab null brokerService isUseVirtualDestSubs config isUseVirtualDestSubs for ConsumerInfo info ab getVirtualDestinationConsumers keySet if NetworkBridgeUtils isForcedDurable info config getDynamicallyIncludedDestinations subscriptionInfos add info copy catch Exception e LOG warn
public static void result synchronized trackers for Entry String Tracker t trackers entrySet
public static void result synchronized trackers for Entry String Tracker t trackers entrySet LOG info t getKey t getValue size for Trace trace t getValue values
try task execute catch IOException t throwable t throw t catch RuntimeException t throwable t throw t catch Throwable t throwable t throw IOExceptionSupport create t t finally if throwable null persistenceAdapter commitTransaction context else
private void debug Object msg
try session close session null catch Exception e LOG info try connection close connection null catch Exception e LOG info try broker stop broker waitUntilStopped broker null catch Exception e
public void testSendReceiveTransactedBatches throws Exception TextMessage message session createTextMessage for int j j batchCount j
Message outbound new Message session createTextMessage session createTextMessage beginTx producer send outbound commitTx beginTx producer send session createTextMessage rollbackTx beginTx producer send outbound commitTx beginTx ArrayList Message messages new ArrayList Message LOG info Message message consumer receive messages add message
beginTx producer send session createTextMessage rollbackTx beginTx producer send outbound commitTx beginTx ArrayList Message messages new ArrayList Message LOG info Message message consumer receive messages add message LOG info message LOG info message consumer receive messages add message
public void testAckMessageInTx throws Exception Message outbound new Message session createTextMessage beginTx producer send outbound outbound acknowledge commitTx outbound acknowledge beginTx ArrayList Message messages new ArrayList Message LOG info Message message consumer receive messages add message
Message outbound new Message session createTextMessage session createTextMessage beginTx producer send outbound commitTx beginTx producer send session createTextMessage consumer close reconnectSession producer send outbound commitTx ArrayList Message messages new ArrayList Message LOG info beginTx Message message consumer receive messages add message
beginTx producer send session createTextMessage consumer close reconnectSession producer send outbound commitTx ArrayList Message messages new ArrayList Message LOG info beginTx Message message consumer receive messages add message LOG info message LOG info message consumer receive messages add message
producer send outbound commitTx beginTx producer send session createTextMessage consumer close session close reconnect beginTx producer send outbound commitTx ArrayList Message messages new ArrayList Message LOG info beginTx Message message consumer receive messages add message
consumer close session close reconnect beginTx producer send outbound commitTx ArrayList Message messages new ArrayList Message LOG info beginTx Message message consumer receive messages add message LOG info message LOG info message consumer receive messages add message
beginTx while consumer receiveNoWait null commitTx beginTx producer send outbound producer send outbound commitTx LOG info outbound LOG info outbound beginTx TextMessage message TextMessage consumer receive assertEquals outbound getText message getText consumer close commitTx consumer resourceProvider createConsumer session destination
ArrayList String list new ArrayList String list add Message outbound session createObjectMessage list outbound setStringProperty beginTx producer send outbound commitTx LOG info beginTx Message message consumer receive List String body assertReceivedObjectMessageWithListBody message try message setStringProperty fail catch JMSException e
SuppressWarnings protected List String assertReceivedObjectMessageWithListBody Message message throws JMSException assertNotNull message assertEquals message getStringProperty assertTrue message message ObjectMessage ObjectMessage objectMessage ObjectMessage message List String body List String objectMessage getObject
Before public void setUp throws Exception brokerService new BrokerService brokerService setPersistent false brokerService setPlugins new BrokerPlugin new BrokerPluginSupport Override public void removeConnection ConnectionContext context ConnectionInfo info Throwable error throws Exception
Test timeout public void testStealLinkSuccess throws Exception final String clientID ActiveMQConnectionFactory factory new ActiveMQConnectionFactory stealableConnectionURI Connection connection1 factory createConnection connection1 setClientID clientID connection1 start try Connection connection2 factory createConnection connection2 setClientID clientID connection2 start catch InvalidClientIDException e LOG info e getMessage LOG info e fail catch Throwable error
lists i store getPList String valueOf i Thread currentThread setName threadName executor Executors newFixedThreadPool class A implements Runnable Override public void run final String threadName Thread currentThread getName try for int i i iterations i PList candidate lists i numLists Thread currentThread setName candidate getName synchronized plistLocks candidate Object last candidate addLast String valueOf i payload getFirst candidate assertTrue candidate remove last catch Exception error
public void pause synchronized connections
public void goOn synchronized connections
Test public void testBadVMTransportOptionsJMSPrefix throws Exception try final String vmUri
Test public void testBadVMTransportOptionsBrokerPrefix throws Exception try final String vmUri
Test public void testRoundTrip throws Exception Destination destination getMandatoryBean Destination class ConnectionFactory factoryCON getMandatoryBean ConnectionFactory class Connection consumerConnection factoryCON createConnection consumerConnection start Session consumerSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE
Test public void testSendingViaJmsIsReceivedByCamel throws Exception MockEndpoint result resolveMandatoryEndpoint MockEndpoint class result expectedBodiesReceived expectedBody result message header isEqualTo Destination destination getMandatoryBean Destination class ConnectionFactory factory getMandatoryBean ConnectionFactory class Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination ObjectMessage message session createObjectMessage expectedBody message setStringProperty producer send message result assertIsSatisfied
Test public void testConsumingViaJMSReceivesMessageFromCamel throws Exception Destination destination getMandatoryBean Destination class ConnectionFactory factory getMandatoryBean ConnectionFactory class ProducerTemplate template getMandatoryBean ProducerTemplate class assertNotNull template Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE
Test public void testConsumingViaJMSReceivesMessageFromCamel throws Exception Destination destination getMandatoryBean Destination class ConnectionFactory factory getMandatoryBean ConnectionFactory class ProducerTemplate template getMandatoryBean ProducerTemplate class assertNotNull template Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE LOG info destination MessageConsumer consumer session createConsumer destination template sendBody expectedBody Message message consumer receive assertNotNull destination message TextMessage textMessage assertIsInstanceOf TextMessage class message assertEquals expectedBody textMessage getText
private int dumpDb java sql Connection jdbcConn throws Exception int count ResultSet resultSet jdbcConn createStatement executeQuery while resultSet next count
private boolean consumedFrom String qName throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory factory setWatchTopicAdvisories false Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer new ActiveMQQueue qName Message message consumer receive
private int dumpDb java sql Connection jdbcConn throws Exception int count ResultSet resultSet jdbcConn createStatement executeQuery while resultSet next count
Test public void testMocksAreValid throws Exception expectedEndpoint expectedMessageCount expectedEndpoint message header isEqualTo MockEndpoint assertIsSatisfied camelContext List Exchange list expectedEndpoint getReceivedExchanges for Exchange exchange list Object body exchange getIn getBody
Test public void testForwardingAMessageAcrossJMSKeepingCustomJMSHeaders throws Exception MockEndpoint resultEndpoint resolveMandatoryEndpoint MockEndpoint class resultEndpoint expectedBodiesReceived expectedBody AssertionClause firstMessageExpectations resultEndpoint message firstMessageExpectations header isEqualTo firstMessageExpectations header isEqualTo replyQueue firstMessageExpectations header isEqualTo correlationID firstMessageExpectations header isEqualTo messageType template sendBodyAndHeader expectedBody resultEndpoint assertIsSatisfied List Exchange list resultEndpoint getReceivedExchanges Exchange exchange list get Object replyTo exchange getIn getHeader
firstMessage header isEqualTo messageType firstMessage header isEqualTo groupID Map String Object headers new HashMap String Object headers put if useReplyToHeader headers put replyQueueName headers put correlationID headers put messageType headers put groupID template sendBodyAndHeaders expectedBody headers resultEndpoint assertIsSatisfied List Exchange list resultEndpoint getReceivedExchanges Exchange exchange list get Message in exchange getIn Object replyTo in getHeader
public void testWorks throws Exception Thread sleep LOG debug broker getAdminView addQueue Thread sleep List BrowsableEndpoint endpoints getEndpoints camelContext BrowsableEndpoint class for BrowsableEndpoint endpoint endpoints
Test public void testSendThenFailoverThenSend throws Exception ProducerTemplate requester senderContext createProducerTemplate LOG info String response String requester requestBody fromEndpoint assertNotNull response null
Test public void testSendThenFailoverThenSend throws Exception ProducerTemplate requester senderContext createProducerTemplate LOG info String response String requester requestBody fromEndpoint assertNotNull response null LOG info response TimeUnit SECONDS sleep LOG info shutdownBrokerA createBrokerA LOG info response String requester requestBody fromEndpoint assertNotNull response null
headers put replyQueueName headers put correlationID headers put groupID Exchange reply template request new Processor public void process Exchange exchange exchange getIn setBody Map String Object headers new HashMap String Object headers put headers put replyQueueName headers put correlationID headers put groupID exchange getIn setHeaders headers Message in reply getIn Object replyTo in getHeader
headers put correlationID headers put groupID Exchange reply template request new Processor public void process Exchange exchange exchange getIn setBody Map String Object headers new HashMap String Object headers put headers put replyQueueName headers put correlationID headers put groupID exchange getIn setHeaders headers Message in reply getIn Object replyTo in getHeader LOG info replyTo
headers put groupID Exchange reply template request new Processor public void process Exchange exchange exchange getIn setBody Map String Object headers new HashMap String Object headers put headers put replyQueueName headers put correlationID headers put groupID exchange getIn setHeaders headers Message in reply getIn Object replyTo in getHeader LOG info replyTo LOG info in getHeaders
headers put correlationID headers put groupID exchange getIn setHeaders headers Message in reply getIn Object replyTo in getHeader LOG info replyTo LOG info in getHeaders LOG info in getBody assertMessageHeader in correlationID Map String Object receivedHeaders myBean getHeaders assertThat receivedHeaders hasKey assertThat receivedHeaders hasEntry groupID assertThat receivedHeaders hasEntry correlationID replyTo receivedHeaders get
Test public void testSendTextMessage throws Exception String expectedBody template sendBodyAndHeader startEndpointUri expectedBody listener assertMessagesArrived List Message list listener flushMessages assertTrue list isEmpty Message message list get
try response resp getResult if response isException ExceptionResponse er ExceptionResponse response exception er getException catch Exception e exception e if exception null if exception JMSException onComplete onException JMSException exception else if isClosed closing get LOG debug JMSException jmsEx null try
throw new ConnectionClosedException else try Response response Response timeout this transport request command timeout this transport request command if response isException ExceptionResponse er ExceptionResponse response if er getException JMSException throw JMSException er getException else if isClosed closing get LOG debug JMSException jmsEx null try jmsEx JMSExceptionSupport create er getException catch Throwable e
Override public Response processMessageDispatch MessageDispatch md throws Exception waitForTransportInterruptionProcessingToComplete ActiveMQDispatcher dispatcher dispatchers get md getConsumerId if dispatcher null Message msg md getMessage if msg null msg msg copy msg setReadOnlyBody true msg setReadOnlyProperties true msg setRedeliveryCounter md getRedeliveryCounter msg setConnection ActiveMQConnection this msg setMemoryUsage null md setMessage msg dispatcher dispatch md else
msg setJMSDestination destination msg setJMSDeliveryMode deliveryMode long expiration 0L if isDisableTimeStampsByDefault long timeStamp System currentTimeMillis msg setJMSTimestamp timeStamp if timeToLive expiration timeToLive timeStamp msg setJMSExpiration expiration msg setJMSPriority priority msg setJMSRedelivered false msg setMessageId messageId msg onSend msg setProducerId msg getMessageId getProducerId if LOG isDebugEnabled
private void signalInterruptionProcessingNeeded FailoverTransport failoverTransport transport narrow FailoverTransport class if failoverTransport null failoverTransport getStateTracker transportInterrupted this getConnectionInfo getConnectionId if LOG isDebugEnabled
if timeout deadline System currentTimeMillis timeout while true MessageDispatch md unconsumedMessages dequeue timeout if md null if timeout unconsumedMessages isClosed timeout Math max deadline System currentTimeMillis else if failureError null throw JMSExceptionSupport create failureError else return null else if md getMessage null return null else if consumeExpiredMessage md
timeout Math max deadline System currentTimeMillis else if failureError null throw JMSExceptionSupport create failureError else return null else if md getMessage null return null else if consumeExpiredMessage md LOG debug getConsumerId md beforeMessageIsConsumed md afterMessageIsConsumed md true if timeout timeout Math max deadline System currentTimeMillis sendPullCommand timeout
void clearMessagesInProgress if inProgressClearRequiredFlag get synchronized unconsumedMessages getMutex if inProgressClearRequiredFlag get
else ack pendingAck pendingAck null else if pendingAck null pendingAck isStandardAck ack pendingAck pendingAck null if ack null final MessageAck ackToSend ack if executorService null executorService Executors newSingleThreadExecutor executorService submit new Runnable Override public void run try session sendAck ackToSend true catch JMSException e
registerSync deliveredCounter synchronized deliveredMessages MessageAck oldPendingAck pendingAck pendingAck new MessageAck md ackType deliveredCounter pendingAck setTransactionId session getTransactionContext getTransactionId if oldPendingAck null pendingAck setFirstMessageId pendingAck getLastMessageId else if oldPendingAck getAckType pendingAck getAckType pendingAck setFirstMessageId oldPendingAck getFirstMessageId else if oldPendingAck isDeliveredAck LOG debug oldPendingAck pendingAck session sendAck oldPendingAck else
deliveredCounter synchronized deliveredMessages MessageAck oldPendingAck pendingAck pendingAck new MessageAck md ackType deliveredCounter pendingAck setTransactionId session getTransactionContext getTransactionId if oldPendingAck null pendingAck setFirstMessageId pendingAck getLastMessageId else if oldPendingAck getAckType pendingAck getAckType pendingAck setFirstMessageId oldPendingAck getFirstMessageId else if oldPendingAck isDeliveredAck LOG debug oldPendingAck pendingAck session sendAck oldPendingAck else LOG debug oldPendingAck pendingAck
private void rollbackOnFailedRecoveryRedelivery throws JMSException if previouslyDeliveredMessages null int numberNotReplayed for PreviouslyDelivered entry previouslyDeliveredMessages values if entry redelivered numberNotReplayed
synchronized unconsumedMessages getMutex if unconsumedMessages isClosed if this info isBrowser md getDeliverySequenceId 0l session connection isDuplicate this md getMessage if listener null unconsumedMessages isRunning if redeliveryExceeded md posionAck md md getRedeliveryCounter getConsumerId redeliveryPolicy return ActiveMQMessage message createActiveMQMessage md beforeMessageIsConsumed md try boolean expired isConsumerExpiryCheckEnabled message isExpired if expired listener onMessage message afterMessageIsConsumed md expired catch RuntimeException e
else afterMessageIsConsumed md false else md setDeliverySequenceId if md getMessage null unconsumedMessages enqueue md else if consumeExpiredMessage md unconsumedMessages enqueue md if availableListener null availableListener onMessageAvailable this else beforeMessageIsConsumed md afterMessageIsConsumed md true if info getCurrentPrefetchSize
if this optimizedAckTask null try this session connection getScheduler cancel optimizedAckTask catch JMSException e LOG debug e throw e this optimizedAckTask null if this optimizeAcknowledge this optimizedAckScheduledAckInterval this optimizedAckTask new Runnable Override public void run try if optimizeAcknowledge unconsumedMessages isClosed LOG info info getConsumerId deliverAcks catch Exception e
LOG debug e throw e this optimizedAckTask null if this optimizeAcknowledge this optimizedAckScheduledAckInterval this optimizedAckTask new Runnable Override public void run try if optimizeAcknowledge unconsumedMessages isClosed LOG info info getConsumerId deliverAcks catch Exception e LOG debug e try this session connection getScheduler executePeriodically optimizedAckTask optimizedAckScheduledAckInterval
Override public void run MessageDispatch messageDispatch while messageDispatch executor dequeueNoWait null final MessageDispatch md messageDispatch final ActiveMQMessage message ActiveMQMessage md getMessage copy if message getDataStructureType CommandTypes ACTIVEMQ_BLOB_MESSAGE ActiveMQBlobMessage message setBlobDownloader new BlobDownloader getBlobTransferPolicy if message getDataStructureType CommandTypes ACTIVEMQ_OBJECT_MESSAGE ActiveMQObjectMessage message setTrustAllPackages getConnection isTrustAllPackages ActiveMQObjectMessage message setTrustedPackages getConnection getTrustedPackages MessageAck earlyAck null if message isExpired earlyAck new MessageAck md MessageAck EXPIRED_ACK_TYPE earlyAck setFirstMessageId message getMessageId else if connection isDuplicate ActiveMQSession this message
if message getDataStructureType CommandTypes ACTIVEMQ_OBJECT_MESSAGE ActiveMQObjectMessage message setTrustAllPackages getConnection isTrustAllPackages ActiveMQObjectMessage message setTrustedPackages getConnection getTrustedPackages MessageAck earlyAck null if message isExpired earlyAck new MessageAck md MessageAck EXPIRED_ACK_TYPE earlyAck setFirstMessageId message getMessageId else if connection isDuplicate ActiveMQSession this message LOG debug this message getMessageId earlyAck new MessageAck md MessageAck POSION_ACK_TYPE earlyAck setFirstMessageId md getMessage getMessageId earlyAck setPoisonCause new Throwable this if earlyAck null try asyncSendPacket earlyAck
continue if isClientAcknowledge isIndividualAcknowledge message setAcknowledgeCallback new Callback Override public void execute throws Exception if deliveryListener null deliveryListener beforeDelivery this message md setDeliverySequenceId getNextDeliveryId lastDeliveredSequenceId message getMessageId getBrokerSequenceId final MessageAck ack new MessageAck md MessageAck STANDARD_ACK_TYPE final AtomicBoolean afterDeliveryError new AtomicBoolean false synchronized redeliveryGuard try ack setFirstMessageId md getMessage getMessageId doStartTransaction
if deliveryListener null deliveryListener beforeDelivery this message md setDeliverySequenceId getNextDeliveryId lastDeliveredSequenceId message getMessageId getBrokerSequenceId final MessageAck ack new MessageAck md MessageAck STANDARD_ACK_TYPE final AtomicBoolean afterDeliveryError new AtomicBoolean false synchronized redeliveryGuard try ack setFirstMessageId md getMessage getMessageId doStartTransaction ack setTransactionId getTransactionContext getTransactionId if ack getTransactionId null getTransactionContext addSynchronization new Synchronization final int clearRequestCount clearRequestsCounter get Integer MAX_VALUE clearRequestsCounter incrementAndGet clearRequestsCounter get Override public void beforeEnd throws Exception
md setDeliverySequenceId getNextDeliveryId lastDeliveredSequenceId message getMessageId getBrokerSequenceId final MessageAck ack new MessageAck md MessageAck STANDARD_ACK_TYPE final AtomicBoolean afterDeliveryError new AtomicBoolean false synchronized redeliveryGuard try ack setFirstMessageId md getMessage getMessageId doStartTransaction ack setTransactionId getTransactionContext getTransactionId if ack getTransactionId null getTransactionContext addSynchronization new Synchronization final int clearRequestCount clearRequestsCounter get Integer MAX_VALUE clearRequestsCounter incrementAndGet clearRequestsCounter get Override public void beforeEnd throws Exception if ack getTransactionId isXATransaction connection hasDispatcher ack getConsumerId LOG debug ack connection
if isInXATransaction throw new TransactionInProgressException try beforeEnd catch JMSException e rollback throw e if transactionId null rollbackOnly final String message transactionId try rollback finally LOG warn message throw new TransactionRolledBackException message if transactionId null
if transactionId null rollbackOnly final String message transactionId try rollback finally LOG warn message throw new TransactionRolledBackException message if transactionId null LOG debug transactionId synchronizations null synchronizations size TransactionInfo info new TransactionInfo getConnectionId transactionId TransactionInfo COMMIT_ONE_PHASE this transactionId null try this connection syncSendPacket info if localTransactionEventListener null localTransactionEventListener commitEvent
Override public void start Xid xid int flags throws XAException
Override public void end Xid xid int flags throws XAException
Override public int prepare Xid xid throws XAException
throw new XAException XAException XAER_PROTO else x new XATransactionId xid if rollbackOnly LOG warn x throw new XAException XAException XA_RBINTEGRITY try TransactionInfo info new TransactionInfo getConnectionId x TransactionInfo PREPARE IntegerResponse response IntegerResponse this connection syncSendPacket info if XAResource XA_RDONLY response getResult List TransactionContext l synchronized ENDED_XA_TRANSACTION_CONTEXTS l ENDED_XA_TRANSACTION_CONTEXTS remove x if l null if l isEmpty
synchronized ENDED_XA_TRANSACTION_CONTEXTS l ENDED_XA_TRANSACTION_CONTEXTS remove x if l null if l isEmpty LOG debug xid for TransactionContext ctx l ctx afterCommit return response getResult catch JMSException e LOG warn x e e List TransactionContext l synchronized ENDED_XA_TRANSACTION_CONTEXTS l ENDED_XA_TRANSACTION_CONTEXTS remove x if l null for TransactionContext ctx l
Override public void rollback Xid xid throws XAException if LOG isDebugEnabled
Override public void commit Xid xid boolean onePhase throws XAException
l ENDED_XA_TRANSACTION_CONTEXTS remove x if l null for TransactionContext ctx l try ctx afterCommit catch Exception ignored LOG debug ignored ignored catch JMSException e LOG warn x e e if onePhase List TransactionContext l synchronized ENDED_XA_TRANSACTION_CONTEXTS l ENDED_XA_TRANSACTION_CONTEXTS remove x if l null for TransactionContext ctx l
Override public void forget Xid xid throws XAException
Override public Xid recover int flag throws XAException
throw toXAException e if xid null associatedXid xid transactionId new XATransactionId xid TransactionInfo info new TransactionInfo getConnectionId transactionId TransactionInfo BEGIN try this connection asyncSendPacket info LOG debug this transactionId catch JMSException e disassociate throw toXAException e else if transactionId null TransactionInfo info new TransactionInfo getConnectionId transactionId TransactionInfo END try
Object result null if object Reference Reference reference Reference object if log isTraceEnabled log trace reference getClassName Class theClass loadClass this reference getClassName if JNDIStorableInterface class isAssignableFrom theClass JNDIStorableInterface store JNDIStorableInterface theClass newInstance Properties properties new Properties for Enumeration iter reference getAll iter hasMoreElements StringRefAddr addr StringRefAddr iter nextElement properties put addr getType addr getContent null addr getContent store setProperties properties result store else
private void restoreTransactions Transport transport ConnectionState connectionState throws IOException Vector TransactionInfo toRollback new Vector for TransactionState transactionState connectionState getTransactionStates if LOG isDebugEnabled
Vector TransactionInfo toRollback new Vector for TransactionState transactionState connectionState getTransactionStates if LOG isDebugEnabled LOG debug transactionState getId if transactionState getCommands isEmpty Command lastCommand transactionState getCommands get transactionState getCommands size if lastCommand TransactionInfo TransactionInfo transactionInfo TransactionInfo lastCommand if transactionInfo getType TransactionInfo COMMIT_ONE_PHASE if LOG isDebugEnabled LOG debug transactionState getId toRollback add transactionInfo continue for ProducerState producerState transactionState getProducerStates values if LOG isDebugEnabled
if transactionState getCommands isEmpty Command lastCommand transactionState getCommands get transactionState getCommands size if lastCommand TransactionInfo TransactionInfo transactionInfo TransactionInfo lastCommand if transactionInfo getType TransactionInfo COMMIT_ONE_PHASE if LOG isDebugEnabled LOG debug transactionState getId toRollback add transactionInfo continue for ProducerState producerState transactionState getProducerStates values if LOG isDebugEnabled LOG debug producerState getInfo transport oneway producerState getInfo for Command command transactionState getCommands if LOG isDebugEnabled
TransactionInfo transactionInfo TransactionInfo lastCommand if transactionInfo getType TransactionInfo COMMIT_ONE_PHASE if LOG isDebugEnabled LOG debug transactionState getId toRollback add transactionInfo continue for ProducerState producerState transactionState getProducerStates values if LOG isDebugEnabled LOG debug producerState getInfo transport oneway producerState getInfo for Command command transactionState getCommands if LOG isDebugEnabled LOG debug command transport oneway command for ProducerState producerState transactionState getProducerStates values
protected void restoreConsumers Transport transport SessionState sessionState throws IOException final ConnectionState connectionState connectionStates get sessionState getInfo getSessionId getParentId final boolean connectionInterruptionProcessingComplete connectionState isConnectionInterruptProcessingComplete for ConsumerState consumerState sessionState getConsumerStates ConsumerInfo infoToSend consumerState getInfo if connectionInterruptionProcessingComplete infoToSend getPrefetchSize infoToSend consumerState getInfo copy connectionState getRecoveringPullConsumers put infoToSend getConsumerId consumerState getInfo infoToSend setPrefetchSize if LOG isDebugEnabled
protected void restoreTempDestinations Transport transport ConnectionState connectionState throws IOException for Iterator iter2 connectionState getTempDestinations iterator iter2 hasNext DestinationInfo info DestinationInfo iter2 next transport oneway info if LOG isDebugEnabled
public void connectionInterruptProcessingComplete Transport transport ConnectionId connectionId ConnectionState connectionState connectionStates get connectionId if connectionState null connectionState setConnectionInterruptProcessingComplete true Map ConsumerId ConsumerInfo stalledConsumers connectionState getRecoveringPullConsumers for Entry ConsumerId ConsumerInfo entry stalledConsumers entrySet ConsumerControl control new ConsumerControl control setConsumerId entry getKey control setPrefetch entry getValue getPrefetchSize control setDestination entry getValue getDestination try if LOG isDebugEnabled
ConnectionState connectionState connectionStates get connectionId if connectionState null connectionState setConnectionInterruptProcessingComplete true Map ConsumerId ConsumerInfo stalledConsumers connectionState getRecoveringPullConsumers for Entry ConsumerId ConsumerInfo entry stalledConsumers entrySet ConsumerControl control new ConsumerControl control setConsumerId entry getKey control setPrefetch entry getValue getPrefetchSize control setDestination entry getValue getDestination try if LOG isDebugEnabled LOG debug control getConsumerId control getPrefetch transport oneway control catch Exception ex if LOG isDebugEnabled
public synchronized void executePeriodically final Runnable task long period TimerTask existing timerTasks get task if existing null
if monitorStarted get try if sendLock writeLock tryLock KeepAliveInfo info new KeepAliveInfo info setResponseRequired keepAliveResponseRequired doOnewaySend info catch IOException e onException e finally if sendLock writeLock isHeldByCurrentThread sendLock writeLock unlock Override public String toString return getRemoteAddress catch RejectedExecutionException ex
if inReceive get currentCounter previousCounter LOG trace return if commandReceived get monitorStarted get ASYNC_TASKS isShutdown LOG debug this try ASYNC_TASKS execute new Runnable Override public void run LOG debug this onException new InactivityIOException readCheckTime next getRemoteAddress Override public String toString return getRemoteAddress catch RejectedExecutionException ex if ASYNC_TASKS isShutdown
private InterruptedIOException dealWithInterrupt InterruptedException e if LOG isDebugEnabled
Override protected boolean configuredOk throws IOException boolean configured false if ignoreAllWireFormatInfo configured true else if localWireFormatInfo null remoteWireFormatInfo null if ignoreRemoteWireFormat if LOG isDebugEnabled LOG debug localWireFormatInfo remoteWireFormatInfo long readCheckTime Math min localWireFormatInfo getMaxInactivityDuration remoteWireFormatInfo getMaxInactivityDuration long writeCheckTime writeCheckValueFromReadCheck readCheckTime setReadCheckTime readCheckTime setInitialDelayTime Math min localWireFormatInfo getMaxInactivityDurationInitalDelay remoteWireFormatInfo getMaxInactivityDurationInitalDelay setWriteCheckTime writeCheckTime else if LOG isDebugEnabled
public void onCommand Object o Command command null if o Command command Command o else throw new ClassCastException o if command isResponse Response response Response command FutureResponse future null synchronized requestMap future requestMap remove Integer valueOf response getCorrelationId if future null future set response else if debug
public void sendWireFormat throws IOException try WireFormatInfo info wireFormat getPreferedWireFormatInfo if LOG isDebugEnabled
public void negociate WireFormatInfo info if LOG isDebugEnabled
if LOG isDebugEnabled LOG debug info try wireInfoSentDownLatch await if LOG isDebugEnabled LOG debug this wireFormat if info isValid onException new IOException else if info getVersion minimumVersion onException new IOException info getVersion minimumVersion wireFormat renegotiateWireFormat info Socket socket next narrow Socket class if socket null socket setTcpNoDelay wireFormat isTcpNoDelayEnabled if LOG isDebugEnabled
protected static boolean deRegisterWrite WriteTimeoutFilter filter boolean fail IOException iox boolean result writers remove filter if result if fail String message filter getNext getRemoteAddress LOG warn message Socket sock filter getSocket if sock null
Override public void onServiceAdd DiscoveryEvent event String url event getServiceName if url null try URI uri new URI url
private void doAdvertizeSelf if selfService null String payload getType payload started get ALIVE DEAD payload DELIMITER DELIMITER payload selfService try byte data payload getBytes DatagramPacket packet new DatagramPacket data data length sockAddress mcast send packet catch IOException e if reportAdvertizeFailed reportAdvertizeFailed false LOG error payload e if equals e getMessage
Override public void serviceFailed DiscoveryEvent devent throws IOException final SimpleDiscoveryEvent sevent SimpleDiscoveryEvent devent if running get sevent failed compareAndSet false true listener onServiceRemove sevent taskRunner execute new Runnable Override public void run SimpleDiscoveryEvent event new SimpleDiscoveryEvent sevent if event connectTime minConnectTime System currentTimeMillis
public void addService JmDNS jmDNS String type String name
public void removeService JmDNS jmDNS String type String name
newTransports newTransports trim if newTransports length isUpdateURIsSupported List URI list new ArrayList URI StringTokenizer tokenizer new StringTokenizer newTransports while tokenizer hasMoreTokens String str tokenizer nextToken try URI uri new URI str list add uri catch Exception e LOG error str e if list isEmpty false try updateURIs rebalance list toArray new URI list size catch IOException e
else if command MessagePull MessagePull pullRequest MessagePull command if pullRequest getTimeout MessageDispatch dispatch new MessageDispatch dispatch setConsumerId pullRequest getConsumerId dispatch setDestination pullRequest getDestination processCommand dispatch return for int i disposed i try Transport transport connectedTransport get long start System currentTimeMillis boolean timedout false while transport null disposed connectionFailure null Thread currentThread isInterrupted willReconnect LOG trace command
error new IOException timeout else if willReconnect error new IOException maxReconnectAttempts else error new IOException break Tracked tracked null try tracked stateTracker track command catch IOException ioe LOG debug command ioe synchronized requestMap if tracked null tracked isWaitingForResponse requestMap put Integer valueOf command getCommandId tracked else if tracked null command isResponseRequired
else error new IOException break Tracked tracked null try tracked stateTracker track command catch IOException ioe LOG debug command ioe synchronized requestMap if tracked null tracked isWaitingForResponse requestMap put Integer valueOf command getCommandId tracked else if tracked null command isResponseRequired requestMap put Integer valueOf command getCommandId command try transport oneway command
private void doUpdateURIsFromDisk String fileURL getUpdateURIsURL if fileURL null BufferedReader in null String newUris null StringBuffer buffer new StringBuffer try in new BufferedReader getURLStream fileURL while true String line in readLine if line null break buffer append line newUris buffer toString catch IOException ioe
doUpdateURIsFromDisk if disposed connectionFailure null reconnectMutex notifyAll if connectedTransport get null doRebalance priorityBackupAvailable disposed connectionFailure null return false else connectList getConnectList if connectList isEmpty failure new IOException else if doRebalance if connectedToPriority compareURIs connectList get connectedTransportURI doRebalance false return false else
if priorityBackup backup backups isEmpty ArrayList BackupTransport l new ArrayList BackupTransport backups if randomize Collections shuffle l BackupTransport bt l remove backups remove bt transport bt getTransport uri bt getUri processCommand bt getBrokerInfo if priorityBackup priorityBackupAvailable Transport old this connectedTransport getAndSet null if old null disposeTransport old priorityBackupAvailable false if transport null firstConnection connectFailures initialReconnectDelay disposed
Iterator URI iter connectList iterator while transport null iter hasNext connectedTransport get null disposed try SslContext setCurrentSslContext brokerSslContext if transport null uri addExtraQueryOptions iter next transport TransportFactory compositeConnect uri LOG debug connectFailures uri transport setTransportListener createTransportListener transport transport start if started firstConnection restoreTransport transport LOG debug reconnectDelay initialReconnectDelay connectedTransportURI uri
try SslContext setCurrentSslContext brokerSslContext if transport null uri addExtraQueryOptions iter next transport TransportFactory compositeConnect uri LOG debug connectFailures uri transport setTransportListener createTransportListener transport transport start if started firstConnection restoreTransport transport LOG debug reconnectDelay initialReconnectDelay connectedTransportURI uri connectedTransport set transport connectedToPriority isPriority connectedTransportURI
transport TransportFactory compositeConnect uri LOG debug connectFailures uri transport setTransportListener createTransportListener transport transport start if started firstConnection restoreTransport transport LOG debug reconnectDelay initialReconnectDelay connectedTransportURI uri connectedTransport set transport connectedToPriority isPriority connectedTransportURI reconnectMutex notifyAll connectFailures synchronized listenerMutex if transportListener null
restoreTransport transport LOG debug reconnectDelay initialReconnectDelay connectedTransportURI uri connectedTransport set transport connectedToPriority isPriority connectedTransportURI reconnectMutex notifyAll connectFailures synchronized listenerMutex if transportListener null try listenerMutex wait catch InterruptedException ex if transportListener null transportListener transportResumed
connectedToPriority isPriority connectedTransportURI reconnectMutex notifyAll connectFailures synchronized listenerMutex if transportListener null try listenerMutex wait catch InterruptedException ex if transportListener null transportListener transportResumed else LOG debug if firstConnection firstConnection false LOG info uri
private void doDelay if reconnectDelay synchronized sleepMutex
boolean result false if first null second null return result if first getPort second getPort InetAddress firstAddr null InetAddress secondAddr null try firstAddr InetAddress getByName first getHost secondAddr InetAddress getByName second getHost if firstAddr equals secondAddr result true catch IOException e if firstAddr null LOG error first e else
else if transports isEmpty else Iterator FanoutTransportHandler iter transports iterator while iter hasNext disposed long now System currentTimeMillis FanoutTransportHandler fanoutHandler iter next if fanoutHandler transport null continue if fanoutHandler reconnectDate fanoutHandler reconnectDate now if closestReconnectDate fanoutHandler reconnectDate closestReconnectDate closestReconnectDate fanoutHandler reconnectDate continue URI uri fanoutHandler uri try
if closestReconnectDate fanoutHandler reconnectDate closestReconnectDate closestReconnectDate fanoutHandler reconnectDate continue URI uri fanoutHandler uri try LOG debug this LOG debug uri Transport t TransportFactory compositeConnect uri fanoutHandler transport t t setTransportListener fanoutHandler if started restoreTransport fanoutHandler LOG debug fanoutHandler reconnectDelay initialReconnectDelay fanoutHandler connectFailures
URI uri fanoutHandler uri try LOG debug this LOG debug uri Transport t TransportFactory compositeConnect uri fanoutHandler transport t t setTransportListener fanoutHandler if started restoreTransport fanoutHandler LOG debug fanoutHandler reconnectDelay initialReconnectDelay fanoutHandler connectFailures if primary null primary fanoutHandler connectedCount
catch Exception e LOG debug uri e if fanoutHandler transport null ServiceSupport dispose fanoutHandler transport fanoutHandler transport null if maxReconnectAttempts fanoutHandler connectFailures maxReconnectAttempts LOG error fanoutHandler connectFailures connectionFailure e reconnectMutex notifyAll return false else if useExponentialBackOff fanoutHandler reconnectDelay backOffMultiplier if fanoutHandler reconnectDelay maxReconnectDelay fanoutHandler reconnectDelay maxReconnectDelay
Override public void oneway Object o throws IOException final Command command Command o try synchronized reconnectMutex while connectedCount minAckCount disposed connectionFailure null
public void addBuffer int commandId Object buffer if LOG isDebugEnabled
else if command getDataStructureType ReplayCommand DATA_STRUCTURE_TYPE replayCommands ReplayCommand command return int actualCounter command getCommandId boolean valid expectedCounter actualCounter if valid synchronized commands int nextCounter actualCounter boolean empty commands isEmpty if empty Command nextAvailable commands first nextCounter nextAvailable getCommandId try boolean keep replayStrategy onDroppedPackets this expectedCounter actualCounter nextCounter if keep
protected void onMissingResponse Command command FutureResponse response
Override protected void doStop ServiceStopper stopper throws Exception if LOG isDebugEnabled LOG debug this if socket null if closeAsync final CountDownLatch latch new CountDownLatch final TaskRunnerFactory taskRunnerFactory new TaskRunnerFactory taskRunnerFactory execute new Runnable Override public void run LOG trace socket try socket close LOG debug socket catch IOException e if LOG isDebugEnabled
catch IOException e if LOG isDebugEnabled LOG debug socket e finally latch countDown try latch await TimeUnit SECONDS catch InterruptedException e Thread currentThread interrupt finally taskRunnerFactory shutdownNow else LOG trace socket try
LOG debug socket e finally latch countDown try latch await TimeUnit SECONDS catch InterruptedException e Thread currentThread interrupt finally taskRunnerFactory shutdownNow else LOG trace socket try socket close LOG debug socket
SocketAddress address channel receive readBuffer readBuffer flip if readBuffer limit continue receiveCounter from headerMarshaller createEndpoint readBuffer address int remaining readBuffer remaining byte data new byte remaining readBuffer get data DataInputStream dataIn new DataInputStream new ByteArrayInputStream data answer Command wireFormat unmarshal dataIn break if answer null answer setFrom from if LOG isDebugEnabled
public Command read throws IOException Command answer null Endpoint from null synchronized readLock while true DatagramPacket datagram createDatagramPacket channel receive datagram receiveCounter DataInputStream dataIn new DataInputStream new ByteArrayInputStream datagram getData datagram getLength from headerMarshaller createEndpoint datagram dataIn answer Command wireFormat unmarshal dataIn break if answer null answer setFrom from if LOG isDebugEnabled
public void oneway Object command SocketAddress address throws IOException if LOG isDebugEnabled
try Command command commandChannel read doConsume command catch AsynchronousCloseException e try stop catch Exception e2 LOG warn this e2 e2 catch SocketException e LOG debug e e try stop catch Exception e2 LOG warn this e2 e2 catch EOFException e
LOG debug e e try stop catch Exception e2 LOG warn this e2 e2 catch EOFException e LOG debug e e try stop catch Exception e2 LOG warn this e2 e2 catch Exception e try stop catch Exception e2
protected void bind DatagramSocket socket SocketAddress localAddress throws IOException channel configureBlocking true if LOG isDebugEnabled
protected void processInboundConnection Command command DatagramEndpoint endpoint DatagramEndpoint command getFrom if LOG isDebugEnabled
LOG debug this endpoint command Transport transport null synchronized transports transport transports get endpoint if transport null if usingWireFormatNegotiation command isWireFormatInfo LOG error command getFrom command else if LOG isDebugEnabled LOG debug try transport createTransport command endpoint transport configureTransport transport transports put endpoint transport catch IOException e
private void fireEvent final int oldPercentUsage final int newPercentUsage if debug
Override public void run running true MessageConsumer consumer null String threadName Thread currentThread getName
if msg null LOG info threadName msg TextMessage TextMessage msg getText msg getJMSMessageID if bytesAsText msg BytesMessage long length BytesMessage msg getBodyLength byte bytes new byte int length BytesMessage msg readBytes bytes LOG info new String bytes received else if breakOnNull break if session getTransacted if batchSize received received batchSize LOG info threadName transactions session commit
else if breakOnNull break if session getTransacted if batchSize received received batchSize LOG info threadName transactions session commit else if session getAcknowledgeMode Session CLIENT_ACKNOWLEDGE if batchSize received received batchSize LOG info batchSize received msg acknowledge if sleep Thread sleep sleep catch Exception e e printStackTrace
if batchSize received received batchSize LOG info threadName transactions session commit else if session getAcknowledgeMode Session CLIENT_ACKNOWLEDGE if batchSize received received batchSize LOG info batchSize received msg acknowledge if sleep Thread sleep sleep catch Exception e e printStackTrace finally if finished null finished countDown if consumer null
public static boolean setProperty Object target String name Object value try Class clazz target getClass if target SSLServerSocket clazz SSLServerSocket class Method setter findSetterMethod clazz name if setter null return false setter setAccessible true if value null value getClass setter getParameterTypes setter invoke target value else setter invoke target convert value setter getParameterTypes return true catch Exception e
if startClass stopClass addFields target startClass getSuperclass stopClass map Field fields startClass getDeclaredFields for Field field fields if Modifier isStatic field getModifiers Modifier isTransient field getModifiers Modifier isPrivate field getModifiers continue try field setAccessible true Object o field get target if o null o getClass isArray try o Arrays asList Object o catch Exception e map put field getName o catch Exception e
public void run MessageProducer producer null String threadName Thread currentThread getName try producer session createProducer destination producer setDeliveryMode persistent DeliveryMode PERSISTENT DeliveryMode NON_PERSISTENT producer setTimeToLive msgTTL initPayLoad running true
long tStart System currentTimeMillis if runIndefinitely while running synchronized this paused await sendMessage producer threadName sentCount incrementAndGet else for sentCount set sentCount get messageCount running sentCount incrementAndGet synchronized this paused await sendMessage producer threadName LOG info threadName this getSentCount long tEnd System currentTimeMillis long elapsed tEnd tStart
if runIndefinitely while running synchronized this paused await sendMessage producer threadName sentCount incrementAndGet else for sentCount set sentCount get messageCount running sentCount incrementAndGet synchronized this paused await sendMessage producer threadName LOG info threadName this getSentCount long tEnd System currentTimeMillis long elapsed tEnd tStart LOG info threadName elapsed
private void sendMessage MessageProducer producer String threadName throws Exception Message message createMessage sentCount get producer send message if LOG isDebugEnabled
protected void logError Object service Throwable e Logger log LoggerFactory getLogger service getClass
public static List Runnable shutdownNow ExecutorService executorService List Runnable answer null if executorService isShutdown
Test public void testgetNextTimeDayOfWeek throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER
Test public void testgetNextTimeDayOfWeek throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
Test public void testgetNextTimeDayOfWeekVariant throws MessageFormatException Calendar current Calendar getInstance current set Calendar MARCH
Test public void testgetNextTimeDayOfWeekVariant throws MessageFormatException Calendar current Calendar getInstance current set Calendar MARCH LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar FRIDAY result get Calendar DAY_OF_WEEK assertEquals Calendar MARCH result get Calendar MONTH assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar MARCH
result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar FRIDAY result get Calendar DAY_OF_WEEK assertEquals Calendar MARCH result get Calendar MONTH assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar MARCH LOG debug current getTime next CronParser getNextScheduledTime test current getTimeInMillis result Calendar getInstance result setTimeInMillis next
Test public void testgetNextTimeMonthVariant throws MessageFormatException Calendar current Calendar getInstance current set Calendar MARCH
Test public void testgetNextTimeMonthVariant throws MessageFormatException Calendar current Calendar getInstance current set Calendar MARCH LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals Calendar APRIL result get Calendar MONTH assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar SUNDAY result get Calendar DAY_OF_WEEK assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar APRIL
result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals Calendar APRIL result get Calendar MONTH assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar SUNDAY result get Calendar DAY_OF_WEEK assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar APRIL LOG debug current getTime next CronParser getNextScheduledTime test current getTimeInMillis result Calendar getInstance result setTimeInMillis next
current set Calendar APRIL LOG debug current getTime next CronParser getNextScheduledTime test current getTimeInMillis result Calendar getInstance result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar SUNDAY result get Calendar DAY_OF_WEEK assertEquals Calendar MAY result get Calendar MONTH assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar MAY
result setTimeInMillis next LOG debug result getTime assertEquals result get Calendar SECOND assertEquals result get Calendar MINUTE assertEquals result get Calendar HOUR_OF_DAY assertEquals result get Calendar DAY_OF_MONTH assertEquals Calendar SUNDAY result get Calendar DAY_OF_WEEK assertEquals Calendar MAY result get Calendar MONTH assertEquals result get Calendar YEAR current Calendar getInstance current set Calendar MAY LOG debug current getTime next CronParser getNextScheduledTime test current getTimeInMillis result Calendar getInstance result setTimeInMillis next
Test public void testgetNextTimeMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER
Test public void testgetNextTimeMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
Test public void testgetStartNextMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar DECEMBER
Test public void testgetStartNextMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar DECEMBER LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
Test public void testgetNextStartCurrMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar DECEMBER
Test public void testgetNextStartCurrMonth throws MessageFormatException Calendar current Calendar getInstance current set Calendar DECEMBER LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
Test public void testgetNextTimeDays throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER
Test public void testgetNextTimeDays throws MessageFormatException Calendar current Calendar getInstance current set Calendar NOVEMBER LOG debug current getTime String test long next CronParser getNextScheduledTime test current getTimeInMillis Calendar result Calendar getInstance result setTimeInMillis next
Test public void testgetNextTimeMinutes throws MessageFormatException String test long current Calendar calender Calendar getInstance calender setTimeInMillis current int startHours calender get Calendar HOUR_OF_DAY int startMinutes calender get Calendar MINUTE
Test public void testgetNextTimeMinutes throws MessageFormatException String test long current Calendar calender Calendar getInstance calender setTimeInMillis current int startHours calender get Calendar HOUR_OF_DAY int startMinutes calender get Calendar MINUTE LOG debug calender getTime long next CronParser getNextScheduledTime test current calender setTimeInMillis next
catch Exception e e printStackTrace Thread waitForSpaceThread new Thread new Runnable Override public void run try startLatch await while running get memUsage waitForSpace catch Exception e e printStackTrace removeThread start addThread start if useWaitForSpaceThread
Thread waitForSpaceThread new Thread new Runnable Override public void run try startLatch await while running get memUsage waitForSpace catch Exception e e printStackTrace removeThread start addThread start if useWaitForSpaceThread waitForSpaceThread start Random r new Random seed startLatch countDown
Test public void verifyInflightAttribute throws Exception String result executeQuery
Test public void verifyInflightAttribute throws Exception String result executeQuery LOG info result assertFalse result contains result executeQuery
Test public void testInvoke throws Exception String result executeQuery assertTrue result contains result executeQuery
Test public void testInvoke throws Exception String result executeQuery assertTrue result contains result executeQuery LOG info result assertTrue result contains assertTrue result contains result executeQuery assertTrue result contains result executeQuery
assertTrue result contains result executeQuery LOG info result assertTrue result contains assertTrue result contains result executeQuery assertTrue result contains result executeQuery LOG info result assertTrue result contains result executeQuery assertTrue result contains result executeQuery assertTrue result contains result executeQuery
protected void createServer LOG info if jettyOptions getConfig null try
Override protected void doPut HttpServletRequest req HttpServletResponse resp throws ServletException IOException String group req getPathInfo String service req getHeader
Override protected void doDelete HttpServletRequest req HttpServletResponse resp throws ServletException IOException String group req getPathInfo String service req getHeader
synchronized private void doRegister String service String url registryURL try HttpPut method new HttpPut url method addHeader service ResponseHandler String handler new BasicResponseHandler String responseBody httpClient execute method handler
SuppressWarnings synchronized private void doUnRegister String service String url registryURL try HttpDelete method new HttpDelete url method addHeader service ResponseHandler String handler new BasicResponseHandler String responseBody httpClient execute method handler
synchronized private Set String doLookup long freshness String url registryURL freshness try HttpGet method new HttpGet url ResponseHandler String handler new BasicResponseHandler String response httpClient execute method handler
String url registryURL freshness try HttpGet method new HttpGet url ResponseHandler String handler new BasicResponseHandler String response httpClient execute method handler LOG debug url response Set String rc new HashSet String Scanner scanner new Scanner response while scanner hasNextLine String service scanner nextLine if service trim length rc add service scanner close return rc catch Exception e
public void serviceFailed DiscoveryEvent devent throws IOException final SimpleDiscoveryEvent event SimpleDiscoveryEvent devent if event failed compareAndSet false true discoveryListener get onServiceRemove event if event removed get Thread thread new Thread public void run if event connectTime minConnectTime System currentTimeMillis
public void serviceFailed DiscoveryEvent devent throws IOException final SimpleDiscoveryEvent event SimpleDiscoveryEvent devent if event failed compareAndSet false true discoveryListener get onServiceRemove event if event removed get Thread thread new Thread public void run if event connectTime minConnectTime System currentTimeMillis LOG debug event event connectFailures if maxReconnectAttempts event connectFailures maxReconnectAttempts
if status HttpStatus SC_REQUEST_TIMEOUT LOG debug try Thread sleep catch InterruptedException e onException new InterruptedIOException Thread currentThread interrupt break else onException new IOException remoteUrl answer break else receiveCounter DataInputStream stream createDataInputStream answer Object command getTextWireFormat unmarshal stream
Override public void onWebSocketClose int statusCode String reason try if protocolLock tryLock protocolLock tryLock ORDERLY_CLOSE_TIMEOUT TimeUnit SECONDS
Override public void onWebSocketClose int arg0 String arg1 try if protocolLock tryLock protocolLock tryLock ORDERLY_CLOSE_TIMEOUT TimeUnit SECONDS
Override public void onWebSocketClose int arg0 String arg1 try if protocolLock tryLock protocolLock tryLock ORDERLY_CLOSE_TIMEOUT TimeUnit SECONDS
brokerOne waitUntilStarted ActiveMQConnectionFactory secondProducerConnectionFactory createBrokerTwoHttpConnectionFactory ActiveMQConnectionFactory consumerConnectionFactory createBrokerOneHttpConnectionFactory MessageConsumer consumer createConsumer consumerConnectionFactory AtomicInteger counter createConsumerCounter consumerConnectionFactory waitForConsumerToArrive counter Connection connection secondProducerConnectionFactory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT final int expectedMessagesReceived for int i i expectedMessagesReceived i Message message session createMessage producer send message if i
Connection connection secondProducerConnectionFactory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT final int expectedMessagesReceived for int i i expectedMessagesReceived i Message message session createMessage producer send message if i LOG info i for int i i expectedMessagesReceived i Message message consumer receive if message null fail if i
protected void consumeMessage Message message List Message messageList super consumeMessage message messageList if message TextMessage TextMessage textMessage TextMessage class cast message try
private void doTestTextMessageCompression throws Exception ActiveMQTextMessage tcpMessage ActiveMQTextMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQTextMessage httpMessage ActiveMQTextMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage getText httpMessage getText
ActiveMQTextMessage tcpMessage ActiveMQTextMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQTextMessage httpMessage ActiveMQTextMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage getText httpMessage getText LOG info tcpMessage toString
private void doTestBytesMessageCompression throws Exception ActiveMQBytesMessage tcpMessage ActiveMQBytesMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQBytesMessage httpMessage ActiveMQBytesMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage readUTF httpMessage readUTF
ActiveMQBytesMessage tcpMessage ActiveMQBytesMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQBytesMessage httpMessage ActiveMQBytesMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage readUTF httpMessage readUTF LOG info tcpMessage toString
private void doTestStreamMessageCompression throws Exception ActiveMQStreamMessage tcpMessage ActiveMQStreamMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQStreamMessage httpMessage ActiveMQStreamMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage readString httpMessage readString
ActiveMQStreamMessage tcpMessage ActiveMQStreamMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQStreamMessage httpMessage ActiveMQStreamMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage readString httpMessage readString LOG info tcpMessage toString
private void doTestMapMessageCompression throws Exception ActiveMQMapMessage tcpMessage ActiveMQMapMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQMapMessage httpMessage ActiveMQMapMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage getString httpMessage getString
ActiveMQMapMessage tcpMessage ActiveMQMapMessage tcpConsumer receive TimeUnit SECONDS toMillis ActiveMQMapMessage httpMessage ActiveMQMapMessage httpConsumer receive TimeUnit SECONDS toMillis assertNotNull tcpMessage assertNotNull httpMessage ByteSequence tcpContent tcpMessage getContent ByteSequence httpContent httpMessage getContent assertNotNull tcpContent assertNotNull httpContent assertTrue tcpMessage isCompressed assertTrue httpMessage isCompressed int tcpCompressedSize tcpContent getLength int httpCompressedSize httpContent getLength assertEquals tcpContent getLength httpContent getLength assertEquals tcpMessage getString httpMessage getString LOG info tcpMessage toString
Test timeout public void testSendReceiveAfterPause throws Exception final CountDownLatch failed new CountDownLatch Connection connection factory createConnection connection start connection setExceptionListener new ExceptionListener Override public void onException JMSException exception
MQTTFrame frame null try frame MQTTFrame wireFormat unmarshal new ByteSequence data offset length catch IOException e LOG error e getMessage connection close try switch frame messageType case PINGREQ TYPE PINGREQ ping new PINGREQ decode frame LOG info ping sendFrame PING_RESP_FRAME break case PINGRESP TYPE LOG info break case CONNACK TYPE CONNACK connAck new CONNACK decode frame
try LOG info wsStompConnection keepAlive catch Exception e TimeUnit SECONDS TimeUnit SECONDS sleep String frame getTestName Stomp NULL wsStompConnection sendRawFrame frame incoming wsStompConnection receive TimeUnit SECONDS assertTrue incoming startsWith service shutdownNow service awaitTermination TimeUnit SECONDS try wsStompConnection sendFrame new StompFrame Stomp Commands DISCONNECT catch Exception ex
Test timeout public void testEscapedHeaders throws Exception String connectFrame Stomp NULL wsStompConnection sendRawFrame connectFrame String incoming wsStompConnection receive TimeUnit SECONDS assertTrue incoming startsWith String message getTestName Stomp NULL wsStompConnection sendRawFrame message String frame getTestName Stomp NULL wsStompConnection sendRawFrame frame incoming wsStompConnection receive TimeUnit SECONDS assertTrue incoming startsWith assertTrue incoming indexOf try wsStompConnection sendFrame new StompFrame Stomp Commands DISCONNECT catch Exception ex
public void assertBeanMarshalls Object original throws IOException super assertBeanMarshalls original String xml getXStreamWireFormat marshalText original LOG info original getClass getName
Override public boolean login throws LoginException succeeded true if credentialsInvalidate PasswordCallback passwordCallback new PasswordCallback false try callbackHandler handle new Callback passwordCallback if passwordCallback getPassword null if debug LOG debug succeeded false passwordCallback clearPassword catch IOException ioe catch UnsupportedCallbackException uce if debug
userSearchSubtreeBool Boolean valueOf getLDAPPropertyValue USER_SEARCH_SUBTREE booleanValue try String filter userSearchMatchingFormat format new String doRFC2254Encoding username SearchControls constraints new SearchControls if userSearchSubtreeBool constraints setSearchScope SearchControls SUBTREE_SCOPE else constraints setSearchScope SearchControls ONELEVEL_SCOPE List String list new ArrayList String if isLoginPropertySet USER_ROLE_NAME list add getLDAPPropertyValue USER_ROLE_NAME String attribs new String list size list toArray attribs constraints setReturningAttributes attribs if log isDebugEnabled
log debug log debug log debug getLDAPPropertyValue USER_BASE log debug filter NamingEnumeration SearchResult results context search getLDAPPropertyValue USER_BASE filter constraints if results null results hasMore log warn username throw new FailedLoginException username SearchResult result results next if results hasMore String dn if result isRelative log debug result getName NameParser parser context getNameParser Name contextName parser parse context getNameInNamespace
log debug result getName NameParser parser context getNameParser Name contextName parser parse context getNameInNamespace Name baseName parser parse getLDAPPropertyValue USER_BASE Name entryName parser parse result getName Name name contextName addAll baseName name name addAll entryName dn name toString else log debug result getName try URI uri new URI result getName String path uri getPath if path startsWith dn path substring
expandRolesBool Boolean valueOf getLDAPPropertyValue EXPAND_ROLES booleanValue if list null list new ArrayList String if isLoginPropertySet ROLE_NAME return list String filter roleSearchMatchingFormat format new String doRFC2254Encoding dn doRFC2254Encoding username SearchControls constraints new SearchControls if roleSearchSubtreeBool constraints setSearchScope SearchControls SUBTREE_SCOPE else constraints setSearchScope SearchControls ONELEVEL_SCOPE if log isDebugEnabled log debug log debug log debug getLDAPPropertyValue ROLE_BASE
Hashtable String String env new Hashtable String String env put Context INITIAL_CONTEXT_FACTORY getLDAPPropertyValue INITIAL_CONTEXT_FACTORY if isLoginPropertySet CONNECTION_USERNAME env put Context SECURITY_PRINCIPAL getLDAPPropertyValue CONNECTION_USERNAME else throw new NamingException if isLoginPropertySet CONNECTION_PASSWORD env put Context SECURITY_CREDENTIALS getLDAPPropertyValue CONNECTION_PASSWORD else throw new NamingException env put Context SECURITY_PROTOCOL getLDAPPropertyValue CONNECTION_PROTOCOL env put Context PROVIDER_URL getLDAPPropertyValue CONNECTION_URL env put Context SECURITY_AUTHENTICATION getLDAPPropertyValue AUTHENTICATION context new InitialDirContext env catch NamingException e
throw new LoginException ioe getMessage catch UnsupportedCallbackException uce throw new LoginException uce getMessage user NameCallback callbacks getName char tmpPassword PasswordCallback callbacks getPassword if tmpPassword null tmpPassword new char if user null throw new FailedLoginException String password users getProperty user if password null throw new FailedLoginException if password equals new String tmpPassword throw new FailedLoginException succeeded true
public synchronized ReloadableProperties obtained if reloadTime key isReload hasModificationAfter reloadTime props new Properties try load key file props invertedProps null invertedValueProps null regexpProps null if key isDebug
public void doStart throws Exception LOG info String sql getStatements getLockCreateStatement
while true try connection dataSource getConnection connection setAutoCommit false lockCreateStatement connection prepareStatement sql lockCreateStatement execute break catch Exception e try if isStopping throw new Exception e e if exceptionHandler null try exceptionHandler handle e catch Throwable handlerException
connection dataSource getConnection connection setAutoCommit false lockCreateStatement connection prepareStatement sql lockCreateStatement execute break catch Exception e try if isStopping throw new Exception e e if exceptionHandler null try exceptionHandler handle e catch Throwable handlerException LOG error exceptionHandler getClass getCanonicalName handlerException e handlerException else
if exceptionHandler null try exceptionHandler handle e catch Throwable handlerException LOG error exceptionHandler getClass getCanonicalName handlerException e handlerException else LOG debug e e finally if null connection try connection rollback catch SQLException e1 LOG debug e1 e1 try connection close
else LOG debug e e finally if null connection try connection rollback catch SQLException e1 LOG debug e1 e1 try connection close catch SQLException e1 LOG debug e1 e1 connection null finally if null lockCreateStatement
public void doStop ServiceStopper stopper throws Exception try if lockCreateStatement null lockCreateStatement cancel catch SQLFeatureNotSupportedException e LOG warn dataSource e try if lockUpdateStatement null lockUpdateStatement cancel catch SQLFeatureNotSupportedException e LOG warn dataSource e if connection null try connection rollback catch SQLException sqle
boolean result false try lockUpdateStatement connection prepareStatement getStatements getLockUpdateStatement lockUpdateStatement setLong System currentTimeMillis setQueryTimeout lockUpdateStatement int rows lockUpdateStatement executeUpdate if rows result true catch Exception e LOG error e e finally if lockUpdateStatement null try lockUpdateStatement close catch SQLException e
Override public void addMessage final ConnectionContext context final Message message throws IOException MessageId messageId message getMessageId if audit null audit isDuplicate message if LOG isDebugEnabled
public void setLockDataSource DataSource dataSource this lockDataSource dataSource
protected JDBCAdapter createAdapter throws IOException adapter JDBCAdapter loadAdapter adapterFactoryFinder if adapter null adapter new DefaultJDBCAdapter
private Object loadAdapter FactoryFinder finder String kind throws IOException Object adapter null TransactionContext c getTransactionContext try try String dirverName c getConnection getMetaData getDriverName dirverName dirverName replaceAll toLowerCase Locale ENGLISH try adapter finder newInstance dirverName
Override public Locker createDefaultLocker throws IOException Locker locker Locker loadAdapter lockFactoryFinder if locker null locker new DefaultDatabaseLocker
private void reportLeasOwnerShipAndDuration Connection connection throws SQLException PreparedStatement statement null try statement connection prepareStatement getStatements getLeaseOwnerStatement ResultSet resultSet statement executeQuery while resultSet next
Override public boolean keepAlive throws IOException boolean result false final String sql getStatements getLeaseUpdateStatement
connection dataSource getConnection if networkTimeout connection setNetworkTimeout Executors newSingleThreadExecutor networkTimeout if persistenceAdapter isChangeAutoCommitAllowed boolean autoCommit inTx if connection getAutoCommit autoCommit LOG trace autoCommit connection connection setAutoCommit autoCommit connection new UnlockOnCloseConnection connection toLock catch SQLException e JDBCPersistenceAdapter log e inTx false try toLock unlock catch IllegalMonitorStateException oops
private void executeStatement TransactionContext transactionContext String createStatement boolean ignoreStatementExecutionFailure throws IOException Statement statement null try
Override public void doDeleteOldMessages TransactionContext c throws SQLException IOException PreparedStatement s null try LOG debug this statements getDeleteOldMessagesStatementWithPriority s c getExclusiveConnection prepareStatement this statements getDeleteOldMessagesStatementWithPriority int priority priorityIterator s setInt priority s setInt priority int i s executeUpdate
String sql getStatements getLockCreateStatement statement connection prepareStatement sql if statement getMetaData null ResultSet rs statement executeQuery rs next else statement execute break catch Exception e if isStopping throw new Exception e e if exceptionHandler null try exceptionHandler handle e catch Throwable handlerException
if statement getMetaData null ResultSet rs statement executeQuery rs next else statement execute break catch Exception e if isStopping throw new Exception e e if exceptionHandler null try exceptionHandler handle e catch Throwable handlerException LOG error exceptionHandler getClass getCanonicalName handlerException e handlerException else
public void addMessage final ConnectionContext context final Message message throws IOException final MessageId id message getMessageId final boolean debug LOG isDebugEnabled message incrementReferenceCount final RecordLocation location peristenceAdapter writeCommand message message isResponseRequired if context isInTransaction if debug
message incrementReferenceCount final RecordLocation location peristenceAdapter writeCommand message message isResponseRequired if context isInTransaction if debug LOG debug id location addMessage context message location else if debug LOG debug id location synchronized this inFlightTxLocations add location transactionStore addMessage this message location context getTransaction addSynchronization new Synchronization public void afterCommit throws Exception if debug
addMessage context message location else if debug LOG debug id location synchronized this inFlightTxLocations add location transactionStore addMessage this message location context getTransaction addSynchronization new Synchronization public void afterCommit throws Exception if debug LOG debug id location synchronized JournalMessageStore this inFlightTxLocations remove location addMessage context message location public void afterRollback throws Exception
public void removeMessage ConnectionContext context final MessageAck ack throws IOException final boolean debug LOG isDebugEnabled JournalQueueAck remove new JournalQueueAck remove setDestination destination remove setMessageAck ack final RecordLocation location peristenceAdapter writeCommand remove ack isResponseRequired if context isInTransaction if debug
remove setMessageAck ack final RecordLocation location peristenceAdapter writeCommand remove ack isResponseRequired if context isInTransaction if debug LOG debug ack getLastMessageId location removeMessage ack location else if debug LOG debug ack getLastMessageId location synchronized this inFlightTxLocations add location transactionStore removeMessage this ack location context getTransaction addSynchronization new Synchronization public void afterCommit throws Exception if debug
removeMessage ack location else if debug LOG debug ack getLastMessageId location synchronized this inFlightTxLocations add location transactionStore removeMessage this ack location context getTransaction addSynchronization new Synchronization public void afterCommit throws Exception if debug LOG debug ack getLastMessageId location synchronized JournalMessageStore this inFlightTxLocations remove location removeMessage ack location public void afterRollback throws Exception
catch Throwable e LOG warn e getMessage e size message getSize message decrementReferenceCount if size maxCheckpointMessageAddSize persitanceAdapter commitTransaction context persitanceAdapter beginTransaction context size persitanceAdapter commitTransaction context persitanceAdapter beginTransaction context Iterator MessageAck iterator cpRemovedMessageLocations iterator while iterator hasNext try MessageAck ack iterator next longTermStore removeMessage transactionTemplate getContext ack
futureTasks add task checkpointExecutor execute task catch Exception e LOG error e e Iterator JournalTopicMessageStore iterator topics values iterator while iterator hasNext try final JournalTopicMessageStore ms iterator next FutureTask RecordLocation task new FutureTask RecordLocation new Callable RecordLocation Override public RecordLocation call throws Exception return ms checkpoint futureTasks add task checkpointExecutor execute task
Iterator JournalTopicMessageStore iterator topics values iterator while iterator hasNext try final JournalTopicMessageStore ms iterator next FutureTask RecordLocation task new FutureTask RecordLocation new Callable RecordLocation Override public RecordLocation call throws Exception return ms checkpoint futureTasks add task checkpointExecutor execute task catch Exception e LOG error e e try for Iterator FutureTask RecordLocation iter futureTasks iterator iter hasNext FutureTask RecordLocation ft iter next
Override public RecordLocation call throws Exception return ms checkpoint futureTasks add task checkpointExecutor execute task catch Exception e LOG error e e try for Iterator FutureTask RecordLocation iter futureTasks iterator iter hasNext FutureTask RecordLocation ft iter next RecordLocation mark ft get if fullCheckpoint if mark null newMark null newMark compareTo mark newMark mark catch Throwable e
JournalTransaction command JournalTransaction c try switch command getType case JournalTransaction XA_PREPARE transactionStore replayPrepare command getTransactionId break case JournalTransaction XA_COMMIT case JournalTransaction LOCAL_COMMIT Tx tx transactionStore replayCommit command getTransactionId command getWasPrepared if tx null break tx getOperations for Iterator iter tx getOperations iterator iter hasNext TxOperation op TxOperation iter next if op operationType TxOperation ADD_OPERATION_TYPE op store replayAddMessage context Message op data if op operationType TxOperation REMOVE_OPERATION_TYPE op store replayRemoveMessage context MessageAck op data
tx getOperations for Iterator iter tx getOperations iterator iter hasNext TxOperation op TxOperation iter next if op operationType TxOperation ADD_OPERATION_TYPE op store replayAddMessage context Message op data if op operationType TxOperation REMOVE_OPERATION_TYPE op store replayRemoveMessage context MessageAck op data if op operationType TxOperation ACK_OPERATION_TYPE JournalTopicAck ack JournalTopicAck op data JournalTopicMessageStore op store replayAcknowledge context ack getClientId ack getSubscritionName ack getMessageId transactionCounter break case JournalTransaction LOCAL_ROLLBACK case JournalTransaction XA_ROLLBACK transactionStore replayRollback command getTransactionId break default throw new IOException command getType
Override public void acknowledge ConnectionContext context String clientId String subscriptionName final MessageId messageId MessageAck originalAck throws IOException final boolean debug LOG isDebugEnabled JournalTopicAck ack new JournalTopicAck ack setDestination destination ack setMessageId messageId ack setMessageSequenceId messageId getBrokerSequenceId ack setSubscritionName subscriptionName ack setClientId clientId ack setTransactionId context getTransaction null context getTransaction getTransactionId null final RecordLocation location peristenceAdapter writeCommand ack false final SubscriptionKey key new SubscriptionKey clientId subscriptionName if context isInTransaction if debug
JournalTopicAck ack new JournalTopicAck ack setDestination destination ack setMessageId messageId ack setMessageSequenceId messageId getBrokerSequenceId ack setSubscritionName subscriptionName ack setClientId clientId ack setTransactionId context getTransaction null context getTransaction getTransactionId null final RecordLocation location peristenceAdapter writeCommand ack false final SubscriptionKey key new SubscriptionKey clientId subscriptionName if context isInTransaction if debug LOG debug messageId location acknowledge messageId location key else if debug
final RecordLocation location peristenceAdapter writeCommand ack false final SubscriptionKey key new SubscriptionKey clientId subscriptionName if context isInTransaction if debug LOG debug messageId location acknowledge messageId location key else if debug LOG debug messageId location synchronized this inFlightTxLocations add location transactionStore acknowledge this ack location context getTransaction addSynchronization new Synchronization Override public void afterCommit throws Exception if debug
acknowledge messageId location key else if debug LOG debug messageId location synchronized this inFlightTxLocations add location transactionStore acknowledge this ack location context getTransaction addSynchronization new Synchronization Override public void afterCommit throws Exception if debug LOG debug messageId location synchronized JournalTopicMessageStore this inFlightTxLocations remove location acknowledge messageId location key Override public void afterRollback throws Exception
public static boolean setProperty Object target String name Object value try Class clazz target getClass if target SSLServerSocket clazz SSLServerSocket class Method setter findSetterMethod clazz name if setter null return false setter setAccessible true if value null value getClass setter getParameterTypes setter invoke target value else setter invoke target convert value setter getParameterTypes return true catch Exception e
Test timeout public void testTemporaryQueueWithMultipleConnectionUsers throws Exception Connection pooledConnection null Connection pooledConnection2 null Session session null Session session2 null Queue tempQueue null Queue normalQueue null pooledConnection pooledFactory createConnection session pooledConnection createSession false Session AUTO_ACKNOWLEDGE tempQueue session createTemporaryQueue
Test timeout public void testTemporaryQueueWithMultipleConnectionUsers throws Exception Connection pooledConnection null Connection pooledConnection2 null Session session null Session session2 null Queue tempQueue null Queue normalQueue null pooledConnection pooledFactory createConnection session pooledConnection createSession false Session AUTO_ACKNOWLEDGE tempQueue session createTemporaryQueue LOG info tempQueue getQueueName assertEquals countBrokerTemporaryQueues pooledConnection2 pooledFactory createConnection session2 pooledConnection2 createSession false Session AUTO_ACKNOWLEDGE normalQueue session2 createQueue
Test timeout public void testTemporaryQueueLeakAfterConnectionClose throws Exception Connection pooledConnection null Session session null Queue tempQueue null for int i i i pooledConnection pooledFactory createConnection session pooledConnection createSession false Session AUTO_ACKNOWLEDGE tempQueue session createTemporaryQueue
Test timeout public void testTemporaryTopicLeakAfterConnectionClose throws Exception Connection pooledConnection null Session session null Topic tempTopic null for int i i i pooledConnection pooledFactory createConnection session pooledConnection createSession false Session AUTO_ACKNOWLEDGE tempTopic session createTemporaryTopic
Test timeout public void testTemporaryQueueLeakAfterConnectionCloseWithConsumer throws Exception Connection pooledConnection null Session session null Queue tempQueue null for int i i i pooledConnection pooledFactory createConnection session pooledConnection createSession false Session AUTO_ACKNOWLEDGE tempQueue session createTemporaryQueue MessageConsumer consumer session createConsumer tempQueue consumer receiveNoWait
Test public void testConnectionFailures throws Exception final CountDownLatch failed new CountDownLatch Connection connection pooledConnFact createConnection
connection setExceptionListener new ExceptionListener Override public void onException JMSException exception LOG info failed countDown Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getTestName MessageProducer producer session createProducer queue brokerService stop assertTrue failed await TimeUnit SECONDS createBroker try producer send session createMessage fail catch JMSException ex
failed countDown Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getTestName MessageProducer producer session createProducer queue brokerService stop assertTrue failed await TimeUnit SECONDS createBroker try producer send session createMessage fail catch JMSException ex LOG info ex getMessage Connection connection2 pooledConnFact createConnection assertNotSame connection connection2
Test timeout public void testTempQueueIssue throws JMSException InterruptedException ActiveMQConnectionFactory factory new ActiveMQConnectionFactory final PooledConnectionFactory cf new PooledConnectionFactory cf setConnectionFactory factory Connection connection cf createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE
private void sendWithReplyToTemp ConnectionFactory cf String serviceQueue throws JMSException InterruptedException Connection con cf createConnection con start Session session con createSession false Session AUTO_ACKNOWLEDGE TemporaryQueue tempQueue session createTemporaryQueue TextMessage msg session createTextMessage msg setJMSReplyTo tempQueue MessageProducer producer session createProducer session createQueue serviceQueue producer send msg Thread sleep MessageConsumer consumer session createConsumer tempQueue Message replyMsg consumer receive
public void receiveAndRespondWithMessageIdAsCorrelationId ConnectionFactory connectionFactory String queueName throws JMSException Connection con connectionFactory createConnection Session session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer session createQueue queueName final javax jms Message inMessage consumer receive String requestMessageId inMessage getJMSMessageID
public void receiveAndRespondWithMessageIdAsCorrelationId ConnectionFactory connectionFactory String queueName throws JMSException Connection con connectionFactory createConnection Session session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer session createQueue queueName final javax jms Message inMessage consumer receive String requestMessageId inMessage getJMSMessageID LOG debug requestMessageId final TextMessage replyMessage session createTextMessage replyMessage setJMSCorrelationID inMessage getJMSMessageID final MessageProducer producer session createProducer inMessage getJMSReplyTo
conn setClientID conn start conn close catch IllegalStateException ise LOG error ise getMessage fail ise getMessage finally PooledConnectionFactory cf stop cf createPooledConnectionFactory conn cf createConnection conn setClientID try conn setClientID fail catch IllegalStateException ise
cf createPooledConnectionFactory conn cf createConnection conn setClientID try conn setClientID fail catch IllegalStateException ise LOG debug ise finally conn close PooledConnectionFactory cf stop cf createPooledConnectionFactory conn cf createConnection try conn start
Test timeout public void testAllSessionsAvailableOnConstrainedPool throws Exception PooledConnectionFactory cf new PooledConnectionFactory cf setConnectionFactory new ActiveMQConnectionFactory cf setMaxConnections cf setMaximumActiveSessionPerConnection cf setBlockIfSessionPoolIsFull false LinkedList Connection connections new LinkedList HashSet Session sessions new HashSet for int i i i Connection conn cf createConnection
public void sendMessages ConnectionFactory connectionFactory throws Exception for int i i NUM_MESSAGES i Connection connection connectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue QUEUE MessageProducer producer session createProducer destination String msgTo TextMessage message session createTextMessage msgTo producer send message connection close
Thread thread new Thread new Runnable Override public void run try ConnectionFactory connectionFactory new ActiveMQConnectionFactory connectionUri Connection connection connectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue QUEUE MessageConsumer consumer session createConsumer destination for int i i totalMessagesExpected i Message msg consumer receive if msg null return numReceived if numReceived
public void sendMessages ConnectionFactory connectionFactory throws Exception for int i i NUM_MESSAGES i Connection connection connectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue QUEUE MessageProducer producer session createProducer destination String msgTo TextMessage message session createTextMessage msgTo producer send message connection close
Thread thread new Thread new Runnable Override public void run try ConnectionFactory connectionFactory new ActiveMQConnectionFactory connectionUri Connection connection connectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue QUEUE MessageConsumer consumer session createConsumer destination for int i i NUM_MESSAGES i Message msg consumer receive if msg null return numReceived if numReceived
Override protected void configureMetadata if brokerService null metadata openwireVersion brokerService getStoreOpenWireVersion wireFormat setVersion metadata openwireVersion if LOG isDebugEnabled
try JournalCommand command load location KahaAddMessageCommand addMessage null switch command type case KAHA_UPDATE_MESSAGE_COMMAND addMessage KahaUpdateMessageCommand command getMessage break case KAHA_ADD_MESSAGE_COMMAND addMessage KahaAddMessageCommand command break default throw new IOException command type location if addMessage hasMessage throw new IOException location Message msg Message wireFormat unmarshal new DataInputStream addMessage getMessage newInput return msg catch Throwable t IOException ioe IOExceptionSupport create location t
private void recover throws IllegalStateException IOException this indexLock writeLock lock try long start System currentTimeMillis boolean requiresJournalReplay recoverProducerAudit requiresJournalReplay recoverAckMessageFileMap Location lastIndoubtPosition getRecoveryPosition Location recoveryPosition requiresJournalReplay journal getNextLocation null lastIndoubtPosition if recoveryPosition null int redoCounter int dataFileRotationTracker recoveryPosition getDataFileId
requiresJournalReplay recoverAckMessageFileMap Location lastIndoubtPosition getRecoveryPosition Location recoveryPosition requiresJournalReplay journal getNextLocation null lastIndoubtPosition if recoveryPosition null int redoCounter int dataFileRotationTracker recoveryPosition getDataFileId LOG info recoveryPosition while recoveryPosition null try JournalCommand message load recoveryPosition metadata lastUpdate recoveryPosition process message recoveryPosition lastIndoubtPosition redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles
JournalCommand message load recoveryPosition metadata lastUpdate recoveryPosition process message recoveryPosition lastIndoubtPosition redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles LOG debug recoveryPosition failedRecovery journal corruptRecoveryLocation recoveryPosition else throw new IOException recoveryPosition failedRecovery recoveryPosition journal getNextLocation recoveryPosition if recoveryPosition null dataFileRotationTracker recoveryPosition getDataFileId dataFileRotationTracker recoveryPosition getDataFileId journal cleanup if LOG isInfoEnabled redoCounter
redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles LOG debug recoveryPosition failedRecovery journal corruptRecoveryLocation recoveryPosition else throw new IOException recoveryPosition failedRecovery recoveryPosition journal getNextLocation recoveryPosition if recoveryPosition null dataFileRotationTracker recoveryPosition getDataFileId dataFileRotationTracker recoveryPosition getDataFileId journal cleanup if LOG isInfoEnabled redoCounter LOG info recoveryPosition redoCounter if LOG isInfoEnabled long end System currentTimeMillis
if LOG isInfoEnabled redoCounter LOG info recoveryPosition redoCounter if LOG isInfoEnabled long end System currentTimeMillis LOG info redoCounter end start pageFile tx execute new Transaction Closure IOException Override public void execute Transaction tx throws IOException recoverIndex tx Set TransactionId toRollback new HashSet Set TransactionId toDiscard new HashSet synchronized inflightTransactions for Iterator TransactionId it inflightTransactions keySet iterator it hasNext TransactionId id it next if id isLocalTransaction
if LOG isInfoEnabled long end System currentTimeMillis LOG info redoCounter end start pageFile tx execute new Transaction Closure IOException Override public void execute Transaction tx throws IOException recoverIndex tx Set TransactionId toRollback new HashSet Set TransactionId toDiscard new HashSet synchronized inflightTransactions for Iterator TransactionId it inflightTransactions keySet iterator it hasNext TransactionId id it next if id isLocalTransaction toRollback add id else
long start2 System currentTimeMillis if sync journal isJournalDiskSyncPeriodic lastAsyncJournalUpdate set location process data location before long end System currentTimeMillis if LOG_SLOW_ACCESS_TIME end start LOG_SLOW_ACCESS_TIME if LOG isInfoEnabled LOG info start2 start end start2 persistenceAdapterStatistics addWriteTime end start finally checkpointLock readLock unlock if after null after run return location catch IOException ioe
else if LOG isDebugEnabled LOG debug command getMessageId else Long sequence sd messageIdIndex get tx command getMessageId if sequence null String subscriptionKey command getSubscriptionKey if command getAck UNMATCHED sd orderIndex get tx sequence byte priority sd orderIndex lastGetPriority sd subscriptionAcks put tx subscriptionKey new LastAck sequence priority MessageKeys keys sd orderIndex get tx sequence if keys null recordAckMessageReferenceLocation ackLocation keys location removeAckLocation command tx sd subscriptionKey sequence metadata lastUpdate ackLocation
while iter hasNext Entry String Location subscription iter next int dataFileId subscription getValue getDataFileId if gcCandidateSet isEmpty gcCandidateSet first dataFileId final StoredDestination destination entry getValue final String subscriptionKey subscription getKey SequenceSet pendingAcks destination ackPositions get tx subscriptionKey if pendingAcks null pendingAcks isEmpty pendingAcks size pendingAcks getTail range if LOG isTraceEnabled LOG trace subscriptionKey entry getKey dataFileId final KahaSubscriptionCommand kahaSub destination subscriptions get tx subscriptionKey destination subLocations put tx subscriptionKey checkpointSubscriptionCommand kahaSub continue if LOG isTraceEnabled final StoredDestination destination entry getValue
private void recoverPendingLocalTransactions throws IOException if checkForCorruption for DataFile dataFile journal getFileMap values if dataFile getCorruptedBlocks isEmpty
for DataFile dataFile journal getFileMap values if dataFile getCorruptedBlocks isEmpty LOG error dataFile getDataFileId dataFile getCorruptedBlocks corruptJournalDetected set true if corruptJournalDetected get Location location null try location journal getNextLocation null while location null process location load location location journal getNextLocation location catch Exception oops LOG error location oops corruptJournalDetected set true pendingCommit putAll inflightTransactions
catch IOException e LOG error adapter xid e listener recover xid addedMessages acks boolean recoveryWorkPending false try Broker broker multiKahaDBPersistenceAdapter getBrokerService getBroker for TransactionId txid broker getPreparedTransactions null if multiKahaDBPersistenceAdapter isLocalXid txid recoveryWorkPending true if corruptJournalDetected get LOG warn txid logSomeContext txid else try
listener recover xid addedMessages acks boolean recoveryWorkPending false try Broker broker multiKahaDBPersistenceAdapter getBrokerService getBroker for TransactionId txid broker getPreparedTransactions null if multiKahaDBPersistenceAdapter isLocalXid txid recoveryWorkPending true if corruptJournalDetected get LOG warn txid logSomeContext txid else try if pendingCommit keySet contains txid LOG info txid
boolean recoveryWorkPending false try Broker broker multiKahaDBPersistenceAdapter getBrokerService getBroker for TransactionId txid broker getPreparedTransactions null if multiKahaDBPersistenceAdapter isLocalXid txid recoveryWorkPending true if corruptJournalDetected get LOG warn txid logSomeContext txid else try if pendingCommit keySet contains txid LOG info txid broker commitTransaction null txid false else
metadataPage set metadata clear tx else metadata metadataPage get metadata page metadataPage if metadata state OPEN_STATE metadata size for int i i metadata binCapacity i int t sizeOfBin tx i if t metadata binsActive metadata size t calcThresholds metadata state OPEN_STATE tx store metadataPage metadataMarshaller true
private void resize Transaction tx final int newSize throws IOException
metadata binsActive for int i i metadata binCapacity i HashBin Key Value bin getBin tx i for Map Entry Key Value entry bin getAll tx entrySet HashBin Key Value resizeBin getBin tx entry getKey resizePageId resizeCapacity resizeBin put entry getKey entry getValue store tx resizeBin if resizeBin size metadata binsActive tx free metadata binPageId metadata binCapacity metadata binCapacity resizeCapacity metadata binPageId resizePageId metadata state OPEN_STATE tx store metadata page metadataMarshaller true calcThresholds
return dir equals directory n startsWith filePrefix n endsWith fileSuffix if files null for File file files try String n file getName String numStr n substring filePrefix length n length fileSuffix length int num Integer parseInt numStr DataFile dataFile new DataFile file num fileMap put dataFile getDataFileId dataFile totalLength addAndGet dataFile getLength catch NumberFormatException e LinkedList DataFile l new LinkedList fileMap values Collections sort l for DataFile df l
preAllocateDirectBuffer rewind try FileChannel channel file getChannel int remLen maxFileLength while remLen if remLen preAllocateDirectBuffer remaining preAllocateDirectBuffer limit remLen int writeLen channel write preAllocateDirectBuffer remLen writeLen preAllocateDirectBuffer rewind channel force false channel position catch ClosedByInterruptException ignored LOG trace ignored catch IOException e
private void forceRemoveDataFile DataFile dataFile throws IOException accessorPool disposeDataFileAccessors dataFile totalLength addAndGet dataFile getLength if archiveDataLogs File directoryArchive getDirectoryArchive if directoryArchive exists
private void forceRemoveDataFile DataFile dataFile throws IOException accessorPool disposeDataFileAccessors dataFile totalLength addAndGet dataFile getLength if archiveDataLogs File directoryArchive getDirectoryArchive if directoryArchive exists LOG debug directoryArchive else if directoryArchive isAbsolute if LOG isDebugEnabled LOG debug directoryArchive getAbsolutePath IOHelper mkdirs directoryArchive LOG debug dataFile directoryArchive getCanonicalPath dataFile move directoryArchive LOG debug else
totalLength addAndGet dataFile getLength if archiveDataLogs File directoryArchive getDirectoryArchive if directoryArchive exists LOG debug directoryArchive else if directoryArchive isAbsolute if LOG isDebugEnabled LOG debug directoryArchive getAbsolutePath IOHelper mkdirs directoryArchive LOG debug dataFile directoryArchive getCanonicalPath dataFile move directoryArchive LOG debug else LOG debug dataFile if dataFile delete
buff writeLong checksum getValue file seek nextWriteBatch offset if maxStat if statIdx maxStat stats statIdx sequence getLength else long all for statIdx all stats statIdx LOG trace all maxStat file write sequence getData sequence getOffset sequence getLength ReplicationTarget replicationTarget journal getReplicationTarget if replicationTarget null replicationTarget replicate nextWriteBatch writes getHead location sequence true file sync
throw IOExceptionSupport create t t recoveryFile writeLong w page getPageId recoveryFile write w getDiskBound tmpFilesForRemoval pageSize if recoveryPageCount recoveryFileMaxPageCount int t Math max recoveryFileMinPageCount batch size recoveryFile setLength recoveryFileSizeForPages t recoveryFile seek recoveryFile writeLong nextTxid get recoveryFile writeLong checksum getValue recoveryFile writeInt batch size if enableDiskSyncs recoveryFile sync for PageWrite w batch writeFile seek toOffset w page getPageId writeFile write w getDiskBound tmpFilesForRemoval pageSize
public void commit throws IOException if writeTransactionId if tmpFile null
Override protected synchronized void doStop ServiceStopper stopper throws Exception if scheduler null if PListStoreImpl class getSimpleName equals scheduler getName scheduler stop scheduler null for PListImpl pl this persistentLists values pl unload null if this pageFile null this pageFile unload if this journal null journal close if this lockFile null this lockFile unlock this lockFile null this initialized false
if result null Location previousUpdate result getLastUpdate List JobLocation target null result setNextTime command getNextExecutionTime result setLastUpdate location result setRescheduledCount command getRescheduledCount if result isCron result getRepeat result setRepeat result getRepeat if this index containsKey tx command getNextExecutionTime target this index remove tx command getNextExecutionTime if target null target new ArrayList target add result this store incrementJournalCount tx location if previousUpdate null
void fireJob JobLocation job throws IllegalStateException IOException
catch Throwable t LOG warn t toString LOG debug t try pageFile unload catch Exception ignore if isArchiveCorruptedIndex pageFile archive else pageFile delete metaData new JobSchedulerKahaDBMetaData this pageFile null loadPageFile startCheckpoint recover
finally this indexLock writeLock unlock checkpointLock writeLock lock try if metaData getPage null checkpointUpdate getCleanupOnStop finally checkpointLock writeLock unlock synchronized checkpointThreadLock if checkpointThread null try checkpointThread join checkpointThread null catch InterruptedException e if pageFile null
Iterator Entry Integer List Integer removals metaData getRemoveLocationTracker iterator tx List Integer orphans new ArrayList Integer while removals hasNext boolean orphanedRemove true Entry Integer List Integer entry removals next if gcCandidateSet contains entry getKey for Integer addLocation entry getValue if completeFileSet contains addLocation LOG trace entry getKey addLocation orphanedRemove false break if orphanedRemove gcCandidateSet remove entry getKey else LOG trace entry getKey
private void recover throws IllegalStateException IOException this indexLock writeLock lock try long start System currentTimeMillis Location lastIndoubtPosition getRecoveryPosition Location recoveryPosition lastIndoubtPosition if recoveryPosition null int redoCounter
try long start System currentTimeMillis Location lastIndoubtPosition getRecoveryPosition Location recoveryPosition lastIndoubtPosition if recoveryPosition null int redoCounter LOG info recoveryPosition while recoveryPosition null try JournalCommand message load recoveryPosition metaData setLastUpdateLocation recoveryPosition doRecover message recoveryPosition lastIndoubtPosition redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles
LOG info recoveryPosition while recoveryPosition null try JournalCommand message load recoveryPosition metaData setLastUpdateLocation recoveryPosition doRecover message recoveryPosition lastIndoubtPosition redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles LOG debug recoveryPosition failedRecovery journal corruptRecoveryLocation recoveryPosition else throw new IOException recoveryPosition failedRecovery recoveryPosition journal getNextLocation recoveryPosition if LOG isInfoEnabled redoCounter
try JournalCommand message load recoveryPosition metaData setLastUpdateLocation recoveryPosition doRecover message recoveryPosition lastIndoubtPosition redoCounter catch IOException failedRecovery if isIgnoreMissingJournalfiles LOG debug recoveryPosition failedRecovery journal corruptRecoveryLocation recoveryPosition else throw new IOException recoveryPosition failedRecovery recoveryPosition journal getNextLocation recoveryPosition if LOG isInfoEnabled redoCounter LOG info recoveryPosition redoCounter long end System currentTimeMillis
private void recoverIndex Transaction tx throws IOException long start System currentTimeMillis final Location lastAppendLocation journal getLastAppendLocation long undoCounter for Iterator Map Entry String JobSchedulerImpl i metaData getJobSchedulers iterator tx i hasNext Map Entry String JobSchedulerImpl entry i next JobSchedulerImpl scheduler entry getValue for Iterator JobLocation jobLocationIterator scheduler getAllScheduledJobs tx jobLocationIterator hasNext final JobLocation job jobLocationIterator next if job getLocation compareTo lastAppendLocation if scheduler removeJobAtTime tx job getJobId job getNextTime LOG trace job getJobId undoCounter if undoCounter long end System currentTimeMillis
if undoCounter long end System currentTimeMillis LOG info undoCounter end start undoCounter HashSet Integer missingJournalFiles new HashSet Integer for Iterator Map Entry String JobSchedulerImpl i metaData getJobSchedulers iterator tx i hasNext Map Entry String JobSchedulerImpl entry i next JobSchedulerImpl scheduler entry getValue for Iterator JobLocation jobLocationIterator scheduler getAllScheduledJobs tx jobLocationIterator hasNext final JobLocation job jobLocationIterator next missingJournalFiles add job getLocation getDataFileId if job getLastUpdate null missingJournalFiles add job getLastUpdate getDataFileId missingJournalFiles removeAll journal getFileMap keySet if missingJournalFiles isEmpty
HashSet Integer missingJournalFiles new HashSet Integer for Iterator Map Entry String JobSchedulerImpl i metaData getJobSchedulers iterator tx i hasNext Map Entry String JobSchedulerImpl entry i next JobSchedulerImpl scheduler entry getValue for Iterator JobLocation jobLocationIterator scheduler getAllScheduledJobs tx jobLocationIterator hasNext final JobLocation job jobLocationIterator next missingJournalFiles add job getLocation getDataFileId if job getLastUpdate null missingJournalFiles add job getLastUpdate getDataFileId missingJournalFiles removeAll journal getFileMap keySet if missingJournalFiles isEmpty LOG info missingJournalFiles HashSet Location corruptedLocations new HashSet Location if isCheckForCorruptJournalFiles Collection DataFile dataFiles journal getFileMap values
producer send message connection close stopRestartBroker connectionFactory new ActiveMQConnectionFactory brokerUri connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session AUTO_ACKNOWLEDGE producer session createProducer session createQueue QUEUE_NAME producer setPriority producer send message displayQueueViews brokerService MessageConsumer jmsConsumer session createConsumer session createQueue QUEUE_NAME for int i i i message jmsConsumer receive assertNotNull i message
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key LOG info queueView getName
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key LOG info queueView getName LOG info queueView cursorSize
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key LOG info queueView getName LOG info queueView cursorSize LOG info queueView getQueueSize
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key LOG info queueView getName LOG info queueView cursorSize LOG info queueView getQueueSize LOG info queueView getEnqueueCount
private void displayQueueViews BrokerService broker throws Exception Map ObjectName DestinationView queueViews broker getAdminView getBroker getQueueViews for ObjectName key queueViews keySet DestinationView destinationView queueViews get key if destinationView QueueView QueueView queueView QueueView destinationView LOG info key LOG info queueView getName LOG info queueView cursorSize LOG info queueView getQueueSize LOG info queueView getEnqueueCount LOG info queueView getDequeueCount
private void corruptBatchCheckSumSplash int id throws Exception Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values DataFile dataFile DataFile files toArray RecoverableRandomAccessFile randomAccessFile dataFile openRandomAccessFile ArrayList Integer batchPositions findBatch randomAccessFile Integer MAX_VALUE
private void corruptBatchCheckSumSplash int id throws Exception Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values DataFile dataFile DataFile files toArray RecoverableRandomAccessFile randomAccessFile dataFile openRandomAccessFile ArrayList Integer batchPositions findBatch randomAccessFile Integer MAX_VALUE LOG info batchPositions int pos batchPositions get
private void corruptBatchCheckSumSplash int id throws Exception Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values DataFile dataFile DataFile files toArray RecoverableRandomAccessFile randomAccessFile dataFile openRandomAccessFile ArrayList Integer batchPositions findBatch randomAccessFile Integer MAX_VALUE LOG info batchPositions int pos batchPositions get LOG info id pos randomAccessFile seek pos Journal BATCH_CONTROL_RECORD_HEADER length randomAccessFile writeLong 0l randomAccessFile seek pos Journal BATCH_CONTROL_RECORD_SIZE int size randomAccessFile readInt byte type randomAccessFile readByte
Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values DataFile dataFile DataFile files toArray RecoverableRandomAccessFile randomAccessFile dataFile openRandomAccessFile ArrayList Integer batchPositions findBatch randomAccessFile Integer MAX_VALUE LOG info batchPositions int pos batchPositions get LOG info id pos randomAccessFile seek pos Journal BATCH_CONTROL_RECORD_HEADER length randomAccessFile writeLong 0l randomAccessFile seek pos Journal BATCH_CONTROL_RECORD_SIZE int size randomAccessFile readInt byte type randomAccessFile readByte LOG info size type randomAccessFile seek pos Journal BATCH_CONTROL_RECORD_SIZE size
private void corruptBatchEndEof int id throws Exception Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values DataFile dataFile DataFile files toArray id RecoverableRandomAccessFile randomAccessFile dataFile openRandomAccessFile ArrayList Integer batchPositions findBatch randomAccessFile Integer MAX_VALUE int pos batchPositions get batchPositions size
private void whackIndex File dataDir File indexToDelete new File dataDir
Test public void testStopOnPageInIOError throws Exception startBroker int sent produceMessagesToConsumeMultipleDataFiles int numFiles getNumberOfJournalFiles
Test public void testRecoveryAfterCorruption throws Exception startBroker produceMessagesToConsumeMultipleDataFiles int numFiles getNumberOfJournalFiles
produceMessagesToConsumeMultipleDataFiles int numFiles getNumberOfJournalFiles LOG info numFiles assertTrue numFiles numFiles File dataDir broker getPersistenceAdapter getDirectory if broker null broker stop broker waitUntilStopped long afterStop totalOpenFileDescriptorCount broker whackIndex dataDir LOG info afterStop doStartBroker false LOG info adapter getStore getJournal getAccessorPool size assertEquals adapter getStore getJournal getAccessorPool size long afterRecovery totalOpenFileDescriptorCount broker
Test public void testRecoveryWithMissingMssagesWithValidAcks throws Exception doCreateBroker true adapter setCheckpointInterval adapter setCleanupInterval broker start int toSend produceMessagesToConsumeMultipleDataFiles toSend int numFiles getNumberOfJournalFiles
Test public void testRecoveryCheckSpeedSmallMessages throws Exception maxJournalSizeBytes Journal DEFAULT_MAX_FILE_LENGTH doCreateBroker true broker start int toSend payload new String new byte produceMessagesToConsumeMultipleDataFiles toSend broker stop broker waitUntilStopped Instant b Instant now doStartBroker false Instant e Instant now Duration timeElapsed Duration between b e
private void whackFile File dataDir String name throws Exception File indexToDelete new File dataDir name
Test public void testRecoveryOnDeleteFailureMetaDataOk throws Exception startBroker int sent produceMessagesToConsumeMultipleDataFiles int numFilesAfterSend getNumberOfJournalFiles
Test public void testRecoveryOnDeleteFailureMetaDataOk throws Exception startBroker int sent produceMessagesToConsumeMultipleDataFiles int numFilesAfterSend getNumberOfJournalFiles LOG info sent numFilesAfterSend assertTrue numFilesAfterSend numFilesAfterSend int received tryConsume destination sent assertEquals sent received int numFilesAfterRestart getNumberOfJournalFiles
Test public void testRecoveryOnDeleteFailureMetaDataOk throws Exception startBroker int sent produceMessagesToConsumeMultipleDataFiles int numFilesAfterSend getNumberOfJournalFiles LOG info sent numFilesAfterSend assertTrue numFilesAfterSend numFilesAfterSend int received tryConsume destination sent assertEquals sent received int numFilesAfterRestart getNumberOfJournalFiles LOG info numFilesAfterRestart KahaDBPersistenceAdapter broker getPersistenceAdapter getStore checkpoint true int numFilesAfterGC getNumberOfJournalFiles assertEquals sent received
pf new PageFile getDirectory getClass getName pf setPageSize pf load tx pf tx long id tx allocate getPageId BTreeIndex Long String test new BTreeIndex Long String pf id test setKeyMarshaller LongMarshaller INSTANCE test setValueMarshaller StringMarshaller INSTANCE test load tx tx commit final int count final int reps final long diffs new long reps long keyVal final String payload new String new byte
final long diffs new long reps long keyVal final String payload new String new byte LOG info pf getPageCount pf getFreePageCount pf getPageCount pf getFreePageCount for int i i reps i for int j j count j tx pf tx test put tx keyVal payload tx commit tx pf tx for long k keyVal count k keyVal k test remove tx k test clear tx tx commit diffs i pf getPageCount pf getFreePageCount
Test timeout public void testListIndexConsistancyOverTime throws Exception final int NUM_ITERATIONS pf new PageFile getDirectory getClass getName pf setPageSize pf setWriteBatchSize pf load tx pf tx long id tx allocate getPageId ListIndex String String test new ListIndex String String pf id test setKeyMarshaller StringMarshaller INSTANCE test setValueMarshaller StringMarshaller INSTANCE test load tx tx commit int expectedListEntries int nextSequenceId
int startSequenceId nextSequenceId for int ix ix NUM_ITERATIONS ix sequenceSet concat String valueOf nextSequenceId test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix test put tx String valueOf j String valueOf j exerciseAnotherIndex tx LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i
test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix test put tx String valueOf j String valueOf j exerciseAnotherIndex tx LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i
Test timeout public void testPruning throws Exception createPageFileAndIndex ListIndex String Long index ListIndex String Long this index this index load tx tx commit long pageCount index getPageFile getPageCount assertEquals pageCount long freePageCount index getPageFile getFreePageCount assertEquals freePageCount tx pf tx doInsert tx commit pageCount index getPageFile getPageCount
tx commit long pageCount index getPageFile getPageCount assertEquals pageCount long freePageCount index getPageFile getFreePageCount assertEquals freePageCount tx pf tx doInsert tx commit pageCount index getPageFile getPageCount LOG info pageCount assertTrue pageCount tx pf tx doRemove tx commit freePageCount index getPageFile getFreePageCount
tx commit pageCount index getPageFile getPageCount LOG info pageCount assertTrue pageCount tx pf tx doRemove tx commit freePageCount index getPageFile getFreePageCount LOG info freePageCount assertTrue freePageCount freePageCount LOG info tx pf tx doInsert tx commit freePageCount index getPageFile getFreePageCount
for int i i COUNT i listIndex add tx key i long i tx commit LOG info COUNT System currentTimeMillis start LOG info listIndex getPageFile getPageCount start System currentTimeMillis tx pf tx int removeCount Iterator Map Entry String Long iterator index iterator tx while iterator hasNext iterator next iterator remove removeCount tx commit assertEquals COUNT removeCount
final int NUM_ITERATIONS pf new PageFile getDirectory getClass getName pf setPageSize pf setEnablePageCaching false pf setWriteBatchSize pf load tx pf tx long id tx allocate getPageId ListIndex String SequenceSet test new ListIndex String SequenceSet pf id test setKeyMarshaller StringMarshaller INSTANCE test setValueMarshaller SequenceSet Marshaller INSTANCE test load tx tx commit int expectedListEntries int nextSequenceId
int startSequenceId nextSequenceId for int ix ix NUM_ITERATIONS ix sequenceSet add nextSequenceId test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i
test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i
final int NUM_ITERATIONS pf new PageFile getDirectory getClass getName pf setPageSize pf setEnablePageCaching false pf setWriteBatchSize pf load tx pf tx long id tx allocate getPageId ListIndex String SequenceSet test new ListIndex String SequenceSet pf id test setKeyMarshaller StringMarshaller INSTANCE test setValueMarshaller SequenceSet Marshaller INSTANCE test load tx tx commit int expectedListEntries int nextSequenceId
int startSequenceId nextSequenceId for int ix ix NUM_ITERATIONS ix sequenceSet add nextSequenceId test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i NUM_ITERATIONS i i
test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i NUM_ITERATIONS i i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i
final int NUM_ITERATIONS pf new PageFile getDirectory getClass getName pf setPageSize pf setEnablePageCaching false pf setWriteBatchSize pf load tx pf tx long id tx allocate getPageId ListIndex String SequenceSet test new ListIndex String SequenceSet pf id test setKeyMarshaller StringMarshaller INSTANCE test setValueMarshaller SequenceSet Marshaller INSTANCE test load tx tx commit int expectedListEntries int nextSequenceId
int startSequenceId nextSequenceId for int ix ix NUM_ITERATIONS ix sequenceSet add nextSequenceId test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i
test put tx String valueOf j sequenceSet sequenceSet test get tx String valueOf j for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i
for int ix ix NUM_ITERATIONS ix sequenceSet remove startSequenceId test put tx String valueOf j sequenceSet LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i LOG debug i test size assertEquals expectedListEntries test size
LOG info for int i i NUM_ITERATIONS i assertTrue i test containsKey tx String valueOf i assertNotNull i test get tx String valueOf i LOG info assertEquals expectedListEntries test size for int i i NUM_ITERATIONS i LOG debug i test size assertTrue i test containsKey tx String valueOf i assertNotNull i test remove tx String valueOf i LOG debug i test size assertEquals expectedListEntries test size for int i NUM_ITERATIONS i i LOG debug i test size assertTrue i test containsKey tx String valueOf i
Override public DataFile getCurrentDataFile int capacity throws IOException return currentDataFile Override public int getWriteBatchSize return final ByteSequence byteSequence new ByteSequence new byte ConcurrentLinkedQueue Location locations new ConcurrentLinkedQueue Location HashSet CountDownLatch latches new HashSet CountDownLatch for int i i i try Location location underTest storeItem byteSequence byte false locations add location latches add location getLatch catch IOException expected underTest shutdown false
Test public void testMaxFileLengthGrow throws Exception MessageStore messageStore createStore ONE_MB addMessages messageStore long sizeBeforeChange store getJournal getDiskSize
Test public void testMaxFileLengthGrow throws Exception MessageStore messageStore createStore ONE_MB addMessages messageStore long sizeBeforeChange store getJournal getDiskSize LOG info sizeBeforeChange store stop messageStore createStore ONE_MB verifyMessages messageStore long sizeAfterChange store getJournal getDiskSize
Test public void testMaxFileLengthShrink throws Exception MessageStore messageStore createStore ONE_MB addMessages messageStore long sizeBeforeChange store getJournal getDiskSize
Test public void testMaxFileLengthShrink throws Exception MessageStore messageStore createStore ONE_MB addMessages messageStore long sizeBeforeChange store getJournal getDiskSize LOG info sizeBeforeChange store stop messageStore createStore ONE_MB verifyMessages messageStore long sizeAfterChange store getJournal getDiskSize
Test public void preallocationLatency throws Exception TimeStatisticImpl sparse executeTest Journal PreallocationStrategy SPARSE_FILE name TimeStatisticImpl chunked_zeros executeTest Journal PreallocationStrategy CHUNKED_ZEROS name TimeStatisticImpl kernel executeTest Journal PreallocationStrategy OS_KERNEL_COPY name
Test public void preallocationLatency throws Exception TimeStatisticImpl sparse executeTest Journal PreallocationStrategy SPARSE_FILE name TimeStatisticImpl chunked_zeros executeTest Journal PreallocationStrategy CHUNKED_ZEROS name TimeStatisticImpl kernel executeTest Journal PreallocationStrategy OS_KERNEL_COPY name LOG info sparse
Test public void preallocationLatency throws Exception TimeStatisticImpl sparse executeTest Journal PreallocationStrategy SPARSE_FILE name TimeStatisticImpl chunked_zeros executeTest Journal PreallocationStrategy CHUNKED_ZEROS name TimeStatisticImpl kernel executeTest Journal PreallocationStrategy OS_KERNEL_COPY name LOG info sparse LOG info chunked_zeros
File dataDirectory new File randInt KahaDBStore store new KahaDBStore store deleteAllMessages store setDirectory dataDirectory store setPreallocationStrategy preallocationStrategy store start final File journalLog new File dataDirectory assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return journalLog exists FileInputStream is new FileInputStream journalLog final FileChannel channel is getChannel assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
return journalLog exists FileInputStream is new FileInputStream journalLog final FileChannel channel is getChannel assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info journalLog channel size journalLog length return Journal DEFAULT_MAX_FILE_LENGTH channel size channel position ByteBuffer buff ByteBuffer allocate channel read buff buff flip buff position assertEquals 0x00 buff get
pf delete pf setEnableRecoveryFile false pf load Transaction tx pf tx tx allocate tx commit pf flush final PageFile pf2 new PageFile new File getName pf2 setEnableRecoveryFile false pf2 load try assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception pf2 flush long freePages pf2 getFreePageCount
public void testBackgroundRecoveryIsThreadSafe throws Exception PageFile pf new PageFile new File getName pf delete pf setEnableRecoveryFile false pf load Transaction tx pf tx tx allocate tx commit
PageFile pf new PageFile new File getName pf delete pf setEnableRecoveryFile false pf load Transaction tx pf tx tx allocate tx commit LOG info pf getFreePageCount pf flush final PageFile pf2 new PageFile new File getName pf2 setEnableRecoveryFile false pf2 load Transaction tx2 pf2 tx tx2 allocate tx2 commit
Thread sleep LOG info for int i i i Transaction txConcurrent pf2 tx Page page txConcurrent allocate String t i page set t txConcurrent store page StringMarshaller INSTANCE false txConcurrent commit transactions add txConcurrent Thread sleep assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception pf2 flush long freePages pf2 getFreePageCount
public void testBackgroundWillNotMarkEaslyPagesAsFree throws Exception PageFile pf new PageFile new File getName pf delete pf setEnableRecoveryFile false pf load Transaction tx pf tx tx allocate tx commit
PageFile pf new PageFile new File getName pf delete pf setEnableRecoveryFile false pf load Transaction tx pf tx tx allocate tx commit LOG info pf getFreePageCount pf flush final PageFile pf2 new PageFile new File getName pf2 setEnableRecoveryFile false pf2 load Transaction tx2 pf2 tx tx2 allocate tx2 commit
LOG info pf getFreePageCount pf flush final PageFile pf2 new PageFile new File getName pf2 setEnableRecoveryFile false pf2 load Transaction tx2 pf2 tx tx2 allocate tx2 commit LOG info pf2 getFreePageCount Transaction tx3 pf2 tx tx3 allocate assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception pf2 flush long freePages pf2 getFreePageCount
log4jLogger addAppender appender log4jLogger setLevel Level DEBUG PageFile pf new PageFile new File getName pf delete pf setEnableRecoveryFile false pf load List Long pagesToFree new LinkedList LOG info for int i i numberOfPages i Transaction tx pf tx Page page tx allocate String t i page set t tx store page StringMarshaller INSTANCE false tx commit
Page page tx allocate String t i page set t tx store page StringMarshaller INSTANCE false tx commit if i numberOfPages pagesToFree add page getPageId pf flush LOG info pf getFreePageCount final PageFile pf2 new PageFile new File getName pf2 setEnableRecoveryFile false pf2 load LOG info pf2 getFreePageCount Transaction tx pf2 tx for Long pageId pagesToFree
for Long pageId pagesToFree tx free tx load pageId StringMarshaller INSTANCE tx commit LOG info pf2 getFreePageCount List Transaction transactions new LinkedList int totalFreePages numberOfPages int totalPages numberOfPages for int i i i tx pf2 tx Page page tx allocate String t i page set t tx store page StringMarshaller INSTANCE false tx commit transactions add tx
int totalPages numberOfPages for int i i i tx pf2 tx Page page tx allocate String t i page set t tx store page StringMarshaller INSTANCE false tx commit transactions add tx if page getPageId numberOfPages totalFreePages else totalPages LOG info pf2 getFreePageCount assertTrue Wait waitFor new Wait Condition
Test public void testGcDoneAtStop throws Exception brokerService createBroker true brokerService start produceWithScheduledDelayAndConsume LOG info jobSchedulerStore int numSchedulerFiles jobSchedulerStore getJournal getFileMap size LOG info kahaDBPersistenceAdapter int numKahadbFiles kahaDBPersistenceAdapter getStore getJournal getFileMap size
Test public void testNoGcAtStop throws Exception brokerService createBroker false brokerService start produceWithScheduledDelayAndConsume LOG info jobSchedulerStore int numSchedulerFiles jobSchedulerStore getJournal getFileMap size LOG info kahaDBPersistenceAdapter int numKahadbFiles kahaDBPersistenceAdapter getStore getJournal getFileMap size
private int verifyFilesOnDisk File directory LOG info brokerService
_stateChangeDispatcher end try _stateChangeDispatcher join catch Exception e LOG debug e synchronized _lock if _zk null try changeState State NONE _zk close Thread th getSendThread if th null th join _zk null catch Exception e
public void process WatchedEvent event if event getState null
private void deleteTheIndex LevelDBStore store throws IOException for String index store getLogDirectory list new FilenameFilter Override public boolean accept File dir String name
private int countLogFiles LevelDBStore store return store getLogDirectory list new FilenameFilter Override public boolean accept File dir String name
Ignore Test timeout public void testAMQ4837viaJMX throws Throwable for int i i i
resetDirectories directories String playload createPlayload ArrayList String expected_list new ArrayList String for int j j j MasterLevelDBStore master createMaster directories get CountDownFuture masterStart asyncStart master SlaveLevelDBStore slave1 createSlave master directories get SlaveLevelDBStore slave2 createSlave master directories get asyncStart slave2 masterStart await if j stores add master stores add slave1 stores add slave2 MessageStore ms master createQueueMessageStore new ActiveMQQueue
if j stores add master stores add slave1 stores add slave2 MessageStore ms master createQueueMessageStore new ActiveMQQueue LOG info master getDirectory assertEquals expected_list getMessages ms LOG info final int TOTAL for int i i TOTAL i if i int TOTAL LOG info i TOTAL if i slave1 start slave2 stop
LOG info master getDirectory assertEquals expected_list getMessages ms LOG info final int TOTAL for int i i TOTAL i if i int TOTAL LOG info i TOTAL if i slave1 start slave2 stop LOG info master getDirectory assertEquals expected_list getMessages ms String msgid j i addMessage ms msgid playload expected_list add msgid
assertEquals expected_list getMessages ms LOG info final int TOTAL for int i i TOTAL i if i int TOTAL LOG info i TOTAL if i slave1 start slave2 stop LOG info master getDirectory assertEquals expected_list getMessages ms String msgid j i addMessage ms msgid playload expected_list add msgid LOG info master getDirectory
for int i i TOTAL i if i int TOTAL LOG info i TOTAL if i slave1 start slave2 stop LOG info master getDirectory assertEquals expected_list getMessages ms String msgid j i addMessage ms msgid playload expected_list add msgid LOG info master getDirectory assertEquals expected_list getMessages ms LOG info master getDirectory master stop
configureSlave node2 node1 node2Dir SlaveLevelDBStore node3 createSlave node1 node3Dir stores add node3 asyncStart node2 asyncStart node3 masterStart await LOG info String playload createPlayload MessageStore ms node1 createQueueMessageStore new ActiveMQQueue final int TOTAL for int i i TOTAL i if i node3 stop String msgid i addMessage ms msgid playload
stores add node3 asyncStart node2 asyncStart node3 masterStart await LOG info String playload createPlayload MessageStore ms node1 createQueueMessageStore new ActiveMQQueue final int TOTAL for int i i TOTAL i if i node3 stop String msgid i addMessage ms msgid playload expected_list add msgid LOG info
else Hashtable String String env new Hashtable String String env put Context INITIAL_CONTEXT_FACTORY initialContextFactoryName if providerURL null env put Context PROVIDER_URL providerURL else LogLog warn if urlPkgPrefixes null env put Context URL_PKG_PREFIXES urlPkgPrefixes if securityPrincipalName null env put Context SECURITY_PRINCIPAL securityPrincipalName if securityCredentials null env put Context SECURITY_CREDENTIALS securityCredentials else LogLog warn
public void onMQTTCommand MQTTFrame frame throws IOException JMSException switch frame messageType case PINGREQ TYPE LOG debug getClientId checkConnected sendToMQTT PING_RESP_FRAME LOG debug getClientId break case CONNECT TYPE CONNECT connect new CONNECT decode frame onMQTTConnect connect
MQTTSubscription sub findSubscriptionStrategy getSubscription md getConsumerId if sub null MessageAck ack sub createMessageAck md PUBLISH publish sub createPublish ActiveMQMessage md getMessage switch publish qos case AT_LEAST_ONCE case EXACTLY_ONCE publish dup publish dup true md getMessage isRedelivered case AT_MOST_ONCE if ack null sub expectAck publish synchronized consumerAcks consumerAcks put publish messageId ack LOG trace publish messageId clientId connectionInfo getConnectionId getMQTTTransport sendToMQTT publish encode if ack null sub expectAck publish getMQTTTransport sendToActiveMQ ack else if command getDataStructureType ConnectionError DATA_STRUCTURE_TYPE
void handleException Throwable exception MQTTFrame command LOG warn command exception toString
private void deleteDurableQueues List ActiveMQQueue queues try for ActiveMQQueue queue queues
Test timeout public void testBadUserNameOrPasswordGetsConnAckWithErrorCode throws Exception MQTT mqttPub createMQTTConnection true mqttPub setUserName mqttPub setPassword final AtomicBoolean failed new AtomicBoolean mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testBadUserNameOrPasswordGetsConnAckWithErrorCode throws Exception MQTT mqttPub createMQTTConnection true mqttPub setUserName mqttPub setPassword final AtomicBoolean failed new AtomicBoolean mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame
Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame LOG info connAck assertEquals CONNACK Code CONNECTION_REFUSED_NOT_AUTHORIZED connAck code catch ProtocolException e failed set true fail e getMessage catch Throwable err failed set true throw err Override public void onSend MQTTFrame frame
assertEquals ANONYMOUS new String msg getTopic msg ack connection disconnect mqtt setVersion connection mqtt blockingConnection connection connect qos connection subscribe new Topic new Topic NAMED QoS AT_MOST_ONCE assertEquals QoS AT_MOST_ONCE ordinal qos MQTT mqttPub createMQTTConnection true mqttPub setUserName mqttPub setPassword BlockingConnection connectionPub mqttPub blockingConnection connectionPub connect connectionPub publish NAMED NAMED getBytes QoS AT_MOST_ONCE true msg connection receive TimeUnit MILLISECONDS
Test timeout public void testInvalidClientIdGetCorrectErrorCode throws Exception MQTT mqttPub createMQTTConnection true final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testInvalidClientIdGetCorrectErrorCode throws Exception MQTT mqttPub createMQTTConnection true final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame
MQTT mqttPub createMQTTConnection true final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame LOG info connAck errorCode set connAck code ordinal assertEquals CONNACK Code CONNECTION_REFUSED_IDENTIFIER_REJECTED connAck code catch ProtocolException e fail e getMessage Override public void onSend MQTTFrame frame
Test timeout public void testBadCredentialExceptionGetsCorrectErrorCode throws Exception MQTT mqttPub createMQTTConnection true mqttPub setUserName mqttPub setPassword final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testBadCredentialExceptionGetsCorrectErrorCode throws Exception MQTT mqttPub createMQTTConnection true mqttPub setUserName mqttPub setPassword final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame
mqttPub setPassword final AtomicInteger errorCode new AtomicInteger mqttPub setTracer new Tracer Override public void onReceive MQTTFrame frame LOG info frame if frame messageType CONNACK TYPE CONNACK connAck new CONNACK try connAck decode frame LOG info connAck errorCode set connAck code ordinal assertEquals CONNACK Code CONNECTION_REFUSED_BAD_USERNAME_OR_PASSWORD connAck code catch ProtocolException e fail e getMessage Override public void onSend MQTTFrame frame
Test public void testEmptyConnectBytes throws Exception CONNECT connect new CONNECT connect cleanSession true connect clientId new UTF8Buffer DataByteArrayOutputStream output new DataByteArrayOutputStream wireFormat marshal connect encode output Buffer marshalled output toBuffer DataByteArrayInputStream input new DataByteArrayInputStream marshalled codec parse input marshalled length assertTrue frames isEmpty assertEquals frames size connect new CONNECT decode frames get
Test public void testConnectThenSubscribe throws Exception CONNECT connect new CONNECT connect cleanSession true connect clientId new UTF8Buffer DataByteArrayOutputStream output new DataByteArrayOutputStream wireFormat marshal connect encode output Buffer marshalled output toBuffer DataByteArrayInputStream input new DataByteArrayInputStream marshalled codec parse input marshalled length assertTrue frames isEmpty assertEquals frames size connect new CONNECT decode frames get
CONNECT connect new CONNECT connect cleanSession false connect clientId new UTF8Buffer connect userName new UTF8Buffer connect password new UTF8Buffer DataByteArrayOutputStream output new DataByteArrayOutputStream wireFormat marshal connect encode output wireFormat marshal connect encode output Buffer marshalled output toBuffer DataByteArrayInputStream input new DataByteArrayInputStream marshalled codec parse input marshalled length assertTrue frames isEmpty assertEquals frames size for MQTTFrame frame frames connect new CONNECT decode frame
connect cleanSession false connect clientId new UTF8Buffer connect userName new UTF8Buffer connect password new UTF8Buffer DataByteArrayOutputStream output new DataByteArrayOutputStream wireFormat marshal connect encode output Buffer marshalled output toBuffer DataByteArrayInputStream input new DataByteArrayInputStream marshalled int first marshalled length int second marshalled length first codec parse input first codec parse input second assertTrue frames isEmpty assertEquals frames size connect new CONNECT decode frames get
CONNECT connect new CONNECT connect cleanSession false connect clientId new UTF8Buffer connect userName new UTF8Buffer connect password new UTF8Buffer DataByteArrayOutputStream output new DataByteArrayOutputStream wireFormat marshal connect encode output Buffer marshalled output toBuffer DataByteArrayInputStream input new DataByteArrayInputStream marshalled int size marshalled length for int i i size i codec parse input assertTrue frames isEmpty assertEquals frames size connect new CONNECT decode frames get
final int THREAD_COUNT final int CONNECTION_COUNT ExecutorService executorService Executors newFixedThreadPool THREAD_COUNT final AtomicInteger clientIdGemeratpr new AtomicInteger for int i i CONNECTION_COUNT i executorService execute new Runnable Override public void run try MQTT mqtt createMQTTConnection mqtt setClientId clientIdGemeratpr incrementAndGet mqtt setCleanSession true BlockingConnection connection mqtt blockingConnection connection connect connection disconnect catch Exception e
Test public void testDurableSubscriptionsAreRecovered throws Exception MqttClient connection createClient getTestName final String topics for int i i topics length i
public void doTestRetainedMessages String topicName throws Exception MQTT mqtt createMQTTConnection mqtt setKeepAlive short final String RETAIN final String TOPICA topicName final String clientIds null for String clientId clientIds boolean cleanSession equals clientId
msg connection receive TimeUnit MILLISECONDS assertNotNull clientId msg assertEquals RETAIN new String msg getPayload msg ack assertNull connection receive TimeUnit MILLISECONDS connection disconnect connection mqtt blockingConnection connection connect LOG info connection subscribe new Topic new Topic TOPICA QoS AT_LEAST_ONCE msg connection receive TimeUnit MILLISECONDS assertNotNull clientId msg assertEquals RETAIN new String msg getPayload msg ack assertNull connection receive TimeUnit MILLISECONDS
Test timeout public void testUniqueMessageIds throws Exception MQTT mqtt createMQTTConnection mqtt setClientId mqtt setKeepAlive short mqtt setCleanSession true final List PUBLISH publishList new ArrayList PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame
mqtt setClientId mqtt setKeepAlive short mqtt setCleanSession true final List PUBLISH publishList new ArrayList PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame catch ProtocolException e fail e getMessage publishList add publish Override public void onSend MQTTFrame frame
Test timeout public void testResendMessageId throws Exception final MQTT mqtt createMQTTConnection false mqtt setKeepAlive short final List PUBLISH publishList new ArrayList PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testResendMessageId throws Exception final MQTT mqtt createMQTTConnection false mqtt setKeepAlive short final List PUBLISH publishList new ArrayList PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame catch ProtocolException e fail e getMessage publishList add publish Override public void onSend MQTTFrame frame
Test timeout public void testPacketIdGeneratorNonCleanSession throws Exception final MQTT mqtt createMQTTConnection false mqtt setKeepAlive short final Map Short PUBLISH publishMap new ConcurrentHashMap Short PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testPacketIdGeneratorNonCleanSession throws Exception final MQTT mqtt createMQTTConnection false mqtt setKeepAlive short final Map Short PUBLISH publishMap new ConcurrentHashMap Short PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame
final Map Short PUBLISH publishMap new ConcurrentHashMap Short PUBLISH mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame LOG debug publish catch ProtocolException e fail e getMessage if publishMap get publish messageId null assertTrue publish dup publishMap put publish messageId publish Override public void onSend MQTTFrame frame
Test timeout public void testPacketIdGeneratorCleanSession throws Exception final String cleanClientIds new String null final Map Short PUBLISH publishMap new ConcurrentHashMap Short PUBLISH MQTT mqtts new MQTT cleanClientIds length for int i i cleanClientIds length i mqtts i createMQTTConnection true mqtts i setKeepAlive short mqtts i setTracer new Tracer Override public void onReceive MQTTFrame frame
Test timeout public void testPacketIdGeneratorCleanSession throws Exception final String cleanClientIds new String null final Map Short PUBLISH publishMap new ConcurrentHashMap Short PUBLISH MQTT mqtts new MQTT cleanClientIds length for int i i cleanClientIds length i mqtts i createMQTTConnection true mqtts i setKeepAlive short mqtts i setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame
mqtts i setKeepAlive short mqtts i setTracer new Tracer Override public void onReceive MQTTFrame frame LOG debug frame if frame messageType PUBLISH TYPE PUBLISH publish new PUBLISH try publish decode frame LOG info publish catch ProtocolException e fail e getMessage if publishMap get publish messageId null assertTrue publish dup publishMap put publish messageId publish Override public void onSend MQTTFrame frame
Test timeout public void testRepeatedLinkStealing throws Exception final String clientId final AtomicReference BlockingConnection oldConnection new AtomicReference BlockingConnection final String TOPICA for int i i i
Test timeout public void testSubscribeWithZeroLengthTopic throws Exception MQTT mqtt createMQTTConnection mqtt setClientId mqtt setCleanSession false Topic topic new Topic QoS EXACTLY_ONCE final BlockingConnection connection mqtt blockingConnection connection connect
Test timeout public void testUnsubscribeWithZeroLengthTopic throws Exception MQTT mqtt createMQTTConnection mqtt setClientId mqtt setCleanSession false Topic topic new Topic QoS EXACTLY_ONCE final BlockingConnection connection mqtt blockingConnection connection connect
mqtt setClientId mqtt setCleanSession false final BlockingConnection connection mqtt blockingConnection connection connect Topic topics new Topic QoS EXACTLY_ONCE new Topic QoS EXACTLY_ONCE Topic wildcardTopic new Topic QoS AT_LEAST_ONCE connection subscribe wildcardTopic for Topic topic topics connection publish topic name toString payload QoS AT_LEAST_ONCE false int received for int i i topics length i Message message connection receive assertNotNull message received payload message getPayload
Test timeout public void testActiveMQRecoveryPolicy throws Exception final PolicyMap policyMap new PolicyMap final PolicyEntry policyEntry new PolicyEntry policyEntry setSubscriptionRecoveryPolicy new LastImageSubscriptionRecoveryPolicy policyMap put new ActiveMQTopic policyEntry brokerService setDestinationPolicy policyMap MQTT mqtt createMQTTConnection true final int retain new int final int nonretain new int mqtt setTracer new Tracer Override public void onReceive MQTTFrame frame if frame messageType PUBLISH TYPE
protected Tracer createTracer return new Tracer Override public void onReceive MQTTFrame frame
final String topicName connection subscribe new Topic new Topic topicName QoS EXACTLY_ONCE ActiveMQConnection activeMQConnection ActiveMQConnection cf createConnection activeMQConnection setUseRetroactiveConsumer true activeMQConnection start Session s activeMQConnection createSession false Session AUTO_ACKNOWLEDGE javax jms Queue consumerQ s createQueue MessageConsumer consumer s createConsumer consumerQ final MQTTClientProvider provider getMQTTClientProvider initializeConnection provider final String RETAINED provider publish topicName RETAINED getBytes EXACTLY_ONCE true Message message connection receive TimeUnit SECONDS assertNotNull message String response new String message getPayload
Session s activeMQConnection createSession false Session AUTO_ACKNOWLEDGE javax jms Queue consumerQ s createQueue MessageConsumer consumer s createConsumer consumerQ final MQTTClientProvider provider getMQTTClientProvider initializeConnection provider final String RETAINED provider publish topicName RETAINED getBytes EXACTLY_ONCE true Message message connection receive TimeUnit SECONDS assertNotNull message String response new String message getPayload LOG info response ActiveMQMessage activeMQMessage ActiveMQMessage consumer receive assertNotNull activeMQMessage ByteSequence bs activeMQMessage getContent assertEquals RETAINED new String bs data bs offset bs length
Test timeout public void testLotsOfClients throws Exception final int CLIENTS Integer getInteger
protected void testClientIdSpecialChars int mqttVersion throws Exception
private void stop String pid BrokerService broker try
return XAConnection connection createXASession else return connection createSession key isTransacted key getAckMode Override protected XAResource createXaResource PooledSession session throws JMSException if session getInternalSession XASession return XASession session getInternalSession getXAResource else return ActiveMQSession session getInternalSession getTransactionContext Override protected Connection wrap final Connection connection ActiveMQConnection connection addTransportListener new TransportListener Override public void onCommand Object command Override public void onException IOException error synchronized this setHasExpired true if stopped get
else return connection createSession key isTransacted key getAckMode Override protected XAResource createXaResource PooledSession session throws JMSException if session getInternalSession XASession return XASession session getInternalSession getXAResource else return ActiveMQSession session getInternalSession getTransactionContext Override protected Connection wrap final Connection connection ActiveMQConnection connection addTransportListener new TransportListener Override public void onCommand Object command Override public void onException IOException error synchronized this setHasExpired true if stopped get LOG info connection error getMessage
protected void setInfo ActiveMQConnectionRequestInfo connectionRequestInfo info connectionRequestInfo if log isDebugEnabled
public void setClientid String clientid if log isDebugEnabled
public void setServerUrl String url if log isDebugEnabled
public void setTrustStore String trustStore if log isDebugEnabled
public void setTrustStorePassword String trustStorePassword if log isDebugEnabled
public void setKeyStore String keyStore if log isDebugEnabled
public void setKeyStorePassword String keyStorePassword if log isDebugEnabled
public void setKeyStoreKeyPassword String keyStoreKeyPassword if log isDebugEnabled
public void setUserName String userid if log isDebugEnabled
public void setOptimizeDurableTopicPrefetch Integer optimizeDurableTopicPrefetch if log isDebugEnabled
public void setDurableTopicPrefetch Integer durableTopicPrefetch if log isDebugEnabled
public void setInitialRedeliveryDelay Long value if log isDebugEnabled
public void setMaximumRedeliveryDelay Long value if log isDebugEnabled
public void setMaximumRedeliveries Integer value if log isDebugEnabled
public void setQueueBrowserPrefetch Integer queueBrowserPrefetch if log isDebugEnabled
public void setQueuePrefetch Integer queuePrefetch if log isDebugEnabled
public void setRedeliveryBackOffMultiplier Double value if log isDebugEnabled
public void setRedeliveryUseExponentialBackOff Boolean value if log isDebugEnabled
public void setTopicPrefetch Integer topicPrefetch if log isDebugEnabled
public void setUseInboundSession Boolean useInboundSession if log isDebugEnabled
public void setUseSessionArgs Boolean useSessionArgs if log isDebugEnabled
public void onException JMSException e LOG warn e
this bootstrapContext bootstrapContext if brokerXmlConfig null brokerXmlConfig trim length brokerStartThread new Thread Override public void run try log debug Thread currentThread getContextClassLoader Thread currentThread setContextClassLoader getClass getClassLoader log debug Thread currentThread getContextClassLoader synchronized ActiveMQResourceAdapter this broker BrokerFactory createBroker new URI brokerXmlConfig broker start if getServerUrl null setServerUrl broker getBrokerName catch Throwable e log warn brokerXmlConfig e getMessage
Override public XAResource getXAResources ActivationSpec activationSpecs throws ResourceException
synchronized runControlMutex if runningFlag log debug return runningFlag true log debug try workManager scheduleWork this WorkManager INDEFINITE null new WorkListener public void workAccepted WorkEvent event log debug event public void workRejected WorkEvent event log debug event public void workStarted WorkEvent event log debug event public void workCompleted WorkEvent event
public void run log debug this currentBatchSize while true
currentBatchSize while true log debug this try InboundContextSupport register this if session isClosed stale true else if session isRunning session run else log debug session session getUnconsumedMessages size stale true catch Throwable e stale true if log isDebugEnabled
log debug this try InboundContextSupport register this if session isClosed stale true else if session isRunning session run else log debug session session getUnconsumedMessages size stale true catch Throwable e stale true if log isDebugEnabled log debug this e else if log isInfoEnabled
else if session isRunning session run else log debug session session getUnconsumedMessages size stale true catch Throwable e stale true if log isDebugEnabled log debug this e else if log isInfoEnabled log info e getMessage this finally InboundContextSupport unregister this log debug synchronized runControlMutex
catch Throwable e stale true if log isDebugEnabled log debug this e else if log isInfoEnabled log info e getMessage this finally InboundContextSupport unregister this log debug synchronized runControlMutex if stale log debug this runningFlag false pool removeFromPool this break
if log isDebugEnabled log debug this e else if log isInfoEnabled log info e getMessage this finally InboundContextSupport unregister this log debug synchronized runControlMutex if stale log debug this runningFlag false pool removeFromPool this break if session hasUncomsumedMessages runningFlag false
else if log isInfoEnabled log info e getMessage this finally InboundContextSupport unregister this log debug synchronized runControlMutex if stale log debug this runningFlag false pool removeFromPool this break if session hasUncomsumedMessages runningFlag false log debug this pool returnToPool this
public void afterDelivery ActiveMQSession session Message msg if currentBatchSize batchSize session hasUncomsumedMessages currentBatchSize try endpoint afterDelivery catch Throwable e throw new RuntimeException e e finally TransactionContext transactionContext session getTransactionContext if transactionContext null transactionContext isInLocalTransaction if useRAManagedTx log warn try session commit catch JMSException e
return null final ActiveMQSession session ActiveMQSession connection createSession activeMQAsfEndpointWorker transacted acknowledge MessageEndpoint endpoint try int batchSize if activationSpec getEnableBatchBooleanValue batchSize activationSpec getMaxMessagesPerBatchIntValue if activationSpec isUseRAManagedTransactionEnabled endpoint createEndpoint null return new ServerSessionImpl this session activeMQAsfEndpointWorker workManager endpoint true batchSize else endpoint createEndpoint new LocalAndXATransaction session getTransactionContext return new ServerSessionImpl this session activeMQAsfEndpointWorker workManager endpoint false batchSize catch UnavailableException e if LOG isDebugEnabled
ss getExistingServerSession false finally sessionLock unlock if ss null return ss ss createServerSessionImpl sessionLock lock try if ss null if activeSessions isEmpty idleSessions isEmpty throw new JMSException ss getExistingServerSession true else activeSessions add ss finally
public void returnToPool ServerSessionImpl ss sessionLock lock activeSessions remove ss try if ss isStale if LOG isDebugEnabled
try ActiveMQSession session ActiveMQSession ss getSession List MessageDispatch l session getUnconsumedMessages if isClosing l isEmpty ActiveMQConnection connection activeMQAsfEndpointWorker getConnection if connection null for Iterator MessageDispatch i l iterator i hasNext MessageDispatch md i next if connection hasDispatcher md getConsumerId dispatchToSession md LOG trace session md else LOG trace md session getConnection else LOG trace session
public void close closing set true LOG debug this int activeCount closeSessions while activeCount if LOG isDebugEnabled
Test public void testAMQConnectionExecutorThreadCleanUp throws Exception LOG info ActiveMQResourceAdapter ra new ActiveMQResourceAdapter ra setServerUrl broker getTransportConnectorByScheme getPublishableConnectString
Test public void testAMQConnectionExecutorThreadCleanUp throws Exception LOG info ActiveMQResourceAdapter ra new ActiveMQResourceAdapter ra setServerUrl broker getTransportConnectorByScheme getPublishableConnectString LOG info ra getServerUrl for int i i i
public boolean hasActiveMQConnectionExceutorThread Set Thread threadSet Thread getAllStackTraces keySet Iterator Thread iter threadSet iterator while iter hasNext Thread thread Thread iter next if thread getName startsWith AMQ_CONN_EXECUTOR_THREAD_NAME
Test timeout public void testFailover throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory brokerUri Connection connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQResourceAdapter adapter new ActiveMQResourceAdapter adapter setServerUrl brokerUri adapter start new StubBootstrapContext final CountDownLatch messageDelivered new CountDownLatch final StubMessageEndpoint endpoint new StubMessageEndpoint Override public void onMessage Message message
throw new RuntimeException try orderedReceipt add message getIntProperty ORDER_PROP catch JMSException e e printStackTrace Override public void afterDelivery throws ResourceException try if messageCount xaresource end xid XAResource TMFAIL xaresource rollback xid else xaresource end xid XAResource TMSUCCESS xaresource prepare xid xaresource commit xid false catch Throwable e
will returnValue Boolean FALSE allowing messageActivationSpec isUseRAManagedTransactionEnabled will returnValue Boolean TRUE allowing messageEndpointFactory createEndpoint with any XAResource class will returnValue messageEndpoint allowing workManager scheduleWork Work with Matchers instanceOf Work class with any long class with any ExecutionContext class with any WorkListener class will new Action Override public Object invoke Invocation invocation throws Throwable LOG info invocation if invocation getParameter ServerSessionImpl final ServerSessionImpl serverSession1 ServerSessionImpl invocation getParameter executorService execute new Runnable Override public void run try serverSession1 run
messageCountRef set new CountDownLatch maxMessages final CountDownLatch senderDone new CountDownLatch final CountDownLatch messageSent new CountDownLatch maxMessages final AtomicBoolean foundClosedSession new AtomicBoolean false executorService execute new Runnable Override public void run try for int i i maxMessages i MessageDispatch messageDispatch new MessageDispatch ActiveMQMessage message new ActiveMQTextMessage message setMessageId new MessageId i message getMessageId setBrokerSequenceId i messageDispatch setMessage message messageDispatch setConsumerId new ConsumerId ServerSessionImpl serverSession1 null
MessageDispatch messageDispatch new MessageDispatch ActiveMQMessage message new ActiveMQTextMessage message setMessageId new MessageId i message getMessageId setBrokerSequenceId i messageDispatch setMessage message messageDispatch setConsumerId new ConsumerId ServerSessionImpl serverSession1 null try serverSession1 ServerSessionImpl pool getServerSession ActiveMQSession session1 ActiveMQSession serverSession1 getSession if session1 isClosed foundClosedSession set true session1 dispatch messageDispatch messageSent countDown serverSession1 start
public void debug String s
public void info String s
public void info String s Throwable t
else if equals propertyName Element beanPropElement Element beanProp NodeList values beanPropElement getElementsByTagNameNS for int k k values getLength k Node value values item k if value hasAttributes Node beanClassTypeNode value getAttributes getNamedItem if beanClassTypeNode null propertiesClazzes add beanClassTypeNode getFirstChild getTextContent for String value propertiesClazzes try Object springBean getClass getClassLoader loadClass value newInstance if springBean FactoryBean initialProperties putAll Properties FactoryBean class getMethod Class null invoke springBean catch Throwable e
if value hasAttributes Node beanClassTypeNode value getAttributes getNamedItem if beanClassTypeNode null propertiesClazzes add beanClassTypeNode getFirstChild getTextContent for String value propertiesClazzes try Object springBean getClass getClassLoader loadClass value newInstance if springBean FactoryBean initialProperties putAll Properties FactoryBean class getMethod Class null invoke springBean catch Throwable e LOG debug propertiesClazzes e List Resource propResources new LinkedList Resource for String value resources try if value isEmpty
for String value propertiesClazzes try Object springBean getClass getClassLoader loadClass value newInstance if springBean FactoryBean initialProperties putAll Properties FactoryBean class getMethod Class null invoke springBean catch Throwable e LOG debug propertiesClazzes e List Resource propResources new LinkedList Resource for String value resources try if value isEmpty propResources add Utils resourceFromString filter value catch MalformedURLException e LOG info value e for Resource resource propResources
private void applyModifications Resource configToMonitor DtoBroker changed loadConfiguration configToMonitor if changed null currentConfiguration equals changed
private void applyModifications Resource configToMonitor DtoBroker changed loadConfiguration configToMonitor if changed null currentConfiguration equals changed LOG info configToMonitor new Date lastModified
private void applyModifications Resource configToMonitor DtoBroker changed loadConfiguration configToMonitor if changed null currentConfiguration equals changed LOG info configToMonitor new Date lastModified LOG debug filterPasswords currentConfiguration
for VirtualDestination newVirtualDest newVirtualDests if existingVirtualDests contains newVirtualDest addedVirtualDests add newVirtualDest for VirtualDestination existingVirtualDest existingVirtualDests if newVirtualDests contains existingVirtualDest removedVirtualDests add existingVirtualDest virtualDestinationInterceptor setVirtualDestinations getVirtualDestinations plugin info virtualDestinationInterceptor updatedExistingInterceptor true ConnectionContext connectionContext try connectionContext plugin getBrokerService getAdminConnectionContext if plugin getBrokerService isUseVirtualDestSubs for VirtualDestination removedVirtualDest removedVirtualDests plugin virtualDestinationRemoved connectionContext removedVirtualDest
for VirtualDestination existingVirtualDest existingVirtualDests if newVirtualDests contains existingVirtualDest removedVirtualDests add existingVirtualDest virtualDestinationInterceptor setVirtualDestinations getVirtualDestinations plugin info virtualDestinationInterceptor updatedExistingInterceptor true ConnectionContext connectionContext try connectionContext plugin getBrokerService getAdminConnectionContext if plugin getBrokerService isUseVirtualDestSubs for VirtualDestination removedVirtualDest removedVirtualDests plugin virtualDestinationRemoved connectionContext removedVirtualDest LOG info removedVirtualDest for VirtualDestination addedVirtualDest addedVirtualDests plugin virtualDestinationAdded connectionContext addedVirtualDest
protected void exerciseVirtualTopic String prefix String topic throws Exception ActiveMQConnection connection new ActiveMQConnectionFactory createActiveMQConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQMessageConsumer consumer ActiveMQMessageConsumer session createConsumer session createQueue prefix topic
protected void exerciseCompositeQueue String dest String consumerQ throws Exception ActiveMQConnection connection new ActiveMQConnectionFactory createActiveMQConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQMessageConsumer consumer ActiveMQMessageConsumer session createConsumer session createQueue consumerQ
protected void exerciseFilteredCompositeQueue String dest String consumerDestination String acceptedHeaderValue throws Exception ActiveMQConnection connection new ActiveMQConnectionFactory createActiveMQConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQMessageConsumer consumer ActiveMQMessageConsumer session createConsumer session createQueue consumerDestination
protected void printDestinations throws Exception ActiveMQDestination destinations brokerService getRegionBroker getDestinations for ActiveMQDestination destination destinations
Test public void testUpdateNow throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP assertEquals brokerService getNetworkConnectors size ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
Test public void testUpdateNow throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP assertEquals brokerService getNetworkConnectors size ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props String result runtimeConfigurationView updateNow
assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP assertEquals brokerService getNetworkConnectors size ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props String result runtimeConfigurationView updateNow LOG info result assertTrue result result contains assertEquals brokerService getNetworkConnectors size HashMap String String propsAfter new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView propsAfter null
Test public void testUpdateFailedModParseError throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
Test public void testUpdateFailedModParseError throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props String result runtimeConfigurationView updateNow
applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerService getNetworkConnectors size applyNewConfig brokerConfig SLEEP ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props String result runtimeConfigurationView updateNow LOG info result assertTrue result result contains HashMap String String propsAfter new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView propsAfter null
ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props String result runtimeConfigurationView updateNow LOG info result assertTrue result result contains HashMap String String propsAfter new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView propsAfter null LOG info propsAfter String propOfInterest assertEquals props get propOfInterest propsAfter get propOfInterest applyNewConfig brokerConfig SLEEP result runtimeConfigurationView updateNow
Test public void testCanLoad throws Exception final String brokerConfig System setProperty IOHelper getDefaultDataDirectory System setProperty brokerConfig startBroker brokerConfig assertTrue brokerService isStarted assertEquals brokerConfig brokerService getBrokerName ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
protected void applyNewConfig String configName String newConfigName long sleep throws Exception Resource resource Utils resourceFromString File file new File resource getFile configName FileOutputStream current new FileOutputStream file FileInputStream modifications new FileInputStream new File resource getFile newConfigName modifications getChannel transferTo Long MAX_VALUE current getChannel current flush current getChannel force true current close modifications close
Test public void testModifiable throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false String propOfInterest HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
Test public void testModifiable throws Exception final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false String propOfInterest HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props assertNotEquals props get propOfInterest String result runtimeConfigurationView updateNow
applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false String propOfInterest HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null LOG info props assertNotEquals props get propOfInterest String result runtimeConfigurationView updateNow LOG info result assertTrue result contains HashMap String String propsAfter new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView propsAfter null
Test public void testAddPropertyRefFromFileAsList throws Exception System setProperty System setProperty final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false String propOfInterest HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
Test public void testAddPropertyRefFromFileAndBeanFactory throws Exception System setProperty System setProperty final String brokerConfig applyNewConfig brokerConfig startBroker brokerConfig assertTrue brokerService isStarted ObjectName objectName new ObjectName brokerService getBrokerObjectName toString RuntimeConfigurationBroker objectNamePropsAppendage RuntimeConfigurationViewMBean runtimeConfigurationView RuntimeConfigurationViewMBean brokerService getManagementContext newProxyInstance objectName RuntimeConfigurationViewMBean class false String propOfInterest HashMap String String props new HashMap String String IntrospectionSupport getProperties runtimeConfigurationView props null
protected void printDestinations throws Exception ActiveMQDestination destinations brokerService getRegionBroker getDestinations for ActiveMQDestination destination destinations
f setMaximumActiveSessionPerConnection maximumActive f setConnectionFactory connectionFactory this pooledConnectionFactory f catch Throwable t LOGGER debug t t if pooledConnectionFactory null transactionManager null try LOGGER debug XaPooledConnectionFactory f new XaPooledConnectionFactory f setTransactionManager TransactionManager transactionManager f setMaxConnections maxConnections f setMaximumActiveSessionPerConnection maximumActive f setConnectionFactory connectionFactory this pooledConnectionFactory f catch Throwable t
LOGGER debug XaPooledConnectionFactory f new XaPooledConnectionFactory f setTransactionManager TransactionManager transactionManager f setMaxConnections maxConnections f setMaximumActiveSessionPerConnection maximumActive f setConnectionFactory connectionFactory this pooledConnectionFactory f catch Throwable t LOGGER debug t t if pooledConnectionFactory null try LOGGER debug PooledConnectionFactory f new PooledConnectionFactory f setMaxConnections maxConnections f setMaximumActiveSessionPerConnection maximumActive
protected ApplicationContext createApplicationContext String uri throws MalformedURLException Resource resource Utils resourceFromString uri
public void onMessage Message message try
public void sendMessages String destName int msgNum throws Exception ConnectionFactory factory new org apache activemq ActiveMQConnectionFactory Connection conn factory createConnection Session sess conn createSession false Session AUTO_ACKNOWLEDGE Destination dest sess createQueue destName MessageProducer producer sess createProducer dest for int i i msgNum i String messageText i
while i try Thread sleep long Math random SLEEP catch InterruptedException e e printStackTrace TransactionTemplate tt new TransactionTemplate this txManager try tt execute new TransactionCallbackWithoutResult Override protected void doInTransactionWithoutResult TransactionStatus status try for final String queue QUEUES jmsTemplate send queue AUDIT new MessageCreator public Message createMessage Session session throws JMSException return session createTextMessage queue BODY
public void testRedelivery throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory brokerService getTransportConnectors get getConnectUri toString Connection connection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Queue queue session createQueue MessageProducer producer session createProducer queue for int i i MESSAGE_COUNT i
messageListenerContainer setReceiveTimeout messageListenerContainer setRecoveryInterval messageListenerContainer setAcceptMessagesWhileStopping false messageListenerContainer setCacheLevel DefaultMessageListenerContainer CACHE_NONE messageListenerContainer setSessionTransacted false messageListenerContainer setMessageListener new MessageListener Override public void onMessage Message message if message TextMessage throw new RuntimeException try TextMessage textMessage TextMessage message String text textMessage getText int messageDeliveryCount message getIntProperty JMSX_DELIVERY_COUNT if messageDeliveryCount messageRedelivered set true
protected FrameTranslator findTranslator String header ActiveMQDestination destination boolean advisory FrameTranslator translator frameTranslator try if header null translator jmsFrameTranslators get header if translator null
protected FrameTranslator findTranslator String header ActiveMQDestination destination boolean advisory FrameTranslator translator frameTranslator try if header null translator jmsFrameTranslators get header if translator null LOG info header translator FrameTranslator FRAME_TRANSLATOR_FINDER newInstance header if translator null
try if header null translator jmsFrameTranslators get header if translator null LOG info header translator FrameTranslator FRAME_TRANSLATOR_FINDER newInstance header if translator null LOG info header jmsFrameTranslators put header translator else LOG error header else if destination null advisory AdvisorySupport isAdvisoryTopic destination translator new JmsFrameTranslator catch Exception ignore
else try hbReadInterval Long parseLong keepAliveOpts hbWriteInterval Long parseLong keepAliveOpts catch NumberFormatException e throw new ProtocolException heartBeatConfig true try StompInactivityMonitor monitor this stompTransport getInactivityMonitor monitor setReadCheckTime long hbReadInterval hbGracePeriodMultiplier monitor setInitialDelayTime Math min hbReadInterval hbWriteInterval monitor setWriteCheckTime hbWriteInterval monitor startMonitoring catch Exception ex hbReadInterval hbWriteInterval
catch Exception ex LOG error ex exceptions add ex t1 start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerService getTransportConnectors get connectionCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis assertTrue doneConnect await TimeUnit SECONDS brokerService stop ServerSocket socket ServerSocketFactory getDefault createServerSocket socket setReuseAddress true InetAddress address InetAddress getLocalHost socket bind new InetSocketAddress address listenPort
Test timeout public void testConnect throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testConnectedNeverEncoded throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testConnectedNeverEncoded throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf int sessionHeader f indexOf f f substring sessionHeader length
Test timeout public void testConnectWithVersionOptions throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testConnectWithValidFallback throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testConnectWithInvalidFallback throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testHeartbeats throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame trim
Test timeout public void testHeartbeatsDropsIdleConnection throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf
Test timeout public void testHeartbeatsDropsIdleConnection throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf LOG debug f long startTime System currentTimeMillis try f stompConnection receiveFrame
Test timeout public void testHeartbeatsKeepsConnectionOpen throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf
Test timeout public void testSendAfterMissingHeartbeat throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf
assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf assertTrue f indexOf LOG debug f Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis try String message getQueueName Stomp NULL stompConnection sendFrame message stompConnection receiveFrame fail catch Exception ex
Test timeout public void testRejectInvalidHeartbeats1 throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testRejectInvalidHeartbeats2 throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testRejectInvalidHeartbeats3 throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testSubscribeAndUnsubscribe throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
LOG debug f assertTrue f startsWith String message getQueueName Stomp NULL stompConnection sendFrame message String frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame stompFrame stompConnection receive assertTrue stompFrame getAction equals frame getQueueName Stomp NULL stompConnection sendFrame frame stompFrame stompConnection receive assertTrue stompFrame getAction equals stompConnection sendFrame message try frame stompConnection receiveFrame
Test timeout public void testSubscribeWithNoId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testUnsubscribeWithNoId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testAckMessageWithId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testAckMessageWithNoId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testAckMessageWithNoId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith String message getQueueName Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame received stompConnection receive
String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith String message getQueueName Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame received stompConnection receive LOG info received assertTrue received getAction received getAction equals String ack received getHeaders get Stomp NULL stompConnection sendFrame ack StompFrame error stompConnection receive
Test timeout public void testSubscribeWithWildcardSubscription throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testQueueBrowerSubscription throws Exception final int MSG_COUNT String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
String f stompConnection receiveFrame LOG debug f assertTrue f startsWith for int i i MSG_COUNT i String message getQueueName i Stomp NULL stompConnection sendFrame message StompFrame repsonse stompConnection receive assertEquals repsonse getHeaders get Stomp Headers Response RECEIPT_ID String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe for int i i MSG_COUNT i StompFrame message stompConnection receive assertEquals Stomp Responses MESSAGE message getAction assertEquals message getHeaders get Stomp Headers Message SUBSCRIPTION StompFrame browseDone stompConnection receive
Test timeout public void testNackMessage throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testHeaderValuesAreNotWSTrimmed throws Exception stompConnection setVersion Stomp V1_1 String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testDurableSubAndUnSubOnTwoTopics throws Exception stompConnection setVersion Stomp V1_1 String domain ObjectName brokerName new ObjectName domain BrokerViewMBean view BrokerViewMBean brokerService getManagementContext newProxyInstance brokerName BrokerViewMBean class true String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame
Test timeout public void testDurableSubAndUnSubOnTwoTopics throws Exception stompConnection setVersion Stomp V1_1 String domain ObjectName brokerName new ObjectName domain BrokerViewMBean view BrokerViewMBean brokerService getManagementContext newProxyInstance brokerName BrokerViewMBean class true String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive
stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
stompConnection sendFrame frame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame Stomp NULL stompConnection sendFrame frame Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame
stompConnection sendFrame frame Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive LOG debug frame assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL
Test timeout public void testDurableSubAndUnSubFlow throws Exception stompConnection setVersion Stomp V1_1 String domain ObjectName brokerName new ObjectName domain BrokerViewMBean view BrokerViewMBean brokerService getManagementContext newProxyInstance brokerName BrokerViewMBean class true String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame
Test timeout public void testDurableSubAndUnSubFlow throws Exception stompConnection setVersion Stomp V1_1 String domain ObjectName brokerName new ObjectName domain BrokerViewMBean view BrokerViewMBean brokerService getManagementContext newProxyInstance brokerName BrokerViewMBean class true String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive
stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getInactiveDurableTopicSubscribers length assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getInactiveDurableTopicSubscribers length assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getInactiveDurableTopicSubscribers length assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
Test timeout public void testMultipleDurableSubsWithOfflineMessages throws Exception stompConnection setVersion Stomp V1_1 final BrokerViewMBean view getProxyToBroker String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame
Test timeout public void testMultipleDurableSubsWithOfflineMessages throws Exception stompConnection setVersion Stomp V1_1 final BrokerViewMBean view getProxyToBroker String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive
stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
stompConnection sendFrame frame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame Stomp NULL stompConnection sendFrame frame assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return view getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame
stompConnection sendFrame connectFrame frame stompConnection receiveFrame LOG debug frame assertTrue frame contains assertEquals view getDurableTopicSubscribers length assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive assertEquals receipt getHeaders get Stomp Headers Response RECEIPT_ID frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive assertEquals receipt getHeaders get Stomp Headers Response RECEIPT_ID frame getQueueName Stomp NULL
receipt stompConnection receive assertEquals receipt getHeaders get Stomp Headers Response RECEIPT_ID frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length StompFrame message stompConnection receive assertEquals Stomp Responses MESSAGE message getAction assertEquals message getHeaders get Stomp Headers Message SUBSCRIPTION assertEquals view getDurableTopicSubscribers length assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL
frame Stomp NULL stompConnection sendFrame frame frame getQueueName ackMode Stomp NULL stompConnection sendFrame frame StompFrame receivedFirst stompConnection receive assertTrue receivedFirst getAction equals StompFrame receivedSecond stompConnection receive assertTrue receivedSecond getAction equals frame receivedSecond getHeaders get Stomp NULL stompConnection sendFrame frame frame receivedFirst getHeaders get Stomp NULL stompConnection sendFrame frame frame Stomp NULL stompConnection sendFrame frame String receipt stompConnection receiveFrame
Test timeout public void testTelnetStyleSends throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
Test timeout public void testTelnetStyleSends throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf String send getQueueName stompConnection sendFrame send StompFrame receipt stompConnection receive
Test timeout public void testClientAckWithoutAckId throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
Test timeout public void testClientAckWithoutAckId throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId String message getQueueName Stomp NULL stompConnection sendFrame message StompFrame received stompConnection receive assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals received getBody String ackId received getHeaders get Stomp Headers Message ACK_ID String frame ackId Stomp NULL stompConnection sendFrame frame received stompConnection receive assertTrue received getAction equals
String message getQueueName Stomp NULL stompConnection sendFrame message StompFrame received stompConnection receive assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals received getBody String ackId received getHeaders get Stomp Headers Message ACK_ID String frame ackId Stomp NULL stompConnection sendFrame frame received stompConnection receive assertTrue received getAction equals LOG info received frame ackId Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
Test timeout public void testClientAck throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
Test timeout public void testClientAck throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId String message getQueueName Stomp NULL stompConnection sendFrame message message getQueueName Stomp NULL stompConnection sendFrame message StompFrame received stompConnection receive
StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId String message getQueueName Stomp NULL stompConnection sendFrame message message getQueueName Stomp NULL stompConnection sendFrame message StompFrame received stompConnection receive LOG info received assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals received getBody received stompConnection receive
LOG info received assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals received getBody String frame received getHeaders get Stomp Headers Message ACK_ID Stomp NULL stompConnection sendFrame frame frame Stomp NULL stompConnection sendFrame frame assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connect frame stompConnection receiveFrame
String frame received getHeaders get Stomp Headers Message ACK_ID Stomp NULL stompConnection sendFrame frame frame Stomp NULL stompConnection sendFrame frame assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connect frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith stompConnection sendFrame subscribe receipt stompConnection receive
TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connect frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith stompConnection sendFrame subscribe receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith receiptId receipt getHeaders get assertEquals receiptId message getQueueName Stomp NULL stompConnection sendFrame message received stompConnection receive
Test timeout public void testClientAckMultipleMessagesWithSingleAck throws Exception final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId assertEquals MESSAGE_COUNT getProxyToQueue getQueueName getQueueSize String lastAckId null for int n n MESSAGE_COUNT n StompFrame received stompConnection receive
LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId assertEquals MESSAGE_COUNT getProxyToQueue getQueueName getQueueSize String lastAckId null for int n n MESSAGE_COUNT n StompFrame received stompConnection receive LOG info received assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals String format n received getBody lastAckId received getHeaders get Stomp Headers Message ACK_ID String frame lastAckId Stomp NULL stompConnection sendFrame frame
Test timeout public void testClientIndividualAck throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
Test timeout public void testClientIndividualAck throws Exception stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
received stompConnection receive assertTrue received getAction equals assertTrue received getHeaders containsKey Stomp Headers Message ACK_ID assertEquals received getBody String frame received getHeaders get Stomp Headers Message ACK_ID Stomp NULL stompConnection sendFrame frame frame Stomp NULL stompConnection sendFrame frame Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connect frame stompConnection receiveFrame
String frame received getHeaders get Stomp Headers Message ACK_ID Stomp NULL stompConnection sendFrame frame frame Stomp NULL stompConnection sendFrame frame Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connect frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith stompConnection sendFrame subscribe receipt stompConnection receive
Test timeout public void testRepeatedClientIndividualAckInMultipleTransactions throws Exception final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId for int n n MESSAGE_COUNT n StompFrame received stompConnection receive
Test timeout public void testQueueBrowerSubscription throws Exception final int MSG_COUNT String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
String f stompConnection receiveFrame LOG debug f assertTrue f startsWith for int i i MSG_COUNT i String message getQueueName i Stomp NULL stompConnection sendFrame message StompFrame repsonse stompConnection receive assertEquals repsonse getHeaders get Stomp Headers Response RECEIPT_ID String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe for int i i MSG_COUNT i StompFrame message stompConnection receive assertEquals Stomp Responses MESSAGE message getAction assertEquals message getHeaders get Stomp Headers Message SUBSCRIPTION StompFrame browseDone stompConnection receive
Test timeout public void testQueueBrowerNotInAutoAckMode throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testQueueBrowerNotInAutoAckMode throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame browseDone stompConnection receive
Test timeout public void testDurableSubAndUnSub throws Exception BrokerViewMBean view getProxyToBroker String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame
Test timeout public void testDurableSubAndUnSub throws Exception BrokerViewMBean view getProxyToBroker String connectFrame Stomp NULL stompConnection sendFrame connectFrame String frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame StompFrame receipt stompConnection receive
StompFrame receipt stompConnection receive LOG debug receipt assertTrue receipt getAction startsWith assertEquals receipt getHeaders get assertEquals view getDurableTopicSubscribers length frame Stomp NULL stompConnection sendFrame frame stompConnection close Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame
stompConnection close Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return getProxyToBroker getCurrentConnectionsCount TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis stompConnect stompConnection sendFrame connectFrame frame stompConnection receiveFrame LOG debug frame assertTrue frame startsWith assertEquals view getDurableTopicSubscribers length assertEquals view getInactiveDurableTopicSubscribers length frame getQueueName Stomp NULL stompConnection sendFrame frame receipt stompConnection receive
Test timeout public void testSubscribeWithNoId throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
Test timeout public void testSizeAndBrokerUsage throws Exception final int MSG_COUNT final int numK final byte bigPropContent new byte numK Arrays fill bigPropContent Byte MAX_VALUE final String bigProp new String bigPropContent String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
final int MSG_COUNT final int numK final byte bigPropContent new byte numK Arrays fill bigPropContent Byte MAX_VALUE final String bigProp new String bigPropContent String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith long usageStart brokerService getSystemUsage getMemoryUsage getUsage for int i i MSG_COUNT i String message getQueueName bigProp i Stomp NULL stompConnection sendFrame message StompFrame repsonse stompConnection receive
final String bigProp new String bigPropContent String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame LOG debug f assertTrue f startsWith long usageStart brokerService getSystemUsage getMemoryUsage getUsage for int i i MSG_COUNT i String message getQueueName bigProp i Stomp NULL stompConnection sendFrame message StompFrame repsonse stompConnection receive LOG info repsonse assertEquals repsonse getHeaders get Stomp Headers Response RECEIPT_ID long usageEnd brokerService getSystemUsage getMemoryUsage getUsage long usageDiff usageEnd usageStart
private void doTestMessagesRetirementAfterTransactionAbortClientIndividualAckMode boolean nack throws Exception final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId String begin Stomp NULL stompConnection sendFrame begin List String ackIds new ArrayList MESSAGE_COUNT for int n n MESSAGE_COUNT n StompFrame received stompConnection receive
private void doTestMessagesRetirementAfterTransactionAbortClientAckMode boolean nack throws Exception final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe MESSAGE_COUNT getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe MESSAGE_COUNT getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId String begin Stomp NULL stompConnection sendFrame begin List String ackIds new ArrayList MESSAGE_COUNT for int n n MESSAGE_COUNT n StompFrame received stompConnection receive
public void doTestMixedAckNackWithMessageAckIds boolean individual throws Exception final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame
final int MESSAGE_COUNT stompConnection setVersion Stomp V1_2 String connect stompConnection sendFrame connect String f stompConnection receiveFrame LOG info f assertTrue f startsWith assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe MESSAGE_COUNT individual getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive
assertTrue f indexOf assertTrue f indexOf for int n n MESSAGE_COUNT n String message getQueueName String format n Stomp NULL stompConnection sendFrame message String subscribe MESSAGE_COUNT individual getQueueName Stomp NULL stompConnection sendFrame subscribe StompFrame receipt stompConnection receive LOG info receipt assertTrue receipt getAction startsWith String receiptId receipt getHeaders get assertEquals receiptId List String ackIds new ArrayList MESSAGE_COUNT for int n n MESSAGE_COUNT n StompFrame received stompConnection receive
Test timeout public void testConnectionAdvisory throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Test timeout public void testConnectionAdvisory throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive
stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive LOG debug f toString assertEquals f getAction assertTrue f getBody length assertTrue f getBody startsWith c stop c close f stompConnection receive
Test timeout public void testConnectionAdvisoryJSON throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_JSON toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Test timeout public void testConnectionAdvisoryJSON throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_JSON toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive
stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive LOG debug f toString assertEquals f getAction assertTrue f getBody length assertTrue f getBody startsWith c stop c close f stompConnection receive
Test timeout public void testConnectionAdvisoryXML throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_XML toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Test timeout public void testConnectionAdvisoryXML throws Exception stompConnect HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_XML toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive
stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start StompFrame f stompConnection receive LOG debug f toString assertEquals f getAction assertTrue f getBody length assertTrue f getBody startsWith c stop c close f stompConnection receive
Test timeout public void testConsumerAdvisory throws Exception stompConnect Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
stompConnect Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start Session session c createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer dest assertNotNull consumer StompFrame f stompConnection receive
Test timeout public void testProducerAdvisory throws Exception stompConnect Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start Session session c createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer dest Message mess session createTextMessage producer send mess StompFrame f stompConnection receive
Test timeout public void testProducerAdvisoryXML throws Exception stompConnect Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_ADVISORY_XML toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_ADVISORY_XML toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start Session session c createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer dest Message mess session createTextMessage producer send mess StompFrame f stompConnection receive
Test timeout public void testProducerAdvisoryJSON throws Exception stompConnect Destination dest new ActiveMQQueue HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_ADVISORY_JSON toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
HashMap String String subheaders new HashMap String String subheaders put Stomp Transformations JMS_ADVISORY_JSON toString subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection c cf createConnection c start Session session c createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer dest Message mess session createTextMessage producer send mess StompFrame f stompConnection receive
Thread sleep Queue query session createQueue STATS_DESTINATION_PREFIX testQueue getQueueName Message msg session createMessage msg setJMSReplyTo replyTo producer send query msg catch Exception e e printStackTrace child start stompConnect stompConnection connect stompConnection subscribe replyTo getTopicName Stomp Headers Subscribe AckModeValues AUTO stompConnection begin StompFrame f stompConnection receive stompConnection commit
Test timeout public void testDestinationAdvisoryTempQueue throws Exception cf setWatchTopicAdvisories false stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Test timeout public void testDestinationAdvisoryTempQueue throws Exception cf setWatchTopicAdvisories false stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE session createTemporaryQueue connection close StompFrame f stompConnection receive
Test timeout public void testDestinationAdvisoryTempTopic throws Exception cf setWatchTopicAdvisories false stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
Test timeout public void testDestinationAdvisoryTempTopic throws Exception cf setWatchTopicAdvisories false stompConnect HashMap String String subheaders new HashMap String String subheaders put stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE session createTemporaryTopic connection close StompFrame f stompConnection receive
Test timeout public void testDestinationAdvisoryCompositeTempDestinations throws Exception cf setWatchTopicAdvisories true HashMap String String subheaders new HashMap String String subheaders put stompConnect stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame
cf setWatchTopicAdvisories true HashMap String String subheaders new HashMap String String subheaders put stompConnect stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE session createTemporaryTopic session createTemporaryQueue ObjectName topicSubscribers brokerService getAdminView getTopicSubscribers for ObjectName subscription topicSubscribers
stompConnect stompConnection connect stompConnection subscribe Stomp Headers Subscribe AckModeValues AUTO subheaders String frame stompConnection receiveFrame LOG debug frame assertTrue frame trim startsWith Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE session createTemporaryTopic session createTemporaryQueue ObjectName topicSubscribers brokerService getAdminView getTopicSubscribers for ObjectName subscription topicSubscribers LOG info subscription connection close StompFrame f stompConnection receive
assertTrue frame trim startsWith Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE session createTemporaryTopic session createTemporaryQueue ObjectName topicSubscribers brokerService getAdminView getTopicSubscribers for ObjectName subscription topicSubscribers LOG info subscription connection close StompFrame f stompConnection receive LOG debug f toString assertEquals f getAction assertTrue f getBody length assertTrue f getBody startsWith f stompConnection receive
Test timeout public void testSubscribeToCompositeQueue throws Exception stompConnect String destinationA String destinationB String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith
Test timeout public void testSubscribeToCompositeQueueTrailersDefault throws Exception stompConnect String destinationA String destinationB String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith
Test timeout public void testSubscribeToCompositeTopics throws Exception stompConnect String destinationA String destinationB String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith
Test timeout public void testSendMessageToCompositeQueueNoPrefixes throws Exception stompConnect String destinationA String destinationB String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame destinationA destinationB Stomp NULL stompConnection sendFrame frame final BrokerViewMBean brokerView getProxyToBroker assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ObjectName queueName brokerView getQueues
Test timeout public void testEmptyDestinationOnSubscribe throws Exception stompConnect stompConnection sendFrame Stomp NULL StompFrame frame stompConnection receive assertTrue frame toString startsWith String send stompConnection sendFrame send StompFrame receipt stompConnection receive
Test public void test throws Exception stompConnect String connectFrame Stomp NULL stompConnection sendFrame connectFrame String response stompConnection receiveFrame trim
StompFrame frame connection receive TimeUnit SECONDS toMillis assertNotNull frame numReceived if LOG isDebugEnabled numReceived numReceived MSG_COUNT LOG debug frame getHeaders get receiveCount incrementAndGet catch Exception e if numReceived MSG_COUNT LOG warn numReceived e getMessage ready countDown assertTrue started await TimeUnit MINUTES String frame TimeUnit SECONDS sleep for int ix ix MSG_COUNT ix
public String doTestProducerConsumer int index throws Exception String message null assertEquals brokerService getAdminView getTopicSubscribers length StompConnection producer stompConnect StompConnection consumer stompConnect subscribe consumer Integer toString index sendMessage producer index try StompFrame frame consumer receive
public String doTestProducerDurableConsumer int index throws Exception String message null assertEquals brokerService getAdminView getTopicSubscribers length StompConnection producer stompConnect StompConnection consumer stompConnect subscribe consumer Integer toString index true sendMessage producer index try StompFrame frame consumer receive
Test timeout public void testRemoveSubscriber throws Exception stompConnect Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer new ActiveMQQueue getQueueName Message message session createTextMessage for int idx idx idx producer send message
for int idx idx idx producer send message LOG debug idx producer close session close connection close String connectFrame Stomp NULL stompConnection sendFrame connectFrame stompConnection receiveFrame String frame getQueueName Stomp NULL stompConnection sendFrame frame int messagesCount int count while count String receiveFrame stompConnection receiveFrame
String messageId getHeaderValue receiveFrame HEADER_MESSAGE_ID String ackmessage HEADER_MESSAGE_ID messageId Stomp NULL stompConnection sendFrame ackmessage messagesCount count stompDisconnect Thread sleep stompConnect connectFrame Stomp NULL stompConnection sendFrame connectFrame stompConnection receiveFrame frame getQueueName Stomp NULL stompConnection sendFrame frame try while count
stompConnection receiveFrame frame getQueueName Stomp NULL stompConnection sendFrame frame try while count String receiveFrame stompConnection receiveFrame LOG debug receiveFrame assertEquals COMMAND_MESSAGE getCommand receiveFrame String messageId getHeaderValue receiveFrame HEADER_MESSAGE_ID String ackmessage HEADER_MESSAGE_ID messageId trim Stomp NULL stompConnection sendFrame ackmessage messagesCount count catch IOException ex ex printStackTrace
Test timeout public void testCRLF throws Exception for TransportConnector connector brokerService getTransportConnectors
Test timeout public void testCRLF throws Exception for TransportConnector connector brokerService getTransportConnectors LOG info connector getConnectUri int port connector getConnectUri getPort StompConnection stompConnection new StompConnection stompConnection open createSocket port String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame
Test timeout public void testCRLF11 throws Exception for TransportConnector connector brokerService getTransportConnectors
Test timeout public void testCRLF11 throws Exception for TransportConnector connector brokerService getTransportConnectors LOG info connector getConnectUri int port connector getConnectUri getPort StompConnection stompConnection new StompConnection stompConnection open createSocket port String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame
frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp NULL stompConnection sendFrame frame sendMessage getName StompFrame msg stompConnection receive assertTrue msg getAction equals HashMap String String ackHeaders new HashMap String String ackHeaders put msg getHeaders get ackHeaders put StompFrame ack new StompFrame ackHeaders stompConnection sendFrame ack format final QueueViewMBean queueView getProxyToQueue getQueueName assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp NULL stompConnection sendFrame frame sendMessage frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame frame startsWith sendMessage try frame stompConnection receiveFrame
Test timeout public void testTransformationSendXMLObject throws Exception MessageConsumer consumer session createConsumer queue String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_OBJECT_XML xmlObject Stomp NULL stompConnection sendFrame frame Message message consumer receive assertNotNull message
Test timeout public void testTransformationReceiveJSONObjectAndMap throws Exception MessageProducer producer session createProducer new ActiveMQQueue getQueueName ObjectMessage objMessage session createObjectMessage new SamplePojo producer send objMessage MapMessage mapMessage session createMapMessage mapMessage setString mapMessage setString producer send mapMessage String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_JSON Stomp NULL stompConnection sendFrame frame StompFrame json stompConnection receive
mapMessage setString mapMessage setString producer send mapMessage String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_JSON Stomp NULL stompConnection sendFrame frame StompFrame json stompConnection receive LOG info json SamplePojo pojo createObjectFromJson json getBody assertTrue pojo getCity equals assertTrue pojo getName equals json stompConnection receive
Test timeout public void testTransformationSendAndReceiveXmlMap throws Exception String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_XML Stomp NULL stompConnection sendFrame frame frame getQueueName Stomp Transformations JMS_MAP_JSON jsonMap Stomp NULL stompConnection sendFrame frame StompFrame xmlFrame stompConnection receive
Test timeout public void testTransformationSendAndReceiveJsonMap throws Exception String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_JSON Stomp NULL stompConnection sendFrame frame frame getQueueName Stomp Transformations JMS_MAP_XML xmlMap Stomp NULL stompConnection sendFrame frame StompFrame json stompConnection receive
Test timeout public void testTransformationReceiveXMLMap throws Exception MessageProducer producer session createProducer new ActiveMQQueue getQueueName MapMessage message session createMapMessage message setString message setString producer send message String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_MAP_XML Stomp NULL stompConnection sendFrame frame StompFrame xmlFrame stompConnection receive
Test timeout public void testTransformationReceiveJSONMap throws Exception MessageProducer producer session createProducer new ActiveMQQueue getQueueName MapMessage message session createMapMessage message setString message setString producer send message String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith frame getQueueName Stomp Transformations JMS_MAP_JSON Stomp NULL stompConnection sendFrame frame StompFrame json stompConnection receive
private void doTestActiveMQReplyToTempDestination String type throws Exception
private void doTestActiveMQReplyToTempDestination String type throws Exception LOG info type final String dest type getQueueName final String tempDest String format type
private void doTestActiveMQReplyToTempDestination String type throws Exception LOG info type final String dest type getQueueName final String tempDest String format type LOG info dest tempDest stompConnection subscribe dest stompConnection subscribe tempDest HashMap String String properties new HashMap String String properties put Stomp Headers Send REPLY_TO tempDest
LOG info type final String dest type getQueueName final String tempDest String format type LOG info dest tempDest stompConnection subscribe dest stompConnection subscribe tempDest HashMap String String properties new HashMap String String properties put Stomp Headers Send REPLY_TO tempDest LOG info String format Stomp Headers Send REPLY_TO tempDest stompConnection send dest null properties StompFrame received stompConnection receive assertNotNull received String remoteReplyTo received getHeaders get Stomp Headers Send REPLY_TO assertNotNull remoteReplyTo assertTrue remoteReplyTo startsWith String format type
stompConnection subscribe tempDest HashMap String String properties new HashMap String String properties put Stomp Headers Send REPLY_TO tempDest LOG info String format Stomp Headers Send REPLY_TO tempDest stompConnection send dest null properties StompFrame received stompConnection receive assertNotNull received String remoteReplyTo received getHeaders get Stomp Headers Send REPLY_TO assertNotNull remoteReplyTo assertTrue remoteReplyTo startsWith String format type LOG info String format received getAction Stomp Headers Send REPLY_TO remoteReplyTo stompConnection send remoteReplyTo StompFrame reply stompConnection receive assertNotNull reply assertEquals reply getAction
private void doReplyToAcrossConnections String type throws Exception
private void doReplyToAcrossConnections String type throws Exception LOG info type StompConnection responder new StompConnection stompConnect responder String frame Stomp NULL responder sendFrame frame frame responder receiveFrame assertTrue frame startsWith final String dest type getQueueName final String tempDest String format type
frame responder receiveFrame assertTrue frame startsWith final String dest type getQueueName final String tempDest String format type LOG info dest tempDest stompConnection subscribe tempDest HashMap String String properties new HashMap String String properties put Stomp Headers RECEIPT_REQUESTED responder subscribe dest null properties frame responder receiveFrame assertTrue frame frame trim startsWith assertTrue frame frame indexOf Stomp Headers Response RECEIPT_ID properties new HashMap String String properties put Stomp Headers Send REPLY_TO tempDest properties put Stomp Headers RECEIPT_REQUESTED
assertTrue frame frame trim startsWith assertTrue frame frame indexOf Stomp Headers Response RECEIPT_ID properties new HashMap String String properties put Stomp Headers Send REPLY_TO tempDest properties put Stomp Headers RECEIPT_REQUESTED LOG info String format Stomp Headers Send REPLY_TO tempDest stompConnection send dest null properties frame stompConnection receiveFrame assertTrue frame frame trim startsWith assertTrue frame frame indexOf Stomp Headers Response RECEIPT_ID StompFrame received responder receive assertNotNull received String remoteReplyTo received getHeaders get Stomp Headers Send REPLY_TO assertNotNull remoteReplyTo assertTrue remoteReplyTo startsWith String format type
stompConnection send dest null properties frame stompConnection receiveFrame assertTrue frame frame trim startsWith assertTrue frame frame indexOf Stomp Headers Response RECEIPT_ID StompFrame received responder receive assertNotNull received String remoteReplyTo received getHeaders get Stomp Headers Send REPLY_TO assertNotNull remoteReplyTo assertTrue remoteReplyTo startsWith String format type LOG info String format received getAction Stomp Headers Send REPLY_TO remoteReplyTo responder send remoteReplyTo StompFrame reply stompConnection receive assertNotNull reply assertEquals reply getAction assertTrue reply getBody contains
stompConnect String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith boolean gotMessage false boolean gotReceipt false char payload new char Arrays fill payload String test UUID randomUUID UUID randomUUID new String payload Stomp NULL frame Stomp NULL stompConnection sendFrame frame stompConnection sendFrame test while gotMessage gotReceipt frame stompConnection receiveFrame
Test timeout public void testHeaderValuesAreTrimmed1_0 throws Exception String connectFrame Stomp NULL stompConnection sendFrame connectFrame String f stompConnection receiveFrame
protected void addTranportConnectors throws Exception TransportConnector connector null if isUseTcpConnector connector brokerService addConnector port getAdditionalConfig port connector getConnectUri getPort
if isUseTcpConnector connector brokerService addConnector port getAdditionalConfig port connector getConnectUri getPort LOG debug port if isUseSslConnector connector brokerService addConnector sslPort getAdditionalConfig sslPort connector getConnectUri getPort LOG debug sslPort if isUseNioConnector connector brokerService addConnector nioPort getAdditionalConfig nioPort connector getConnectUri getPort LOG debug nioPort if isUseNioPlusSslConnector connector brokerService addConnector nioSslPort getAdditionalConfig nioSslPort connector getConnectUri getPort
if isUseSslConnector connector brokerService addConnector sslPort getAdditionalConfig sslPort connector getConnectUri getPort LOG debug sslPort if isUseNioConnector connector brokerService addConnector nioPort getAdditionalConfig nioPort connector getConnectUri getPort LOG debug nioPort if isUseNioPlusSslConnector connector brokerService addConnector nioSslPort getAdditionalConfig nioSslPort connector getConnectUri getPort LOG debug nioSslPort if isUseAutoConnector connector brokerService addConnector autoPort getAdditionalConfig autoPort connector getConnectUri getPort
LOG debug sslPort if isUseNioConnector connector brokerService addConnector nioPort getAdditionalConfig nioPort connector getConnectUri getPort LOG debug nioPort if isUseNioPlusSslConnector connector brokerService addConnector nioSslPort getAdditionalConfig nioSslPort connector getConnectUri getPort LOG debug nioSslPort if isUseAutoConnector connector brokerService addConnector autoPort getAdditionalConfig autoPort connector getConnectUri getPort LOG debug autoPort if isUseAutoSslConnector connector brokerService addConnector autoSslPort getAdditionalConfig
Test timeout public void testSendMessage throws Exception Destination destination session createQueue getQueueName MessageConsumer consumer session createConsumer destination String frame Stomp NULL stompConnection sendFrame frame frame stompConnection receiveFrame assertTrue frame startsWith long timestamp System currentTimeMillis TimeUnit DAYS toMillis long expires timestamp TimeUnit SECONDS toMillis
Override public void evaluate throws Throwable for int i i repetitions untilFailure i if untilFailure
public void waitForMessagesToArrive int messageCount
public void waitForMessagesToArrive int messageCount LOG info messageCount long start System currentTimeMillis for int i i messageCount i try if hasReceivedMessages messageCount break long duration System currentTimeMillis start if duration maximumDuration break synchronized semaphore semaphore wait maximumDuration duration catch InterruptedException e LOG info e long end System currentTimeMillis start
protected Destination createDestination String destName throws JMSException String simpleName getSimpleName destName byte destinationType getDestinationType destName if destinationType ActiveMQDestination QUEUE_TYPE
protected Destination createTemporaryDestination String destName throws JMSException byte destinationType getDestinationType destName if destinationType ActiveMQDestination TEMP_QUEUE_TYPE LOG warn destName TemporaryQueue temporaryQueue getSession createTemporaryQueue
for int i i args length i String arg args i if arg startsWith arg startsWith arg arg substring int index arg indexOf String key arg substring index String val arg substring index if key equalsIgnoreCase if val endsWith val configFile new File val props setProperty key val Properties fileProps new Properties try if configFile null
public MessageProducer createJmsProducer Destination dest throws JMSException jmsProducer getSession createProducer dest if client getDeliveryMode equalsIgnoreCase JmsProducerProperties DELIVERY_MODE_PERSISTENT
Override protected Destination createTemporaryDestination String destName throws JMSException String simpleName getSimpleName destName byte destinationType getDestinationType destName if destinationType ActiveMQDestination TEMP_QUEUE_TYPE
protected void writeToXml try xmlFile createXmlFile xmlFileWriter new PrintWriter new FileOutputStream xmlFile writeXmlHeader writeXmlTestSettings writeXmlLogFile writeXmlPerfSummary writeXmlFooter xmlFileWriter close
Override public void startSampler CountDownLatch completionLatch ClientRunBasis clientRunBasis long clientRunDuration Validate notNull clientRunBasis Validate notNull completionLatch if clientRunBasis ClientRunBasis time duration duration null clientRunDuration this duration rampUpTime rampUpTime null duration rampUpPercent this rampUpTime rampDownTime rampDownTime null duration rampDownPercent this rampDownTime Validate isTrue duration rampUpTime rampDownTime rampDownTime rampDownTime duration
public void testUseURIToSetUseClientIDPrefixOnConnectionFactory throws URISyntaxException JMSException ActiveMQConnectionFactory cf new ActiveMQConnectionFactory assertEquals cf getClientIDPrefix connection ActiveMQConnection cf createConnection connection start String clientID connection getClientID
public void testGetBrokerName throws URISyntaxException JMSException ActiveMQConnectionFactory cf new ActiveMQConnectionFactory connection ActiveMQConnection cf createConnection connection start String brokerName connection getBrokerName
protected void assertCreateConnection String uri throws Exception broker new BrokerService broker setPersistent false broker setUseJmx false broker setAdvisorySupport false broker setSchedulerSupport false TransportConnector connector broker addConnector uri broker start URI temp new URI uri URI currentURI new URI connector getPublishableConnectString URI connectURI new URI temp getScheme temp getUserInfo temp getHost currentURI getPort temp getPath temp getQuery temp getFragment
public void testSerialization throws Exception ActiveMQMessageAuditNoSync audit new ActiveMQMessageAuditNoSync byte bytes serialize audit
public void testSerialization throws Exception ActiveMQMessageAuditNoSync audit new ActiveMQMessageAuditNoSync byte bytes serialize audit LOG debug bytes length audit recover bytes List MessageReference list new ArrayList MessageReference for int j j j ProducerId pid new ProducerId pid setConnectionId pid setSessionId pid setValue j
ProducerId pid new ProducerId pid setConnectionId pid setSessionId pid setValue j LOG debug j for int i i i MessageId id new MessageId id setProducerId pid id setProducerSequenceId i ActiveMQMessage msg new ActiveMQMessage msg setMessageId id list add msg assertFalse audit isDuplicate msg getMessageId toString if i bytes serialize audit
id setProducerId pid id setProducerSequenceId i ActiveMQMessage msg new ActiveMQMessage msg setMessageId id list add msg assertFalse audit isDuplicate msg getMessageId toString if i bytes serialize audit LOG debug bytes length audit recover bytes if i for MessageReference message list audit rollback message getMessageId toString list clear bytes serialize audit
public void testGetBrokerName throws URISyntaxException JMSException ActiveMQConnectionFactory cf getXAConnectionFactory connection ActiveMQConnection cf createConnection connection start String brokerName connection getBrokerName
public void testRollbackXaErrorCode throws Exception String brokerName BrokerService broker BrokerFactory createBroker new URI brokerName broker start broker waitUntilStarted ActiveMQConnectionFactory cf getXAConnectionFactory broker getTransportConnectors get getConnectUri XAConnection connection XAConnection cf createConnection connection start XASession session connection createXASession XAResource resource session getXAResource Xid tid createXid try resource rollback tid fail catch XAException expected
protected void assertCreateConnection String uri throws Exception broker new BrokerService broker setPersistent false broker setUseJmx false TransportConnector connector broker addConnector uri broker start URI temp new URI uri URI currentURI new URI connector getPublishableConnectString URI connectURI new URI temp getScheme temp getUserInfo temp getHost currentURI getPort temp getPath temp getQuery temp getFragment
try Field field getClass getField attribute field set this value catch Throwable e try boolean found false String setterName attribute substring toUpperCase attribute substring for Method method getClass getMethods if method getName equals setterName method invoke this value found true break if found throw new NoSuchMethodError attribute catch Throwable ex
Test timeout public void testAsyncMessageExpiration throws Exception ExecutorService executors Executors newFixedThreadPool final Session session connection createSession false Session AUTO_ACKNOWLEDGE final MessageProducer producer session createProducer queue producer setTimeToLive 10L executors submit new Runnable Override public void run try Thread sleep int count while failed get count producer send session createTextMessage count
public void testMessageListenerWithConsumerCanBeStoppedConcurently throws Exception final AtomicInteger counter new AtomicInteger final CountDownLatch closeDone new CountDownLatch connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE destination createDestination session ActiveMQDestination QUEUE_TYPE sendMessages session destination final ActiveMQMessageConsumer consumer ActiveMQMessageConsumer session createConsumer destination final Map Thread Throwable exceptions Collections synchronizedMap new HashMap Thread Throwable Thread setDefaultUncaughtExceptionHandler new UncaughtExceptionHandler Override public void uncaughtException Thread t Throwable e
public void testMessageListenerOnMessageCloseUnackedWithPrefetch1StayInQueue throws Exception final AtomicInteger counter new AtomicInteger final CountDownLatch sendDone new CountDownLatch final CountDownLatch got2Done new CountDownLatch connection getPrefetchPolicy setAll connection setOptimizedMessageDispatch false connection start Session session connection createSession false ackMode destination createDestination session destinationType MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message m try TextMessage tm TextMessage m
public void testMessageListenerAutoAckOnCloseWithPrefetch1 throws Exception final AtomicInteger counter new AtomicInteger final CountDownLatch sendDone new CountDownLatch final CountDownLatch got2Done new CountDownLatch connection getPrefetchPolicy setAll connection setOptimizedMessageDispatch false connection start Session session connection createSession false ackMode destination createDestination session destinationType MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message m try TextMessage tm TextMessage m
public void testRedeliverNewSession throws Exception String text System currentTimeMillis Message sendMessage session createTextMessage text if verbose
public boolean waitForBridgeFormation final BrokerService broker final int min final int bridgeIndex long wait throws Exception boolean result false if broker getNetworkConnectors isEmpty result Wait waitFor new Wait Condition public boolean isSatisified throws Exception int activeCount for NetworkBridge bridge broker getNetworkConnectors get bridgeIndex activeBridges if bridge getRemoteBrokerName null
protected void waitForMinTopicRegionConsumerCount final String name final int count throws Exception final BrokerService broker brokers get name broker final TopicRegion topicRegion TopicRegion RegionBroker broker getRegionBroker getTopicRegion assertTrue name Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test timeout public void testBrowsingExpiration throws JMSException InterruptedException sendTestMessages Connection browserConnection factory createConnection browserConnection start int browsed browse queue browserConnection assertEquals MESSAGES_TO_SEND browsed long begin System nanoTime while browsed Thread sleep browsed browse queue browserConnection
private int browse ActiveMQQueue queue Connection connection throws JMSException Session session connection createSession false Session AUTO_ACKNOWLEDGE QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int browsed while enumeration hasMoreElements TextMessage m TextMessage enumeration nextElement browsed
protected void sendTestMessages throws JMSException Connection prodConnection factory createConnection prodConnection start Session prodSession prodConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer prodSession createProducer queue producer setDeliveryMode DeliveryMode NON_PERSISTENT producer setTimeToLive TTL for int i i MESSAGES_TO_SEND i String msgStr i producer send prodSession createTextMessage msgStr
MessageProducer producer session createProducer destination MessageConsumer consumer session createConsumer destination connection start TextMessage outbound new TextMessage for int i i i outbound i session createTextMessage i while consumer receive null consumer close for int i i outbound length i producer send outbound i ObjectName queueViewMBeanName new ObjectName LOG info QueueViewMBean proxy QueueViewMBean broker getManagementContext newProxyInstance queueViewMBeanName QueueViewMBean class true long concount proxy getConsumerCount
connection start TextMessage outbound new TextMessage for int i i i outbound i session createTextMessage i while consumer receive null consumer close for int i i outbound length i producer send outbound i ObjectName queueViewMBeanName new ObjectName LOG info QueueViewMBean proxy QueueViewMBean broker getManagementContext newProxyInstance queueViewMBeanName QueueViewMBean class true long concount proxy getConsumerCount LOG info concount long messcount proxy getQueueSize
producer send outbound i ObjectName queueViewMBeanName new ObjectName LOG info QueueViewMBean proxy QueueViewMBean broker getManagementContext newProxyInstance queueViewMBeanName QueueViewMBean class true long concount proxy getConsumerCount LOG info concount long messcount proxy getQueueSize LOG info messcount CompositeData compdatalist proxy browse if compdatalist length fail String messageIDs new String compdatalist length for int i i compdatalist length i CompositeData cdata compdatalist i if i
TabularData table proxy browseAsTable LOG info table assertTrue table size assertEquals outbound length proxy getQueueSize assertEquals outbound length compdatalist length assertEquals outbound length table size LOG info for int i i outbound length i producer send outbound i LOG info messcount proxy getQueueSize LOG info messcount compdatalist proxy browse if compdatalist length fail
assertTrue table size assertEquals outbound length proxy getQueueSize assertEquals outbound length compdatalist length assertEquals outbound length table size LOG info for int i i outbound length i producer send outbound i LOG info messcount proxy getQueueSize LOG info messcount compdatalist proxy browse if compdatalist length fail messageIDs new String compdatalist length for int i i compdatalist length i
public void testLargeNumberOfMessages throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQQueue destination new ActiveMQQueue connection start MessageProducer producer session createProducer destination int numberOfMessages for int i i numberOfMessages i producer send session createTextMessage i QueueBrowser browser session createBrowser destination Enumeration enumeration browser getEnumeration assertTrue enumeration hasMoreElements int numberBrowsed while enumeration hasMoreElements Message browsed Message enumeration nextElement if LOG isDebugEnabled
public void testSendReceive throws Exception super testSendReceive messages clear Destination consumerDestination consumeSession createQueue
public void testDuplicate throws Exception ActiveMQDestination queue ActiveMQDestination session createQueue for int i i data length i Message message createMessage i configureMessage message if verbose
protected void setUp throws Exception deliveryMode DeliveryMode NON_PERSISTENT topic false super setUp consumerDestination2 consumeSession createTopic
public void doTestRedelivery String brokerUrl boolean interleaveProducer throws Exception
Connection connection connectionFactory createConnection connection start if interleaveProducer populateDestinationWithInterleavedProducer nbMessages destinationName connection else populateDestination nbMessages destinationName connection AtomicInteger received new AtomicInteger Map String Boolean rolledback new ConcurrentHashMap String Boolean while received get nbMessages Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination TextMessage msg TextMessage consumer receive if msg null if msg null rolledback put msg getText Boolean TRUE null
else populateDestination nbMessages destinationName connection AtomicInteger received new AtomicInteger Map String Boolean rolledback new ConcurrentHashMap String Boolean while received get nbMessages Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination TextMessage msg TextMessage consumer receive if msg null if msg null rolledback put msg getText Boolean TRUE null LOG info msg getText received getAndIncrement msg getJMSMessageID assertTrue msg getJMSRedelivered assertEquals msg getLongProperty session commit
connection start populateDestinationWithInterleavedProducer nbMessages destinationName connection AtomicInteger received new AtomicInteger Map String Boolean rolledback new ConcurrentHashMap String Boolean Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination while received get nbMessages TextMessage msg TextMessage consumer receive if msg null if msg null rolledback put msg getText Boolean TRUE null LOG info msg getText received getAndIncrement msg getJMSMessageID assertTrue msg getJMSRedelivered session commit else
connection start populateDestination nbMessages destinationName connection AtomicInteger received new AtomicInteger Map String Boolean rolledback new ConcurrentHashMap String Boolean Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName while received get nbMessages MessageConsumer consumer session createConsumer destination TextMessage msg TextMessage consumer receive if msg null if msg null rolledback put msg getText Boolean TRUE null LOG info msg getText received getAndIncrement msg getJMSMessageID assertTrue msg getJMSRedelivered session commit else
ConnectionFactory connectionFactory new ActiveMQConnectionFactory brokerUrl Connection connection connectionFactory createConnection connection start populateDestination numMessages destinationName connection connection close AtomicInteger received new AtomicInteger final int maxRetries new RedeliveryPolicy getMaximumRedeliveries while received get maxRetries connection connectionFactory createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination TextMessage msg TextMessage consumer receive if msg null
public void testSendReceive throws Exception messages clear for int i i data length i Message message session createTextMessage data i message setStringProperty data i message setIntProperty i if verbose if LOG isDebugEnabled
List Object copyOfMessages Arrays asList receivedMessages toArray int counter if data length copyOfMessages size for Iterator Object iter copyOfMessages iterator iter hasNext TextMessage message TextMessage iter next if LOG isInfoEnabled LOG info counter message getText assertEquals data length receivedMessages size for int i i data length i TextMessage received TextMessage receivedMessages get i String text received getText String stringProperty received getStringProperty int intProperty received getIntProperty if verbose if LOG isDebugEnabled
protected void consumeMessage Message message List Message messageList if verbose if LOG isDebugEnabled
public void testConsumeExpiredQueue throws Exception MessageProducer producer createProducer timeToLive consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject MessageConsumer consumer createConsumer connection start for int i i data length i Message message session createTextMessage data i message setStringProperty data i message setIntProperty i if verbose if LOG isDebugEnabled
messages add received if messages size TimeUnit SECONDS sleep received acknowledge assertEquals messageCount messages size Vector Message dlqMessages new Vector Message while received dlqConsumer receive null dlqMessages add received assertEquals data length dlqMessages size final DestinationStatistics view getDestinationStatistics BrokerRegistry getInstance findFirst ActiveMQDestination transform consumerDestination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return view getInflight getCount
public void testConsumeQueue throws Exception MessageProducer producer createProducer consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject MessageConsumer consumer createConsumer connection start for int i i data length i Message message session createTextMessage data i message setStringProperty data i message setIntProperty i if verbose if LOG isDebugEnabled
public void testConsumeExpiredTopic throws Exception MessageProducer producer createProducer timeToLive consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject MessageConsumer consumer createConsumer connection start for int i i data length i Message message session createTextMessage data i message setStringProperty data i message setIntProperty i if verbose if LOG isDebugEnabled
public void testConsumeTopic throws Exception MessageProducer producer createProducer consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject MessageConsumer consumer createConsumer connection start for int i i data length i Message message session createTextMessage data i message setStringProperty data i message setIntProperty i if verbose if LOG isDebugEnabled
public void testSlowConsumerDoesNotBlockFastTempUsers throws Exception ActiveMQConnectionFactory advisoryConnFactory new ActiveMQConnectionFactory Connection connection advisoryConnFactory createConnection connections add connection connection start final CountDownLatch done new CountDownLatch final AtomicBoolean ok new AtomicBoolean true final AtomicBoolean first new AtomicBoolean true VMTransport t ActiveMQConnection connection getTransport narrow VMTransport class t setTransportListener new TransportListener Override public void onCommand Object command if first compareAndSet true false try ok set done await TimeUnit SECONDS
protected void setUp throws Exception deliveryMode DeliveryMode NON_PERSISTENT super setUp consumerDestination2 consumeSession createTopic
connection setClientID getClass getName LOG info connection session connection createSession false Session CLIENT_ACKNOWLEDGE consumeSession connection createSession false Session CLIENT_ACKNOWLEDGE LOG info session LOG info consumeSession producer session createProducer null LOG info producer if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
session connection createSession false Session CLIENT_ACKNOWLEDGE consumeSession connection createSession false Session CLIENT_ACKNOWLEDGE LOG info session LOG info consumeSession producer session createProducer null LOG info producer if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass LOG info producerDestination producerDestination getClass consumer createConsumer
public void testRecover throws Exception String text Message sendMessage session createTextMessage text if verbose
public void testSendAndReceive throws Exception clientConnection createConnection clientConnection setClientID getSubject Session session clientConnection createSession false Session AUTO_ACKNOWLEDGE clientConnection start Destination replyDestination createTemporaryDestination session clientSideClientID clientConnection getClientID
public void testSendAndReceive throws Exception clientConnection createConnection clientConnection setClientID getSubject Session session clientConnection createSession false Session AUTO_ACKNOWLEDGE clientConnection start Destination replyDestination createTemporaryDestination session clientSideClientID clientConnection getClientID LOG info clientSideClientID MessageProducer requestProducer session createProducer requestDestination MessageConsumer replyConsumer session createConsumer replyDestination TextMessage requestMessage session createTextMessage requestMessage setJMSReplyTo replyDestination requestProducer send requestMessage LOG info
clientConnection start Destination replyDestination createTemporaryDestination session clientSideClientID clientConnection getClientID LOG info clientSideClientID MessageProducer requestProducer session createProducer requestDestination MessageConsumer replyConsumer session createConsumer replyDestination TextMessage requestMessage session createTextMessage requestMessage setJMSReplyTo replyDestination requestProducer send requestMessage LOG info LOG info requestMessage toString Message msg replyConsumer receive if msg TextMessage TextMessage replyMessage TextMessage msg LOG info
public void onMessage Message message try TextMessage requestMessage TextMessage message LOG info
protected void onException JMSException e
super setUp connectionFactory createConnectionFactory connection createConnection if durable connection setClientID getClass getName LOG info connection session connection createSession false Session AUTO_ACKNOWLEDGE LOG info session if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
if durable connection setClientID getClass getName LOG info connection session connection createSession false Session AUTO_ACKNOWLEDGE LOG info session if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass LOG info producerDestination producerDestination getClass producer session createProducer producerDestination producer setDeliveryMode deliveryMode
if durable connection setClientID getClass getName LOG info connection session connection createSession false Session AUTO_ACKNOWLEDGE LOG info session producer session createProducer null producer setDeliveryMode deliveryMode LOG info producer deliveryMode DeliveryMode PERSISTENT if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createSendConnection sendConnection start receiveConnection createReceiveConnection receiveConnection start
protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createSendConnection sendConnection start receiveConnection createReceiveConnection receiveConnection start LOG info sendConnection
protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createSendConnection sendConnection start receiveConnection createReceiveConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session createSendSession sendConnection receiveSession createReceiveSession receiveConnection
protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createSendConnection sendConnection start receiveConnection createReceiveConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session createSendSession sendConnection receiveSession createReceiveSession receiveConnection LOG info session
protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createSendConnection sendConnection start receiveConnection createReceiveConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session createSendSession sendConnection receiveSession createReceiveSession receiveConnection LOG info session LOG info receiveSession producer session createProducer null producer setDeliveryMode deliveryMode
LOG info receiveConnection session createSendSession sendConnection receiveSession createReceiveSession receiveConnection LOG info session LOG info receiveSession producer session createProducer null producer setDeliveryMode deliveryMode LOG info producer deliveryMode DeliveryMode PERSISTENT if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
public void testSendReceive throws Exception messages clear TextMessage message session createTextMessage for int i i data length i message setText data i message setStringProperty data i message setIntProperty i if verbose
public void testLargeMessages throws Exception for int i i MESSAGE_COUNT i
public void testLargeMessages throws Exception for int i i MESSAGE_COUNT i LOG info i BytesMessage msg producerSession createBytesMessage msg writeBytes largeMessageData producer send msg long now System currentTimeMillis while now System currentTimeMillis messageCount get MESSAGE_COUNT LOG info messageCount synchronized messageCount messageCount wait LOG info messageCount assertTrue MESSAGE_COUNT messageCount messageCount get MESSAGE_COUNT assertTrue validMessageConsumption Thread sleep
setUp new VMPendingSubscriberMessageStoragePolicy ExecutorService executor Executors newSingleThreadExecutor final CountDownLatch consumerRegistered new CountDownLatch final CountDownLatch gotAdvisory new CountDownLatch final CountDownLatch advisoryIsGood new CountDownLatch executor execute new Runnable Override public void run try ActiveMQTopic discardedAdvisoryDestination AdvisorySupport getMessageDiscardedAdvisoryTopic destination Session advisorySession connection createSession false Session AUTO_ACKNOWLEDGE final MessageConsumer consumer advisorySession createConsumer discardedAdvisoryDestination consumer setMessageListener new MessageListener int advisoriesReceived Override public void onMessage Message message try
public void doTestMessageEvictionMemoryUsage throws Exception ExecutorService executor Executors newCachedThreadPool final CountDownLatch doAck new CountDownLatch final CountDownLatch ackDone new CountDownLatch final CountDownLatch consumerRegistered new CountDownLatch executor execute new Runnable Override public void run try final MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try doAck await TimeUnit SECONDS
connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getTestName MessageProducer producer createProducer session queue Message message createTextMessage session producer send message message createTextMessage session producer send message MessageConsumer consumer session createConsumer queue final CountDownLatch gotMessage new CountDownLatch final AtomicInteger count new AtomicInteger final int maxDeliveries getRedeliveryPolicy getMaximumRedeliveries final ArrayList String received new ArrayList String consumer setMessageListener new MessageListener Override public void onMessage Message message
Test timeout public void testQueueSessionListenerExceptionDlq throws Exception connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue getTestName MessageProducer producer createProducer session queue Message message createTextMessage session producer send message final Message dlqMessage new Message ActiveMQDestination dlqDestination new ActiveMQQueue MessageConsumer dlqConsumer session createConsumer dlqDestination final CountDownLatch gotDlqMessage new CountDownLatch dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message
final Message dlqMessage new Message ActiveMQDestination dlqDestination new ActiveMQQueue MessageConsumer dlqConsumer session createConsumer dlqDestination final CountDownLatch gotDlqMessage new CountDownLatch dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message LOG info message dlqMessage message gotDlqMessage countDown MessageConsumer consumer session createConsumer queue final int maxDeliveries getRedeliveryPolicy getMaximumRedeliveries final CountDownLatch gotMessage new CountDownLatch maxDeliveries consumer setMessageListener new MessageListener Override public void onMessage Message message
MessageConsumer consumer session createConsumer queue final int maxDeliveries getRedeliveryPolicy getMaximumRedeliveries final CountDownLatch gotMessage new CountDownLatch maxDeliveries consumer setMessageListener new MessageListener Override public void onMessage Message message LOG info message gotMessage countDown throw new RuntimeException getTestName assertTrue gotMessage await TimeUnit SECONDS assertTrue gotDlqMessage await TimeUnit SECONDS message dlqMessage assertNotNull message String cause message getStringProperty ActiveMQMessage DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY
Test timeout public void testTransactedQueueSessionListenerExceptionDlq throws Exception connection start final Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue getTestName MessageProducer producer createProducer session queue Message message createTextMessage session producer send message session commit final Message dlqMessage new Message ActiveMQDestination dlqDestination new ActiveMQQueue MessageConsumer dlqConsumer session createConsumer dlqDestination final CountDownLatch gotDlqMessage new CountDownLatch dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message
final Message dlqMessage new Message ActiveMQDestination dlqDestination new ActiveMQQueue MessageConsumer dlqConsumer session createConsumer dlqDestination final CountDownLatch gotDlqMessage new CountDownLatch dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message LOG info message dlqMessage message gotDlqMessage countDown MessageConsumer consumer session createConsumer queue final int maxDeliveries getRedeliveryPolicy getMaximumRedeliveries final CountDownLatch gotMessage new CountDownLatch maxDeliveries consumer setMessageListener new MessageListener Override public void onMessage Message message
ActiveMQConnectionFactory factory ActiveMQConnectionFactory createConnectionFactory connection ActiveMQConnection factory createConnection connections add connection connection start final Session session connection createSession false Session CLIENT_ACKNOWLEDGE final MessageProducer producer session createProducer queueA final AtomicBoolean done new AtomicBoolean true final AtomicBoolean keepGoing new AtomicBoolean true Thread thread new Thread int i Override public void run while keepGoing get done set false try producer send session createTextMessage i
int i Override public void run while keepGoing get done set false try producer send session createTextMessage i LOG info i catch JMSException e thread start waitForBlockedOrResourceLimit done MessageConsumer consumer session createConsumer queueA TextMessage msg for int idx idx idx msg TextMessage consumer receive
factory setUseAsyncSend true connection ActiveMQConnection factory createConnection connections add connection connection start final Session session connection createSession false Session CLIENT_ACKNOWLEDGE final MessageProducer producer session createProducer queueA final AtomicBoolean done new AtomicBoolean true final AtomicBoolean keepGoing new AtomicBoolean true Thread thread new Thread int i Override public void run while keepGoing get done set false try producer send session createTextMessage i
Override public void run while keepGoing get done set false try producer send session createTextMessage i LOG info i catch JMSException e thread start waitForBlockedOrResourceLimit done MessageConsumer consumer session createConsumer queueA TextMessage msg for int idx idx idx msg TextMessage consumer receive assertNotNull msg
public void testDisableWarning throws Exception final AtomicInteger warnings new AtomicInteger final AtomicInteger debugs new AtomicInteger Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level WARN event getMessage toString contains
final AtomicBoolean done new AtomicBoolean true final AtomicBoolean keepGoing new AtomicBoolean true final CountDownLatch fillerStarted new CountDownLatch final AtomicLong sent new AtomicLong Thread thread new Thread int i Override public void run while keepGoing get done set false fillerStarted countDown try producer send session createTextMessage oneKb i if i session commit sent getAndAdd
LOG info sent get LOG info i catch JMSException e thread start assertTrue fillerStarted await TimeUnit SECONDS waitForBlocked done connection ActiveMQConnection factory createConnection connections add connection connection start TextMessage msg int received for received sent get received msg TextMessage consumer receive if msg null
catch JMSException e thread start assertTrue fillerStarted await TimeUnit SECONDS waitForBlocked done connection ActiveMQConnection factory createConnection connections add connection connection start TextMessage msg int received for received sent get received msg TextMessage consumer receive if msg null LOG info received break
thread start assertTrue fillerStarted await TimeUnit SECONDS waitForBlocked done connection ActiveMQConnection factory createConnection connections add connection connection start TextMessage msg int received for received sent get received msg TextMessage consumer receive if msg null LOG info received break LOG info received msg getJMSMessageID
thread start assertTrue fillerStarted await TimeUnit SECONDS waitForBlocked done connection ActiveMQConnection factory createConnection connections add connection connection start TextMessage msg int received for received sent get received msg TextMessage consumer receive if msg null LOG info received break LOG info received msg getJMSMessageID
assertTrue fillerStarted await TimeUnit SECONDS waitForBlocked done connection ActiveMQConnection factory createConnection connections add connection connection start TextMessage msg int received for received sent get received msg TextMessage consumer receive if msg null LOG info received break LOG info received msg getJMSMessageID if received if received
public void testReconnectMultipleTimesWithSameClientID throws Exception org apache log4j Logger log4jLogger org apache log4j Logger getLogger org apache activemq broker jmx ManagedTransportConnection class final AtomicBoolean failed new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getMessage toString startsWith
Override public void doAppend LoggingEvent event if event getMessage toString startsWith LOG info event getMessage failed set true log4jLogger addAppender appender try connection connectionFactory createConnection useConnection connection for int i i i Connection connection2 connectionFactory createConnection try useConnection connection2 fail i catch InvalidClientIDException e
receivedCount incrementAndGet done countDown catch Exception ignored ignored printStackTrace if i maxRedeliveries assertTrue done await TimeUnit SECONDS else assertFalse done await TimeUnit SECONDS connection close connections remove connection TextMessage m TextMessage dlqConsumer receive assertNotNull m assertEquals m getText String cause m getStringProperty ActiveMQMessage DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY
LOG info XASession xaSession connection createXASession XAResource xaResource xaSession getXAResource Xid xid createXid xaResource start xid Destination destination xaSession createQueue final MessageConsumer messageConsumer xaSession createConsumer destination final CountDownLatch receiveThreadDone new CountDownLatch final CountDownLatch receiveLatch new CountDownLatch Thread receiveThread new Thread new Runnable public void run try messageConsumer receive catch JMSException expected receiveLatch countDown
LOG info XASession xaSession connection createXASession XAResource xaResource xaSession getXAResource Xid xid createXid xaResource start xid Destination destination xaSession createQueue final MessageConsumer messageConsumer xaSession createConsumer destination final CountDownLatch receiveThreadDone new CountDownLatch final CountDownLatch receiveLatch new CountDownLatch Thread receiveThread new Thread new Runnable public void run try messageConsumer receive catch JMSException expected receiveLatch countDown
protected Session createConsumer throws JMSException final String consumerText consumerCounter
protected Session createConsumer throws JMSException final String consumerText consumerCounter LOG info consumerText destination Session answer connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer answer createConsumer destination consumer setMessageListener new MessageListener public void onMessage Message message
public void testDestiationSourceHasInitialDestinations throws Exception Thread sleep DestinationSource destinationSource connection getDestinationSource Set ActiveMQQueue queues destinationSource getQueues Set ActiveMQTopic topics destinationSource getTopics
public void testDestiationSourceHasInitialDestinations throws Exception Thread sleep DestinationSource destinationSource connection getDestinationSource Set ActiveMQQueue queues destinationSource getQueues Set ActiveMQTopic topics destinationSource getTopics LOG info queues
public void testConsumerForcesNotificationOfNewDestination throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQQueue newQueue new ActiveMQQueue session createConsumer newQueue Thread sleep assertThat newQueue isIn newDestinations
public void testProducerForcesNotificationOfNewDestination throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQQueue newQueue new ActiveMQQueue MessageProducer producer session createProducer newQueue TextMessage message session createTextMessage producer send message Thread sleep assertThat newQueue isIn newDestinations
public void onDestinationEvent DestinationEvent event ActiveMQDestination destination event getDestination if event isAddOperation
protected Session createProducer throws JMSException final String consumerText consumerCounter
protected MessageConsumer createConsumer Destination dest throws JMSException final String consumerText consumerCounter
protected MessageConsumer createConsumer Destination dest throws JMSException final String consumerText consumerCounter LOG info consumerText dest MessageConsumer consumer session createConsumer dest consumer setMessageListener new MessageListener public void onMessage Message message
Override public void setUp throws Exception super setUp String fileUrl tmpDir replaceAll
int counter Message msg receiveMessage connection if msg null printer increment receiveCounter incrementAndGet counter Message extra null while extra receiveMessage connection null msg extra printer increment receiveCounter incrementAndGet counter if msg null connection send createAck consumerInfo msg counter MessageAck STANDARD_ACK_TYPE else if receiveCounter get consumeCount
for int i i prodcuerCount i new Thread public void run try StubConnection connection new StubConnection broker ConnectionInfo connectionInfo createConnectionInfo connection send connectionInfo SessionInfo sessionInfo createSessionInfo connectionInfo ProducerInfo producerInfo createProducerInfo sessionInfo connection send sessionInfo connection send producerInfo for int i i produceCount prodcuerCount i Message message createMessage producerInfo destination message setPersistent deliveryMode message setResponseRequired false
public void doTestScheduledRedelivery int maxBrokerRedeliveriesToValidate boolean validateDLQ throws Exception startBroker true sendMessage ActiveMQConnection consumerConnection ActiveMQConnection createConnection RedeliveryPolicy redeliveryPolicy new RedeliveryPolicy redeliveryPolicy setInitialRedeliveryDelay redeliveryPolicy setMaximumRedeliveries consumerConnection setRedeliveryPolicy redeliveryPolicy consumerConnection start Session consumerSession consumerConnection createSession true Session SESSION_TRANSACTED MessageConsumer consumer consumerSession createConsumer destination Message message consumer receive assertNotNull message
redeliveryPolicy setInitialRedeliveryDelay redeliveryPolicy setMaximumRedeliveries consumerConnection setRedeliveryPolicy redeliveryPolicy consumerConnection start Session consumerSession consumerConnection createSession true Session SESSION_TRANSACTED MessageConsumer consumer consumerSession createConsumer destination Message message consumer receive assertNotNull message LOG info message consumerSession rollback for int i i maxBrokerRedeliveriesToValidate i Message shouldBeNull consumer receive assertNull shouldBeNull shouldBeNull TimeUnit SECONDS sleep Message brokerRedeliveryMessage consumer receive
final ConnectionFactory factory createConnectionFactory int connectionCount final AtomicInteger threadId new AtomicInteger for int i i connectionCount i executor execute new Runnable Override public void run final int innerId threadId incrementAndGet try ExceptionListener listener new NioQueueSubscriptionTestListener innerId exceptions LOG ActiveMQConnection connection ActiveMQConnection factory createConnection connection setExceptionListener listener connection start assertNotNull connection getBrokerName connections add connection catch Exception e
final int innerId threadId incrementAndGet try ExceptionListener listener new NioQueueSubscriptionTestListener innerId exceptions LOG ActiveMQConnection connection ActiveMQConnection factory createConnection connection setExceptionListener listener connection start assertNotNull connection getBrokerName connections add connection catch Exception e LOG error innerId e exceptions put Thread currentThread e executor shutdown executor awaitTermination TimeUnit SECONDS if exceptions isEmpty
Override public void onException JMSException exception
private void verifyPresenceOfQueueMbean throws Exception for ObjectName name broker getManagementContext queryNames null null
private void verifyPresenceOfQueueMbean throws Exception for ObjectName name broker getManagementContext queryNames null null LOG info name String type name getKeyProperty if type null type equals assertEquals JMXSupport encodeObjectNamePart ActiveMQQueue createDestination getPhysicalName name getKeyProperty
org junit Test public void testValidateRedeliveryFlagAfterRestart throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection MessageConsumer consumer session createConsumer destination Message msg consumer receive
MessageConsumer consumer session createConsumer destination Message msg consumer receive LOG info msg assertNotNull msg assertFalse msg getJMSRedelivered consumer close connection close restartBroker connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination msg consumer receive
org junit Test public void testValidateRedeliveryFlagAfterRestartNoTx throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection MessageConsumer consumer session createConsumer destination TextMessage msg null for int i i i msg TextMessage consumer receive
populateDestination destination connection MessageConsumer consumer session createConsumer destination TextMessage msg null for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals msg getLongProperty assertEquals false msg getJMSRedelivered consumer close restartBroker connection getTransport narrow FailoverTransport class add true broker getTransportConnectors get getPublishableConnectString consumer session createConsumer destination for int i i i msg TextMessage consumer receive
assertEquals msg getLongProperty assertEquals false msg getJMSRedelivered consumer close restartBroker connection getTransport narrow FailoverTransport class add true broker getTransportConnectors get getPublishableConnectString consumer session createConsumer destination for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals true msg getJMSRedelivered assertEquals msg getLongProperty msg acknowledge for int i i i msg TextMessage consumer receive
org junit Test public void testDurableSubRedeliveryFlagAfterRestartNotSupported throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection setClientID connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE ActiveMQTopic destination new ActiveMQTopic queueName TopicSubscriber durableSub session createDurableSubscriber destination populateDestination destination connection TextMessage msg null for int i i i msg TextMessage durableSub receive
TopicSubscriber durableSub session createDurableSubscriber destination populateDestination destination connection TextMessage msg null for int i i i msg TextMessage durableSub receive LOG info msg assertNotNull msg assertEquals msg getLongProperty assertEquals false msg getJMSRedelivered durableSub close restartBroker connection getTransport narrow FailoverTransport class add true broker getTransportConnectors get getPublishableConnectString durableSub session createDurableSubscriber destination for int i i i msg TextMessage durableSub receive
org junit Test public void testValidateRedeliveryFlagAfterRestart throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Destination destination session createQueue queueName populateDestination destination connection MessageConsumer consumer session createConsumer destination TextMessage msg null for int i i i msg TextMessage consumer receive
MessageConsumer consumer session createConsumer destination TextMessage msg null for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals msg getLongProperty assertEquals false msg getJMSRedelivered session rollback consumer close restartBroker connection getTransport narrow FailoverTransport class add true broker getTransportConnectors get getPublishableConnectString consumer session createConsumer destination for int i i i msg TextMessage consumer receive
assertEquals false msg getJMSRedelivered session rollback consumer close restartBroker connection getTransport narrow FailoverTransport class add true broker getTransportConnectors get getPublishableConnectString consumer session createConsumer destination for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals msg getLongProperty assertEquals true msg getJMSRedelivered session commit for int i i i msg TextMessage consumer receive
org junit Test public void testValidateRedeliveryFlagAfterRecovery throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession true Session SESSION_TRANSACTED Destination destination session createQueue queueName populateDestination destination connection MessageConsumer consumer session createConsumer destination TextMessage msg TextMessage consumer receive
org junit Test public void testValidateRedeliveryFlagAfterRestart throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection true TextMessage msg null MessageConsumer consumer session createConsumer destination Exception expectedException null try for int i i i msg TextMessage consumer receive
connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection true TextMessage msg null MessageConsumer consumer session createConsumer destination Exception expectedException null try for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertTrue i catch Exception e
catch Exception e LOG info e expectedException e assertNotNull expectedException consumer close safeCloseConnection connection restartBroker connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive
consumer close safeCloseConnection connection restartBroker connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals true msg getJMSRedelivered assertTrue msg getLongProperty
org junit Test public void testValidateRedeliveryFlagAfterTransientFailureConnectionDrop throws Exception ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection true TextMessage msg null MessageConsumer consumer session createConsumer destination Exception expectedException null try for int i i i msg TextMessage consumer receive
connection ActiveMQConnection connectionFactory createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue queueName populateDestination destination connection true TextMessage msg null MessageConsumer consumer session createConsumer destination Exception expectedException null try for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertTrue i catch Exception e
assertNotNull msg assertTrue i catch Exception e LOG info e expectedException e assertNotNull expectedException consumer close safeCloseConnection connection connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive
assertNotNull expectedException consumer close safeCloseConnection connection connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals i true msg getJMSRedelivered assertTrue i msg getLongProperty msg acknowledge
populateDestination destination connection false TextMessage msg null MessageConsumer consumer session createConsumer destination for int i i i msg TextMessage consumer receive assertNotNull msg assertFalse msg getJMSRedelivered connection getTransport narrow TcpTransport class getTransportListener onException new IOException connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive
connection getTransport narrow TcpTransport class getTransportListener onException new IOException connection ActiveMQConnection connectionFactory createConnection connection start session connection createSession false Session CLIENT_ACKNOWLEDGE destination session createQueue queueName consumer session createConsumer destination for int i i i msg TextMessage consumer receive LOG info msg assertNotNull msg assertEquals i true msg getJMSRedelivered assertTrue i msg getLongProperty msg acknowledge for int i i i msg TextMessage consumer receive
protected void assertSenderConfig String config throws Exception context new ClassPathXmlApplicationContext config consumer SpringConsumer context getBean assertTrue consumer null consumer start producer SpringProducer context getBean assertTrue producer null consumer flushMessages producer start consumer waitForMessagesToArrive producer getMessageCount List messages consumer flushMessages LOG info for Iterator iter messages iterator iter hasNext Object message iter next
for int i i i XATransactionId txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid Message message createMessage producerInfo destination message setPersistent true message setTransactionId txid connection send message connection send createPrepareTransaction connectionInfo txid Response response connection request new TransactionInfo connectionInfo getConnectionId null TransactionInfo RECOVER assertNotNull response DataArrayResponse dar DataArrayResponse response assertEquals dar getData length if broker getPersistenceAdapter KahaDBPersistenceAdapter PersistenceAdapterViewMBean kahadbView getProxyToPersistenceAdapter broker getPersistenceAdapter toString String txFromView kahadbView getTransactions
connection request consumerInfo createRemoveCommand LOG info producerInfo createProducerInfo sessionInfo connection send producerInfo for int i i numMessages i message createMessage producerInfo destination message setPersistent true connection send message LOG info connection request createRollbackTransaction connectionInfo txid LOG info txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid Set ConsumerInfo consumerInfoSet new HashSet ConsumerInfo for ActiveMQDestination dest destinationList destination
for int i i numMessages i message createMessage producerInfo destination message setPersistent true connection send message LOG info connection request createRollbackTransaction connectionInfo txid LOG info txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid Set ConsumerInfo consumerInfoSet new HashSet ConsumerInfo for ActiveMQDestination dest destinationList destination consumerInfo createConsumerInfo sessionInfo dest connection send consumerInfo consumerInfoSet add consumerInfo LOG info dest getPhysicalName consumerInfo getConsumerId
LOG info connection request createRollbackTransaction connectionInfo txid LOG info txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid Set ConsumerInfo consumerInfoSet new HashSet ConsumerInfo for ActiveMQDestination dest destinationList destination consumerInfo createConsumerInfo sessionInfo dest connection send consumerInfo consumerInfoSet add consumerInfo LOG info dest getPhysicalName consumerInfo getConsumerId for int i i numMessages i message receiveMessage connection assertNotNull i message LOG info dest getPhysicalName message getMessageId
LOG info dest getPhysicalName consumerInfo getConsumerId for int i i numMessages i message receiveMessage connection assertNotNull i message LOG info dest getPhysicalName message getMessageId MessageAck ack createAck consumerInfo message numMessages MessageAck STANDARD_ACK_TYPE ack setTransactionId txid connection request ack while message receiveMessage connection null LOG info message getMessageId message getDestination getPhysicalName LOG info connection request createCommitTransaction1Phase connectionInfo txid for ConsumerInfo info consumerInfoSet connection request info createRemoveCommand consumerInfoSet clear
LOG info dest getPhysicalName message getMessageId MessageAck ack createAck consumerInfo message numMessages MessageAck STANDARD_ACK_TYPE ack setTransactionId txid connection request ack while message receiveMessage connection null LOG info message getMessageId message getDestination getPhysicalName LOG info connection request createCommitTransaction1Phase connectionInfo txid for ConsumerInfo info consumerInfoSet connection request info createRemoveCommand consumerInfoSet clear dataArrayResponse DataArrayResponse connection request recoverInfo assertEquals dataArrayResponse getData length LOG info while message receiveMessage connection null
connection request ack while message receiveMessage connection null LOG info message getMessageId message getDestination getPhysicalName LOG info connection request createCommitTransaction1Phase connectionInfo txid for ConsumerInfo info consumerInfoSet connection request info createRemoveCommand consumerInfoSet clear dataArrayResponse DataArrayResponse connection request recoverInfo assertEquals dataArrayResponse getData length LOG info while message receiveMessage connection null LOG info message getMessageId message getDestination getPhysicalName for ActiveMQDestination dest destinationList destination consumerInfo createConsumerInfo sessionInfo dest
for int i i numMessages i Message message createMessage producerInfo destination connection send message XATransactionId txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid Set ConsumerInfo consumerInfos new HashSet ConsumerInfo for ActiveMQDestination dest destinationList destination ConsumerInfo consumerInfo createConsumerInfo sessionInfo dest consumerInfos add consumerInfo Message message null for ConsumerInfo info consumerInfos connection request info for int i i numMessages i message receiveMessage connection assertNotNull message
TransactionInfo recoverInfo new TransactionInfo connectionInfo getConnectionId null TransactionInfo RECOVER DataArrayResponse dataArrayResponse DataArrayResponse connection request recoverInfo assertEquals dataArrayResponse getData length assertEquals txid dataArrayResponse getData connection send sessionInfo LOG info for ConsumerInfo info consumerInfos connection send info message receiveMessage connection assertNull message assertNoMessagesLeft connection connection request createRollbackTransaction connectionInfo txid LOG info txid createXATransaction sessionInfo connection send createBeginTransaction connectionInfo txid
try receiveSession rollback catch JMSException ignored if e TransactionRolledBackException TransactionRolledBackException transactionRolledBackException TransactionRolledBackException e if transactionRolledBackException getMessage indexOf java sql Connection dbConnection null try ActiveMQMessage mqMessage ActiveMQMessage message MessageId id mqMessage getMessageId dbConnection sharedDs getConnection PreparedStatement s dbConnection prepareStatement findStatement s setString id getProducerId toString s setLong id getProducerSequenceId ResultSet rs s executeQuery
catch JMSException ignored if e TransactionRolledBackException TransactionRolledBackException transactionRolledBackException TransactionRolledBackException e if transactionRolledBackException getMessage indexOf java sql Connection dbConnection null try ActiveMQMessage mqMessage ActiveMQMessage message MessageId id mqMessage getMessageId dbConnection sharedDs getConnection PreparedStatement s dbConnection prepareStatement findStatement s setString id getProducerId toString s setLong id getProducerSequenceId ResultSet rs s executeQuery if rs next LOG info mqMessage
Override public void onException JMSException exception
catch Exception e e printStackTrace executorService shutdown executorService awaitTermination TimeUnit MINUTES long count proxy getQueueSize assertEquals count assertEquals proxy browseMessages size objectNameStr broker getBrokerObjectName toString objectNameStr to getQueueName queueViewMBeanName assertRegisteredObjectName objectNameStr QueueViewMBean toProxy QueueViewMBean MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true count toProxy getQueueSize assertEquals count messageCount long usageAfterMove broker getPersistenceAdapter size
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name if mbeanServer isRegistered objectName
Session session connection createSession false Session AUTO_ACKNOWLEDGE destination createDestination MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT for int i i i BytesMessage message session createBytesMessage message writeBytes new byte producer send message Thread sleep String objectNameStr broker getBrokerObjectName toString objectNameStr ObjectName brokerName assertRegisteredObjectName objectNameStr HealthViewMBean health MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName HealthViewMBean class true List HealthStatus list health healthList for HealthStatus status list
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name if mbeanServer isRegistered objectName
Test timeout public void testCreateDurableSubsciber throws Exception String clientId brokerService getAdminView addTopic boolean createSubscriberSecurityException false String subscriberName try brokerService getAdminView createDurableSubscriber clientId subscriberName null
Test timeout public void testCreateDurableSubsciber throws Exception String clientId brokerService getAdminView addTopic boolean createSubscriberSecurityException false String subscriberName try brokerService getAdminView createDurableSubscriber clientId subscriberName null LOG info subscriberName catch java lang SecurityException se1 if se1 getMessage equals createSubscriberSecurityException true assertFalse createSubscriberSecurityException boolean destroySubscriberSecurityException false try brokerService getAdminView destroyDurableSubscriber clientId subscriberName
catch java lang SecurityException se1 if se1 getMessage equals createSubscriberSecurityException true assertFalse createSubscriberSecurityException boolean destroySubscriberSecurityException false try brokerService getAdminView destroyDurableSubscriber clientId subscriberName LOG info subscriberName catch java lang SecurityException se2 if se2 getMessage equals destroySubscriberSecurityException true assertFalse destroySubscriberSecurityException boolean subscriberAlreadyDeleted false try brokerService getAdminView destroyDurableSubscriber clientId subscriberName
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name if mbeanServer isRegistered objectName
Test expected TimeoutException class public void testLongOperationTimesOut throws Exception sendMessages messageCount
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name if mbeanServer isRegistered objectName
MessageConsumer consumer session createConsumer dest consumer setMessageListener new MessageListener Override public void onMessage Message message try System out println message message getJMSDestination catch JMSException e e printStackTrace throw new RuntimeException ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queue MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true ObjectName dlqQueueViewMBeanName assertRegisteredObjectName domain SharedDeadLetterStrategy DEFAULT_DEAD_LETTER_QUEUE_NAME QueueViewMBean dlq MBeanServerInvocationHandler newProxyInstance mbeanServer dlqQueueViewMBeanName QueueViewMBean class true assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
catch JMSException e e printStackTrace throw new RuntimeException ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queue MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true ObjectName dlqQueueViewMBeanName assertRegisteredObjectName domain SharedDeadLetterStrategy DEFAULT_DEAD_LETTER_QUEUE_NAME QueueViewMBean dlq MBeanServerInvocationHandler newProxyInstance mbeanServer dlqQueueViewMBeanName QueueViewMBean class true assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info dlq getQueueSize queue getQueueSize return MESSAGE_COUNT dlq getQueueSize dlq retryMessages assertTrue Wait waitFor new Wait Condition
public void testCopyMessagesBySelector throws Exception connection connectionFactory createConnection useConnection connection ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queue MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true String newDestination getSecondDestinationString long queueSize queue getQueueSize assertTrue queueSize queue copyMatchingMessagesTo newDestination queueViewMBeanName assertRegisteredObjectName domain newDestination QueueViewMBean queueTwo MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true
public void testCopyPurgeCopyBack throws Exception connection connectionFactory createConnection final int numMessages useConnection connection numMessages ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queueT MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true String newDestination getSecondDestinationString long queueSize queueT getQueueSize assertTrue queueSize int c queueT copyMatchingMessagesTo null newDestination
public void testCopyPurgeCopyBack throws Exception connection connectionFactory createConnection final int numMessages useConnection connection numMessages ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queueT MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true String newDestination getSecondDestinationString long queueSize queueT getQueueSize assertTrue queueSize int c queueT copyMatchingMessagesTo null newDestination LOG info c queueViewMBeanName assertRegisteredObjectName domain newDestination QueueViewMBean queueD MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true
public void testCopyPurgeCopyBack throws Exception connection connectionFactory createConnection final int numMessages useConnection connection numMessages ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queueT MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true String newDestination getSecondDestinationString long queueSize queueT getQueueSize assertTrue queueSize int c queueT copyMatchingMessagesTo null newDestination LOG info c queueViewMBeanName assertRegisteredObjectName domain newDestination QueueViewMBean queueD MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true LOG info queueD getName queueD getQueueSize assertEquals queueD getQueueSize numMessages queueD getQueueSize
ObjectName queueViewMBeanName assertRegisteredObjectName domain getDestinationString QueueViewMBean queueT MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true String newDestination getSecondDestinationString long queueSize queueT getQueueSize assertTrue queueSize int c queueT copyMatchingMessagesTo null newDestination LOG info c queueViewMBeanName assertRegisteredObjectName domain newDestination QueueViewMBean queueD MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true LOG info queueD getName queueD getQueueSize assertEquals queueD getQueueSize numMessages queueD getQueueSize LOG info queueT getName queueT getQueueSize assertEquals queueT getQueueSize numMessages queueT getQueueSize queueT purge queueD copyMatchingMessagesTo null getDestinationString
String newDestination getSecondDestinationString long queueSize queueT getQueueSize assertTrue queueSize int c queueT copyMatchingMessagesTo null newDestination LOG info c queueViewMBeanName assertRegisteredObjectName domain newDestination QueueViewMBean queueD MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true LOG info queueD getName queueD getQueueSize assertEquals queueD getQueueSize numMessages queueD getQueueSize LOG info queueT getName queueT getQueueSize assertEquals queueT getQueueSize numMessages queueT getQueueSize queueT purge queueD copyMatchingMessagesTo null getDestinationString LOG info queueD getName queueD getQueueSize assertEquals queueD getQueueSize numMessages queueD getQueueSize
protected void assertCreateAndDestroyDurableSubscriptions throws Exception ObjectName brokerName assertRegisteredObjectName domain echo BrokerViewMBean broker MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName BrokerViewMBean class true broker addTopic getDestinationString assertEquals broker getDurableTopicSubscribers length String topicName getDestinationString String selector null ObjectName name1 broker createDurableSubscriber clientID topicName selector broker createDurableSubscriber clientID topicName selector assertEquals broker getInactiveDurableTopicSubscribers length assertNotNull name1
public void testDestinationOptionsAreVisible throws Exception ObjectName queueViewMBeanName assertRegisteredObjectName domain QUEUE_WITH_OPTIONS QueueViewMBean queue MBeanServerInvocationHandler newProxyInstance mbeanServer queueViewMBeanName QueueViewMBean class true assertEquals QUEUE_WITH_OPTIONS queue getName String options queue getOptions
public void testSubscriptionViewToConnectionMBean throws Exception connection connectionFactory createConnection connection setClientID Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination queue session createQueue getDestinationString MessageConsumer queueConsumer session createConsumer queue MessageProducer producer session createProducer queue ObjectName brokerName assertRegisteredObjectName domain BrokerViewMBean broker MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName BrokerViewMBean class true Thread sleep assertTrue broker getQueueSubscribers length ObjectName subscriptionName broker getQueueSubscribers
connection connectionFactory createConnection connection setClientID Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination queue session createQueue getDestinationString MessageConsumer queueConsumer session createConsumer queue MessageProducer producer session createProducer queue ObjectName brokerName assertRegisteredObjectName domain BrokerViewMBean broker MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName BrokerViewMBean class true Thread sleep assertTrue broker getQueueSubscribers length ObjectName subscriptionName broker getQueueSubscribers LOG info subscriptionName SubscriptionViewMBean subscriberView MBeanServerInvocationHandler newProxyInstance mbeanServer subscriptionName SubscriptionViewMBean class true assertNotNull subscriberView ObjectName connectionName subscriberView getConnection
public void testAddRemoveConnectorBrokerView throws Exception ObjectName brokerName assertRegisteredObjectName domain BrokerViewMBean brokerView MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName BrokerViewMBean class true Map String String connectors brokerView getTransportConnectors
ObjectName brokerName assertRegisteredObjectName domain BrokerViewMBean brokerView MBeanServerInvocationHandler newProxyInstance mbeanServer brokerName BrokerViewMBean class true Map String String connectors brokerView getTransportConnectors LOG info connectors assertEquals connectors size ConnectorViewMBean connector getProxyToConnectionView assertNotNull connector String name connectors keySet iterator next toString brokerView removeConnector name connectors brokerView getTransportConnectors assertEquals connectors size name brokerView addConnector connector getProxyToConnectionView assertNotNull connector connectors brokerView getTransportConnectors
protected void echo String text
protected void echo String text
private boolean match String s Set ObjectName registeredMbeans String encodedName JMXSupport encodeObjectNamePart s for ObjectName name registeredMbeans
Entry MessageConsumer MessageIdList consumertoAbort consumers entrySet iterator next consumertoAbort getValue setProcessingDelay for Connection c connections c setExceptionListener this startProducers destination consumertoAbort getValue assertMessagesReceived ActiveMQDestination amqDest ActiveMQDestination destination ObjectName destinationViewMBean new ObjectName amqDest isTopic amqDest getPhysicalName DestinationViewMBean queue DestinationViewMBean broker getManagementContext newProxyInstance destinationViewMBean DestinationViewMBean class true ObjectName slowConsumerPolicyMBeanName queue getSlowConsumerStrategy assertNotNull slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean abortPolicy AbortSlowConsumerStrategyViewMBean broker getManagementContext newProxyInstance slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean class true TimeUnit SECONDS sleep TabularData slowOnes abortPolicy getSlowConsumers assertEquals slowOnes size
for Connection c connections c setExceptionListener this startProducers destination consumertoAbort getValue assertMessagesReceived ActiveMQDestination amqDest ActiveMQDestination destination ObjectName destinationViewMBean new ObjectName amqDest isTopic amqDest getPhysicalName DestinationViewMBean queue DestinationViewMBean broker getManagementContext newProxyInstance destinationViewMBean DestinationViewMBean class true ObjectName slowConsumerPolicyMBeanName queue getSlowConsumerStrategy assertNotNull slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean abortPolicy AbortSlowConsumerStrategyViewMBean broker getManagementContext newProxyInstance slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean class true TimeUnit SECONDS sleep TabularData slowOnes abortPolicy getSlowConsumers assertEquals slowOnes size LOG info slowOnes CompositeData slowOne CompositeData slowOnes values iterator next
connections add c c start Session session c createSession false Session CLIENT_ACKNOWLEDGE final ActiveMQMessageConsumer messageconsumer ActiveMQMessageConsumer session createConsumer destination startProducers destination messageconsumer receive acknowledge assertNotNull messageconsumer receive assertNotNull messageconsumer receive assertNotNull messageconsumer receive socketProxy pause ActiveMQDestination amqDest ActiveMQDestination destination ObjectName destinationViewMBean new ObjectName amqDest isTopic amqDest getPhysicalName final DestinationViewMBean destView DestinationViewMBean broker getManagementContext newProxyInstance destinationViewMBean DestinationViewMBean class true assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test timeout public void testAbortAlreadyClosedConsumers throws Exception Connection conn createConnectionFactory createConnection conn setExceptionListener this connections add conn Session sess conn createSession false Session CLIENT_ACKNOWLEDGE final MessageConsumer consumer sess createConsumer destination conn start startProducers destination TimeUnit SECONDS sleep
Test timeout public void testAbortAlreadyClosedConnection throws Exception Connection conn createConnectionFactory createConnection conn setExceptionListener this Session sess conn createSession false Session CLIENT_ACKNOWLEDGE sess createConsumer destination conn start startProducers destination TimeUnit SECONDS sleep
protected void doTest throws Exception connection start messageCount ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
protected void doTest throws Exception connection start messageCount ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries LOG info rollbackCount makeConsumer sendMessages for int i i messageCount i consumeAndRollback i Queue dlqQueue Queue createDlqDestination verifyIsDlq dlqQueue final QueueViewMBean queueViewMBean getProxyToQueue dlqQueue getQueueName assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
for int i i messageCount i consumeAndRollback i Queue dlqQueue Queue createDlqDestination verifyIsDlq dlqQueue final QueueViewMBean queueViewMBean getProxyToQueue dlqQueue getQueueName assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info queueViewMBean getQueueSize return queueViewMBean getExpiredCount messageCount makeDlqConsumer assertNull dlqConsumer receive final QueueViewMBean sharedDlqViewMBean getProxyToQueue SharedDeadLetterStrategy DEFAULT_DEAD_LETTER_QUEUE_NAME assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
public void testAuditConfigured throws Exception destination new ActiveMQQueue connection start messageCount timeToLive deliveryMode DeliveryMode NON_PERSISTENT sendMessages sendMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception try QueueViewMBean queueViewMBean getProxyToQueue
public void testNoDLQLoop throws Exception destination new ActiveMQQueue messageCount connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
protected void doTest throws Exception connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
protected void makeConsumer throws JMSException Destination destination getDestination
protected void makeDlqConsumer throws Exception dlqDestination createDlqDestination
protected void makeDlqBrowser throws Exception dlqDestination createDlqDestination
protected void assertMessage Message message int i throws Exception
PolicyEntry e3 new PolicyEntry e3 setDestination new ActiveMQQueue e3 setMemoryLimit e3 setPrioritizedMessages false entries add e3 PolicyMap policyMap new PolicyMap policyMap setPolicyEntries entries broker setDestinationPolicy policyMap broker start broker waitUntilStarted Assert assertNotNull broker ManagedRegionBroker rb ManagedRegionBroker broker getRegionBroker org apache activemq broker region Queue queue Queue rb addDestination new ConnectionContext new ActiveMQQueue DESTNAME true Assert assertTrue DESTNAME queue isPrioritizedMessages long limit queue getMemoryUsage getLimit
PolicyEntry e2 new PolicyEntry e2 setDestination new ActiveMQQueue e2 setMemoryLimit e2 setPrioritizedMessages false entries add e2 PolicyMap policyMap new PolicyMap policyMap setPolicyEntries entries broker setDestinationPolicy policyMap broker start broker waitUntilStarted Assert assertNotNull broker ManagedRegionBroker rb ManagedRegionBroker broker getRegionBroker org apache activemq broker region Queue queue Queue rb addDestination new ConnectionContext new ActiveMQQueue DESTNAME true Assert assertTrue DESTNAME queue isPrioritizedMessages long limit queue getMemoryUsage getLimit
List PolicyEntry entries new ArrayList PolicyEntry PolicyEntry e1 new PolicyEntry e1 setDestination new ActiveMQQueue e1 setMemoryLimit QUEUE_LIMIT e1 setPrioritizedMessages true entries add e1 PolicyMap policyMap new PolicyMap policyMap setPolicyEntries entries broker setDestinationPolicy policyMap broker start broker waitUntilStarted ManagedRegionBroker rb ManagedRegionBroker broker getRegionBroker org apache activemq broker region Queue queue Queue rb addDestination new ConnectionContext new ActiveMQQueue DESTNAME true Assert assertTrue DESTNAME queue isPrioritizedMessages long limit queue getMemoryUsage getLimit
Override protected void doTest throws Exception connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
public void testDLQBrowsing throws Exception super topic false deliveryMode DeliveryMode PERSISTENT durableSubscriber false messageCount connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
public void testDLQBrowsing throws Exception super topic false deliveryMode DeliveryMode PERSISTENT durableSubscriber false messageCount connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries LOG info rollbackCount sendMessages for int i i rollbackCount i makeConsumer Message message consumer receive assertNotNull message session rollback
protected void browseDlq throws Exception Enumeration messages dlqBrowser getEnumeration while messages hasMoreElements
protected Destination createDlqDestination String queueName getClass getName getName
protected void doTest throws Exception messageCount connection start ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
protected void makeDlqConsumer throws JMSException dlqDestination createDlqDestination
Test timeout public void testClashWithPublishAndGC throws Exception org apache log4j Logger log4jLogger org apache log4j Logger getLogger RegionBroker class final AtomicBoolean failed new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level ERROR event getMessage toString startsWith
Test timeout public void testDestinationGcAnonymousProducer throws Exception final ActiveMQQueue q new ActiveMQQueue brokerService getAdminView addQueue q getPhysicalName assertEquals brokerService getAdminView getQueues length final ActiveMQConnectionFactory factory new ActiveMQConnectionFactory final Connection connection factory createConnection final Session session connection createSession false Session AUTO_ACKNOWLEDGE
private void testPurgeLargeQueue boolean prioritizedMessages throws Exception applyBrokerSpoolingPolicy prioritizedMessages createProducerAndSendMessages NUM_TO_SEND QueueViewMBean proxy getProxyToQueueViewMBean LOG info org apache log4j Logger log4jLogger org apache log4j Logger getLogger org apache activemq broker jmx QueueView class final AtomicBoolean gotPurgeLogMessage new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getMessage String String message String event getMessage if message contains NUM_TO_SEND
private void createProducerAndSendMessages int numToSend throws Exception session connection createSession false Session CLIENT_ACKNOWLEDGE queue session createQueue MessageProducer producer session createProducer queue for int i i numToSend i TextMessage message session createTextMessage MESSAGE_TEXT i if i i
protected void configureMessageListener MessageConsumer consumer throws JMSException final MessageConsumer fConsumer consumer consumer setMessageListener new MessageListener public void onMessage Message msg
e printStackTrace consumerList add msg if consumerList size MESSAGE_COUNT latch countDown for int i MESSAGE_COUNT i MESSAGE_COUNT i TextMessage msg session createTextMessage i senderList add msg producer send msg latch await TimeUnit MILLISECONDS producerConnection close consumerConnection close assertEquals latch getCount for int i i senderList size i Message sent senderList get i
consumerList add msg if consumerList size MESSAGE_COUNT latch countDown for int i MESSAGE_COUNT i MESSAGE_COUNT i TextMessage msg session createTextMessage i senderList add msg producer send msg latch await TimeUnit MILLISECONDS producerConnection close consumerConnection close assertEquals latch getCount for int i i senderList size i Message sent senderList get i Message consumed consumerList get i
consumerList add msg if consumerList size MESSAGE_COUNT latch countDown for int i MESSAGE_COUNT i MESSAGE_COUNT i TextMessage msg session createTextMessage i senderList add msg producer send msg latch await TimeUnit MILLISECONDS producerConnection close consumerConnection close assertEquals latch getCount for int i i senderList size i Message sent senderList get i Message consumed consumerList get i
queueMessageStore registerIndexListener null QueueStorePrefetch myCursor new QueueStorePrefetch queue brokerService getBroker SystemUsage systemUsage new SystemUsage systemUsage getMemoryUsage setLimit messageBytesSize myCursor setSystemUsage systemUsage myCursor setEnableAudit false myCursor start assertTrue myCursor isUseCache myCursor isCacheEnabled ActiveMQTextMessage msg0 getMessage msg0 setMemoryUsage systemUsage getMemoryUsage queueMessageStore addMessage null msg0 myCursor addMessageLast msg0 msg0 decrementReferenceCount if myCursor hasNext MessageReference ref myCursor next
myCursor remove try queueMessageStore removeMessage ref getMessageId catch IOException e e printStackTrace systemUsage getMemoryUsage increaseUsage messageBytesSize ActiveMQTextMessage msg1 getMessage msg1 setMemoryUsage systemUsage getMemoryUsage queueMessageStore addMessage null msg1 myCursor addMessageLast msg1 msg1 decrementReferenceCount boolean b true while b if myCursor hasNext MessageReference ref myCursor next
assertTrue underTest isUseCache underTest isCacheEnabled final ConnectionContext contextNotInTx new ConnectionContext for int i i count i ActiveMQTextMessage msg getMessage i msg setMemoryUsage systemUsage getMemoryUsage queueMessageStore addMessage contextNotInTx msg underTest addMessageLast msg assertTrue underTest isCacheEnabled int dequeueCount underTest setMaxBatchSize underTest reset while underTest hasNext dequeueCount count MessageReference ref underTest next ref decrementReferenceCount underTest remove
assertTrue underTest isUseCache underTest isCacheEnabled msg getMessage messages msg msg setMemoryUsage systemUsage getMemoryUsage msg getMessageId setFutureOrSequenceLong 2l underTest addMessageLast msg assertTrue underTest isCacheEnabled assertEquals 2l queueMessageStore batch get int dequeueCount underTest setMaxBatchSize underTest reset while underTest hasNext dequeueCount count MessageReference ref underTest next ref decrementReferenceCount underTest remove
public void testGroupedMessagesDeliveredToOnlyOneConsumer throws Exception ActiveMQDestination destination new ActiveMQQueue connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer1 session createConsumer destination MessageProducer producer session createProducer destination for int i i i TextMessage message session createTextMessage i message setStringProperty message setIntProperty i
public void testAddingConsumer throws Exception ActiveMQDestination destination new ActiveMQQueue connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination TextMessage message session createTextMessage message setStringProperty
public void testClosingMessageGroup throws Exception ActiveMQDestination destination new ActiveMQQueue connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer1 session createConsumer destination MessageProducer producer session createProducer destination for int i i i TextMessage message session createTextMessage i message setStringProperty
message setStringProperty LOG info message producer send message for int i i i TextMessage m1 TextMessage consumer1 receive assertNotNull i m1 Connection connection1 factory createConnection userName password connection1 start Session session2 connection1 createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer2 session2 createConsumer destination Message m consumer2 receive assertNull m TextMessage message session createTextMessage message setStringProperty message setIntProperty
TextMessage m1 TextMessage consumer1 receive assertNotNull i m1 Connection connection1 factory createConnection userName password connection1 start Session session2 connection1 createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer2 session2 createConsumer destination Message m consumer2 receive assertNull m TextMessage message session createTextMessage message setStringProperty message setIntProperty LOG info message producer send message for int i i i message session createTextMessage i
Test public void testSimulatenousCron throws Exception final int COUNT final AtomicInteger count new AtomicInteger Connection connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message count incrementAndGet latch countDown assertTrue message TextMessage TextMessage tm TextMessage message try
final int COUNT final AtomicInteger count new AtomicInteger Connection connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message count incrementAndGet latch countDown assertTrue message TextMessage TextMessage tm TextMessage message try LOG info tm getText count get catch JMSException e
latch countDown assertTrue message TextMessage TextMessage tm TextMessage message try LOG info tm getText count get catch JMSException e LOG error e fail e getMessage connection start for int i i COUNT i MessageProducer producer session createProducer destination TextMessage message session createTextMessage i message setStringProperty ScheduledMessage AMQ_SCHEDULED_CRON producer send message
Test public void testCron throws Exception final int COUNT final AtomicInteger count new AtomicInteger Connection connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message count incrementAndGet latch countDown
Test public void testScheduleRepeated throws Exception final int NUMBER final AtomicInteger count new AtomicInteger Connection connection createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch NUMBER consumer setMessageListener new MessageListener Override public void onMessage Message message count incrementAndGet latch countDown
Test public void testRemvoeJob throws Exception JobSchedulerViewMBean view getJobSchedulerMBean assertNotNull view assertTrue view getAllJobs isEmpty scheduleMessage assertFalse view getAllJobs isEmpty TabularData jobs view getAllJobs assertEquals jobs size for Object key jobs keySet String jobId List key get toString
Test public void testGetNextScheduledJob throws Exception JobSchedulerViewMBean view getJobSchedulerMBean assertNotNull view assertTrue view getAllJobs isEmpty scheduleMessage assertFalse view getAllJobs isEmpty long before System currentTimeMillis long toLate System currentTimeMillis String next view getNextScheduleTime long nextTime JobSupport getDataTime next
scheduleMessage connection TimeUnit SECONDS toMillis Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination management session createTopic ScheduledMessage AMQ_SCHEDULER_MANAGEMENT_DESTINATION Destination browseDest session createTemporaryQueue MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message latch countDown MessageConsumer browser session createConsumer browseDest final CountDownLatch browsedLatch new CountDownLatch COUNT browser setMessageListener new MessageListener Override public void onMessage Message message browsedLatch countDown
scheduleMessage connection TimeUnit SECONDS toMillis COUNT Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination requestBrowse session createTopic ScheduledMessage AMQ_SCHEDULER_MANAGEMENT_DESTINATION Destination browseDest session createTemporaryQueue MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message latch countDown MessageConsumer browser session createConsumer browseDest final CountDownLatch browsedLatch new CountDownLatch COUNT browser setMessageListener new MessageListener Override public void onMessage Message message browsedLatch countDown
scheduleMessage connection TimeUnit SECONDS toMillis Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination requestBrowse session createTopic ScheduledMessage AMQ_SCHEDULER_MANAGEMENT_DESTINATION Destination browseDest session createTemporaryQueue MessageConsumer consumer session createConsumer destination final CountDownLatch latch new CountDownLatch COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message latch countDown MessageConsumer browser session createConsumer browseDest final CountDownLatch browsedLatch new CountDownLatch COUNT browser setMessageListener new MessageListener Override public void onMessage Message message browsedLatch countDown
store setDirectory directory final int NUMBER store start List ByteSequence list new ArrayList ByteSequence for int i i NUMBER i ByteSequence buff new ByteSequence new String i getBytes list add buff JobScheduler js store getJobScheduler js startDispatching int count long startTime long period startTime for ByteSequence job list js schedule count job startTime period List Job test js getAllJobs
list add buff JobScheduler js store getJobScheduler js startDispatching int count long startTime long period startTime for ByteSequence job list js schedule count job startTime period List Job test js getAllJobs LOG debug test size assertEquals list size test size store stop store start js store getJobScheduler test js getAllJobs
Test public void testGetExecutionCount throws Exception final String jobId long time final CountDownLatch done new CountDownLatch String str new String scheduler schedule jobId new ByteSequence str getBytes time int size scheduler getAllJobs size assertEquals size scheduler addListener new JobListener Override public void scheduledJob String id ByteSequence job
Before public void setUp throws Exception schedulerStoreDir new File basedir name getMethodName
Before public void setUp throws Exception IOHelper deleteFile schedulerStoreDir
Test timeout public void testMissingLogsCausesBrokerToFail throws Exception fillUpSomeLogFiles int jobCount schedulerStore getJobScheduler getAllJobs size
Test timeout public void testRecoverWhenSomeLogsAreMissing throws Exception fillUpSomeLogFiles int jobCount schedulerStore getJobScheduler getAllJobs size
for int i i i JobSchedulerStoreImpl scheduler new JobSchedulerStoreImpl scheduler setDirectory testDir scheduler setJournalMaxFileLength BrokerService broker createBroker scheduler broker start broker waitUntilStarted final AtomicInteger count new AtomicInteger Connection connection cf createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue MessageConsumer consumer session createConsumer queue final CountDownLatch latch new CountDownLatch NUMBER consumer setMessageListener new MessageListener Override public void onMessage Message message
store setDirectory directory final int NUMBER store start List ByteSequence list new ArrayList ByteSequence for int i i NUMBER i ByteSequence buff new ByteSequence new String i getBytes list add buff JobScheduler js store getJobScheduler js startDispatching int count long startTime long period startTime for ByteSequence job list js schedule count job startTime period List Job test js getAllJobs
list add buff JobScheduler js store getJobScheduler js startDispatching int count long startTime long period startTime for ByteSequence job list js schedule count job startTime period List Job test js getAllJobs LOG debug test size assertEquals list size test size store stop store start js store getJobScheduler test js getAllJobs
public void testQueueSendThenAddConsumer throws Exception ProgressPrinter printer new ProgressPrinter produceCount ActiveMQDestination destination new ActiveMQQueue connection setUseCompression false connection getPrefetchPolicy setAll connection start Session session connection createSession false Session DUPS_OK_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT
protected BrokerService createBroker String uri throws Exception
RedeliveryPolicyMap redeliveryPolicyMap new RedeliveryPolicyMap RedeliveryPolicy defaultEntry new RedeliveryPolicy defaultEntry setInitialRedeliveryDelay redeliveryPolicyMap setDefaultEntry defaultEntry underTest setRedeliveryPolicyMap redeliveryPolicyMap final BrokerService brokerService new BrokerService brokerService setSchedulerSupport false Broker broker new ErrorBroker Override public BrokerService getBrokerService return brokerService try underTest installPlugin broker fail catch Exception expected
brokerService setSchedulerSupport false Broker broker new ErrorBroker Override public BrokerService getBrokerService return brokerService try underTest installPlugin broker fail catch Exception expected LOG info expected brokerService setSchedulerSupport true try underTest installPlugin broker fail catch Exception expected
underTest installPlugin broker fail catch Exception expected LOG info expected brokerService setSchedulerSupport true try underTest installPlugin broker fail catch Exception expected LOG info expected defaultEntry setInitialRedeliveryDelay defaultEntry setRedeliveryDelay brokerService setSchedulerSupport true try underTest installPlugin broker
Test timeout public void testNoMemoryUsageIncreaseForTopic throws Exception Connection connection super createConnection connection start Session session connection createSession false Session CLIENT_ACKNOWLEDGE Destination destination session createQueue CREATED_STATIC_FOR_PERSISTENT MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT char m new char Arrays fill m for int i i i producer send session createTextMessage new String m
connection start ConsumerBean messageList new ConsumerBean messageList setVerbose true Destination consumeDestination createConsumeDestination Session session connection createSession false Session AUTO_ACKNOWLEDGE LOG info consumeDestination MessageConsumer c1 session createConsumer consumeDestination c1 setMessageListener messageList ActiveMQQueue sendDestination new ActiveMQQueue getQueueName LOG info sendDestination MessageProducer producer session createProducer sendDestination assertNotNull producer int total for int i i total i producer send session createTextMessage i
Override public void onMessage Message message try Thread sleep 2000L if message TextMessage
final AtomicLong numMessagesToSend new AtomicLong messageCount purge long startTime System currentTimeMillis for int i i numThreads i executor execute new Runnable Override public void run try produceMessages numMessagesToSend queue catch Exception e e printStackTrace executor shutdown executor awaitTermination TimeUnit MINUTES long endTime System currentTimeMillis long seconds endTime startTime
Override public void run try produceMessages numMessagesToSend queue catch Exception e e printStackTrace executor shutdown executor awaitTermination TimeUnit MINUTES long endTime System currentTimeMillis long seconds endTime startTime LOG info numThreads intValue seconds results put numThreads seconds LOG info brokerService getAdminView getTotalEnqueueCount brokerService stop brokerService waitUntilStopped
Test Ignore public void testPerf throws Exception LinkedHashMap Integer Long resultsT new LinkedHashMap Integer Long LinkedHashMap Integer Long resultsF new LinkedHashMap Integer Long for int i i i for Boolean concurrent new Boolean true false startBroker i concurrent false long startTime System currentTimeMillis produceMessages new AtomicLong messageCount target long endTime System currentTimeMillis long seconds endTime startTime
for int i i i for Boolean concurrent new Boolean true false startBroker i concurrent false long startTime System currentTimeMillis produceMessages new AtomicLong messageCount target long endTime System currentTimeMillis long seconds endTime startTime LOG info i seconds if concurrent resultsT put i seconds else resultsF put i seconds brokerService stop brokerService waitUntilStopped LOG info resultsT resultsF
while messagestoSend numMessages connection1 close catch Exception e e printStackTrace for int i i numConnections i executorService execute runnable final String prefix executorService execute new Runnable Override public void run try doneOne await TimeUnit SECONDS for int i numDestinations i i final ActiveMQQueue toDelete new ActiveMQQueue i ObjectName queueViewMBeanName new ObjectName prefix toDelete getQueueName
Test public void testWildcardAndSimpleConsumerShareMessages throws Exception ConsumerBean messageList1 new ConsumerBean ConsumerBean messageList2 new ConsumerBean ConsumerBean messageList3 new ConsumerBean messageList1 setVerbose true messageList2 setVerbose true messageList3 setVerbose true Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination producerDestination new ActiveMQTopic Destination destination1 new ActiveMQQueue Destination destination2 new ActiveMQQueue Destination destination3 new ActiveMQQueue
Test public void testWildcardAndSimpleConsumerShareMessages throws Exception ConsumerBean messageList1 new ConsumerBean ConsumerBean messageList2 new ConsumerBean ConsumerBean messageList3 new ConsumerBean messageList1 setVerbose true messageList2 setVerbose true messageList3 setVerbose true Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination producerDestination new ActiveMQTopic Destination destination1 new ActiveMQQueue Destination destination2 new ActiveMQQueue Destination destination3 new ActiveMQQueue LOG info producerDestination
Test public void testConsumerMessagesAreNotOrdered throws Exception TestConsumer consumerAllFail null messageList new Hashtable String AtomicInteger try TestProducer producerAllFail new TestProducer queueFail thread producerAllFail false consumerAllFail new TestConsumer queueFail true thread consumerAllFail false Thread sleep thread producerAllFail false Thread sleep producerAllFail getLatch await LOG info producerAllFail getLatch getCount
Thread sleep thread producerAllFail false Thread sleep producerAllFail getLatch await LOG info producerAllFail getLatch getCount LOG info messageList size assertTrue messageList size totalNumberMessages Wait waitFor new Condition Override public boolean isSatisified throws Exception return totalNumberMessages messageList size consumerAllFail getLatch await LOG info consumerAllFail getLatch getCount Iterator String keys messageList keySet iterator for AtomicInteger counter messageList values String message keys next
catch Exception e threads add producer producer start ConsumerThread c1 new ConsumerThread threads add c1 c1 start Thread sleep ConsumerThread c2 new ConsumerThread threads add c2 c2 start int totalReceived for int i i i Thread sleep long c1Counter c1 counter getAndSet
QueueSession session null QueueSender sender null Queue queue null TextMessage message null try queueConnection connectionFactory createQueueConnection session queueConnection createQueueSession false QueueSession AUTO_ACKNOWLEDGE queue session createQueue TEST_QUEUE_NAME sender session createSender queue sender setDeliveryMode DeliveryMode PERSISTENT message session createTextMessage String valueOf i sender send message if session getTransacted session commit if i
public void testForDuplicateMessages throws Exception final ConcurrentMap String String messages new ConcurrentHashMap String String final Object lock new Object final CountDownLatch duplicateSignal new CountDownLatch final AtomicInteger messageCount new AtomicInteger for int i i TEST_MESSAGE_COUNT i if duplicateSignal getCount fail sendTextMessage TEST_QUEUE_NAME i for int i i CONSUMER_COUNT i receivers i new ThreadedMessageReceiver TEST_QUEUE_NAME new IMessageHandler Override public void onMessage Message message throws Exception synchronized lock int current messageCount incrementAndGet if current
final CountDownLatch duplicateSignal new CountDownLatch final AtomicInteger messageCount new AtomicInteger for int i i TEST_MESSAGE_COUNT i if duplicateSignal getCount fail sendTextMessage TEST_QUEUE_NAME i for int i i CONSUMER_COUNT i receivers i new ThreadedMessageReceiver TEST_QUEUE_NAME new IMessageHandler Override public void onMessage Message message throws Exception synchronized lock int current messageCount incrementAndGet if current logger info message getJMSMessageID TextMessage message getText if messages containsKey message getJMSMessageID duplicateSignal countDown
synchronized lock int current messageCount incrementAndGet if current logger info message getJMSMessageID TextMessage message getText if messages containsKey message getJMSMessageID duplicateSignal countDown logger fatal message getJMSMessageID fail message getJMSMessageID else messages put message getJMSMessageID message getJMSMessageID threadPool submit receivers i for int i i TEST_MESSAGE_COUNT i if duplicateSignal getCount fail
for int i i numConsumers i ConsumerThread c1 new ConsumerThread i threads add c1 c1 start assertTrue started await TimeUnit SECONDS Thread producer new Thread Override public void run try produce numMessages catch Exception e threads add producer producer start boolean allGood receivedLatch await TimeUnit SECONDS for Throwable t exceptions
public void produce int count throws Exception Connection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory PRODUCER_BROKER_URL connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setTimeToLive connection start for int i i count i int id i TextMessage message session createTextMessage name getMethodName id message setIntProperty id producer send message if id
try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory PRODUCER_BROKER_URL connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setTimeToLive connection start for int i i count i int id i TextMessage message session createTextMessage name getMethodName id message setIntProperty id producer send message if id log info id message catch JMSException e
Override public void onException JMSException exception
Override public void uncaughtException Thread thread Throwable exception
props put connectionUri props put queueName javax naming Context ctx new InitialContext props QueueConnectionFactory factory QueueConnectionFactory ctx lookup QueueConnection conn factory createQueueConnection final Queue queue Queue ctx lookup QueueSession session conn createQueueSession false Session AUTO_ACKNOWLEDGE QueueReceiver receiver session createReceiver queue selectors System out println receiver getMessageSelector receiver setMessageListener new MessageListener public void onMessage Message message try if message TextMessage TextMessage txtMsg TextMessage message String msg txtMsg getText
props put props put connectionUri props put topicName javax naming Context ctx new InitialContext props TopicConnectionFactory factory TopicConnectionFactory ctx lookup TopicConnection conn factory createTopicConnection final Topic topic Topic ctx lookup TopicSession session conn createTopicSession false Session AUTO_ACKNOWLEDGE TopicSubscriber receiver session createSubscriber topic selectors false receiver setMessageListener new MessageListener public void onMessage Message message try if message TextMessage TextMessage txtMsg TextMessage message String msg txtMsg getText
After public void tearDown throws Exception ExecutorService executor Executors newSingleThreadExecutor Future Boolean future executor submit new TeardownTask brokerLock broker try LOG debug long start System currentTimeMillis Boolean result future get TimeUnit SECONDS long finish System currentTimeMillis
private void verifyStats boolean brokerRestarts boolean transactional throws Exception RegionBroker regionBroker RegionBroker broker getRegionBroker for Destination dest regionBroker getQueueRegion getDestinationMap values DestinationStatistics stats dest getDestinationStatistics if brokerRestarts
for Destination dest regionBroker getQueueRegion getDestinationMap values DestinationStatistics stats dest getDestinationStatistics if brokerRestarts LOG info dest getName stats getEnqueues getCount stats getDequeues getCount else assertEquals dest getName stats getEnqueues getCount stats getDequeues getCount Destination activeMQDlq regionBroker getQueueRegion getDestinationMap get new ActiveMQQueue if activeMQDlq null int countToExcuse org apache activemq command Message messages activeMQDlq browse for org apache activemq command Message candidate messages final Object cause candidate getProperty DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY if cause null String cause contains DUPLICATE_FROM_STORE_MSG_PREFIX transactional String cause contains countToExcuse else
class RestartTask extends TimerTask public void run synchronized brokerLock LOG info try broker stop broker waitUntilStopped catch Exception e LOG error e exceptions add e LOG info try createBroker configurer broker waitUntilStarted catch Exception e
catch Exception e LOG error e exceptions add e LOG info try createBroker configurer broker waitUntilStarted catch Exception e LOG error e exceptions add e if numBrokerRestarts MAX_BROKER_RESTARTS timer null try timer schedule new RestartTask brokerStopPeriod catch IllegalStateException ignore_alreadyCancelled else
else AutoFailTestSupport dumpAllThreads LOG info threads while receivers isEmpty System currentTimeMillis expiry Receiver receiver receivers firstElement if receiver getNextExpectedSeqNo numtoSend exceptions isEmpty receiver close receivers remove receiver for Connection connection connections try connection close catch Exception ignored connections clear assertTrue System currentTimeMillis expiry if exceptions isEmpty
private static void produce String brokerURL int count throws Exception Connection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory brokerURL connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setTimeToLive connection start for int i i count i int id i TextMessage message session createTextMessage id message setIntProperty id producer send message if id
Thread consumingThread new Thread public void run try int count Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination while consumer receive messageReceiveTimeout null consumerReady countDown count LOG info consumerContinue await if consumeAll LOG info while consumer receive messageReceiveTimeout null
Override public void onMessage Message message latch countDown if count LOG_INTERVAL
Override public void onMessage Message message receivedMessages release if count incrementAndGet
private void validateQueueStats throws Exception final BrokerView brokerView brokers get broker getAdminView assertEquals brokerView getTotalEnqueueCount assertTrue Wait waitFor new Wait Condition public boolean isSatisified throws Exception
private void sendMessage String msgText String propertyValue throws JMSException
broker getSystemUsage getStoreUsage isFull LOG info brokerView getStorePercentUsage assertTrue redeliveryConsumerLatch getCount redeliveryConsumerLatch await TimeUnit SECONDS assertTrue dlqConsumerLatch await TimeUnit SECONDS closeConsumer LOG info closeDlqConsumer Thread sleep FilenameFilter justLogFiles new FilenameFilter public boolean accept File file String s return s endsWith int numFiles KahaDBPersistenceAdapter broker getPersistenceAdapter getDirectory list justLogFiles length if numFiles LOG info Arrays toString KahaDBPersistenceAdapter broker getPersistenceAdapter getDirectory list justLogFiles
private void openDlqConsumer final CountDownLatch received throws Exception dlqConnection ActiveMQConnection createConnection Session dlqSession dlqConnection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer dlqConsumer dlqSession createConsumer new ActiveMQQueue dlqConsumer setMessageListener new MessageListener public void onMessage Message message if received getCount received getCount
sendMessage false final BrokerView brokerView broker getAdminView broker getSystemUsage getStoreUsage isFull LOG info brokerView getStorePercentUsage int storePercentUsage broker getAdminView getStorePercentUsage assertTrue storePercentUsage minPercentUsageForStore assertTrue redeliveryConsumerLatch await TimeUnit SECONDS closeConsumer final CountDownLatch received new CountDownLatch messages consumerConnection ActiveMQConnection createConnection Session dlqSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer dlqConsumer dlqSession createConsumer new ActiveMQQueue dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message if received getCount
final MessageConsumer consumer session createConsumer session createQueue QUEUE_NAME consumer setMessageListener new MessageListener public void onMessage Message message try afterRestart await final TextMessage txtMsg TextMessage message if txtMsg getText equals producer send session createTextMessage TimeUnit SECONDS sleep producer send session createTextMessage LOG info twoNewMessages countDown else if txtMsg getText equals thirdMessageReceived countDown catch Exception e
public void testRecoverRedelivery throws Exception final CountDownLatch redelivery new CountDownLatch final ActiveMQConnectionFactory factory new ActiveMQConnectionFactory broker getTransportConnectors get getConnectUri try Connection connection factory createConnection String clientId clientIdPrefix connection setClientID clientId final Session session connection createSession false Session CLIENT_ACKNOWLEDGE Queue queue session createQueue queueName MessageConsumer consumer session createConsumer queue consumer setMessageListener new MessageListener public void onMessage Message message try
private void produceMessages throws Exception TopicConnection connection createConnection TopicSession session connection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic session createTopic TOPICNAME TopicPublisher producer session createPublisher topic connection start producer setDeliveryMode DeliveryMode PERSISTENT long tStamp System currentTimeMillis BytesMessage message session2 createBytesMessage for int i i MSG_COUNT i message setStringProperty message setIntProperty i producer publish message if i
produceMessages LOG debug Thread sleep LOG debug conn1 close conn2 close LOG debug Thread sleep LOG debug activeateSubscribers LOG debug ObjectName subs broker getAdminView getDurableTopicSubscribers for int i i subs length i ObjectName subName subs i DurableSubscriptionViewMBean sub DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true
Test public void testNoRestartOnMissingAckDataFile throws Exception startBroker makeAckChain File dataDir broker getPersistenceAdapter getDirectory broker stop broker waitUntilStopped File secondLastDataFile new File dataDir
Test public void testAckRemovedMessageReplayedAfterRecovery throws Exception startBroker StagedConsumer consumer new StagedConsumer int numMessagesAvailable produceMessagesToConsumeMultipleDataFiles Message firstUnacked consumer receive
Test public void testAckRemovedMessageReplayedAfterRecovery throws Exception startBroker StagedConsumer consumer new StagedConsumer int numMessagesAvailable produceMessagesToConsumeMultipleDataFiles Message firstUnacked consumer receive LOG info firstUnacked getJMSMessageID Message secondUnacked consumer receive
Test public void testAckRemovedMessageReplayedAfterRecovery throws Exception startBroker StagedConsumer consumer new StagedConsumer int numMessagesAvailable produceMessagesToConsumeMultipleDataFiles Message firstUnacked consumer receive LOG info firstUnacked getJMSMessageID Message secondUnacked consumer receive LOG info secondUnacked getJMSMessageID numMessagesAvailable numMessagesAvailable produceMessagesToConsumeMultipleDataFiles
private int getNumberOfJournalFiles throws IOException Collection DataFile files KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getFileMap values
Parameterized Parameters public static Collection PersistenceAdapterChoice getTestParameters String osName System getProperty
openConsumer assertEquals broker getAdminView getStorePercentUsage for int i i i sendMessage false final BrokerView brokerView broker getAdminView assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception broker getSystemUsage getStoreUsage isFull LOG info brokerView getStorePercentUsage return broker getAdminView getStorePercentUsage minPercentUsageForStore closeConsumer assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception broker getSystemUsage getStoreUsage isFull
LOG info brokerView getStorePercentUsage return broker getAdminView getStorePercentUsage minPercentUsageForStore closeConsumer assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception broker getSystemUsage getStoreUsage isFull LOG info brokerView getStorePercentUsage return broker getAdminView getStorePercentUsage minPercentUsageForStore for int i i i sendMessage false broker getAdminView destroyDurableSubscriber assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
private int getFileCount File dir if dir isDirectory String children dir list
private void createProducerAndSendMessages int numToSend throws Exception queue session createQueue MessageProducer producer session createProducer queue for int i i numToSend i TextMessage message session createTextMessage MESSAGE_TEXT i if i i
connection start ConsumerBean messageList new ConsumerBean messageList setVerbose true ActiveMQDestination consumeDestination createConsumeDestination Session session connection createSession false Session AUTO_ACKNOWLEDGE LOG info consumeDestination MessageConsumer c1 session createConsumer consumeDestination c1 setMessageListener messageList ActiveMQQueue sendDestination new ActiveMQQueue getQueueName LOG info sendDestination MessageProducer producer session createProducer sendDestination assertNotNull producer final int total for int i i total i producer send session createTextMessage i
LOG info consumeDestination MessageConsumer c1 session createConsumer consumeDestination c1 setMessageListener messageList ActiveMQQueue sendDestination new ActiveMQQueue getQueueName LOG info sendDestination MessageProducer producer session createProducer sendDestination assertNotNull producer final int total for int i i total i producer send session createTextMessage i messageList assertMessagesArrived total LOG info messageList messageList flushMessages MessageConsumer c2 session createConsumer sendDestination c2 setMessageListener messageList
while cur num_msg testError msg sess createTextMessage cur msg setIntProperty cur msg setStringProperty msg setJMSReplyTo resp_dest if cur num_msg msg setBooleanProperty true req_prod send msg cur cons_client waitShutdown if cons_client shutdown LOG debug else LOG debug tot_expected num_msg echoResponseFill if cons_client getNumMsgReceived tot_expected
msg setIntProperty cur msg setStringProperty msg setJMSReplyTo resp_dest if cur num_msg msg setBooleanProperty true req_prod send msg cur cons_client waitShutdown if cons_client shutdown LOG debug else LOG debug tot_expected num_msg echoResponseFill if cons_client getNumMsgReceived tot_expected LOG info tot_expected else
public void testTempTopic String prod_broker_url String cons_broker_url throws Exception Connection conn Session sess Destination cons_dest int num_msg num_msg
public void testTopic String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess String topic_name Destination cons_dest num_msg
public void testTempQueue String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess Destination cons_dest num_msg
public void testQueue String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess String queue_name Destination cons_dest num_msg
Thread start1 Thread start2 testError false start1 new Thread public void run try broker1 start catch Exception ex LOG error null ex start2 new Thread public void run try broker2 start catch Exception ex
protected void doTest throws Exception messageCount connection start final QueueViewMBean dlqView getProxyToDLQ ActiveMQConnection amqConnection ActiveMQConnection connection rollbackCount amqConnection getRedeliveryPolicy getMaximumRedeliveries
protected void makeConsumer throws JMSException Destination destination getDestination
protected void makeDlqConsumer throws JMSException dlqDestination createDlqDestination
consumer ActiveMQMessageConsumer consumerSession createConsumer dest Random random new Random for int i i messageCount i Message message producerSession createTextMessage i producer send message DeliveryMode PERSISTENT random nextInt producerSession commit producer close final CountDownLatch latch new CountDownLatch messageCount final StringBuffer failureMessage new StringBuffer consumer setMessageListener new MessageListener int lowestPrioritySeen boolean firstMessage true Override public void onMessage Message msg try int currentPriority msg getJMSPriority
public static void visit ThreadGroup group int level int numThreads group activeCount Thread threads new Thread numThreads numThreads group enumerate threads false for int i i numThreads i Thread thread threads i
try if consumer null consumer close catch JMSException e trackException e try if session null session close catch JMSException e trackException e try if connection null connection close catch JMSException e trackException e
try if ctx null ctx close catch Exception e trackException e private void trackException String s Exception e LOG error s e this error e final Random random new Random List ClientThread threads new LinkedList ClientThread for int i i i threads add new ClientThread tg i for Thread thread threads thread start ExecutorService doTheInterrupts Executors newFixedThreadPool threads size
public static void visit ThreadGroup group int level int numThreads group activeCount Thread threads new Thread numThreads numThreads group enumerate threads false for int i i numThreads i Thread thread threads i
Test public void runTest throws Exception produceSingleMessage org apache log4j Logger log4jLogger org apache log4j Logger getLogger final AtomicBoolean failed new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getThrowableInformation null if event getThrowableInformation getThrowable InterruptedException InterruptedException ie InterruptedException event getThrowableInformation getThrowable if ie getMessage startsWith
private void startConsumer throws Exception logger info consumer sessionWithListener createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message
private void startConsumer throws Exception logger info consumer sessionWithListener createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message logger info message thread new Thread new Runnable private Session session Override public void run try destination session createQueue MessageConsumer consumer session createConsumer destination for int cnt cnt cnt Message message consumer receive
consumer sessionWithListener createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message logger info message thread new Thread new Runnable private Session session Override public void run try destination session createQueue MessageConsumer consumer session createConsumer destination for int cnt cnt cnt Message message consumer receive logger info message catch JMSException e
thread new Thread new Runnable private Session session Override public void run try destination session createQueue MessageConsumer consumer session createConsumer destination for int cnt cnt cnt Message message consumer receive logger info message catch JMSException e logger debug e finally try session close
final Connection consumerConnection factory createConnection consumerConnection setClientID Session consumerMQSession consumerConnection createSession false Session CLIENT_ACKNOWLEDGE TopicSubscriber activeConsumer TopicSubscriber consumerMQSession createDurableSubscriber destination consumerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode deliveryMode final BrokerView brokerView broker getAdminView assertEquals brokerView getDurableTopicSubscribers length LOG info brokerView getDurableTopicSubscribers length try brokerView destroyDurableSubscriber fail catch Exception e
connection start session connection createSession false ActiveMQSession INDIVIDUAL_ACKNOWLEDGE Queue queue session createQueue final LinkedBlockingQueue Message workQueue new LinkedBlockingQueue Message final MessageConsumer consumer1 session createConsumer queue final MessageConsumer consumer2 session createConsumer queue final MessageProducer producer session createProducer queue Thread consumer1Thread new Thread new Runnable Override public void run try while totalConsumed get NUM_MESSAGES Message message consumer1 receiveNoWait if message null workQueue add message catch Exception e
Message message consumer1 receiveNoWait if message null workQueue add message catch Exception e LOG error e consumer1Thread start Thread consumer2Thread new Thread new Runnable Override public void run try while totalConsumed get NUM_MESSAGES Message message consumer2 receive if message null workQueue add message catch Exception e
consumer1Thread start Thread consumer2Thread new Thread new Runnable Override public void run try while totalConsumed get NUM_MESSAGES Message message consumer2 receive if message null workQueue add message catch Exception e LOG error e consumer2Thread start Thread producerThread new Thread new Runnable Override public void run
catch Exception e LOG error e consumer2Thread start Thread producerThread new Thread new Runnable Override public void run try for int i i NUM_MESSAGES i producer send session createTextMessage TimeUnit MILLISECONDS sleep pause nextInt catch Exception e LOG error e producerThread start Thread ackingThread new Thread new Runnable
Test public void getMessage throws Exception final QueueViewMBean queueView getProxyToQueueViewMBean final CompositeData messages queueView browse messageID String messages get assertNotNull messageID assertNotNull queueView getMessage messageID
Test public void testDurableConsumerEnqueueCountWithZeroPrefetch throws Exception ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory connectionUri connectionFactory getPrefetchPolicy setAll Connection connection connectionFactory createConnection connection setClientID getClass getName connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createTopic MessageConsumer consumer session createDurableSubscriber Topic destination BrokerView view brokerService getAdminView view getDurableTopicSubscribers ObjectName subName view getDurableTopicSubscribers DurableSubscriptionViewMBean sub DurableSubscriptionViewMBean brokerService getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true assertEquals sub getEnqueueCounter
Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createTopic MessageConsumer consumer session createDurableSubscriber Topic destination BrokerView view brokerService getAdminView view getDurableTopicSubscribers ObjectName subName view getDurableTopicSubscribers DurableSubscriptionViewMBean sub DurableSubscriptionViewMBean brokerService getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true assertEquals sub getEnqueueCounter LOG info sub getEnqueueCounter consumer receive consumer receive consumer receive consumer receive consumer receive Thread sleep
final QueueViewMBean queueView getProxyToQueueViewMBean assertEquals queueView getInFlightCount consumer setMessageListener new MessageListener public void onMessage Message message try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition public boolean isSatisified throws Exception return queueView getInFlightCount
assertEquals queueView getInFlightCount consumer setMessageListener new MessageListener public void onMessage Message message try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition public boolean isSatisified throws Exception return queueView getInFlightCount
consumer setMessageListener new MessageListener public void onMessage Message message try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount
public void onMessage Message message try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount
try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount LOG info queueView getEnqueueCount
assertEquals queueView getInFlightCount consumer setMessageListener new MessageListener public void onMessage Message message try session commit catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage session commit assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
consumer setMessageListener new MessageListener public void onMessage Message message try session commit catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage session commit assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
public void onMessage Message message try session commit catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage session commit assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount
try session commit catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage session commit assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount
session commit catch JMSException e TimeUnit SECONDS sleep assertEquals queueView getInFlightCount for int i i i producer send session createTextMessage session commit assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount LOG info queueView getEnqueueCount
Session session connection createSession false Session CLIENT_ACKNOWLEDGE connection start MessageProducer producer session createProducer queue MessageConsumer consumer session createConsumer queue for int i i i if i producer send session createTextMessage DeliveryMode PERSISTENT else producer send session createTextMessage TimeUnit SECONDS sleep final QueueViewMBean queueView getProxyToQueueViewMBean assertEquals queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try
consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition
Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
try LOG debug message message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
LOG debug message message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount
MessageProducer producer session createProducer queue MessageConsumer consumer session createConsumer queue for int i i i if i producer send session createTextMessage DeliveryMode PERSISTENT else producer send session createTextMessage TimeUnit SECONDS sleep final QueueViewMBean queueView getProxyToQueueViewMBean assertEquals queueView getInFlightCount final AtomicInteger msgCount new AtomicInteger consumer setMessageListener new MessageListener Override public void onMessage Message message try if msgCount incrementAndGet
assertEquals queueView getInFlightCount final AtomicInteger msgCount new AtomicInteger consumer setMessageListener new MessageListener Override public void onMessage Message message try if msgCount incrementAndGet LOG debug message message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e for int i i i
TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e for int i i i producer send session createTextMessage
TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e for int i i i producer send session createTextMessage
TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e for int i i i producer send session createTextMessage
TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG debug message message acknowledge catch JMSException e for int i i i producer send session createTextMessage
Override public void onMessage Message message try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
try message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount
message acknowledge catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount
catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount
catch JMSException e TimeUnit SECONDS sleep assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount for int i i i producer send session createTextMessage assertTrue queueView getInFlightCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getInFlightCount LOG info queueView getDequeueCount LOG info queueView getDispatchCount
ArrayList Message messages new ArrayList Message Message received while received consumer receive null messages add received if messages size TimeUnit SECONDS sleep received acknowledge assertEquals messageCount messages size ArrayList Message dlqMessages new ArrayList Message while received dlqConsumer receive null dlqMessages add received assertEquals data length dlqMessages size final QueueViewMBean queueView getProxyToQueueViewMBean
ArrayList Message messages new ArrayList Message Message received while received consumer receive null messages add received if messages size TimeUnit SECONDS sleep received acknowledge assertEquals messageCount messages size ArrayList Message dlqMessages new ArrayList Message while received dlqConsumer receive null dlqMessages add received assertEquals data length dlqMessages size final QueueViewMBean queueView getProxyToQueueViewMBean
Message received while received consumer receive null messages add received if messages size TimeUnit SECONDS sleep received acknowledge assertEquals messageCount messages size ArrayList Message dlqMessages new ArrayList Message while received dlqConsumer receive null dlqMessages add received assertEquals data length dlqMessages size final QueueViewMBean queueView getProxyToQueueViewMBean LOG info queueView getDequeueCount
while received consumer receive null messages add received if messages size TimeUnit SECONDS sleep received acknowledge assertEquals messageCount messages size ArrayList Message dlqMessages new ArrayList Message while received dlqConsumer receive null dlqMessages add received assertEquals data length dlqMessages size final QueueViewMBean queueView getProxyToQueueViewMBean LOG info queueView getDequeueCount LOG info queueView getDispatchCount
prefecthPolicy setAll factory setPrefetchPolicy prefecthPolicy Connection connection factory createConnection connection start final MessageConsumer consumer connection createSession false Session AUTO_ACKNOWLEDGE createConsumer queue executorService execute new Runnable Override public void run try while done get Thread sleep RECEIVE_POLL_PERIOD for int i i RECEIVE_BATCH done get i Message message consumer receive if message null counter incrementAndGet if counter get counter get
Override protected Message createMessage int i throws Exception return session createTextMessage payload i producer setMessageCount messageCount ConsumerThread consumer new ConsumerThread consumerSess destination consumer setBreakOnNull false consumer setMessageCount messageCount producer start producer join consumer start consumer join assertEquals producer getMessageCount consumer getReceived assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception int fileCount getFileCount kahaDbDir
Test public void testDurableSubMessageLoss throws Exception BrokerService brokerService new BrokerService connectionUri brokerService addConnector brokerUrl getPublishableConnectString brokerService setPersistent false brokerService setUseJmx false brokerService setKeepDurableSubsActive true brokerService setAdvisorySupport false brokerService start LOG info try for int i i numTests i
Override public Boolean call throws Exception Connection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri factory setWatchTopicAdvisories false connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic topic session createTopic topicName MessageProducer producer session createProducer topic producer setDeliveryMode DeliveryMode PERSISTENT producer setPriority Message DEFAULT_PRIORITY producer setTimeToLive Message DEFAULT_TIME_TO_LIVE for int seq seq numMsgs seq TextMessage msg session createTextMessage String valueOf seq producer send msg
return Boolean TRUE Callable Boolean durableSubscriber new Callable Boolean ActiveMQConnectionFactory factory Connection connection Session session Topic topic TopicSubscriber consumer Override public Boolean call throws Exception factory new ActiveMQConnectionFactory connectionUri factory setWatchTopicAdvisories false try connect for int seqExpected seqExpected numMsgs seqExpected TextMessage msg TextMessage consumer receive 3000L
connection start Session session connection createSession true Session SESSION_TRANSACTED Destination test_data_destination session createQueue System currentTimeMillis MessageConsumer consumer session createConsumer test_data_destination LOG info MessageProducer producer session createProducer test_data_destination producer send session createTextMessage session commit producer send session createTextMessage LOG info consumer close consumer session createConsumer test_data_destination LOG info Message message consumer receive if message null
createBroker i startAllBrokers waitForBridgeFormation numBrokers verifyPeerBrokerInfos numBrokers final List ConsumerState consumerStates startAllGWConsumers numBrokers startAllGWFanoutConsumers numBrokers LOG info TimeUnit SECONDS sleep LOG info long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length
startAllBrokers waitForBridgeFormation numBrokers verifyPeerBrokerInfos numBrokers final List ConsumerState consumerStates startAllGWConsumers numBrokers startAllGWFanoutConsumers numBrokers LOG info TimeUnit SECONDS sleep LOG info long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length LOG info tally brokerName tally destination tally accumulator get
long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length LOG info tally brokerName tally destination tally accumulator get if tally accumulator get expected LOG info tally brokerName tally destination tally accumulator get expected tally expected if tally accumulator get expected dumpQueueStat null if tally expected size startConsumer tally brokerName tally destination return false
private long dumpQueueStat ActiveMQDestination destination throws Exception long sumTotal Collection BrokerItem brokerList brokers values for Iterator BrokerItem i brokerList iterator i hasNext BrokerService brokerService i next broker for ObjectName objectName brokerService getAdminView getQueues if destination null objectName toString contains destination getPhysicalName QueueViewMBean qViewMBean QueueViewMBean brokerService getManagementContext newProxyInstance objectName QueueViewMBean class false
compositeDest append ActiveMQQueue compositeQ new ActiveMQQueue compositeDest toString for int id id nBrokers id ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory portBase id connectionFactory setWatchTopicAdvisories false QueueConnection queueConnection connectionFactory createQueueConnection queueConnection start final QueueSession queueSession queueConnection createQueueSession true Session SESSION_TRANSACTED final MessageProducer producer queueSession createProducer compositeQ queueSession createReceiver new ActiveMQQueue setMessageListener new MessageListener Override public void onMessage Message message try producer send message queueSession commit catch Exception e
accumulators put destination new AtomicInteger consumerState accumulator accumulators get destination queueReceiver setMessageListener new MessageListener Override public void onMessage Message message try if consumerSleepTime TimeUnit MILLISECONDS sleep consumerSleepTime catch InterruptedException e e printStackTrace try consumerState accumulator incrementAndGet try consumerState expected remove ActiveMQMessage message getProperty catch IOException e e printStackTrace
private void verifyPeerBrokerInfo BrokerItem brokerItem final int max throws Exception final BrokerService broker brokerItem broker final RegionBroker regionBroker RegionBroker broker getRegionBroker Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
createBroker i startAllBrokers waitForBridgeFormation numBrokers verifyPeerBrokerInfos numBrokers final List ConsumerState consumerStates startAllGWConsumers numBrokers startAllGWFanoutConsumers numBrokers LOG info TimeUnit SECONDS sleep LOG info long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length
startAllBrokers waitForBridgeFormation numBrokers verifyPeerBrokerInfos numBrokers final List ConsumerState consumerStates startAllGWConsumers numBrokers startAllGWFanoutConsumers numBrokers LOG info TimeUnit SECONDS sleep LOG info long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length LOG info tally brokerName tally destination tally accumulator get
final List ConsumerState consumerStates startAllGWConsumers numBrokers startAllGWFanoutConsumers numBrokers LOG info TimeUnit SECONDS sleep LOG info long startTime System currentTimeMillis produce numMessages assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for ConsumerState tally consumerStates final int expected numMessages tally destination isComposite tally destination getCompositeDestinations length LOG info tally brokerName tally destination tally accumulator get if tally accumulator get expected LOG info tally brokerName tally destination tally accumulator get expected tally expected return false
compositeDest append ActiveMQQueue compositeQ new ActiveMQQueue compositeDest toString for int id id nBrokers id ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory portBase id connectionFactory setWatchTopicAdvisories false QueueConnection queueConnection connectionFactory createQueueConnection queueConnection start final QueueSession queueSession queueConnection createQueueSession true Session SESSION_TRANSACTED final MessageProducer producer queueSession createProducer compositeQ queueSession createReceiver new ActiveMQQueue setMessageListener new MessageListener Override public void onMessage Message message try producer send message queueSession commit catch Exception e
accumulators put destination new AtomicInteger consumerState accumulator accumulators get destination queueReceiver setMessageListener new MessageListener Override public void onMessage Message message try if consumerSleepTime TimeUnit MILLISECONDS sleep consumerSleepTime catch InterruptedException e e printStackTrace try consumerState accumulator incrementAndGet try consumerState expected remove ActiveMQMessage message getProperty catch IOException e e printStackTrace
final AtomicInteger toSend new AtomicInteger numMessages for int i i numProducers i final int id i numBrokers executorService execute new Runnable Override public void run try ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory portBase id connectionFactory setWatchTopicAdvisories false QueueConnection queueConnection connectionFactory createQueueConnection queueConnection start QueueSession queueSession queueConnection createQueueSession false Session AUTO_ACKNOWLEDGE MessageProducer producer queueSession createProducer null int val while val toSend decrementAndGet ActiveMQQueue compositeQ new ActiveMQQueue
private void verifyPeerBrokerInfo BrokerItem brokerItem final int max throws Exception final BrokerService broker brokerItem broker final RegionBroker regionBroker RegionBroker broker getRegionBroker Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
PolicyEntry policy new PolicyEntry policy setExpireMessagesPeriod policy setMemoryLimit memoryLimit policy setProducerFlowControl false PolicyMap pMap new PolicyMap pMap setDefaultEntry policy broker setDestinationPolicy pMap broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void send ProducerBrokerExchange producerExchange final Message messageSend throws Exception if messageSend isInTransaction messageSend getProperty null final Integer num Integer messageSend getProperty if true TransactionBroker transactionBroker TransactionBroker broker getBroker getAdaptor TransactionBroker class transactionBroker getTransaction producerExchange getConnectionContext messageSend getTransactionId false addSynchronization new Synchronization public void afterCommit throws Exception
policy setMemoryLimit memoryLimit policy setProducerFlowControl false PolicyMap pMap new PolicyMap pMap setDefaultEntry policy broker setDestinationPolicy pMap broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void send ProducerBrokerExchange producerExchange final Message messageSend throws Exception if messageSend isInTransaction messageSend getProperty null final Integer num Integer messageSend getProperty if true TransactionBroker transactionBroker TransactionBroker broker getBroker getAdaptor TransactionBroker class transactionBroker getTransaction producerExchange getConnectionContext messageSend getTransactionId false addSynchronization new Synchronization public void afterCommit throws Exception LOG error num messageSend getMessageId messageSend getTransactionId if num
PolicyMap pMap new PolicyMap pMap setDefaultEntry policy broker setDestinationPolicy pMap broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void send ProducerBrokerExchange producerExchange final Message messageSend throws Exception if messageSend isInTransaction messageSend getProperty null final Integer num Integer messageSend getProperty if true TransactionBroker transactionBroker TransactionBroker broker getBroker getAdaptor TransactionBroker class transactionBroker getTransaction producerExchange getConnectionContext messageSend getTransactionId false addSynchronization new Synchronization public void afterCommit throws Exception LOG error num messageSend getMessageId messageSend getTransactionId if num LOG error num messageSend getMessageId slowSendResume await TimeUnit SECONDS
broker setDestinationPolicy pMap broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void send ProducerBrokerExchange producerExchange final Message messageSend throws Exception if messageSend isInTransaction messageSend getProperty null final Integer num Integer messageSend getProperty if true TransactionBroker transactionBroker TransactionBroker broker getBroker getAdaptor TransactionBroker class transactionBroker getTransaction producerExchange getConnectionContext messageSend getTransactionId false addSynchronization new Synchronization public void afterCommit throws Exception LOG error num messageSend getMessageId messageSend getTransactionId if num LOG error num messageSend getMessageId slowSendResume await TimeUnit SECONDS LOG error num messageSend getMessageId else if messageCount num
if messageSend isInTransaction messageSend getProperty null final Integer num Integer messageSend getProperty if true TransactionBroker transactionBroker TransactionBroker broker getBroker getAdaptor TransactionBroker class transactionBroker getTransaction producerExchange getConnectionContext messageSend getTransactionId false addSynchronization new Synchronization public void afterCommit throws Exception LOG error num messageSend getMessageId messageSend getTransactionId if num LOG error num messageSend getMessageId slowSendResume await TimeUnit SECONDS LOG error num messageSend getMessageId else if messageCount num LOG error num messageSend getMessageId slowSendResume countDown TimeUnit SECONDS sleep
sessionVector add send i true expected add i for int i i messageCount i final int id i executorService submit new Runnable Override public void run try sessionVector get id commit catch Exception fail exceptions add fail final DestinationViewMBean queueViewMBean DestinationViewMBean broker getManagementContext newProxyInstance broker getAdminView getQueues DestinationViewMBean class false TimeUnit SECONDS sleep if false assertTrue messageCount Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
private Session send int id int messageSize boolean transacted throws Exception Connection connection factory createConnection connection start Session session connection createSession transacted transacted Session SESSION_TRANSACTED Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination BytesMessage bytesMessage session createBytesMessage bytesMessage writeBytes new byte messageSize bytesMessage setIntProperty id producer send bytesMessage
SuppressWarnings private void doTestBrowsing int messagesToSend throws Exception Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue queue session createQueue destinationName sendMessages messagesToSend QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int received while enumeration hasMoreElements Message m Message enumeration nextElement assertNotNull m if LOG isDebugEnabled
public void testFDSLeak throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionURI ActiveMQConnection connection ActiveMQConnection factory createConnection connection start int connections final long original openFileDescriptorCount
ActiveMQConnection connection ActiveMQConnection factory createConnection connection start int connections final long original openFileDescriptorCount LOG info original final CountDownLatch done new CountDownLatch connections for int i i connections i new Thread i Override public void run ActiveMQConnection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionURI connection ActiveMQConnection factory createConnection connection start catch Exception e
final CountDownLatch done new CountDownLatch connections for int i i connections i new Thread i Override public void run ActiveMQConnection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionURI connection ActiveMQConnection factory createConnection connection start catch Exception e LOG debug getStack e finally try connection close catch Exception e
connection start Session producerSession connection createSession true Session SESSION_TRANSACTED MessageProducer producer producerSession createProducer producerSession createQueue TextMessage producerMessage producerSession createTextMessage producer send producerMessage producer close producerSession commit producerSession close Session consumerSession connection createSession true Session SESSION_TRANSACTED MessageConsumer consumer consumerSession createConsumer consumerSession createQueue Message consumerMessage consumer receive try String txId consumerMessage getStringProperty assertNotNull txId catch Exception e
private void doTestBrowsing int messageToSend throws JMSException ActiveMQQueue queue new ActiveMQQueue ActiveMQConnection producerConnection ActiveMQConnection factory createConnection producerConnection setUseAsyncSend true producerConnection start Session producerSession producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer producerSession createProducer queue producer setDeliveryMode DeliveryMode PERSISTENT for int i i messageToSend i String msgStr provideMessageText i producer send producerSession createTextMessage msgStr if i
producer send producerSession createTextMessage msgStr if i LOG info msgStr substring producerConnection close LOG info broker getSystemUsage getMemoryUsage getPercentUsage Connection connection factory createConnection connection start Session session connection createSession true Session AUTO_ACKNOWLEDGE QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int browsed while enumeration hasMoreElements TextMessage m TextMessage enumeration nextElement browsed if browsed
private void assertNoUnhandeledExceptions for Entry Thread Throwable e unhandeledExceptions entrySet
protected void assertExactMessageCount final String brokerName Destination destination final int count long timeout throws Exception ManagementContext context brokers get brokerName broker getManagementContext final QueueViewMBean queueViewMBean QueueViewMBean context newProxyInstance brokers get brokerName broker getAdminView getQueues QueueViewMBean class false assertTrue count brokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception long currentCount queueViewMBean getQueueSize
protected void assertExactMessageCount final String brokerName Destination destination final int count long timeout throws Exception ManagementContext context brokers get brokerName broker getManagementContext final QueueViewMBean queueViewMBean QueueViewMBean context newProxyInstance brokers get brokerName broker getAdminView getQueues QueueViewMBean class false assertTrue count brokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception long currentCount queueViewMBean getQueueSize LOG info brokerName queueViewMBean currentCount if count currentCount
protected void assertExactConsumersConnect final String brokerName Destination destination final int count long timeout throws Exception final ManagementContext context brokers get brokerName broker getManagementContext assertTrue count brokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception try QueueViewMBean queueViewMBean QueueViewMBean context newProxyInstance brokers get brokerName broker getAdminView getQueues QueueViewMBean class false long currentCount queueViewMBean getConsumerCount
protected void assertExactConsumersConnect final String brokerName Destination destination final int count long timeout throws Exception final ManagementContext context brokers get brokerName broker getManagementContext assertTrue count brokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception try QueueViewMBean queueViewMBean QueueViewMBean context newProxyInstance brokers get brokerName broker getAdminView getQueues QueueViewMBean class false long currentCount queueViewMBean getConsumerCount LOG info brokerName queueViewMBean currentCount if count currentCount
producer close consumer session createDurableSubscriber Topic destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerView getDurableTopicSubscribers length TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return sub getDispatchedCounter TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis assertEquals sub getEnqueueCounter assertEquals sub getDequeueCounter assertEquals sub getPendingQueueSize assertEquals sub getDispatchedCounter assertEquals sub getDispatchedQueueSize
Override public boolean isSatisified throws Exception return brokerView getDurableTopicSubscribers length TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return sub getDispatchedCounter TimeUnit SECONDS toMillis TimeUnit MILLISECONDS toMillis assertEquals sub getEnqueueCounter assertEquals sub getDequeueCounter assertEquals sub getPendingQueueSize assertEquals sub getDispatchedCounter assertEquals sub getDispatchedQueueSize LOG info sub getPendingQueueSize assertNotNull consumer receive assertNotNull consumer receive
producer setDeliveryMode DeliveryMode PERSISTENT final LevelDBStoreViewMBean levelDBView getLevelDBStoreMBean assertNotNull levelDBView levelDBView compact final int SIZE final int MSG_COUNT final CountDownLatch done new CountDownLatch MSG_COUNT byte buffer new byte SIZE for int i i SIZE i buffer i byte for int i i MSG_COUNT i BytesMessage message session createBytesMessage message writeBytes buffer producer send message if i
buffer i byte for int i i MSG_COUNT i BytesMessage message session createBytesMessage message writeBytes buffer producer send message if i LOG info i session commit session commit LOG info MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message if done getCount try
Test timeout public void testDurableTopicResourcesAreRemoved throws Exception LOG info ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionURI for int i i i
Test timeout public void testDurableTopicResourcesAreRemoved throws Exception LOG info ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionURI for int i i i LOG info i Connection connection factory createConnection connection setClientID connection start for int j j j
public void doTestBytesMessageSetPropertyBeforeCopy Connection connection throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue name toString MessageConsumer consumer session createConsumer destination MessageProducer producer session createProducer destination BytesMessage message session createBytesMessage for int i i ITERATIONS i long sendTime System currentTimeMillis message setLongProperty sendTime producer send message
public void doTestStreamMessageSetPropertyBeforeCopy Connection connection throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue name toString MessageConsumer consumer session createConsumer destination MessageProducer producer session createProducer destination StreamMessage message session createStreamMessage for int i i ITERATIONS i long sendTime System currentTimeMillis message setLongProperty sendTime producer send message
private void roundTripProperties ActiveMQObjectMessage message throws IOException JMSException ActiveMQObjectMessage copy new ActiveMQObjectMessage for Map Entry String Object prop message getProperties entrySet
consumersStarted await TimeUnit SECONDS assertEquals consumersStarted getCount Destination producerDestination session createTopic PRODUCER_DESTINATION_NAME MessageProducer producer session createProducer producerDestination int messageIndex for int i i MESSAGE_LIMIT i if i LOG debug consumerA close if i LOG debug consumerB close String messageText messageIndex new java util Date toString TextMessage message session createTextMessage messageText message setIntProperty i
if i LOG debug consumerB close String messageText messageIndex new java util Date toString TextMessage message session createTextMessage messageText message setIntProperty i LOG debug messageText producer send message LOG debug consumerA session createConsumer consumerQueue CONSUMER_A_SELECTOR consumerA setMessageListener listenerA LOG debug consumerB session createConsumer consumerQueue CONSUMER_B_SELECTOR consumerB setMessageListener listenerB consumerAtoConsumeCount await TimeUnit SECONDS
broker BrokerFactory createBroker uri VirtualDestinationInterceptor interceptor new VirtualDestinationInterceptor VirtualTopic virtualTopic new VirtualTopic virtualTopic setName virtualTopic setSelectorAware true VirtualDestination virtualDestinations virtualTopic interceptor setVirtualDestinations virtualDestinations broker setDestinationInterceptors new DestinationInterceptor interceptor SubQueueSelectorCacheBrokerPlugin subQueueSelectorCacheBrokerPlugin new SubQueueSelectorCacheBrokerPlugin BrokerPlugin updatedPlugins subQueueSelectorCacheBrokerPlugin broker setPlugins updatedPlugins broker setUseJmx false broker start broker waitUntilStarted catch Exception e
Override public void onMessage Message message toConsume countDown try if message TextMessage TextMessage textMessage TextMessage message
Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer bigQueue producer setDeliveryMode deliveryMode BytesMessage bytesMessage session createBytesMessage bytesMessage writeBytes new byte messageSize for int i i messageCount i producer send bigQueue bytesMessage final QueueViewMBean queueViewMBean QueueViewMBean broker getManagementContext newProxyInstance broker getAdminView getQueues QueueViewMBean class false LOG info queueViewMBean getName queueViewMBean getEnqueueCount connection close assertFalse queueViewMBean isCacheEnabled final Queue underTest Queue RegionBroker broker getRegionBroker getQueueRegion getDestinationMap get bigQueue Message browsed underTest browse
MessageProducer producer session createProducer bigQueue producer setDeliveryMode deliveryMode BytesMessage bytesMessage session createBytesMessage bytesMessage writeBytes new byte messageSize for int i i messageCount i producer send bigQueue bytesMessage final QueueViewMBean queueViewMBean QueueViewMBean broker getManagementContext newProxyInstance broker getAdminView getQueues QueueViewMBean class false LOG info queueViewMBean getName queueViewMBean getEnqueueCount connection close assertFalse queueViewMBean isCacheEnabled final Queue underTest Queue RegionBroker broker getRegionBroker getQueueRegion getDestinationMap get bigQueue Message browsed underTest browse LOG info browsed length assertEquals maxBrowsePageSize browsed length browsed underTest browse
for int i i messageCount i producer send bigQueue bytesMessage final QueueViewMBean queueViewMBean QueueViewMBean broker getManagementContext newProxyInstance broker getAdminView getQueues QueueViewMBean class false LOG info queueViewMBean getName queueViewMBean getEnqueueCount connection close assertFalse queueViewMBean isCacheEnabled final Queue underTest Queue RegionBroker broker getRegionBroker getQueueRegion getDestinationMap get bigQueue Message browsed underTest browse LOG info browsed length assertEquals maxBrowsePageSize browsed length browsed underTest browse LOG info browsed length assertEquals maxBrowsePageSize browsed length Runtime getRuntime gc long free Runtime getRuntime freeMemory
LOG info queueViewMBean getName queueViewMBean getEnqueueCount connection close assertFalse queueViewMBean isCacheEnabled final Queue underTest Queue RegionBroker broker getRegionBroker getQueueRegion getDestinationMap get bigQueue Message browsed underTest browse LOG info browsed length assertEquals maxBrowsePageSize browsed length browsed underTest browse LOG info browsed length assertEquals maxBrowsePageSize browsed length Runtime getRuntime gc long free Runtime getRuntime freeMemory LOG info free for int i i i LOG info Runtime getRuntime freeMemory
ActiveMQXAConnection xaConnection ActiveMQXAConnection cf createConnection xaConnection start XASession session xaConnection createXASession XAResource resource session getXAResource Xid tid createXid resource start tid XAResource TMNOFLAGS MessageProducer producer session createProducer session createQueue this getClass getName Message message session createTextMessage producer send message resource end tid XAResource TMSUCCESS try LOG debug int ret resource prepare tid if XAResource XA_OK ret resource commit tid false catch XAException xae
xaConnection start XASession session xaConnection createXASession XAResource resource session getXAResource Xid tid createXid resource start tid XAResource TMNOFLAGS MessageProducer producer session createProducer session createQueue this getClass getName Message message session createTextMessage producer send message resource end tid XAResource TMSUCCESS try LOG debug int ret resource prepare tid if XAResource XA_OK ret resource commit tid false catch XAException xae LOG info xae getMessage
public void repeat throws Exception for int i i i
int receivedMessageCount ActiveMQConnectionFactory consumerFactory new ActiveMQConnectionFactory Connection consumerConnection consumerFactory createConnection try consumerConnection setClientID consumerConnection start Session consumerSession consumerConnection createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer messageConsumer consumerSession createConsumer QUEUE_NAME while true TextMessage textMsg TextMessage messageConsumer receive if textMsg null textMsg TextMessage messageConsumer receive if textMsg null return receivedMessageCount receivedMessageCount
ExportQueueConsumer consumer null LOG info publisherMessagesPerThread publisherThreadCount LOG info publisher new ExportQueuePublisher activemqURL activemqQueues publisherMessagesPerThread publisherThreadCount LOG info consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount long totalStart System currentTimeMillis LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs
LOG info publisherMessagesPerThread publisherThreadCount LOG info publisher new ExportQueuePublisher activemqURL activemqQueues publisherMessagesPerThread publisherThreadCount LOG info consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount long totalStart System currentTimeMillis LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs distinctPublishedCount new TreeSet publishedIds size
consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs distinctPublishedCount new TreeSet publishedIds size LOG info publishedIds size distinctPublishedCount LOG info TimeUnit MILLISECONDS toSeconds System currentTimeMillis totalStart long endWait System currentTimeMillis consumerWaitForConsumption while consumer completed System currentTimeMillis endWait try int secs int endWait System currentTimeMillis LOG info secs Thread sleep catch Exception e
consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs distinctPublishedCount new TreeSet publishedIds size LOG info publishedIds size distinctPublishedCount LOG info TimeUnit MILLISECONDS toSeconds System currentTimeMillis totalStart long endWait System currentTimeMillis consumerWaitForConsumption while consumer completed System currentTimeMillis endWait try int secs int endWait System currentTimeMillis LOG info secs Thread sleep catch Exception e
int secs int endWait System currentTimeMillis LOG info secs Thread sleep catch Exception e LOG info consumer completed LOG info TimeUnit MILLISECONDS toSeconds System currentTimeMillis totalStart consumer shutdown TimeUnit SECONDS sleep LOG info for Map Entry String List String entry consumer getIDs entrySet List String idList entry getValue int distinctConsumed new TreeSet String idList size StringBuilder sb new StringBuilder sb append entry getKey idList size distinctConsumed int diff distinctPublishedCount distinctConsumed
ExportQueueConsumer consumer null LOG info publisherMessagesPerThread publisherThreadCount LOG info publisher new ExportQueuePublisher activemqURL activemqQueues publisherMessagesPerThread publisherThreadCount LOG info consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs distinctPublishedCount new TreeSet publishedIds size
consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List publishedIds publisher getIDs distinctPublishedCount new TreeSet publishedIds size LOG info publishedIds size distinctPublishedCount long endWait System currentTimeMillis consumerWaitForConsumption while consumer completed System currentTimeMillis endWait try int secs int endWait System currentTimeMillis
try int secs int endWait System currentTimeMillis LOG info secs Thread sleep catch Exception e LOG info consumer completed consumer shutdown LOG info for Map Entry String List String entry consumer getIDs entrySet List String idList entry getValue int distinctConsumed new TreeSet String idList size StringBuilder sb new StringBuilder sb append entry getKey idList size distinctConsumed int diff distinctPublishedCount distinctConsumed sb append diff diff
ExportQueueConsumer consumer null LOG info publisherMessagesPerThread publisherThreadCount LOG info publisher new ExportQueuePublisher activemqURL activemqQueues publisherMessagesPerThread publisherThreadCount LOG info consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List String publishedIds publisher getIDs distinctPublishedCount new TreeSet String publishedIds size
consumer new ExportQueueConsumer activemqURL activemqQueues consumerThreadsPerQueue consumerBatchSize publisherMessagesPerThread publisherThreadCount LOG info publisher start LOG info consumer start int distinctPublishedCount LOG info publisher waitForCompletion List String publishedIds publisher getIDs distinctPublishedCount new TreeSet String publishedIds size LOG info publishedIds size distinctPublishedCount long endWait System currentTimeMillis consumerWaitForConsumption while consumer completed System currentTimeMillis endWait try int secs int endWait System currentTimeMillis
try int secs int endWait System currentTimeMillis LOG info secs Thread sleep catch Exception e LOG info consumer completed consumer shutdown LOG info for Map Entry String List String entry consumer getIDs entrySet List String idList entry getValue int distinctConsumed new TreeSet String idList size StringBuilder sb new StringBuilder sb append entry getKey idList size distinctConsumed int diff distinctPublishedCount distinctConsumed sb append diff diff
private void consumeAndRollback throws JMSException InterruptedException ActiveMQConnection connection createConnection RedeliveryPolicy noRedelivery new RedeliveryPolicy noRedelivery setMaximumRedeliveries connection setRedeliveryPolicy noRedelivery connection start Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer consumer session createConsumer dest Message m while m consumer receive null
public long getQueueSize throws Exception long queueSize try QueueViewMBean queueViewMBean QueueViewMBean brokerService getManagementContext newProxyInstance BrokerMBeanSupport createDestinationName brokerService getBrokerObjectName dest QueueViewMBean class false queueSize queueViewMBean getQueueSize
Test public void testManyTempDestinations throws Exception Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE for int i i DEST_COUNT i destination i session createTemporaryQueue
errorDetectorAppender new AppenderSkeleton Override public void close Override public boolean requiresLayout return false Override protected void append LoggingEvent event if event getLevel isGreaterOrEqual Level ERROR hasErrorInLogger set true org apache log4j Logger getRootLogger addAppender errorDetectorAppender producerThread new Thread new Runnable Override public void run try Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic destination session createTopic
return false Override protected void append LoggingEvent event if event getLevel isGreaterOrEqual Level ERROR hasErrorInLogger set true org apache log4j Logger getRootLogger addAppender errorDetectorAppender producerThread new Thread new Runnable Override public void run try Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic destination session createTopic LOG debug destination MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT
Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic destination session createTopic LOG debug destination MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT producer setTimeToLive LOG debug producer int i while Thread interrupted try TextMessage msg session createTextMessage i producer send msg try
LOG debug producer int i while Thread interrupted try TextMessage msg session createTextMessage i producer send msg try Thread sleep catch InterruptedException e Thread currentThread interrupt LOG debug i i catch JMSException e if e getCause null e getCause InterruptedIOException throw e
Test timeout public void testConsumerProperlyClosedWithoutError throws Exception Random rn new Random final int NUMBER_OF_RUNS for int run run NUMBER_OF_RUNS run final AtomicInteger numberOfMessagesReceived new AtomicInteger
Test timeout public void testConsumerProperlyClosedWithoutError throws Exception Random rn new Random final int NUMBER_OF_RUNS for int run run NUMBER_OF_RUNS run final AtomicInteger numberOfMessagesReceived new AtomicInteger LOG info run NUMBER_OF_RUNS Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session DUPS_OK_ACKNOWLEDGE Topic destination session createTopic
final int NUMBER_OF_RUNS for int run run NUMBER_OF_RUNS run final AtomicInteger numberOfMessagesReceived new AtomicInteger LOG info run NUMBER_OF_RUNS Connection connection createConnectionFactory createConnection connection start Session session connection createSession false Session DUPS_OK_ACKNOWLEDGE Topic destination session createTopic LOG debug destination MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message LOG debug numberOfMessagesReceived getAndIncrement
Override public void onMessage Message message LOG debug numberOfMessagesReceived getAndIncrement LOG debug consumer try Thread sleep rn nextInt catch InterruptedException e Thread currentThread interrupt LOG debug consumer close session close connection close assertFalse hasFailureInProducer get assertFalse hasErrorInLogger get
conn start connections add conn catch Exception e exceptions add e JmsUtils closeConnection conn assertEquals connector getConnections size startupLatch countDown final TransportConnector connector this connector assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return exceptions isEmpty assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
JmsUtils closeConnection conn assertEquals connector getConnections size startupLatch countDown final TransportConnector connector this connector assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return exceptions isEmpty assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info exceptions size connector getConnections size return exceptions size maxConnections connector getConnections size assertTrue maxConnections Wait waitFor new Wait Condition
message setPersistent true message setTransactionId txid connection send message connection send createPrepareTransaction connectionInfo txid message createMessage producerInfo destination message setPersistent true connection send message StubConnection connectionC createConnection ConnectionInfo connectionInfoC createConnectionInfo SessionInfo sessionInfoC createSessionInfo connectionInfoC ConsumerInfo consumerInfo createConsumerInfo sessionInfoC destination connectionC send connectionInfoC connectionC send sessionInfoC connectionC send consumerInfo Message m receiveMessage connectionC TimeUnit SECONDS toMillis
ConnectionInfo connectionInfoC createConnectionInfo SessionInfo sessionInfoC createSessionInfo connectionInfoC ConsumerInfo consumerInfo createConsumerInfo sessionInfoC destination connectionC send connectionInfoC connectionC send sessionInfoC connectionC send consumerInfo Message m receiveMessage connectionC TimeUnit SECONDS toMillis LOG info m assertNotNull m assertNull m getTransactionId assertNull receiveMessage connectionC assertNoMessagesLeft connectionC LOG info txid connection request createCommitTransaction2Phase connectionInfo txid m receiveMessage connectionC TimeUnit SECONDS toMillis
message createMessage producerInfo destination message setPersistent true TextMessage message setText payload connection request message assertTrue proxy isCacheEnabled StubConnection connectionC createConnection ConnectionInfo connectionInfoC createConnectionInfo SessionInfo sessionInfoC createSessionInfo connectionInfoC ConsumerInfo consumerInfo createConsumerInfo sessionInfoC destination connectionC send connectionInfoC connectionC send sessionInfoC connectionC send consumerInfo Message m null for int i i i m receiveMessage connectionC TimeUnit SECONDS toMillis
SessionInfo sessionInfoC createSessionInfo connectionInfoC ConsumerInfo consumerInfo createConsumerInfo sessionInfoC destination connectionC send connectionInfoC connectionC send sessionInfoC connectionC send consumerInfo Message m null for int i i i m receiveMessage connectionC TimeUnit SECONDS toMillis LOG info m assertNotNull m assertNull m getTransactionId connectionC request createAck consumerInfo m MessageAck STANDARD_ACK_TYPE LOG info txid connection request createCommitTransaction2Phase connectionInfo txid for int i i i
final Session session connection createSession false Session CLIENT_ACKNOWLEDGE final Queue queue session createQueue name getMethodName MessageProducer producer session createProducer queue producer setDeliveryMode DeliveryMode NON_PERSISTENT final QueueViewMBean queueView getProxyToQueue name getMethodName byte payload new byte Arrays fill payload byte final CountDownLatch done new CountDownLatch final AtomicInteger counter new AtomicInteger Thread purge new Thread new Runnable Override public void run try while done await TimeUnit SECONDS if queueView getBlockedSends queueView getQueueSize long queueSize queueView getQueueSize
for int i i queueSize i Message message consumer receive if message null counter incrementAndGet message acknowledge else LOG warn consumer close catch Exception ex purge start for int i i MSG_COUNT i BytesMessage message session createBytesMessage message writeBytes payload producer send message
purge start for int i i MSG_COUNT i BytesMessage message session createBytesMessage message writeBytes payload producer send message LOG info i done countDown purge join if purge isAlive fail assertTrue Wait waitFor new Condition Override public boolean isSatisified throws Exception return queueView getDequeueCount counter get
Test public void testReadCounter throws Exception LOG info connectionUri byte payload new byte ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri final ActiveMQConnection connection ActiveMQConnection factory createConnection connection start
Test public void test throws Exception ActiveMQQueue compositeSendTo new ActiveMQQueue ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory brokerUrl connectionFactory setWatchTopicAdvisories false Connection connection connectionFactory createConnection connection start try Session session connection createSession false Session AUTO_ACKNOWLEDGE session createProducer compositeSendTo send session createTextMessage for ActiveMQDestination dest compositeSendTo getCompositeDestinations Message message session createConsumer dest receive
Test timeout public void tesIndividualAcksWithClosedConsumerAndAuditAsync throws Exception produceSomeMessages MSG_COUNT QueueViewMBean queueView getProxyToQueue getDestinationName assertEquals MSG_COUNT queueView getQueueSize connection createConnection Session session connection createSession false ActiveMQSession INDIVIDUAL_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue connection start done new CountDownLatch MSG_COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message
MessageConsumer consumer session createConsumer queue connection start done new CountDownLatch MSG_COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message LOG debug message done countDown done await TimeUnit SECONDS consumer close assertEquals MSG_COUNT queueView getQueueSize consumer session createConsumer queue done new CountDownLatch MSG_COUNT consumer setMessageListener new MessageListener Override public void onMessage Message message
Test timeout public void tesIndividualAcksWithClosedConsumerAndAuditSync throws Exception produceSomeMessages MSG_COUNT QueueViewMBean queueView getProxyToQueue getDestinationName assertEquals MSG_COUNT queueView getQueueSize connection createConnection Session session connection createSession false ActiveMQSession INDIVIDUAL_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue connection start for int i i MSG_COUNT i Message message consumer receive assertNotNull message
connection createConnection Session session connection createSession false ActiveMQSession INDIVIDUAL_ACKNOWLEDGE Queue queue session createQueue getDestinationName MessageConsumer consumer session createConsumer queue connection start for int i i MSG_COUNT i Message message consumer receive assertNotNull message LOG debug message consumer close assertEquals MSG_COUNT queueView getQueueSize consumer session createConsumer queue for int i i MSG_COUNT i Message message consumer receive assertNotNull message
Test public void testVoidSupport throws Exception sendMessage connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue name getMethodName MessageConsumer consumer session createConsumer destination ActiveMQObjectMessage msg ActiveMQObjectMessage consumer receive AMQ5921MessagePayload payload AMQ5921MessagePayload msg getObject
MessageProducer producer session createProducer queue session createProducer dlq for int i i MSG_COUNT i producer send session createMessage DeliveryMode PERSISTENT Message DEFAULT_PRIORITY final QueueViewMBean queueView getProxyToQueue dlq getQueueName assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queueView getQueueSize MSG_COUNT LOG info Deque String browsed new LinkedList String CompositeData elements queueView browse assertEquals MSG_COUNT elements length for CompositeData element elements String messageID String element get
LOG info Deque String browsed new LinkedList String CompositeData elements queueView browse assertEquals MSG_COUNT elements length for CompositeData element elements String messageID String element get LOG debug messageID browsed add messageID String removedMsgId browsed removeFirst assertTrue queueView removeMessage removedMsgId assertEquals MSG_COUNT queueView getQueueSize elements queueView browse assertEquals MSG_COUNT elements length for CompositeData element elements
Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT TextMessage txtMessage session createTextMessage txtMessage setText for int i i MSG_COUNT i producer send txtMessage DeliveryMode PERSISTENT 1000l final QueueViewMBean view getProxyToQueue LOG info assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return view getQueueSize LOG info
Test public void testPersistJMSRedeliveredMessageLossOnIndexRebuild throws Exception sendMessages LOG info long msgCount getProxyToQueue QUEUE_NAME getQueueSize final int ITERATIONS for int i i ITERATIONS i
Runnable r new Runnable public void run int count try LOG info Session session cx createSession true Session SESSION_TRANSACTED MessageProducer producer session createProducer queue BytesMessage message session createBytesMessage message writeBytes new byte for count count producer send message LOG info catch JMSException e if e getCause RequestTimedOutIOException exceptionCount incrementAndGet
Test timeout public void testSlowConsumerAdvisory throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic topic session createTopic topicFilter MessageConsumer consumer session createDurableSubscriber topic testName getMethodName assertNotNull consumer Topic advisoryTopic AdvisorySupport getSlowConsumerAdvisoryTopic ActiveMQDestination createDestination topicA ActiveMQDestination TOPIC_TYPE session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer advisoryConsumer session createConsumer advisoryTopic MessageProducer producer session createProducer null producer send session createTopic topicA session createMessage for int i i MESSAGE_COUNT i BytesMessage m session createBytesMessage m writeBytes new byte Topic newTopic session createTopic topicPrefix UUID randomUUID toString
private void sendTestMessages int numMessages throws JMSException Session session connection createSession true Session SESSION_TRANSACTED MessageProducer producer session createProducer queue final TextMessage textMessage session createTextMessage textMessage setText for int i i numMessages i producer send textMessage if i
Test public void testTransactedStoreUsageSuspendResume throws Exception org apache log4j Logger log4jLogger org apache log4j Logger getLogger MessageDatabase class final AtomicBoolean failed new AtomicBoolean false final File journalDataDir KahaDBPersistenceAdapter broker getPersistenceAdapter getStore getJournal getDirectory Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level WARN event getMessage toString startsWith
Test public void testTempPercentUsageDecreases throws Exception MessageConsumer messageConsumer createConsumer sendMessages MESSAGES_TO_SEND final BrokerViewMBean brokerView getBrokerView broker
Test public void testTempPercentUsageDecreases throws Exception MessageConsumer messageConsumer createConsumer sendMessages MESSAGES_TO_SEND final BrokerViewMBean brokerView getBrokerView broker LOG info brokerView getTempPercentUsage Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test public void testTempPercentUsageDecreases throws Exception MessageConsumer messageConsumer createConsumer sendMessages MESSAGES_TO_SEND final BrokerViewMBean brokerView getBrokerView broker LOG info brokerView getTempPercentUsage Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info brokerView getTempPercentUsage return brokerView getTempPercentUsage final int tempPercentUsageWithConsumer brokerView getTempPercentUsage assertTrue tempPercentUsageWithConsumer messageConsumer close Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
ConnectionFactory connectionFactory new ActiveMQConnectionFactory TRANSPORT_URL Connection connection ActiveMQConnection connectionFactory createConnection connection start final String blob new String new byte try Session producerSession connection createSession true Session SESSION_TRANSACTED MessageProducer jmsProducer producerSession createProducer producerSession createTopic DESTINATION Message sendMessage producerSession createTextMessage blob for int i i messageCount i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex
Connection connection ActiveMQConnection connectionFactory createConnection connection start final String blob new String new byte try Session producerSession connection createSession true Session SESSION_TRANSACTED MessageProducer jmsProducer producerSession createProducer producerSession createTopic DESTINATION Message sendMessage producerSession createTextMessage blob for int i i messageCount i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex LOG info ex
protected ConsumerObject getConsumer int id throws Exception RedeliveryPolicy redeliveryPolicy new RedeliveryPolicy redeliveryPolicy setInitialRedeliveryDelay redeliveryPolicy setMaximumRedeliveries ActiveMQConnection consumerConnection ActiveMQConnection createConnection consumerConnection setRedeliveryPolicy redeliveryPolicy consumerConnection start Session consumerSession consumerConnection createSession true Session SESSION_TRANSACTED MessageConsumer consumer consumerSession createConsumer consumerSession createQueue id
Test public void TestDuplicateJobIDs throws Exception ConsumerObject consumer1 getConsumer ConsumerObject consumer2 getConsumer ActiveMQConnection producerConnection ActiveMQConnection createConnection producerConnection start Session session producerConnection createSession false Session CLIENT_ACKNOWLEDGE Destination dest session createTopic MessageProducer producer session createProducer dest TextMessage msg session createTextMessage producer setDeliveryMode DeliveryMode NON_PERSISTENT producer send msg Message message1 consumer1 getConsumer receive assertNotNull message1
ConsumerObject consumer1 getConsumer ConsumerObject consumer2 getConsumer ActiveMQConnection producerConnection ActiveMQConnection createConnection producerConnection start Session session producerConnection createSession false Session CLIENT_ACKNOWLEDGE Destination dest session createTopic MessageProducer producer session createProducer dest TextMessage msg session createTextMessage producer setDeliveryMode DeliveryMode NON_PERSISTENT producer send msg Message message1 consumer1 getConsumer receive assertNotNull message1 LOG info message1 Message message2 consumer2 getConsumer receive assertNotNull message2
Destination destination session createQueue MessageConsumer advisoryConsumer session createConsumer AdvisorySupport getSlowConsumerAdvisoryTopic destination MessageConsumer consumer session createConsumer destination Message message advisoryConsumer receive if message null message advisoryConsumer receive assertNotNull message connection close QueueViewMBean queue getProxyToQueue Queue destination getQueueName ObjectName slowConsumerPolicyMBeanName queue getSlowConsumerStrategy assertNotNull slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean abortPolicy AbortSlowConsumerStrategyViewMBean brokerService getManagementContext newProxyInstance slowConsumerPolicyMBeanName AbortSlowConsumerStrategyViewMBean class true assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception TabularData slowOnes abortPolicy getSlowConsumers
private void logfiles File files LOG info for File file files
while acked numMessages Connection consumerConnection factory createConnection ActiveMQConnection consumerConnection setWatchTopicAdvisories false consumerConnection setClientID consumerName Session consumerSession consumerConnection createSession false Session CLIENT_ACKNOWLEDGE Topic topic consumerSession createTopic topicName consumerConnection start MessageConsumer consumer consumerSession createDurableSubscriber topic consumerName counsumerStarted countDown Message msg null do msg consumer receive if msg null receivedCount incrementAndGet if received received
assertTrue received acked catch Exception e e printStackTrace exceptions add e ExecutorService executor Executors newFixedThreadPool numConsumers for int i i numConsumers i executor execute consumer assertTrue counsumerStarted await TimeUnit SECONDS Connection producerConnection factory createConnection ActiveMQConnection producerConnection setWatchTopicAdvisories false Session producerSession producerConnection createSession false Session AUTO_ACKNOWLEDGE Topic topic producerSession createTopic topicName MessageProducer producer producerSession createProducer topic producerConnection start
consumerConnection start consumerConnection close broker stop broker createBroker false if forceRecover configurePersistence broker broker start Connection producerConnection factory createConnection Session producerSession producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer producerSession createProducer topic producerConnection start for int i i COUNT i BytesMessage msg producerSession createBytesMessage msg writeBytes payload producer send msg
if i i LOG info i producerConnection close broker stop broker createBroker false if forceRecover configurePersistence broker broker start consumerConnection factory createConnection consumerConnection setClientID CONSUMER_NAME consumerConnection start consumerSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE consumer consumerSession createDurableSubscriber topic CONSUMER_NAME for int i i COUNT i Message msg consumer receive
public void testBrowsePriorityMessages throws Exception for int i i i produceMessages Thread sleep produceMessages ArrayList Integer browseList browseQueue produceMessages browseList browseQueue ArrayList Integer consumeList consumeMessages if browseList equals consumeList
public void testBrowsePriorityMessages throws Exception for int i i i produceMessages Thread sleep produceMessages ArrayList Integer browseList browseQueue produceMessages browseList browseQueue ArrayList Integer consumeList consumeMessages if browseList equals consumeList LOG info browseList size
public void testBrowsePriorityMessages throws Exception for int i i i produceMessages Thread sleep produceMessages ArrayList Integer browseList browseQueue produceMessages browseList browseQueue ArrayList Integer consumeList consumeMessages if browseList equals consumeList LOG info browseList size LOG info consumeList size
public void testBrowsePriorityMessages throws Exception for int i i i produceMessages Thread sleep produceMessages ArrayList Integer browseList browseQueue produceMessages browseList browseQueue ArrayList Integer consumeList consumeMessages if browseList equals consumeList LOG info browseList size LOG info consumeList size LOG info browseList
connection2 createConnection connection2 start session2 connection2 createSession false Session AUTO_ACKNOWLEDGE producer2 session2 createProducer null producer2 setDeliveryMode deliveryMode Thread sleep for int i i NMSG i BytesMessage message session2 createBytesMessage message writeBytes new byte MSIZE message setStringProperty message setIntProperty COUNT_PROPERY_NAME count message setJMSType producer2 send consumerDestination2 message Thread sleep if verbose
start connection3 createConnection connection3 setClientID connection3 start consumeSession3 connection3 createSession false Session CLIENT_ACKNOWLEDGE consumer3 consumeSession3 createDurableSubscriber Topic consumerDestination2 getName connection3 close int count for int loop loop loop connection3 createConnection connection3 setClientID connection3 start consumeSession3 connection3 createSession false Session CLIENT_ACKNOWLEDGE consumer3 consumeSession3 createDurableSubscriber Topic consumerDestination2 getName Message msg null
producer send s createTextMessage s commit assertNotNull broker getDestination new ActiveMQQueue DESTINATION_NAME assertNotNull broker getDestination new ActiveMQQueue DESTINATION_NAME_2 ObjectName objectName new ObjectName BrokerViewMBean brokerViewMBean BrokerViewMBean broker getManagementContext newProxyInstance objectName BrokerViewMBean class true String pathToDataDir brokerViewMBean getDataDirectory broker stop corruptTxStoreJournalAndTruncate pathToDataDir org apache log4j Logger log4jLogger org apache log4j Logger getLogger MultiKahaDBTransactionStore class AtomicBoolean foundSomeCorruption new AtomicBoolean AtomicBoolean ignoringCorruption new AtomicBoolean Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level ERROR event getMessage toString startsWith
private void corruptTxStore String pathToDataDir boolean truncate throws Exception
private void corruptTxStore String pathToDataDir boolean truncate throws Exception LOG info pathToDataDir RandomAccessFile randomAccessFile new RandomAccessFile String format pathToDataDir final ByteSequence header new ByteSequence Journal BATCH_CONTROL_RECORD_HEADER byte data new byte ByteSequence bs new ByteSequence data randomAccessFile read data data length int offset bs indexOf header offset bs indexOf header offset offset bs indexOf header offset
private void corruptTxStore String pathToDataDir boolean truncate throws Exception LOG info pathToDataDir RandomAccessFile randomAccessFile new RandomAccessFile String format pathToDataDir final ByteSequence header new ByteSequence Journal BATCH_CONTROL_RECORD_HEADER byte data new byte ByteSequence bs new ByteSequence data randomAccessFile read data data length int offset bs indexOf header offset bs indexOf header offset offset bs indexOf header offset LOG info offset offset Journal BATCH_CONTROL_RECORD_SIZE offset offset byte fill byte 0xAF
factory setPrefetchPolicy prefetch Connection consumerConnection factory createConnection consumerConnection start Session consumerSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer consumerSession createConsumer bigDestination final Connection producerConnection factory createConnection producerConnection start final int fillWithBigCount Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer null producer setDeliveryMode deliveryMode for int idx idx fillWithBigCount idx Message message session createTextMessage new String bigBuf idx producer send bigDestination message messagesSent incrementAndGet
Message message session createTextMessage new String bigBuf idx producer send bigDestination message messagesSent incrementAndGet LOG info idx broker getSystemUsage getMemoryUsage getPercentUsage final int toSend Thread producingThread new Thread Override public void run try Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode deliveryMode for int idx idx toSend idx Message message session createTextMessage new String buf idx producer send destination message messagesSent incrementAndGet
messagesSent incrementAndGet LOG info idx broker getSystemUsage getMemoryUsage getPercentUsage catch Throwable ex ex printStackTrace producingThread start Thread producingThreadTwo new Thread Override public void run try Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode deliveryMode for int idx idx toSend idx Message message session createTextMessage new String buf idx producer send destination message
producingThread start Thread producingThreadTwo new Thread Override public void run try Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode deliveryMode for int idx idx toSend idx Message message session createTextMessage new String buf idx producer send destination message messagesSent incrementAndGet LOG info idx broker getSystemUsage getMemoryUsage getPercentUsage catch Throwable ex ex printStackTrace
catch Throwable ex ex printStackTrace producingThreadTwo start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info broker getSystemUsage getMemoryUsage getPercentUsage messagesSent return messagesSent get LOG info int count Message m null for count count assertTrue m consumer receive messageReceiveTimeout null LOG info count m broker getSystemUsage getMemoryUsage getPercentUsage
Override public void uncaughtException Thread t Throwable e
public void testMemoryUsage throws Exception Connection conn createJmsConnection Session session conn createSession true Session AUTO_ACKNOWLEDGE Queue queue session createQueue MessageProducer producer session createProducer queue for int i i i BytesMessage bm session createBytesMessage bm writeBytes new byte producer send bm if i session commit int memoryUsagePercent broker getSystemUsage getMemoryUsage getPercentUsage
Test public void testIt throws Exception final int startPercentage broker getAdminView getMemoryPercentUsage
Test public void testIt throws Exception final int startPercentage broker getAdminView getMemoryPercentUsage LOG info startPercentage for int i i i
Receiver xenaReceiver new Receiver Override public void receive String s throws Exception xenaToHaloCtr hectorSender send payload if xenaToHaloCtr counter synchronized lock lock notifyAll possiblySleep xenaToHaloCtr Receiver troyReceiver new Receiver Override public void receive String s throws Exception troyToHaloCtr xenaSender send payload if troyToHaloCtr counter synchronized lock
xenaToHaloCtr hectorSender send payload if xenaToHaloCtr counter synchronized lock lock notifyAll possiblySleep xenaToHaloCtr Receiver troyReceiver new Receiver Override public void receive String s throws Exception troyToHaloCtr xenaSender send payload if troyToHaloCtr counter synchronized lock lock notifyAll
for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID consumer setMessageListener listener sleep connection start assertTrue listener getCounter Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return listener getCounter
producer setDeliveryMode DeliveryMode NON_PERSISTENT String text Thread currentThread getName this hashCode TextMessage message for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID sleep int counter for counter counter assertNotNull consumer receive
message session createTextMessage text producer send message LOG trace message getJMSMessageID for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID for int i i i message session createTextMessage text producer send message LOG trace message getJMSMessageID sleep int counter for counter counter assertNotNull consumer receive
public void testOrder throws Exception log info Destination destination session createQueue DESTINATION final MessageProducer messageProducer session createProducer destination try for int i i i final Message message session createTextMessage createMessageText i message setStringProperty messageProducer send message
protected void consumeBatch throws Exception Destination destination session createQueue DESTINATION final MessageConsumer messageConsumer session createConsumer destination try for int i i i final Message message messageConsumer receive 1000L
Test public void testTransactedSendWithTimeoutRollbackUsage throws Exception BrokerService broker createBroker broker waitUntilStarted CountDownLatch gotTimeoutException new CountDownLatch try int sendTimeout int numberOfMessageSent sendMessages broker gotTimeoutException sendTimeout assertTrue gotTimeoutException await sendTimeout TimeUnit MILLISECONDS consumeMessages broker numberOfMessageSent QueueView queueView getQueueView broker DESTINATION long queueSize queueView getQueueSize long memoryUsage queueView getCursorMemoryUsage
Test public void testTransactedSendWithTimeoutRollbackUsage throws Exception BrokerService broker createBroker broker waitUntilStarted CountDownLatch gotTimeoutException new CountDownLatch try int sendTimeout int numberOfMessageSent sendMessages broker gotTimeoutException sendTimeout assertTrue gotTimeoutException await sendTimeout TimeUnit MILLISECONDS consumeMessages broker numberOfMessageSent QueueView queueView getQueueView broker DESTINATION long queueSize queueView getQueueSize long memoryUsage queueView getCursorMemoryUsage LOG info queueSize
ActiveMQConnectionFactory connectionFactory newConnectionFactory broker connectionFactory setSendTimeout sendTimeeOut Connection connection ActiveMQConnection connectionFactory createConnection connection start Session producerSession connection createSession true Session SESSION_TRANSACTED try MessageProducer jmsProducer producerSession createProducer producerSession createQueue DESTINATION Message sendMessage producerSession createTextMessage createTextMessage for int i i messageCount i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex
connectionFactory setSendTimeout sendTimeeOut Connection connection ActiveMQConnection connectionFactory createConnection connection start Session producerSession connection createSession true Session SESSION_TRANSACTED try MessageProducer jmsProducer producerSession createProducer producerSession createQueue DESTINATION Message sendMessage producerSession createTextMessage createTextMessage for int i i messageCount i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex LOG info ex
private int consumeMessages BrokerService broker int messageCount throws Exception int numberOfMessageConsumed ActiveMQConnectionFactory connectionFactory newConnectionFactory broker Connection connection ActiveMQConnection connectionFactory createConnection connection start Session consumerSession connection createSession false Session AUTO_ACKNOWLEDGE try MessageConsumer jmsConsumer consumerSession createConsumer consumerSession createQueue DESTINATION for int i i messageCount i jmsConsumer receive numberOfMessageConsumed LOG info numberOfMessageConsumed return numberOfMessageConsumed catch Exception ex LOG info ex
public void onMessage javax jms Message message long acks acksReceived incrementAndGet latch get countDown if acks
Connection connection factory createConnection connection start try Session session connection createSession true Session SESSION_TRANSACTED Destination destinationQ1 session createQueue TEST_QUEUE_ONE Destination destinationQ2 session createQueue TEST_QUEUE_TWO MessageProducer producerQ1 session createProducer destinationQ1 producerQ1 setDeliveryMode DeliveryMode PERSISTENT Message m session createTextMessage LOG info producerQ1 send m session commit MessageConsumer consumerQ1 session createConsumer destinationQ1 LOG info TextMessage textMessage TextMessage consumerQ1 receive
Destination destinationQ2 session createQueue TEST_QUEUE_TWO MessageProducer producerQ1 session createProducer destinationQ1 producerQ1 setDeliveryMode DeliveryMode PERSISTENT Message m session createTextMessage LOG info producerQ1 send m session commit MessageConsumer consumerQ1 session createConsumer destinationQ1 LOG info TextMessage textMessage TextMessage consumerQ1 receive LOG info textMessage assertFalse textMessage getJMSRedelivered session rollback LOG info TextMessage textMessage2 TextMessage consumerQ1 receive
broker setUseJmx true broker setDeleteAllMessagesOnStartup true broker addConnector setName broker start ActiveMQConnectionFactory factory new ActiveMQConnectionFactory broker getTransportConnectors get getPublishableConnectString final Connection connection factory createConnection connection start Thread producingThread new Thread public void run try Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer new ActiveMQQueue getDestinationName for int idx idx MESSAGES_COUNT idx Message message session createTextMessage idx producer send message
producingThread setPriority Thread MAX_PRIORITY producingThread start Thread sleep Thread consumingThread new Thread public void run try Session session connection createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer session createConsumer new ActiveMQQueue getDestinationName int diff while messagesCount MESSAGES_COUNT Message msg consumer receive messageReceiveTimeout if msg null LOG warn messagesCount break
producingThread setPriority Thread MAX_PRIORITY producingThread start Thread sleep Thread consumingThread new Thread public void run try Session session connection createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer session createConsumer new ActiveMQQueue getDestinationName int diff while messagesCount MESSAGES_COUNT Message msg consumer receive messageReceiveTimeout if msg null LOG warn messagesCount break
Thread consumingThread new Thread public void run try Session session connection createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer session createConsumer new ActiveMQQueue getDestinationName int diff while messagesCount MESSAGES_COUNT Message msg consumer receive messageReceiveTimeout if msg null LOG warn messagesCount break String text TextMessage msg getText int currentMsgIdx Integer parseInt text LOG debug text messagesCount msg acknowledge
producerConnection start final CountDownLatch producerHasSentTenMessages new CountDownLatch Thread producingThread new Thread Override public void run try Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode deliveryMode for int idx idx MESSAGES_COUNT idx Message message session createTextMessage new String buf idx producer send message messagesSent incrementAndGet producerHasSentTenMessages countDown Thread sleep if idx idx
if idx idx LOG info idx LOG info broker getSystemUsage getTempUsage getUsage producer close session close catch Throwable ex ex printStackTrace producingThread start assertTrue producerHasSentTenMessages await TimeUnit SECONDS int count Message m null while m consumer receive messageReceiveTimeout null count if count count
catch Throwable ex ex printStackTrace producingThread start assertTrue producerHasSentTenMessages await TimeUnit SECONDS int count Message m null while m consumer receive messageReceiveTimeout null count if count count LOG info count m messagesConsumed incrementAndGet try Thread sleep catch Exception e
producingThread start assertTrue producerHasSentTenMessages await TimeUnit SECONDS int count Message m null while m consumer receive messageReceiveTimeout null count if count count LOG info count m messagesConsumed incrementAndGet try Thread sleep catch Exception e LOG info LOG info count
Message m null while m consumer receive messageReceiveTimeout null count if count count LOG info count m messagesConsumed incrementAndGet try Thread sleep catch Exception e LOG info LOG info count while m consumer receive messageReceiveTimeout null count if count count LOG info count m
broker getSystemUsage setSendFailIfNoSpace true destination new ActiveMQQueue ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri final ActiveMQConnection producerConnection ActiveMQConnection factory createConnection producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get
final ActiveMQConnection producerConnection ActiveMQConnection factory createConnection producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get LOG info messagesSent get LOG info broker getSystemUsage getTempUsage getUsage catch ResourceAllocationException ex
Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get LOG info messagesSent get LOG info broker getSystemUsage getTempUsage getUsage catch ResourceAllocationException ex LOG info ex messagesSent get Connection consumerConnection factory createConnection consumerConnection start Session consumerSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer consumerSession createConsumer destination while consumer receive messageReceiveTimeout null messagesConsumed incrementAndGet if messagesConsumed get
broker getSystemUsage setSendFailIfNoSpace true destination new ActiveMQQueue ActiveMQConnectionFactory factory new ActiveMQConnectionFactory brokerUri final ActiveMQConnection producerConnection ActiveMQConnection factory createConnection producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get
producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get LOG info messagesSent get LOG info broker getSystemUsage getTempUsage getUsage catch ResourceAllocationException ex assertTrue messagesSent get
broker getSystemUsage setSendFailIfNoSpace true destination new ActiveMQQueue ActiveMQConnectionFactory factory new ActiveMQConnectionFactory brokerUri final ActiveMQConnection producerConnection ActiveMQConnection factory createConnection producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get
producerConnection setAlwaysSyncSend true producerConnection start Session session producerConnection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode NON_PERSISTENT try while true Message message session createTextMessage new String buf messagesSent toString producer send message messagesSent incrementAndGet if messagesSent get LOG info messagesSent get LOG info broker getSystemUsage getTempUsage getUsage catch ResourceAllocationException ex assertTrue messagesSent get messagesSent get
producer send message messagesSent incrementAndGet if messagesSent get LOG info messagesSent get LOG info broker getSystemUsage getTempUsage getUsage catch ResourceAllocationException ex assertTrue messagesSent get messagesSent get LOG info ex messagesSent get Connection consumerConnection factory createConnection consumerConnection start Session consumerSession consumerConnection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer consumerSession createConsumer destination while consumer receive messageReceiveTimeout null messagesConsumed incrementAndGet if messagesConsumed get
Test public void testIt throws Exception int startPercentage broker getAdminView getMemoryPercentUsage
Test public void testIt throws Exception int startPercentage broker getAdminView getMemoryPercentUsage LOG info startPercentage for int i i i
ExecutorService sendExecutor Executors newSingleThreadExecutor sendExecutor execute new Runnable Override public void run try sendMessages catch Exception ignored sendExecutor shutdown sendExecutor awaitTermination TimeUnit MINUTES boolean allMessagesReceived messagesReceivedCountDown await TimeUnit MINUTES if allMessagesReceived LOG info LOG info broker getSystemUsage getMemoryUsage LOG info broker getSystemUsage getStoreUsage LOG info messagesSentCountDown getCount
for int i i i producer send shortRetainQueue message session commit MessageConsumer consumer session createConsumer shortRetainQueue for int i i i consumer receive session commit LOG info broker getSystemUsage getMemoryUsage LOG info broker getSystemUsage getStoreUsage consumerStartLatch countDown for int i i MAX_MESSAGES i producer send queue message if i i session commit messagesSentCountDown countDown
Receiver xenaReceiver new Receiver public void receive String s throws Exception xenaToHaloCtr hectorSender send if xenaToHaloCtr counter synchronized lock lock notifyAll Receiver troyReceiver new Receiver public void receive String s throws Exception troyToHaloCtr xenaSender send if troyToHaloCtr counter synchronized lock
public void receive String s throws Exception xenaToHaloCtr hectorSender send if xenaToHaloCtr counter synchronized lock lock notifyAll Receiver troyReceiver new Receiver public void receive String s throws Exception troyToHaloCtr xenaSender send if troyToHaloCtr counter synchronized lock lock notifyAll
public void testDBCommitException throws Exception org apache log4j Logger serviceLogger org apache log4j Logger getLogger TransportConnection class getName serviceLogger setLevel Level TRACE broker this createBroker false broker deleteAllMessages broker start broker waitUntilStarted try LOG info String failoverTransportURL transportUrl sendMessage MY_TEST_Q failoverTransportURL ArrayList Long dbSeq dbMessageCount checkOnStoreConnection
org apache log4j Logger serviceLogger org apache log4j Logger getLogger TransportConnection class getName serviceLogger setLevel Level TRACE broker this createBroker false broker deleteAllMessages broker start broker waitUntilStarted try LOG info String failoverTransportURL transportUrl sendMessage MY_TEST_Q failoverTransportURL ArrayList Long dbSeq dbMessageCount checkOnStoreConnection LOG info dbSeq List TextMessage consumedMessages consumeMessages MY_TEST_Q failoverTransportURL assertEquals consumedMessages size dbSeq dbMessageCount checkOnStoreConnection
public List TextMessage consumeMessages String queue String transportURL throws JMSException Connection connection null LOG debug try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory transportURL connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue queue ArrayList TextMessage consumedMessages new ArrayList TextMessage MessageConsumer messageConsumer session createConsumer destination while true TextMessage textMessage TextMessage messageConsumer receive
Connection connection null try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory transportURL connection factory createConnection Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue queue MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT TextMessage m session createTextMessage LOG debug producer send m LOG debug m setText producer send m ArrayList Long dbSeq dbMessageCount checkOnStoreConnection
public void testPrematureClosure throws Exception ActiveMQConnection persistentConn ActiveMQConnection createConnection persistentConn start Session session persistentConn createSession true Session SESSION_TRANSACTED MessageProducer producer session createProducer destination for int i i NUM_ATTEMPTS i
public static void main String args BufferedReader br new BufferedReader new InputStreamReader System in BrokerService brokerService null Connection connection null logger info try brokerService new BrokerService brokerService setBrokerName brokerService setUseJmx true
for int i i i Message msg session createTextMessage i producer send msg logger info ThreadExplorer show System out println String key br readLine catch Exception e e printStackTrace finally try br close logger info brokerService getBrokerName connection close brokerService stop sleep
catch Exception e e printStackTrace finally try br close logger info brokerService getBrokerName connection close brokerService stop sleep logger info ThreadExplorer show catch Exception e e printStackTrace logger info int numTh ThreadExplorer active while numTh
private static void sleep int second try
SuppressWarnings public static int kill String threadName boolean isStarredExp String motivation String me if logger isDebugEnabled
msg1 setJMSPriority this jmsPriority msg1 setJMSTimestamp this jmsTimestamp msg1 setReadOnlyProperties true ActiveMQMessage msg2 new ActiveMQMessage msg1 copy msg2 assertEquals msg1 getJMSMessageID msg2 getJMSMessageID assertTrue msg1 getJMSCorrelationID equals msg2 getJMSCorrelationID assertTrue msg1 getJMSDestination equals msg2 getJMSDestination assertTrue msg1 getJMSReplyTo equals msg2 getJMSReplyTo assertTrue msg1 getJMSDeliveryMode msg2 getJMSDeliveryMode assertTrue msg1 getJMSRedelivered msg2 getJMSRedelivered assertTrue msg1 getJMSType equals msg2 getJMSType assertTrue msg1 getJMSExpiration msg2 getJMSExpiration assertTrue msg1 getJMSPriority msg2 getJMSPriority assertTrue msg1 getJMSTimestamp msg2 getJMSTimestamp
ActiveMQMessage message new ActiveMQMessage message setProducerId new ProducerId new SessionId new ConnectionId new ConnectionId message setMessageId new MessageId message getProducerId message setCommandId short message setGroupID message setGroupSequence message setCorrelationId message setContent new ByteSequence new byte message setTimestamp System currentTimeMillis message setDestination new ActiveMQQueue int p long start System currentTimeMillis for int i i p i marshalAndUnmarshall message wireFormat long end System currentTimeMillis
public void testPropertiesFile throws Exception BrokerService broker BrokerFactory createBroker
public void testVmBrokerPropertiesFile throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory Connection connection factory createConnection BrokerService broker BrokerRegistry getInstance lookup
SuppressWarnings public void purgeAllMessages throws IOException Exception List ObjectInstance queueList JmxMBeansUtil queryMBeans createJmxConnection for ObjectInstance oi queueList ObjectName queueName oi getObjectName
public void validateCounts int expectedWithCount int expectedWithoutCount int expectedAllCount throws JMSException QueueBrowser withPropertyBrowser requestServerSession createBrowser theQueue MSG_SEL_WITH_PROPERTY QueueBrowser withoutPropertyBrowser requestServerSession createBrowser theQueue MSG_SEL_WITHOUT_PROPERTY QueueBrowser allBrowser requestServerSession createBrowser theQueue int withCount getMessageCount withPropertyBrowser int withoutCount getMessageCount withoutPropertyBrowser int allCount getMessageCount allBrowser withPropertyBrowser close withoutPropertyBrowser close allBrowser close assertEquals expectedWithCount withCount expectedWithCount withCount assertEquals expectedWithoutCount withoutCount expectedWithoutCount withoutCount assertEquals expectedAllCount allCount expectedAllCount allCount
SuppressWarnings public void testQueueViewMbean throws Exception try addMessages validateCounts MESSAGE_COUNT MESSAGE_COUNT MESSAGE_COUNT List String tokens Arrays asList new String for String token tokens List ObjectInstance queueList JmxMBeansUtil queryMBeans createJmxConnection token for ObjectInstance queue queueList ObjectName queueName queue getObjectName QueueViewMBean proxy MBeanServerInvocationHandler newProxyInstance createJmxConnection queueName QueueViewMBean class true int removed proxy removeMatchingMessages MSG_SEL_WITH_PROPERTY
purgeCommand setJmxUseLocal true List String tokens new ArrayList String tokens add tokens add MSG_SEL_COMPLEX addMessages validateCounts MESSAGE_COUNT MESSAGE_COUNT MESSAGE_COUNT purgeCommand execute tokens QueueBrowser withPropertyBrowser requestServerSession createBrowser theQueue MSG_SEL_COMPLEX QueueBrowser allBrowser requestServerSession createBrowser theQueue int withCount getMessageCount withPropertyBrowser int allCount getMessageCount allBrowser withPropertyBrowser close allBrowser close assertEquals withCount withCount assertEquals MESSAGE_COUNT allCount MESSAGE_COUNT allCount
context setFormatter new CommandShellOutputFormatter System out purgeCommand setCommandContext context purgeCommand setJmxUseLocal true List String tokens new ArrayList String tokens add tokens add MSG_SEL_COMPLEX_SQL_AND addMessages validateCounts MESSAGE_COUNT MESSAGE_COUNT MESSAGE_COUNT purgeCommand execute tokens QueueBrowser withPropertyBrowser requestServerSession createBrowser theQueue MSG_SEL_COMPLEX_SQL_AND QueueBrowser allBrowser requestServerSession createBrowser theQueue int withCount getMessageCount withPropertyBrowser int allCount getMessageCount allBrowser withPropertyBrowser close allBrowser close
purgeCommand setJmxUseLocal true List String tokens new ArrayList String tokens add tokens add MSG_SEL_COMPLEX_SQL_OR addMessages validateCounts MESSAGE_COUNT MESSAGE_COUNT MESSAGE_COUNT purgeCommand execute tokens QueueBrowser withPropertyBrowser requestServerSession createBrowser theQueue MSG_SEL_COMPLEX_SQL_OR QueueBrowser allBrowser requestServerSession createBrowser theQueue int withCount getMessageCount withPropertyBrowser int allCount getMessageCount allBrowser withPropertyBrowser close allBrowser close assertEquals withCount withCount assertEquals allCount allCount
String uri String text Connection connection null if args length printUsage System exit int idx String arg args if arg equals if args length printUsage System exit uri args idx String queueName args idx
String text Connection connection null if args length printUsage System exit int idx String arg args if arg equals if args length printUsage System exit uri args idx String queueName args idx LOG info uri
String destinationName null Context jndiContext null ConnectionFactory connectionFactory null Connection connection null Session session null Destination destination null MessageConsumer consumer null if args length LOG info System exit destinationName args LOG info destinationName try jndiContext new InitialContext catch NamingException e
MessageConsumer consumer null if args length LOG info System exit destinationName args LOG info destinationName try jndiContext new InitialContext catch NamingException e LOG info e toString System exit try connectionFactory ConnectionFactory jndiContext lookup destination Destination jndiContext lookup destinationName catch NamingException e
destination Destination jndiContext lookup destinationName catch NamingException e LOG info e toString System exit try connection connectionFactory createConnection session connection createSession false Session AUTO_ACKNOWLEDGE consumer session createConsumer destination connection start while true Message m consumer receive if m null if m TextMessage TextMessage message TextMessage m LOG info message getText
MessageProducer producer null String destinationName null final int numMsgs if args length args length LOG info System exit destinationName args LOG info destinationName if args length numMsgs new Integer args intValue else numMsgs try jndiContext new InitialContext catch NamingException e
destinationName args LOG info destinationName if args length numMsgs new Integer args intValue else numMsgs try jndiContext new InitialContext catch NamingException e LOG info e toString System exit try connectionFactory ConnectionFactory jndiContext lookup destination Destination jndiContext lookup destinationName catch NamingException e
LOG info e toString System exit try connectionFactory ConnectionFactory jndiContext lookup destination Destination jndiContext lookup destinationName catch NamingException e LOG info e System exit try connection connectionFactory createConnection session connection createSession false Session AUTO_ACKNOWLEDGE producer session createProducer destination TextMessage message session createTextMessage for int i i numMsgs i message setText i
Context jndiContext null QueueConnectionFactory queueConnectionFactory null QueueConnection queueConnection null QueueSession queueSession null Queue queue null QueueReceiver queueReceiver null TextMessage message null if args length LOG info System exit queueName args LOG info queueName try jndiContext new InitialContext catch NamingException e
TextMessage message null if args length LOG info System exit queueName args LOG info queueName try jndiContext new InitialContext catch NamingException e LOG info e toString System exit try queueConnectionFactory QueueConnectionFactory jndiContext lookup queue Queue jndiContext lookup queueName catch NamingException e
queue Queue jndiContext lookup queueName catch NamingException e LOG info e toString System exit try queueConnection queueConnectionFactory createQueueConnection queueSession queueConnection createQueueSession false Session AUTO_ACKNOWLEDGE queueReceiver queueSession createReceiver queue queueConnection start while true Message m queueReceiver receive if m null if m TextMessage message TextMessage m LOG info message getText
QueueSender queueSender null TextMessage message null final int numMsgs if args length args length LOG info System exit queueName args LOG info queueName if args length numMsgs new Integer args intValue else numMsgs try jndiContext new InitialContext catch NamingException e
queueName args LOG info queueName if args length numMsgs new Integer args intValue else numMsgs try jndiContext new InitialContext catch NamingException e LOG info e toString System exit try queueConnectionFactory QueueConnectionFactory jndiContext lookup queue Queue jndiContext lookup queueName catch NamingException e
LOG info e toString System exit try queueConnectionFactory QueueConnectionFactory jndiContext lookup queue Queue jndiContext lookup queueName catch NamingException e LOG info e System exit try queueConnection queueConnectionFactory createQueueConnection queueSession queueConnection createQueueSession false Session AUTO_ACKNOWLEDGE queueSender queueSession createSender queue message queueSession createTextMessage for int i i numMsgs i message setText i
private String consumeRollbackMessage String destination throws JMSException Session consumerSession connection createSession true Session AUTO_ACKNOWLEDGE MessageConsumer messageConsumer consumerSession createConsumer new ActiveMQQueue destination Message message null String messageID null do message messageConsumer receive if message null
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name if mbeanServer isRegistered objectName
Test public void testBrowseByteMessageFails throws Exception ActiveMQBytesMessage bm new ActiveMQBytesMessage bm writeBytes getBytes Object result OpenTypeSupport convert bm
Test public void testNegativeTotalMessageCount throws Exception LOG info sendMessage restartBroker receiveMessage long totalMessageCount getTotalMessageCount if totalMessageCount
private void sendMessage throws JMSException Connection conn connectionFactory createConnection try conn start Session session conn createSession false Session AUTO_ACKNOWLEDGE Destination queue session createQueue TESTQUEUE TextMessage msg session createTextMessage MessageProducer producer session createProducer queue producer send queue msg
private Message receiveMessage throws JMSException Connection conn connectionFactory createConnection Message msg null try conn start Session session conn createSession false Session AUTO_ACKNOWLEDGE Destination queue session createQueue TESTQUEUE MessageConsumer consumer session createConsumer queue msg consumer receive TimeUnit SECONDS toMillis if msg null
private long getTotalMessageCount throws Exception ObjectName brokerViewMBeanName new ObjectName BrokerViewMBean brokerMBean BrokerViewMBean brokerService getManagementContext newProxyInstance brokerViewMBeanName BrokerViewMBean class true
public void testInitialContext throws Exception InitialContext context new InitialContext assertTrue context null ActiveMQConnectionFactory connectionFactory ActiveMQConnectionFactory context lookup assertTrue connectionFactory null
public void testInitialContextHasXA throws Exception InitialContext context new InitialContext assertTrue context null ActiveMQXAConnectionFactory connectionFactory ActiveMQXAConnectionFactory context lookup assertTrue connectionFactory null
protected void assertBinding Binding binding throws NamingException Object object binding getObject assertTrue object object Context Context childContext Context object NamingEnumeration Binding iter childContext listBindings while iter hasMore Binding destinationBinding iter next
public void testStatistic throws Exception BoundaryStatisticImpl stat new BoundaryStatisticImpl assertStatistic stat assertEquals stat getLowerBound assertEquals stat getUpperBound
public void testStatistic throws Exception CountStatisticImpl stat new CountStatisticImpl stat setEnabled true assertStatistic stat assertEquals stat getCount stat increment assertEquals stat getCount stat increment assertEquals stat getCount stat decrement assertEquals stat getCount Thread sleep stat increment assertLastTimeNotStartTime stat
assertEquals stat getHighWaterMark stat setCurrent assertEquals stat getCurrent assertEquals stat getLowWaterMark assertEquals stat getHighWaterMark stat setCurrent assertEquals stat getCurrent assertEquals stat getLowWaterMark assertEquals stat getHighWaterMark Thread sleep stat setCurrent assertEquals stat getCurrent assertEquals stat getLowWaterMark assertEquals stat getHighWaterMark assertLastTimeNotStartTime stat
assertEquals stat getCount assertEquals stat getMinTime assertEquals stat getMaxTime stat addTime assertEquals stat getCount assertEquals stat getMinTime assertEquals stat getMaxTime stat addTime assertEquals stat getCount assertEquals stat getMinTime assertEquals stat getMaxTime assertEquals stat getTotalTime Thread sleep stat addTime assertLastTimeNotStartTime stat
protected void dumpQueue MessageQueue queue String name
destinationInfo1 createDestinationInfo connection1 connectionInfo1 ActiveMQDestination QUEUE_TYPE connection1 request createMessage producerInfo destinationInfo1 DeliveryMode NON_PERSISTENT Object messages browseQueueWithJmx localBroker assertEquals sendNumMessages messages length StubConnection connection2 createRemoteConnection ConnectionInfo connectionInfo2 createConnectionInfo SessionInfo sessionInfo2 createSessionInfo connectionInfo2 connection2 send connectionInfo2 connection2 send sessionInfo2 ActiveMQDestination destinationInfo2 createDestinationInfo connection2 connectionInfo2 ActiveMQDestination QUEUE_TYPE final ConsumerInfo consumerInfo2 createConsumerInfo sessionInfo2 destinationInfo2 connection2 send consumerInfo2 for int i i receiveNumMessages i Message message1 receiveMessage connection2 assertNotNull message1
private Object browseQueueWithJmx BrokerService broker throws Exception Hashtable String String params new Hashtable String String params put broker getBrokerName params put params put params put queueName ObjectName queueObjectName ObjectName getInstance amqDomain params ManagementContext mgmtCtx broker getManagementContext QueueViewMBean queueView QueueViewMBean mgmtCtx newProxyInstance queueObjectName QueueViewMBean class true Object messages queueView browse
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length LOG info brokerService Arrays toString bridges DemandForwardingBridgeSupport demandForwardingBridgeSupport DemandForwardingBridgeSupport bridges ConcurrentMap ConsumerId DemandSubscription forwardingBridges demandForwardingBridgeSupport getLocalSubscriptionMap
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length LOG info brokerService Arrays toString bridges DemandForwardingBridgeSupport demandForwardingBridgeSupport DemandForwardingBridgeSupport bridges ConcurrentMap ConsumerId DemandSubscription forwardingBridges demandForwardingBridgeSupport getLocalSubscriptionMap LOG info brokerService demandForwardingBridgeSupport forwardingBridges if forwardingBridges isEmpty for DemandSubscription demandSubscription forwardingBridges values if demandSubscription getLocalInfo getDestination equals destination
private void logAllMbeans BrokerService broker throws MalformedURLException try Set all mBeanServer queryNames null null
Test public void testStaysUp throws Exception int bridgeIdentity getBridgeId
Test public void reproduceNpe throws Exception BrokerService broker0 createBroker NetworkConnector networkConnector broker0 addNetworkConnector urlString urlString networkConnector setDuplex true networkConnector setStaticBridge true networkConnector setStaticallyIncludedDestinations Arrays ActiveMQDestination asList new ActiveMQQueue dest broker0 start publish broker0 getVmConnectorURI BrokerService broker1 createBroker broker1 addConnector urlString broker1 setPlugins new BrokerPlugin new BrokerPluginSupport Override public void addConnection ConnectionContext context ConnectionInfo info throws Exception super addConnection context info if info getClientId null info getClientId contains
brokerB start final AtomicBoolean done new AtomicBoolean false ExecutorService executorService Executors newCachedThreadPool executorService execute new Runnable Override public void run try while done get brokerA createBroker null brokerA setBrokerName brokerA setBrokerObjectName new ObjectName brokerA getManagementContext getJmxDomainName JMXSupport encodeObjectNamePart KahaDBPersistenceAdapter brokerA getPersistenceAdapter getLocker setLockAcquireSleepInterval brokerA start brokerA waitUntilStopped brokerA1 waitUntilStarted catch Exception ignored
private void doTestNetworkSendReceive final BrokerService to final BrokerService from throws Exception JMSException
private void doTestNetworkSendReceive final BrokerService to final BrokerService from throws Exception JMSException LOG info from SslContext setCurrentSslContext sslContext ConnectionFactory consFactory createConnectionFactory from Connection consConn consFactory createConnection consConn start Session consSession consConn createSession false Session AUTO_ACKNOWLEDGE ActiveMQDestination destination ActiveMQDestination consSession createQueue DESTINATION_NAME final MessageConsumer consumer consSession createConsumer destination
private void doTestNetworkSendReceive final BrokerService to final BrokerService from throws Exception JMSException LOG info from SslContext setCurrentSslContext sslContext ConnectionFactory consFactory createConnectionFactory from Connection consConn consFactory createConnection consConn start Session consSession consConn createSession false Session AUTO_ACKNOWLEDGE ActiveMQDestination destination ActiveMQDestination consSession createQueue DESTINATION_NAME final MessageConsumer consumer consSession createConsumer destination LOG info to sendMessageTo destination to boolean gotMessage Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Message message consumer receive
protected Tracer createTracer return new Tracer Override public void onReceive MQTTFrame frame
private boolean verifyDurableConsumerCount final long expectedCount final BrokerService broker throws Exception return Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception boolean result false BrokerView view broker getAdminView if view null ObjectName subs broker getAdminView getInactiveDurableTopicSubscribers if subs null
public void testRequestReply throws Exception final MessageProducer remoteProducer remoteSession createProducer null MessageConsumer remoteConsumer remoteSession createConsumer included remoteConsumer setMessageListener new MessageListener Override public void onMessage Message msg final TextMessage textMsg TextMessage msg try String payload textMsg getText textMsg getJMSMessageID Destination replyTo replyTo msg getJMSReplyTo textMsg clearBody textMsg setText payload
public void testRequestReply throws Exception final MessageProducer remoteProducer remoteSession createProducer null MessageConsumer remoteConsumer remoteSession createConsumer included remoteConsumer setMessageListener new MessageListener Override public void onMessage Message msg final TextMessage textMsg TextMessage msg try String payload textMsg getText textMsg getJMSMessageID Destination replyTo replyTo msg getJMSReplyTo textMsg clearBody textMsg setText payload LOG info textMsg getText remoteProducer send replyTo textMsg
remoteConsumer setMessageListener new MessageListener Override public void onMessage Message msg final TextMessage textMsg TextMessage msg try String payload textMsg getText textMsg getJMSMessageID Destination replyTo replyTo msg getJMSReplyTo textMsg clearBody textMsg setText payload LOG info textMsg getText remoteProducer send replyTo textMsg LOG info textMsg getJMSMessageID catch DestinationDoesNotExistException expected replyToNonExistDest incrementAndGet try
LOG info textMsg getJMSMessageID catch JMSException e e printStackTrace catch Exception e LOG warn e e printStackTrace Queue tempQueue localSession createTemporaryQueue MessageProducer requestProducer localSession createProducer included requestProducer setDeliveryMode DeliveryMode NON_PERSISTENT MessageConsumer requestConsumer localSession createConsumer tempQueue MessageConsumer dlqconsumer remoteSession createConsumer new ActiveMQQueue SharedDeadLetterStrategy DEFAULT_DEAD_LETTER_QUEUE_NAME dlqconsumer setMessageListener new MessageListener Override public void onMessage Message message
LOG info message getJMSMessageID catch JMSException e e printStackTrace remoteDLQCount incrementAndGet Thread sleep long done System currentTimeMillis MESSAGE_COUNT int i while MESSAGE_COUNT roundTripComplete get remoteDLQCount get replyToNonExistDest get done System currentTimeMillis if i MESSAGE_COUNT String payload i i TextMessage msg localSession createTextMessage payload msg setJMSReplyTo tempQueue requestProducer send msg
protected void setUp throws Exception groupId System currentTimeMillis brokers new BrokerService BROKER_COUNT for int i i brokers length i
protected void tearDown throws Exception for int i i forwardingClients length i
final TransportConnector transportConnector remote addConnector remote start BrokerService local new BrokerService local setSslContext sslContext local setUseJmx false local setPersistent false final NetworkConnector networkConnector local addNetworkConnector remote getTransportConnectorByScheme getPublishableConnectString replace local start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return networkConnector activeBridges isEmpty networkConnector activeBridges toArray new DurableConduitBridge getRemoteBrokerName null final AtomicReference DurableConduitBridge bridge new AtomicReference DurableConduitBridge networkConnector activeBridges iterator next assertTrue bridge get getRemoteBrokerName equals for int i i i
String payload textMsg getText Destination replyTo replyTo msg getJMSReplyTo textMsg clearBody textMsg setText payload remoteProducer send replyTo textMsg catch JMSException e e printStackTrace TopicRequestor requestor new TopicRequestor TopicSession localSession included Thread sleep for int i i MESSAGE_COUNT i TextMessage msg localSession createTextMessage i TextMessage result TextMessage requestor request msg assertNotNull result
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length LOG info brokerService Arrays toString bridges DemandForwardingBridgeSupport demandForwardingBridgeSupport DemandForwardingBridgeSupport bridges ConcurrentMap ConsumerId DemandSubscription forwardingBridges demandForwardingBridgeSupport getLocalSubscriptionMap
private void waitForConsumerRegistration final BrokerService brokerService final int min final ActiveMQDestination destination throws Exception assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Object bridges brokerService getNetworkConnectors get bridges values toArray if bridges length LOG info brokerService Arrays toString bridges DemandForwardingBridgeSupport demandForwardingBridgeSupport DemandForwardingBridgeSupport bridges ConcurrentMap ConsumerId DemandSubscription forwardingBridges demandForwardingBridgeSupport getLocalSubscriptionMap LOG info brokerService demandForwardingBridgeSupport forwardingBridges if forwardingBridges isEmpty for DemandSubscription demandSubscription forwardingBridges values if demandSubscription getLocalInfo getDestination equals destination
MessageProducer producer localSession createProducer included for int i i MESSAGE_COUNT i Message test localSession createTextMessage i producer send test Thread sleep localConsumer localSession createDurableSubscriber included consumerName LOG info localConsumer for int i i MESSAGE_COUNT i assertNotNull i localConsumer receive Thread sleep doTearDown doSetUp false Thread sleep LOG info MessageConsumer remoteConsumer remoteSession createDurableSubscriber included consumerName
protected void assertRemoteAdvisoryCount final MessageConsumer advisoryConsumer final int count throws JMSException int available ActiveMQMessage message null while message ActiveMQMessage advisoryConsumer receive null available
public void testQueueRequestorOverBridge throws JMSException for int i i MESSAGE_COUNT i TextMessage msg requestServerSession createTextMessage i TextMessage result TextMessage requestor request msg assertNotNull result
public void testTopicRequestorOverBridge throws JMSException for int i i MESSAGE_COUNT i TextMessage msg requestServerSession createTextMessage i
public void testTopicRequestorOverBridge throws JMSException for int i i MESSAGE_COUNT i TextMessage msg requestServerSession createTextMessage i LOG info msg TextMessage result TextMessage requestor request msg assertNotNull result
public void onMessage Message msg try TextMessage textMsg TextMessage msg String payload textMsg getText Destination replyTo replyTo msg getJMSReplyTo textMsg clearBody textMsg setText payload
public void testGenerateAndReParsingIsTheSame throws Exception ByteArrayOutputStream buffer new ByteArrayOutputStream DataOutputStream ds new DataOutputStream buffer Object expected createObject
public void testGenerateAndReParsingIsTheSame throws Exception ByteArrayOutputStream buffer new ByteArrayOutputStream DataOutputStream ds new DataOutputStream buffer Object expected createObject LOG info expected openWireformat marshal expected ds ds close ByteArrayInputStream in new ByteArrayInputStream buffer toByteArray DataInputStream dis new DataInputStream in Object actual openWireformat unmarshal dis assertBeansEqual new HashSet Object expected actual
comparedObjects add expected Class extends Object type expected getClass assertEquals type actual getClass BeanInfo beanInfo Introspector getBeanInfo type PropertyDescriptor descriptors beanInfo getPropertyDescriptors for int i i descriptors length i PropertyDescriptor descriptor descriptors i Method method descriptor getReadMethod if method null String name descriptor getName Object expectedValue null Object actualValue null try expectedValue method invoke expected EMPTY_ARGUMENTS actualValue method invoke actual EMPTY_ARGUMENTS
public void testLongNumberRanges throws Exception long numberValues 0x7e 0x7f 0x80 0x81 0xf0 0xff 0x7eff 0x7fffL 0x8001L 0x8000L 0xe000L 0xe0001L 0xff00L 0xffffL 0x10000L 0x700000L 0x12345678L 0x72345678L 0x7fffffffL 0x80000000L 0x80000001L 0xE0000001L 0xFFFFFFFFL 0x123456781L 0x1234567812L 0x12345678123L 0x123456781234L 0x1234567812345L 0x12345678123456L 0x7e345678123456L 0x7fffffffffffffL 0x80000000000000L 0x80000000000001L 0xe0000000000001L 0xffffffffffffffL 0x1234567812345678L 0x7fffffffffffffffL 0x8000000000000000L 0x8000000000000001L 0xe000000000000001L 0xffffffffffffffffL for int i i numberValues length i long value numberValues i SessionId object new SessionId object setConnectionId connectionId object setValue value writeObject object ds writeInt endOfStreamMarker ds close ByteArrayInputStream in new ByteArrayInputStream buffer toByteArray DataInputStream dis new DataInputStream in for int i i numberValues length i long value numberValues i String expected Long toHexString value
public void testPerformance throws Exception ConnectionFactory factory createConnectionFactory List Connection list new ArrayList Connection for int i i CONNECTION_COUNT i Connection connection factory createConnection connection start list add connection
assertNotNull connection session connection createSession false javax jms Session CLIENT_ACKNOWLEDGE assertNotNull session topic session createTopic TOPIC_NAME assertNotNull topic publisher session createProducer topic assertNotNull publisher MapMessage msg session createMapMessage assertNotNull msg msg setString int loop for loop loop MESSAGE_COUNT loop msg setInt loop publisher send msg DELIVERY_MODE DELIVERY_PRIORITY Message DEFAULT_TIME_TO_LIVE if loop
try connection connectionFactory createConnection USERNAME DEFAULT_PASSWORD assertNotNull connection connection setClientID CLIENTID connection start session connection createSession false javax jms Session AUTO_ACKNOWLEDGE assertNotNull session topic session createTopic TOPIC_NAME assertNotNull topic subscriber session createDurableSubscriber topic SUBID false assertNotNull subscriber int loop for loop loop MESSAGE_COUNT loop subscriber receive if loop
connection start session connection createSession false javax jms Session AUTO_ACKNOWLEDGE assertNotNull session destination session createQueue QUEUE_NAME assertNotNull destination publisher session createProducer destination assertNotNull publisher MapMessage msg session createMapMessage assertNotNull msg msg setString int loop for loop loop MESSAGE_COUNT loop msg setInt loop publisher send msg DELIVERY_MODE DELIVERY_PRIORITY Message DEFAULT_TIME_TO_LIVE if loop
public void testPerformance throws Exception ConnectionFactory factory createConnectionFactory Connection connection factory createConnection for int i i MESSAGE_COUNT i Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination dest session createTemporaryTopic session createConsumer dest MessageProducer mp session createProducer dest Message msg session createTextMessage i mp send msg session close releaseDestination dest if i
LOG info ClassPathXmlApplicationContext context1 null BrokerFactoryBean brokerFactory new BrokerFactoryBean new ClassPathResource config assertNotNull brokerFactory try Thread currentThread setContextClassLoader NetworkedSyncTest class getClassLoader context1 new ClassPathXmlApplicationContext config broker1 BrokerService context1 getBean if broker1 isStarted LOG info broker1 start else LOG info broker1 waitUntilStopped catch Exception e
LOG info broker1 waitUntilStopped catch Exception e LOG error e getMessage throw e try Thread currentThread setContextClassLoader NetworkedSyncTest class getClassLoader context1 new ClassPathXmlApplicationContext config broker2 BrokerService context1 getBean if broker2 isStarted LOG info broker2 start else LOG info broker2 waitUntilStopped
e printStackTrace connection start session connection createSession false Session AUTO_ACKNOWLEDGE Topic destination session createTopic producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT long counter for int i i NetworkedSyncTest MESSAGE_COUNT i String text Thread currentThread getName this hashCode counter TextMessage message session createTextMessage text producer send message counter if counter LOG info counter catch Exception ex
connection setExceptionListener new javax jms ExceptionListener Override public void onException javax jms JMSException e e printStackTrace connection start session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createTopic consumer session createDurableSubscriber Topic destination long counter for int i i NetworkedSyncTest MESSAGE_COUNT i Message message2 consumer receive if message2 TextMessage TextMessage textMessage TextMessage message2 textMessage getText else
consumerBroker createConsumerBroker consumerBindAddress if producerBroker null producerBroker createProducerBroker producerBindAddress consumerFactory createConnectionFactory consumerBindAddress consumerFactory setDispatchAsync true ActiveMQPrefetchPolicy policy new ActiveMQPrefetchPolicy policy setQueuePrefetch consumerFactory setPrefetchPolicy policy producerFactory createConnectionFactory producerBindAddress Connection con consumerFactory createConnection Session session con createSession false Session AUTO_ACKNOWLEDGE producers new PerfProducer numberofProducers numberOfDestinations consumers new PerfConsumer numberOfConsumers numberOfDestinations for int k k numberOfDestinations k Destination destination createDestination session destinationName k
Override protected void setUp throws Exception if broker null broker createBroker bindAddress factory createConnectionFactory clientURI Connection con factory createConnection Session session con createSession false Session AUTO_ACKNOWLEDGE LOG info numberofProducers numberOfConsumers numberOfDestinations totalNumberOfConsumers numberOfConsumers numberOfDestinations totalNumberOfProducers numberofProducers numberOfDestinations producers new PerfProducer totalNumberOfProducers consumers new PerfConsumer totalNumberOfConsumers int consumerCount int producerCount for int k k numberOfDestinations k Destination destination createDestination session destinationName k
public void onMessage Message msg super onMessage msg
protected BrokerService createBroker String uri throws Exception
Test timeout public void testForConnectionLeak throws Exception Integer expectedConnectionCount for int i i ITERATIONS i try if i
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
protected BrokerService createBroker String uri throws Exception
public void testFunctionCall throws Exception Object filter parse assertTrue filter BooleanFunctionCallExpr
public void testParseXPath throws Exception BooleanExpression filter parse assertTrue filter XPathExpression
public void testParseWithParensAround throws Exception String values for int i i values length i String value values i
protected void assertCreatedURL String expectedURL throws Exception String url factory getBrokerURL
Override public void onMessage Message message synchronized messages messages add message if verbose
public void waitForMessagesToArrive int messageCount long maxWaitTime long maxRemainingMessageCount Math max messageCount messages size
public void waitForMessagesToArrive int messageCount long maxWaitTime long maxRemainingMessageCount Math max messageCount messages size LOG info maxRemainingMessageCount long start System currentTimeMillis long endTime start maxWaitTime while maxRemainingMessageCount try synchronized messages messages wait if hasReceivedMessages messageCount System currentTimeMillis endTime break catch InterruptedException e LOG info e maxRemainingMessageCount Math max messageCount messages size long end System currentTimeMillis start
public void start throws JMSException for int i i messageCount i final String text i template send destination new MessageCreator public Message createMessage Session session throws JMSException
Thread currentThread setContextClassLoader SpringTest class getClassLoader context new ClassPathXmlApplicationContext config consumer SpringConsumer context getBean assertTrue consumer null consumer start Thread sleep consumer flushMessages producer SpringProducer context getBean assertTrue producer null producer start consumer waitForMessagesToArrive producer getMessageCount List Message messages consumer flushMessages LOG info for Iterator Message iter messages iterator iter hasNext Object message iter next
protected BytesMessage createMessage int count Session session int maxMessageSize AtomicLong publishedMessageSize throws JMSException final BytesMessage message session createBytesMessage final Random randomSize new Random int size randomSize nextInt maxMessageSize
public void testQueues throws Exception ActiveMQQueue queue ActiveMQQueue sess createQueue ProducerThread lowPri new ProducerThread queue MSG_NUM LOW_PRI ProducerThread highPri new ProducerThread queue MSG_NUM HIGH_PRI lowPri start highPri start lowPri join highPri join MessageConsumer queueConsumer sess createConsumer queue for int i i MSG_NUM i Message msg queueConsumer receive
protected Message createMessage int priority throws Exception final String text priority Message msg sess createTextMessage text
public void testDurableSubsReconnect throws Exception ActiveMQTopic topic ActiveMQTopic sess createTopic final String subName TopicSubscriber sub sess createDurableSubscriber topic subName sub close ProducerThread lowPri new ProducerThread topic MSG_NUM LOW_PRI ProducerThread highPri new ProducerThread topic MSG_NUM HIGH_PRI lowPri start highPri start lowPri join highPri join final int closeFrequency MSG_NUM sub sess createDurableSubscriber topic subName for int i i MSG_NUM i Message msg sub receive
sub close ProducerThread lowPri new ProducerThread topic MSG_NUM LOW_PRI ProducerThread highPri new ProducerThread topic MSG_NUM HIGH_PRI lowPri start highPri start lowPri join highPri join final int closeFrequency MSG_NUM sub sess createDurableSubscriber topic subName for int i i MSG_NUM i Message msg sub receive LOG debug i msg null msg getJMSMessageID null assertNotNull i msg assertEquals i i MSG_NUM HIGH_PRI LOW_PRI msg getJMSPriority if i i closeFrequency
sess conn createSession false Session AUTO_ACKNOWLEDGE ActiveMQTopic topic ActiveMQTopic sess createTopic final String subName TopicSubscriber sub sess createDurableSubscriber topic subName sub close final int numToProduce final int dups new int numToProduce ProducerThread producerThread new ProducerThread topic numToProduce LOW_PRI producerThread run LOG info sub sess createDurableSubscriber topic subName final int batchSize int lowLowCount for int i i numToProduce i Message msg sub receive
producerThread run LOG info if i batchSize producerThread setMessagePriority HIGH_PRI producerThread setMessageCount producerThread run LOG info if i batchSize producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run lowLowCount LOG info msg sub receive assertNotNull msg
producerThread run LOG info if i batchSize producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run lowLowCount LOG info msg sub receive assertNotNull msg LOG info msg assertEquals HIGH_PRI msg getJMSPriority if i batchSize msg sub receive assertNotNull msg
producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run lowLowCount LOG info msg sub receive assertNotNull msg LOG info msg assertEquals HIGH_PRI msg getJMSPriority if i batchSize msg sub receive assertNotNull msg LOG info i msg assertEquals HIGH_PRI msg getJMSPriority for int i i lowLowCount i
final String subName TopicSubscriber sub sess createDurableSubscriber topic subName sub close ProducerThread producerThread new ProducerThread topic HIGH_PRI producerThread run producerThread setMessagePriority HIGH_PRI producerThread setMessageCount producerThread run producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run LOG info sub sess createDurableSubscriber topic subName Message msg sub receive assertNotNull msg
producerThread run producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run LOG info sub sess createDurableSubscriber topic subName Message msg sub receive assertNotNull msg LOG info msg getJMSMessageID msg getJMSPriority assertEquals HIGH_PRI msg getJMSPriority producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run msg sub receive assertNotNull msg
LOG info sub sess createDurableSubscriber topic subName Message msg sub receive assertNotNull msg LOG info msg getJMSMessageID msg getJMSPriority assertEquals HIGH_PRI msg getJMSPriority producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run msg sub receive assertNotNull msg LOG info msg getJMSMessageID msg getJMSPriority assertEquals HIGH_PRI msg getJMSPriority msg sub receive assertNotNull msg
LOG info msg getJMSMessageID msg getJMSPriority assertEquals HIGH_PRI msg getJMSPriority producerThread setMessagePriority LOW_PRI producerThread setMessageCount producerThread run msg sub receive assertNotNull msg LOG info msg getJMSMessageID msg getJMSPriority assertEquals HIGH_PRI msg getJMSPriority msg sub receive assertNotNull msg LOG info msg assertEquals LOW_PRI msg getJMSPriority msg sub receive assertNotNull msg
public void testQueueBacklog throws Exception final int backlog ActiveMQQueue queue ActiveMQQueue sess createQueue ProducerThread lowPri new ProducerThread queue backlog LOW_PRI ProducerThread highPri new ProducerThread queue HIGH_PRI lowPri start lowPri join highPri start highPri join LOG info MessageConsumer queueConsumer sess createConsumer queue for int i i i Message msg queueConsumer receive
File lockFile new File testFolder getRoot String jvmProp LockFile class getName lockFile getCanonicalPath System getProperties put jvmProp jvmProp final CountDownLatch locked new CountDownLatch ExecutorService executorService Executors newSingleThreadExecutor try final AtomicLong acquireTime new AtomicLong 0l executorService execute new Runnable Override public void run try underTest start acquireTime set System currentTimeMillis locked countDown catch Exception e e printStackTrace
private String receive Session session throws Exception MessageConsumer consumer session createConsumer destination String result null TextMessage message TextMessage consumer receive if message null
super persistOutcome tx txid try persistenceAdapter stop catch Exception e LOG error e exceptions add e persistenceAdapter setTransactionStore transactionStore brokerService start ExecutorService executorService Executors newCachedThreadPool executorService execute new Runnable Override public void run try sendMessages true catch Exception expected
protected int dumpMessages throws Exception int count WireFormat wireFormat new OpenWireFormat java sql Connection conn JDBCPersistenceAdapter broker getPersistenceAdapter getDataSource getConnection PreparedStatement statement conn prepareStatement ResultSet result statement executeQuery LOG info while result next long id result getLong String xid result getString org apache activemq command Message message org apache activemq command Message wireFormat unmarshal new ByteSequence result getBytes
protected int receiveMessages int messagesExpected Session session throws Exception int messagesReceived for int i i messagesExpected i Destination destination session createQueue MessageConsumer consumer session createConsumer destination Message message null try
protected int receiveMessages int messagesExpected Session session throws Exception int messagesReceived for int i i messagesExpected i Destination destination session createQueue MessageConsumer consumer session createConsumer destination Message message null try LOG debug messagesReceived messagesExpected message consumer receive
protected void sendMessages int messagesExpected throws Exception javax jms Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE Destination destination session createQueue MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT for int i i messagesExpected i
Before public void setUp throws Exception gotError set false broker createBroker broker start broker waitUntilStarted appender new DefaultTestAppender Override public void doAppend org apache log4j spi LoggingEvent event if event getLevel toInt Level INFO_INT
Test public void testConcurrentDlqOk throws Exception final Destination dest new ActiveMQQueue final ActiveMQConnectionFactory amq new ActiveMQConnectionFactory broker getTransportConnectorByScheme getPublishableConnectString amq setWatchTopicAdvisories false broker setIoExceptionHandler new DefaultIOExceptionHandler Override public void handle IOException exception
connection amq createConnection connection setExceptionListener new javax jms ExceptionListener public void onException javax jms JMSException e e printStackTrace RedeliveryPolicy queuePolicy new RedeliveryPolicy queuePolicy setMaximumRedeliveries ActiveMQConnection connection setRedeliveryPolicy queuePolicy connection start session connection createSession true Session SESSION_TRANSACTED consumer session createConsumer dest while consumed get gotError get Message message consumer receive if message null consumed decrementAndGet
private void produceMessages ActiveMQConnectionFactory amq Destination dest int numMessages throws JMSException Connection connection amq createConnection connection setExceptionListener new javax jms ExceptionListener public void onException javax jms JMSException e e printStackTrace connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer dest long counter TextMessage message session createTextMessage for int i i numMessages i producer send message counter if counter
allowing jdbcPersistenceAdapter getLocker will returnValue locker allowing locker keepAlive when jdbcConn is will returnValue true allowing locker keepAlive when jdbcConn is will returnValue false allowing jdbcPersistenceAdapter checkpoint with true then jdbcConn is allowing brokerService stop then broker is LeaseLockerIOExceptionHandler underTest new LeaseLockerIOExceptionHandler underTest setBrokerService brokerService
try broker createBroker withJMX broker start broker waitUntilStarted dataSource stopDB TimeUnit SECONDS sleep checkTransportConnectorStopped dataSource restartDB Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG debug try checkTransportConnectorStarted return true catch Throwable t
ProducerThread medHighPri new ProducerThread topic MSG_NUM MED_HIGH_PRI ProducerThread highPri new ProducerThread topic MSG_NUM HIGH_PRI lowPri start highPri start medPri start medHighPri start lowPri join highPri join medPri join medHighPri join final int closeFrequency MSG_NUM final int priorities new int HIGH_PRI MED_HIGH_PRI MED_PRI LOW_PRI sub sess createDurableSubscriber topic subName for int i i MSG_NUM i Message msg sub receive
medPri start medHighPri start lowPri join highPri join medPri join medHighPri join final int closeFrequency MSG_NUM final int priorities new int HIGH_PRI MED_HIGH_PRI MED_PRI LOW_PRI sub sess createDurableSubscriber topic subName for int i i MSG_NUM i Message msg sub receive LOG debug i msg null msg getJMSMessageID msg getJMSPriority null assertNotNull i msg assertEquals i priorities i MSG_NUM msg getJMSPriority if i i closeFrequency
final int maxPriority final AtomicInteger messageCounts new AtomicInteger maxPriority final long messageIds new long maxPriority Vector ProducerThread producers new Vector ProducerThread for int priority priority maxPriority priority producers add new ProducerThread topic MSG_NUM priority messageCounts priority new AtomicInteger messageIds priority 1l for ProducerThread producer producers producer start final int closeFrequency MSG_NUM HashMap String String dups new HashMap String String sub consumerSession createDurableSubscriber topic subName for int i i MSG_NUM maxPriority i Message msg sub receive
messageIds priority 1l for ProducerThread producer producers producer start final int closeFrequency MSG_NUM HashMap String String dups new HashMap String String sub consumerSession createDurableSubscriber topic subName for int i i MSG_NUM maxPriority i Message msg sub receive LOG debug i msg null msg getJMSMessageID msg getJMSPriority null assertNotNull i Arrays toString messageCounts msg assertNull msg getJMSMessageID dups put msg getJMSMessageID subName messageCounts msg getJMSPriority incrementAndGet assertEquals msg messageIds msg getJMSPriority ActiveMQMessage msg getMessageId getProducerSequenceId messageIds msg getJMSPriority if i i closeFrequency
TopicSubscriber sub consumerSession createDurableSubscriber topic subName sub close final int TO_SEND final Vector Message duplicates new Vector Message final int dups new int TO_SEND long start double max sum MessageProducer messageProducer sess createProducer topic TextMessage message sess createTextMessage for int i i TO_SEND i int priority i message setText i priority message setIntProperty i message setJMSPriority priority if i i
double max sum MessageProducer messageProducer sess createProducer topic TextMessage message sess createTextMessage for int i i TO_SEND i int priority i message setText i priority message setIntProperty i message setJMSPriority priority if i i LOG info max message getText start System currentTimeMillis messageProducer send message DeliveryMode PERSISTENT message getJMSPriority long duration System currentTimeMillis start max Math max max duration if duration max
start System currentTimeMillis messageProducer send message DeliveryMode PERSISTENT message getJMSPriority long duration System currentTimeMillis start max Math max max duration if duration max LOG info max i message getText sum duration LOG info TO_SEND max double noConsumerAve sum TO_SEND sub consumerSession createDurableSubscriber topic subName final AtomicInteger count new AtomicInteger sub setMessageListener new MessageListener Override public void onMessage Message message try count incrementAndGet
LOG info count get TextMessage message getText message getIntProperty message getJMSMessageID int seqNo message getIntProperty if dups seqNo dups seqNo else LOG error TextMessage message getText message getJMSMessageID duplicates add message catch Exception e e printStackTrace LOG info sum max for int i TO_SEND i TO_SEND i int priority i message setText i priority
else LOG error TextMessage message getText message getJMSMessageID duplicates add message catch Exception e e printStackTrace LOG info sum max for int i TO_SEND i TO_SEND i int priority i message setText i priority message setIntProperty i message setJMSPriority priority if i i LOG info max message getText
catch Exception e e printStackTrace LOG info sum max for int i TO_SEND i TO_SEND i int priority i message setText i priority message setIntProperty i message setJMSPriority priority if i i LOG info max message getText start System currentTimeMillis messageProducer send message DeliveryMode PERSISTENT message getJMSPriority long duration System currentTimeMillis start
TopicSubscriber sub consumerSession createDurableSubscriber topic subName sub close MessageProducer messageProducer sess createProducer topic Message message sess createTextMessage messageProducer send message DeliveryMode PERSISTENT Message DEFAULT_PRIORITY message sess createTextMessage messageProducer send message message sess createTextMessage messageProducer send message message null assertEquals messageTableCount TimeUnit SECONDS sleep sub consumerSession createDurableSubscriber topic subName message sub receive assertNotNull message
message sess createTextMessage messageProducer send message message null assertEquals messageTableCount TimeUnit SECONDS sleep sub consumerSession createDurableSubscriber topic subName message sub receive assertNotNull message LOG info message waitForAck for int i i i jdbc cleanup assertEquals messageTableCount message sub receive assertNotNull message
final ActiveMQQueue queue new ActiveMQQueue ActiveMQConnectionFactory factory new ActiveMQConnectionFactory factory setWatchTopicAdvisories false Connection conn factory createConnection conn start Session sess conn createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer sess createProducer queue producer setTimeToLive String payLoad new String new byte final int numMessages for int i i numMessages i producer send sess createTextMessage payLoad assertTrue Wait waitFor new Condition Override public boolean isSatisified throws Exception long expired brokerService getDestination queue getDestinationStatistics getExpired getCount
Override protected void dumpMessages throws Exception WireFormat wireFormat new OpenWireFormat java sql Connection conn JDBCPersistenceAdapter broker getPersistenceAdapter getDataSource getConnection PreparedStatement statement conn prepareStatement ResultSet result statement executeQuery while result next long id result getLong Message message Message wireFormat unmarshal new ByteSequence result getBytes
protected List Message dumpMessages throws Exception WireFormat wireFormat new OpenWireFormat java sql Connection conn JDBCPersistenceAdapter service getPersistenceAdapter getDataSource getConnection PreparedStatement statement conn prepareStatement ResultSet result statement executeQuery ArrayList Message results new ArrayList Message while result next long id result getLong Message message Message wireFormat unmarshal new ByteSequence result getBytes
protected int receiveMessages int messagesExpected XASession session boolean onePhase throws Exception int messagesReceived for int i i messagesExpected i Destination destination session createQueue MessageConsumer consumer session createConsumer destination XAResource resource session getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid Message message null try
protected int receiveMessages int messagesExpected XASession session boolean onePhase throws Exception int messagesReceived for int i i messagesExpected i Destination destination session createQueue MessageConsumer consumer session createConsumer destination XAResource resource session getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid Message message null try LOG debug messagesReceived messagesExpected resource start tid XAResource TMNOFLAGS message consumer receive
Message message null try LOG debug messagesReceived messagesExpected resource start tid XAResource TMNOFLAGS message consumer receive LOG info message resource end tid XAResource TMSUCCESS if message null if onePhase resource commit tid true else resource prepare tid resource commit tid false messagesReceived catch Exception e
LOG debug messagesReceived messagesExpected resource start tid XAResource TMNOFLAGS message consumer receive LOG info message resource end tid XAResource TMSUCCESS if message null if onePhase resource commit tid true else resource prepare tid resource commit tid false messagesReceived catch Exception e LOG debug e try
resource end tid XAResource TMSUCCESS if message null if onePhase resource commit tid true else resource prepare tid resource commit tid false messagesReceived catch Exception e LOG debug e try LOG debug tid resource rollback tid catch XAException ex try
resource commit tid true else resource prepare tid resource commit tid false messagesReceived catch Exception e LOG debug e try LOG debug tid resource rollback tid catch XAException ex try LOG debug ex tid resource forget tid catch XAException ex1
executor execute new Runnable Override public void run try lockerB start lockedSet add lockerB printLockTable connection catch Exception e e printStackTrace TimeUnit SECONDS sleep assertTrue lockedSet isEmpty assertFalse lockerA keepAlive assertFalse lockerB keepAlive LOG info fakeId statement connection prepareStatement jdbc getStatements getLeaseUpdateStatement
Test public void testStatsAndRedispatchAfterAckPreparedClosed throws Exception factory new ActiveMQXAConnectionFactory connectionUri factory setWatchTopicAdvisories false sendMessages ActiveMQXAConnection activeMQXAConnection ActiveMQXAConnection factory createXAConnection activeMQXAConnection start XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid resource start tid XAResource TMNOFLAGS Message message consumer receive
sendMessages messagesExpected ActiveMQXAConnection activeMQXAConnection ActiveMQXAConnection factory createXAConnection activeMQXAConnection start XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i messagesExpected i Message message null try
activeMQXAConnection start XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i messagesExpected i Message message null try LOG debug messagesReceived messagesExpected message consumer receive
MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i messagesExpected i Message message null try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS assertEquals proxy getInFlightCount assertEquals proxy getQueueSize assertEquals proxy cursorSize Xid tid createXid resource start tid XAResource TMNOFLAGS for int i i i Message message null try message consumer receive
MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS assertEquals proxy getInFlightCount assertEquals proxy getQueueSize assertEquals proxy cursorSize Xid tid createXid resource start tid XAResource TMNOFLAGS for int i i i Message message null try message consumer receive LOG info message catch Exception e
XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive
XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
consumer close consumer xaSession createDurableSubscriber destination sendMessagesTo destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive
XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
consumer close consumer xaSession createDurableSubscriber destination sendMessagesTo destination XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive
XAResource resource xaSession getXAResource resource recover XAResource TMSTARTRSCAN resource recover XAResource TMNOFLAGS dumpMessages Xid tid createXid resource start tid XAResource TMNOFLAGS int messagesReceived for int i i i Message message null try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
private boolean consumeOnlyN int expected String clientId String subName ActiveMQTopic destination throws Exception int drained ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri expected factory setWatchTopicAdvisories false javax jms Connection connection factory createConnection connection setClientID clientId try connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber destination subName Message message null while message consumer receive null drained
factory new ActiveMQXAConnectionFactory connectionUri factory setWatchTopicAdvisories false sendMessages for int i i i ActiveMQXAConnection activeMQXAConnection ActiveMQXAConnection factory createXAConnection activeMQXAConnection start XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource Xid tid createXid resource start tid XAResource TMNOFLAGS Message message null try message consumer receive
sendMessages for int i i i ActiveMQXAConnection activeMQXAConnection ActiveMQXAConnection factory createXAConnection activeMQXAConnection start XASession xaSession activeMQXAConnection createXASession Destination destination xaSession createQueue MessageConsumer consumer xaSession createConsumer destination XAResource resource xaSession getXAResource Xid tid createXid resource start tid XAResource TMNOFLAGS Message message null try message consumer receive LOG info i message catch Exception e
ActiveMQXAConnectionFactory activeMQXAConnectionFactory new ActiveMQXAConnectionFactory connectionUri activeMQXAConnectionFactory setWatchTopicAdvisories false activeMQXAConnection ActiveMQXAConnection activeMQXAConnectionFactory createXAConnection activeMQXAConnection start xaSession activeMQXAConnection createXASession xaResource xaSession getXAResource xids xaResource recover XAResource TMSTARTRSCAN xaResource recover XAResource TMNOFLAGS for int i i xids length i xaResource rollback xids i MessageConsumer consumer2 session createConsumer new ActiveMQQueue LOG info Message message regularReceiveWith receiveFactory assertNotNull message LOG info message
final byte branch2 Arrays copyOf branch branch length branch2 Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try
Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive
Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
final byte branch2 Arrays copyOf branch branch length branch2 Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try
Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive
Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
final byte branch2 Arrays copyOf branch branch length branch2 Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try
Xid branchTid new Xid Override public int getFormatId return tid getFormatId Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive
Override public byte getGlobalTransactionId return tid getGlobalTransactionId Override public byte getBranchQualifier return branch2 resource start tid XAResource TMNOFLAGS int messagesReceived Message message null for int i i messagesExpected i try LOG debug messagesReceived messagesExpected message consumer receive LOG info message messagesReceived catch Exception e
protected void sendMessagesWithTo ConnectionFactory factory int messagesExpected Destination destination throws Exception javax jms Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer destination producer setDeliveryMode DeliveryMode PERSISTENT for int i i messagesExpected i
WireFormat wireFormat new OpenWireFormat java sql Connection conn JDBCPersistenceAdapter broker getPersistenceAdapter getDataSource getConnection PreparedStatement statement conn prepareStatement ResultSet result statement executeQuery LOG info while result next long id result getLong org apache activemq command Message message org apache activemq command Message wireFormat unmarshal new ByteSequence result getBytes String xid result getString LOG info id message getMessageId getBrokerSequenceId xid message statement close statement conn prepareStatement result statement executeQuery LOG info while result next
Test public void testDest1Deletion throws Exception LOG info dest1 dest2
Test public void testDest2Deletion throws Exception LOG info dest1 dest2
Test public void testStoreCleanupDeleteDest1First throws Exception LOG info dest1 dest2
Test public void testStoreCleanupDeleteDest2First throws Exception LOG info dest1 dest2
Test public void testModifyLockFile throws Exception assertTrue master isStarted final File lockFile new File kahaDataDir assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
for int i i parallelProducer i executorService execute new Runnable Override public void run try publishMessages sharedCount catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length double duration System currentTimeMillis start stopBroker
Override public void run try publishMessages sharedCount catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length double duration System currentTimeMillis start stopBroker LOG info duration LOG info toSend duration
catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length double duration System currentTimeMillis start stopBroker LOG info duration LOG info toSend duration LOG info totalSent LOG info kahaDBPersistenceAdapter getStore getJournal length LOG info kahaDBPersistenceAdapter getStore getPageFile getDiskSize
executorService execute new Runnable Override public void run try publishMessages sharedCount catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length broker getAdminView gc double duration System currentTimeMillis start stopBroker
try publishMessages sharedCount catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length broker getAdminView gc double duration System currentTimeMillis start stopBroker LOG info duration LOG info toSend duration
catch Exception e exceptions add e executorService shutdown executorService awaitTermination TimeUnit MINUTES assertTrue executorService isTerminated assertTrue exceptions exceptions isEmpty long totalSent toSend payloadString length broker getAdminView gc double duration System currentTimeMillis start stopBroker LOG info duration LOG info toSend duration LOG info totalSent LOG info kahaDBPersistenceAdapter getStore getJournal length
Test public void testIndexDirExists throws Exception LOG info kahaIndexDir assertTrue kahaDataDir exists assertTrue kahaIndexDir exists String index kahaIndexDir list new FilenameFilter Override public boolean accept File dir String name
Test public void testIndexDirExists throws Exception produceMessages LOG info kahaIndexDir assertTrue kahaDataDir exists assertTrue kahaIndexDir exists String destName nameFromDestinationFilter queue String index new File kahaIndexDir destName list new FilenameFilter Override public boolean accept File dir String name
Override public void run try produceMessages queueA done set true catch Exception ignored assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception BaseDestination baseDestinationA BaseDestination broker getRegionBroker getDestinationMap get queueA return baseDestinationA null baseDestinationA getDestinationStatistics getMessages getCount 4l BaseDestination baseDestinationA BaseDestination broker getRegionBroker getDestinationMap get queueA long enqueues 0l do enqueues baseDestinationA getDestinationStatistics getEnqueues getCount
File dataDir new File File useUpSpace new File dataDir if useUpSpace exists LOG info RandomAccessFile filler new RandomAccessFile useUpSpace filler setLength filler close File toDelete new File dataDir filler new RandomAccessFile toDelete filler setLength filler close broker setDataDirectoryFile dataDir broker start AtomicLong consumed new AtomicLong consume consumed
filler close File toDelete new File dataDir filler new RandomAccessFile toDelete filler setLength filler close broker setDataDirectoryFile dataDir broker start AtomicLong consumed new AtomicLong consume consumed LOG info consumed broker getPersistenceAdapter checkpoint true AtomicLong sent new AtomicLong try produce sent catch Exception expected
broker setDataDirectoryFile dataDir broker start AtomicLong consumed new AtomicLong consume consumed LOG info consumed broker getPersistenceAdapter checkpoint true AtomicLong sent new AtomicLong try produce sent catch Exception expected LOG info sent LOG info sent System out println int read System in read System err println read
consume consumed LOG info consumed broker getPersistenceAdapter checkpoint true AtomicLong sent new AtomicLong try produce sent catch Exception expected LOG info sent LOG info sent System out println int read System in read System err println read LOG info sent try produce sent
broker getPersistenceAdapter checkpoint true AtomicLong sent new AtomicLong try produce sent catch Exception expected LOG info sent LOG info sent System out println int read System in read System err println read LOG info sent try produce sent catch Exception expected LOG info sent
public void createBroker boolean deleteAllMessages boolean recover throws Exception service new BrokerService service setBrokerName service setDeleteAllMessagesOnStartup deleteAllMessages service setPersistent true KahaDBPersistenceAdapter pa new KahaDBPersistenceAdapter File dataFile new File pa setDirectory dataFile pa setJournalMaxFileLength pa setPreallocationScope Journal PreallocationScope ENTIRE_JOURNAL name pa setCheckpointInterval TimeUnit SECONDS toMillis pa setCleanupInterval TimeUnit SECONDS toMillis if recover for File index FileUtils listFiles dataFile new WildcardFileFilter TrueFileFilter INSTANCE
while true int counter if msg null break end start System currentTimeMillis int size while end start msg BytesMessage consumer receive if msg null break counter consumed end System currentTimeMillis size msg getBodyLength LOG info counter end start size end start
LOG info messageSize start System currentTimeMillis final AtomicBoolean stop new AtomicBoolean Runtime getRuntime addShutdownHook new Thread Override public void run stop set true int produced while stop get end start System currentTimeMillis int produceCount while end start stop get BytesMessage bm session createBytesMessage bm writeBytes new byte messageSize producer send bm
Test public void testAddRemoveAddIndexSize throws Exception brokerService new BrokerService brokerService setUseJmx false SystemUsage usage brokerService getSystemUsage usage getMemoryUsage setLimit String body new String new byte Destination destination new Queue brokerService new ActiveMQQueue null new DestinationStatistics null brokerService start underTest new FilePendingMessageCursor brokerService getBroker false underTest setSystemUsage usage LOG info final PageFile pageFile PListImpl underTest getDiskList getPageFile
Test public void testAddRemoveAddIndexSize throws Exception brokerService new BrokerService brokerService setUseJmx false SystemUsage usage brokerService getSystemUsage usage getMemoryUsage setLimit String body new String new byte Destination destination new Queue brokerService new ActiveMQQueue null new DestinationStatistics null brokerService start underTest new FilePendingMessageCursor brokerService getBroker false underTest setSystemUsage usage LOG info final PageFile pageFile PListImpl underTest getDiskList getPageFile LOG info pageFile getPageCount
Test public void testAddRemoveAddIndexSize throws Exception brokerService new BrokerService brokerService setUseJmx false SystemUsage usage brokerService getSystemUsage usage getMemoryUsage setLimit String body new String new byte Destination destination new Queue brokerService new ActiveMQQueue null new DestinationStatistics null brokerService start underTest new FilePendingMessageCursor brokerService getBroker false underTest setSystemUsage usage LOG info final PageFile pageFile PListImpl underTest getDiskList getPageFile LOG info pageFile getPageCount LOG info pageFile getFreePageCount
mqMessage setStringProperty body mqMessage setMessageId new MessageId i mqMessage setMemoryUsage usage getMemoryUsage mqMessage setRegionDestination destination underTest addMessageLast new IndirectMessageReference mqMessage assertFalse usage getTempUsage underTest isFull underTest reset long receivedCount while underTest hasNext MessageReference ref underTest next underTest remove ref decrementReferenceCount assertEquals receivedCount ref getMessageId getProducerSequenceId assertEquals receivedCount numMessages LOG info pageFile getPageCount
mqMessage setMessageId new MessageId i mqMessage setMemoryUsage usage getMemoryUsage mqMessage setRegionDestination destination underTest addMessageLast new IndirectMessageReference mqMessage assertFalse usage getTempUsage underTest isFull underTest reset long receivedCount while underTest hasNext MessageReference ref underTest next underTest remove ref decrementReferenceCount assertEquals receivedCount ref getMessageId getProducerSequenceId assertEquals receivedCount numMessages LOG info pageFile getPageCount LOG info pageFile getFreePageCount
assertFalse usage getTempUsage underTest isFull underTest reset long receivedCount while underTest hasNext MessageReference ref underTest next underTest remove ref decrementReferenceCount assertEquals receivedCount ref getMessageId getProducerSequenceId assertEquals receivedCount numMessages LOG info pageFile getPageCount LOG info pageFile getFreePageCount LOG info pageFile getPageContentSize assertEquals initialPageCount pageFile getPageCount pageFile getFreePageCount LOG info underTest destroy
assertFalse usage getTempUsage underTest isFull underTest reset long receivedCount while underTest hasNext MessageReference ref underTest next underTest remove ref decrementReferenceCount assertEquals receivedCount ref getMessageId getProducerSequenceId assertEquals receivedCount numMessages LOG info pageFile getPageCount LOG info pageFile getFreePageCount LOG info pageFile getPageContentSize assertEquals initialPageCount pageFile getPageCount pageFile getFreePageCount LOG info underTest destroy
underTest reset long receivedCount while underTest hasNext MessageReference ref underTest next underTest remove ref decrementReferenceCount assertEquals receivedCount ref getMessageId getProducerSequenceId assertEquals receivedCount numMessages LOG info pageFile getPageCount LOG info pageFile getFreePageCount LOG info pageFile getPageContentSize assertEquals initialPageCount pageFile getPageCount pageFile getFreePageCount LOG info underTest destroy LOG info pageFile getPageCount
lists i store getPList String valueOf i Thread currentThread setName threadName executor Executors newFixedThreadPool class A implements Runnable Override public void run final String threadName Thread currentThread getName try for int i i iterations i PList candidate lists i numLists Thread currentThread setName candidate getName synchronized plistLocks candidate Object locator candidate addLast String valueOf i payload getFirst candidate assertTrue candidate remove locator catch Exception error
protected void sendMessages throws Exception for int i i data length i Message message createMessage i configureMessage message if verbose
protected void assertMessageValid int index Message message throws JMSException TextMessage textMessage TextMessage message String text textMessage getText if verbose
protected void consumeMessage Message message List Message messageList if verbose
LOG info connection session connection createSession false Session AUTO_ACKNOWLEDGE consumeSession createConsumerSession LOG info session LOG info consumeSession producer session createProducer null producer setDeliveryMode deliveryMode LOG info producer deliveryMode DeliveryMode PERSISTENT if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
Override protected void assertMessagesReceivedAreValid List Message receivedMessages throws JMSException super assertMessagesReceivedAreValid receivedMessages for Message message receivedMessages String userID message getStringProperty
protected void assertMessagesReceivedAreValid2 List Message receivedMessages throws JMSException super assertMessagesReceivedAreValid receivedMessages for Message message receivedMessages String userID String message getObjectProperty
public void testSpoofedJMSXUserIdIsIgnored throws Exception for int i i data length i Message message createMessage i configureMessage message message setStringProperty if verbose
public void testSpoofedJMSXUserIdIsIgnoredAsObjectProperty throws Exception for int i i data length i Message message createMessage i configureMessage message message setStringProperty if verbose
Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory LOG info sendConnection createSendConnection LOG info sendConnection start LOG info receiveConnection createReceiveConnection LOG info receiveConnection start
Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory LOG info sendConnection createSendConnection LOG info sendConnection start LOG info receiveConnection createReceiveConnection LOG info receiveConnection start LOG info sendConnection
Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory LOG info sendConnection createSendConnection LOG info sendConnection start LOG info receiveConnection createReceiveConnection LOG info receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE
super setUp connectionFactory createConnectionFactory LOG info sendConnection createSendConnection LOG info sendConnection start LOG info receiveConnection createReceiveConnection LOG info receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session
sendConnection createSendConnection LOG info sendConnection start LOG info receiveConnection createReceiveConnection LOG info receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session LOG info receiveSession producer session createProducer null producer setDeliveryMode deliveryMode
LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session LOG info receiveSession producer session createProducer null producer setDeliveryMode deliveryMode LOG info producer deliveryMode DeliveryMode PERSISTENT if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
public void testCreateTemporaryQueueThenCreateAQueueFromItsName throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Queue tempQueue session createTemporaryQueue String name tempQueue getQueueName
public void testCreateTemporaryTopicThenCreateATopicFromItsName throws Exception Session session connection createSession false Session AUTO_ACKNOWLEDGE Topic tempTopic session createTemporaryTopic String name tempTopic getTopicName
Override SuppressWarnings protected void assertMessageValid int index Message message throws JMSException Object value message getObjectProperty assertEquals data index value Map map Map message getObjectProperty assertNotNull map assertEquals map get assertEquals new Integer map get assertEquals new Long map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value
assertEquals data index value Map map Map message getObjectProperty assertNotNull map assertEquals map get assertEquals new Integer map get assertEquals new Long map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value LOG debug list assertEquals list size
assertNotNull map assertEquals map get assertEquals new Integer map get assertEquals new Long map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value LOG debug list assertEquals list size LOG debug map list List message getObjectProperty
MapMessage mapMessage MapMessage message Object value mapMessage getObject assertEquals data index value Map map Map mapMessage getObject assertNotNull map assertEquals map get assertEquals Integer valueOf map get assertEquals Long valueOf map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value
assertEquals data index value Map map Map mapMessage getObject assertNotNull map assertEquals map get assertEquals Integer valueOf map get assertEquals Long valueOf map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value LOG debug list assertEquals list size
assertNotNull map assertEquals map get assertEquals Integer valueOf map get assertEquals Long valueOf map get value map get assertTrue value Map map Map value assertEquals map get value map get assertTrue value List List list List value LOG debug list assertEquals list size LOG debug map list List mapMessage getObject
Override protected BrokerService createBroker throws Exception String uri getBrokerXml
Override protected BrokerService createBroker throws Exception String uri getBrokerXml
public void testVerifySessionCloseRedeliveryWithFailoverTransport throws Throwable Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer consumer session createConsumer destination Message message consumer receive String id message getJMSMessageID assertNotNull message
public void testVerifyConsumerAndSessionCloseRedeliveryWithFailoverTransport throws Throwable Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer consumer session createConsumer destination Message message consumer receive String id message getJMSMessageID assertNotNull message
public void testVerifyConsumerCloseSessionRollbackRedeliveryWithFailoverTransport throws Throwable Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer consumer session createConsumer destination Message message consumer receive String id message getJMSMessageID assertNotNull message
public void testSendWithClientWriteTimeout throws Exception final ActiveMQQueue dest new ActiveMQQueue messageTextPrefix initMessagePrefix URI tcpBrokerUri URISupport removeQuery broker getTransportConnectors get getConnectUri
public void testWriteTimeout throws Exception Destination dest new ActiveMQQueue messageTextPrefix initMessagePrefix sendMessages dest URI tcpBrokerUri URISupport removeQuery broker getTransportConnectors get getConnectUri
public void testWriteTimeoutStompNio throws Exception ActiveMQQueue dest new ActiveMQQueue messageTextPrefix initMessagePrefix sendMessages dest URI stompBrokerUri URISupport removeQuery broker getTransportConnectors get getConnectUri
frame stompConnection receiveFrame assertTrue frame startsWith frame dest getQueueName Stomp NULL stompConnection sendFrame frame proxy pause TimeUnit SECONDS sleep TimeUnit SECONDS sleep proxy goOn frame stompConnection receiveFrame assertTrue frame startsWith try for int i i i stompConnection send dest getPhysicalName i fail catch SocketException expected
allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext registerMBean with any Object class with equal new ObjectName allowing managementContext getObjectInstance with equal new ObjectName atLeast maxReconnects of managementContext registerMBean with any Object class with new NetworkBridgeObjectNameMatcher ObjectName new ObjectName proxy getUrl getPort will new CustomAction Override public Object invoke Invocation invocation throws Throwable LOG info invocation getParameter mbeanRegistered release return new ObjectInstance ObjectName invocation getParameter
for Thread t threads existingNames add t getName final int idleThreadCount threads length LOG info idleThreadCount final int noConnectionToCreate for int i i i ActiveMQConnectionFactory factory new ActiveMQConnectionFactory group LOG info Connection connection factory createConnection connection setClientID connection close Thread sleep threads getThreads for Thread t threads if existingNames contains t getName
private int tryToFetchMissingMessages throws JMSException Connection connection cf createConnection connection start Session session connection createSession true MessageConsumer consumer session createConsumer session createQueue QUEUE_NAME int count while true Message message consumer receive if message null break
for int i i MESSAGE_COUNT i Message message consumer receive assertNotNull message if i restartDone bs stop bs new BrokerService bs setPersistent true bs setUseJmx true bs addConnector tcpUri bs start restartDone true assertEquals i message getIntProperty PROPERTY_MSG_NUMBER try session commit catch TransactionRolledBackException expectedOnOccasion
int total for ActiveMQConnection c connections String key c getTransportChannel getRemoteAddress if key null total if clientConnectionCounts containsKey key double count clientConnectionCounts get key count clientConnectionCounts put key count else clientConnectionCounts put key Set String keys clientConnectionCounts keySet for String key keys double count clientConnectionCounts get key double percentage count total
addNetworkBridge getBroker BROKER_A_NAME BROKER_B_CLIENT_TC_ADDRESS false null getBroker BROKER_A_NAME start addBroker BROKER_B_NAME createBroker BROKER_B_NAME TransportConnector connectorB getBroker BROKER_B_NAME addConnector BROKER_B_CLIENT_TC_ADDRESS connectorB setName connectorB setRebalanceClusterClients true connectorB setUpdateClusterClients true connectorB setUpdateClusterClientsOnRemove true addNetworkBridge getBroker BROKER_B_NAME BROKER_A_CLIENT_TC_ADDRESS false null getBroker BROKER_B_NAME start getBroker BROKER_B_NAME waitUntilStarted Thread sleep setClientUrl BROKER_A_CLIENT_TC_ADDRESS createClients Thread sleep
SuppressWarnings Test public void testFailoverClientAckMissingRedelivery throws Exception final int maxConsumers broker createBroker true broker setPlugins new BrokerPlugin new BrokerPluginSupport int consumerCount Override public Subscription addConsumer ConnectionContext context final ConsumerInfo info throws Exception if consumerCount maxConsumers context setDontSendReponse true Executors newSingleThreadExecutor execute new Runnable public void run
e printStackTrace return super addConsumer context info broker start ActiveMQConnectionFactory cf new ActiveMQConnectionFactory url cf setWatchTopicAdvisories false final ActiveMQConnection connection ActiveMQConnection cf createConnection connection start final Session consumerSession connection createSession false Session CLIENT_ACKNOWLEDGE final Queue destination consumerSession createQueue QUEUE_NAME prefetch final Vector TestConsumer testConsumers new Vector TestConsumer TestConsumer testConsumer new TestConsumer consumerSession destination connection testConsumer setMessageListener new MessageListener Override public void onMessage Message message
ActiveMQConnectionFactory cf new ActiveMQConnectionFactory url cf setWatchTopicAdvisories false final ActiveMQConnection connection ActiveMQConnection cf createConnection connection start final Session consumerSession connection createSession false Session CLIENT_ACKNOWLEDGE final Queue destination consumerSession createQueue QUEUE_NAME prefetch final Vector TestConsumer testConsumers new Vector TestConsumer TestConsumer testConsumer new TestConsumer consumerSession destination connection testConsumer setMessageListener new MessageListener Override public void onMessage Message message try LOG info message getJMSMessageID catch JMSException e e printStackTrace
final CountDownLatch shutdownConsumerAdded new CountDownLatch Executors newSingleThreadExecutor execute new Runnable public void run try LOG info TestConsumer testConsumer new TestConsumer consumerSession destination connection testConsumer setMessageListener new MessageListener Override public void onMessage Message message try LOG info message getJMSMessageID catch JMSException e e printStackTrace testConsumers add testConsumer
Override public void onMessage Message message try LOG info message getJMSMessageID catch JMSException e e printStackTrace testConsumers add testConsumer shutdownConsumerAdded countDown LOG info catch Exception e e printStackTrace broker waitUntilStopped broker createBroker false this url broker start
SuppressWarnings public void doTestFailoverConsumerDups final boolean watchTopicAdvisories throws Exception final int maxConsumers broker createBroker true broker setPlugins new BrokerPlugin new BrokerPluginSupport int consumerCount Override public Subscription addConsumer ConnectionContext context final ConsumerInfo info throws Exception if consumerCount maxConsumers watchTopicAdvisories context setDontSendReponse true Executors newSingleThreadExecutor execute new Runnable public void run
for TestConsumer testConsumer testConsumers long unconsumed testConsumer unconsumedSize LOG info testConsumer getConsumerId unconsumed totalUnconsumed unconsumed return totalUnconsumed maxConsumers prefetch final CountDownLatch shutdownConsumerAdded new CountDownLatch Executors newSingleThreadExecutor execute new Runnable public void run try LOG info testConsumers add new TestConsumer consumerSession destination connection shutdownConsumerAdded countDown LOG info catch Exception e
try LOG info testConsumers add new TestConsumer consumerSession destination connection shutdownConsumerAdded countDown LOG info catch Exception e e printStackTrace broker waitUntilStopped assertTrue Wait waitFor new Wait Condition public boolean isSatisified throws Exception int totalUnconsumed for TestConsumer testConsumer testConsumers long unconsumed testConsumer unconsumedSize LOG info testConsumer getConsumerId unconsumed
org junit Test public void testFailoverCommit throws Exception final AtomicInteger dispatchedCount new AtomicInteger final int errorAt FailType ON_COMMIT equals failType final int messageCount broker createBroker true broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void commitTransaction ConnectionContext context TransactionId xid boolean onePhase throws Exception if FailType ON_COMMIT equals failType dispatchedCount incrementAndGet errorAt for TransportConnection transportConnection broker getTransportConnectors get getConnections
final AtomicInteger dispatchedCount new AtomicInteger final int errorAt FailType ON_COMMIT equals failType final int messageCount broker createBroker true broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void commitTransaction ConnectionContext context TransactionId xid boolean onePhase throws Exception if FailType ON_COMMIT equals failType dispatchedCount incrementAndGet errorAt for TransportConnection transportConnection broker getTransportConnectors get getConnections LOG error transportConnection transportConnection serviceException new IOException else super commitTransaction context xid onePhase Override public void acknowledge ConsumerBrokerExchange consumerExchange MessageAck ack throws Exception if FailType ON_ACK equals failType ack getAckType MessageAck DELIVERED_ACK_TYPE dispatchedCount incrementAndGet errorAt for TransportConnection transportConnection broker getTransportConnectors get getConnections
for TransportConnection transportConnection broker getTransportConnectors get getConnections LOG error transportConnection transportConnection serviceException new IOException else super commitTransaction context xid onePhase Override public void acknowledge ConsumerBrokerExchange consumerExchange MessageAck ack throws Exception if FailType ON_ACK equals failType ack getAckType MessageAck DELIVERED_ACK_TYPE dispatchedCount incrementAndGet errorAt for TransportConnection transportConnection broker getTransportConnectors get getConnections LOG error transportConnection transportConnection serviceException new IOException super acknowledge consumerExchange ack Override public void postProcessDispatch MessageDispatch messageDispatch super postProcessDispatch messageDispatch if FailType ON_DISPATCH equals failType FailType ON_DISPACH_WITH_REPLAY_DELAY equals failType dispatchedCount incrementAndGet errorAt for TransportConnection transportConnection broker getTransportConnectors get getConnections
SuppressWarnings Test public void testPrefetchZeroConsumerThroughRestart throws Exception broker createBroker true final CountDownLatch pullDone new CountDownLatch broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public Response messagePull ConnectionContext context final MessagePull pull throws Exception context setDontSendReponse true pullDone countDown Executors newSingleThreadExecutor execute new Runnable public void run
private void restart boolean primary String primaryName String secondaryName throws Exception Thread sleep if primary
Thread sleep if primary LOG info primaryName stopBroker primaryName else LOG info secondaryName stopBroker secondaryName Thread sleep if primary assertAllConnectedTo urls get secondaryName assertBrokerInfo secondaryName else assertAllConnectedTo urls get primaryName assertBrokerInfo primaryName if primary
else LOG info secondaryName stopBroker secondaryName Thread sleep if primary assertAllConnectedTo urls get secondaryName assertBrokerInfo secondaryName else assertAllConnectedTo urls get primaryName assertBrokerInfo primaryName if primary LOG info primaryName createBrokerByName primaryName getBroker primaryName waitUntilStarted else
public void testBlockedFailoverSendWillReactToReadInactivityTimeout throws Exception final ActiveMQQueue dest new ActiveMQQueue messageTextPrefix initMessagePrefix URI tcpBrokerUri URISupport removeQuery broker getTransportConnectors get getConnectUri
LOG info tcpBrokerUri ActiveMQConnectionFactory factory new ActiveMQConnectionFactory tcpBrokerUri Connection c factory createConnection c start Session session c createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer dest SocketProxy proxy new SocketProxy proxy setTarget tcpBrokerUri proxy open ActiveMQConnectionFactory pFactory new ActiveMQConnectionFactory proxy getUrl final ActiveMQConnection pc ActiveMQConnection pFactory createConnection final AtomicInteger interruptCounter new AtomicInteger pc addTransportListener new TransportListener Override public void onCommand Object command Override public void onException IOException error
interruptCounter incrementAndGet Override public void transportResumed pc start final int messageCount final CountDownLatch sentOne new CountDownLatch ExecutorService executorService Executors newCachedThreadPool executorService execute new Runnable Override public void run try Session session pc createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer dest for int i i messageCount i producer send session createTextMessage messageTextPrefix i sentOne countDown
broker waitUntilStopped broker createBroker false url setDefaultPersistenceAdapter broker broker start assertTrue commitDoneLatch await TimeUnit SECONDS Message msg consumer receive LOG info msg assertNotNull msg assertNull consumer receive session commit consumer close connection close broker stop broker waitUntilStopped LOG info
setDefaultPersistenceAdapter broker broker setPlugins new BrokerPlugin new DestinationPathSeparatorBroker broker start assertTrue commitDoneLatch await TimeUnit SECONDS Message msg consumer receive LOG info msg assertNotNull msg assertNull consumer receive session commit consumer close connection close broker stop broker waitUntilStopped LOG info broker createBroker false url
setDefaultPersistenceAdapter broker LOG info broker start assertTrue sendDoneLatch await TimeUnit SECONDS Message msg consumer receive LOG info msg assertNotNull msg assertNull consumer receive consumer close connection close assertEquals RegionBroker broker getRegionBroker getDestinationStatistics getEnqueues getCount assertEquals RegionBroker broker getRegionBroker getDestinationStatistics getDequeues getCount broker stop broker waitUntilStopped LOG info
assertTrue proxy waitUntilClosed LOG info proxy open assertTrue sendDoneLatch await TimeUnit SECONDS Message msg consumer receive LOG info msg assertNotNull msg assertNull consumer receive consumer close connection close assertEquals RegionBroker broker getRegionBroker getDestinationStatistics getEnqueues getCount broker stop broker waitUntilStopped LOG info
public void testFailoverConsumerAckLost throws Exception for int i i i try
SuppressWarnings public void doTestFailoverConsumerAckLost final int pauseSeconds throws Exception broker createBroker true setDefaultPersistenceAdapter broker broker setPlugins new BrokerPlugin new BrokerPluginSupport Override public void acknowledge ConsumerBrokerExchange consumerExchange final MessageAck ack throws Exception consumerExchange getConnectionContext setDontSendReponse true Executors newSingleThreadExecutor execute new Runnable public void run
final Session consumerSession2 connection createSession true Session SESSION_TRANSACTED final MessageConsumer consumer1 consumerSession1 createConsumer destination final MessageConsumer consumer2 consumerSession2 createConsumer destination produceMessage producerSession destination produceMessage producerSession destination final Vector Message receivedMessages new Vector Message final CountDownLatch commitDoneLatch new CountDownLatch final AtomicBoolean gotTransactionRolledBackException new AtomicBoolean false Executors newSingleThreadExecutor execute new Runnable public void run LOG info try Message msg consumer1 receive LOG info msg receivedMessages add msg
TimeUnit SECONDS sleep random nextInt msg consumer1 receive LOG info msg if msg null receivedMessages add msg LOG info receivedMessages size try consumerSession1 commit catch TransactionRolledBackException expected LOG info expected gotTransactionRolledBackException set true commitDoneLatch countDown LOG info catch Exception e e printStackTrace
if msg null receivedMessages add msg LOG info receivedMessages size try consumerSession1 commit catch TransactionRolledBackException expected LOG info expected gotTransactionRolledBackException set true commitDoneLatch countDown LOG info catch Exception e e printStackTrace broker waitUntilStopped broker createBroker false url
setDefaultPersistenceAdapter broker broker start assertTrue commitDoneLatch await TimeUnit SECONDS LOG info receivedMessages size for int i i i Message msg consumer1 receive LOG info msg consumerSession1 commit if msg null msg consumer2 receive LOG info msg consumerSession2 commit assertNotNull i msg for Connection c connections c close
public void testPoolingNConsumesAfterReconnect throws Exception broker createBroker true setDefaultPersistenceAdapter broker broker setPlugins new BrokerPlugin new BrokerPluginSupport int count Override public void removeConsumer ConnectionContext context final ConsumerInfo info throws Exception if count Executors newSingleThreadExecutor execute new Runnable public void run
connection close connection cf createConnection connection start connections add connection final Session consumerSession connection createSession false Session CLIENT_ACKNOWLEDGE final int sessionCount final Stack Session sessions new Stack Session for int i i sessionCount i sessions push connection createSession false Session AUTO_ACKNOWLEDGE final int consumerCount final Deque MessageConsumer consumers new ArrayDeque MessageConsumer for int i i consumerCount i consumers push consumerSession createConsumer destination final ExecutorService executorService Executors newCachedThreadPool final FailoverTransport failoverTransport ActiveMQConnection connection getTransport narrow FailoverTransport class
Test public void testBackupsAreCreated throws Exception this transport createTransport assertNotNull failoverTransport assertTrue failoverTransport isBackup assertEquals failoverTransport getBackupPoolSize assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test public void testFailoverToBackups throws Exception this transport createTransport assertNotNull failoverTransport assertTrue failoverTransport isBackup assertEquals failoverTransport getBackupPoolSize assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
return failoverTransport getCurrentBackups assertEquals currentBrokerInfo getBrokerName broker1 stop assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG debug failoverTransport getCurrentBackups return failoverTransport getCurrentBackups assertTrue transportInterruptions assertTrue transportResumptions assertEquals currentBrokerInfo getBrokerName broker2 stop assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test public void testBackupsRefilled throws Exception this transport createTransport assertNotNull failoverTransport assertTrue failoverTransport isBackup assertEquals failoverTransport getBackupPoolSize assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
assertEquals failoverTransport getBackupPoolSize assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG debug failoverTransport getCurrentBackups return failoverTransport getCurrentBackups broker1 stop assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG debug failoverTransport getCurrentBackups return failoverTransport getCurrentBackups broker2 stop assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
protected Transport createTransport int backups throws Exception String connectionUri broker1 getTransportConnectors get getPublishableConnectString broker2 getTransportConnectors get getPublishableConnectString broker3 getTransportConnectors get getPublishableConnectString if backups connectionUri backups Transport transport TransportFactory connect new URI connectionUri transport setTransportListener new TransportListener Override public void onCommand Object command LOG debug command if command BrokerInfo currentBrokerInfo BrokerInfo command LOG info currentBrokerInfo Override public void onException IOException error LOG debug error Override public void transportInterupted transportInterruptions
connectionUri backups Transport transport TransportFactory connect new URI connectionUri transport setTransportListener new TransportListener Override public void onCommand Object command LOG debug command if command BrokerInfo currentBrokerInfo BrokerInfo command LOG info currentBrokerInfo Override public void onException IOException error LOG debug error Override public void transportInterupted transportInterruptions LOG debug transportInterruptions Override public void transportResumed transportResumptions
public void testNoBrokersInBrokerInfo throws Exception final BrokerInfo info new BrokerInfo TransportListener listener new TransportListener Override public void onCommand Object command
public void testUpdateURIsViaFile throws Exception String targetDir getName new File targetDir mkdir File updateFile new File targetDir
public void testUpdateURIsViaFile throws Exception String targetDir getName new File targetDir mkdir File updateFile new File targetDir LOG info updateFile
public void testUpdateURIsViaFile throws Exception String targetDir getName new File targetDir mkdir File updateFile new File targetDir LOG info updateFile LOG info updateFile toURI
public void testReconnects throws Exception for int k k k
ConnectionInfo connectionInfo3 createConnectionInfo SessionInfo sessionInfo3 createSessionInfo connectionInfo3 final ProducerInfo producerInfo3 createProducerInfo sessionInfo3 connection3 send connectionInfo3 connection3 send sessionInfo3 connection3 send producerInfo3 connection3 request createMessage producerInfo3 destination deliveryMode assertNotNull receiveMessage connection1 assertNoMessagesLeft connection1 assertNotNull receiveMessage connection2 assertNoMessagesLeft connection2 final CountDownLatch publishDone new CountDownLatch MockTransport mt MockTransport connection3 getTransport narrow MockTransport class mt install new TransportFilter mt getNext public void oneway Object command throws IOException
public void testAsyncSendPFCExistingConnection throws Exception BrokerService broker createBroker broker waitUntilStarted ConnectionFactory connectionFactory new ActiveMQConnectionFactory TRANSPORT_URL ActiveMQConnection exisitngConnection ActiveMQConnection connectionFactory createConnection ExecutorService executorService Executors newFixedThreadPool NUMBER_OF_PRODUCERS QueueView queueView getQueueView broker DESTINATION_ONE try for int i i NUMBER_OF_PRODUCERS i executorService submit new ProducerTask waitForProducerFlowControl broker queueView assertTrue getProducerView broker DESTINATION_ONE isProducerBlocked try Session producerSession exisitngConnection createSession false Session AUTO_ACKNOWLEDGE catch Exception ex
private void waitForProducerFlowControl BrokerService broker QueueView queueView throws Exception boolean blockingAllSends do blockingAllSends queueView getBlockedSends
connection setUseAsyncSend false connection setAlwaysSyncSend true else connection setUseAsyncSend true connection start try Session producerSession connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer jmsProducer producerSession createProducer producerSession createQueue destination Message sendMessage createTextMessage producerSession for int i i messageCount i jmsProducer send sendMessage numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch JMSException expected
private ProducerViewMBean getProducerView BrokerService broker String qName throws Exception ObjectName qProducers broker getAdminView getQueueProducers for ObjectName name qProducers ProducerViewMBean proxy ProducerViewMBean broker getManagementContext newProxyInstance name ProducerViewMBean class true
final ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connector getConnectUri getPort int threadNumber final CountDownLatch latch new CountDownLatch threadNumber final AtomicInteger errors new AtomicInteger final Random rand new Random for int i i threadNumber i Thread thread new Thread i Override public void run for int i i i Connection conn null try conn factory createConnection conn start Session sess conn createSession false Session AUTO_ACKNOWLEDGE int sleepTime rand nextInt
LOG info getName sleepTime Thread sleep sleepTime catch Exception e e printStackTrace errors incrementAndGet finally try conn close catch Exception e LOG info getName i LOG info getName latch countDown thread start latch await TimeUnit MINUTES
public void testValidWrapAroundPackets throws Exception int sequenceNumbers new int int value Integer MAX_VALUE transport setExpectedCounter value for int i i i
info setSelector commandId info setCommandId commandId transport onCommand info Queue exceptions listener getExceptions Queue commands listener getCommands if expected if exceptions isEmpty Exception e Exception exceptions remove e printStackTrace fail e assertEquals expectedCount commands size assertEquals transport getBufferedCommandCount else assertTrue exceptions size Exception e Exception exceptions remove
protected void sendWriteBuffer int commandId SocketAddress address ByteBuffer writeBuffer boolean redelivery throws IOException if dropCommandStrategy shouldDropCommand commandId address redelivery writeBuffer flip
protected void sendWriteBuffer int commandId SocketAddress address byte data boolean redelivery throws IOException if dropCommandStrategy shouldDropCommand commandId address redelivery
private boolean verifySslCredentials BrokerService broker throws Exception TransportConnector connector broker getTransportConnectors get URI brokerUri connector getConnectUri SSLContext context SSLContext getInstance CertChainCatcher catcher new CertChainCatcher context init null new TrustManager catcher null SSLSocketFactory factory context getSocketFactory
TransportConnector connector broker getTransportConnectors get URI brokerUri connector getConnectUri SSLContext context SSLContext getInstance CertChainCatcher catcher new CertChainCatcher context init null new TrustManager catcher null SSLSocketFactory factory context getSocketFactory LOG info broker getBrokerName brokerUri getHost brokerUri getPort SSLSocket socket SSLSocket factory createSocket brokerUri getHost brokerUri getPort socket setSoTimeout socket startHandshake socket close boolean matches false if catcher serverCerts null for int i i catcher serverCerts length i X509Certificate cert catcher serverCerts i
Map String String options new HashMap String String for int j j j optionSettings j getMthNaryDigit i j if optionSettings j optionSettings j if optionSettings j options put optionNames j optionSettings j StubSSLSocket socketStub new StubSSLSocket null StubSslTransport transport null try transport new StubSslTransport null socketStub catch Exception e fail e getMessage if verbose LOG info
for int j j j optionSettings j getMthNaryDigit i j if optionSettings j optionSettings j if optionSettings j options put optionNames j optionSettings j StubSSLSocket socketStub new StubSSLSocket null StubSslTransport transport null try transport new StubSslTransport null socketStub catch Exception e fail e getMessage if verbose LOG info LOG info i
if optionSettings j optionSettings j if optionSettings j options put optionNames j optionSettings j StubSSLSocket socketStub new StubSSLSocket null StubSslTransport transport null try transport new StubSslTransport null socketStub catch Exception e fail e getMessage if verbose LOG info LOG info i LOG info options for int x x optionSettings length x
for TransportConnector transportConnector brokerService getTransportConnectors URI uri transportConnector getPublishableConnectURI Socket socket if uri getScheme equals SSLSocket sslSocket SSLSocket SSLSocketFactory getDefault createSocket uri getPort final CountDownLatch doneHandShake new CountDownLatch sslSocket addHandshakeCompletedListener new HandshakeCompletedListener Override public void handshakeCompleted HandshakeCompletedEvent handshakeCompletedEvent doneHandShake countDown sslSocket startHandshake assertTrue doneHandShake await TimeUnit SECONDS socket sslSocket else socket new Socket uri getPort
sslSocket startHandshake assertTrue sslSocket isConnected catch IOException oops oops printStackTrace assertTrue inactivityMonitorFired await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Thread threads new Thread int activeCount Thread currentThread getThreadGroup enumerate threads for int i i activeCount i Thread thread threads i LOG info i thread if thread getName contains thread getState equals Thread State TIMED_WAITING LOG info
public void testUriOptionsWork throws Exception String uri prefix bindAddress postfix
private void testValidOptionsWork String options String msg String uri prefix bindAddress postfix options
private void testInvalidOptionsDoNotWork String options String msg String uri prefix bindAddress postfix options
public void testSendingSmallMessage throws Exception ConsumerInfo expected new ConsumerInfo expected setSelector expected setExclusive true expected setExclusive true expected setPrefetchSize try
ConsumerInfo expected new ConsumerInfo expected setSelector expected setExclusive true expected setExclusive true expected setPrefetchSize try LOG info expected producer oneway expected Command received assertCommandReceived assertTrue received received ConsumerInfo ConsumerInfo actual ConsumerInfo received assertEquals expected getSelector actual getSelector assertEquals expected isExclusive actual isExclusive assertEquals expected getPrefetchSize actual getPrefetchSize catch Exception e
protected void assertSendTextMessage ActiveMQDestination destination String text throws MessageNotWriteableException large true ActiveMQTextMessage expected new ActiveMQTextMessage expected setText text expected setDestination destination try
ActiveMQTextMessage expected new ActiveMQTextMessage expected setText text expected setDestination destination try LOG info expected getClass producer oneway expected producer oneway new ProducerInfo producer oneway new ProducerInfo Command received assertCommandReceived assertTrue received received ActiveMQTextMessage ActiveMQTextMessage actual ActiveMQTextMessage received assertEquals expected getDestination actual getDestination assertEquals expected getText actual getText LOG info actual getText length catch Exception e
consumer setTransportListener UdpTestSupport this try consumer start catch Exception e throw new RuntimeException e public void onAcceptError Exception error server start consumer createConsumer if consumer null consumer setTransportListener this consumer start producer createProducer producer setTransportListener new TransportListener public void onCommand Object command
consumer start catch Exception e throw new RuntimeException e public void onAcceptError Exception error server start consumer createConsumer if consumer null consumer setTransportListener this consumer start producer createProducer producer setTransportListener new TransportListener public void onCommand Object command LOG info command public void onException IOException error
public void onCommand Object o final Command command Command o if command WireFormatInfo
public void onCommand Object o final Command command Command o if command WireFormatInfo LOG info command else if command isResponseRequired sendResponse command if large LOG info command getClass command getCommandId else LOG info command synchronized lock if receivedCommand null receivedCommand command else
public void onException IOException error
public void testRequestResponse throws Exception ConsumerInfo expected new ConsumerInfo expected setSelector expected setResponseRequired true
public void testRequestResponse throws Exception ConsumerInfo expected new ConsumerInfo expected setSelector expected setResponseRequired true LOG info expected Response response Response producer request expected
for int i i i local oneway new DummyCommand i Thread t new Thread new Runnable Override public void run try Thread sleep remote stop catch Exception e remote start t start assertTrue expect remoteReceived size Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return remoteReceived size expect
public void testNoThreadLeak throws Exception Thread threads filterDaemonThreads ThreadExplorer listThreads final int originalThreadCount threads length
broker start cf new ActiveMQConnectionFactory connection cf createConnection connection start connection close broker stop broker waitUntilStopped final AtomicInteger threadCountAfterStop new AtomicInteger boolean ok Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info ThreadExplorer show Thread threads filterDaemonThreads ThreadExplorer listThreads threadCountAfterStop set threads length return threadCountAfterStop get originalThreadCount
public Thread filterDaemonThreads Thread threads throws Exception List Thread threadList new ArrayList Thread Arrays asList threads for int i i threadList size i Thread thread threadList get i
Session sess conn createSession false Session AUTO_ACKNOWLEDGE final Destination dest sess createQueue this getClass getName final ProducerThread producer new ProducerThread sess dest producer start assertTrue Wait waitFor new Wait Condition public boolean isSatisified throws Exception BaseDestination baseDestination BaseDestination broker getRegionBroker getDestinationMap get dest return baseDestination null baseDestination getDestinationStatistics getEnqueues getCount BaseDestination baseDestination BaseDestination broker getRegionBroker getDestinationMap get dest LOG info baseDestination getDestinationStatistics getEnqueues int sent do sent producer getSentCount TimeUnit SECONDS sleep
public void testRestartSend throws Exception Thread sleep LOG info restartBroker Thread sleep LOG info sendMessages queue Thread sleep LOG info MessageConsumer consumerA createConsumer queue MessageConsumer consumerB createConsumer queue Thread sleep MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB
public void testRestartSend throws Exception Thread sleep LOG info restartBroker Thread sleep LOG info sendMessages queue Thread sleep LOG info MessageConsumer consumerA createConsumer queue MessageConsumer consumerB createConsumer queue Thread sleep MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB LOG info messagesA
public void testSendRestart throws Exception Thread sleep LOG info sendMessages queue Thread sleep LOG info restartBroker Thread sleep LOG info MessageConsumer consumerA createConsumer queue MessageConsumer consumerB createConsumer queue Thread sleep MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB
public void testSendRestart throws Exception Thread sleep LOG info sendMessages queue Thread sleep LOG info restartBroker Thread sleep LOG info MessageConsumer consumerA createConsumer queue MessageConsumer consumerB createConsumer queue Thread sleep MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB LOG info messagesA
Override public void setUp throws Exception File dataDir new File IOHelper getDefaultDataDirectory
connection close connection null Thread sleep connection createConnection session connection createSession false Session CLIENT_ACKNOWLEDGE consumer session createConsumer queue message consumer receive if message null message acknowledge connection close connection null TimeUnit SECONDS sleep ActiveMQDestination dests broker getRegionBroker getDestinations for ActiveMQDestination destination dests String name destination getPhysicalName if name contains queue getPhysicalName
connection close connection null TimeUnit SECONDS sleep ActiveMQDestination dests broker getRegionBroker getDestinations for ActiveMQDestination destination dests String name destination getPhysicalName if name contains queue getPhysicalName LOG info name dests broker getRegionBroker getDestinations if dests null fail queue getPhysicalName broker getAdminView removeQueue queue getPhysicalName dests broker getRegionBroker getDestinations if dests null for ActiveMQDestination destination dests
MessageConsumer consumer consumerSession createConsumer dest MessageProducer prod producerSession createProducer dest Message message producerSession createMessage prod send message consumer receive connection close connection null if topic broker getAdminView removeTopic ActiveMQDestination dest getPhysicalName else broker getAdminView removeQueue ActiveMQDestination dest getPhysicalName ActiveMQDestination dests broker getRegionBroker getDestinations int matchingDestinations for ActiveMQDestination destination dests String name destination getPhysicalName
public void testAdvisoryForwarding throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic this sendMessages new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB
public void testAdvisoryForwarding throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic this sendMessages new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB LOG info messagesA
public void testAdvisoryForwardingDuplexNC throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic networkBridge setDuplex true startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic this sendMessages new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB
public void testAdvisoryForwardingDuplexNC throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic networkBridge setDuplex true startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic this sendMessages new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB LOG info messagesA
public void testBridgeRelevantAdvisoryNotAvailable throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic createConsumer new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB
public void testBridgeRelevantAdvisoryNotAvailable throws Exception ActiveMQTopic advisoryTopic new ActiveMQTopic createBroker createBroker NetworkConnector networkBridge bridgeBrokers networkBridge addStaticallyIncludedDestination advisoryTopic startAllBrokers verifyPeerBrokerInfo brokers get MessageConsumer consumerA createConsumer advisoryTopic MessageConsumer consumerB createConsumer advisoryTopic createConsumer new ActiveMQTopic MessageIdList messagesA getConsumerMessages consumerA MessageIdList messagesB getConsumerMessages consumerB LOG info messagesA
private void verifyPeerBrokerInfo BrokerItem brokerItem final int max throws Exception final BrokerService broker brokerItem broker final RegionBroker regionBroker RegionBroker broker getRegionBroker Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Session session connection createSession false Session AUTO_ACKNOWLEDGE ActiveMQDestination destination createDestination session ActiveMQDestination QUEUE_TYPE MessageProducer producer session createProducer destination producer setPriority sendMessages session producer producer close MessageProducer producer2 session createProducer destination producer2 setPriority sendMessages session producer2 producer2 close session close Session consumerSession connection createSession true Session SESSION_TRANSACTED MessageConsumer messageConsumer consumerSession createConsumer destination for int i i i Message message messageConsumer receive
try while sleepCount LOG info TimeUnit SECONDS sleep catch Exception ignored super removeConnection context info error startAllBrokers waitForBridgeFormation for int i i i socketProxy halfClose sleep boolean allGood Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception long numConnections hub broker getTransportConnectors get getConnections size
createBroker new URI bridgeBrokers startAllBrokers Destination dest createDestination false sendMessages dest MESSAGE_COUNT Thread sleep int browsed browseMessages dest Thread sleep MessageConsumer clientA createConsumer dest MessageIdList msgsA getConsumerMessages clientA msgsA waitForMessagesToArrive MESSAGE_COUNT Thread sleep MessageConsumer clientB createConsumer dest MessageIdList msgsB getConsumerMessages clientB msgsB waitForMessagesToArrive MESSAGE_COUNT
browser1 start final Browser browser2 new Browser composite MESSAGE_COUNT browser2 start LOG info sendMessages composite MESSAGE_COUNT LOG info Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return browser1 getTotalCount MESSAGE_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return browser2 getTotalCount MESSAGE_COUNT browser1 join
final Browser browser2 new Browser composite MESSAGE_COUNT browser2 start LOG info sendMessages composite MESSAGE_COUNT LOG info Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return browser1 getTotalCount MESSAGE_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return browser2 getTotalCount MESSAGE_COUNT browser1 join browser2 join
protected int browseMessages QueueBrowser browser String name throws Exception Enumeration msgs browser getEnumeration int browsedMessage while msgs hasMoreElements browsedMessage ActiveMQTextMessage message ActiveMQTextMessage msgs nextElement
public void testSendReceive throws Exception messages clear Destination destinations getDestinations int destIdx for int i i data length i Message message session createTextMessage data i if verbose
SuppressWarnings Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createConnection sendConnection start receiveConnection createConnection receiveConnection start
SuppressWarnings Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createConnection sendConnection start receiveConnection createConnection receiveConnection start LOG info sendConnection
SuppressWarnings Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createConnection sendConnection start receiveConnection createConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE
SuppressWarnings Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createConnection sendConnection start receiveConnection createConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session
SuppressWarnings Override protected void setUp throws Exception super setUp connectionFactory createConnectionFactory sendConnection createConnection sendConnection start receiveConnection createConnection receiveConnection start LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session LOG info receiveSession producer session createProducer null
LOG info sendConnection LOG info receiveConnection session sendConnection createSession false Session AUTO_ACKNOWLEDGE receiveSession receiveConnection createSession false Session AUTO_ACKNOWLEDGE LOG info session LOG info receiveSession producer session createProducer null LOG info producer if topic consumerDestination session createTopic getConsumerSubject producerDestination session createTopic getProducerSubject else consumerDestination session createQueue getConsumerSubject producerDestination session createQueue getProducerSubject LOG info consumerDestination consumerDestination getClass
SuppressWarnings Override protected void assertMessagesAreReceived throws JMSException waitForMessagesToBeDelivered int size messageLists length for int i i size i
if i i jobs executor execute new Runnable final ConnectionFactory factory createConnectionFactory Override public void run try final Connection connection factory createConnection connection start final Session session connection createSession false Session AUTO_ACKNOWLEDGE for int j j jobs j final MessageProducer producer session createProducer new ActiveMQQueue j destinationCount producer send session createMessage connection close allDone countDown LOG info catch Exception ignored
exceptions add ignored else executor execute new Runnable final ConnectionFactory factory createConnectionFactory Override public void run try final Connection connection factory createConnection connection start final Session session connection createSession false Session AUTO_ACKNOWLEDGE for int j j jobs j final MessageConsumer consumer session createConsumer new ActiveMQQueue consumer receiveNoWait connection close allDone countDown
final int consumersToActivate final Object addConsumerSignal new Object Executors newCachedThreadPool new ThreadFactory Override public Thread newThread Runnable r return new Thread r this execute new Runnable Override public void run try MessageConsumer consumer null for int i i consumersToActivate i LOG info synchronized addConsumerSignal addConsumerSignal wait TimedMessageListener listener new TimedMessageListener consumer createDurableSubscriber factory createConnection destination i
return new Thread r this execute new Runnable Override public void run try MessageConsumer consumer null for int i i consumersToActivate i LOG info synchronized addConsumerSignal addConsumerSignal wait TimedMessageListener listener new TimedMessageListener consumer createDurableSubscriber factory createConnection destination i LOG info consumer consumer setMessageListener listener consumers put consumer listener catch Exception e
consumer createDurableSubscriber factory createConnection destination i LOG info consumer consumer setMessageListener listener consumers put consumer listener catch Exception e LOG error e double statsWithActive produceMessages destination session producer addConsumerSignal LOG info statsWithActive statsWithActive statsWithActive statsWithActive while consumers size consumersToActivate TimeUnit SECONDS sleep long timeToFirstAccumulator for TimedMessageListener listener consumers values long time listener getFirstReceipt timeToFirstAccumulator time
for int i i numIterations i start System currentTimeMillis for int j j toSend j long singleSendstart System currentTimeMillis TextMessage msg createTextMessage session j int priority int count producer send msg DeliveryMode PERSISTENT priority max Math max max System currentTimeMillis singleSendstart if count if addConsumerSignal null synchronized addConsumerSignal addConsumerSignal notifyAll LOG info if count
TextMessage msg createTextMessage session j int priority int count producer send msg DeliveryMode PERSISTENT priority max Math max max System currentTimeMillis singleSendstart if count if addConsumerSignal null synchronized addConsumerSignal addConsumerSignal notifyAll LOG info if count LOG info count max long duration System currentTimeMillis start batchMax Math max batchMax duration sum duration
final int consumersToActivate final Object addConsumerSignal new Object Executors newCachedThreadPool new ThreadFactory Override public Thread newThread Runnable r return new Thread r this execute new Runnable Override public void run try MessageConsumer consumer null for int i i consumersToActivate i LOG info synchronized addConsumerSignal addConsumerSignal wait TimedMessageListener listener new TimedMessageListener consumer createConsumer factory createConnection destination
return new Thread r this execute new Runnable Override public void run try MessageConsumer consumer null for int i i consumersToActivate i LOG info synchronized addConsumerSignal addConsumerSignal wait TimedMessageListener listener new TimedMessageListener consumer createConsumer factory createConnection destination LOG info consumer consumer setMessageListener listener consumers put consumer listener catch Exception e
consumers put consumer listener catch Exception e LOG error e double statsWithActive produceMessages destination NUM_MESSAGES ITERATIONS session producer addConsumerSignal expectedQueueDeliveries NUM_MESSAGES ITERATIONS LOG info statsWithActive statsWithActive statsWithActive statsWithActive assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return consumers size consumersToActivate long timeToFirstAccumulator for TimedMessageListener listener consumers values long time listener getFirstReceipt timeToFirstAccumulator time
for int i i numIterations i start System currentTimeMillis for int j j toSend j long singleSendstart System currentTimeMillis TextMessage msg createTextMessage session j int priority int count producer send msg DeliveryMode PERSISTENT priority max Math max max System currentTimeMillis singleSendstart if count if addConsumerSignal null synchronized addConsumerSignal addConsumerSignal notifyAll LOG info if count
TextMessage msg createTextMessage session j int priority int count producer send msg DeliveryMode PERSISTENT priority max Math max max System currentTimeMillis singleSendstart if count if addConsumerSignal null synchronized addConsumerSignal addConsumerSignal notifyAll LOG info if count LOG info count max long duration System currentTimeMillis start batchMax Math max batchMax duration sum duration
public void testInflightWithConsumerPerMessage throws JMSException makeMessages prefetchSize
protected void testWithMessageCount int messageCount throws JMSException makeMessages messageCount
protected void doValidateConsumerPrefetch String destination final long expectedCount final boolean greaterOrEqual throws JMSException RegionBroker regionBroker RegionBroker BrokerRegistry getInstance lookup getRegionBroker for org apache activemq broker region Destination dest regionBroker getTopicRegion getDestinationMap values final org apache activemq broker region Destination target dest if dest getName equals destination try Wait waitFor new Condition public boolean isSatisified throws Exception DestinationStatistics stats target getDestinationStatistics
final org apache activemq broker region Destination target dest if dest getName equals destination try Wait waitFor new Condition public boolean isSatisified throws Exception DestinationStatistics stats target getDestinationStatistics LOG info target getName stats getInflight getCount if greaterOrEqual return stats getInflight getCount expectedCount else return stats getInflight getCount expectedCount catch Exception e throw new JMSException e toString DestinationStatistics stats dest getDestinationStatistics
Test public void testReceiveAndResendWithCompressionOff throws Exception assertTrue connection isUseCompression createProducerAndSendMessages MessageConsumer consumer session createConsumer queue TextMessage message TextMessage consumer receive assertTrue ActiveMQMessage message isCompressed
Test public void testReceiveAndResendWithCompressionOff throws Exception assertTrue connection isUseCompression createProducerAndSendMessages MessageConsumer consumer session createConsumer queue TextMessage message TextMessage consumer receive assertTrue ActiveMQMessage message isCompressed LOG debug message getText connection setUseCompression false MessageProducer producer session createProducer queue producer send message producer close message TextMessage consumer receive
private void createProducerAndSendMessages int numToSend throws Exception session connection createSession false Session CLIENT_ACKNOWLEDGE MessageProducer producer session createProducer queue for int i i numToSend i TextMessage message session createTextMessage i if i i
public void testCreateLotsOfTemporaryQueues throws Exception LOG info numberToCreate Session session connection createSession true Session AUTO_ACKNOWLEDGE for int i i numberToCreate i if i
public void testNonDiscriminatingConsumer throws Exception consumerConnection createConnection consumerConnection start
public void testDiscriminatingConsumer throws Exception consumerConnection createConnection consumerConnection start
Consumer consumer new Consumer consumerConnection JMSTYPE_EATME Thread consumerThread new Thread consumer consumerThread start producerConnection createConnection producerConnection start LOG info producerConnection try Thread sleep catch Exception e Producer producer new Producer producerConnection Thread producerThread new Thread producer producerThread start consumerThread join producer stop true if consumer getCount testSize
public void onException JMSException exception
public void onException IOException error
protected void makeConsumer int ackMode throws Exception String durableName getName String clientID getSubject
MessageConsumer consumer session createDurableSubscriber topic populateDestination topic producerConnection producerConnection close Wait waitFor broker getBroker getClients length TransportConnector connector broker getTransportConnectors get TransportConnection connection connector getConnections stream findFirst get connection stop Wait waitFor broker getBroker getClients length durableConnection ActiveMQConnection connectionFactory createConnection durableConnection setClientID durableConnection start session durableConnection createSession false Session AUTO_ACKNOWLEDGE topic session createTopic topicName consumer session createDurableSubscriber topic Message msg consumer receive
public void doTestCacheExhaustion int prefetch throws Exception createDurableSub topic publishMesssages topic org apache log4j Logger log4jLogger org apache log4j Logger getLogger AbstractStoreCursor class getCanonicalName final AtomicBoolean failed new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel Level WARN
private void printDebugClientInfo ObjectName subscribers ObjectName inactiveSubscribers final KahaDBPersistenceAdapter pa throws IOException LOG info
LOG info toString Connection con openConnection Session sess con createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer sess createDurableSubscriber topic SUBSCRIPTION_NAME selector false try do long max end System currentTimeMillis if max if inTransaction break max hardEnd System currentTimeMillis if max exit this Message message consumer receive max if message null continue if message propertyExists message acknowledge
private void sweep throws Exception LOG info int closed ArrayList String sweeped new ArrayList String try for String clientId abandonedSubscriptions
public static void exit String message Throwable e Throwable cause new RuntimeException message e
public void testDurableSubNetwork throws Exception LOG info ActiveMQConnectionFactory fact new ActiveMQConnectionFactory connector getConnectUri toString Connection conn fact createConnection conn setClientID Session session conn createSession false Destination dest session createTopic topicName TopicSubscriber sub session createDurableSubscriber Topic dest subName
public void testTwoDurableSubsInNetworkWithUnsubscribe throws Exception ActiveMQConnectionFactory fact new ActiveMQConnectionFactory connector getConnectUri toString Connection conn fact createConnection conn setClientID Session session conn createSession false Destination dest session createTopic topicName TopicSubscriber sub session createDurableSubscriber Topic dest subName
public void testTwoDurableSubsInNetworkWithUnsubscribe throws Exception ActiveMQConnectionFactory fact new ActiveMQConnectionFactory connector getConnectUri toString Connection conn fact createConnection conn setClientID Session session conn createSession false Destination dest session createTopic topicName TopicSubscriber sub session createDurableSubscriber Topic dest subName LOG info subName TopicSubscriber sub2 session createDurableSubscriber Topic dest subName2
private void restartBroker throws Exception LOG info processLock writeLock lock try destroyBroker startBroker false restartCount
try do long max end System currentTimeMillis if max if inTransaction LOG info toString break max hardEnd System currentTimeMillis if max exit this Message message consumer receive max if message null continue onClientMessage message if message propertyExists message acknowledge int trans message getIntProperty
LOG info toString break max hardEnd System currentTimeMillis if max exit this Message message consumer receive max if message null continue onClientMessage message if message propertyExists message acknowledge int trans message getIntProperty LOG info trans transCount this inTransaction false transCount int committing server committingTransaction if committing trans
Message message consumer receive max if message null continue onClientMessage message if message propertyExists message acknowledge int trans message getIntProperty LOG info trans transCount this inTransaction false transCount int committing server committingTransaction if committing trans LOG info message getIntProperty break else inTransaction true
private void sweep throws Exception LOG info int closed ArrayList String sweeped new ArrayList String try for String clientId abandonedSubscriptions
public static void exit String message Throwable e Throwable cause new RuntimeException message e
private void restartBroker throws Exception LOG info processLock writeLock lock try destroyBroker startBroker false restartCount
public static void exit String message Throwable e Throwable cause new RuntimeException message e
Connection con openConnection Session sess con createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer sess createDurableSubscriber topic SUBSCRIPTION_NAME selector false try do long max end System currentTimeMillis if max if inTransaction break max hardEnd System currentTimeMillis if max exit this Message message consumer receive max if message null continue onClientMessage message if message propertyExists message acknowledge
private void sweep throws Exception LOG info int closed ArrayList String sweeped new ArrayList String try for String clientId abandonedSubscriptions sweeped add clientId
public static void exit String message Throwable e Throwable log new RuntimeException message e log printStackTrace
private void restartBroker throws Exception LOG info processLock writeLock lock try destroyBroker startBroker false restartCount
Connection con openConnection Session sess con createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer sess createDurableSubscriber topic SUBSCRIPTION_NAME selector false try do long max end System currentTimeMillis if max if inTransaction break max hardEnd System currentTimeMillis if max exit this Message message consumer receive max if message null continue onClientMessage message if message propertyExists message acknowledge
private void sweep throws Exception LOG info int closed ArrayList String sweeped new ArrayList String try for String clientId abandonedSubscriptions
public static void exit String message Throwable e Throwable cause new RuntimeException message e
session close con close final CountDownLatch goOn new CountDownLatch Thread sendThread new Thread Override public void run try final Connection sendCon createConnection final Session sendSession sendCon createSession false Session AUTO_ACKNOWLEDGE final MessageProducer producer sendSession createProducer null for int i i messageCount i boolean filter i Message message sendSession createMessage message setStringProperty filter producer send topic message if i i
session createDurableSubscriber topic true session close con close final Connection sendCon createConnection final Session sendSession sendCon createSession false Session AUTO_ACKNOWLEDGE final MessageProducer producer sendSession createProducer null Thread sendThread new Thread public void run try for int i i messageCount i boolean filter i Message message sendSession createMessage message setStringProperty filter producer send topic message if i i
public void testDurableSubscriberNonPersistentMessage String interest LOG info try createConsumer interest Thread sleep Producer producer new Producer brokerURL interest messageSize ttl producer sendMessages totalMsgCount producer close
public void testDurableSubscriberNonPersistentMessage String interest LOG info try createConsumer interest Thread sleep Producer producer new Producer brokerURL interest messageSize ttl producer sendMessages totalMsgCount producer close LOG info totalMsgCount createConsumer interest initialMaxMsgs Thread sleep reconnectSleep createConsumer interest cleanupMsgCount String brokerVersion String mbeanServer getAttribute new ObjectName
createConsumer interest Thread sleep Producer producer new Producer brokerURL interest messageSize ttl producer sendMessages totalMsgCount producer close LOG info totalMsgCount createConsumer interest initialMaxMsgs Thread sleep reconnectSleep createConsumer interest cleanupMsgCount String brokerVersion String mbeanServer getAttribute new ObjectName LOG info brokerVersion final String theJmxObject assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Integer pendingQueueSize Integer mbeanServer getAttribute new ObjectName theJmxObject
createConsumer interest initialMaxMsgs Thread sleep reconnectSleep createConsumer interest cleanupMsgCount String brokerVersion String mbeanServer getAttribute new ObjectName LOG info brokerVersion final String theJmxObject assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Integer pendingQueueSize Integer mbeanServer getAttribute new ObjectName theJmxObject LOG info pendingQueueSize return pendingQueueSize intValue assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Long cursorMemoryUsage Long mbeanServer getAttribute new ObjectName theJmxObject
final String theJmxObject assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Integer pendingQueueSize Integer mbeanServer getAttribute new ObjectName theJmxObject LOG info pendingQueueSize return pendingQueueSize intValue assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Long cursorMemoryUsage Long mbeanServer getAttribute new ObjectName theJmxObject LOG info cursorMemoryUsage return cursorMemoryUsage longValue 0L assertTrue totalMsgReceived initialMaxMsgs cleanupMsgCount catch Exception e
public void createConsumer String interest int maxMsgs int messageReceived int messagesNotReceived LOG info Consumer consumer null try consumer new Consumer consumerBrokerURL interest clientId for int i i maxMsgs i try Message msg consumer getMessage messageTimeout if msg null
public void createConsumer String interest int maxMsgs int messageReceived int messagesNotReceived LOG info Consumer consumer null try consumer new Consumer consumerBrokerURL interest clientId for int i i maxMsgs i try Message msg consumer getMessage messageTimeout if msg null LOG debug msg toString messageReceived totalMsgReceived else
Consumer consumer null try consumer new Consumer consumerBrokerURL interest clientId for int i i maxMsgs i try Message msg consumer getMessage messageTimeout if msg null LOG debug msg toString messageReceived totalMsgReceived else LOG debug i messagesNotReceived Thread sleep sleep catch InterruptedException ie
for int i i maxMsgs i try Message msg consumer getMessage messageTimeout if msg null LOG debug msg toString messageReceived totalMsgReceived else LOG debug i messagesNotReceived Thread sleep sleep catch InterruptedException ie LOG debug ie consumer close LOG info
try Message msg consumer getMessage messageTimeout if msg null LOG debug msg toString messageReceived totalMsgReceived else LOG debug i messagesNotReceived Thread sleep sleep catch InterruptedException ie LOG debug ie consumer close LOG info LOG info messageReceived
if msg null LOG debug msg toString messageReceived totalMsgReceived else LOG debug i messagesNotReceived Thread sleep sleep catch InterruptedException ie LOG debug ie consumer close LOG info LOG info messageReceived LOG info messagesNotReceived catch JMSException e
Connection conSpoke facSpoke createConnection conHub setClientID conSpoke setClientID conHub start conSpoke start Session sesHub conHub createSession false Session AUTO_ACKNOWLEDGE Session sesSpoke conSpoke createSession false Session AUTO_ACKNOWLEDGE ActiveMQTopic topic new ActiveMQTopic String consumerName MessageConsumer remoteConsumer sesSpoke createDurableSubscriber topic consumerName remoteConsumer setMessageListener new MessageListener public void onMessage Message msg try TextMessage textMsg TextMessage msg receivedMsgs
MessageProducer localProducer sesSpoke createProducer topic localProducer setDeliveryMode DeliveryMode PERSISTENT final String payloadString new String new byte for int i i MESSAGE_COUNT i Message test sesSpoke createTextMessage i test setStringProperty payloadString localProducer send test localProducer close final String options for int i i i brokers get SPOKE broker stop sleep createBroker new URI SPOKE options bridge SPOKE HUB brokers get SPOKE broker start
private int countMbeans BrokerService broker String type int timeout throws Exception final long expiryTime System currentTimeMillis timeout if type contains type type final ObjectName beanName new ObjectName broker getBrokerName type Set ObjectName mbeans null int count do if timeout Thread sleep mbeans broker getManagementContext queryNames beanName null if mbeans null count mbeans size LOG info count type for ObjectName objectName mbeans
private void logAllMbeans BrokerService broker throws MalformedURLException try Set all broker getManagementContext queryNames null null
private void logAllMbeans BrokerService broker throws MalformedURLException try Set all broker getManagementContext queryNames null null LOG info all size for Object o all
Test public void testHanging throws Exception registerDurableSubscription produceExpiredAndOneNonExpiredMessages TimeUnit SECONDS sleep Message message collectMessagesFromDurableSubscriptionForOneMinute
Parameterized Parameters name public static Collection Object getTestParameters String osName System getProperty
sent Message message session createMessage message setStringProperty producer send topic message Thread sleep session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber topic true DurableSubscriptionOfflineTestListener listener new DurableSubscriptionOfflineTestListener consumer setMessageListener listener Thread sleep session close con close
session con createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer null int sent for int i i i sent Message message session createMessage producer send topic message session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber topic null true for int i i sent i Message m consumer receive assertNotNull i m
int sent for int i i i sent Message message session createMessage producer send topic message session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber topic null true for int i i sent i Message m consumer receive assertNotNull i m LOG info i m ObjectName activeDurableSubName broker getAdminView getDurableTopicSubscribers
Parameterized Parameters name public static Collection PersistenceAdapterChoice getTestParameters String osName System getProperty
con createConnection session con createSession false Session AUTO_ACKNOWLEDGE session createDurableSubscriber topic true session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer null int filtered for int i i i boolean filter int Math random if filter filtered Message message session createMessage message setStringProperty filter producer send topic message
LOG info filtered Thread sleep session close con close Thread sleep broker stop createBroker false con createConnection session con createSession false Session AUTO_ACKNOWLEDGE producer session createProducer null for int i i i boolean filter int Math random if filter filtered Message message session createMessage message setStringProperty filter
Thread sleep session close con close assertEquals sent listener count Thread sleep broker stop createBroker false con createConnection session con createSession false Session AUTO_ACKNOWLEDGE producer session createProducer null for int i i i sent Message message session createMessage message setStringProperty producer send topic message
session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer null final int toSend final String payload new byte toString int sent for int i sent i toSend i Message message session createTextMessage payload message setStringProperty message setIntProperty i producer send topic message sent con close
sent con close LOG info sent con createConnection session con createSession false Session AUTO_ACKNOWLEDGE session unsubscribe destroyBroker createBroker false con createConnection session con createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber topic null true final DurableSubscriptionOfflineTestListener listener new DurableSubscriptionOfflineTestListener consumer setMessageListener listener assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
message setStringProperty producer send topic message session close con close ObjectName subs broker getAdminView getInactiveDurableTopicSubscribers assertEquals subs length ObjectName subName subs DurableSubscriptionViewMBean sub DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true CompositeData data sub browse assertNotNull data assertEquals data length LinkedList String idToRemove new LinkedList idToRemove add String data get idToRemove add String data get idToRemove add String data get
idToRemove add String data get idToRemove add String data get LOG info idToRemove for String id idToRemove sub removeMessage id if defaultPersistenceAdapter compareTo TestSupport PersistenceAdapterChoice JDBC for int i i i JDBCPersistenceAdapter broker getPersistenceAdapter cleanup data sub browse assertNotNull data assertEquals data length for CompositeData c data String id String c get for String removedId idToRemove assertNotEquals id removedId
Test timeout public void testOrderOnActivateDeactivate throws Exception for int i i i
try synchronized this Connection con clientFactory createConnection con setClientID id con start Session session con createSession false Session CLIENT_ACKNOWLEDGE MessageConsumer consumer session createDurableSubscriber topic null true int nextId runCount int i for i messageCount i Message message consumer receiveNoWait if message null break long producerSequenceId new MessageId message getJMSMessageID getProducerSequenceId
assertEquals id runCount message getJMSMessageID nextId producerSequenceId LOG info con getClientID i session close con close catch Throwable e e printStackTrace exceptions add e Runnable producer new Runnable final String payLoad new String new byte Override public void run try Connection con createConnection final Session sendSession con createSession true Session SESSION_TRANSACTED MessageProducer producer sendSession createProducer topic for int i i messageCount i
session con createSession false Session AUTO_ACKNOWLEDGE consumer session createDurableSubscriber topic filter true assertNotNull consumer receive assertNotNull consumer receive session close con close con createConnection session con createSession false Session AUTO_ACKNOWLEDGE producer session createProducer null sent for int i i i Message message session createMessage message setStringProperty i producer send topic message sent
session con createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer null int sent Message message session createMessage message setStringProperty message setIntProperty producer send topic message sent for int i sent i i message session createMessage message setStringProperty message setIntProperty i producer send topic message sent con close
session con createSession false Session AUTO_ACKNOWLEDGE session createDurableSubscriber topic filter true session close con close destroyBroker createBroker false con createConnection session con createSession false Session AUTO_ACKNOWLEDGE producer session createProducer null for int i sent i i message session createMessage message setStringProperty message setIntProperty i producer send topic message sent
connection start TopicSession session connection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic session createTopic getDestinationName TopicPublisher publisher session createPublisher topic LOG debug TopicSubscriber subscriber session createSubscriber topic TopicSubscriber durableSub session createDurableSubscriber topic getSubscriptionName null true LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage LOG info for int i i MSG_COUNT i assertNotNull subscriber receive LOG info assertNull durableSub receive
publisher publish session createMessage LOG info for int i i MSG_COUNT i assertNotNull subscriber receive LOG info assertNull durableSub receive LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage LOG debug durableSub close LOG debug durableSub session createDurableSubscriber topic getSubscriptionName null false LOG info assertNull durableSub receive
LOG info for int i i MSG_COUNT i assertNotNull subscriber receive LOG info for int i i MSG_COUNT i assertNotNull durableSub receive LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage LOG debug durableSub close LOG debug durableSub session createDurableSubscriber topic getSubscriptionName null true LOG info assertNull durableSub receive
connection start TopicSession session connection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic session createTopic getDestinationName TopicPublisher publisher session createPublisher topic LOG debug TopicSubscriber subscriber session createSubscriber topic TopicSubscriber durableSub session createDurableSubscriber topic getSubscriptionName null true LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage LOG info for int i i MSG_COUNT i assertNotNull subscriber receive LOG info assertNull durableSub receive
LOG info assertNull durableSub receive LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage tearDown createBroker false connection factory createTopicConnection connection setClientID getClientId connection start session connection createTopicSession false Session AUTO_ACKNOWLEDGE topic session createTopic getDestinationName publisher session createPublisher topic LOG debug durableSub session createDurableSubscriber topic getSubscriptionName null false
for int i i MSG_COUNT i assertNotNull durableSub receive LOG debug MSG_COUNT for int i i MSG_COUNT i publisher publish session createMessage tearDown createBroker false connection factory createTopicConnection connection setClientID getClientId connection start session connection createTopicSession false Session AUTO_ACKNOWLEDGE topic session createTopic getDestinationName publisher session createPublisher topic LOG debug durableSub session createDurableSubscriber topic getSubscriptionName null true
public void onException JMSException e
broker start broker waitUntilStarted ActiveMQConnectionFactory factory new ActiveMQConnectionFactory ActiveMQPrefetchPolicy prefetchPolicy new ActiveMQPrefetchPolicy prefetchPolicy setAll factory setPrefetchPolicy prefetchPolicy connection factory createConnection connection start session connection createSession false Session AUTO_ACKNOWLEDGE producer session createProducer destination producer setTimeToLive producer setDeliveryMode DeliveryMode PERSISTENT for int i i i producer send session createTextMessage DeliveryMode PERSISTENT consumer session createConsumer new ActiveMQQueue
producer send session createTextMessage catch Throwable ex ex printStackTrace producingThread start consumerThread join producingThread join final DestinationStatistics view getDestinationStatistics broker destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return view getInflight getCount assertEquals view getInflight getCount LOG info received get view getEnqueues getCount view getDequeues getCount view getDispatched getCount view getInflight getCount view getExpired getCount assertTrue Wait waitFor new Wait Condition
ex printStackTrace producingThread start consumerThread join producingThread join final DestinationStatistics view getDestinationStatistics broker destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return view getInflight getCount assertEquals view getInflight getCount LOG info received get view getEnqueues getCount view getDequeues getCount view getDispatched getCount view getInflight getCount view getExpired getCount assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception long oldEnqueues view getEnqueues getCount
connection factory createConnection session connection createSession false Session AUTO_ACKNOWLEDGE producer session createProducer destination producer setTimeToLive producer setDeliveryMode DeliveryMode NON_PERSISTENT connection start final long sendCount final Thread producingThread new Thread Override public void run try int i long tStamp System currentTimeMillis while i sendCount producer send session createTextMessage if i
if i TimeUnit SECONDS sleep catch Throwable ex ex printStackTrace producingThread start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join TimeUnit SECONDS toMillis return producingThread isAlive TimeUnit SECONDS sleep final DestinationViewMBean view createView destination Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
ex printStackTrace producingThread start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join TimeUnit SECONDS toMillis return producingThread isAlive TimeUnit SECONDS sleep final DestinationViewMBean view createView destination Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception try LOG info view getEnqueueCount view getDequeueCount view getInFlightCount view getExpiredCount view getQueueSize return view getDequeueCount view getDequeueCount view getExpiredCount view getDequeueCount view getEnqueueCount view getQueueSize
ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri connection factory createConnection session connection createSession false Session AUTO_ACKNOWLEDGE producer session createProducer destination producer setTimeToLive connection start final long sendCount final Thread producingThread new Thread Override public void run try int i long tStamp System currentTimeMillis while i sendCount producer send session createTextMessage if i
if i LOG info i System currentTimeMillis tStamp tStamp System currentTimeMillis catch Throwable ex ex printStackTrace producingThread start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join TimeUnit SECONDS toMillis return producingThread isAlive final DestinationViewMBean view createView destination Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
catch Throwable ex ex printStackTrace producingThread start assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join TimeUnit SECONDS toMillis return producingThread isAlive final DestinationViewMBean view createView destination Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info view getEnqueueCount view getDequeueCount view getInFlightCount view getExpiredCount view getQueueSize return sendCount view getExpiredCount Wait MAX_WAIT_MILLIS
createBroker final long queuePrefetch ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri queuePrefetch connection factory createConnection session connection createSession false Session CLIENT_ACKNOWLEDGE producer session createProducer destination final int ttl producer setTimeToLive ttl final long sendCount final CountDownLatch receivedOneCondition new CountDownLatch final CountDownLatch waitCondition new CountDownLatch MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try
connection factory createConnection session connection createSession false Session CLIENT_ACKNOWLEDGE producer session createProducer destination final int ttl producer setTimeToLive ttl final long sendCount final CountDownLatch receivedOneCondition new CountDownLatch final CountDownLatch waitCondition new CountDownLatch MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try LOG info message receivedOneCondition countDown waitCondition await TimeUnit MINUTES
LOG info message message acknowledge catch Exception e e printStackTrace fail e toString connection start final Thread producingThread new Thread Override public void run try int i long tStamp System currentTimeMillis while i sendCount producer send session createTextMessage if i
LOG info i System currentTimeMillis tStamp tStamp System currentTimeMillis catch Throwable ex ex printStackTrace producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
catch Throwable ex ex printStackTrace producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queuePrefetch view getDispatchCount
producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queuePrefetch view getDispatchCount assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connectionUri queuePrefetch connection factory createConnection session connection createSession false Session CLIENT_ACKNOWLEDGE producer session createProducer destination final int ttl producer setTimeToLive ttl final long sendCount final CountDownLatch receivedOneCondition new CountDownLatch final CountDownLatch waitCondition new CountDownLatch final AtomicLong received new AtomicLong MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try if LOG isDebugEnabled
producer setTimeToLive ttl final long sendCount final CountDownLatch receivedOneCondition new CountDownLatch final CountDownLatch waitCondition new CountDownLatch final AtomicLong received new AtomicLong MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message try if LOG isDebugEnabled LOG debug message receivedOneCondition countDown received incrementAndGet waitCondition await TimeUnit MINUTES if LOG isDebugEnabled
if LOG isDebugEnabled LOG debug message message acknowledge catch Exception e e printStackTrace fail e toString connection start final Thread producingThread new Thread Override public void run try int i long tStamp System currentTimeMillis while i sendCount producer send session createTextMessage
producer send session createTextMessage if i LOG info i System currentTimeMillis tStamp tStamp System currentTimeMillis catch Throwable ex ex printStackTrace producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination
tStamp System currentTimeMillis catch Throwable ex ex printStackTrace producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queuePrefetch view getDispatchCount
producingThread start assertTrue receivedOneCondition await TimeUnit SECONDS assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception producingThread join return producingThread isAlive Wait MAX_WAIT_MILLIS final DestinationViewMBean view createView destination assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return queuePrefetch view getDispatchCount assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
connection factory createConnection connection setClientID session connection createSession false Session CLIENT_ACKNOWLEDGE connection start Topic destination session createTopic producer session createProducer destination final int ttl producer setTimeToLive ttl final long sendCount TopicSubscriber sub session createDurableSubscriber destination sub close for int i i sendCount i producer send session createTextMessage DestinationViewMBean view createView ActiveMQTopic destination LOG info
Topic destination session createTopic producer session createProducer destination final int ttl producer setTimeToLive ttl final long sendCount TopicSubscriber sub session createDurableSubscriber destination sub close for int i i sendCount i producer send session createTextMessage DestinationViewMBean view createView ActiveMQTopic destination LOG info LOG info view getExpiredCount view getEnqueueCount assertEquals view getExpiredCount assertEquals view getEnqueueCount Thread sleep
assertEquals view getEnqueueCount Thread sleep LOG info view getExpiredCount view getEnqueueCount assertEquals view getExpiredCount assertEquals view getEnqueueCount final AtomicLong received new AtomicLong sub session createDurableSubscriber destination sub setMessageListener new MessageListener Override public void onMessage Message message received incrementAndGet LOG info Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return received get sendCount
Thread sleep LOG info view getExpiredCount view getEnqueueCount assertEquals view getExpiredCount assertEquals view getEnqueueCount final AtomicLong received new AtomicLong sub session createDurableSubscriber destination sub setMessageListener new MessageListener Override public void onMessage Message message received incrementAndGet LOG info Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return received get sendCount
Test public void testRemoveQueueAndProduceAfterNewConsumerAdded throws Exception MessageConsumer firstConsumer registerConsumer produceMessage Message message firstConsumer receive
Test public void testRemoveQueueAndProduceAfterNewConsumerAdded throws Exception MessageConsumer firstConsumer registerConsumer produceMessage Message message firstConsumer receive LOG info message assertEquals numberOfMessages firstConsumer close session commit Thread sleep removeQueue Thread sleep MessageConsumer secondConsumer registerConsumer produceMessage message secondConsumer receive
Test public void testRemoveQueueAndProduceBeforeNewConsumerAdded throws Exception MessageConsumer firstConsumer registerConsumer produceMessage Message message firstConsumer receive
Test public void testRemoveQueueAndProduceBeforeNewConsumerAdded throws Exception MessageConsumer firstConsumer registerConsumer produceMessage Message message firstConsumer receive LOG info message assertEquals numberOfMessages firstConsumer close session commit Thread sleep removeQueue Thread sleep produceMessage MessageConsumer secondConsumer registerConsumer message secondConsumer receive
private void produceMessage throws JMSException TextMessage textMessage session createTextMessage textMessage setText count
MessageProducer producer session createProducer destination for int i i QUEUE_SIZE i Message message session createMessage message setIntProperty i producer send message session commit finally conn close Queue queue Queue broker getRegionBroker getDestinationMap get destination ConnectionContext context new ConnectionContext context setBroker broker getBroker context getMessageEvaluationContext setDestination destination long startTimeMillis System currentTimeMillis Assert assertEquals queue moveMatchingMessagesTo context QUEUE_SIZE createDestination MOVE_TO_DESTINATION_NAME long durationMillis System currentTimeMillis startTimeMillis
MessageProducer producer session createProducer destination for int i i QUEUE_SIZE i Message message session createMessage message setIntProperty i producer send message session commit finally conn close Queue queue Queue broker getRegionBroker getDestinationMap get destination ConnectionContext context new ConnectionContext context setBroker broker getBroker context getMessageEvaluationContext setDestination destination long startTimeMillis System currentTimeMillis Assert assertEquals queue copyMatchingMessagesTo context QUEUE_SIZE createDestination MOVE_TO_DESTINATION_NAME long durationMillis System currentTimeMillis startTimeMillis
MessageProducer producer session createProducer destination for int i i QUEUE_SIZE i Message message session createMessage message setIntProperty i producer send message session commit finally conn close Queue queue Queue broker getRegionBroker getDestinationMap get destination ConnectionContext context new ConnectionContext context setBroker broker getBroker context getMessageEvaluationContext setDestination destination long startTimeMillis System currentTimeMillis Assert assertEquals queue removeMatchingMessages QUEUE_SIZE long durationMillis System currentTimeMillis startTimeMillis
Connection conn factory createConnection conn start Session sess conn createSession false Session CLIENT_ACKNOWLEDGE Queue queue sess createQueue final ProducerThread producer new ProducerThread sess queue Override protected Message createMessage int i throws Exception BytesMessage bytesMessage session createBytesMessage bytesMessage writeBytes payload return bytesMessage producer setMessageCount producer start producer join Thread sleep final Destination dest broker getDestination ActiveMQQueue queue
final Thread producerThread new Thread public void run try Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageProducer prod session createProducer queue for int i i i for int j j j int seq j if j seq Message message generateMessage session Integer toString i seq prod send message session commit messagesSent
try Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageProducer prod session createProducer queue for int i i i for int j j j int seq j if j seq Message message generateMessage session Integer toString i seq prod send message session commit messagesSent LOG info i seq if i
if j seq Message message generateMessage session Integer toString i seq prod send message session commit messagesSent LOG info i seq if i LOG info i setMessageGroupCount getMessageGroupCount LOG info messagesSent latchMessagesCreated countDown prod close session close catch Exception e
LOG error e final Thread consumerThread1 new Thread public void run try latchMessagesCreated await LOG info Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageConsumer con1 session createConsumer queue while true Message message con1 receive if message null break LOG info formatMessage message checkMessage message messageGroups1 closedGroups1
catch Exception e LOG error e final Thread consumerThread2 new Thread public void run try latchMessagesCreated await LOG info Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageConsumer con2 session createConsumer queue while true Message message con2 receive if message null break
public void checkMessage Message m String consumerId Map String Integer messageGroups Set String closedGroups throws JMSException String groupId m getStringProperty int seq m getIntProperty Integer count messageGroups get groupId if count null if m propertyExists m getBooleanProperty
int seq m getIntProperty Integer count messageGroups get groupId if count null if m propertyExists m getBooleanProperty LOG info consumerId groupId seq errorCountFirstForConsumer if seq closedGroups add groupId LOG info consumerId groupId errorCountWrongConsumerClose messageGroups put groupId else if closedGroups contains groupId closedGroups remove groupId if m propertyExists m getBooleanProperty
if m propertyExists m getBooleanProperty LOG info consumerId groupId seq errorCountFirstForConsumer if seq closedGroups add groupId LOG info consumerId groupId errorCountWrongConsumerClose messageGroups put groupId else if closedGroups contains groupId closedGroups remove groupId if m propertyExists m getBooleanProperty LOG info consumerId groupId seq errorCountFirstForConsumer if seq
msga setStringProperty producer send msga Message msgb session createTextMessage msgb setStringProperty producer send msgb new Thread worker3 start worker3Started await for int i i perBatch i Message msgc session createTextMessage msgc setStringProperty producer send msgc doneSignal await List String workers new ArrayList String messageCount keySet Collections sort workers for String worker workers
msga setStringProperty producer send msga Message msgb session createTextMessage msgb setStringProperty producer send msgb new Thread worker2 start worker2Started await for int i i perBatch i Message msgc session createTextMessage msgc setStringProperty producer send msgc doneSignal await log info messageCount get messageGroups get assertEquals messageCount get messageGroups get perBatch messageCount get intValue assertEquals messageCount get messageGroups get messageGroups get size
Message message generateMessage session group i prod send message session commit messagesSent LOG info i if i latchMessagesCreated countDown if i LOG info latchGroupsAcquired await Thread sleep LOG info messagesSent prod close session close catch Exception e
final Thread consumerThread1 new Thread public void run try Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageConsumer con1 session createConsumer queue latchMessagesCreated await while true Message message con1 receive if message null break LOG info formatMessage message session commit messagesRecvd1 if messagesRecvd1 groupNames length
con1 close session close catch Exception e LOG error e final Thread consumerThread2 new Thread public void run try latchGroupsAcquired await while consumerThread1 isAlive LOG info Session session connection createSession true Session SESSION_TRANSACTED Queue queue session createQueue queueName MessageConsumer con2 session createConsumer queue while true
for int i i numConsumers i consumedCounters add new AtomicLong 0l batchCounters add new AtomicLong 0l final int id i executorService submit new Runnable int getBatchSize return id batchSize Override public void run try Session connectionSession connection createSession false Session AUTO_ACKNOWLEDGE int batchSize getBatchSize MessageConsumer messageConsumer connectionSession createConsumer destWithPrefetch destination Message message AtomicLong consumed consumedCounters get id AtomicLong batches batchCounters get id
executorService submit new Runnable int getBatchSize return id batchSize Override public void run try Session connectionSession connection createSession false Session AUTO_ACKNOWLEDGE int batchSize getBatchSize MessageConsumer messageConsumer connectionSession createConsumer destWithPrefetch destination Message message AtomicLong consumed consumedCounters get id AtomicLong batches batchCounters get id LOG info id batchSize totalConsumed get consumed get while totalConsumed get numMessages message messageConsumer receive if message null
public void testMessageRerouting throws Exception MessageConsumer consumer createConsumer dest MessageIdList received getConsumerMessages consumer Thread sleep sendMessages dest MESSAGE_COUNT received waitForMessagesToArrive MESSAGE_COUNT
public void testMessageRerouting throws Exception MessageConsumer consumer createConsumer dest MessageIdList received getConsumerMessages consumer Thread sleep sendMessages dest MESSAGE_COUNT received waitForMessagesToArrive MESSAGE_COUNT LOG info received getMessageCount assertEquals MESSAGE_COUNT received getMessageCount brokers get broker stop brokers get broker waitUntilStopped Thread sleep sendMessages dest MESSAGE_COUNT received waitForMessagesToArrive MESSAGE_COUNT
private void assertNoUnhandeledExceptions for Entry Thread Throwable e unhandeledExceptions entrySet
brokerSslContext setTrustStore TRUST_KEYSTORE brokerSslContext setTrustStorePassword PASSWORD brokerSslContext afterPropertiesSet BrokerService brokerC brokers get broker brokerC setSslContext brokerSslContext brokerC addConnector brokerCUri brokerC start BrokerService brokerB brokers get broker brokerB setSslContext brokerSslContext brokerB addConnector brokerBUri brokerB start BrokerService brokerA brokers get broker brokerA setNetworkConnectorStartAsync true NetworkConnector networkConnector bridgeBroker brokerA brokerBUri networkConnector setSslContext brokerSslContext
brokerSslContext afterPropertiesSet BrokerService brokerC brokers get broker brokerC setSslContext brokerSslContext brokerC addConnector brokerCUri brokerC start BrokerService brokerB brokers get broker brokerB setSslContext brokerSslContext brokerB addConnector brokerBUri brokerB start BrokerService brokerA brokers get broker brokerA setNetworkConnectorStartAsync true NetworkConnector networkConnector bridgeBroker brokerA brokerBUri networkConnector setSslContext brokerSslContext LOG info brokerBUri bridgeBroker brokerA brokerCUri
bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA proxyToB getUrl toString bridgeBroker brokerA brokerCUri Executor e Executors newCachedThreadPool e execute new Runnable Override public void run LOG info try brokerA setNetworkConnectorStartAsync true brokerA start catch Exception e
Thread slowWaitThread new Thread Override public void run try slowConsumerLatch await slowConsumerTime set System currentTimeMillis startTimeMillis catch InterruptedException ex exceptions add ex Assert fail ex getMessage fastWaitThread start slowWaitThread start createConsumer FAST_SHARED_QUEUE fastConsumerLatch MessageConsumer slowConsumer createConsumer SLOW_SHARED_QUEUE slowConsumerLatch MessageIdList messageIdList brokers get consumers get slowConsumer messageIdList setProcessingDelay SLOW_CONSUMER_DELAY_MILLIS
slowConsumerLatch await slowConsumerTime set System currentTimeMillis startTimeMillis catch InterruptedException ex exceptions add ex Assert fail ex getMessage fastWaitThread start slowWaitThread start createConsumer fastDestination fastConsumerLatch MessageConsumer slowConsumer createConsumer slowDestination slowConsumerLatch MessageIdList messageIdList brokers get consumers get slowConsumer messageIdList setProcessingDelay SLOW_CONSUMER_DELAY_MILLIS persistentDelivery false sendMessages fastDestination NUM_MESSAGES sendMessages slowDestination NUM_MESSAGES
slowConsumerLatch await slowConsumerTime set System currentTimeMillis startTimeMillis catch InterruptedException ex exceptions add ex Assert fail ex getMessage fastWaitThread start slowWaitThread start createConsumer fastDestination fastConsumerLatch MessageConsumer slowConsumer createConsumer slowDestination slowConsumerLatch MessageIdList messageIdList brokers get consumers get slowConsumer messageIdList setProcessingDelay SLOW_CONSUMER_DELAY_MILLIS persistentDelivery false sendMessages fastDestination NUM_MESSAGES sendMessages slowDestination NUM_MESSAGES
private void verifyPeerBrokerInfo BrokerItem brokerItem final int max throws Exception final BrokerService broker brokerItem broker final RegionBroker regionBroker RegionBroker broker getRegionBroker Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
public void testNewConsumerCausesNewDestinationToBeAutoCreated throws Exception String wildcardText getDestinationString substring length wildcard new ActiveMQQueue wildcardText
final LinkedHashSet Message beforeRollback new LinkedHashSet Message final LinkedHashSet Message afterRollback new LinkedHashSet Message Connection connection connectionFactory createConnection Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message received add message sendMessages session commit connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
received add message sendMessages session commit connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info received size return received size MSG_COUNT beforeRollback addAll received received clear session rollback assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
final LinkedHashSet Message beforeRollback new LinkedHashSet Message final LinkedHashSet Message afterRollback new LinkedHashSet Message Connection connection connectionFactory createConnection Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message received add message sendMessages session commit connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
received add message sendMessages session commit connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info received size return received size MSG_COUNT beforeRollback addAll received received clear session rollback assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
final LinkedHashSet Message received new LinkedHashSet Message final LinkedHashSet Message beforeRollback new LinkedHashSet Message final LinkedHashSet Message afterRollback new LinkedHashSet Message Connection connection connectionFactory createConnection Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message received add message sendMessages connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
received add message sendMessages connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info received size return received size MSG_COUNT beforeRollback addAll received received clear session rollback sendMessages assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Test public void testNonBlockingMessageDeleiveryIsDelayed throws Exception final LinkedHashSet Message received new LinkedHashSet Message ActiveMQConnection connection ActiveMQConnection connectionFactory createConnection connection getRedeliveryPolicy setInitialRedeliveryDelay TimeUnit SECONDS toMillis Session session connection createSession true Session AUTO_ACKNOWLEDGE Destination destination session createQueue destinationName MessageConsumer consumer session createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message received add message sendMessages connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
int count Override public void onMessage Message message if count try session rollback LOG info count catch JMSException e LOG warn e getMessage else received add message try session commit catch JMSException e LOG warn e getMessage
final Destination dlq session createQueue final MessageConsumer consumer session createConsumer destination final MessageConsumer dlqConsumer session createConsumer dlq dlqConsumer setMessageListener new MessageListener Override public void onMessage Message message dlqed add message consumer setMessageListener new MessageListener Override public void onMessage Message message received add message sendMessages connection start assertTrue MSG_COUNT Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
Thread vmConsumerThread new Thread public void run try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory factory setOptimizedMessageDispatch true factory setObjectMessageSerializationDefered true factory setCopyMessageOnSend false Connection connection factory createConnection Session session ActiveMQSession connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination connection start consumerStarted countDown ActiveMQObjectMessage message ActiveMQObjectMessage consumer receive if message null MyObject object MyObject message getObject
Thread vmConsumerThread new Thread public void run try ActiveMQConnectionFactory factory new ActiveMQConnectionFactory factory setOptimizedMessageDispatch true factory setObjectMessageSerializationDefered true factory setCopyMessageOnSend false Connection connection factory createConnection Session session ActiveMQSession connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer destination connection start consumerStarted countDown ActiveMQObjectMessage message ActiveMQObjectMessage consumer receive if message null MyObject object MyObject message getObject
public void testOfflineDurableSubscriberTimeout throws Exception final AtomicBoolean foundLogMessage new AtomicBoolean false Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel isGreaterOrEqual Level WARN
ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectorByScheme getPublishableConnectString Connection connection connectionFactory createConnection connection start try Session producerSession connection createSession true Session SESSION_TRANSACTED MessageProducer jmsProducer producerSession createProducer producerSession createQueue DESTINATION Message sendMessage producerSession createTextMessage for int i i messageCount i sendMessage setIntProperty i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex
Connection connection connectionFactory createConnection connection start try Session producerSession connection createSession true Session SESSION_TRANSACTED MessageProducer jmsProducer producerSession createProducer producerSession createQueue DESTINATION Message sendMessage producerSession createTextMessage for int i i messageCount i sendMessage setIntProperty i jmsProducer send sendMessage producerSession commit numberOfMessageSent LOG info numberOfMessageSent return numberOfMessageSent catch Exception ex LOG info ex
private int consumeMessages int numberOfMessage throws Exception
private int consumeMessages int numberOfMessage throws Exception LOG info numberOfMessage int numberConsumedMessage ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectorByScheme getPublishableConnectString ActiveMQConnection connection ActiveMQConnection connectionFactory createConnection try connection start Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer jmsConsumer session createConsumer session createQueue DESTINATION boolean consume true while consume Message message jmsConsumer receive if message null
int numberConsumedMessage ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectorByScheme getPublishableConnectString ActiveMQConnection connection ActiveMQConnection connectionFactory createConnection try connection start Session session connection createSession true Session SESSION_TRANSACTED MessageConsumer jmsConsumer session createConsumer session createQueue DESTINATION boolean consume true while consume Message message jmsConsumer receive if message null LOG info numberConsumedMessage break int newAppId message getIntProperty numberConsumedMessage
MessageConsumer jmsConsumer session createConsumer session createQueue DESTINATION boolean consume true while consume Message message jmsConsumer receive if message null LOG info numberConsumedMessage break int newAppId message getIntProperty numberConsumedMessage LOG debug newAppId if newAppId consumedAppId fail newAppId consumedAppId consumedAppId newAppId session commit if numberConsumedMessage numberOfMessage
protected void sendMessage throws JMSException messages clear try for int i i data length i producer producerSession createProducer queue objectMessage producerSession createObjectMessage data i producer send objectMessage producerSession commit
public synchronized void onMessage Message m try objectMessage ObjectMessage m consumeMessage objectMessage messages
Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer queue String data for int i i i data for int i i messageToSend i producer send session createTextMessage data QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int received while enumeration hasMoreElements Message m Message enumeration nextElement received
Connection connection factory createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer queue String data for int i i i data for int i i messageToSend i producer send session createTextMessage data QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int received while enumeration hasMoreElements Message m Message enumeration nextElement received
MessageProducer producer session createProducer queue String data for int i i i data for int i i messageToSend i producer send session createTextMessage data Thread browserThread new Thread Override public void run try QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int received while enumeration hasMoreElements Message m Message enumeration nextElement received
Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageProducer producer session createProducer queue String data for int i i i data for int i i messageToSend i producer send session createTextMessage data MessageConsumer consumer session createConsumer queue consumer receive QueueBrowser browser session createBrowser queue Enumeration enumeration browser getEnumeration int received while enumeration hasMoreElements Message m Message enumeration nextElement received
private MessageConsumer consumeVerifyOrder Session session final int num final int base throws Exception MessageConsumer messageConsumer session createConsumer dest for int i i num Message message messageConsumer receive if message null assertEquals i base message getIntProperty i
public void testTransaction throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connection factory createConnection queue new ActiveMQQueue getClass getName getName producerSession connection createSession false Session AUTO_ACKNOWLEDGE consumerSession connection createSession true producer producerSession createProducer queue consumer consumerSession createConsumer queue consumer setMessageListener new MessageListener public void onMessage Message m try TextMessage tm TextMessage m receivedText tm getText latch countDown
consumer consumerSession createConsumer queue consumer setMessageListener new MessageListener public void onMessage Message m try TextMessage tm TextMessage m receivedText tm getText latch countDown LOG info receivedText consumerSession commit LOG info catch JMSException e try consumerSession rollback LOG info catch JMSException e1
catch JMSException e try consumerSession rollback LOG info catch JMSException e1 LOG info e1 toString e1 printStackTrace LOG info e toString e printStackTrace connection start TextMessage tm null try tm producerSession createTextMessage tm setText new Date
Test timeout public void testPriorityMessages throws Exception for int i i ITERATIONS i produceMessages produceMessages
Test timeout public void testPriorityMessages throws Exception for int i i ITERATIONS i produceMessages produceMessages LOG info i Thread sleep ArrayList Message consumeList consumeMessages
Test timeout Ignore public void testPriorityMessagesMoreThanPageSize throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend Thread sleep produceMessages Thread sleep
Test timeout Ignore public void testPriorityMessagesMoreThanPageSize throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend Thread sleep produceMessages Thread sleep LOG info i ArrayList Message consumeList consumeMessages
final int numToSend ConnectionFactory connectionFactory new ActiveMQConnectionFactory broker getTransportConnectorByScheme getPublishableConnectString Connection connection connectionFactory createConnection try Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumer session createConsumer new ActiveMQQueue connection start for int i i ITERATIONS i produceMessages numToSend produceMessages Message message consumer receive assertEquals message getJMSPriority finally connection close ArrayList Message consumeList consumeMessages
Test timeout public void testPriorityMessagesWithJmsBrowser throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages
Test timeout public void testPriorityMessagesWithJmsBrowser throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages LOG info browsed size produceMessages Thread sleep
Test timeout public void testPriorityMessagesWithJmsBrowser throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages LOG info browsed size produceMessages Thread sleep LOG info i Message message consumeOneMessage assertNotNull message assertEquals message getJMSPriority ArrayList Message consumeList consumeMessages
Test timeout public void testJmsBrowserGetsPagedIn throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages
Test timeout public void testJmsBrowserGetsPagedIn throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages LOG info browsed size assertEquals browsed size Message message consumeOneMessage Session CLIENT_ACKNOWLEDGE assertNotNull message browsed browseMessages
Test timeout public void testJmsBrowserGetsPagedIn throws Exception final int numToSend for int i i ITERATIONS i produceMessages numToSend ArrayList Message browsed browseMessages LOG info browsed size assertEquals browsed size Message message consumeOneMessage Session CLIENT_ACKNOWLEDGE assertNotNull message browsed browseMessages LOG info browsed size assertEquals browsed size ArrayList Message consumeList consumeMessages
LOG info MessageProducer consumerProducer consumerSession createProducer received getJMSReplyTo consumerProducer send consumerSession createTextMessage received getText consumerConnection close MessageConsumer replyConsumer sendSession createConsumer realReplyQ TextMessage reply TextMessage replyConsumer receive receiveTimeout assertNotNull reply assertEquals reply getText sendConnection close LOG info for BrokerService brokerService brokers final RegionBroker regionBroker RegionBroker brokerService getRegionBroker assertTrue regionBroker getBrokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Map tempTopics regionBroker getTempTopicRegion getDestinationMap
consumerProducer send consumerSession createTextMessage received getText consumerConnection close MessageConsumer replyConsumer sendSession createConsumer realReplyQ TextMessage reply TextMessage replyConsumer receive receiveTimeout assertNotNull reply assertEquals reply getText sendConnection close LOG info for BrokerService brokerService brokers final RegionBroker regionBroker RegionBroker brokerService getRegionBroker assertTrue regionBroker getBrokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception Map tempTopics regionBroker getTempTopicRegion getDestinationMap LOG info regionBroker getBrokerName tempTopics Map tempQ regionBroker getTempQueueRegion getDestinationMap
for int i i NUM_RESPONDENTS i respondentThreadPool execute new EchoRespondent brokerAFactory ExecutorService senderThreadPool Executors newCachedThreadPool BrokerItem brokerC brokers get BROKER_C ActiveMQConnectionFactory brokerCFactory new ActiveMQConnectionFactory brokerC broker getTransportConnectorByScheme getName for int i i NUM_SENDS i senderThreadPool execute new MessageSender brokerCFactory senderThreadPool shutdown senderThreadPool awaitTermination TimeUnit SECONDS TimeUnit SECONDS sleep LOG info shutdown compareAndSet false true HashSet NetworkBridge bridgesEnd new HashSet NetworkBridge for NetworkConnector networkConnector networkConnectors bridgesEnd addAll networkConnector activeBridges
TextMessage msg MessageClient cons_client int cur int tot_expected resp_cons sess createConsumer resp_dest cons_client new MessageClient resp_cons num_msg cons_client start cur while cur num_msg fatalTestError msg sess createTextMessage cur msg setIntProperty cur msg setStringProperty msg setJMSReplyTo resp_dest if cur num_msg msg setBooleanProperty true sendWithRetryOnDeletedDest req_prod msg
cur while cur num_msg fatalTestError msg sess createTextMessage cur msg setIntProperty cur msg setStringProperty msg setJMSReplyTo resp_dest if cur num_msg msg setBooleanProperty true sendWithRetryOnDeletedDest req_prod msg LOG debug msg cur cons_client waitShutdown if cons_client shutdown LOG debug else LOG debug tot_expected num_msg echoResponseFill if cons_client getNumMsgReceived tot_expected
msg setStringProperty msg setJMSReplyTo resp_dest if cur num_msg msg setBooleanProperty true sendWithRetryOnDeletedDest req_prod msg LOG debug msg cur cons_client waitShutdown if cons_client shutdown LOG debug else LOG debug tot_expected num_msg echoResponseFill if cons_client getNumMsgReceived tot_expected LOG debug tot_expected else testError true if cons_client getNumMsgReceived fatalTestError true
public void testTempTopic String prod_broker_url String cons_broker_url throws Exception Connection conn Session sess Destination cons_dest int num_msg num_msg
public void testTopic String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess String topic_name Destination cons_dest num_msg
public void testTempQueue String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess Destination cons_dest num_msg
public void testQueue String prod_broker_url String cons_broker_url throws Exception int num_msg Connection conn Session sess String queue_name Destination cons_dest num_msg
Thread start2 Thread start3 Thread start4 ThreadPoolExecutor clientExecPool final CountDownLatch clientCompletionLatch int iter fatalTestError false testError false clientExecPool new ThreadPoolExecutor CONCURRENT_CLIENT_COUNT CONCURRENT_CLIENT_COUNT TimeUnit SECONDS new ArrayBlockingQueue Runnable clientCompletionLatch new CountDownLatch TOTAL_CLIENT_ITER start1 new Thread Override public void run try edge1 start catch Exception ex
testError false clientExecPool new ThreadPoolExecutor CONCURRENT_CLIENT_COUNT CONCURRENT_CLIENT_COUNT TimeUnit SECONDS new ArrayBlockingQueue Runnable clientCompletionLatch new CountDownLatch TOTAL_CLIENT_ITER start1 new Thread Override public void run try edge1 start catch Exception ex LOG error null ex start2 new Thread Override public void run try edge2 start catch Exception ex
catch Exception ex LOG error null ex start2 new Thread Override public void run try edge2 start catch Exception ex LOG error null ex start3 new Thread Override public void run try core1 start catch Exception ex
start2 new Thread Override public void run try edge2 start catch Exception ex LOG error null ex start3 new Thread Override public void run try core1 start catch Exception ex LOG error null ex start4 new Thread
start1 start start2 start start3 start start4 start start1 join start2 join start3 join start4 join traffic_gen new TopicTrafficGenerator edge1 getConnectionUrl edge2 getConnectionUrl traffic_gen start echo_svc new EchoService edge1 getConnectionUrl echo_svc start LOG info iter
topic null session close session null t connectionFactory createConnection connection close connection t connection setClientID clientID session connection createSession false Session AUTO_ACKNOWLEDGE topic session createTopic topicName subscriber session createDurableSubscriber topic subscriberName connection start LOG info long time System currentTimeMillis Message message subscriber receive 15000L long elapsed System currentTimeMillis time
public void testNoDuplicateQueueSubsHasLowestPriority throws Exception boolean suppressQueueDuplicateSubscriptions true boolean decreaseNetworkConsumerPriority true bridgeAllBrokers suppressQueueDuplicateSubscriptions decreaseNetworkConsumerPriority final Destination dest createDestination false BrokerItem brokerB brokers get brokerB broker setPlugins new BrokerPlugin new BrokerPlugin public Broker installPlugin Broker broker throws Exception return new BrokerFilter broker final AtomicInteger count new AtomicInteger Override public void preProcessDispatch MessageDispatch messageDispatch if messageDispatch getDestination getPhysicalName contains if count getAndIncrement
public void testSubscriptionsCleanedUpRace throws Exception final BrokerItem brokerA brokers get BROKER_A Runnable tester new Runnable Override public void run for int i i NUM_ITER i Connection conn null try conn brokerA createConnection conn start final Session sess conn createSession false Session AUTO_ACKNOWLEDGE Destination destination sess createQueue ECHO_QUEUE_NAME MessageProducer producer sess createProducer destination
public void testSubscriptionsCleanedUpAfterConnectionClose throws Exception final BrokerItem brokerA brokers get BROKER_A for int i i NUM_ITER i Connection conn null try conn brokerA createConnection conn start final Session sess conn createSession false Session AUTO_ACKNOWLEDGE Destination destination sess createQueue ECHO_QUEUE_NAME MessageProducer producer sess createProducer destination
private void installEchoClientOnBrokerC throws Exception BrokerItem brokerC brokers get BROKER_C Connection conn brokerC createConnection conn start final Session sess conn createSession false Session AUTO_ACKNOWLEDGE Destination destination sess createQueue ECHO_QUEUE_NAME MessageConsumer consumer sess createConsumer destination consumer setMessageListener new MessageListener Override public void onMessage Message message TextMessage textMessage TextMessage message try Destination replyTo message getJMSReplyTo MessageProducer producer sess createProducer replyTo Message response sess createTextMessage textMessage getText
brokerItem destroy BrokerService restartedBroker createAndConfigureBroker new URI bridgeAndConfigureBrokers dynamicOnly networkTTL conduitSubs bridgeAndConfigureBrokers dynamicOnly networkTTL conduitSubs restartedBroker start waitForBridgeFormation clientA createConsumer createDestination false LOG info Thread sleep sendMessages dest msgsA getConsumerMessages clientA msgsA waitForMessagesToArrive msgsB waitForMessagesToArrive msgsC waitForMessagesToArrive Thread sleep
assertEquals msgsB getMessageCount assertEquals msgsC getMessageCount LOG info brokerItem brokers remove if brokerItem null brokerItem destroy restartedBroker createAndConfigureBroker new URI bridgeAndConfigureBrokers dynamicOnly networkTTL conduitSubs bridgeAndConfigureBrokers dynamicOnly networkTTL conduitSubs restartedBroker start waitForBridgeFormation clientA createConsumer createDestination false LOG info Thread sleep msgsA getConsumerMessages clientA
private void doTestWithConduit boolean conduitPlease throws Exception brokerA newBroker brokerB newBroker brokerB start NetworkConnector networkConnector bridgeBrokers brokerA brokerB conduitPlease brokerA start while networkConnector activeBridges size
final CountDownLatch consumersRegistered new CountDownLatch numConsumers for int i i numConsumers i final int id i consumersExecutor execute new Runnable Override public void run try Connection connection remoteConnectionFactoryForConsumers createConnection connection start Session session connection createSession false Session AUTO_ACKNOWLEDGE MessageConsumer consumerWithSelector session createConsumer destination id consumerWithSelector setMessageListener new MessageListener Override public void onMessage Message message int messageCount receivedCount incrementAndGet allReceived countDown if messageCount
protected NetworkConnector bridgeBrokers BrokerService localBroker BrokerService remoteBroker boolean conduitPlease throws Exception String uri remoteBroker getTransportConnectorByScheme getPublishableConnectString NetworkConnector connector new DiscoveryNetworkConnector new URI uri connector setName localBroker getBrokerName remoteBroker getBrokerName connector setConduitSubscriptions conduitPlease localBroker addNetworkConnector connector
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name
protected ObjectName assertRegisteredObjectName String name throws MalformedObjectNameException NullPointerException ObjectName objectName new ObjectName name LOG info name try if mbeanServer isRegistered objectName
public void testPendingTopicStat throws Exception Connection consumerCon createConnection Session consumerSession consumerCon createSession true Session AUTO_ACKNOWLEDGE MessageConsumer consumer1 consumerSession createDurableSubscriber topic true assertNotNull consumer1 DurableSubscriptionViewMBean subscriber1 null ObjectName query new ObjectName domain getName true topic getTopicName java util Set ObjectName set mbeanServer queryNames query null ObjectName subscriberObjName1 set iterator next subscriber1 MBeanServerInvocationHandler newProxyInstance mbeanServer subscriberObjName1 DurableSubscriptionViewMBean class true
public void testPendingTopicStat throws Exception Connection consumerCon createConnection Session consumerSession consumerCon createSession true Session AUTO_ACKNOWLEDGE MessageConsumer consumer1 consumerSession createDurableSubscriber topic true assertNotNull consumer1 DurableSubscriptionViewMBean subscriber1 null ObjectName query new ObjectName domain getName true topic getTopicName java util Set ObjectName set mbeanServer queryNames query null ObjectName subscriberObjName1 set iterator next subscriber1 MBeanServerInvocationHandler newProxyInstance mbeanServer subscriberObjName1 DurableSubscriptionViewMBean class true LOG info subscriber1 getPendingQueueSize
producer send topic message producerSessions commit LOG info i producerCon close LOG info subscriber1 getPendingQueueSize assertEquals subscriber1 getPendingQueueSize LOG info Connection con2 createConnection session2 con2 createSession true Session AUTO_ACKNOWLEDGE MessageConsumer consumer2 session2 createDurableSubscriber topic true final Listener listener new Listener consumer2 setMessageListener listener assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return numMessages listener count
assertEquals subscriber1 getPendingQueueSize LOG info Connection con2 createConnection session2 con2 createSession true Session AUTO_ACKNOWLEDGE MessageConsumer consumer2 session2 createDurableSubscriber topic true final Listener listener new Listener consumer2 setMessageListener listener assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return numMessages listener count LOG info listener count int pq subscriber1 getPendingQueueSize LOG info pq assertEquals pq
c start Session listenerSession c createSession false TopicSubscriber durable listenerSession createDurableSubscriber createDestination durable close durable listenerSession createDurableSubscriber createDestination durable setMessageListener this final Session session connectionFactory createConnection createSession false Session AUTO_ACKNOWLEDGE final MessageProducer producer session createProducer createDestination final Thread producingThread new Thread public void run try for long i i numMessagesToSend i producer send session createTextMessage long count produced incrementAndGet if count
producingThread start ArrayList ObjectName subON new ArrayList final ArrayList DurableSubscriptionViewMBean subViews new ArrayList subON addAll Arrays asList broker getAdminView getInactiveDurableTopicSubscribers subON addAll Arrays asList broker getAdminView getDurableTopicSubscribers assertTrue subON isEmpty for ObjectName subName subON subViews add DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true LOG info assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for DurableSubscriptionViewMBean sub subViews LOG info sub getSubscriptionName LOG info sub cursorSize
producingThread start ArrayList ObjectName subON new ArrayList final ArrayList DurableSubscriptionViewMBean subViews new ArrayList subON addAll Arrays asList broker getAdminView getInactiveDurableTopicSubscribers subON addAll Arrays asList broker getAdminView getDurableTopicSubscribers assertTrue subON isEmpty for ObjectName subName subON subViews add DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true LOG info assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for DurableSubscriptionViewMBean sub subViews LOG info sub getSubscriptionName LOG info sub cursorSize
producingThread start ArrayList ObjectName subON new ArrayList final ArrayList DurableSubscriptionViewMBean subViews new ArrayList subON addAll Arrays asList broker getAdminView getInactiveDurableTopicSubscribers subON addAll Arrays asList broker getAdminView getDurableTopicSubscribers assertTrue subON isEmpty for ObjectName subName subON subViews add DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true LOG info assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for DurableSubscriptionViewMBean sub subViews LOG info sub getSubscriptionName LOG info sub cursorSize
producingThread start ArrayList ObjectName subON new ArrayList final ArrayList DurableSubscriptionViewMBean subViews new ArrayList subON addAll Arrays asList broker getAdminView getInactiveDurableTopicSubscribers subON addAll Arrays asList broker getAdminView getDurableTopicSubscribers assertTrue subON isEmpty for ObjectName subName subON subViews add DurableSubscriptionViewMBean broker getManagementContext newProxyInstance subName DurableSubscriptionViewMBean class true LOG info assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception for DurableSubscriptionViewMBean sub subViews LOG info sub getSubscriptionName LOG info sub cursorSize
Override public void onMessage Message message long count consumed incrementAndGet if count
connectionFactory setAlwaysSyncSend true connectionFactory setProducerWindowSize ActiveMQPrefetchPolicy prefetchPolicy new ActiveMQPrefetchPolicy prefetchPolicy setAll connectionFactory setPrefetchPolicy prefetchPolicy Connection c connectionFactory createConnection c start Session listenerSession c createSession false Destination destination createDestination listenerSession listenerSession createConsumer destination setMessageListener new TopicProducerFlowControlTest final AtomicInteger blockedCounter new AtomicInteger listenerSession createConsumer new ActiveMQTopic AdvisorySupport FULL_TOPIC_PREFIX setMessageListener new MessageListener Override public void onMessage Message message try if blockedCounter get
connectionFactory setPrefetchPolicy prefetchPolicy Connection c connectionFactory createConnection c start Session listenerSession c createSession false Destination destination createDestination listenerSession listenerSession createConsumer destination setMessageListener new TopicProducerFlowControlTest final AtomicInteger blockedCounter new AtomicInteger listenerSession createConsumer new ActiveMQTopic AdvisorySupport FULL_TOPIC_PREFIX setMessageListener new MessageListener Override public void onMessage Message message try if blockedCounter get LOG info message getStringProperty AdvisorySupport MSG_PROPERTY_USAGE_NAME message getLongProperty AdvisorySupport MSG_PROPERTY_USAGE_COUNT blockedCounter get blockedCounter incrementAndGet catch Exception error error printStackTrace
final AtomicInteger blockedCounter new AtomicInteger listenerSession createConsumer new ActiveMQTopic AdvisorySupport FULL_TOPIC_PREFIX setMessageListener new MessageListener Override public void onMessage Message message try if blockedCounter get LOG info message getStringProperty AdvisorySupport MSG_PROPERTY_USAGE_NAME message getLongProperty AdvisorySupport MSG_PROPERTY_USAGE_COUNT blockedCounter get blockedCounter incrementAndGet catch Exception error error printStackTrace LOG error error final AtomicInteger warnings new AtomicInteger Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level WARN event getMessage toString contains
public void doTestTransactedProducerBlockedAndClosedWillRelease final boolean alwaysSyncSend throws Exception ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory brokerUrl connectionFactory setWatchTopicAdvisories false connectionFactory setAlwaysSyncSend alwaysSyncSend Connection c connectionFactory createConnection c start ActiveMQPrefetchPolicy prefetchPolicy new ActiveMQPrefetchPolicy prefetchPolicy setAll connectionFactory setPrefetchPolicy prefetchPolicy Session listenerSession c createSession false Destination destination createDestination listenerSession final AtomicInteger warnings new AtomicInteger Appender appender new DefaultTestAppender Override public void doAppend LoggingEvent event if event getLevel equals Level WARN event getMessage toString contains
LOG info event getMessage warnings incrementAndGet org apache log4j Logger log4jLogger org apache log4j Logger getLogger Topic class log4jLogger addAppender appender try final Session session connectionFactory createConnection createSession true Session SESSION_TRANSACTED final MessageProducer producer session createProducer destination Thread producingThread new Thread public void run try for long i i numMessagesToSend i producer send session createTextMessage long count produced incrementAndGet if count
for long i i numMessagesToSend i producer send session createTextMessage long count produced incrementAndGet if count LOG info count catch Throwable ex ex printStackTrace finally try producer close session close catch Exception e producingThread start assertTrue Wait waitFor new Wait Condition
ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory brokerUrl connectionFactory setAlwaysSyncSend true connectionFactory setProducerWindowSize ActiveMQPrefetchPolicy prefetchPolicy new ActiveMQPrefetchPolicy prefetchPolicy setAll connectionFactory setPrefetchPolicy prefetchPolicy Connection c connectionFactory createConnection c start Session listenerSession c createSession false Destination destination createDestination listenerSession listenerSession createConsumer destination setMessageListener new TopicProducerToSubFileCursorTest final AtomicInteger blockedCounter new AtomicInteger listenerSession createConsumer new ActiveMQTopic AdvisorySupport FULL_TOPIC_PREFIX setMessageListener new MessageListener Override public void onMessage Message message try
prefetchPolicy setAll connectionFactory setPrefetchPolicy prefetchPolicy Connection c connectionFactory createConnection c start Session listenerSession c createSession false Destination destination createDestination listenerSession listenerSession createConsumer destination setMessageListener new TopicProducerToSubFileCursorTest final AtomicInteger blockedCounter new AtomicInteger listenerSession createConsumer new ActiveMQTopic AdvisorySupport FULL_TOPIC_PREFIX setMessageListener new MessageListener Override public void onMessage Message message try LOG error message getStringProperty AdvisorySupport MSG_PROPERTY_USAGE_NAME message getLongProperty AdvisorySupport MSG_PROPERTY_USAGE_COUNT blockedCounter get blockedCounter incrementAndGet catch Exception error error printStackTrace
LOG error message getStringProperty AdvisorySupport MSG_PROPERTY_USAGE_NAME message getLongProperty AdvisorySupport MSG_PROPERTY_USAGE_COUNT blockedCounter get blockedCounter incrementAndGet catch Exception error error printStackTrace LOG error error final Session session connectionFactory createConnection createSession false Session AUTO_ACKNOWLEDGE final MessageProducer producer session createProducer destination Thread producingThread new Thread public void run try for long i i numMessagesToSend i producer send session createTextMessage long count produced incrementAndGet if count
public void testNoExceptionOnRedeliveryAckWithSimpleTopicConsumer throws Exception Destination destination createDestination getClass getName Connection connection createConnection final AtomicBoolean gotException new AtomicBoolean connection setExceptionListener new ExceptionListener public void onException JMSException exception
final int MSG_COUNT final AtomicBoolean error new AtomicBoolean final CountDownLatch done new CountDownLatch MSG_COUNT ExecutorService executor Executors newSingleThreadExecutor executor execute new Runnable Override public void run try for int i i MSG_COUNT i Message consumedMessage consumer receive if consumedMessage null done countDown consumedMessage acknowledge if ackMode Session SESSION_TRANSACTED commitBatch i consumerSession commit catch Exception ex
for int i i MSG_COUNT i Message consumedMessage consumer receive if consumedMessage null done countDown consumedMessage acknowledge if ackMode Session SESSION_TRANSACTED commitBatch i consumerSession commit catch Exception ex LOG error ex error set true finally if ackMode Session SESSION_TRANSACTED try consumerSession commit catch JMSException e
consumer consumerSession createConsumer queue consumer setMessageListener new MessageListener int msgCount int msgCommittedCount public void onMessage Message m try msgCount TextMessage tm TextMessage m receivedText tm getText if tm getJMSRedelivered msgRedelivered add receivedText LOG info receivedText tm getJMSRedelivered if msgCount msgRolledBack add receivedText consumerSession rollback
try msgCount TextMessage tm TextMessage m receivedText tm getText if tm getJMSRedelivered msgRedelivered add receivedText LOG info receivedText tm getJMSRedelivered if msgCount msgRolledBack add receivedText consumerSession rollback LOG info receivedText else msgCommittedCount msgCommitted add receivedText consumerSession commit
LOG info receivedText else msgCommittedCount msgCommitted add receivedText consumerSession commit LOG info receivedText if msgCommittedCount numMessages latch countDown catch JMSException e try consumerSession rollback LOG info catch JMSException e1 LOG info e1 toString e1 printStackTrace
catch JMSException e try consumerSession rollback LOG info catch JMSException e1 LOG info e1 toString e1 printStackTrace LOG info e toString e printStackTrace connection start TextMessage tm null try for int i i numMessages i tm producerSession createTextMessage
public void testTransaction throws Exception ActiveMQConnectionFactory factory new ActiveMQConnectionFactory connection factory createConnection queue new ActiveMQQueue getClass getName getName producerSession connection createSession false Session AUTO_ACKNOWLEDGE consumerSession connection createSession true producer producerSession createProducer queue consumer consumerSession createConsumer queue consumer setMessageListener new MessageListener Override public void onMessage Message m try TextMessage tm TextMessage m receivedText tm getText latch countDown
consumer consumerSession createConsumer queue consumer setMessageListener new MessageListener Override public void onMessage Message m try TextMessage tm TextMessage m receivedText tm getText latch countDown LOG info receivedText consumerSession commit LOG info catch JMSException e try consumerSession rollback LOG info catch JMSException e1
catch JMSException e try consumerSession rollback LOG info catch JMSException e1 LOG info e1 toString e1 printStackTrace LOG info e toString e printStackTrace connection start TextMessage tm null try tm producerSession createTextMessage tm setText new Date
Wait waitFor new Wait Condition public boolean isSatisified throws Exception return messagesFromC getMessageCount LOG info messagesFromC getMessageCount assertEquals messagesFromC getMessageCount destroyBroker sendMessages dest BrokerService broker createBroker new URI bridgeBrokerPair broker start Wait waitFor new Wait Condition public boolean isSatisified throws Exception return messagesFromC getMessageCount
public void setUp throws Exception File dataDir new File IOHelper getDefaultDataDirectory
bridgeBrokers bridgeBrokers startAllBrokers waitForBridgeFormation Destination dest createDestination false MessageConsumer clientA createConsumer dest MessageConsumer clientB createConsumer dest sendMessages dest sendMessages dest final MessageIdList msgsA getConsumerMessages clientA final MessageIdList msgsB getConsumerMessages clientB Wait waitFor new Wait Condition public boolean isSatisified throws Exception return msgsA getMessageCount msgsB getMessageCount
bridgeBrokers startAllBrokers waitForBridgeFormation Destination dest createDestination false MessageConsumer clientA createConsumer dest MessageConsumer clientB createConsumer dest sendMessages dest sendMessages dest final MessageIdList msgsA getConsumerMessages clientA final MessageIdList msgsB getConsumerMessages clientB Wait waitFor new Wait Condition public boolean isSatisified throws Exception return msgsA getMessageCount msgsB getMessageCount LOG info msgsA getMessageCount
public void doTwoClientsReceiveOneClientReconnects throws Exception applyRateLimitNetworkFilter MESSAGE_COUNT bridgeBrokers broker1 broker2 bridgeBrokers broker2 broker1 startAllBrokers Destination dest createDestination false MessageConsumer client1 createConsumer broker1 dest MessageConsumer client2 createConsumer broker2 dest Thread sleep sendMessages dest MESSAGE_COUNT msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT
public void doTwoClientsReceiveOneClientReconnects throws Exception applyRateLimitNetworkFilter MESSAGE_COUNT bridgeBrokers broker1 broker2 bridgeBrokers broker2 broker1 startAllBrokers Destination dest createDestination false MessageConsumer client1 createConsumer broker1 dest MessageConsumer client2 createConsumer broker2 dest Thread sleep sendMessages dest MESSAGE_COUNT msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT LOG info msgsClient1
startAllBrokers Destination dest createDestination false MessageConsumer client1 createConsumer broker1 dest MessageConsumer client2 createConsumer broker2 dest Thread sleep sendMessages dest MESSAGE_COUNT msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT LOG info msgsClient1 LOG info msgsClient2 Thread sleep LOG info client1 close LOG info msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT
sendMessages dest MESSAGE_COUNT msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT LOG info msgsClient1 LOG info msgsClient2 Thread sleep LOG info client1 close LOG info msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT LOG info msgsClient2 client1 createConsumer broker1 dest Thread sleep msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT client1 close
LOG info msgsClient2 Thread sleep LOG info client1 close LOG info msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT LOG info msgsClient2 client1 createConsumer broker1 dest Thread sleep msgsClient1 receiveExactMessages client1 int MESSAGE_COUNT client1 close LOG info msgsClient1 Thread sleep msgsClient2 receiveExactMessages client2 int MESSAGE_COUNT client2 close
protected int receiveExactMessages MessageConsumer consumer int msgCount throws Exception Message msg int i for i i msgCount i msg consumer receive if msg null
LOG info bridgeBrokers bridgeBrokers startAllBrokers waitForBridgeFormation waitForMinTopicRegionConsumerCount waitForMinTopicRegionConsumerCount final int iterations for int i i iterations i sendReceiveTempQueueMessage waitForMinTopicRegionConsumerCount waitForMinTopicRegionConsumerCount final DestinationViewMBean brokerAView createView ActiveMQDestination TOPIC_TYPE assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
waitForMinTopicRegionConsumerCount final int iterations for int i i iterations i sendReceiveTempQueueMessage waitForMinTopicRegionConsumerCount waitForMinTopicRegionConsumerCount final DestinationViewMBean brokerAView createView ActiveMQDestination TOPIC_TYPE assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception LOG info brokerAView getEnqueueCount return iterations brokerAView getEnqueueCount final DestinationViewMBean brokerBView createView ActiveMQDestination TOPIC_TYPE assertTrue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception
public void testMessageLeaks throws Exception clearSelectorCacheFiles startAllBrokers final BrokerService brokerA brokers get broker ActiveMQDestination consumerQueue createDestination false MessageConsumer consumer1 createConsumer consumerQueue MessageConsumer consumer2 createConsumer consumerQueue ActiveMQTopic virtualTopic new ActiveMQTopic ProducerThreadTester producerTester createProducerTester virtualTopic producerTester setRunIndefinitely true producerTester setSleep producerTester addMessageProperty producerTester addMessageProperty producerTester start int currentCount producerTester getSentCount
producerTester addMessageProperty producerTester addMessageProperty producerTester start int currentCount producerTester getSentCount LOG info currentCount producerTester getCountForProperty producerTester getCountForProperty Thread sleep MessageIdList consumer1Messages getConsumerMessages consumer1 consumer1Messages waitForMessagesToArrive consumer1 close consumer1 createConsumer consumerQueue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerA getDestination new ActiveMQQueue getConsumers size currentCount producerTester getSentCount
consumer1 createConsumer consumerQueue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerA getDestination new ActiveMQQueue getConsumers size currentCount producerTester getSentCount LOG info currentCount producerTester getCountForProperty producerTester getCountForProperty Thread sleep consumer2 close consumer2 createConsumer consumerQueue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerA getDestination new ActiveMQQueue getConsumers size currentCount producerTester getSentCount
return brokerA getDestination new ActiveMQQueue getConsumers size currentCount producerTester getSentCount LOG info currentCount producerTester getCountForProperty producerTester getCountForProperty Thread sleep consumer2 close consumer2 createConsumer consumerQueue Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception return brokerA getDestination new ActiveMQQueue getConsumers size currentCount producerTester getSentCount LOG info currentCount producerTester getCountForProperty producerTester getCountForProperty Thread sleep currentCount producerTester getSentCount
producer send message ActiveMQConnection replyConnection ActiveMQConnection replyFactory createConnection replyConnection setWatchTopicAdvisories false replyConnection start Session replySession replyConnection createSession false Session AUTO_ACKNOWLEDGE ActiveMQMessageConsumer replyConsumer ActiveMQMessageConsumer replySession createConsumer requestReplyDest javax jms Message msg replyConsumer receive assertNotNull i msg MessageProducer replyProducer replySession createProducer msg getJMSReplyTo replyProducer send session createTextMessage i replyConnection close javax jms Message reply consumer receive assertNotNull i tempDest consumer getConsumerId reply consumer close tempDest delete
private void assertNoUnhandledExceptions for Entry Thread Throwable e unhandledExceptions entrySet
protected void assertExactConsumersConnect final String brokerName final int count final int numChecks long timeout throws Exception final ManagementContext context brokers get brokerName broker getManagementContext final AtomicInteger stability new AtomicInteger assertTrue count brokerName Wait waitFor new Wait Condition Override public boolean isSatisified throws Exception try QueueViewMBean queueViewMBean QueueViewMBean context newProxyInstance brokers get brokerName broker getAdminView getQueues QueueViewMBean class false long currentCount queueViewMBean getConsumerCount
public void waitForMessagesToArrive int messageCount long maximumDuration
public void waitForMessagesToArrive int messageCount long maximumDuration LOG info messageCount long start System currentTimeMillis for int i i messageCount i try if hasReceivedMessages messageCount break long duration System currentTimeMillis start if duration maximumDuration break synchronized semaphore semaphore wait maximumDuration duration catch InterruptedException e LOG info e long end System currentTimeMillis start
public void assertAuthentication JMXConnector connector throws Exception connector connect MBeanServerConnection connection connector getMBeanServerConnection ObjectName name new ObjectName BrokerViewMBean mbean MBeanServerInvocationHandler newProxyInstance connection name BrokerViewMBean class true
public void testBrokerConfiguredCorrectly throws Exception assertEquals brokerService getBrokerName Topic topic Topic broker addDestination context new ActiveMQTopic true DispatchPolicy dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy RoundRobinDispatchPolicy SubscriptionRecoveryPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy
public void testBrokerConfiguredCorrectly throws Exception assertEquals brokerService getBrokerName Topic topic Topic broker addDestination context new ActiveMQTopic true DispatchPolicy dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy RoundRobinDispatchPolicy SubscriptionRecoveryPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy LOG info topic
public void testBrokerConfiguredCorrectly throws Exception assertEquals brokerService getBrokerName Topic topic Topic broker addDestination context new ActiveMQTopic true DispatchPolicy dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy RoundRobinDispatchPolicy SubscriptionRecoveryPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy LOG info topic LOG info dispatchPolicy
assertTrue dispatchPolicy dispatchPolicy RoundRobinDispatchPolicy SubscriptionRecoveryPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy LOG info topic LOG info dispatchPolicy LOG info subscriptionRecoveryPolicy topic Topic broker addDestination context new ActiveMQTopic true dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy StrictOrderDispatchPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy timedSubscriptionPolicy TimedSubscriptionRecoveryPolicy subscriptionRecoveryPolicy assertEquals timedSubscriptionPolicy getRecoverDuration
SubscriptionRecoveryPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy LOG info topic LOG info dispatchPolicy LOG info subscriptionRecoveryPolicy topic Topic broker addDestination context new ActiveMQTopic true dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy StrictOrderDispatchPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy timedSubscriptionPolicy TimedSubscriptionRecoveryPolicy subscriptionRecoveryPolicy assertEquals timedSubscriptionPolicy getRecoverDuration LOG info topic
subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy LastImageSubscriptionRecoveryPolicy LOG info topic LOG info dispatchPolicy LOG info subscriptionRecoveryPolicy topic Topic broker addDestination context new ActiveMQTopic true dispatchPolicy topic getDispatchPolicy assertTrue dispatchPolicy dispatchPolicy StrictOrderDispatchPolicy subscriptionRecoveryPolicy topic getSubscriptionRecoveryPolicy subscriptionRecoveryPolicy RetainedMessageSubscriptionRecoveryPolicy subscriptionRecoveryPolicy getWrapped assertTrue subscriptionRecoveryPolicy subscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy TimedSubscriptionRecoveryPolicy timedSubscriptionPolicy TimedSubscriptionRecoveryPolicy subscriptionRecoveryPolicy assertEquals timedSubscriptionPolicy getRecoverDuration LOG info topic LOG info dispatchPolicy
protected BrokerService createBroker throws Exception String uri
public void contextInitialized ServletContextEvent event LOG debug String webconsoleType getWebconsoleType ServletContext servletContext event getServletContext WebApplicationContext context createWebapplicationContext servletContext webconsoleType initializeWebClient servletContext context if equals webconsoleType String port System getProperty String host System getProperty if host null port null
public void contextInitialized ServletContextEvent event LOG debug String webconsoleType getWebconsoleType ServletContext servletContext event getServletContext WebApplicationContext context createWebapplicationContext servletContext webconsoleType initializeWebClient servletContext context if equals webconsoleType String port System getProperty String host System getProperty if host null port null LOG info host port
private WebApplicationContext createWebapplicationContext ServletContext servletContext String webconsoleType String configuration webconsoleType
public ModelAndView handleRequest HttpServletRequest request HttpServletResponse response throws Exception if messageId null QueueViewMBean queueView getQueueView if queueView null
public ModelAndView handleRequest HttpServletRequest request HttpServletResponse response throws Exception if jobId null JobSchedulerViewMBean jobScheduler getBrokerFacade getJobScheduler if jobScheduler null jobScheduler removeJob jobId
public ModelAndView handleRequest HttpServletRequest request HttpServletResponse response throws Exception if messageId null QueueViewMBean queueView getQueueView if queueView null
public ModelAndView handleRequest HttpServletRequest request HttpServletResponse response throws Exception if messageId null QueueViewMBean queueView getQueueView if queueView null
public ModelAndView handleRequest HttpServletRequest request HttpServletResponse response throws Exception if messageId null QueueViewMBean queueView getQueueView if queueView null
object getApplicationContext getBean handlerName if object HandlerExecutionChain HandlerExecutionChain handlerExecutionChain HandlerExecutionChain object object handlerExecutionChain getHandler if object null if object DestinationFacade if Arrays asList DestinationFacade object getSupportedHttpMethods contains request getMethod throw new UnsupportedOperationException request getMethod request getRequestURI if request getSession getAttribute null request getSession getAttribute equals request getParameter throw new UnsupportedOperationException ServletRequestDataBinder binder new ServletRequestDataBinder object try binder bind request binder setIgnoreUnknownFields true if LOG isDebugEnabled
httpClient start LOG debug String sessionId subscribe httpClient port LOG debug final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId LOG debug sendMessages httpClient port getBytes LOG debug latch await String response buf toString final StringBuffer buf2 new StringBuffer final CountDownLatch latch2 asyncRequest httpClient port buf2 sessionId latch2 await String fullResponse response buf2 toString
HttpClient httpClient new HttpClient httpClient start LOG debug String sessionId subscribe httpClient port LOG debug final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId LOG debug sendMessages httpClient port getBytes latch await String response buf toString final StringBuffer buf2 new StringBuffer final CountDownLatch latch2 asyncRequest httpClient port buf2 sessionId latch2 await String fullResponse response buf2 toString
int port getPort Message msg session createTextMessage msg setStringProperty producer send msg msg session createTextMessage msg setStringProperty producer send msg HttpClient httpClient new HttpClient httpClient start LOG debug String sessionId subscribe httpClient port null LOG debug final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId latch await
int port getPort MessageProducer producerA session createProducer session createQueue MessageProducer producerB session createProducer session createQueue producerA send session createTextMessage producerA send session createTextMessage producerB send session createTextMessage producerB send session createTextMessage HttpClient httpClient new HttpClient httpClient start LOG debug String sessionId subscribe httpClient port subscribe httpClient port null sessionId final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId latch await
httpClient start LOG debug String sessionId subscribe httpClient port subscribe httpClient port null sessionId final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId latch await LOG debug buf toString String expected1 String expected2 assertContains expected1 buf toString assertContains expected2 buf toString final StringBuffer buf2 new StringBuffer final CountDownLatch latch2 asyncRequest httpClient port buf2 sessionId latch2 await
LOG debug String sessionId subscribe httpClient port LOG debug subscribe httpClient port null sessionId final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf sessionId LOG debug sendMessages httpClient port getBytes LOG debug latch await String response buf toString final StringBuffer buf2 new StringBuffer final CountDownLatch latch2 asyncRequest httpClient port buf2 sessionId latch2 await String fullResponse response buf2 toString
Test timeout public void testCorrelation throws Exception int port getPort HttpClient httpClient new HttpClient httpClient start for int i i i String correlId RandomStringUtils randomNumeric TextMessage message session createTextMessage correlId message setStringProperty correlId message setJMSCorrelationID correlId
Test timeout public void testCorrelation throws Exception int port getPort HttpClient httpClient new HttpClient httpClient start for int i i i String correlId RandomStringUtils randomNumeric TextMessage message session createTextMessage correlId message setStringProperty correlId message setJMSCorrelationID correlId LOG info correlId producer send message final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf latch await
Test timeout public void testDisconnect throws Exception int port getPort producer send session createTextMessage HttpClient httpClient new HttpClient httpClient start final StringBuffer buf new StringBuffer final CountDownLatch latch asyncRequest httpClient port buf latch await
Override public synchronized void onMessageAvailable MessageConsumer consumer
Override public synchronized void onMessageAvailable MessageConsumer consumer LOG debug consumer continuation if continuation null try Message message consumer receive
Override public synchronized void onMessageAvailable MessageConsumer consumer LOG debug consumer continuation if continuation null try Message message consumer receive LOG debug message if message null if continuation isResumed
Override protected void doPost HttpServletRequest request HttpServletResponse response throws ServletException IOException AjaxWebClient client getAjaxWebClient request String messageIds synchronized client if LOG isDebugEnabled
synchronized client if LOG isDebugEnabled LOG debug client request getSession getId request getParameter request getPathInfo request getContentType int messages while true String destinationName request getParameter messages messages if destinationName null destinationName request getHeader String message request getParameter messages messages String type request getParameter messages messages if destinationName null message null type null break try Destination destination getDestination client request destinationName if LOG isDebugEnabled
if LOG isDebugEnabled LOG debug client request getSession getId request getParameter request getPathInfo request getContentType int messages while true String destinationName request getParameter messages messages if destinationName null destinationName request getHeader String message request getParameter messages messages String type request getParameter messages messages if destinationName null message null type null break try Destination destination getDestination client request destinationName if LOG isDebugEnabled LOG debug messages destinationName message type
break try Destination destination getDestination client request destinationName if LOG isDebugEnabled LOG debug messages destinationName message type LOG debug destination destination getClass getName messages if equals type AjaxListener listener client getListener Map MessageAvailableConsumer String consumerIdMap client getIdMap Map MessageAvailableConsumer String consumerDestinationNameMap client getDestinationNameMap client closeConsumer destination MessageAvailableConsumer consumer MessageAvailableConsumer client getConsumer destination request getHeader WebClient selectorName consumer setAvailableListener listener consumerIdMap put consumer message
AjaxListener listener client getListener Map MessageAvailableConsumer String consumerIdMap client getIdMap Map MessageAvailableConsumer String consumerDestinationNameMap client getDestinationNameMap client closeConsumer destination MessageAvailableConsumer consumer MessageAvailableConsumer client getConsumer destination request getHeader WebClient selectorName consumer setAvailableListener listener consumerIdMap put consumer message consumerDestinationNameMap put consumer destinationName if LOG isDebugEnabled LOG debug consumer destination message else if equals type Map MessageAvailableConsumer String consumerIdMap client getIdMap Map MessageAvailableConsumer String consumerDestinationNameMap client getDestinationNameMap MessageAvailableConsumer consumer MessageAvailableConsumer client getConsumer destination request getHeader WebClient selectorName consumer setAvailableListener null
consumerDestinationNameMap put consumer destinationName if LOG isDebugEnabled LOG debug consumer destination message else if equals type Map MessageAvailableConsumer String consumerIdMap client getIdMap Map MessageAvailableConsumer String consumerDestinationNameMap client getDestinationNameMap MessageAvailableConsumer consumer MessageAvailableConsumer client getConsumer destination request getHeader WebClient selectorName consumer setAvailableListener null consumerIdMap remove consumer consumerDestinationNameMap remove consumer client closeConsumer destination if LOG isDebugEnabled LOG debug consumer else if equals type TextMessage text client getSession createTextMessage message
appendParametersToMessage request text client send destination text messageIds text getJMSMessageID if LOG isDebugEnabled LOG debug message destination else LOG warn type catch JMSException e LOG warn e if equals request getParameter try doMessages client request response catch JMSException e throw new ServletException e e else
Override protected void doGet HttpServletRequest request HttpServletResponse response throws ServletException IOException try AjaxWebClient client getAjaxWebClient request if LOG isDebugEnabled
protected void doMessages AjaxWebClient client HttpServletRequest request HttpServletResponse response throws JMSException IOException int messages long timeout getReadTimeout request if LOG isDebugEnabled
Message message null undelivered_message UndeliveredAjaxMessage request getAttribute if undelivered_message null message undelivered_message getMessage synchronized client List MessageConsumer consumers client getConsumers MessageAvailableConsumer consumer null if undelivered_message null consumer MessageAvailableConsumer undelivered_message getConsumer if message null for int i message null i consumers size i consumer MessageAvailableConsumer consumers get i if consumer getAvailableListener null continue message consumer receive
if message null for int i message null i consumers size i consumer MessageAvailableConsumer consumers get i if consumer getAvailableListener null continue message consumer receive if LOG isDebugEnabled LOG debug message consumer response setContentType response setHeader if message null client getListener getUndeliveredMessages size Continuation continuation ContinuationSupport getContinuation request continuation addContinuationListener new ContinuationListener Override public void onTimeout Continuation cont if LOG isDebugEnabled
if message null client getListener getUndeliveredMessages size Continuation continuation ContinuationSupport getContinuation request continuation addContinuationListener new ContinuationListener Override public void onTimeout Continuation cont if LOG isDebugEnabled LOG debug cont toString Override public void onComplete Continuation cont if LOG isDebugEnabled LOG debug cont toString if continuation isExpired response setStatus HttpServletResponse SC_OK StringWriter swriter new StringWriter PrintWriter writer new PrintWriter swriter writer println
LOG debug continuation AjaxListener listener client getListener listener access listener setContinuation continuation return StringWriter swriter new StringWriter PrintWriter writer new PrintWriter swriter Map MessageAvailableConsumer String consumerIdMap client getIdMap Map MessageAvailableConsumer String consumerDestinationNameMap client getDestinationNameMap response setStatus HttpServletResponse SC_OK writer println if message null String id consumerIdMap get consumer String destinationName consumerDestinationNameMap get consumer LOG debug
Override protected void doPost HttpServletRequest request HttpServletResponse response throws ServletException IOException try String action request getParameter String clientId request getParameter if clientId null equals action
try String action request getParameter String clientId request getParameter if clientId null equals action LOG info clientId WebClient client getWebClient request client close clients remove clientId return WebClient client getWebClient request String text getPostedMessageBody request Destination destination getDestination client request if destination null throw new NoDestinationSuppliedException if LOG isDebugEnabled
if destination null throw new NoDestinationSuppliedException consumer MessageAvailableConsumer client getConsumer destination request getHeader WebClient selectorName Continuation continuation ContinuationSupport getContinuation request if continuation isInitial activeConsumers add consumer throw new ServletException Message message null long deadline getReadDeadline request long timeout deadline System currentTimeMillis synchronized consumer Listener listener Listener consumer getAvailableListener if listener null listener new Listener consumer consumer setAvailableListener listener if LOG isDebugEnabled
response setContentType defaultContentType else if isXmlContent message response setContentType else response setContentType PrintWriter writer response getWriter if message null response setStatus HttpServletResponse SC_NO_CONTENT else messages response setStatus HttpServletResponse SC_OK setResponseHeaders response message writeMessageResponse writer message writer flush finally
public WebClient getWebClient HttpServletRequest request String clientId request getParameter if clientId null
protected String getPostedMessageBody HttpServletRequest request throws IOException String answer request getParameter bodyParameter String contentType request getContentType if answer null contentType null
protected synchronized void closeConnection if connector null try
public void send Destination destination Message message throws JMSException getProducer send destination message if LOG isDebugEnabled
public void send Destination destination Message message boolean persistent int priority long timeToLive throws JMSException int deliveryMode persistent DeliveryMode PERSISTENT DeliveryMode NON_PERSISTENT getProducer send destination message deliveryMode priority timeToLive if LOG isDebugEnabled
Parameterized Parameters name public static Collection String getTestParameters throws IOException List String configUrls new ArrayList String configUrls add new String String osName System getProperty
BrokerService broker null LOG info configUrl System err println configUrl broker BrokerFactory createBroker configUrl if equals shortName try broker start catch TimeoutException expectedWithNoZk return else broker start try for TransportConnector transport broker getTransportConnectors final URI UriToConnectTo URISupport removeQuery transport getConnectUri if UriToConnectTo getScheme startsWith
broker start catch TimeoutException expectedWithNoZk return else broker start try for TransportConnector transport broker getTransportConnectors final URI UriToConnectTo URISupport removeQuery transport getConnectUri if UriToConnectTo getScheme startsWith LOG info UriToConnectTo StompConnection connection new StompConnection connection open UriToConnectTo getHost UriToConnectTo getPort connection close break else if UriToConnectTo getScheme startsWith
broker start try for TransportConnector transport broker getTransportConnectors final URI UriToConnectTo URISupport removeQuery transport getConnectUri if UriToConnectTo getScheme startsWith LOG info UriToConnectTo StompConnection connection new StompConnection connection open UriToConnectTo getHost UriToConnectTo getPort connection close break else if UriToConnectTo getScheme startsWith LOG info UriToConnectTo ActiveMQConnectionFactory connectionFactory new ActiveMQConnectionFactory UriToConnectTo Connection connection connectionFactory createConnection secProps getProperty secProps getProperty connection start
