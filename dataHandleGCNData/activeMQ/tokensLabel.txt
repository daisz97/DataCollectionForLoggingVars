AmqpSender	no	yes
sender	no	yes
=	no	no
subscriptionsByConsumerId	no	yes
.	no	no
get	no	yes
(	no	no
dispatch	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
sender	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
dispatch	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
dispatch	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
dispatch	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sender	no	yes
.	no	no
onMessageDispatch	no	yes
(	no	no
dispatch	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
dispatch	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
dispatch	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
ConnectionError	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
)	no	no
{	no	no
Throwable	no	yes
exception	no	yes
=	no	no
(	no	no
(	no	no
ConnectionError	no	yes
)	no	no
command	yes	yes
)	no	no
.	no	no
getException	no	yes
(	no	no
)	no	no
;	no	no
handleException	no	yes
(	no	no
exception	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	yes	yes
.	no	no
isConsumerControl	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConsumerControl	no	yes
control	no	yes
=	no	no
(	no	no
ConsumerControl	no	yes
)	no	no
command	yes	yes
;	no	no
AmqpSender	no	yes
sender	no	yes
=	no	no
subscriptionsByConsumerId	no	yes
.	no	no
get	no	yes
(	no	no
control	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

void	no	yes
deleteTemporaryDestination	no	yes
(	no	no
ActiveMQTempDestination	no	yes
destination	no	yes
)	no	no
{	no	no
DestinationInfo	no	yes
info	no	yes
=	no	no
new	no	yes
DestinationInfo	no	yes
(	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
setConnectionId	no	yes
(	no	no
connectionId	no	yes
)	no	no
;	no	no
info	no	yes
.	no	no
setOperationType	no	yes
(	no	no
DestinationInfo	no	yes
.	no	no
REMOVE_OPERATION_TYPE	no	yes
)	no	no
;	no	no
info	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
sendToActiveMQ	no	yes
(	no	no
info	no	yes
,	no	no
new	no	yes
ResponseHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onResponse	no	yes
(	no	no
AmqpProtocolConverter	no	yes
converter	no	yes
,	no	no
Response	no	yes
response	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
response	no	yes
.	no	no
isException	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Throwable	no	yes
exception	yes	yes
=	no	no
(	no	no
(	no	no
ExceptionResponse	no	yes
)	no	no
response	no	yes
)	no	no
.	no	no
getException	no	yes
(	no	no
)	no	no
;	no	no

void	no	yes
handleException	no	yes
(	no	no
Throwable	no	yes
exception	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
createReceiver	no	yes
(	no	no
final	no	yes
Receiver	no	yes
protonReceiver	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
qpid	no	yes
.	no	no
proton	no	yes
.	no	no
amqp	no	yes
.	no	no
transport	no	yes
.	no	no
Target	no	yes
remoteTarget	no	yes
=	no	no
protonReceiver	yes	yes
.	no	no
getRemoteTarget	no	yes
(	no	no
)	no	no
;	no	no
ProducerInfo	no	yes
producerInfo	yes	yes
=	no	no
new	no	yes
ProducerInfo	no	yes
(	no	no
getNextProducerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AmqpReceiver	no	yes
receiver	no	yes
=	no	no
new	no	yes
AmqpReceiver	no	yes
(	no	no
this	no	yes
,	no	no
protonReceiver	yes	yes
,	no	no
producerInfo	yes	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
createSender	no	yes
(	no	no
final	no	yes
Sender	no	yes
protonSender	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
qpid	no	yes
.	no	no
proton	no	yes
.	no	no
amqp	no	yes
.	no	no
messaging	no	yes
.	no	no
Source	no	yes
source	no	yes
=	no	no
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
qpid	no	yes
.	no	no
proton	no	yes
.	no	no
amqp	no	yes
.	no	no
messaging	no	yes
.	no	no
Source	no	yes
)	no	no
protonSender	yes	yes
.	no	no
getRemoteSource	no	yes
(	no	no
)	no	no
;	no	no
ConsumerInfo	no	yes
consumerInfo	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
getNextConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AmqpSender	no	yes
sender	no	yes
=	no	no
new	no	yes
AmqpSender	no	yes
(	no	no
this	no	yes
,	no	no
protonSender	yes	yes
,	no	no
consumerInfo	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
processSaslExchange	no	yes
(	no	no
ConnectionInfo	no	yes
connectionInfo	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
sasl	no	yes
.	no	no
getRemoteMechanisms	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
SaslMechanism	no	yes
mechanism	yes	yes
=	no	no
getSaslMechanism	no	yes
(	no	no
sasl	no	yes
.	no	no
getRemoteMechanisms	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
mechanism	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
processSaslExchange	no	yes
(	no	no
ConnectionInfo	no	yes
connectionInfo	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
sasl	no	yes
.	no	no
getRemoteMechanisms	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
SaslMechanism	no	yes
mechanism	yes	yes
=	no	no
getSaslMechanism	no	yes
(	no	no
sasl	no	yes
.	no	no
getRemoteMechanisms	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
mechanism	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
mechanism	yes	yes
.	no	no
getMechanismName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mechanism	yes	yes
.	no	no
processSaslStep	no	yes
(	no	no
sasl	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
mechanism	yes	yes
.	no	no
isFailed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connectionInfo	no	yes
.	no	no
setUserName	no	yes
(	no	no
mechanism	yes	yes
.	no	no
getUsername	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connectionInfo	no	yes
.	no	no
setPassword	no	yes
(	no	no
mechanism	yes	yes
.	no	no
getPassword	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tryAuthenticate	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
transport	no	yes
.	no	no
getPeerCertificates	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
sasl	no	yes
.	no	no
done	no	yes
(	no	no
Sasl	no	yes
.	no	no
SaslOutcome	no	yes
.	no	no
PN_SASL_OK	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
sasl	no	yes
.	no	no
done	no	yes
(	no	no
Sasl	no	yes
.	no	no
SaslOutcome	no	yes
.	no	no
PN_SASL_AUTH	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
mechanism	yes	yes
.	no	no
getMechanismName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testMessagesAreAckedAMQProducer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesSent	no	yes
=	no	no
3	no	no
;	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
brokerService	no	yes
.	no	no
isPersistent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createAMQConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesSent	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
messageText	yes	yes
=	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
messageText	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSelectingOnAMQPMessageID	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
brokerService	no	yes
.	no	no
isPersistent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createConnection	no	yes
(	no	no
amqpURI	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
p	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
messageText	no	yes
=	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
messageText	no	yes
)	no	no
;	no	no
p	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
connection	no	yes
,	no	no
session	no	yes
)	no	no
;	no	no
String	no	yes
selector	yes	yes
=	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSelectingOnActiveMQMessageID	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
brokerService	no	yes
.	no	no
isPersistent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createAMQConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
p	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
messageText	no	yes
=	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
messageText	no	yes
)	no	no
;	no	no
p	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
connection	no	yes
,	no	no
session	no	yes
)	no	no
;	no	no
String	no	yes
selector	yes	yes
=	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testMessagesAreAckedAMQPProducer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesSent	no	yes
=	no	no
3	no	no
;	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
brokerService	no	yes
.	no	no
isPersistent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createConnection	no	yes
(	no	no
amqpURI	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
p	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesSent	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
messageText	yes	yes
=	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
messageText	yes	yes
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
;	no	no
if	no	yes
(	no	no
selector	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
,	no	no
selector	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
return	no	yes
0	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
selector	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
,	no	no
selector	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
return	no	yes
0	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no

private	no	yes
void	no	yes
sendMessageToQueueUsingAmqp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createAmqpConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
sendMessageToQueueUsingStomp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createStompConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
readMessageFromQueueUsingAmqp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createAmqpConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
received	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
readMessageFromQueueUsingStomp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createStompConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
received	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
addTranportConnectors	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
isUseOpenWireConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
openwirePort	yes	yes
)	no	no
;	no	no
openwirePort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
openwireURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no

TransportConnector	no	yes
connector	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
isUseOpenWireConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
openwirePort	no	yes
)	no	no
;	no	no
openwirePort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
openwireURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
openwirePort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseTcpConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpSslPort	yes	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpSslPort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpSslURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
openwirePort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseTcpConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpSslPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpSslURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpNioPort	yes	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpNioPort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpNioURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no

amqpURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpSslPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpSslURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpNioPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpNioPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpNioURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpNioPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioPlusSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpNioPlusSslPort	yes	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpNioPlusSslPort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

amqpSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpSslURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpNioPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpNioPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpNioURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpNioPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioPlusSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
amqpNioPlusSslPort	no	yes
+	no	no
+	no	no
getAmqpTransformer	no	yes
(	no	no
)	no	no
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpNioPlusSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
amqpNioPlusSslURI	no	yes
=	no	no
connector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
amqpNioPlusSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseAutoConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
autoPort	yes	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

p	no	yes
.	no	no
setPriority	no	yes
(	no	no
7	no	no
)	no	no
;	no	no
TextMessage	no	yes
amqpMessage	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
amqpMessage	no	yes
.	no	no
setText	no	yes
(	no	no
)	no	no
;	no	no
p	no	yes
.	no	no
send	no	yes
(	no	no
amqpMessage	no	yes
)	no	no
;	no	no
p	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
amqpSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
amqpConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
openwireConnectionURI	no	yes
)	no	no
;	no	no
Connection	no	yes
openwireConn	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
openwireConn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
openwireConn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
jmsDest	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TEST_QUEUE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
c	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
jmsDest	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
c	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no

public	no	yes
Connection	no	yes
createConnection	no	yes
(	no	no
URI	no	yes
remoteURI	no	yes
,	no	no
String	no	yes
username	no	yes
,	no	no
String	no	yes
password	no	yes
,	no	no
String	no	yes
clientId	no	yes
,	no	no
boolean	no	yes
syncPublish	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
remoteURI	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
syncPublish	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

public	no	yes
TopicConnection	no	yes
createTopicConnection	no	yes
(	no	no
URI	no	yes
remoteURI	no	yes
,	no	no
String	no	yes
username	no	yes
,	no	no
String	no	yes
password	no	yes
,	no	no
String	no	yes
clientId	no	yes
,	no	no
boolean	no	yes
syncPublish	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
TopicConnectionFactory	no	yes
factory	no	yes
=	no	no
createTopicConnectionFactory	no	yes
(	no	no
remoteURI	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
syncPublish	no	yes
)	no	no
;	no	no
TopicConnection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

public	no	yes
QueueConnection	no	yes
createQueueConnection	no	yes
(	no	no
URI	no	yes
remoteURI	no	yes
,	no	no
String	no	yes
username	no	yes
,	no	no
String	no	yes
password	no	yes
,	no	no
String	no	yes
clientId	no	yes
,	no	no
boolean	no	yes
syncPublish	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
QueueConnectionFactory	no	yes
factory	no	yes
=	no	no
createQueueConnectionFactory	no	yes
(	no	no
remoteURI	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
syncPublish	no	yes
)	no	no
;	no	no
QueueConnection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
doTestRequestResponse	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
requestProducer	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
requestDestination	yes	yes
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
requestMessage	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
requestMessage	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
send	no	yes
(	no	no
requestMessage	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestRequestResponse	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
requestProducer	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
requestDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
requestMessage	no	yes
=	no	no
requestorSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
requestMessage	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
send	no	yes
(	no	no
requestMessage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
requestDestination	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
replyConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
replyMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
requestMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
requestMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Destination	no	yes
replyDestination	no	yes
=	no	no
requestMessage	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
replyDestination	no	yes
instanceof	no	no
Topic	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
(	no	no
(	no	no
Topic	no	yes
)	no	no
replyDestination	no	yes
)	no	no
.	no	no
getTopicName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
(	no	no
(	no	no
Queue	no	yes
)	no	no
replyDestination	no	yes
)	no	no
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
TextMessage	no	yes
replyMessage	yes	yes
=	no	no
responderSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
requestMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replyMessage	yes	yes
.	no	no
setJMSCorrelationID	no	yes
(	no	no
requestMessage	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
dynamicallyCreateProducer	no	yes
)	no	no
{	no	no
responseProducer	no	yes
=	no	no
responderSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
responseProducer	no	yes
.	no	no
send	no	yes
(	no	no
replyMessage	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
responseProducer	no	yes
.	no	no
send	no	yes
(	no	no
replyDestination	no	yes
,	no	no
replyMessage	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testTransactedConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testTransactedConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no

final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testRollbackRececeivedMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testRollbackRececeivedMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no

sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
false	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
true	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
false	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TestConfig	no	yes
.	no	no
TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
true	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msgCount	no	yes
,	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTXConsumerAndLargeNumberOfMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
msgCount	no	yes
=	no	no
300	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
queue	no	yes
,	no	no
msgCount	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
Message	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
Testable	no	yes
t	no	yes
=	no	no
new	no	yes
Testable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
30	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
m	no	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
producer	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
}	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Testable	no	yes
t	no	yes
=	no	no
new	no	yes
Testable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
session	no	yes
)	no	no
{	no	no
session	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
producer	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Testable	no	yes
t	no	yes
=	no	no
new	no	yes
Testable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
consumer	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
+	no	no
(	no	no
i	no	yes
*	no	no
100	no	no
)	no	no
)	no	no
;	no	no
}	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testConsumerReceiveTimedThrowsWhenBrokerStops	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Testable	no	yes
t	no	yes
=	no	no
new	no	yes
Testable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
100	no	no
+	no	no
(	no	no
i	no	yes
*	no	no
1000	no	no
)	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
consumer	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Testable	no	yes
t	no	yes
=	no	no
new	no	yes
Testable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
consumer	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
m	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
m	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionsAreClosed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ConnectorViewMBean	no	yes
connector	yes	yes
=	no	no
getProxyToConnectionView	no	yes
(	no	no
getTargetConnectorName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testExecptionListenerCalledOnBrokerStop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQAdmin	no	yes
.	no	no
enableJMSFrameTracing	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
s	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
called	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testSendLargeMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
String	no	yes
queueName	yes	yes
=	no	no
getDestinationName	no	yes
(	no	no
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	yes	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
int	no	yes
messageSize	yes	yes
=	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
String	no	yes
messageText	no	yes
=	no	no
createLargeString	no	yes
(	no	no
messageSize	yes	yes
)	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
messageText	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableTopicStateAfterSubscriberClosed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
durableClientId	no	yes
=	no	no
getDestinationName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
String	no	yes
durableSubscriberName	no	yes
=	no	no
getDestinationName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
BrokerView	no	yes
adminView	no	yes
=	no	no
this	no	yes
.	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
durableSubscribersAtStart	yes	yes
=	no	no
adminView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
int	no	yes
inactiveSubscribersAtStart	yes	yes
=	no	no
adminView	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableTopicStateAfterSubscriberClosed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
durableClientId	no	yes
=	no	no
getDestinationName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
String	no	yes
durableSubscriberName	no	yes
=	no	no
getDestinationName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
BrokerView	no	yes
adminView	no	yes
=	no	no
this	no	yes
.	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
durableSubscribersAtStart	no	yes
=	no	no
adminView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
int	no	yes
inactiveSubscribersAtStart	no	yes
=	no	no
adminView	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
durableSubscribersAtStart	no	yes
,	no	no
inactiveSubscribersAtStart	no	yes
)	no	no
;	no	no
TopicConnection	no	yes
subscriberConnection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
getBrokerURI	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
)	no	no
;	no	no
subscriberConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
durableClientId	no	yes
)	no	no
;	no	no
TopicSession	no	yes
subscriberSession	no	yes
=	no	no
subscriberConnection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
subscriberSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
messageConsumer	no	yes
=	no	no
subscriberSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
durableSubscriberName	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageConsumer	no	yes
)	no	no
;	no	no
int	no	yes
durableSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
int	no	yes
inactiveSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
durableSubscribersAtStart	no	yes
,	no	no
inactiveSubscribersAtStart	no	yes
)	no	no
;	no	no
TopicConnection	no	yes
subscriberConnection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
getBrokerURI	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
)	no	no
;	no	no
subscriberConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
durableClientId	no	yes
)	no	no
;	no	no
TopicSession	no	yes
subscriberSession	no	yes
=	no	no
subscriberConnection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
subscriberSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
messageConsumer	no	yes
=	no	no
subscriberSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
durableSubscriberName	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageConsumer	no	yes
)	no	no
;	no	no
int	no	yes
durableSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
int	no	yes
inactiveSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
durableSubscribers	yes	yes
,	no	no
inactiveSubscribers	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
(	no	no
durableSubscribers	yes	yes
-	no	no
durableSubscribersAtStart	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
(	no	no
inactiveSubscribers	yes	yes
-	no	no
inactiveSubscribersAtStart	no	yes
)	no	no
)	no	no
;	no	no
subscriberConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
durableSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
inactiveSubscribers	yes	yes
=	no	no
adminView	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no

connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ackMode	no	yes
)	no	no
;	no	no
final	no	yes
Destination	no	yes
destination	no	yes
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
ex	yes	yes
)	no	no
{	no	no

MessageProducer	no	yes
messageProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
.	no	no
DEFAULT_PRIORITY	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
.	no	no
DEFAULT_TIME_TO_LIVE	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1000	no	no
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
counter	yes	yes
=	no	no
0	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
do	no	yes
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
counter	yes	yes
++	no	no
;	no	no

MessageProducer	no	yes
messageProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
.	no	no
DEFAULT_PRIORITY	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
.	no	no
DEFAULT_TIME_TO_LIVE	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1000	no	no
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
counter	yes	yes
=	no	no
0	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
do	no	yes
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
counter	yes	yes
++	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueTXRollbackAndCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
3	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
3	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SubscriptionViewMBean	no	yes
subscription	no	yes
=	no	no
getProxyToQueueSubscriber	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
subscription	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueTXRollbackAndCommitAsyncConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
3	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
counter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
counter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
int	no	yes
msgIndex	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
counter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
int	no	yes
msgIndex	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msgIndex	yes	yes
++	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
msgIndex	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
msgIndex	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msgIndex	yes	yes
++	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
msgIndex	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
msgIndex	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SubscriptionViewMBean	no	yes
subscription	no	yes
=	no	no
getProxyToQueueSubscriber	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
subscription	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SubscriptionViewMBean	no	yes
subscription	no	yes
=	no	no
getProxyToQueueSubscriber	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
subscription	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
counter	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
MSG_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msgIndex	no	yes
++	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
msgIndex	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
msgIndex	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
int	no	yes
messageCount	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createConnection	no	yes
(	no	no
remoteURI	no	yes
,	no	no
,	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
String	no	yes
destinationName	no	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
CONSUMER_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ConsumerTask	no	yes
consumerTask	no	yes
=	no	no
new	no	yes
ConsumerTask	no	yes
(	no	no
initLatch	no	yes
,	no	no
destinationName	no	yes
,	no	no
remoteURI	no	yes
,	no	no
+	no	no
i	no	yes
,	no	no
latch	yes	yes
,	no	no
ITERATIONS	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
submit	no	yes
(	no	no
consumerTask	no	yes
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
initLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
latch	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
connection	no	yes
,	no	no
destination	no	yes
,	no	no
ITERATIONS	no	yes
,	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
latch	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
latch	yes	yes
.	no	no
await	no	yes
(	no	no
15	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

outbound	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
nInt	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setFloatProperty	no	yes
(	no	no
,	no	no
nFloat	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setDoubleProperty	no	yes
(	no	no
,	no	no
nDouble	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
outbound	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
nLong	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
openwireProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
amqpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

outbound	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
outbound	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
nLong	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
openwireProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
amqpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no

outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
openwireProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
amqpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no

propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

outbound	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
nInt	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setFloatProperty	no	yes
(	no	no
,	no	no
nFloat	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setDoubleProperty	no	yes
(	no	no
,	no	no
nDouble	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
outbound	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
nLong	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
amqpProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
openwireConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

outbound	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
outbound	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
nLong	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
amqpProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
openwireConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no

outbound	no	yes
.	no	no
setObjectProperty	no	yes
(	no	no
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
bool	no	yes
)	no	no
)	no	no
;	no	no
amqpProducer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
Message	no	yes
inbound	no	yes
=	no	no
openwireConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no

propertyNames	no	yes
=	no	no
inbound	no	yes
.	no	no
getPropertyNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
propertyCount	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

String	no	yes
propertyName	yes	yes
=	no	no
propertyNames	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
propertyCount	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
||	no	no
propertyName	yes	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
inbound	no	yes
.	no	no
propertyExists	no	yes
(	no	no
propertyName	yes	yes
+	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
propertyName	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
propertyName	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

assumeFalse	no	yes
(	no	no
!	no	no
transformer	no	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
openwire	no	yes
=	no	no
createJMSConnection	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
amqp	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
openwire	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
amqp	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
openwireSession	no	yes
=	no	no
openwire	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Session	no	yes
amqpSession	no	yes
=	no	no
amqp	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
amqpProducer	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
openwireConsumer	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ObjectMessage	no	yes
outgoing	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
)	no	no
;	no	no
outgoing	no	yes
.	no	no
setObject	no	yes
(	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amqpProducer	no	yes
.	no	no
send	no	yes
(	no	no
outgoing	no	yes
)	no	no
;	no	no
Message	no	yes
received	yes	yes
=	no	no
openwireConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no

assumeFalse	no	yes
(	no	no
!	no	no
transformer	no	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
openwire	no	yes
=	no	no
createJMSConnection	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
amqp	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
openwire	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
amqp	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
openwireSession	no	yes
=	no	no
openwire	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Session	no	yes
amqpSession	no	yes
=	no	no
amqp	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
openwireProducer	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
amqpConsumer	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ObjectMessage	no	yes
outgoing	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
)	no	no
;	no	no
outgoing	no	yes
.	no	no
setObject	no	yes
(	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
openwireProducer	no	yes
.	no	no
send	no	yes
(	no	no
outgoing	no	yes
)	no	no
;	no	no
Message	no	yes
received	yes	yes
=	no	no
amqpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no

Connection	no	yes
openwire	no	yes
=	no	no
createJMSConnection	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
openwire	no	yes
)	no	no
.	no	no
setUseCompression	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Connection	no	yes
amqp	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
openwire	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
amqp	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
openwireSession	no	yes
=	no	no
openwire	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Session	no	yes
amqpSession	no	yes
=	no	no
amqp	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
openwireProducer	no	yes
=	no	no
openwireSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
amqpConsumer	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ObjectMessage	no	yes
outgoing	no	yes
=	no	no
amqpSession	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
)	no	no
;	no	no
outgoing	no	yes
.	no	no
setObject	no	yes
(	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
openwireProducer	no	yes
.	no	no
send	no	yes
(	no	no
outgoing	no	yes
)	no	no
;	no	no
Message	no	yes
received	yes	yes
=	no	no
amqpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestSendTextMessageOfGivenSize	no	yes
(	no	no
int	no	yes
expectedSize	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no

public	no	yes
void	no	yes
doTestSendTextMessageOfGivenSize	no	yes
(	no	no
int	no	yes
expectedSize	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expectedSize	no	yes
)	no	no
;	no	no
String	no	yes
payload	no	yes
=	no	no
createLargeString	no	yes
(	no	no
expectedSize	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedSize	no	yes
,	no	no
payload	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createConnection	no	yes
(	no	no
getBrokerAmqpConnectionURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
startTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
testName	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
long	no	yes
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
long	no	yes
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
endTime	yes	yes
-	no	no
startTime	yes	yes
)	no	no
;	no	no
startTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
receivedMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
receivedMessage	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receivedMessage	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
TextMessage	no	yes
receivedTextMessage	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
receivedMessage	no	yes
;	no	no
assertNotNull	no	yes
(	no	no
receivedMessage	no	yes
)	no	no
;	no	no
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestSendBytesMessageOfGivenSize	no	yes
(	no	no
int	no	yes
expectedSize	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no

public	no	yes
void	no	yes
doTestSendBytesMessageOfGivenSize	no	yes
(	no	no
int	no	yes
expectedSize	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expectedSize	no	yes
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
payload	no	yes
=	no	no
createLargeByteArray	no	yes
(	no	no
expectedSize	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedSize	no	yes
,	no	no
payload	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
JMSClientContext	no	yes
.	no	no
INSTANCE	no	yes
.	no	no
createConnection	no	yes
(	no	no
getBrokerAmqpConnectionURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
startTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
testName	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
long	no	yes
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
long	no	yes
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
endTime	yes	yes
-	no	no
startTime	yes	yes
)	no	no
;	no	no
startTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
receivedMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
receivedMessage	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receivedMessage	no	yes
instanceof	no	no
BytesMessage	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
receivedBytesMessage	no	yes
=	no	no
(	no	no
BytesMessage	no	yes
)	no	no
receivedMessage	no	yes
;	no	no
assertNotNull	no	yes
(	no	no
receivedMessage	no	yes
)	no	no
;	no	no
endTime	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
readMessagesOnBroker	no	yes
(	no	no
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
RECEIVE_TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
readMessagesOnBroker	no	yes
(	no	no
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
RECEIVE_TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
i	no	yes
,	no	no
message	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
gid	yes	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
seq	no	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
readMessagesOnBroker	no	yes
(	no	no
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
RECEIVE_TIMEOUT	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
i	no	yes
,	no	no
message	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
gid	no	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
seq	yes	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
gid	no	yes
)	no	no
;	no	no

connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
MSG_COUNT	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
count	no	yes
<	no	no
MSG_COUNT	no	yes
&&	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30000	no	no
)	no	no
public	no	yes
void	no	yes
testBroseOneInQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
JmsConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
JmsConnectionFactory	no	yes
(	no	no
getAmqpURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	yes	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
m	yes	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no

connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
5	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
5	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
5	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
5	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
txProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
txProducer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
30	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
,	no	no
MSG_COUNT	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
browser	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
int	no	yes
messageCount	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

request	no	yes
.	no	no
onSuccess	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
pumpToProtonTransport	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
closeTimeout	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
request	no	yes
.	no	no
sync	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
request	no	yes
.	no	no
sync	no	yes
(	no	no
closeTimeout	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
transport	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

final	no	yes
AmqpTransactionId	no	yes
txId	yes	yes
=	no	no
session	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getNextTransactionId	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ClientFuture	no	yes
request	no	yes
=	no	no
new	no	yes
ClientFuture	no	yes
(	no	no
new	no	yes
ClientFutureSynchronization	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingSuccess	no	yes
(	no	no
)	no	no
{	no	no
transactionId	no	yes
=	no	no
txId	yes	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingFailure	no	yes
(	no	no
Throwable	no	yes
cause	no	yes
)	no	no
{	no	no
transactionId	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
txId	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
coordinator	no	yes
==	no	no
null	no	yes
||	no	no
coordinator	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
txId	yes	yes
)	no	no
;	no	no
coordinator	no	yes
=	no	no
new	no	yes
AmqpTransactionCoordinator	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
coordinator	no	yes
.	no	no
open	no	yes
(	no	no
new	no	yes
AsyncResult	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSuccess	no	yes
(	no	no
)	no	no
{	no	no

session	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
coordinator	no	yes
==	no	no
null	no	yes
||	no	no
coordinator	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
txId	yes	yes
)	no	no
;	no	no
coordinator	no	yes
=	no	no
new	no	yes
AmqpTransactionCoordinator	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
coordinator	no	yes
.	no	no
open	no	yes
(	no	no
new	no	yes
AsyncResult	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSuccess	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
txId	yes	yes
)	no	no
;	no	no
coordinator	no	yes
.	no	no
declare	no	yes
(	no	no
txId	yes	yes
,	no	no
request	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
request	no	yes
.	no	no
onFailure	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onFailure	no	yes
(	no	no
Throwable	no	yes
result	no	yes
)	no	no
{	no	no
request	no	yes
.	no	no
onFailure	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isComplete	no	yes
(	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
transactionId	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
preCommit	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ClientFuture	no	yes
request	no	yes
=	no	no
new	no	yes
ClientFuture	no	yes
(	no	no
new	no	yes
ClientFutureSynchronization	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingSuccess	no	yes
(	no	no
)	no	no
{	no	no
transactionId	yes	yes
=	no	no
null	no	yes
;	no	no
postCommit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingFailure	no	yes
(	no	no
Throwable	no	yes
cause	no	yes
)	no	no
{	no	no
transactionId	yes	yes
=	no	no
null	no	yes
;	no	no
postCommit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
transactionId	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

if	no	yes
(	no	no
transactionId	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
preRollback	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ClientFuture	no	yes
request	no	yes
=	no	no
new	no	yes
ClientFuture	no	yes
(	no	no
new	no	yes
ClientFutureSynchronization	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingSuccess	no	yes
(	no	no
)	no	no
{	no	no
transactionId	yes	yes
=	no	no
null	no	yes
;	no	no
postRollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onPendingFailure	no	yes
(	no	no
Throwable	no	yes
cause	no	yes
)	no	no
{	no	no
transactionId	yes	yes
=	no	no
null	no	yes
;	no	no
postRollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
transactionId	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

while	no	yes
(	no	no
deliveries	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Delivery	no	yes
pendingDelivery	no	yes
=	no	no
deliveries	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
pendingDelivery	no	yes
.	no	no
remotelySettled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
DeliveryState	no	yes
state	no	yes
=	no	no
pendingDelivery	no	yes
.	no	no
getRemoteState	no	yes
(	no	no
)	no	no
;	no	no
AmqpTransactionId	no	yes
txId	yes	yes
=	no	no
(	no	no
AmqpTransactionId	no	yes
)	no	no
pendingDelivery	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
;	no	no
AsyncResult	no	yes
pendingRequest	no	yes
=	no	no
pendingRequests	no	yes
.	no	no
get	no	yes
(	no	no
txId	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
pendingRequest	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
state	no	yes
instanceof	no	no
Declared	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
txId	yes	yes
.	no	no
getTxId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Declared	no	yes
declared	no	yes
=	no	no
(	no	no
Declared	no	yes
)	no	no
state	no	yes
;	no	no
txId	yes	yes
.	no	no
setRemoteTxId	no	yes
(	no	no
declared	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pendingRequest	no	yes
.	no	no
onSuccess	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
state	no	yes
instanceof	no	no
Rejected	no	yes
)	no	no
{	no	no

}	no	no
if	no	yes
(	no	no
state	no	yes
instanceof	no	no
Declared	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
txId	yes	yes
.	no	no
getTxId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Declared	no	yes
declared	no	yes
=	no	no
(	no	no
Declared	no	yes
)	no	no
state	no	yes
;	no	no
txId	yes	yes
.	no	no
setRemoteTxId	no	yes
(	no	no
declared	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pendingRequest	no	yes
.	no	no
onSuccess	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
state	no	yes
instanceof	no	no
Rejected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
txId	yes	yes
.	no	no
getTxId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Rejected	no	yes
rejected	no	yes
=	no	no
(	no	no
Rejected	no	yes
)	no	no
state	no	yes
;	no	no
Exception	no	yes
cause	no	yes
=	no	no
AmqpSupport	no	yes
.	no	no
convertToException	no	yes
(	no	no
rejected	no	yes
.	no	no
getError	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
JMSException	no	yes
failureCause	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
txId	yes	yes
.	no	no
isCommit	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
failureCause	no	yes
=	no	no
new	no	yes
TransactionRolledBackException	no	yes
(	no	no
cause	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
failureCause	no	yes
=	no	no
new	no	yes
JMSException	no	yes
(	no	no
cause	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
pendingRequest	no	yes
.	no	no
onFailure	no	yes
(	no	no
failureCause	no	yes
)	no	no
;	no	no

private	no	yes
Mechanism	no	yes
findMatchingMechanism	no	yes
(	no	no
String	no	yes
...	no	no
remoteMechanisms	no	yes
)	no	no
{	no	no
Mechanism	no	yes
match	no	yes
=	no	no
null	no	yes
;	no	no
List	no	yes
<	no	no
Mechanism	no	yes
>	no	no
found	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Mechanism	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
remoteMechanism	yes	yes
:	no	no
remoteMechanisms	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
mechanismRestriction	yes	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
mechanismRestriction	yes	yes
.	no	no
equals	no	yes
(	no	no
remoteMechanism	yes	yes
)	no	no
)	no	no
{	no	no

private	no	yes
Mechanism	no	yes
findMatchingMechanism	no	yes
(	no	no
String	no	yes
...	no	no
remoteMechanisms	no	yes
)	no	no
{	no	no
Mechanism	no	yes
match	no	yes
=	no	no
null	no	yes
;	no	no
List	no	yes
<	no	no
Mechanism	no	yes
>	no	no
found	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Mechanism	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
remoteMechanism	yes	yes
:	no	no
remoteMechanisms	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
mechanismRestriction	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
mechanismRestriction	no	yes
.	no	no
equals	no	yes
(	no	no
remoteMechanism	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
remoteMechanism	yes	yes
,	no	no
mechanismRestriction	no	yes
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
Mechanism	no	yes
mechanism	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
remoteMechanism	yes	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
PlainMechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
remoteMechanism	yes	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
AnonymousMechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
remoteMechanism	yes	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
CramMD5Mechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

Mechanism	no	yes
mechanism	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
remoteMechanism	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
PlainMechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
remoteMechanism	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
AnonymousMechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
remoteMechanism	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
mechanism	no	yes
=	no	no
new	no	yes
CramMD5Mechanism	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
remoteMechanism	no	yes
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
mechanism	no	yes
.	no	no
isApplicable	no	yes
(	no	no
username	no	yes
,	no	no
password	no	yes
)	no	no
)	no	no
{	no	no
found	no	yes
.	no	no
add	no	yes
(	no	no
mechanism	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
found	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
found	no	yes
)	no	no
;	no	no
match	yes	yes
=	no	no
found	no	yes
.	no	no
get	no	yes
(	no	no
found	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no

markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
contains	no	yes
(	no	no
offered	no	yes
,	no	no
DELAYED_DELIVERY	no	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
Symbol	no	yes
,	no	no
Object	no	yes
>	no	no
properties	no	yes
=	no	no
connection	no	yes
.	no	no
getRemoteProperties	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
QUEUE_PREFIX	no	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
TOPIC_PREFIX	no	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
PRODUCT	no	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
VERSION	no	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
PLATFORM	yes	yes
)	no	no
)	no	no
{	no	no
markAsInvalid	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCreditNotGrantedUntilBacklogClears	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
1000	no	no
;	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
AmqpConnection	no	yes
connection	no	yes
=	no	no
trackConnection	no	yes
(	no	no
client	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AmqpSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
)	no	no
;	no	no
AmqpReceiver	no	yes
receiver	no	yes
=	no	no
session	no	yes
.	no	no
createReceiver	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AmqpSender	no	yes
sender	no	yes
=	no	no
session	no	yes
.	no	no
createSender	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
new	no	yes
AmqpMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
sender	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testReceiverCloseSendsRemoteClose	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
client	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
closed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
setValidator	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectClosedResource	no	yes
(	no	no
Session	no	yes
session	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCreateQueueReceiverWithJMSSelector	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
setValidator	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectOpenedResource	no	yes
(	no	no
Receiver	no	yes
receiver	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCreateQueueReceiverWithNoLocalSet	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
setValidator	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectOpenedResource	no	yes
(	no	no
Receiver	no	yes
receiver	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testUnsupportedFiltersAreNotListedAsSupported	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
setValidator	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectOpenedResource	no	yes
(	no	no
Receiver	no	yes
receiver	yes	yes
)	no	no
{	no	no

try	no	yes
{	no	no
assertNull	no	yes
(	no	no
receiver	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
}	no	no
AmqpMessage	no	yes
delivered	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
delivered	no	yes
=	no	no
receiver	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	yes
receivedTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
delivered	no	yes
)	no	no
;	no	no
Long	no	yes
msgDeliveryTime	no	yes
=	no	no
(	no	no
Long	no	yes
)	no	no
delivered	no	yes
.	no	no
getMessageAnnotation	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msgDeliveryTime	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
DELAY	no	yes
,	no	no
msgDeliveryTime	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalDelay	yes	yes
=	no	no
receivedTime	no	yes
-	no	no
sendTime	no	yes
;	no	no

AmqpMessage	no	yes
message3	no	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
receiver2	no	yes
.	no	no
flow	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
AmqpMessage	no	yes
message4	no	yes
=	no	no
receiver2	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message3	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message4	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message3	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message4	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message3	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
message4	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	no	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

assertNotNull	no	yes
(	no	no
,	no	no
message3	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message4	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message3	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message4	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message3	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
message4	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	yes	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	yes	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no

message3	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
message4	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	no	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver2	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver2	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

assertNotNull	no	yes
(	no	no
,	no	no
message4	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message3	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message4	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message3	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
message4	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
destinationView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
destinationView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	no	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

message3	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
message4	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
destinationView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
destinationView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	yes	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	yes	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
destinationView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
splitCredit	no	yes
=	no	no
(	no	no
MSG_COUNT	no	yes
-	no	no
4	no	no
)	no	no
/	no	no
2	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver1	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver1	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
splitCredit	no	yes
)	no	no
;	no	no
receiver2	no	yes
.	no	no
flow	no	yes
(	no	no
splitCredit	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitCredit	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
AmqpMessage	no	yes
message	yes	yes
=	no	no
receiver2	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
AmqpConnection	no	yes
connection	no	yes
=	no	no
trackConnection	no	yes
(	no	no
client	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setStateInspector	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectDeliveryUpdate	no	yes
(	no	no
Sender	no	yes
sender	no	yes
,	no	no
Delivery	no	yes
delivery	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
delivery	no	yes
.	no	no
remotelySettled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
sender	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
settled	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
AmqpSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
)	no	no
;	no	no
AmqpSender	no	yes
sender	no	yes
=	no	no
session	no	yes
.	no	no
createSender	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
new	no	yes
AmqpMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
sender	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testPresettledSender	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
1000	no	no
;	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
AmqpConnection	no	yes
connection	no	yes
=	no	no
trackConnection	no	yes
(	no	no
client	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AmqpSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
)	no	no
;	no	no
AmqpSender	no	yes
sender	no	yes
=	no	no
session	no	yes
.	no	no
createSender	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
new	no	yes
AmqpMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
sender	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSessionClosedDoesNotGetReceiverDetachFromRemote	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
AmqpClient	no	yes
client	no	yes
=	no	no
createAmqpClient	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
client	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
setValidator	no	yes
(	no	no
new	no	yes
AmqpValidator	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
inspectClosedResource	no	yes
(	no	no
Session	no	yes
session	yes	yes
)	no	no
{	no	no

AmqpConnection	no	yes
connection	no	yes
=	no	no
trackConnection	no	yes
(	no	no
client	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AmqpSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AmqpReceiver	no	yes
receiver	no	yes
=	no	no
session	no	yes
.	no	no
createReceiver	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
receiver	no	yes
.	no	no
flow	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
,	no	no
100	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
receiver	no	yes
.	no	no
receive	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
slowConsumerPolicyMBeanName	no	yes
=	no	no
queue	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
)	no	no
;	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
abortPolicy	no	yes
=	no	no
(	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
,	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
TabularData	no	yes
slowOnes	yes	yes
=	no	no
abortPolicy	no	yes
.	no	no
getSlowConsumers	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
slowOnes	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
AmqpReceiver	no	yes
receiver	no	yes
=	no	no
session	no	yes
.	no	no
createReceiver	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
receiver	no	yes
.	no	no
flow	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
,	no	no
100	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
AmqpMessage	no	yes
message	no	yes
=	no	no
receiver	no	yes
.	no	no
receive	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
accept	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
slowConsumerPolicyMBeanName	no	yes
=	no	no
queue	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
)	no	no
;	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
abortPolicy	no	yes
=	no	no
(	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
,	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
TabularData	no	yes
slowOnes	no	yes
=	no	no
abortPolicy	no	yes
.	no	no
getSlowConsumers	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
slowOnes	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
slowOnes	no	yes
)	no	no
;	no	no
CompositeData	no	yes
slowOne	yes	yes
=	no	no
(	no	no
CompositeData	no	yes
)	no	no
slowOnes	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

sslContext	no	yes
.	no	no
setKeyStore	no	yes
(	no	no
keystore	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setKeyStorePassword	no	yes
(	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setTrustStore	no	yes
(	no	no
keystore	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setTrustStorePassword	no	yes
(	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
afterPropertiesSet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
stopServer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
File	no	yes
file	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
file	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
setSslContext	no	yes
(	no	no
sslContext	no	yes
)	no	no
;	no	no
String	no	yes
connectorURI	no	yes
=	no	no
getConnectorURI	no	yes
(	no	no
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
addConnector	no	yes
(	no	no
connectorURI	no	yes
)	no	no
;	no	no
port	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

sslContext	no	yes
.	no	no
setKeyStore	no	yes
(	no	no
keystore	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setKeyStorePassword	no	yes
(	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setTrustStore	no	yes
(	no	no
keystore	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
setTrustStorePassword	no	yes
(	no	no
)	no	no
;	no	no
sslContext	no	yes
.	no	no
afterPropertiesSet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
stopServer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
File	no	yes
file	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
file	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
setSslContext	no	yes
(	no	no
sslContext	no	yes
)	no	no
;	no	no
String	no	yes
connectorURI	no	yes
=	no	no
getConnectorURI	no	yes
(	no	no
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
addConnector	no	yes
(	no	no
connectorURI	no	yes
)	no	no
;	no	no
port	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

message	no	yes
.	no	no
setBody	no	yes
(	no	no
new	no	yes
AmqpValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
EncodedMessage	no	yes
encoded	no	yes
=	no	no
encode	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
InboundTransformer	no	yes
inboundTransformer	no	yes
=	no	no
getInboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
OutboundTransformer	no	yes
outboundTransformer	no	yes
=	no	no
getOutboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
WARM_CYCLES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
totalDuration	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
PROFILE_CYCLES	yes	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
totalDuration	yes	yes
+=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
;	no	no

message	no	yes
.	no	no
setBody	no	yes
(	no	no
new	no	yes
AmqpValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
EncodedMessage	no	yes
encoded	no	yes
=	no	no
encode	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
InboundTransformer	no	yes
inboundTransformer	no	yes
=	no	no
getInboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
OutboundTransformer	no	yes
outboundTransformer	no	yes
=	no	no
getOutboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
WARM_CYCLES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
totalDuration	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
PROFILE_CYCLES	yes	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
totalDuration	yes	yes
+=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTypicalQpidJMSMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
EncodedMessage	no	yes
encoded	no	yes
=	no	no
encode	no	yes
(	no	no
createTypicalQpidJMSMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
InboundTransformer	no	yes
inboundTransformer	no	yes
=	no	no
getInboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
OutboundTransformer	no	yes
outboundTransformer	no	yes
=	no	no
getOutboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
WARM_CYCLES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
totalDuration	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
PROFILE_CYCLES	yes	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
totalDuration	yes	yes
+=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testComplexQpidJMSMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
EncodedMessage	no	yes
encoded	no	yes
=	no	no
encode	no	yes
(	no	no
createComplexQpidJMSMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
InboundTransformer	no	yes
inboundTransformer	no	yes
=	no	no
getInboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
OutboundTransformer	no	yes
outboundTransformer	no	yes
=	no	no
getOutboundTransformer	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
WARM_CYCLES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
totalDuration	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
PROFILE_CYCLES	yes	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ActiveMQMessage	no	yes
intermediate	no	yes
=	no	no
inboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
encoded	no	yes
)	no	no
;	no	no
intermediate	no	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
outboundTransformer	no	yes
.	no	no
transform	no	yes
(	no	no
intermediate	no	yes
)	no	no
;	no	no
}	no	no
totalDuration	yes	yes
+=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
;	no	no

private	no	yes
void	no	yes
consumeMessages	no	yes
(	no	no
AtomicLong	no	yes
count	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
JmsConnection	no	yes
connection	no	yes
=	no	no
(	no	no
JmsConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ActiveMQSession	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
long	no	yes
v	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
v	no	yes
=	no	no
count	yes	yes
.	no	no
decrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
(	no	no
count	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
10000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
publishMessages	no	yes
(	no	no
AtomicLong	no	yes
count	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
JmsConnection	no	yes
connection	no	yes
=	no	no
(	no	no
JmsConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
count	yes	yes
.	no	no
getAndDecrement	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
count	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
10000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Ignore	no	yes
(	no	no
)	no	no
@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBrowserLeak	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	yes	yes
,	no	no
)	no	no
;	no	no
int	no	yes
j	no	yes
=	no	no
1	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enums	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
enums	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
j	no	yes
=	no	no
1	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enums	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
enums	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
Message	no	yes
message	no	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enums	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
j	no	yes
++	no	no
,	no	no
message	no	yes
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
browser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	yes	yes
,	no	no
)	no	no
;	no	no
int	no	yes
j	no	yes
=	no	no
1	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enums	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
enums	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	yes	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
Message	no	yes
message	no	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enums	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
j	no	yes
++	no	no
,	no	no
message	no	yes
,	no	no
queue	yes	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	yes	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
browser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
browser	no	yes
=	no	no
null	no	yes
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
Message	no	yes
message	no	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enums	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
j	no	yes
++	no	no
,	no	no
message	no	yes
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
browser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
browser	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testCodecRejectsToLargeFrames	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
amqpWireFormat	no	yes
.	no	no
setMaxFrameSize	no	yes
(	no	no
MESSAGE_SIZE	no	yes
)	no	no
;	no	no
AmqpHeader	no	yes
inputHeader	no	yes
=	no	no
new	no	yes
AmqpHeader	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
CONTENTS	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
MESSAGE_SIZE	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_SIZE	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
CONTENTS	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
'a'	no	no
;	no	no
}	no	no
output	no	yes
.	no	no
write	no	yes
(	no	no
inputHeader	no	yes
.	no	no
getBuffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
output	no	yes
.	no	no
writeInt	no	yes
(	no	no
MESSAGE_SIZE	no	yes
+	no	no
4	no	no
)	no	no
;	no	no
output	no	yes
.	no	no
write	no	yes
(	no	no
CONTENTS	no	yes
)	no	no
;	no	no
output	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
.	no	no
toByteBuffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
doTestInvalidHeaderProcessing	no	yes
(	no	no
int	no	yes
port	no	yes
,	no	no
final	no	yes
AmqpHeader	no	yes
header	no	yes
,	no	no
boolean	no	yes
ssl	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ClientConnection	no	yes
connection	no	yes
=	no	no
createClientConnection	no	yes
(	no	no
ssl	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
open	no	yes
(	no	no
,	no	no
port	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
header	no	yes
)	no	no
;	no	no
AmqpHeader	no	yes
response	yes	yes
=	no	no
connection	no	yes
.	no	no
readAmqpHeader	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
response	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeDestination	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ActiveMQDestination	no	yes
destination	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
removeDestination	no	yes
(	no	no
context	no	yes
,	no	no
destination	no	yes
,	no	no
timeout	no	yes
)	no	no
;	no	no
DestinationInfo	no	yes
info	no	yes
=	no	no
destinations	no	yes
.	no	no
remove	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
info	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
isUseVirtualDestSubs	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
:	no	no
virtualDestinationConsumers	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
VirtualDestination	no	yes
virtualDestination	no	yes
=	no	no
virtualDestinationConsumers	no	yes
.	no	no
get	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinationMatcher	no	yes
.	no	no
matches	no	yes
(	no	no
virtualDestination	no	yes
,	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
VirtualConsumerPair	no	yes
key	yes	yes
=	no	no
new	no	yes
VirtualConsumerPair	no	yes
(	no	no
virtualDestination	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
i	yes	yes
=	no	no
brokerConsumerDests	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumerInfo	no	yes
.	no	no
equals	no	yes
(	no	no
i	yes	yes
)	no	no
&&	no	no
brokerConsumerDests	no	yes
.	no	no
remove	no	yes
(	no	no
key	yes	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
virtualDestinationAdded	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
VirtualDestination	no	yes
virtualDestination	yes	yes
)	no	no
{	no	no
super	no	yes
.	no	no
virtualDestinationAdded	no	yes
(	no	no
context	no	yes
,	no	no
virtualDestination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinations	no	yes
.	no	no
add	no	yes
(	no	no
virtualDestination	yes	yes
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
fireVirtualDestinationAddAdvisory	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
,	no	no
ActiveMQDestination	no	yes
activeMQDest	no	yes
,	no	no
VirtualDestination	no	yes
virtualDestination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
info	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
VirtualConsumerPair	no	yes
pair	yes	yes
=	no	no
new	no	yes
VirtualConsumerPair	no	yes
(	no	no
virtualDestination	no	yes
,	no	no
activeMQDest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
brokerConsumerDests	no	yes
.	no	no
get	no	yes
(	no	no
pair	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
ConnectionId	no	yes
connectionId	no	yes
=	no	no
new	no	yes
ConnectionId	no	yes
(	no	no
connectionIdGenerator	no	yes
.	no	no
generateId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SessionId	no	yes
sessionId	no	yes
=	no	no
new	no	yes
SessionId	no	yes
(	no	no
connectionId	no	yes
,	no	no
sessionIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ConsumerId	no	yes
consumerId	no	yes
=	no	no
new	no	yes
ConsumerId	no	yes
(	no	no
sessionId	no	yes
,	no	no
consumerIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
info	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
consumerId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
brokerConsumerDests	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
pair	yes	yes
,	no	no
info	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
fireVirtualDestinationAddAdvisory	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
,	no	no
ActiveMQDestination	no	yes
activeMQDest	no	yes
,	no	no
VirtualDestination	no	yes
virtualDestination	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
info	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
VirtualConsumerPair	no	yes
pair	no	yes
=	no	no
new	no	yes
VirtualConsumerPair	no	yes
(	no	no
virtualDestination	yes	yes
,	no	no
activeMQDest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
brokerConsumerDests	no	yes
.	no	no
get	no	yes
(	no	no
pair	no	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
ConnectionId	no	yes
connectionId	no	yes
=	no	no
new	no	yes
ConnectionId	no	yes
(	no	no
connectionIdGenerator	no	yes
.	no	no
generateId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SessionId	no	yes
sessionId	no	yes
=	no	no
new	no	yes
SessionId	no	yes
(	no	no
connectionId	no	yes
,	no	no
sessionIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ConsumerId	no	yes
consumerId	no	yes
=	no	no
new	no	yes
ConsumerId	no	yes
(	no	no
sessionId	no	yes
,	no	no
consumerIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
info	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
consumerId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
brokerConsumerDests	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
pair	no	yes
,	no	no
info	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
pair	no	yes
,	no	no
info	yes	yes
)	no	no
;	no	no
setConsumerInfoVirtualDest	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
,	no	no
activeMQDest	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
AdvisorySupport	no	yes
.	no	no
getVirtualDestinationConsumerAdvisoryTopic	no	yes
(	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinationConsumers	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no

SessionId	no	yes
sessionId	no	yes
=	no	no
new	no	yes
SessionId	no	yes
(	no	no
connectionId	no	yes
,	no	no
sessionIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ConsumerId	no	yes
consumerId	no	yes
=	no	no
new	no	yes
ConsumerId	no	yes
(	no	no
sessionId	no	yes
,	no	no
consumerIdGenerator	no	yes
.	no	no
getNextSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
info	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
consumerId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
brokerConsumerDests	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
pair	no	yes
,	no	no
info	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
pair	no	yes
,	no	no
info	yes	yes
)	no	no
;	no	no
setConsumerInfoVirtualDest	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
,	no	no
activeMQDest	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
AdvisorySupport	no	yes
.	no	no
getVirtualDestinationConsumerAdvisoryTopic	no	yes
(	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinationConsumers	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
)	no	no
;	no	no
fireConsumerAdvisory	no	yes
(	no	no
context	no	yes
,	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
topic	no	yes
,	no	no
info	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
info	yes	yes
=	no	no
info	yes	yes
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
setConsumerInfoVirtualDest	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
,	no	no
activeMQDest	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
AdvisorySupport	no	yes
.	no	no
getVirtualDestinationConsumerAdvisoryTopic	no	yes
(	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinationConsumers	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
info	yes	yes
,	no	no
virtualDestination	yes	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
virtualDestinationRemoved	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
VirtualDestination	no	yes
virtualDestination	yes	yes
)	no	no
{	no	no
super	no	yes
.	no	no
virtualDestinationRemoved	no	yes
(	no	no
context	no	yes
,	no	no
virtualDestination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinations	no	yes
.	no	no
remove	no	yes
(	no	no
virtualDestination	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
virtualDestinationRemoved	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
VirtualDestination	no	yes
virtualDestination	no	yes
)	no	no
{	no	no
super	no	yes
.	no	no
virtualDestinationRemoved	no	yes
(	no	no
context	no	yes
,	no	no
virtualDestination	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestinations	no	yes
.	no	no
remove	no	yes
(	no	no
virtualDestination	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
virtualDestination	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
consumersLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
isUseVirtualDestSubsOnCreation	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
AdvisorySupport	no	yes
.	no	no
isAdvisoryTopic	no	yes
(	no	no
virtualDestination	no	yes
.	no	no
getVirtualDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
virtualDestinationConsumers	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
virtualDestinationConsumers	no	yes
.	no	no
get	no	yes
(	no	no
info	no	yes
)	no	no
.	no	no
equals	no	yes
(	no	no
virtualDestination	no	yes
)	no	no
)	no	no
{	no	no
fireVirtualDestinationRemoveAdvisory	no	yes
(	no	no
context	no	yes
,	no	no
info	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
VirtualConsumerPair	no	yes
activeMQDest	yes	yes
:	no	no
brokerConsumerDests	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConsumerInfo	no	yes
i	yes	yes
=	no	no
brokerConsumerDests	no	yes
.	no	no
get	no	yes
(	no	no
activeMQDest	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
equals	no	yes
(	no	no
i	yes	yes
)	no	no
&&	no	no
brokerConsumerDests	no	yes
.	no	no
remove	no	yes
(	no	no
activeMQDest	yes	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
fireVirtualDestinationRemoveAdvisory	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
VirtualDestination	no	yes
virtualDestination	yes	yes
=	no	no
virtualDestinationConsumers	no	yes
.	no	no
remove	no	yes
(	no	no
info	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
virtualDestination	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
handleFireFailure	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
cause	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
message	yes	yes
,	no	no
cause	yes	yes
)	no	no
;	no	no

if	no	yes
(	no	no
persistenceAdapterToStart	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
checkStartException	no	yes
(	no	no
)	no	no
;	no	no
throw	no	yes
new	no	yes
ConfigurationException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
persistenceAdapterToStart	no	yes
.	no	no
setUsageManager	no	yes
(	no	no
getProducerSystemUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
persistenceAdapterToStart	no	yes
.	no	no
setBrokerName	no	yes
(	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
persistenceAdapterToStart	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
deleteAllMessagesOnStartup	no	yes
)	no	no
{	no	no
deleteAllMessages	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
persistenceAdapterToStart	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
getTempDataStore	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tempDataStore	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
tempDataStore	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
RuntimeException	no	yes
exception	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
+	no	no
tempDataStore	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no

deleteAllMessages	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
persistenceAdapterToStart	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
getTempDataStore	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tempDataStore	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
tempDataStore	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
RuntimeException	no	yes
exception	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
+	no	no
tempDataStore	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
exception	yes	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	yes
exception	yes	yes
;	no	no
}	no	no
}	no	no
getJobSchedulerStore	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
jobSchedulerStore	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
jobSchedulerStore	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
boolean	no	yes
checkQueueSize	no	yes
(	no	no
String	no	yes
queueName	no	yes
)	no	no
{	no	no
long	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
queueSize	yes	yes
=	no	no
0	no	no
;	no	no
Map	no	yes
<	no	no
ActiveMQDestination	no	yes
,	no	no
Destination	no	yes
>	no	no
destinationMap	no	yes
=	no	no
regionBroker	no	yes
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ActiveMQDestination	no	yes
,	no	no
Destination	no	yes
>	no	no
entry	no	yes
:	no	no
destinationMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
isQueue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
matches	no	yes
(	no	no
queueName	no	yes
)	no	no
)	no	no
{	no	no
queueSize	yes	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getMessages	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
;	no	no
count	no	yes
+=	no	no
queueSize	yes	yes
;	no	no
if	no	yes
(	no	no
queueSize	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
checkUsageLimit	no	yes
(	no	no
File	no	yes
dir	no	yes
,	no	no
PercentLimitUsage	no	yes
<	no	no
?	no	no
>	no	no
storeUsage	no	yes
,	no	no
int	no	yes
percentLimit	no	yes
)	no	no
throws	no	yes
ConfigurationException	no	yes
{	no	no
if	no	yes
(	no	no
dir	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
dir	no	yes
=	no	no
StoreUtil	no	yes
.	no	no
findParentDirectory	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
String	no	yes
storeName	no	yes
=	no	no
storeUsage	no	yes
instanceof	no	no
StoreUsage	no	yes
?	no	no
:	no	no
;	no	no
long	no	yes
storeLimit	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
storeCurrent	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getUsage	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
totalSpace	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
?	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
:	no	no
dir	no	yes
.	no	no
getTotalSpace	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
totalUsableSpace	no	yes
=	no	no
(	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
?	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
:	no	no
dir	no	yes
.	no	no
getUsableSpace	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
storeCurrent	no	yes
;	no	no
if	no	yes
(	no	no
totalUsableSpace	no	yes
<	no	no
0	no	no
||	no	no
totalSpace	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
message	yes	yes
=	no	no
+	no	no
dir	no	yes
+	no	no
;	no	no

dir	no	yes
=	no	no
StoreUtil	no	yes
.	no	no
findParentDirectory	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
String	no	yes
storeName	yes	yes
=	no	no
storeUsage	no	yes
instanceof	no	no
StoreUsage	no	yes
?	no	no
:	no	no
;	no	no
long	no	yes
storeLimit	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
storeCurrent	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getUsage	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
totalSpace	no	yes
=	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
?	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
:	no	no
dir	no	yes
.	no	no
getTotalSpace	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
totalUsableSpace	no	yes
=	no	no
(	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
?	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
:	no	no
dir	no	yes
.	no	no
getUsableSpace	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
storeCurrent	no	yes
;	no	no
if	no	yes
(	no	no
totalUsableSpace	no	yes
<	no	no
0	no	no
||	no	no
totalSpace	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
message	no	yes
=	no	no
+	no	no
dir	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
throw	no	yes
new	no	yes
ConfigurationException	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
bytePercentLimit	no	yes
=	no	no
totalSpace	no	yes
*	no	no
percentLimit	yes	yes
/	no	no
100	no	no
;	no	no
int	no	yes
oneMeg	no	yes
=	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
if	no	yes
(	no	no
diskUsageCheckRegrowThreshold	no	yes
>	no	no
-	no	no
1	no	no
&&	no	no
percentLimit	yes	yes
>	no	no
0	no	no
&&	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
&&	no	no
storeLimit	no	yes
<	no	no
bytePercentLimit	no	yes
&&	no	no
storeLimit	no	yes
<	no	no
totalUsableSpace	no	yes
)	no	no
{	no	no
long	no	yes
newLimit	no	yes
=	no	no
bytePercentLimit	no	yes
>	no	no
totalUsableSpace	no	yes
?	no	no
totalUsableSpace	no	yes
:	no	no
bytePercentLimit	no	yes
;	no	no
if	no	yes
(	no	no
newLimit	no	yes
-	no	no
storeLimit	no	yes
>=	no	no
diskUsageCheckRegrowThreshold	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
totalUsableSpace	no	yes
<	no	no
0	no	no
||	no	no
totalSpace	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
message	yes	yes
=	no	no
+	no	no
dir	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
throw	no	yes
new	no	yes
ConfigurationException	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
long	no	yes
bytePercentLimit	no	yes
=	no	no
totalSpace	no	yes
*	no	no
percentLimit	no	yes
/	no	no
100	no	no
;	no	no
int	no	yes
oneMeg	no	yes
=	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
if	no	yes
(	no	no
diskUsageCheckRegrowThreshold	no	yes
>	no	no
-	no	no
1	no	no
&&	no	no
percentLimit	no	yes
>	no	no
0	no	no
&&	no	no
storeUsage	no	yes
.	no	no
getTotal	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
&&	no	no
storeLimit	no	yes
<	no	no
bytePercentLimit	no	yes
&&	no	no
storeLimit	no	yes
<	no	no
totalUsableSpace	no	yes
)	no	no
{	no	no
long	no	yes
newLimit	no	yes
=	no	no
bytePercentLimit	no	yes
>	no	no
totalUsableSpace	no	yes
?	no	no
totalUsableSpace	no	yes
:	no	no
bytePercentLimit	no	yes
;	no	no
if	no	yes
(	no	no
newLimit	no	yes
-	no	no
storeLimit	no	yes
>=	no	no
diskUsageCheckRegrowThreshold	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
storeName	no	yes
+	no	no
+	no	no
percentLimit	no	yes
+	no	no
)	no	no
;	no	no
storeUsage	no	yes
.	no	no
setLimit	no	yes
(	no	no
newLimit	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
storeName	no	yes
+	no	no
+	no	no
newLimit	no	yes
*	no	no
100	no	no
/	no	no
totalSpace	no	yes
+	no	no
+	no	no
newLimit	no	yes
/	no	no
oneMeg	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
storeLimit	no	yes
>	no	no
totalUsableSpace	no	yes
)	no	no
{	no	no
final	no	yes
String	no	yes
message	yes	yes
=	no	no
storeName	no	yes
+	no	no
+	no	no
storeLimit	no	yes
/	no	no
oneMeg	no	yes
+	no	no
+	no	no
storeCurrent	no	yes
/	no	no
oneMeg	no	yes
+	no	no
+	no	no
dir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
totalUsableSpace	no	yes
/	no	no
oneMeg	no	yes
+	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
isAdjustUsageLimits	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
logError	no	yes
(	no	no
String	no	yes
message	no	yes
,	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
useLoggingForShutdownErrors	no	yes
)	no	no
{	no	no

connector	yes	yes
.	no	no
setDurableDestinations	no	yes
(	no	no
durableDestinations	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
defaultSocketURI	no	yes
=	no	no
getDefaultSocketURIString	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
defaultSocketURI	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connector	yes	yes
.	no	no
setBrokerURL	no	yes
(	no	no
defaultSocketURI	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseJmx	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ObjectName	no	yes
networkMbean	no	yes
=	no	no
createNetworkConnectorObjectName	no	yes
(	no	no
connector	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
getObjectInstance	no	yes
(	no	no
networkMbean	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InstanceNotFoundException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
networkMbean	no	yes
)	no	no
;	no	no
registerNetworkConnectorMBean	no	yes
(	no	no
connector	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
networkConnectorStartExecutor	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
networkConnectorStartExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

if	no	yes
(	no	no
defaultSocketURI	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connector	yes	yes
.	no	no
setBrokerURL	no	yes
(	no	no
defaultSocketURI	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseJmx	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ObjectName	no	yes
networkMbean	no	yes
=	no	no
createNetworkConnectorObjectName	no	yes
(	no	no
connector	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
getObjectInstance	no	yes
(	no	no
networkMbean	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InstanceNotFoundException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
networkMbean	no	yes
)	no	no
;	no	no
registerNetworkConnectorMBean	no	yes
(	no	no
connector	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
networkConnectorStartExecutor	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
networkConnectorStartExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connector	yes	yes
)	no	no
;	no	no
connector	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
synchronized	no	yes
ThreadPoolExecutor	no	yes
getExecutor	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
executor	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
this	no	yes
.	no	no
executor	no	yes
=	no	no
new	no	yes
ThreadPoolExecutor	no	yes
(	no	no
1	no	no
,	no	no
10	no	no
,	no	no
60	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
,	no	no
new	no	yes
LinkedBlockingQueue	no	yes
<	no	no
Runnable	no	yes
>	no	no
(	no	no
)	no	no
,	no	no
new	no	yes
ThreadFactory	no	yes
(	no	no
)	no	no
{	no	no
private	no	yes
long	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
Thread	no	yes
newThread	no	yes
(	no	no
Runnable	no	yes
runnable	no	yes
)	no	no
{	no	no
this	no	yes
.	no	no
i	no	yes
++	no	no
;	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
runnable	no	yes
,	no	no
+	no	no
this	no	yes
.	no	no
i	no	yes
)	no	no
;	no	no
thread	no	yes
.	no	no
setDaemon	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
thread	no	yes
.	no	no
setUncaughtExceptionHandler	no	yes
(	no	no
new	no	yes
Thread	no	yes
.	no	no
UncaughtExceptionHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
uncaughtException	no	yes
(	no	no
final	no	yes
Thread	no	yes
t	yes	yes
,	no	no
final	no	yes
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

producerExchange	no	yes
.	no	no
setConnectionContext	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
producerExchange	no	yes
.	no	no
setProducerState	no	yes
(	no	no
new	no	yes
ProducerState	no	yes
(	no	no
new	no	yes
ProducerInfo	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
ConsumerBrokerExchange	no	yes
consumerExchange	no	yes
=	no	no
new	no	yes
ConsumerBrokerExchange	no	yes
(	no	no
)	no	no
;	no	no
consumerExchange	no	yes
.	no	no
setConnectionContext	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
transactionStore	no	yes
.	no	no
recover	no	yes
(	no	no
new	no	yes
TransactionRecoveryListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
recover	no	yes
(	no	no
XATransactionId	no	yes
xid	no	yes
,	no	no
Message	no	yes
[	no	no
]	no	no
addedMessages	no	yes
,	no	no
MessageAck	no	yes
[	no	no
]	no	no
aks	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
beginTransaction	no	yes
(	no	no
context	no	yes
,	no	no
xid	no	yes
)	no	no
;	no	no
XATransaction	no	yes
transaction	yes	yes
=	no	no
(	no	no
XATransaction	no	yes
)	no	no
getTransaction	no	yes
(	no	no
context	no	yes
,	no	no
xid	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
addedMessages	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
forceDestinationWakeupOnCompletion	no	yes
(	no	no
context	no	yes
,	no	no
transaction	yes	yes
,	no	no
addedMessages	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
addedMessages	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
aks	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
forceDestinationWakeupOnCompletion	no	yes
(	no	no
context	no	yes
,	no	no
transaction	yes	yes
,	no	no
aks	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
aks	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
transaction	yes	yes
.	no	no
setState	no	yes
(	no	no
Transaction	no	yes
.	no	no
PREPARED_STATE	no	yes
)	no	no
;	no	no
registerMBean	no	yes
(	no	no
transaction	yes	yes
)	no	no
;	no	no

public	no	yes
TransactionId	no	yes
[	no	no
]	no	no
getPreparedTransactions	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
List	no	yes
<	no	no
TransactionId	no	yes
>	no	no
txs	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
TransactionId	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
xaTransactions	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
XATransaction	no	yes
>	no	no
iter	no	yes
=	no	no
xaTransactions	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Transaction	no	yes
tx	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tx	yes	yes
.	no	no
isPrepared	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
serviceTransportException	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
stopping	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
status	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
PENDING_STOP	no	yes
)	no	no
{	no	no
transportException	no	yes
.	no	no
set	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
TRANSPORTLOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

else	no	yes
if	no	yes
(	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
BrokerStoppedException	no	yes
.	no	no
class	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
stopping	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
SERVICELOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
ConnectionError	no	yes
ce	no	yes
=	no	no
new	no	yes
ConnectionError	no	yes
(	no	no
)	no	no
;	no	no
ce	no	yes
.	no	no
setException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
dispatchSync	no	yes
(	no	no
ce	no	yes
)	no	no
;	no	no
transportException	no	yes
.	no	no
set	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ie	no	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
stopAsync	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
!	no	no
stopping	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
inServiceException	no	yes
)	no	no
{	no	no
inServiceException	no	yes
=	no	no
true	no	yes
;	no	no
try	no	yes
{	no	no

private	no	yes
void	no	yes
forceRollbackOnlyOnFailedAsyncTransactionOp	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
,	no	no
Command	no	yes
command	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
brokerService	no	yes
.	no	no
isRollbackOnlyOnAsyncException	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
e	yes	yes
instanceof	no	no
IOException	no	yes
)	no	no
&&	no	no
isInTransaction	no	yes
(	no	no
command	yes	yes
)	no	no
)	no	no
{	no	no
Transaction	no	yes
transaction	no	yes
=	no	no
getActiveTransaction	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
transaction	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
transaction	no	yes
.	no	no
isRollbackOnly	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
Response	no	yes
processRemoveConnection	no	yes
(	no	no
ConnectionId	no	yes
id	yes	yes
,	no	no
long	no	yes
lastDeliveredSequenceId	no	yes
)	no	no
throws	no	yes
InterruptedException	no	yes
{	no	no

try	no	yes
{	no	no
broker	no	yes
.	no	no
preProcessDispatch	no	yes
(	no	no
messageDispatch	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
RuntimeException	no	yes
convertToIO	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
convertToIO	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
dispatch	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
messageDispatch	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
TransmitCallback	no	yes
sub	no	yes
=	no	no
messageDispatch	no	yes
.	no	no
getTransmitCallback	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
postProcessDispatch	no	yes
(	no	no
messageDispatch	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
sub	no	yes
.	no	no
onFailure	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
messageDispatch	no	yes
=	no	no
null	no	yes
;	no	no
throw	no	yes
e	yes	yes
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
TRANSPORTLOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

else	no	yes
{	no	no
taskRunner	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
transport	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
active	no	yes
=	no	no
true	no	yes
;	no	no
BrokerInfo	no	yes
info	no	yes
=	no	no
connector	no	yes
.	no	no
getBrokerInfo	no	yes
(	no	no
)	no	no
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connector	no	yes
.	no	no
isUpdateClusterClients	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
info	no	yes
.	no	no
setPeerBrokerInfos	no	yes
(	no	no
this	yes	yes
.	no	no
broker	no	yes
.	no	no
getPeerBrokerInfos	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
info	no	yes
.	no	no
setPeerBrokerInfos	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
dispatchAsync	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
connector	no	yes
.	no	no
onStarted	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
status	no	yes
.	no	no
set	no	yes
(	no	no
PENDING_STOP	no	yes
)	no	no
;	no	no
throw	no	yes
e	no	yes
;	no	no
}	no	no
finally	no	yes
{	no	no

public	no	yes
void	no	yes
delayedStop	no	yes
(	no	no
final	no	yes
int	no	yes
waitTime	no	yes
,	no	no
final	no	yes
String	no	yes
reason	yes	yes
,	no	no
Throwable	no	yes
cause	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
waitTime	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
status	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
STARTING	no	yes
,	no	no
PENDING_STOP	no	yes
)	no	no
;	no	no
transportException	no	yes
.	no	no
set	no	yes
(	no	no
cause	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
stopTaskRunnerFactory	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
waitTime	no	yes
)	no	no
;	no	no
stopAsync	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
stopping	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
TransportConnectionState	no	yes
>	no	no
connectionStates	no	yes
=	no	no
listConnectionStates	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransportConnectionState	no	yes
cs	no	yes
:	no	no
connectionStates	no	yes
)	no	no
{	no	no
ConnectionContext	no	yes
connectionContext	no	yes
=	no	no
cs	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connectionContext	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connectionContext	no	yes
.	no	no
getStopping	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
stopTaskRunnerFactory	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
serviceLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
doStop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Response	no	yes
processBrokerInfo	no	yes
(	no	no
BrokerInfo	no	yes
info	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
info	yes	yes
.	no	no
isSlaveBroker	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

TransportConnection	no	yes
c	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
c	no	yes
!=	no	no
this	no	yes
)	no	no
&&	no	no
(	no	no
duplexNetworkConnectorId	yes	yes
.	no	no
equals	no	yes
(	no	no
c	no	yes
.	no	no
getDuplexNetworkConnectorId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
c	no	yes
,	no	no
duplexNetworkConnectorId	yes	yes
)	no	no
;	no	no
c	no	yes
.	no	no
stopAsync	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
getStopped	no	yes
(	no	no
)	no	no
.	no	no
await	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
setDuplexNetworkConnectorId	no	yes
(	no	no
duplexNetworkConnectorId	yes	yes
)	no	no
;	no	no
}	no	no
Transport	no	yes
localTransport	no	yes
=	no	no
NetworkBridgeFactory	no	yes
.	no	no
createLocalTransport	no	yes
(	no	no
config	no	yes
,	no	no
broker	no	yes
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Transport	no	yes
remoteBridgeTransport	no	yes
=	no	no
transport	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
(	no	no
remoteBridgeTransport	no	yes
instanceof	no	no
ResponseCorrelator	no	yes
)	no	no
)	no	no
{	no	no
remoteBridgeTransport	no	yes
=	no	no
new	no	yes
ResponseCorrelator	no	yes
(	no	no
remoteBridgeTransport	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
duplexName	no	yes
=	no	no
localTransport	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
duplexName	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
duplexName	no	yes
=	no	no
duplexName	no	yes
.	no	no
substring	no	yes
(	no	no
duplexName	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MBeanNetworkListener	no	yes
listener	no	yes
=	no	no
new	no	yes
MBeanNetworkListener	no	yes
(	no	no
brokerService	no	yes
,	no	no
config	no	yes
,	no	no
brokerService	no	yes
.	no	no
createDuplexNetworkConnectorObjectName	no	yes
(	no	no
duplexName	no	yes
)	no	no
)	no	no
;	no	no
listener	no	yes
.	no	no
setCreatedByDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no

}	no	no
setDuplexNetworkConnectorId	no	yes
(	no	no
duplexNetworkConnectorId	yes	yes
)	no	no
;	no	no
}	no	no
Transport	no	yes
localTransport	no	yes
=	no	no
NetworkBridgeFactory	no	yes
.	no	no
createLocalTransport	no	yes
(	no	no
config	no	yes
,	no	no
broker	no	yes
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Transport	no	yes
remoteBridgeTransport	no	yes
=	no	no
transport	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
(	no	no
remoteBridgeTransport	no	yes
instanceof	no	no
ResponseCorrelator	no	yes
)	no	no
)	no	no
{	no	no
remoteBridgeTransport	no	yes
=	no	no
new	no	yes
ResponseCorrelator	no	yes
(	no	no
remoteBridgeTransport	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
duplexName	no	yes
=	no	no
localTransport	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
duplexName	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
duplexName	no	yes
=	no	no
duplexName	no	yes
.	no	no
substring	no	yes
(	no	no
duplexName	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MBeanNetworkListener	no	yes
listener	no	yes
=	no	no
new	no	yes
MBeanNetworkListener	no	yes
(	no	no
brokerService	no	yes
,	no	no
config	no	yes
,	no	no
brokerService	no	yes
.	no	no
createDuplexNetworkConnectorObjectName	no	yes
(	no	no
duplexName	no	yes
)	no	no
)	no	no
;	no	no
listener	no	yes
.	no	no
setCreatedByDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
duplexBridge	no	yes
=	no	no
config	no	yes
.	no	no
getBridgeFactory	no	yes
(	no	no
)	no	no
.	no	no
createNetworkBridge	no	yes
(	no	no
config	no	yes
,	no	no
localTransport	no	yes
,	no	no
remoteBridgeTransport	no	yes
,	no	no
listener	no	yes
)	no	no
;	no	no
duplexBridge	no	yes
.	no	no
setBrokerService	no	yes
(	no	no
brokerService	no	yes
)	no	no
;	no	no
duplexBridge	no	yes
.	no	no
setDurableDestinations	no	yes
(	no	no
NetworkConnector	no	yes
.	no	no
getDurableTopicDestinations	no	yes
(	no	no
broker	no	yes
.	no	no
getDurableDestinations	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
setDuplexConnection	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
duplexBridge	no	yes
.	no	no
setCreatedByDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
BrokerStoppedException	no	yes
(	no	no
+	no	no
brokerService	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
,	no	no
remoteHost	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
,	no	no
remoteHost	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no
onAcceptError	no	yes
(	no	no
error	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
private	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
,	no	no
String	no	yes
remoteHost	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
brokerService	no	yes
!=	no	no
null	no	yes
&&	no	no
brokerService	no	yes
.	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

else	no	yes
{	no	no
throw	no	yes
new	no	yes
BrokerStoppedException	no	yes
(	no	no
+	no	no
brokerService	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
,	no	no
remoteHost	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
,	no	no
remoteHost	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no
onAcceptError	no	yes
(	no	no
error	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
private	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
,	no	no
String	no	yes
remoteHost	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
brokerService	no	yes
!=	no	no
null	no	yes
&&	no	no
brokerService	no	yes
.	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
(	no	no
remoteHost	no	yes
==	no	no
null	no	yes
?	no	no
:	no	no
+	no	no
remoteHost	no	yes
)	no	no
,	no	no
error	yes	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
,	no	no
getRootCause	no	yes
(	no	no
error	yes	yes
)	no	no
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
String	no	yes
getPublishableConnectString	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
publishableConnectString	yes	yes
=	no	no
publishedAddressPolicy	no	yes
.	no	no
getPublishableConnectString	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no

Comparator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>>	no	no
getComparator	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
new	no	yes
Comparator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>>	no	no
(	no	no
)	no	no
{	no	no
Method	no	yes
getter	no	yes
=	no	no
findGetterMethod	no	yes
(	no	no
DestinationView	no	yes
.	no	no
class	no	yes
,	no	no
getSortColumn	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
{	no	no
,	no	no
}	no	no
)	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
compare	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
left	no	yes
,	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
right	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
getter	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
Object	no	yes
leftValue	no	yes
=	no	no
getter	no	yes
.	no	no
invoke	no	yes
(	no	no
left	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Object	no	yes
rightValue	no	yes
=	no	no
getter	no	yes
.	no	no
invoke	no	yes
(	no	no
right	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
leftValue	no	yes
instanceof	no	no
Comparable	no	yes
&&	no	no
rightValue	no	yes
instanceof	no	no
Comparable	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
getSortOrder	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
(	no	no
(	no	no
Comparable	no	yes
)	no	no
rightValue	no	yes
)	no	no
.	no	no
compareTo	no	yes
(	no	no
leftValue	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
(	no	no
(	no	no
Comparable	no	yes
)	no	no
leftValue	no	yes
)	no	no
.	no	no
compareTo	no	yes
(	no	no
rightValue	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
return	no	yes
0	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
setRootLogLevel	no	yes
(	no	no
String	no	yes
level	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ClassLoader	no	yes
cl	no	yes
=	no	no
getClassLoader	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
isLog4JAvailable	no	yes
(	no	no
cl	no	yes
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
loggerClass	no	yes
=	no	no
getLoggerClass	no	yes
(	no	no
cl	no	yes
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
levelClass	no	yes
=	no	no
getLevelClass	no	yes
(	no	no
cl	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
levelClass	no	yes
==	no	no
null	no	yes
||	no	no
loggerClass	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
String	no	yes
targetLevel	no	yes
=	no	no
level	yes	yes
.	no	no
toUpperCase	no	yes
(	no	no
Locale	no	yes
.	no	no
US	no	yes
)	no	no
;	no	no
Method	no	yes
getRootLogger	no	yes
=	no	no
loggerClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
new	no	yes
Class	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
;	no	no
Method	no	yes
setLevel	no	yes
=	no	no
loggerClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
levelClass	no	yes
)	no	no
;	no	no
Object	no	yes
rootLogger	no	yes
=	no	no
getRootLogger	no	yes
.	no	no
invoke	no	yes
(	no	no
null	no	yes
,	no	no
(	no	no
Object	no	yes
[	no	no
]	no	no
)	no	no
null	no	yes
)	no	no
;	no	no
Method	no	yes
toLevel	no	yes
=	no	no
levelClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
String	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
Object	no	yes
newLevel	no	yes
=	no	no
toLevel	no	yes
.	no	no
invoke	no	yes
(	no	no
null	no	yes
,	no	no
targetLevel	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
newLevel	no	yes
!=	no	no
null	no	yes
&&	no	no
newLevel	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
targetLevel	no	yes
)	no	no
)	no	no
{	no	no

throw	no	yes
new	no	yes
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ClassLoader	no	yes
cl	no	yes
=	no	no
getClassLoader	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
isLog4JAvailable	no	yes
(	no	no
cl	no	yes
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
loggerClass	no	yes
=	no	no
getLoggerClass	no	yes
(	no	no
cl	no	yes
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
levelClass	no	yes
=	no	no
getLevelClass	no	yes
(	no	no
cl	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
loggerClass	no	yes
==	no	no
null	no	yes
||	no	no
levelClass	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
String	no	yes
targetLevel	no	yes
=	no	no
level	yes	yes
.	no	no
toUpperCase	no	yes
(	no	no
Locale	no	yes
.	no	no
US	no	yes
)	no	no
;	no	no
Method	no	yes
getLogger	no	yes
=	no	no
loggerClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
String	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
Method	no	yes
setLevel	no	yes
=	no	no
loggerClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
levelClass	no	yes
)	no	no
;	no	no
Method	no	yes
toLevel	no	yes
=	no	no
levelClass	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
String	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
Object	no	yes
logger	no	yes
=	no	no
getLogger	no	yes
.	no	no
invoke	no	yes
(	no	no
null	no	yes
,	no	no
loggerName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
logger	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
Object	no	yes
newLevel	no	yes
=	no	no
toLevel	no	yes
.	no	no
invoke	no	yes
(	no	no
null	no	yes
,	no	no
targetLevel	no	yes
)	no	no
;	no	no

info	no	yes
.	no	no
setSelector	no	yes
(	no	no
sub	yes	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addInactiveSubscription	no	yes
(	no	no
key	no	yes
,	no	no
info	no	yes
,	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
String	no	yes
userName	no	yes
=	no	no
brokerService	no	yes
.	no	no
isPopulateUserNameInMBeans	no	yes
(	no	no
)	no	no
?	no	no
context	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
sub	yes	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
isDurable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
view	no	yes
=	no	no
new	no	yes
DurableSubscriptionView	no	yes
(	no	no
this	no	yes
,	no	no
brokerService	no	yes
,	no	no
context	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
userName	no	yes
,	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
sub	yes	yes
instanceof	no	no
TopicSubscription	no	yes
)	no	no
{	no	no
view	no	yes
=	no	no
new	no	yes
TopicSubscriptionView	no	yes
(	no	no
context	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
userName	no	yes
,	no	no
(	no	no
TopicSubscription	no	yes
)	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
view	no	yes
=	no	no
new	no	yes
SubscriptionView	no	yes
(	no	no
context	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
userName	no	yes
,	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
registerSubscription	no	yes
(	no	no
objectName	no	yes
,	no	no
sub	yes	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
,	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
subscriptionMap	no	yes
.	no	no
put	no	yes
(	no	no
sub	yes	yes
,	no	no
objectName	no	yes
)	no	no
;	no	no
return	no	yes
objectName	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
dest	no	yes
.	no	no
isQueue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
temporaryQueues	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
queues	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
temporaryTopics	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
topics	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
AsyncAnnotatedMBean	no	yes
.	no	no
registerMBean	no	yes
(	no	no
asyncInvokeService	no	yes
,	no	no
mbeanTimeout	no	yes
,	no	no
managementContext	no	yes
,	no	no
view	no	yes
,	no	no
key	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
registeredMBeans	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
key	no	yes
)	no	no
;	no	no

view	no	yes
=	no	no
removeAndRemember	no	yes
(	no	no
temporaryQueues	no	yes
,	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
view	no	yes
=	no	no
removeAndRemember	no	yes
(	no	no
temporaryTopics	no	yes
,	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
registeredMBeans	no	yes
.	no	no
remove	no	yes
(	no	no
key	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
managementContext	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
view	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
key	no	yes
=	no	no
view	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
key	no	yes
!=	no	no
null	no	yes
&&	no	no
registeredMBeans	no	yes
.	no	no
remove	no	yes
(	no	no
key	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
managementContext	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
key	no	yes
)	no	no
;	no	no

temporaryQueueProducers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
queueProducers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
temporaryTopicProducers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
topicProducers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
dynamicDestinationProducers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
AsyncAnnotatedMBean	no	yes
.	no	no
registerMBean	no	yes
(	no	no
asyncInvokeService	no	yes
,	no	no
mbeanTimeout	no	yes
,	no	no
managementContext	no	yes
,	no	no
view	no	yes
,	no	no
key	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
registeredMBeans	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
key	no	yes
)	no	no
;	no	no

}	no	no
else	no	yes
{	no	no
queueSubscribers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
temporaryTopicSubscribers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
isDurable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
durableTopicSubscribers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
ObjectName	no	yes
inactiveName	no	yes
=	no	no
subscriptionKeys	no	yes
.	no	no
get	no	yes
(	no	no
subscriptionKey	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
inactiveName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
inactiveDurableTopicSubscribers	no	yes
.	no	no
remove	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
registeredMBeans	no	yes
.	no	no
remove	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
managementContext	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
isDurable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
durableTopicSubscribers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
ObjectName	no	yes
inactiveName	no	yes
=	no	no
subscriptionKeys	no	yes
.	no	no
get	no	yes
(	no	no
subscriptionKey	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
inactiveName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
inactiveDurableTopicSubscribers	no	yes
.	no	no
remove	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
registeredMBeans	no	yes
.	no	no
remove	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
managementContext	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
inactiveName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
subscriptionKey	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
topicSubscribers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
view	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
AsyncAnnotatedMBean	no	yes
.	no	no
registerMBean	no	yes
(	no	no
asyncInvokeService	no	yes
,	no	no
mbeanTimeout	no	yes
,	no	no
managementContext	no	yes
,	no	no
view	no	yes
,	no	no
key	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
buildExistingSubscriptions	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
SubscriptionKey	no	yes
,	no	no
SubscriptionInfo	no	yes
>	no	no
subscriptions	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
SubscriptionKey	no	yes
,	no	no
SubscriptionInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ActiveMQDestination	no	yes
>	no	no
destinations	no	yes
=	no	no
destinationFactory	no	yes
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
destinations	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	no	yes
:	no	no
destinations	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
SubscriptionInfo	no	yes
[	no	no
]	no	no
infos	no	yes
=	no	no
destinationFactory	no	yes
.	no	no
getAllDurableSubscriptions	no	yes
(	no	no
(	no	no
ActiveMQTopic	no	yes
)	no	no
dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
infos	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
infos	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
SubscriptionInfo	no	yes
info	yes	yes
=	no	no
infos	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
SubscriptionKey	no	yes
key	no	yes
=	no	no
new	no	yes
SubscriptionKey	no	yes
(	no	no
info	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
alreadyKnown	no	yes
(	no	no
key	no	yes
)	no	no
)	no	no
{	no	no

catch	no	yes
(	no	no
Throwable	no	yes
ignore	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
namingServiceObjectName	no	yes
,	no	no
ignore	no	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
t	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
brokerName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
MDC	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
brokerName	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
started	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
server	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
MDC	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
connectorServer	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
serverStub	no	yes
=	no	no
server	no	yes
.	no	no
toStub	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
brokerName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
stop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
started	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
true	no	yes
,	no	no
false	no	yes
)	no	no
)	no	no
{	no	no
MBeanServer	no	yes
mbeanServer	no	yes
=	no	no
getMBeanServer	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
ObjectName	no	yes
,	no	no
ObjectName	no	yes
>	no	no
entry	no	yes
:	no	no
registeredMBeanNames	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ObjectName	no	yes
actualName	yes	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
actualName	yes	yes
!=	no	no
null	no	yes
&&	no	no
beanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
actualName	yes	yes
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
actualName	no	yes
!=	no	no
null	no	yes
&&	no	no
beanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
actualName	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
actualName	no	yes
)	no	no
;	no	no
mbeanServer	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
actualName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
registeredMBeanNames	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
JMXConnectorServer	no	yes
server	no	yes
=	no	no
connectorServer	no	yes
;	no	no
connectorServer	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
server	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
connectorStarted	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
namingServiceObjectName	yes	yes
!=	no	no
null	no	yes
&&	no	no
getMBeanServer	no	yes
(	no	no
)	no	no
.	no	no
isRegistered	no	yes
(	no	no
namingServiceObjectName	yes	yes
)	no	no
)	no	no
{	no	no

mbeanServer	no	yes
.	no	no
unregisterMBean	no	yes
(	no	no
actualName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
registeredMBeanNames	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
JMXConnectorServer	no	yes
server	no	yes
=	no	no
connectorServer	no	yes
;	no	no
connectorServer	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
server	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
connectorStarted	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
namingServiceObjectName	yes	yes
!=	no	no
null	no	yes
&&	no	no
getMBeanServer	no	yes
(	no	no
)	no	no
.	no	no
isRegistered	no	yes
(	no	no
namingServiceObjectName	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
namingServiceObjectName	yes	yes
)	no	no
;	no	no
getMBeanServer	no	yes
(	no	no
)	no	no
.	no	no
invoke	no	yes
(	no	no
namingServiceObjectName	yes	yes
,	no	no
,	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
unregisterMBean	no	yes
(	no	no
ObjectName	no	yes
name	no	yes
)	no	no
throws	no	yes
JMException	no	yes
{	no	no
ObjectName	no	yes
actualName	yes	yes
=	no	no
this	no	yes
.	no	no
registeredMBeanNames	no	yes
.	no	no
get	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
beanServer	no	yes
!=	no	no
null	no	yes
&&	no	no
actualName	yes	yes
!=	no	no
null	no	yes
&&	no	no
beanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
actualName	yes	yes
)	no	no
&&	no	no
this	no	yes
.	no	no
registeredMBeanNames	no	yes
.	no	no
remove	no	yes
(	no	no
name	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
synchronized	no	yes
MBeanServer	no	yes
findMBeanServer	no	yes
(	no	no
)	no	no
{	no	no
MBeanServer	no	yes
result	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
useMBeanServer	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
findTigerMbeanServer	no	yes
)	no	no
{	no	no
result	no	yes
=	no	no
findTigerMBeanServer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
result	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
MBeanServer	no	yes
>	no	no
list	no	yes
=	no	no
MBeanServerFactory	no	yes
.	no	no
findMBeanServer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
list	no	yes
!=	no	no
null	no	yes
&&	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
list	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
result	no	yes
==	no	no
null	no	yes
&&	no	no
createMBeanServer	no	yes
)	no	no
{	no	no
result	no	yes
=	no	no
createMBeanServer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
NoClassDefFoundError	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
synchronized	no	yes
void	no	yes
purge	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
long	no	yes
originalMessageCount	yes	yes
=	no	no
destination	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getMessages	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
Queue	no	yes
)	no	no
destination	no	yes
)	no	no
.	no	no
purge	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
Destination	no	yes
addDestination	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ActiveMQDestination	no	yes
destination	yes	yes
,	no	no
boolean	no	yes
createIfTemporary	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
destinationsLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Destination	no	yes
dest	no	yes
=	no	no
destinations	no	yes
.	no	no
get	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
dest	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
destination	yes	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
==	no	no
false	no	yes
||	no	no
createIfTemporary	no	yes
)	no	no
{	no	no
validateMaxDestinations	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no

}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
broker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
destination	yes	yes
)	no	no
;	no	no
destinationsLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Destination	no	yes
dest	no	yes
=	no	no
destinations	no	yes
.	no	no
remove	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
dest	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
updateRegionDestCounts	no	yes
(	no	no
destination	yes	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Subscription	no	yes
>	no	no
iter	no	yes
=	no	no
subscriptions	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Subscription	no	yes
sub	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
sub	no	yes
.	no	no
matches	no	yes
(	no	no
destination	yes	yes
)	no	no
)	no	no
{	no	no
dest	no	yes
.	no	no
removeSubscription	no	yes
(	no	no
context	no	yes
,	no	no
sub	no	yes
,	no	no
0l	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
destinationMap	no	yes
.	no	no
unsynchronizedRemove	no	yes
(	no	no
destination	yes	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
dest	no	yes
instanceof	no	no
Queue	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
Queue	no	yes
)	no	no
dest	no	yes
)	no	no
.	no	no
purge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
dispose	no	yes
(	no	no
context	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
DestinationInterceptor	no	yes
destinationInterceptor	no	yes
=	no	no
broker	no	yes
.	no	no
getDestinationInterceptor	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
o	no	yes
;	no	no
}	no	no
DestinationFilter	no	yes
.	no	no
parseFilter	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Subscription	no	yes
sub	yes	yes
=	no	no
createSubscription	no	yes
(	no	no
context	no	yes
,	no	no
info	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Destination	no	yes
>	no	no
addList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Destination	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
destinationsLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
:	no	no
(	no	no
Set	no	yes
<	no	no
Destination	no	yes
>	no	no
)	no	no
destinationMap	no	yes
.	no	no
unsynchronizedGet	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
addList	no	yes
.	no	no
add	no	yes
(	no	no
dest	yes	yes
)	no	no
;	no	no
}	no	no
subscriptions	no	yes
.	no	no
put	no	yes
(	no	no
info	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
destinationsLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Destination	no	yes
>	no	no
removeList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Destination	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
:	no	no
addList	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
dest	yes	yes
.	no	no
addSubscription	no	yes
(	no	no
context	no	yes
,	no	no
sub	yes	yes
)	no	no
;	no	no

try	no	yes
{	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	no	yes
:	no	no
(	no	no
Set	no	yes
<	no	no
Destination	no	yes
>	no	no
)	no	no
destinationMap	no	yes
.	no	no
unsynchronizedGet	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
addList	no	yes
.	no	no
add	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
}	no	no
subscriptions	no	yes
.	no	no
put	no	yes
(	no	no
info	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
destinationsLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Destination	no	yes
>	no	no
removeList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Destination	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	no	yes
:	no	no
addList	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
dest	no	yes
.	no	no
addSubscription	no	yes
(	no	no
context	no	yes
,	no	no
sub	yes	yes
)	no	no
;	no	no
removeList	no	yes
.	no	no
add	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SecurityException	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
sub	yes	yes
.	no	no
isWildcard	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sub	yes	yes
+	no	no
+	no	no
dest	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
void	no	yes
activate	no	yes
(	no	no
SystemUsage	no	yes
memoryManager	no	yes
,	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	no	yes
,	no	no
RegionBroker	no	yes
regionBroker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
active	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
this	yes	yes
.	no	no
context	no	yes
=	no	no
context	no	yes
;	no	no
this	yes	yes
.	no	no
info	no	yes
=	no	no
info	no	yes
;	no	no

public	no	yes
void	no	yes
deactivate	no	yes
(	no	no
boolean	no	yes
keepDurableSubsActive	yes	yes
,	no	no
long	no	yes
lastDeliveredSequenceId	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

inAckRange	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
inAckRange	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
ack	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
messageId	no	yes
)	no	no
)	no	no
{	no	no
destination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
node	no	yes
.	no	no
getRegionDestination	no	yes
(	no	no
)	no	no
;	no	no
callDispatchMatched	no	yes
=	no	no
true	no	yes
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
callDispatchMatched	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
JMSException	no	yes
(	no	no
+	no	no
ack	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
ack	yes	yes
.	no	no
isPoisonAck	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
ack	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
JMSException	no	yes
(	no	no
+	no	no
ack	yes	yes
)	no	no
;	no	no
}	no	no
int	no	yes
index	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	yes
inAckRange	no	yes
=	no	no
false	no	yes
;	no	no
List	no	yes
<	no	no
MessageReference	no	yes
>	no	no
removeList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
MessageReference	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
final	no	yes
MessageReference	no	yes
node	no	yes
:	no	no
dispatched	no	yes
)	no	no
{	no	no

dispatchSelector	no	yes
.	no	no
setExclusiveConsumer	no	yes
(	no	no
exclusiveConsumer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isAllConsumersExclusiveByDefault	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Subscription	no	yes
exclusiveConsumer	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
Subscription	no	yes
s	no	yes
:	no	no
consumers	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
exclusiveConsumer	no	yes
==	no	no
null	no	yes
||	no	no
s	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getPriority	no	yes
(	no	no
)	no	no
>	no	no
exclusiveConsumer	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getPriority	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
exclusiveConsumer	no	yes
=	no	no
s	no	yes
;	no	no
}	no	no
}	no	no
dispatchSelector	no	yes
.	no	no
setExclusiveConsumer	no	yes
(	no	no
exclusiveConsumer	no	yes
)	no	no
;	no	no
}	no	no
ConsumerId	no	yes
consumerId	no	yes
=	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
;	no	no
getMessageGroupOwners	no	yes
(	no	no
)	no	no
.	no	no
removeConsumer	no	yes
(	no	no
consumerId	no	yes
)	no	no
;	no	no
boolean	no	yes
markAsRedelivered	no	yes
=	no	no
false	no	yes
;	no	no
MessageReference	no	yes
lastDeliveredRef	no	yes
=	no	no
null	no	yes
;	no	no
List	no	yes
<	no	no
MessageReference	no	yes
>	no	no
unAckedMessages	no	yes
=	no	no
sub	no	yes
.	no	no
remove	no	yes
(	no	no
context	no	yes
,	no	no
this	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
lastDeliveredSequenceId	yes	yes
>	no	no
RemoveInfo	no	yes
.	no	no
LAST_DELIVERED_UNSET	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
MessageReference	no	yes
ref	yes	yes
:	no	no
unAckedMessages	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
ref	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
==	no	no
lastDeliveredSequenceId	yes	yes
)	no	no
{	no	no

}	no	no
final	no	yes
ProducerInfo	no	yes
producerInfo	no	yes
=	no	no
producerExchange	no	yes
.	no	no
getProducerState	no	yes
(	no	no
)	no	no
.	no	no
getInfo	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
boolean	no	yes
sendProducerAck	no	yes
=	no	no
!	no	no
message	no	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
&&	no	no
producerInfo	no	yes
.	no	no
getWindowSize	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
!	no	no
context	no	yes
.	no	no
isInRecoveryMode	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
broker	no	yes
.	no	no
getRoot	no	yes
(	no	no
)	no	no
.	no	no
messageExpired	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
sendProducerAck	no	yes
)	no	no
{	no	no
ProducerAck	no	yes
ack	no	yes
=	no	no
new	no	yes
ProducerAck	no	yes
(	no	no
producerInfo	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
,	no	no
message	no	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
memoryUsage	yes	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
isFull	no	yes
(	no	no
context	no	yes
,	no	no
memoryUsage	yes	yes
)	no	no
;	no	no
fastProducer	no	yes
(	no	no
context	no	yes
,	no	no
producerInfo	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
isProducerFlowControl	no	yes
(	no	no
)	no	no
&&	no	no
context	no	yes
.	no	no
isProducerFlowControl	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
isFlowControlLogRequired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
memoryUsage	yes	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
,	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
.	no	no
getQualifiedName	no	yes
(	no	no
)	no	no
,	no	no
destinationStatistics	no	yes
.	no	no
getMessages	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

messagesWaitingForSpace	no	yes
.	no	no
put	no	yes
(	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
,	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
||	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
getState	no	yes
(	no	no
)	no	no
>	no	no
IN_USE_STATE	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
JMSException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
messageExpired	no	yes
(	no	no
context	no	yes
,	no	no
message	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no
destinationStatistics	no	yes
.	no	no
getExpired	no	yes
(	no	no
)	no	no
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
doMessageSend	no	yes
(	no	no
producerExchangeCopy	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
sendProducerAck	no	yes
)	no	no
{	no	no
ProducerAck	no	yes
ack	no	yes
=	no	no
new	no	yes
ProducerAck	no	yes
(	no	no
producerInfo	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
,	no	no
message	yes	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
sendProducerAck	no	yes
)	no	no
{	no	no
ProducerAck	no	yes
ack	no	yes
=	no	no
new	no	yes
ProducerAck	no	yes
(	no	no
producerInfo	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
,	no	no
message	yes	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
Response	no	yes
response	no	yes
=	no	no
new	no	yes
Response	no	yes
(	no	no
)	no	no
;	no	no
response	no	yes
.	no	no
setCorrelationId	no	yes
(	no	no
message	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
sendProducerAck	no	yes
&&	no	no
!	no	no
context	no	yes
.	no	no
isInRecoveryMode	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
brokerService	no	yes
.	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ExceptionResponse	no	yes
response	no	yes
=	no	no
new	no	yes
ExceptionResponse	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setCorrelationId	no	yes
(	no	no
message	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no

final	no	yes
ConnectionContext	no	yes
connectionContext	no	yes
=	no	no
createConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
int	no	yes
maxPageInAttempts	no	yes
=	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
messagesLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
maxPageInAttempts	no	yes
+=	no	no
(	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
/	no	no
max	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
messagesLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
while	no	yes
(	no	no
shouldPageInMoreForBrowse	no	yes
(	no	no
max	no	yes
)	no	no
&&	no	no
maxPageInAttempts	no	yes
--	no	no
>	no	no
0	no	no
)	no	no
{	no	no
pageInMessages	no	yes
(	no	no
!	no	no
memoryUsage	no	yes
.	no	no
isFull	no	yes
(	no	no
110	no	no
)	no	no
,	no	no
max	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
doBrowseList	no	yes
(	no	no
browseList	no	yes
,	no	no
max	no	yes
,	no	no
dispatchPendingList	no	yes
,	no	no
pagedInPendingDispatchLock	no	yes
,	no	no
connectionContext	no	yes
,	no	no
)	no	no
;	no	no
doBrowseList	no	yes
(	no	no
browseList	no	yes
,	no	no
max	no	yes
,	no	no
pagedInMessages	no	yes
,	no	no
pagedInMessagesLock	no	yes
,	no	no
connectionContext	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
BrokerStoppedException	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

it	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
op	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
registerCallbackForNotFullNotification	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
firstConsumer	no	yes
)	no	no
{	no	no
firstConsumer	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
consumersBeforeDispatchStarts	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
int	no	yes
timeout	yes	yes
=	no	no
1000	no	no
;	no	no
if	no	yes
(	no	no
timeBeforeDispatchStarts	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
timeout	yes	yes
=	no	no
timeBeforeDispatchStarts	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
consumersBeforeStartsLatch	no	yes
.	no	no
await	no	yes
(	no	no
timeout	yes	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
consumers	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

else	no	yes
{	no	no
registerCallbackForNotFullNotification	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
firstConsumer	no	yes
)	no	no
{	no	no
firstConsumer	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
consumersBeforeDispatchStarts	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
int	no	yes
timeout	no	yes
=	no	no
1000	no	no
;	no	no
if	no	yes
(	no	no
timeBeforeDispatchStarts	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
timeout	no	yes
=	no	no
timeBeforeDispatchStarts	yes	yes
;	no	no
}	no	no
if	no	yes
(	no	no
consumersBeforeStartsLatch	no	yes
.	no	no
await	no	yes
(	no	no
timeout	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
timeout	no	yes
,	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
timeBeforeDispatchStarts	yes	yes
>	no	no
0	no	no
&&	no	no
consumersBeforeDispatchStarts	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
timeout	no	yes
,	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
timeBeforeDispatchStarts	no	yes
>	no	no
0	no	no
&&	no	no
consumersBeforeDispatchStarts	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
iteratingMutex	no	yes
.	no	no
wait	no	yes
(	no	no
timeBeforeDispatchStarts	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
timeBeforeDispatchStarts	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
messagesLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
pageInMoreMessages	no	yes
|=	no	no
!	no	no
messages	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
messagesLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
pagedInPendingDispatchLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
pageInMoreMessages	no	yes
|=	no	no
!	no	no
dispatchPendingList	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageExpired	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Subscription	no	yes
subs	no	yes
,	no	no
MessageReference	no	yes
reference	yes	yes
)	no	no
{	no	no

result	no	yes
.	no	no
add	no	yes
(	no	no
ref	yes	yes
)	no	no
;	no	no
count	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
messages	no	yes
.	no	no
release	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
messagesLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
count	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
pagedInMessagesLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
isPrioritizedMessages	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
resultList	no	yes
=	no	no
new	no	yes
PrioritizedPendingList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resultList	no	yes
=	no	no
new	no	yes
OrderedPendingList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
QueueMessageReference	no	yes
ref	yes	yes
:	no	no
result	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
pagedInMessages	no	yes
.	no	no
contains	no	yes
(	no	no
ref	yes	yes
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
context	no	yes
.	no	no
isAllowLinkStealing	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
clientIdSet	no	yes
.	no	no
put	no	yes
(	no	no
clientId	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
InvalidClientIDException	no	yes
(	no	no
+	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
clientId	no	yes
+	no	no
+	no	no
oldContext	yes	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
clientIdSet	no	yes
.	no	no
put	no	yes
(	no	no
clientId	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
oldContext	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
oldContext	yes	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
oldContext	yes	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
clientId	no	yes
,	no	no
oldContext	yes	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connection	no	yes
instanceof	no	no
TransportConnection	no	yes
)	no	no
{	no	no
TransportConnection	no	yes
transportConnection	no	yes
=	no	no
(	no	no
TransportConnection	no	yes
)	no	no
connection	no	yes
;	no	no
transportConnection	no	yes
.	no	no
stopAsync	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
+	no	no
clientId	no	yes
+	no	no
+	no	no
oldContext	yes	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
connection	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageExpired	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
node	yes	yes
,	no	no
Subscription	no	yes
subscription	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
sendToDeadLetterQueue	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
node	no	yes
,	no	no
Subscription	no	yes
subscription	no	yes
,	no	no
Throwable	no	yes
poisonCause	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
node	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
node	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
&&	no	no
node	no	yes
.	no	no
getRegionDestination	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
DeadLetterStrategy	no	yes
deadLetterStrategy	no	yes
=	no	no
(	no	no
(	no	no
Destination	no	yes
)	no	no
node	no	yes
.	no	no
getRegionDestination	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDeadLetterStrategy	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
deadLetterStrategy	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
deadLetterStrategy	no	yes
.	no	no
isSendToDeadLetterQueue	no	yes
(	no	no
message	yes	yes
)	no	no
)	no	no
{	no	no
ActiveMQDestination	no	yes
deadLetterDestination	no	yes
=	no	no
deadLetterStrategy	no	yes
.	no	no
getDeadLetterQueueFor	no	yes
(	no	no
message	yes	yes
,	no	no
subscription	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
deadLetterDestination	no	yes
.	no	no
equals	no	yes
(	no	no
message	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

dlqExpiration	no	yes
+=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
stampAsExpired	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
message	yes	yes
.	no	no
setExpiration	no	yes
(	no	no
dlqExpiration	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
message	yes	yes
.	no	no
isPersistent	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
poisonCause	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
message	yes	yes
.	no	no
setProperty	no	yes
(	no	no
ActiveMQMessage	no	yes
.	no	no
DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY	no	yes
,	no	no
poisonCause	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ConnectionContext	no	yes
adminContext	no	yes
=	no	no
context	no	yes
;	no	no
if	no	yes
(	no	no
context	no	yes
.	no	no
getSecurityContext	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
||	no	no
!	no	no
context	no	yes
.	no	no
getSecurityContext	no	yes
(	no	no
)	no	no
.	no	no
isBrokerContext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
adminContext	no	yes
=	no	no
BrokerSupport	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
addDestination	no	yes
(	no	no
adminContext	no	yes
,	no	no
deadLetterDestination	no	yes
,	no	no
false	no	yes
)	no	no
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
.	no	no
setDLQ	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
BrokerSupport	no	yes
.	no	no
resendNoCopy	no	yes
(	no	no
adminContext	no	yes
,	no	no
message	yes	yes
,	no	no
deadLetterDestination	no	yes
)	no	no
;	no	no
return	no	yes
true	no	yes
;	no	no

long	no	yes
maxPurgedDests	no	yes
=	no	no
this	no	yes
.	no	no
brokerService	no	yes
.	no	no
getMaxPurgedDestinationsPerSweep	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
timeStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
d	no	yes
:	no	no
map	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
d	no	yes
.	no	no
markForGC	no	yes
(	no	no
timeStamp	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
d	no	yes
.	no	no
canGC	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
d	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
maxPurgedDests	no	yes
>	no	no
0	no	no
&&	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
maxPurgedDests	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
list	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
BrokerSupport	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
:	no	no
list	no	yes
)	no	no
{	no	no
Logger	no	yes
log	no	yes
=	no	no
LOG	no	yes
;	no	no
if	no	yes
(	no	no
dest	yes	yes
instanceof	no	no
BaseDestination	no	yes
)	no	no
{	no	no
log	no	yes
=	no	no
(	no	no
(	no	no
BaseDestination	no	yes
)	no	no
dest	yes	yes
)	no	no
.	no	no
getLog	no	yes
(	no	no
)	no	no
;	no	no

d	no	yes
.	no	no
markForGC	no	yes
(	no	no
timeStamp	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
d	no	yes
.	no	no
canGC	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
d	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
maxPurgedDests	no	yes
>	no	no
0	no	no
&&	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
maxPurgedDests	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
list	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
BrokerSupport	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
:	no	no
list	no	yes
)	no	no
{	no	no
Logger	no	yes
log	no	yes
=	no	no
LOG	no	yes
;	no	no
if	no	yes
(	no	no
dest	yes	yes
instanceof	no	no
BaseDestination	no	yes
)	no	no
{	no	no
log	no	yes
=	no	no
(	no	no
(	no	no
BaseDestination	no	yes
)	no	no
dest	yes	yes
)	no	no
.	no	no
getLog	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dest	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
dest	yes	yes
.	no	no
getInactiveTimeoutBeforeGC	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
getRoot	no	yes
(	no	no
)	no	no
.	no	no
removeDestination	no	yes
(	no	no
context	no	yes
,	no	no
dest	yes	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
,	no	no
isAllowTempAutoCreationOnSend	no	yes
(	no	no
)	no	no
?	no	no
1	no	no
:	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addSubscription	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Subscription	no	yes
sub	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isFaultTolerant	no	yes
(	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
isNetworkConnection	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
tempDest	yes	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
tempDest	yes	yes
.	no	no
setConnectionId	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
addSubscription	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Subscription	no	yes
sub	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isFaultTolerant	no	yes
(	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
isNetworkConnection	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
tempDest	yes	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
tempDest	yes	yes
.	no	no
setConnectionId	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
sendProducerAck	no	yes
&&	no	no
!	no	no
context	no	yes
.	no	no
isInRecoveryMode	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ExceptionResponse	no	yes
response	no	yes
=	no	no
new	no	yes
ExceptionResponse	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setCorrelationId	no	yes
(	no	no
message	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
dispatchAsync	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
registerCallbackForNotFullNotification	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setDontSendReponse	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
memoryUsage	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
memoryUsage	no	yes
.	no	no
waitForSpace	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
context	no	yes
.	no	no
getStopping	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
doCleanup	no	yes
(	no	no
)	no	no
{	no	no
long	no	yes
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
SubscriptionKey	no	yes
,	no	no
DurableTopicSubscription	no	yes
>	no	no
entry	no	yes
:	no	no
durableSubscriptions	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DurableTopicSubscription	no	yes
sub	yes	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
sub	yes	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
offline	no	yes
=	no	no
sub	yes	yes
.	no	no
getOfflineTimestamp	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
offline	no	yes
!=	no	no
-	no	no
1	no	no
&&	no	no
now	no	yes
-	no	no
offline	no	yes
>=	no	no
broker	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getOfflineDurableSubscriberTimeout	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
SubscriptionKey	no	yes
,	no	no
DurableTopicSubscription	no	yes
>	no	no
entry	no	yes
:	no	no
durableSubscriptions	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DurableTopicSubscription	no	yes
sub	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
sub	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
offline	no	yes
=	no	no
sub	no	yes
.	no	no
getOfflineTimestamp	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
offline	no	yes
!=	no	no
-	no	no
1	no	no
&&	no	no
now	no	yes
-	no	no
offline	no	yes
>=	no	no
broker	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getOfflineDurableSubscriberTimeout	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sub	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
RemoveSubscriptionInfo	no	yes
info	no	yes
=	no	no
new	no	yes
RemoveSubscriptionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
setClientId	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
setSubscriptionName	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
context	no	yes
.	no	no
setClientId	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
removeSubscription	no	yes
(	no	no
context	no	yes
,	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
List	no	yes
<	no	no
Subscription	no	yes
>	no	no
addSubscriptionsForDestination	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Destination	no	yes
dest	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
List	no	yes
<	no	no
Subscription	no	yes
>	no	no
rc	no	yes
=	no	no
super	no	yes
.	no	no
addSubscriptionsForDestination	no	yes
(	no	no
context	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
Subscription	no	yes
>	no	no
dupChecker	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
Subscription	no	yes
>	no	no
(	no	no
rc	no	yes
)	no	no
;	no	no
TopicMessageStore	no	yes
store	no	yes
=	no	no
(	no	no
TopicMessageStore	no	yes
)	no	no
dest	no	yes
.	no	no
getMessageStore	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
store	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
SubscriptionInfo	no	yes
[	no	no
]	no	no
infos	no	yes
=	no	no
store	no	yes
.	no	no
getAllSubscriptions	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
infos	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
SubscriptionInfo	no	yes
info	yes	yes
=	no	no
infos	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no

private	no	yes
boolean	no	yes
isDuplicate	no	yes
(	no	no
MessageReference	no	yes
node	yes	yes
)	no	no
{	no	no
boolean	no	yes
duplicate	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
enableAudit	no	yes
&&	no	no
audit	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
duplicate	no	yes
=	no	no
audit	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
node	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
duplicate	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
syncWithStore	no	yes
(	no	no
Message	no	yes
currentAdd	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
pruneLastCached	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ListIterator	no	yes
<	no	no
MessageId	no	yes
>	no	no
it	no	yes
=	no	no
pendingCachedIds	no	yes
.	no	no
listIterator	no	yes
(	no	no
pendingCachedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
it	no	yes
.	no	no
hasPrevious	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
MessageId	no	yes
lastPending	no	yes
=	no	no
it	no	yes
.	no	no
previous	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
futureOrLong	no	yes
=	no	no
lastPending	no	yes
.	no	no
getFutureOrSequenceLong	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
futureOrLong	no	yes
instanceof	no	no
Future	no	yes
)	no	no
{	no	no
Future	no	yes
future	no	yes
=	no	no
(	no	no
Future	no	yes
)	no	no
futureOrLong	no	yes
;	no	no
if	no	yes
(	no	no
future	no	yes
.	no	no
isCancelled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
setLastCachedId	no	yes
(	no	no
ASYNC_ADD	no	yes
,	no	no
lastPending	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
CancellationException	no	yes
ok	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
TimeoutException	no	yes
potentialDeadlock	yes	yes
)	no	no
{	no	no

for	no	yes
(	no	no
ListIterator	no	yes
<	no	no
MessageId	no	yes
>	no	no
it	no	yes
=	no	no
pendingCachedIds	no	yes
.	no	no
listIterator	no	yes
(	no	no
pendingCachedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
it	no	yes
.	no	no
hasPrevious	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
MessageId	no	yes
lastPending	no	yes
=	no	no
it	no	yes
.	no	no
previous	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
futureOrLong	no	yes
=	no	no
lastPending	no	yes
.	no	no
getFutureOrSequenceLong	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
futureOrLong	no	yes
instanceof	no	no
Future	no	yes
)	no	no
{	no	no
Future	no	yes
future	no	yes
=	no	no
(	no	no
Future	no	yes
)	no	no
futureOrLong	no	yes
;	no	no
if	no	yes
(	no	no
future	no	yes
.	no	no
isCancelled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
setLastCachedId	no	yes
(	no	no
ASYNC_ADD	no	yes
,	no	no
lastPending	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
CancellationException	no	yes
ok	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
TimeoutException	no	yes
potentialDeadlock	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
potentialDeadlock	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
worstCaseWeReplay	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
pruneLastCached	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
MessageId	no	yes
>	no	no
it	no	yes
=	no	no
pendingCachedIds	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
it	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
MessageId	no	yes
candidate	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Object	no	yes
futureOrLong	no	yes
=	no	no
candidate	no	yes
.	no	no
getFutureOrSequenceLong	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
futureOrLong	no	yes
instanceof	no	no
Future	no	yes
)	no	no
{	no	no
Future	no	yes
future	no	yes
=	no	no
(	no	no
Future	no	yes
)	no	no
futureOrLong	no	yes
;	no	no
if	no	yes
(	no	no
future	no	yes
.	no	no
isDone	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
future	no	yes
.	no	no
isCancelled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
it	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ExecutionException	no	yes
expected	no	yes
)	no	no
{	no	no
it	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
unexpected	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
hasSpace	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
isDiskListEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
expireOldMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
hasSpace	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
memoryList	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
node	yes	yes
)	no	no
;	no	no
node	yes	yes
.	no	no
incrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
true	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
flushToDisk	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
systemUsage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
waitForSpace	no	yes
(	no	no
maxWaitTime	no	yes
)	no	no
)	no	no
{	no	no
ByteSequence	no	yes
bs	no	yes
=	no	no
getByteSequence	no	yes
(	no	no
node	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
getDiskList	no	yes
(	no	no
)	no	no
.	no	no
addLast	no	yes
(	no	no
node	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
bs	no	yes
)	no	no
;	no	no
return	no	yes
true	no	yes
;	no	no
}	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
hasSpace	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
isDiskListEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
expireOldMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
hasSpace	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
memoryList	no	yes
.	no	no
addMessageFirst	no	yes
(	no	no
node	yes	yes
)	no	no
;	no	no
node	yes	yes
.	no	no
incrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
flushToDisk	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
systemUsage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
waitForSpace	no	yes
(	no	no
)	no	no
;	no	no
node	yes	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
bs	no	yes
=	no	no
getByteSequence	no	yes
(	no	no
node	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Object	no	yes
locator	no	yes
=	no	no
getDiskList	no	yes
(	no	no
)	no	no
.	no	no
addFirst	no	yes
(	no	no
node	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
bs	no	yes
)	no	no
;	no	no
node	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
setPlistLocator	no	yes
(	no	no
locator	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
discardExpiredMessage	no	yes
(	no	no
MessageReference	no	yes
reference	yes	yes
)	no	no
{	no	no

Map	no	yes
<	no	no
Connection	no	yes
,	no	no
List	no	yes
<	no	no
Subscription	no	yes
>>	no	no
abortMap	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
Connection	no	yes
,	no	no
List	no	yes
<	no	no
Subscription	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
final	no	yes
Entry	no	yes
<	no	no
Subscription	no	yes
,	no	no
SlowConsumerEntry	no	yes
>	no	no
entry	no	yes
:	no	no
toAbort	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConnectionContext	no	yes
connectionContext	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
context	no	yes
;	no	no
if	no	yes
(	no	no
connectionContext	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
Connection	no	yes
connection	yes	yes
=	no	no
connectionContext	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connection	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
connectionContext	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
abortMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
connection	yes	yes
)	no	no
)	no	no
{	no	no
abortMap	no	yes
.	no	no
put	no	yes
(	no	no
connection	yes	yes
,	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Subscription	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
abortMap	no	yes
.	no	no
get	no	yes
(	no	no
connection	yes	yes
)	no	no
.	no	no
add	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
Connection	no	yes
,	no	no
List	no	yes
<	no	no
Subscription	no	yes
>>	no	no
entry	no	yes
:	no	no
abortMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
Connection	no	yes
connection	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
Subscription	no	yes
>	no	no
subscriptions	yes	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
abortSubscriberConnection	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
!	no	no
abortMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
connection	yes	yes
)	no	no
)	no	no
{	no	no
abortMap	no	yes
.	no	no
put	no	yes
(	no	no
connection	yes	yes
,	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Subscription	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
abortMap	no	yes
.	no	no
get	no	yes
(	no	no
connection	yes	yes
)	no	no
.	no	no
add	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
Connection	no	yes
,	no	no
List	no	yes
<	no	no
Subscription	no	yes
>>	no	no
entry	no	yes
:	no	no
abortMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
Connection	no	yes
connection	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
Subscription	no	yes
>	no	no
subscriptions	yes	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
abortSubscriberConnection	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connection	yes	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
subscriptions	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
subscriptions	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
connection	yes	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
scheduler	no	yes
.	no	no
executeAfterDelay	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
connection	yes	yes
.	no	no
serviceException	no	yes
(	no	no
new	no	yes
InactivityIOException	no	yes
(	no	no
subscriptions	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
maxSlowCount	no	yes
+	no	no
+	no	no
maxSlowDuration	no	yes
+	no	no
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
subscriptions	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
connection	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
scheduler	no	yes
.	no	no
executeAfterDelay	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
connection	no	yes
.	no	no
serviceException	no	yes
(	no	no
new	no	yes
InactivityIOException	no	yes
(	no	no
subscriptions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
maxSlowCount	no	yes
+	no	no
+	no	no
maxSlowDuration	no	yes
+	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
0l	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connection	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
subscriptions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
subscriptions	no	yes
)	no	no
{	no	no
final	no	yes
Subscription	no	yes
subToClose	no	yes
=	no	no
subscription	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ConsumerControl	no	yes
stopConsumer	no	yes
=	no	no
new	no	yes
ConsumerControl	no	yes
(	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connection	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
subscriptions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
subscriptions	no	yes
)	no	no
{	no	no
final	no	yes
Subscription	no	yes
subToClose	no	yes
=	no	no
subscription	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ConsumerControl	no	yes
stopConsumer	no	yes
=	no	no
new	no	yes
ConsumerControl	no	yes
(	no	no
)	no	no
;	no	no
stopConsumer	no	yes
.	no	no
setConsumerId	no	yes
(	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stopConsumer	no	yes
.	no	no
setClose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
dispatchAsync	no	yes
(	no	no
stopConsumer	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
scheduler	no	yes
.	no	no
executeAfterDelay	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
subscriptions	no	yes
)	no	no
{	no	no
final	no	yes
Subscription	no	yes
subToClose	no	yes
=	no	no
subscription	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
subscription	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ConsumerControl	no	yes
stopConsumer	no	yes
=	no	no
new	no	yes
ConsumerControl	no	yes
(	no	no
)	no	no
;	no	no
stopConsumer	no	yes
.	no	no
setConsumerId	no	yes
(	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stopConsumer	no	yes
.	no	no
setClose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
dispatchAsync	no	yes
(	no	no
stopConsumer	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
scheduler	no	yes
.	no	no
executeAfterDelay	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSendToDeadLetterQueue	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
result	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
enableAudit	no	yes
&&	no	no
messageAudit	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
message	yes	yes
)	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
false	no	yes
;	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSendToDeadLetterQueue	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no

if	no	yes
(	no	no
!	no	no
destination	yes	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
||	no	no
brokerService	no	yes
.	no	no
isUseTempMirroredQueues	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
Destination	no	yes
mirrorDestination	no	yes
=	no	no
getMirrorDestination	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mirrorDestination	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
new	no	yes
DestinationFilter	no	yes
(	no	no
destination	yes	yes
)	no	no
{	no	no
public	no	yes
void	no	yes
send	no	yes
(	no	no
ProducerBrokerExchange	no	yes
context	no	yes
,	no	no
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
message	no	yes
.	no	no
setDestination	no	yes
(	no	no
mirrorDestination	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mirrorDestination	no	yes
.	no	no
send	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
isCopyMessage	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
message	no	yes
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
message	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	yes	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
super	no	yes
.	no	no
send	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

msg	no	yes
.	no	no
setDestination	no	yes
(	no	no
replyTo	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setResponseRequired	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setProducerId	no	yes
(	no	no
this	no	yes
.	no	no
producerId	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
job	yes	yes
.	no	no
getJobId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
boolean	no	yes
originalFlowControl	no	yes
=	no	no
context	no	yes
.	no	no
isProducerFlowControl	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ProducerBrokerExchange	no	yes
producerExchange	no	yes
=	no	no
new	no	yes
ProducerBrokerExchange	no	yes
(	no	no
)	no	no
;	no	no
producerExchange	no	yes
.	no	no
setConnectionContext	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
producerExchange	no	yes
.	no	no
setMutable	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerExchange	no	yes
.	no	no
setProducerState	no	yes
(	no	no
new	no	yes
ProducerState	no	yes
(	no	no
new	no	yes
ProducerInfo	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
context	no	yes
.	no	no
setProducerFlowControl	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
next	no	yes
.	no	no
send	no	yes
(	no	no
producerExchange	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
context	no	yes
.	no	no
setProducerFlowControl	no	yes
(	no	no
originalFlowControl	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
dispatch	no	yes
(	no	no
InMemoryJob	no	yes
job	yes	yes
)	no	no
throws	no	yes
IllegalStateException	no	yes
,	no	no
IOException	no	yes
{	no	no
if	no	yes
(	no	no
canDispatch	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
JobScheduler	no	yes
getJobScheduler	no	yes
(	no	no
String	no	yes
name	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
this	no	yes
.	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
InMemoryJobScheduler	no	yes
result	no	yes
=	no	no
this	no	yes
.	no	no
schedulers	no	yes
.	no	no
get	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
result	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
removeJobScheduler	no	yes
(	no	no
String	no	yes
name	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
this	no	yes
.	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
InMemoryJobScheduler	no	yes
scheduler	no	yes
=	no	no
this	no	yes
.	no	no
schedulers	no	yes
.	no	no
remove	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
result	no	yes
=	no	no
scheduler	no	yes
!=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
result	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
log	no	yes
(	no	no
AuditLogEntry	no	yes
entry	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Response	no	yes
messagePull	no	yes
(	no	no
ConnectionContext	no	yes
context	yes	yes
,	no	no
MessagePull	no	yes
pull	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addConnection	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConnectionInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConnectionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Subscription	no	yes
addConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addProducer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ProducerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogProducerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
commitTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	yes	yes
,	no	no
boolean	no	yes
onePhase	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogTransactionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeSubscription	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
RemoveSubscriptionInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
int	no	yes
prepareTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogTransactionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeConnection	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConnectionInfo	no	yes
info	yes	yes
,	no	no
Throwable	no	yes
error	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConnectionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeProducer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ProducerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogProducerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
rollbackTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogTransactionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
beginTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogTransactionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
forgetTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
transactionId	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogTransactionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Destination	no	yes
addDestination	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ActiveMQDestination	no	yes
destination	yes	yes
,	no	no
boolean	no	yes
create	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeDestination	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ActiveMQDestination	no	yes
destination	yes	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addSession	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
SessionInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogSessionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeSession	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
SessionInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogSessionEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addBroker	no	yes
(	no	no
Connection	no	yes
connection	no	yes
,	no	no
BrokerInfo	no	yes
info	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeBroker	no	yes
(	no	no
Connection	no	yes
connection	no	yes
,	no	no
BrokerInfo	no	yes
info	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
preProcessDispatch	no	yes
(	no	no
MessageDispatch	no	yes
messageDispatch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
postProcessDispatch	no	yes
(	no	no
MessageDispatch	no	yes
messageDispatch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
processDispatchNotification	no	yes
(	no	no
MessageDispatchNotification	no	yes
messageDispatchNotification	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addDestinationInfo	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
DestinationInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeDestinationInfo	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
DestinationInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageExpired	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
message	no	yes
,	no	no
Subscription	no	yes
subscription	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
msg	yes	yes
=	no	no
message	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
sendToDeadLetterQueue	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
messageReference	no	yes
,	no	no
Subscription	no	yes
subscription	no	yes
,	no	no
Throwable	no	yes
poisonCause	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
msg	yes	yes
=	no	no
messageReference	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
fastProducer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ProducerInfo	no	yes
producerInfo	yes	yes
,	no	no
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogProducerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
isFull	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Destination	no	yes
destination	yes	yes
,	no	no
Usage	no	yes
<	no	no
?	no	no
>	no	no
usage	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogProducerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageConsumed	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
messageReference	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
msg	yes	yes
=	no	no
messageReference	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageDelivered	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
MessageReference	no	yes
messageReference	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
msg	yes	yes
=	no	no
messageReference	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
messageDiscarded	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Subscription	no	yes
sub	no	yes
,	no	no
MessageReference	no	yes
messageReference	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
msg	yes	yes
=	no	no
messageReference	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
slowConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Destination	no	yes
destination	yes	yes
,	no	no
Subscription	no	yes
subs	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
slowConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
Destination	no	yes
destination	no	yes
,	no	no
Subscription	no	yes
subs	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isLogAll	no	yes
(	no	no
)	no	no
||	no	no
isLogConsumerEvents	no	yes
(	no	no
)	no	no
||	no	no
isLogInternalEvents	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
destination	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StringBuffer	no	yes
buf	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
buf	yes	yes
.	no	no
append	no	yes
(	no	no
subs	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buf	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
buf	yes	yes
.	no	no
append	no	yes
(	no	no
subs	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buf	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
Destination	no	yes
regionDestination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
messageReference	yes	yes
.	no	no
getRegionDestination	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
RedeliveryPolicy	no	yes
redeliveryPolicy	no	yes
=	no	no
redeliveryPolicyMap	no	yes
.	no	no
getEntryFor	no	yes
(	no	no
regionDestination	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
redeliveryPolicy	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
maximumRedeliveries	yes	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
redeliveryCount	no	yes
=	no	no
messageReference	yes	yes
.	no	no
getRedeliveryCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
RedeliveryPolicy	no	yes
.	no	no
NO_MAXIMUM_REDELIVERIES	no	yes
==	no	no
maximumRedeliveries	yes	yes
||	no	no
redeliveryCount	no	yes
<	no	no
maximumRedeliveries	yes	yes
)	no	no
{	no	no
long	no	yes
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getInitialRedeliveryDelay	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
redeliveryCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getNextRedeliveryDelay	no	yes
(	no	no
delay	no	yes
)	no	no
;	no	no
}	no	no
scheduleRedelivery	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	yes	yes
,	no	no
delay	no	yes
,	no	no
++	no	no
redeliveryCount	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isSendToDlqIfMaxRetriesExceeded	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
super	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	yes	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

final	no	yes
RedeliveryPolicy	no	yes
redeliveryPolicy	no	yes
=	no	no
redeliveryPolicyMap	no	yes
.	no	no
getEntryFor	no	yes
(	no	no
regionDestination	yes	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
redeliveryPolicy	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
maximumRedeliveries	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
redeliveryCount	no	yes
=	no	no
messageReference	yes	yes
.	no	no
getRedeliveryCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
RedeliveryPolicy	no	yes
.	no	no
NO_MAXIMUM_REDELIVERIES	no	yes
==	no	no
maximumRedeliveries	no	yes
||	no	no
redeliveryCount	no	yes
<	no	no
maximumRedeliveries	no	yes
)	no	no
{	no	no
long	no	yes
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getInitialRedeliveryDelay	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
redeliveryCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getNextRedeliveryDelay	no	yes
(	no	no
delay	no	yes
)	no	no
;	no	no
}	no	no
scheduleRedelivery	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	yes	yes
,	no	no
delay	no	yes
,	no	no
++	no	no
redeliveryCount	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isSendToDlqIfMaxRetriesExceeded	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
super	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	yes	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
maximumRedeliveries	no	yes
,	no	no
messageReference	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isFallbackToDeadLetter	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
super	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	yes	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
RedeliveryPolicy	no	yes
.	no	no
NO_MAXIMUM_REDELIVERIES	no	yes
==	no	no
maximumRedeliveries	no	yes
||	no	no
redeliveryCount	no	yes
<	no	no
maximumRedeliveries	no	yes
)	no	no
{	no	no
long	no	yes
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getInitialRedeliveryDelay	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
redeliveryCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
delay	no	yes
=	no	no
redeliveryPolicy	no	yes
.	no	no
getNextRedeliveryDelay	no	yes
(	no	no
delay	no	yes
)	no	no
;	no	no
}	no	no
scheduleRedelivery	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	no	yes
,	no	no
delay	no	yes
,	no	no
++	no	no
redeliveryCount	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isSendToDlqIfMaxRetriesExceeded	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
super	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	no	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
maximumRedeliveries	no	yes
,	no	no
messageReference	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isFallbackToDeadLetter	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
super	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
context	no	yes
,	no	no
messageReference	no	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
messageReference	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
,	no	no
regionDestination	no	yes
.	no	no
getActiveMQDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
exception	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
isDuplex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
duplexInboundLocalBroker	no	yes
=	no	no
NetworkBridgeFactory	no	yes
.	no	no
createLocalAsyncTransport	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
duplexInboundLocalBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
serviceLocalException	no	yes
(	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
duplexInboundLocalBroker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
localBroker	yes	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

duplexInboundLocalBroker	no	yes
=	no	no
NetworkBridgeFactory	no	yes
.	no	no
createLocalAsyncTransport	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
duplexInboundLocalBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
serviceLocalException	no	yes
(	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
duplexInboundLocalBroker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
localBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
futureLocalBrokerInfo	no	yes
.	no	no
isDone	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

duplexInboundLocalBroker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
localBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
futureLocalBrokerInfo	no	yes
.	no	no
isDone	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
localBroker	no	yes
,	no	no
error	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
error	yes	yes
)	no	no
;	no	no
futureLocalBrokerInfo	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
serviceLocalException	no	yes
(	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
remoteBroker	yes	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no

}	no	no
localBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
serviceLocalCommand	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
futureLocalBrokerInfo	no	yes
.	no	no
isDone	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
localBroker	no	yes
,	no	no
error	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
error	yes	yes
)	no	no
;	no	no
futureLocalBrokerInfo	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
serviceLocalException	no	yes
(	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
remoteBroker	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
DefaultTransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no

if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
l	no	yes
.	no	no
onStop	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
startedLatch	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
<	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
configuration	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
this	no	yes
,	no	no
remoteBrokerName	no	yes
}	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
removeBroker	no	yes
(	no	no
null	no	yes
,	no	no
remoteBrokerInfo	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
networkBridgeStopped	no	yes
(	no	no
remoteBrokerInfo	no	yes
)	no	no
;	no	no
}	no	no
remoteBridgeStarted	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
sendShutdown	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getTaskRunnerFactory	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
serialExecutor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
serialExecutor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Runnable	no	yes
>	no	no
pendingTasks	yes	yes
=	no	no
serialExecutor	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
configuration	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
this	no	yes
,	no	no
remoteBrokerName	no	yes
}	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
removeBroker	no	yes
(	no	no
null	no	yes
,	no	no
remoteBrokerInfo	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
networkBridgeStopped	no	yes
(	no	no
remoteBrokerInfo	no	yes
)	no	no
;	no	no
}	no	no
remoteBridgeStarted	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
sendShutdown	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getTaskRunnerFactory	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
serialExecutor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
serialExecutor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Runnable	no	yes
>	no	no
pendingTasks	yes	yes
=	no	no
serialExecutor	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
pendingTasks	yes	yes
)	no	no
;	no	no
}	no	no
staticDestinationsLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
syncExecutor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
syncExecutor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
doStartLocalAndRemoteBridges	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
disposed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
isCreatedByDuplex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
props	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
props	yes	yes
=	no	no
MarshallingSupport	no	yes
.	no	no
stringToProperties	no	yes
(	no	no
remoteBrokerInfo	no	yes
.	no	no
getNetworkProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
configuration	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
configuration	no	yes
.	no	no
getExcludedDestinations	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
excludedDestinations	no	yes
=	no	no
configuration	no	yes
.	no	no
getExcludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
new	no	yes
ActiveMQDestination	no	yes
[	no	no
configuration	no	yes
.	no	no
getExcludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
configuration	no	yes
.	no	no
getStaticallyIncludedDestinations	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
staticallyIncludedDestinations	no	yes
=	no	no
configuration	no	yes
.	no	no
getStaticallyIncludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
new	no	yes
ActiveMQDestination	no	yes
[	no	no
configuration	no	yes
.	no	no
getStaticallyIncludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
configuration	no	yes
.	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dynamicallyIncludedDestinations	no	yes
=	no	no
configuration	no	yes
.	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
new	no	yes
ActiveMQDestination	no	yes
[	no	no
configuration	no	yes
.	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
serviceRemoteException	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
disposed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
error	yes	yes
instanceof	no	no
SecurityException	no	yes
||	no	no
error	yes	yes
instanceof	no	no
GeneralSecurityException	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
addProxyNetworkSubscriptionClientId	no	yes
(	no	no
final	no	yes
DemandSubscription	no	yes
sub	no	yes
,	no	no
final	no	yes
String	no	yes
clientId	no	yes
,	no	no
String	no	yes
subName	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
clientId	no	yes
!=	no	no
null	no	yes
&&	no	no
sub	no	yes
!=	no	no
null	no	yes
&&	no	no
subName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
String	no	yes
newClientId	no	yes
=	no	no
getProxyBridgeClientId	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
final	no	yes
SubscriptionInfo	no	yes
newSubInfo	yes	yes
=	no	no
new	no	yes
SubscriptionInfo	no	yes
(	no	no
newClientId	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
getDurableRemoteSubs	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
newSubInfo	yes	yes
)	no	no
;	no	no

if	no	yes
(	no	no
command	no	yes
.	no	no
isMessageDispatch	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
safeWaitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
MessageDispatch	no	yes
md	no	yes
=	no	no
(	no	no
MessageDispatch	no	yes
)	no	no
command	no	yes
;	no	no
serviceRemoteConsumerAdvisory	no	yes
(	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getDataStructure	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ackAdvisory	no	yes
(	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	no	yes
.	no	no
isBrokerInfo	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
futureRemoteBrokerInfo	no	yes
.	no	no
set	no	yes
(	no	no
(	no	no
BrokerInfo	no	yes
)	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	no	yes
instanceof	no	no
BrokerSubscriptionInfo	no	yes
)	no	no
{	no	no
final	no	yes
BrokerSubscriptionInfo	no	yes
brokerSubscriptionInfo	no	yes
=	no	no
(	no	no
BrokerSubscriptionInfo	no	yes
)	no	no
command	no	yes
;	no	no
syncExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
staticDestinationsLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
disposed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
BrokerSubscriptionInfo	no	yes
subInfo	yes	yes
=	no	no
brokerSubscriptionInfo	no	yes
;	no	no

}	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
ConnectionError	no	yes
.	no	no
class	no	yes
)	no	no
{	no	no
ConnectionError	no	yes
ce	no	yes
=	no	no
(	no	no
ConnectionError	no	yes
)	no	no
command	no	yes
;	no	no
serviceRemoteException	no	yes
(	no	no
ce	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
isDuplex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
configuration	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
command	no	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
command	no	yes
.	no	no
isMessage	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
ActiveMQMessage	no	yes
message	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
command	no	yes
;	no	no
if	no	yes
(	no	no
NetworkBridgeFilter	no	yes
.	no	no
isAdvisoryInterpretedByNetworkBridge	no	yes
(	no	no
message	yes	yes
)	no	no
)	no	no
{	no	no
serviceRemoteConsumerAdvisory	no	yes
(	no	no
message	yes	yes
.	no	no
getDataStructure	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ackAdvisory	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
isPermissableDestination	no	yes
(	no	no
message	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no

reply	no	yes
.	no	no
setCorrelationId	no	yes
(	no	no
message	no	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
remoteBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
reply	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
switch	no	yes
(	no	no
command	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
ConnectionInfo	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
:	no	no
if	no	yes
(	no	no
duplexInitiatingConnection	no	yes
!=	no	no
null	no	yes
&&	no	no
duplexInitiatingConnectionInfoReceived	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
duplexInitiatingConnection	no	yes
.	no	no
processAddConnection	no	yes
(	no	no
(	no	no
ConnectionInfo	no	yes
)	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
localBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
break	no	yes
;	no	no
case	no	yes
SessionInfo	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
:	no	no
localBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
ProducerInfo	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
:	no	no
break	no	yes
;	no	no
case	no	yes
MessageAck	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
:	no	no
MessageAck	no	yes
ack	no	yes
=	no	no
(	no	no
MessageAck	no	yes
)	no	no
command	yes	yes
;	no	no
DemandSubscription	no	yes
localSub	no	yes
=	no	no
subscriptionMapByRemoteId	no	yes
.	no	no
get	no	yes
(	no	no
ack	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
localSub	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
serviceRemoteConsumerAdvisory	no	yes
(	no	no
DataStructure	no	yes
data	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
int	no	yes
networkTTL	no	yes
=	no	no
configuration	yes	yes
.	no	no
getConsumerTTL	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
data	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
ConsumerInfo	no	yes
.	no	no
class	no	yes
)	no	no
{	no	no
ConsumerInfo	no	yes
info	no	yes
=	no	no
(	no	no
ConsumerInfo	no	yes
)	no	no
data	no	yes
;	no	no
BrokerId	no	yes
[	no	no
]	no	no
path	no	yes
=	no	no
info	no	yes
.	no	no
getBrokerPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
isBrowser	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
configuration	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
remoteBrokerName	no	yes
,	no	no
info	no	yes
}	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
isPermissableDestination	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
configuration	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
remoteBrokerName	no	yes
,	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
info	no	yes
}	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
isDuplicateSuppressionOff	no	yes
(	no	no
info	no	yes
)	no	no
)	no	no
{	no	no
addConsumerInfo	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
synchronized	no	yes
(	no	no
brokerService	no	yes
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
addConsumerInfo	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
data	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
DestinationInfo	no	yes
.	no	no
class	no	yes
)	no	no
{	no	no
final	no	yes
DestinationInfo	no	yes
destInfo	yes	yes
=	no	no
(	no	no
DestinationInfo	no	yes
)	no	no
data	no	yes
;	no	no
BrokerId	no	yes
[	no	no
]	no	no
path	no	yes
=	no	no
destInfo	yes	yes
.	no	no
getBrokerPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
path	no	yes
!=	no	no
null	no	yes
&&	no	no
networkTTL	no	yes
>	no	no
-	no	no
1	no	no
&&	no	no
path	no	yes
.	no	no
length	no	yes
>=	no	no
networkTTL	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
configuration	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
destInfo	yes	yes
,	no	no
networkTTL	no	yes
}	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
!	no	no
disposed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
error	yes	yes
instanceof	no	no
DestinationDoesNotExistException	no	yes
&&	no	no
(	no	no
(	no	no
DestinationDoesNotExistException	no	yes
)	no	no
error	yes	yes
)	no	no
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
messageDispatch	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
messageDispatch	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
,	no	no
error	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
MessageAck	no	yes
poisonAck	no	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
messageDispatch	no	yes
,	no	no
MessageAck	no	yes
.	no	no
POSION_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
poisonAck	no	yes
.	no	no
setPoisonCause	no	yes
(	no	no
error	yes	yes
)	no	no
;	no	no
localBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
poisonAck	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	yes	yes
(	no	no
,	no	no
ioe	no	yes
)	no	no
;	no	no
}	no	no
fireFailedForwardAdvisory	no	yes
(	no	no
messageDispatch	no	yes
,	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
error	yes	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
localBroker	no	yes
,	no	no
remoteBroker	no	yes
,	no	no
error	yes	yes
}	no	no
)	no	no
;	no	no

Response	no	yes
response	no	yes
=	no	no
future	no	yes
.	no	no
getResult	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
response	no	yes
.	no	no
isException	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ExceptionResponse	no	yes
er	no	yes
=	no	no
(	no	no
ExceptionResponse	no	yes
)	no	no
response	no	yes
;	no	no
serviceLocalException	no	yes
(	no	no
md	yes	yes
,	no	no
er	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
localBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	yes	yes
,	no	no
MessageAck	no	yes
.	no	no
INDIVIDUAL_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
)	no	no
;	no	no
networkBridgeStatistics	no	yes
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
serviceLocalException	no	yes
(	no	no
md	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
sub	no	yes
.	no	no
decrementOutstandingResponses	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
remoteBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

ActiveMQDestination	no	yes
[	no	no
]	no	no
dests	no	yes
=	no	no
staticallyIncludedDestinations	no	yes
;	no	no
if	no	yes
(	no	no
dests	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	yes	yes
:	no	no
dests	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isPermissableDestination	no	yes
(	no	no
dest	yes	yes
)	no	no
)	no	no
{	no	no
DemandSubscription	no	yes
sub	no	yes
=	no	no
createDemandSubscription	no	yes
(	no	no
dest	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
sub	no	yes
.	no	no
setStaticallyIncluded	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
addSubscription	no	yes
(	no	no
sub	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
dest	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
configuration	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
dest	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
configuration	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
dest	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

addRemoteBrokerToBrokerPath	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
DemandSubscription	no	yes
sub	yes	yes
=	no	no
createDemandSubscription	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
sub	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
duplicateSuppressionIsRequired	no	yes
(	no	no
sub	yes	yes
)	no	no
)	no	no
{	no	no
undoMapRegistration	no	yes
(	no	no
sub	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
consumerInfo	no	yes
.	no	no
isDurable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
isProxyNSConsumerBrokerPath	no	yes
(	no	no
sub	yes	yes
.	no	no
getRemoteInfo	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
info	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
&&	no	no
info	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
DURABLE_SUB_PREFIX	no	yes
)	no	no
)	no	no
{	no	no
final	no	yes
BrokerId	no	yes
[	no	no
]	no	no
path	no	yes
=	no	no
info	no	yes
.	no	no
getBrokerPath	no	yes
(	no	no
)	no	no
;	no	no
addProxyNetworkSubscriptionBrokerPath	no	yes
(	no	no
sub	yes	yes
,	no	no
path	no	yes
,	no	no
consumerInfo	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isProxyNSConsumerClientId	no	yes
(	no	no
sub	yes	yes
.	no	no
getRemoteInfo	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
isProxyBridgeSubscription	no	yes
(	no	no
info	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
info	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
addProxyNetworkSubscriptionClientId	no	yes
(	no	no
sub	yes	yes
,	no	no
sub	yes	yes
.	no	no
getRemoteInfo	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
consumerInfo	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
sub	yes	yes
.	no	no
getDurableRemoteSubs	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
new	no	yes
SubscriptionInfo	no	yes
(	no	no
sub	yes	yes
.	no	no
getRemoteInfo	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
consumerInfo	no	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
addSubscription	no	yes
(	no	no
sub	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onServiceAdd	no	yes
(	no	no
DiscoveryEvent	no	yes
event	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
serviceSupport	no	yes
.	no	no
isStopped	no	yes
(	no	no
)	no	no
||	no	no
serviceSupport	no	yes
.	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
String	no	yes
url	no	yes
=	no	no
event	no	yes
.	no	no
getServiceName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
url	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
URI	no	yes
uri	yes	yes
;	no	no
try	no	yes
{	no	no
uri	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
url	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
URISyntaxException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
url	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
localURI	no	yes
.	no	no
equals	no	yes
(	no	no
uri	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	yes	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
connectionFilter	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
connectionFilter	no	yes
.	no	no
connectTo	no	yes
(	no	no
uri	yes	yes
)	no	no
)	no	no
{	no	no

}	no	no
String	no	yes
url	no	yes
=	no	no
event	no	yes
.	no	no
getServiceName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
url	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
URI	no	yes
uri	yes	yes
;	no	no
try	no	yes
{	no	no
uri	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
url	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
URISyntaxException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
url	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
localURI	no	yes
.	no	no
equals	no	yes
(	no	no
uri	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	yes	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
connectionFilter	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
connectionFilter	no	yes
.	no	no
connectTo	no	yes
(	no	no
uri	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	yes	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
activeEvents	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
uri	yes	yes
,	no	no
event	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
url	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
localURI	yes	yes
.	no	no
equals	no	yes
(	no	no
uri	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
connectionFilter	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
connectionFilter	no	yes
.	no	no
connectTo	no	yes
(	no	no
uri	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
activeEvents	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
uri	no	yes
,	no	no
event	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
URI	no	yes
connectUri	yes	yes
=	no	no
uri	no	yes
;	no	no
try	no	yes
{	no	no
connectUri	yes	yes
=	no	no
URISupport	no	yes
.	no	no
applyParameters	no	yes
(	no	no
connectUri	yes	yes
,	no	no
parameters	no	yes
,	no	no
DISCOVERED_OPTION_PREFIX	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
URISyntaxException	no	yes
e	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
activeEvents	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
uri	no	yes
,	no	no
event	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
URI	no	yes
connectUri	no	yes
=	no	no
uri	no	yes
;	no	no
try	no	yes
{	no	no
connectUri	no	yes
=	no	no
URISupport	no	yes
.	no	no
applyParameters	no	yes
(	no	no
connectUri	no	yes
,	no	no
parameters	no	yes
,	no	no
DISCOVERED_OPTION_PREFIX	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
URISyntaxException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
parameters	no	yes
,	no	no
connectUri	no	yes
}	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
localURI	no	yes
,	no	no
connectUri	no	yes
)	no	no
;	no	no
Transport	no	yes
remoteTransport	no	yes
;	no	no
Transport	no	yes
localTransport	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
localURI	no	yes
,	no	no
connectUri	no	yes
)	no	no
;	no	no
Transport	no	yes
remoteTransport	no	yes
;	no	no
Transport	no	yes
localTransport	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getSslContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
remoteTransport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
connect	no	yes
(	no	no
connectUri	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
connectUri	no	yes
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
discoveryAgent	no	yes
.	no	no
serviceFailed	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
getSslContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getSslContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
remoteTransport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
connect	no	yes
(	no	no
connectUri	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
connectUri	no	yes
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
discoveryAgent	no	yes
.	no	no
serviceFailed	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e1	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e1	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e1	yes	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no

discoveryAgent	no	yes
.	no	no
serviceFailed	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e1	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e1	no	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
localTransport	no	yes
=	no	no
createLocalTransport	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
remoteTransport	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
localURI	no	yes
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
discoveryAgent	no	yes
.	no	no
serviceFailed	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e1	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e1	no	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no

}	no	no
return	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
localTransport	no	yes
=	no	no
createLocalTransport	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
remoteTransport	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
localURI	no	yes
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
discoveryAgent	no	yes
.	no	no
serviceFailed	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e1	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e1	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e1	yes	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
NetworkBridge	no	yes
bridge	no	yes
=	no	no
createBridge	no	yes
(	no	no
localTransport	no	yes
,	no	no
remoteTransport	no	yes
,	no	no
event	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
dest	yes	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
TopicRegion	no	yes
topicRegion	no	yes
=	no	no
(	no	no
TopicRegion	no	yes
)	no	no
regionBroker	no	yes
.	no	no
getTopicRegion	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
candidateSubName	no	yes
=	no	no
getSubscriberName	no	yes
(	no	no
dest	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
topicRegion	no	yes
.	no	no
getDurableSubscriptions	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
subName	no	yes
=	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientId	no	yes
=	no	no
subscription	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
subName	no	yes
!=	no	no
null	no	yes
&&	no	no
subName	no	yes
.	no	no
equals	no	yes
(	no	no
candidateSubName	no	yes
)	no	no
&&	no	no
clientId	no	yes
.	no	no
startsWith	no	yes
(	no	no
configuration	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
DemandSubscription	no	yes
sub	no	yes
=	no	no
createDemandSubscription	no	yes
(	no	no
dest	yes	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
sub	no	yes
.	no	no
getLocalInfo	no	yes
(	no	no
)	no	no
.	no	no
setSubscriptionName	no	yes
(	no	no
getSubscriberName	no	yes
(	no	no
dest	yes	yes
)	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
setStaticallyIncluded	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
addSubscription	no	yes
(	no	no
sub	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no

catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
configuration	no	yes
.	no	no
isSyncDurableSubs	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
isPermissableDestination	no	yes
(	no	no
dest	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
TopicRegion	no	yes
topicRegion	no	yes
=	no	no
(	no	no
TopicRegion	no	yes
)	no	no
regionBroker	no	yes
.	no	no
getTopicRegion	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
candidateSubName	no	yes
=	no	no
getSubscriberName	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Subscription	no	yes
subscription	no	yes
:	no	no
topicRegion	no	yes
.	no	no
getDurableSubscriptions	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
subName	yes	yes
=	no	no
subscription	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
subName	yes	yes
!=	no	no
null	no	yes
&&	no	no
subName	yes	yes
.	no	no
equals	no	yes
(	no	no
candidateSubName	no	yes
)	no	no
&&	no	no
subscription	no	yes
instanceof	no	no
DurableTopicSubscription	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
DurableTopicSubscription	no	yes
durableSub	no	yes
=	no	no
(	no	no
DurableTopicSubscription	no	yes
)	no	no
subscription	no	yes
;	no	no
if	no	yes
(	no	no
durableSub	no	yes
.	no	no
getSubscriptionKey	no	yes
(	no	no
)	no	no
.	no	no
getClientId	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
localClientId	no	yes
)	no	no
)	no	no
{	no	no
RemoveSubscriptionInfo	no	yes
sending	no	yes
=	no	no
new	no	yes
RemoveSubscriptionInfo	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
serviceRemoteException	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
serviceRemoteException	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
error	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
serviceLocalException	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
serviceLocalException	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
error	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
else	no	yes
{	no	no
dequeueCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
localBroker	no	yes
.	no	no
oneway	no	yes
(	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
serviceLocalException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
remoteBroker	no	yes
.	no	no
asyncRequest	no	yes
(	no	no
message	no	yes
,	no	no
callback	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	yes	yes
.	no	no
isBrokerInfo	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
localBrokerInfo	no	yes
=	no	no
(	no	no
BrokerInfo	no	yes
)	no	no
command	yes	yes
;	no	no
localBrokerId	no	yes
=	no	no
localBrokerInfo	no	yes
.	no	no
getBrokerId	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
remoteBrokerId	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
remoteBrokerId	no	yes
.	no	no
equals	no	yes
(	no	no
localBrokerId	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
user	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
.	no	no
equals	no	yes
(	no	no
user	no	yes
)	no	no
)	no	no
{	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	yes	yes
.	no	no
SECURITY_PRINCIPAL	no	yes
,	no	no
user	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
password	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
.	no	no
equals	no	yes
(	no	no
password	no	yes
)	no	no
)	no	no
{	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	yes	yes
.	no	no
SECURITY_CREDENTIALS	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
boolean	no	yes
isConnected	no	yes
=	no	no
false	no	yes
;	no	no
while	no	yes
(	no	no
!	no	no
isConnected	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
context	no	yes
=	no	no
new	no	yes
InitialDirContext	no	yes
(	no	no
env	no	yes
)	no	no
;	no	no
isConnected	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
CommunicationException	no	yes
err	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
failover	no	yes
)	no	no
{	no	no

NetworkConnector	no	yes
connector	no	yes
=	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
addNetworkConnector	no	yes
(	no	no
connectorURI	yes	yes
)	no	no
;	no	no
connector	no	yes
.	no	no
setDynamicOnly	no	yes
(	no	no
isDynamicOnly	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setDecreaseNetworkConsumerPriority	no	yes
(	no	no
isDecreaseNetworkConsumerPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setNetworkTTL	no	yes
(	no	no
getNetworkTTL	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setConsumerTTL	no	yes
(	no	no
getConsumerTTL	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setMessageTTL	no	yes
(	no	no
getMessageTTL	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setConduitSubscriptions	no	yes
(	no	no
isConduitSubscriptions	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setExcludedDestinations	no	yes
(	no	no
getExcludedDestinations	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setDynamicallyIncludedDestinations	no	yes
(	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setDuplex	no	yes
(	no	no
isDuplex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setLocalUri	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setBrokerName	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setDurableDestinations	no	yes
(	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getDurableDestinations	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connectorMap	no	yes
.	no	no
put	no	yes
(	no	no
connectorURI	yes	yes
,	no	no
connector	no	yes
)	no	no
;	no	no
referenceMap	no	yes
.	no	no
put	no	yes
(	no	no
connectorURI	yes	yes
,	no	no
1	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
!	no	no
uuidMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
uuid	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
uuid	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
URI	no	yes
connectorURI	yes	yes
=	no	no
uuidMap	no	yes
.	no	no
get	no	yes
(	no	no
uuid	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
connectorMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
connectorURI	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
connectorURI	yes	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
int	no	yes
referenceCount	no	yes
=	no	no
referenceMap	no	yes
.	no	no
get	no	yes
(	no	no
connectorURI	yes	yes
)	no	no
-	no	no
1	no	no
;	no	no
referenceMap	no	yes
.	no	no
put	no	yes
(	no	no
connectorURI	yes	yes
,	no	no
referenceCount	no	yes
)	no	no
;	no	no
uuidMap	no	yes
.	no	no
remove	no	yes
(	no	no
uuid	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
connectorURI	yes	yes
,	no	no
uuid	no	yes
,	no	no
referenceCount	no	yes
}	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
referenceCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
NetworkConnector	no	yes
connector	no	yes
=	no	no
connectorMap	no	yes
.	no	no
remove	no	yes
(	no	no
connectorURI	yes	yes
)	no	no
;	no	no
connector	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
URI	no	yes
toURI	no	yes
(	no	no
SearchResult	no	yes
result	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Attributes	no	yes
attributes	no	yes
=	no	no
result	no	yes
.	no	no
getAttributes	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
address	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
attributes	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
port	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
attributes	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
protocol	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
attributes	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
URI	no	yes
connectorURI	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
+	no	no
protocol	no	yes
+	no	no
+	no	no
address	no	yes
+	no	no
+	no	no
port	no	yes
+	no	no
)	no	no
;	no	no

protected	no	yes
String	no	yes
toUUID	no	yes
(	no	no
SearchResult	no	yes
result	no	yes
)	no	no
{	no	no
String	no	yes
uuid	yes	yes
=	no	no
result	no	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
namingExceptionThrown	no	yes
(	no	no
NamingExceptionEvent	no	yes
event	yes	yes
)	no	no
{	no	no

private	no	yes
static	no	yes
LRUCache	no	yes
<	no	no
Destination	no	yes
,	no	no
DestinationBridge	no	yes
>	no	no
createLRUCache	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
new	no	yes
LRUCache	no	yes
<	no	no
Destination	no	yes
,	no	no
DestinationBridge	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
private	no	yes
static	no	yes
final	no	yes
long	no	yes
serialVersionUID	no	yes
=	no	no
-	no	no
7446792754185879286L	no	yes
;	no	no
@	no	no
Override	no	yes
protected	no	yes
boolean	no	yes
removeEldestEntry	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Destination	no	yes
,	no	no
DestinationBridge	no	yes
>	no	no
enty	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
maxCacheSize	no	yes
)	no	no
{	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Destination	no	yes
,	no	no
DestinationBridge	no	yes
>>	no	no
iter	no	yes
=	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Destination	no	yes
,	no	no
DestinationBridge	no	yes
>	no	no
lru	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
remove	no	yes
(	no	no
lru	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DestinationBridge	no	yes
bridge	yes	yes
=	no	no
lru	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
bridge	yes	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

void	no	yes
handleConnectionFailure	no	yes
(	no	no
Connection	no	yes
connection	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
connection	no	yes
==	no	no
null	no	yes
||	no	no
!	no	no
this	no	yes
.	no	no
started	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connection	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replyToBridges	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
foreignConnection	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
connection	no	yes
,	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
DestinationBridge	no	yes
bridge	no	yes
:	no	no
inboundBridges	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
bridge	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
}	no	no
}	no	no
this	no	yes
.	no	no
connectionService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
doInitializeConnection	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
this	no	yes
.	no	no
connectionService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
doInitializeConnection	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
this	no	yes
.	no	no
localConnection	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
connection	no	yes
,	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
DestinationBridge	no	yes
bridge	no	yes
:	no	no
outboundBridges	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
bridge	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
}	no	no
}	no	no
this	no	yes
.	no	no
connectionService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
connectionService	no	yes
.	no	no
isTerminating	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
local	no	yes
)	no	no
{	no	no
initializeLocalConnection	no	yes
(	no	no
)	no	no
;	no	no
localSideInitialized	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
initializeForeignConnection	no	yes
(	no	no
)	no	no
;	no	no
foreignSideInitialized	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
localConnection	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
&&	no	no
foreignConnection	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
DestinationBridge	no	yes
bridge	no	yes
:	no	no
inboundBridges	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
DestinationBridge	no	yes
bridge	no	yes
:	no	no
outboundBridges	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
QueueSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
replyToConsumerQueue	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerQueue	no	yes
(	no	no
replyToConsumerQueue	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerQueue	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setDoHandleReplyTo	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
.	no	no
getJmsMessageConvertor	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
setJmsMessageConvertor	no	yes
(	no	no
getInboundMessageConvertor	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
bridge	no	yes
.	no	no
setJmsConnector	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
;	no	no
try	no	yes
{	no	no
QueueSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
replyToConsumerQueue	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerQueue	no	yes
(	no	no
replyToConsumerQueue	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerQueue	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setDoHandleReplyTo	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
.	no	no
getJmsMessageConvertor	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
setJmsMessageConvertor	no	yes
(	no	no
getInboundMessageConvertor	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
bridge	no	yes
.	no	no
setJmsConnector	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no

return	no	yes
bridge	no	yes
.	no	no
getConsumerQueue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
OutboundQueueBridge	no	yes
bridge	no	yes
=	no	no
(	no	no
OutboundQueueBridge	no	yes
)	no	no
replyToBridges	no	yes
.	no	no
get	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
=	no	no
new	no	yes
OutboundQueueBridge	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
Destination	no	yes
processReplyToDestination	no	yes
(	no	no
Destination	no	yes
destination	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
QueueSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
replyToConsumerQueue	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerQueue	no	yes
(	no	no
replyToConsumerQueue	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerQueue	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no

else	no	yes
{	no	no
OutboundQueueBridge	no	yes
bridge	no	yes
=	no	no
(	no	no
OutboundQueueBridge	no	yes
)	no	no
replyToBridges	no	yes
.	no	no
get	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
=	no	no
new	no	yes
OutboundQueueBridge	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
Destination	no	yes
processReplyToDestination	no	yes
(	no	no
Destination	no	yes
destination	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
QueueSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
replyToConsumerQueue	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerQueue	no	yes
(	no	no
replyToConsumerQueue	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerQueue	no	yes
(	no	no
replyToProducerQueue	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
QueueConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no

try	no	yes
{	no	no
result	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
String	no	yes
errStr	yes	yes
=	no	no
+	no	no
queueName	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
errStr	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
JMSException	no	yes
jmsEx	no	yes
=	no	no
new	no	yes
JMSException	no	yes
(	no	no
errStr	yes	yes
)	no	no
;	no	no
jmsEx	no	yes
.	no	no
setLinkedException	no	yes
(	no	no
e1	no	yes
)	no	no
;	no	no
throw	no	yes
jmsEx	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
result	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
result	no	yes
=	no	no
jndiOutboundTemplate	no	yes
.	no	no
lookup	no	yes
(	no	no
queueName	no	yes
,	no	no
Queue	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e1	no	yes
)	no	no
{	no	no

return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
TopicSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
replyToConsumerTopic	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerTopic	no	yes
(	no	no
replyToConsumerTopic	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerTopic	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setDoHandleReplyTo	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
.	no	no
getJmsMessageConvertor	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
setJmsMessageConvertor	no	yes
(	no	no
getInboundMessageConvertor	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
bridge	no	yes
.	no	no
setJmsConnector	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
;	no	no
try	no	yes
{	no	no
TopicSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
replyToConsumerTopic	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerTopic	no	yes
(	no	no
replyToConsumerTopic	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerTopic	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setDoHandleReplyTo	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
.	no	no
getJmsMessageConvertor	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
.	no	no
setJmsMessageConvertor	no	yes
(	no	no
getInboundMessageConvertor	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
bridge	no	yes
.	no	no
setJmsConnector	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no

return	no	yes
bridge	no	yes
.	no	no
getConsumerTopic	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
OutboundTopicBridge	no	yes
bridge	no	yes
=	no	no
(	no	no
OutboundTopicBridge	no	yes
)	no	no
replyToBridges	no	yes
.	no	no
get	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
=	no	no
new	no	yes
OutboundTopicBridge	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
Destination	no	yes
processReplyToDestination	no	yes
(	no	no
Destination	no	yes
destination	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
TopicSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
replyToConsumerTopic	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerTopic	no	yes
(	no	no
replyToConsumerTopic	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerTopic	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no

else	no	yes
{	no	no
OutboundTopicBridge	no	yes
bridge	no	yes
=	no	no
(	no	no
OutboundTopicBridge	no	yes
)	no	no
replyToBridges	no	yes
.	no	no
get	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
bridge	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
bridge	no	yes
=	no	no
new	no	yes
OutboundTopicBridge	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
Destination	no	yes
processReplyToDestination	no	yes
(	no	no
Destination	no	yes
destination	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
TopicSession	no	yes
replyToConsumerSession	no	yes
=	no	no
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
replyToConsumerTopic	no	yes
=	no	no
replyToConsumerSession	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
replyToConsumerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerTopic	no	yes
(	no	no
replyToConsumerTopic	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerTopic	no	yes
(	no	no
replyToProducerTopic	yes	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setProducerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToProducerConnection	no	yes
)	no	no
;	no	no
bridge	no	yes
.	no	no
setConsumerConnection	no	yes
(	no	no
(	no	no
TopicConnection	no	yes
)	no	no
replyToConsumerConnection	no	yes
)	no	no
;	no	no

try	no	yes
{	no	no
result	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
String	no	yes
errStr	yes	yes
=	no	no
+	no	no
topicName	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
errStr	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
JMSException	no	yes
jmsEx	no	yes
=	no	no
new	no	yes
JMSException	no	yes
(	no	no
errStr	yes	yes
)	no	no
;	no	no
jmsEx	no	yes
.	no	no
setLinkedException	no	yes
(	no	no
e1	no	yes
)	no	no
;	no	no
throw	no	yes
jmsEx	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
result	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
result	no	yes
=	no	no
jndiOutboundTemplate	no	yes
.	no	no
lookup	no	yes
(	no	no
topicName	no	yes
,	no	no
Topic	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e1	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
dest	no	yes
==	no	no
null	no	yes
||	no	no
destName	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
skipMessage	no	yes
(	no	no
,	no	no
msgRef	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
dropAll	no	yes
)	no	no
{	no	no
skipMessage	no	yes
(	no	no
,	no	no
msgRef	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
dropTemporaryTopics	no	yes
&&	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
&&	no	no
dest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
skipMessage	no	yes
(	no	no
,	no	no
msgRef	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
dropTemporaryQueues	no	yes
&&	no	no
dest	no	yes
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
&&	no	no
dest	no	yes
.	no	no
isQueue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
skipMessage	no	yes
(	no	no
,	no	no
msgRef	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
destFilter	no	yes
!=	no	no
null	no	yes
&&	no	no
matches	no	yes
(	no	no
destName	no	yes
)	no	no
)	no	no
{	no	no
skipMessage	no	yes
(	no	no
,	no	no
msgRef	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
dropped	no	yes
=	no	no
false	no	yes
;	no	no
return	no	yes
next	no	yes
.	no	no
sendToDeadLetterQueue	no	yes
(	no	no
ctx	no	yes
,	no	no
msgRef	no	yes
,	no	no
subscription	no	yes
,	no	no
poisonCause	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
dropped	no	yes
&&	no	no
getReportInterval	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
(	no	no
++	no	no
dropCount	yes	yes
)	no	no
%	no	no
getReportInterval	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
skipMessage	no	yes
(	no	no
String	no	yes
prefix	yes	yes
,	no	no
MessageReference	no	yes
msgRef	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Broker	no	yes
installPlugin	no	yes
(	no	no
Broker	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ForcePersistencyModeBroker	no	yes
pB	yes	yes
=	no	no
new	no	yes
ForcePersistencyModeBroker	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
pB	yes	yes
.	no	no
setPersistenceFlag	no	yes
(	no	no
isPersistenceForced	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
Subscription	no	yes
addConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
AdvisorySupport	no	yes
.	no	no
isAdvisoryTopic	no	yes
(	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
info	yes	yes
.	no	no
isBrowser	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
destinationName	yes	yes
=	no	no
info	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getQualifiedName	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
!	no	no
AdvisorySupport	no	yes
.	no	no
isAdvisoryTopic	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
info	no	yes
.	no	no
isBrowser	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
destinationName	no	yes
=	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getQualifiedName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
info	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
,	no	no
destinationName	no	yes
)	no	no
;	no	no
String	no	yes
selector	no	yes
=	no	no
info	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
?	no	no
MATCH_EVERYTHING	no	yes
:	no	no
info	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
(	no	no
ignoreWildcardSelectors	no	yes
&&	no	no
hasWildcards	no	yes
(	no	no
selector	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
selectors	yes	yes
=	no	no
subSelectorCache	no	yes
.	no	no
get	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
selectors	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
selectors	yes	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedSet	no	yes
(	no	no
new	no	yes
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
singleSelectorPerDestination	no	yes
&&	no	no
!	no	no
MATCH_EVERYTHING	no	yes
.	no	no
equals	no	yes
(	no	no
selector	no	yes
)	no	no
)	no	no
{	no	no
boolean	no	yes
containsMatchEverything	no	yes
=	no	no
selectors	yes	yes
.	no	no
contains	no	yes
(	no	no
MATCH_EVERYTHING	no	yes
)	no	no
;	no	no
selectors	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
containsMatchEverything	no	yes
)	no	no
{	no	no
selectors	yes	yes
.	no	no
add	no	yes
(	no	no
MATCH_EVERYTHING	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
selector	no	yes
)	no	no
;	no	no
selectors	yes	yes
.	no	no
add	no	yes
(	no	no
selector	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConsumerInfo	no	yes
info	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
AdvisorySupport	no	yes
.	no	no
isAdvisoryTopic	no	yes
(	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
isTemporary	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
singleSelectorPerDestination	no	yes
)	no	no
{	no	no
String	no	yes
destinationName	no	yes
=	no	no
info	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getQualifiedName	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
selectors	no	yes
=	no	no
subSelectorCache	no	yes
.	no	no
get	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
&&	no	no
selectors	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
boolean	no	yes
removed	yes	yes
=	no	no
selectors	no	yes
.	no	no
remove	no	yes
(	no	no
MATCH_EVERYTHING	no	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
private	no	yes
void	no	yes
readCache	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
persistFile	no	yes
!=	no	no
null	no	yes
&&	no	no
persistFile	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
try	no	yes
(	no	no
FileInputStream	no	yes
fis	no	yes
=	no	no
new	no	yes
FileInputStream	no	yes
(	no	no
persistFile	no	yes
)	no	no
)	no	no
{	no	no
ObjectInputStream	no	yes
in	no	yes
=	no	no
new	no	yes
SubSelectorClassObjectInputStream	no	yes
(	no	no
fis	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
=	no	no
(	no	no
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
)	no	no
in	no	yes
.	no	no
readObject	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
persistFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
.	no	no
forEach	no	yes
(	no	no
(	no	no
k	no	yes
,	no	no
v	no	yes
)	no	no
->	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
k	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
v	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
try	no	yes
(	no	no
FileInputStream	no	yes
fis	no	yes
=	no	no
new	no	yes
FileInputStream	no	yes
(	no	no
persistFile	no	yes
)	no	no
)	no	no
{	no	no
ObjectInputStream	no	yes
in	no	yes
=	no	no
new	no	yes
SubSelectorClassObjectInputStream	no	yes
(	no	no
fis	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
=	no	no
(	no	no
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
)	no	no
in	no	yes
.	no	no
readObject	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
persistFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
.	no	no
forEach	no	yes
(	no	no
(	no	no
k	no	yes
,	no	no
v	no	yes
)	no	no
->	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
k	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
v	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ClassNotFoundException	no	yes
ex	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
=	no	no
(	no	no
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
)	no	no
in	no	yes
.	no	no
readObject	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
persistFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
subSelectorCache	no	yes
.	no	no
forEach	no	yes
(	no	no
(	no	no
k	no	yes
,	no	no
v	no	yes
)	no	no
->	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
k	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
v	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ClassNotFoundException	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
in	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ex	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
FileOutputStream	no	yes
fos	no	yes
=	no	no
new	no	yes
FileOutputStream	no	yes
(	no	no
persistFile	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
ObjectOutputStream	no	yes
out	no	yes
=	no	no
new	no	yes
ObjectOutputStream	no	yes
(	no	no
fos	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
out	no	yes
.	no	no
writeObject	no	yes
(	no	no
subSelectorCache	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
out	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
out	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
fos	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ex	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
onFailure	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
shuttingDown	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
start	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
this	no	yes
.	no	no
getServer	no	yes
(	no	no
)	no	no
.	no	no
setAcceptListener	no	yes
(	no	no
new	no	yes
TransportAcceptListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onAccept	no	yes
(	no	no
Transport	no	yes
localTransport	no	yes
)	no	no
{	no	no
ProxyConnection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
Transport	no	yes
remoteTransport	no	yes
=	no	no
createRemoteTransport	no	yes
(	no	no
localTransport	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
new	no	yes
ProxyConnection	no	yes
(	no	no
localTransport	no	yes
,	no	no
remoteTransport	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
connection	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
eoc	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onAccept	no	yes
(	no	no
Transport	no	yes
localTransport	no	yes
)	no	no
{	no	no
ProxyConnection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
Transport	no	yes
remoteTransport	no	yes
=	no	no
createRemoteTransport	no	yes
(	no	no
localTransport	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
new	no	yes
ProxyConnection	no	yes
(	no	no
localTransport	no	yes
,	no	no
remoteTransport	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
onAcceptError	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
connection	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
eoc	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	yes	yes
(	no	no
,	no	no
eoc	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no

NamingEnumeration	no	yes
<	no	no
?	no	no
>	no	no
results	no	yes
=	no	no
context	no	yes
.	no	no
search	no	yes
(	no	no
destinationBase	no	yes
,	no	no
roleBase	no	yes
,	no	no
constraints	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
results	no	yes
.	no	no
hasMore	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
SearchResult	no	yes
result	no	yes
=	no	no
(	no	no
SearchResult	no	yes
)	no	no
results	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Attributes	no	yes
attrs	no	yes
=	no	no
result	no	yes
.	no	no
getAttributes	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
attrs	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
acls	no	yes
=	no	no
addAttributeValues	no	yes
(	no	no
roleAttribute	no	yes
,	no	no
attrs	no	yes
,	no	no
acls	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
String	no	yes
>	no	no
iter	no	yes
=	no	no
acls	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
String	no	yes
roleName	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
LdapName	no	yes
ldapname	no	yes
=	no	no
new	no	yes
LdapName	no	yes
(	no	no
roleName	no	yes
)	no	no
;	no	no
Rdn	no	yes
rdn	no	yes
=	no	no
ldapname	no	yes
.	no	no
getRdn	no	yes
(	no	no
ldapname	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rdn	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
roles	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
GroupPrincipal	no	yes
(	no	no
rdn	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
roles	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
protected	no	yes
synchronized	no	yes
void	no	yes
query	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
DirContext	no	yes
currentContext	no	yes
=	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
entries	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
SearchControls	no	yes
constraints	no	yes
=	no	no
new	no	yes
SearchControls	no	yes
(	no	no
)	no	no
;	no	no
constraints	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
SUBTREE_SCOPE	no	yes
)	no	no
;	no	no
DefaultAuthorizationMap	no	yes
newMap	no	yes
=	no	no
new	no	yes
DefaultAuthorizationMap	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
PermissionType	no	yes
permissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
processQueryResults	no	yes
(	no	no
newMap	no	yes
,	no	no
currentContext	no	yes
.	no	no
search	no	yes
(	no	no
queueSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
,	no	no
constraints	no	yes
)	no	no
,	no	no
DestinationType	no	yes
.	no	no
QUEUE	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
queueSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
}	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
PermissionType	no	yes
permissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
processQueryResults	no	yes
(	no	no
newMap	no	yes
,	no	no
currentContext	no	yes
.	no	no
search	no	yes
(	no	no
topicSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
,	no	no
constraints	no	yes
)	no	no
,	no	no
DestinationType	no	yes
.	no	no
TOPIC	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

DefaultAuthorizationMap	no	yes
newMap	no	yes
=	no	no
new	no	yes
DefaultAuthorizationMap	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
PermissionType	no	yes
permissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
processQueryResults	no	yes
(	no	no
newMap	no	yes
,	no	no
currentContext	no	yes
.	no	no
search	no	yes
(	no	no
queueSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
,	no	no
constraints	no	yes
)	no	no
,	no	no
DestinationType	no	yes
.	no	no
QUEUE	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
queueSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
}	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
PermissionType	no	yes
permissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
processQueryResults	no	yes
(	no	no
newMap	no	yes
,	no	no
currentContext	no	yes
.	no	no
search	no	yes
(	no	no
topicSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
,	no	no
constraints	no	yes
)	no	no
,	no	no
DestinationType	no	yes
.	no	no
TOPIC	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
topicSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
}	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
PermissionType	no	yes
permissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
processQueryResults	no	yes
(	no	no
newMap	no	yes
,	no	no
currentContext	no	yes
.	no	no
search	no	yes
(	no	no
tempSearchBase	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
permissionType	no	yes
)	no	no
,	no	no
constraints	no	yes
)	no	no
,	no	no
DestinationType	no	yes
.	no	no
TEMP	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

group	no	yes
=	no	no
true	no	yes
;	no	no
Attribute	no	yes
name	no	yes
=	no	no
memberAttributes	no	yes
.	no	no
get	no	yes
(	no	no
groupNameAttribute	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
name	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
memberDn	yes	yes
,	no	no
groupNameAttribute	no	yes
,	no	no
result	yes	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
principalName	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
name	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
objectClass	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
userObjectClass	no	yes
)	no	no
)	no	no
{	no	no
user	no	yes
=	no	no
true	no	yes
;	no	no
Attribute	no	yes
name	no	yes
=	no	no
memberAttributes	no	yes
.	no	no
get	no	yes
(	no	no
userNameAttribute	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
name	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
memberDn	yes	yes
,	no	no
userNameAttribute	no	yes
,	no	no
result	yes	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
principalName	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
name	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
group	no	yes
=	no	no
true	no	yes
;	no	no

principalName	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
name	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
group	no	yes
=	no	no
true	no	yes
;	no	no
principalName	no	yes
=	no	no
memberDn	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
(	no	no
!	no	no
group	no	yes
&&	no	no
!	no	no
user	no	yes
)	no	no
||	no	no
(	no	no
group	no	yes
&&	no	no
user	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
memberDn	no	yes
,	no	no
result	yes	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
principalName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
DefaultAuthorizationMap	no	yes
map	no	yes
=	no	no
this	no	yes
.	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
group	no	yes
&&	no	no
!	no	no
user	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
members	no	yes
.	no	no
add	no	yes
(	no	no
DefaultAuthorizationMap	no	yes
.	no	no
createGroupPrincipal	no	yes
(	no	no
principalName	no	yes
,	no	no
map	no	yes
.	no	no
getGroupClass	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
NamingException	no	yes
ne	no	yes
=	no	no
new	no	yes
NamingException	no	yes
(	no	no
+	no	no
principalName	no	yes
+	no	no
+	no	no
map	no	yes
.	no	no
getGroupClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ne	no	yes
.	no	no
initCause	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	yes
ne	no	yes
;	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
context	no	yes
!=	no	no
null	no	yes
&&	no	no
refreshDisabled	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
context	no	yes
==	no	no
null	no	yes
||	no	no
(	no	no
!	no	no
refreshDisabled	no	yes
&&	no	no
(	no	no
refreshInterval	no	yes
!=	no	no
-	no	no
1	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
>=	no	no
lastUpdated	no	yes
+	no	no
refreshInterval	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
this	no	yes
.	no	no
updaterService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
context	no	yes
==	no	no
null	no	yes
||	no	no
(	no	no
!	no	no
refreshDisabled	no	yes
&&	no	no
(	no	no
refreshInterval	no	yes
!=	no	no
-	no	no
1	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
>=	no	no
lastUpdated	no	yes
+	no	no
refreshInterval	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
isContextAlive	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
context	no	yes
=	no	no
createContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
ne	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
query	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
objectAdded	no	yes
(	no	no
NamingEvent	no	yes
namingEvent	yes	yes
,	no	no
DestinationType	no	yes
destinationType	no	yes
,	no	no
PermissionType	no	yes
permissionType	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
objectRemoved	no	yes
(	no	no
NamingEvent	no	yes
namingEvent	yes	yes
,	no	no
DestinationType	no	yes
destinationType	no	yes
,	no	no
PermissionType	no	yes
permissionType	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
objectRenamed	no	yes
(	no	no
NamingEvent	no	yes
namingEvent	no	yes
,	no	no
DestinationType	no	yes
destinationType	no	yes
,	no	no
PermissionType	no	yes
permissionType	no	yes
)	no	no
{	no	no
Binding	no	yes
oldBinding	yes	yes
=	no	no
namingEvent	no	yes
.	no	no
getOldBinding	no	yes
(	no	no
)	no	no
;	no	no
Binding	no	yes
newBinding	yes	yes
=	no	no
namingEvent	no	yes
.	no	no
getNewBinding	no	yes
(	no	no
)	no	no
;	no	no

ActiveMQDestination	no	yes
oldDest	no	yes
=	no	no
formatDestination	no	yes
(	no	no
oldName	no	yes
,	no	no
destinationType	no	yes
)	no	no
;	no	no
LdapName	no	yes
newName	no	yes
=	no	no
new	no	yes
LdapName	no	yes
(	no	no
newBinding	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
newDest	no	yes
=	no	no
formatDestination	no	yes
(	no	no
newName	no	yes
,	no	no
destinationType	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
permissionType	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
objectRemoved	no	yes
(	no	no
namingEvent	no	yes
,	no	no
destinationType	no	yes
,	no	no
permissionType	no	yes
)	no	no
;	no	no
SearchControls	no	yes
controls	no	yes
=	no	no
new	no	yes
SearchControls	no	yes
(	no	no
)	no	no
;	no	no
controls	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
OBJECT_SCOPE	no	yes
)	no	no
;	no	no
boolean	no	yes
matchedToType	no	yes
=	no	no
false	no	yes
;	no	no
for	no	yes
(	no	no
PermissionType	no	yes
newPermissionType	no	yes
:	no	no
PermissionType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
NamingEnumeration	no	yes
<	no	no
SearchResult	no	yes
>	no	no
results	no	yes
=	no	no
context	no	yes
.	no	no
search	no	yes
(	no	no
newName	no	yes
,	no	no
getFilterForPermissionType	no	yes
(	no	no
newPermissionType	no	yes
)	no	no
,	no	no
controls	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
results	no	yes
.	no	no
hasMore	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
objectAdded	no	yes
(	no	no
namingEvent	no	yes
,	no	no
destinationType	no	yes
,	no	no
newPermissionType	no	yes
)	no	no
;	no	no
matchedToType	no	yes
=	no	no
true	no	yes
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
matchedToType	no	yes
)	no	no
{	no	no

break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
matchedToType	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
oldBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
newBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
oldDest	no	yes
!=	no	no
null	no	yes
&&	no	no
newDest	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
AuthorizationEntry	no	yes
entry	no	yes
=	no	no
entries	no	yes
.	no	no
remove	no	yes
(	no	no
oldDest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
entry	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
entry	no	yes
.	no	no
setDestination	no	yes
(	no	no
newDest	no	yes
)	no	no
;	no	no
DefaultAuthorizationMap	no	yes
map	no	yes
=	no	no
this	no	yes
.	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
map	no	yes
.	no	no
put	no	yes
(	no	no
newDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
map	no	yes
.	no	no
remove	no	yes
(	no	no
oldDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
entries	no	yes
.	no	no
put	no	yes
(	no	no
newDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
oldDest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InvalidNameException	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
if	no	yes
(	no	no
!	no	no
matchedToType	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
oldBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
newBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
oldDest	no	yes
!=	no	no
null	no	yes
&&	no	no
newDest	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
AuthorizationEntry	no	yes
entry	no	yes
=	no	no
entries	no	yes
.	no	no
remove	no	yes
(	no	no
oldDest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
entry	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
entry	no	yes
.	no	no
setDestination	no	yes
(	no	no
newDest	no	yes
)	no	no
;	no	no
DefaultAuthorizationMap	no	yes
map	no	yes
=	no	no
this	no	yes
.	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
map	no	yes
.	no	no
put	no	yes
(	no	no
newDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
map	no	yes
.	no	no
remove	no	yes
(	no	no
oldDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
entries	no	yes
.	no	no
put	no	yes
(	no	no
newDest	no	yes
,	no	no
entry	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
oldDest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InvalidNameException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
new	no	yes
Object	no	yes
[	no	no
]	no	no
{	no	no
oldBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
newBinding	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
}	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
objectChanged	no	yes
(	no	no
NamingEvent	no	yes
namingEvent	yes	yes
,	no	no
DestinationType	no	yes
destinationType	no	yes
,	no	no
PermissionType	no	yes
permissionType	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
namingExceptionThrown	no	yes
(	no	no
NamingExceptionEvent	no	yes
namingExceptionEvent	yes	yes
)	no	no
{	no	no
context	no	yes
=	no	no
null	no	yes
;	no	no

boolean	no	yes
warned	no	yes
=	no	no
false	no	yes
;	no	no
boolean	no	yes
locked	no	yes
=	no	no
false	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
!	no	no
isStopped	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
lockFile	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
warned	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
lockable	no	yes
!=	no	no
null	no	yes
?	no	no
lockable	no	yes
.	no	no
getLockKeepAlivePeriod	no	yes
(	no	no
)	no	no
:	no	no
0l	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e1	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
locked	no	yes
=	no	no
keepAlive	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
warned	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
lockFileName	yes	yes
+	no	no
)	no	no
;	no	no
warned	no	yes
=	no	no
true	no	yes
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
commit	no	yes
(	no	no
boolean	no	yes
onePhase	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
,	no	no
IOException	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
ProtocolInfo	no	yes
detectProtocol	no	yes
(	no	no
byte	no	yes
[	no	no
]	no	no
buffer	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
TcpTransportFactory	no	yes
detectedTransportFactory	no	yes
=	no	no
transportFactory	no	yes
;	no	no
WireFormatFactory	no	yes
detectedWireFormatFactory	no	yes
=	no	no
wireFormatFactory	no	yes
;	no	no
boolean	no	yes
found	no	yes
=	no	no
false	no	yes
;	no	no
for	no	yes
(	no	no
String	no	yes
scheme	yes	yes
:	no	no
protocolVerifiers	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
protocolVerifiers	no	yes
.	no	no
get	no	yes
(	no	no
scheme	yes	yes
)	no	no
.	no	no
isProtocol	no	yes
(	no	no
buffer	no	yes
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
logRequest	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logResponse	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
response	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logAsyncRequest	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logOneWay	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logReceivedCommand	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logReceivedException	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logRequest	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logResponse	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
response	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logAsyncRequest	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logOneWay	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logReceivedCommand	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
logReceivedException	no	yes
(	no	no
Logger	no	yes
log	no	yes
,	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

private	no	yes
BrokerService	no	yes
lookupBroker	no	yes
(	no	no
final	no	yes
BrokerRegistry	no	yes
registry	no	yes
,	no	no
final	no	yes
String	no	yes
brokerName	yes	yes
,	no	no
int	no	yes
waitForStart	no	yes
)	no	no
{	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
null	no	yes
;	no	no
synchronized	no	yes
(	no	no
registry	no	yes
.	no	no
getRegistryMutext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
broker	no	yes
=	no	no
registry	no	yes
.	no	no
lookup	no	yes
(	no	no
brokerName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
==	no	no
null	no	yes
||	no	no
waitForStart	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
final	no	yes
long	no	yes
expiry	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
waitForStart	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
broker	no	yes
==	no	no
null	no	yes
||	no	no
!	no	no
broker	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
expiry	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
long	no	yes
timeout	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
expiry	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

private	no	yes
BrokerService	no	yes
lookupBroker	no	yes
(	no	no
final	no	yes
BrokerRegistry	no	yes
registry	no	yes
,	no	no
final	no	yes
String	no	yes
brokerName	yes	yes
,	no	no
int	no	yes
waitForStart	no	yes
)	no	no
{	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
null	no	yes
;	no	no
synchronized	no	yes
(	no	no
registry	no	yes
.	no	no
getRegistryMutext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
broker	no	yes
=	no	no
registry	no	yes
.	no	no
lookup	no	yes
(	no	no
brokerName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
==	no	no
null	no	yes
||	no	no
waitForStart	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
final	no	yes
long	no	yes
expiry	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
waitForStart	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
broker	no	yes
==	no	no
null	no	yes
||	no	no
!	no	no
broker	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
expiry	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
long	no	yes
timeout	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
expiry	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
brokerName	yes	yes
+	no	no
)	no	no
;	no	no
registry	no	yes
.	no	no
getRegistryMutext	no	yes
(	no	no
)	no	no
.	no	no
wait	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
broker	no	yes
=	no	no
registry	no	yes
.	no	no
lookup	no	yes
(	no	no
brokerName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
broker	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
broker	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
TransportServer	no	yes
bind	no	yes
(	no	no
URI	no	yes
location	no	yes
,	no	no
boolean	no	yes
dispose	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
String	no	yes
host	yes	yes
=	no	no
extractHost	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
stopped	no	yes
(	no	no
String	no	yes
host	yes	yes
)	no	no
{	no	no
SERVERS	no	yes
.	no	no
remove	no	yes
(	no	no
host	yes	yes
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
CONNECTORS	no	yes
.	no	no
remove	no	yes
(	no	no
host	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
connector	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
handle	no	yes
(	no	no
IOException	no	yes
exception	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
broker	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
||	no	no
ignoreAllErrors	no	yes
)	no	no
{	no	no
allowIOResumption	no	yes
(	no	no
)	no	no
;	no	no

Throwable	no	yes
cause	yes	yes
=	no	no
exception	yes	yes
;	no	no
while	no	yes
(	no	no
cause	yes	yes
!=	no	no
null	no	yes
&&	no	no
cause	yes	yes
instanceof	no	no
IOException	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
cause	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
&&	no	no
message	no	yes
.	no	no
contains	no	yes
(	no	no
noSpaceMessage	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exception	yes	yes
,	no	no
exception	yes	yes
)	no	no
;	no	no
allowIOResumption	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
cause	yes	yes
=	no	no
cause	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
ignoreSQLExceptions	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	yes	yes
=	no	no
exception	yes	yes
;	no	no
while	no	yes
(	no	no
cause	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
cause	yes	yes
instanceof	no	no
SQLException	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
cause	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
;	no	no

allowIOResumption	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
cause	no	yes
=	no	no
cause	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
ignoreSQLExceptions	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	no	yes
=	no	no
exception	yes	yes
;	no	no
while	no	yes
(	no	no
cause	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
cause	no	yes
instanceof	no	no
SQLException	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
cause	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
contains	no	yes
(	no	no
sqlExceptionMessage	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exception	yes	yes
,	no	no
cause	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
cause	no	yes
=	no	no
cause	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
stopStartConnectors	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
ignoreSQLExceptions	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	no	yes
=	no	no
exception	no	yes
;	no	no
while	no	yes
(	no	no
cause	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
cause	no	yes
instanceof	no	no
SQLException	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
cause	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
contains	no	yes
(	no	no
sqlExceptionMessage	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exception	no	yes
,	no	no
cause	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
cause	no	yes
=	no	no
cause	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
stopStartConnectors	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
handlingException	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	yes	yes
+	no	no
+	no	no
exception	no	yes
,	no	no
exception	no	yes
)	no	no
;	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no

new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ServiceStopper	no	yes
stopper	no	yes
=	no	no
new	no	yes
ServiceStopper	no	yes
(	no	no
)	no	no
;	no	no
broker	yes	yes
.	no	no
stopAllConnectors	no	yes
(	no	no
stopper	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
allowIOResumption	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
hasLockOwnership	no	yes
(	no	no
)	no	no
&&	no	no
isPersistenceAdapterDown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
stopBroker	no	yes
(	no	no
Exception	no	yes
exception	yes	yes
)	no	no
{	no	no

private	no	yes
boolean	no	yes
hasBeenModified	no	yes
(	no	no
)	no	no
{	no	no
boolean	no	yes
modified	no	yes
=	no	no
false	no	yes
;	no	no
File	no	yes
localFile	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
file	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
localFile	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
localFile	no	yes
.	no	no
lastModified	no	yes
(	no	no
)	no	no
!=	no	no
lastModified	no	yes
)	no	no
{	no	no

protected	no	yes
Properties	no	yes
doFindLogWriterProperties	no	yes
(	no	no
String	no	yes
logWriterName	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
String	no	yes
uri	yes	yes
=	no	no
path	no	yes
+	no	no
logWriterName	no	yes
;	no	no
ClassLoader	no	yes
classLoader	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getContextClassLoader	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
classLoader	no	yes
==	no	no
null	no	yes
)	no	no
classLoader	no	yes
=	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
;	no	no
InputStream	no	yes
in	no	yes
=	no	no
classLoader	no	yes
.	no	no
getResourceAsStream	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
in	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
in	no	yes
=	no	no
LogWriterFinder	no	yes
.	no	no
class	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResourceAsStream	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
in	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
&&	no	no
NetworkBridgeUtils	no	yes
.	no	no
matchesNetworkConfig	no	yes
(	no	no
config	no	yes
,	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
ConsumerInfo	no	yes
ci	no	yes
=	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
ci	no	yes
.	no	no
setClientId	no	yes
(	no	no
key	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subscriptionInfos	no	yes
.	no	no
add	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
Subscription	no	yes
sub	no	yes
:	no	no
topicRegion	no	yes
.	no	no
getSubscriptions	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
&&	no	no
NetworkBridgeUtils	no	yes
.	no	no
isForcedDurable	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
,	no	no
config	no	yes
.	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
subscriptionInfos	no	yes
.	no	no
add	no	yes
(	no	no
sub	no	yes
.	no	no
getConsumerInfo	no	yes
(	no	no
)	no	no
.	no	no
copy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
AdvisoryBroker	no	yes
ab	no	yes
=	no	no
(	no	no
AdvisoryBroker	no	yes
)	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
AdvisoryBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
ab	no	yes
!=	no	no
null	no	yes
&&	no	no
brokerService	no	yes
.	no	no
isUseVirtualDestSubs	no	yes
(	no	no
)	no	no
&&	no	no
config	no	yes
.	no	no
isUseVirtualDestSubs	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
ab	no	yes
.	no	no
getVirtualDestinationConsumers	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
NetworkBridgeUtils	no	yes
.	no	no
isForcedDurable	no	yes
(	no	no
info	no	yes
,	no	no
config	no	yes
.	no	no
getDynamicallyIncludedDestinations	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
subscriptionInfos	no	yes
.	no	no
add	no	yes
(	no	no
info	no	yes
.	no	no
copy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
result	no	yes
(	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
trackers	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Tracker	no	yes
>	no	no
t	yes	yes
:	no	no
trackers	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
static	no	yes
void	no	yes
result	no	yes
(	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
trackers	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Tracker	no	yes
>	no	no
t	no	yes
:	no	no
trackers	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
t	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
t	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Trace	no	yes
trace	yes	yes
:	no	no
t	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
task	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
t	no	yes
)	no	no
{	no	no
throwable	yes	yes
=	no	no
t	no	yes
;	no	no
throw	no	yes
t	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
RuntimeException	no	yes
t	no	yes
)	no	no
{	no	no
throwable	yes	yes
=	no	no
t	no	yes
;	no	no
throw	no	yes
t	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	no	yes
)	no	no
{	no	no
throwable	yes	yes
=	no	no
t	no	yes
;	no	no
throw	no	yes
IOExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
+	no	no
t	no	yes
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
throwable	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
persistenceAdapter	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

private	no	yes
void	no	yes
debug	no	yes
(	no	no
Object	no	yes
msg	yes	yes
)	no	no
{	no	no

try	no	yes
{	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testSendReceiveTransactedBatches	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	yes	yes
=	no	no
0	no	no
;	no	no
j	yes	yes
<	no	no
batchCount	no	yes
;	no	no
j	yes	yes
++	no	no
)	no	no
{	no	no

Message	no	yes
[	no	no
]	no	no
outbound	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
]	no	no
{	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
,	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
}	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rollbackTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rollbackTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testAckMessageInTx	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Message	no	yes
[	no	no
]	no	no
outbound	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
]	no	no
{	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
}	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

Message	no	yes
[	no	no
]	no	no
outbound	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
]	no	no
{	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
,	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
}	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
reconnectSession	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
reconnectSession	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
reconnect	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
reconnect	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

beginTx	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
consumer	yes	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
}	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outbound	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	yes	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
outbound	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
message	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	yes	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
consumer	yes	yes
=	no	no
resourceProvider	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no

ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
outbound	no	yes
=	no	no
session	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
list	no	yes
)	no	no
;	no	no
outbound	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
)	no	no
;	no	no
commitTx	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
beginTx	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
body	no	yes
=	no	no
assertReceivedObjectMessageWithListBody	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
protected	no	yes
List	no	yes
<	no	no
String	no	yes
>	no	no
assertReceivedObjectMessageWithListBody	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
message	no	yes
,	no	no
message	no	yes
instanceof	no	no
ObjectMessage	no	yes
)	no	no
;	no	no
ObjectMessage	no	yes
objectMessage	no	yes
=	no	no
(	no	no
ObjectMessage	no	yes
)	no	no
message	no	yes
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
body	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
)	no	no
objectMessage	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Before	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setPersistent	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeConnection	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConnectionInfo	no	yes
info	yes	yes
,	no	no
Throwable	no	yes
error	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testStealLinkSuccess	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
clientID	no	yes
=	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
stealableConnectionURI	no	yes
)	no	no
;	no	no
Connection	no	yes
connection1	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection1	no	yes
.	no	no
setClientID	no	yes
(	no	no
clientID	no	yes
)	no	no
;	no	no
connection1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Connection	no	yes
connection2	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection2	no	yes
.	no	no
setClientID	no	yes
(	no	no
clientID	no	yes
)	no	no
;	no	no
connection2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InvalidClientIDException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
error	yes	yes
)	no	no
{	no	no

lists	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
store	no	yes
.	no	no
getPList	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setName	no	yes
(	no	no
threadName	no	yes
)	no	no
;	no	no
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
class	no	yes
A	no	yes
implements	no	yes
Runnable	no	yes
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
threadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
iterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
PList	no	yes
candidate	no	yes
=	no	no
lists	no	yes
[	no	no
i	no	yes
%	no	no
numLists	no	yes
]	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setName	no	yes
(	no	no
+	no	no
candidate	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
plistLocks	no	yes
(	no	no
candidate	no	yes
)	no	no
)	no	no
{	no	no
Object	no	yes
last	no	yes
=	no	no
candidate	no	yes
.	no	no
addLast	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
payload	no	yes
)	no	no
;	no	no
getFirst	no	yes
(	no	no
candidate	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
candidate	no	yes
.	no	no
remove	no	yes
(	no	no
last	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
pause	no	yes
(	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
connections	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
goOn	no	yes
(	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
connections	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBadVMTransportOptionsJMSPrefix	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
final	no	yes
String	no	yes
vmUri	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBadVMTransportOptionsBrokerPrefix	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
final	no	yes
String	no	yes
vmUri	yes	yes
=	no	no
+	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRoundTrip	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
Destination	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
factoryCON	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ConnectionFactory	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
factoryCON	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testSendingViaJmsIsReceivedByCamel	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MockEndpoint	no	yes
result	yes	yes
=	no	no
resolveMandatoryEndpoint	no	yes
(	no	no
,	no	no
MockEndpoint	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
result	yes	yes
.	no	no
expectedBodiesReceived	no	yes
(	no	no
expectedBody	no	yes
)	no	no
;	no	no
result	yes	yes
.	no	no
message	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
Destination	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ConnectionFactory	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ObjectMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
expectedBody	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
result	yes	yes
.	no	no
assertIsSatisfied	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConsumingViaJMSReceivesMessageFromCamel	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
Destination	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ConnectionFactory	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ProducerTemplate	no	yes
template	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ProducerTemplate	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
template	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConsumingViaJMSReceivesMessageFromCamel	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
Destination	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ConnectionFactory	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
ProducerTemplate	no	yes
template	no	yes
=	no	no
getMandatoryBean	no	yes
(	no	no
ProducerTemplate	no	yes
.	no	no
class	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
template	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
template	no	yes
.	no	no
sendBody	no	yes
(	no	no
,	no	no
expectedBody	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
destination	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
TextMessage	no	yes
textMessage	no	yes
=	no	no
assertIsInstanceOf	no	yes
(	no	no
TextMessage	no	yes
.	no	no
class	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expectedBody	no	yes
,	no	no
textMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
int	no	yes
dumpDb	no	yes
(	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
jdbcConn	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
ResultSet	no	yes
resultSet	yes	yes
=	no	no
jdbcConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
resultSet	yes	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
++	no	no
;	no	no

private	no	yes
boolean	no	yes
consumedFrom	no	yes
(	no	no
String	no	yes
qName	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
qName	yes	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no

private	no	yes
int	no	yes
dumpDb	no	yes
(	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
jdbcConn	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
ResultSet	no	yes
resultSet	yes	yes
=	no	no
jdbcConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
resultSet	yes	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
++	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testMocksAreValid	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
expectedEndpoint	no	yes
.	no	no
expectedMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
expectedEndpoint	no	yes
.	no	no
message	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
)	no	no
;	no	no
MockEndpoint	no	yes
.	no	no
assertIsSatisfied	no	yes
(	no	no
camelContext	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Exchange	no	yes
>	no	no
list	no	yes
=	no	no
expectedEndpoint	no	yes
.	no	no
getReceivedExchanges	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Exchange	no	yes
exchange	yes	yes
:	no	no
list	no	yes
)	no	no
{	no	no
Object	no	yes
body	yes	yes
=	no	no
exchange	yes	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
getBody	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testForwardingAMessageAcrossJMSKeepingCustomJMSHeaders	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MockEndpoint	no	yes
resultEndpoint	no	yes
=	no	no
resolveMandatoryEndpoint	no	yes
(	no	no
,	no	no
MockEndpoint	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
resultEndpoint	no	yes
.	no	no
expectedBodiesReceived	no	yes
(	no	no
expectedBody	no	yes
)	no	no
;	no	no
AssertionClause	no	yes
firstMessageExpectations	no	yes
=	no	no
resultEndpoint	no	yes
.	no	no
message	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
firstMessageExpectations	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
123	no	no
)	no	no
;	no	no
firstMessageExpectations	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
replyQueue	no	yes
)	no	no
;	no	no
firstMessageExpectations	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
correlationID	no	yes
)	no	no
;	no	no
firstMessageExpectations	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
messageType	no	yes
)	no	no
;	no	no
template	no	yes
.	no	no
sendBodyAndHeader	no	yes
(	no	no
,	no	no
expectedBody	no	yes
,	no	no
,	no	no
123	no	no
)	no	no
;	no	no
resultEndpoint	no	yes
.	no	no
assertIsSatisfied	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Exchange	no	yes
>	no	no
list	no	yes
=	no	no
resultEndpoint	no	yes
.	no	no
getReceivedExchanges	no	yes
(	no	no
)	no	no
;	no	no
Exchange	no	yes
exchange	no	yes
=	no	no
list	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	yes	yes
=	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
firstMessage	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
messageType	no	yes
)	no	no
;	no	no
firstMessage	no	yes
.	no	no
header	no	yes
(	no	no
)	no	no
.	no	no
isEqualTo	no	yes
(	no	no
groupID	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
headers	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
123	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
useReplyToHeader	no	yes
)	no	no
{	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
replyQueueName	no	yes
)	no	no
;	no	no
}	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
messageType	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
template	no	yes
.	no	no
sendBodyAndHeaders	no	yes
(	no	no
,	no	no
expectedBody	no	yes
,	no	no
headers	no	yes
)	no	no
;	no	no
resultEndpoint	no	yes
.	no	no
assertIsSatisfied	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Exchange	no	yes
>	no	no
list	no	yes
=	no	no
resultEndpoint	no	yes
.	no	no
getReceivedExchanges	no	yes
(	no	no
)	no	no
;	no	no
Exchange	no	yes
exchange	no	yes
=	no	no
list	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Message	no	yes
in	no	yes
=	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	yes	yes
=	no	no
in	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testWorks	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
addQueue	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
BrowsableEndpoint	no	yes
>	no	no
endpoints	no	yes
=	no	no
getEndpoints	no	yes
(	no	no
camelContext	no	yes
,	no	no
BrowsableEndpoint	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
BrowsableEndpoint	no	yes
endpoint	yes	yes
:	no	no
endpoints	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testSendThenFailoverThenSend	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ProducerTemplate	no	yes
requester	no	yes
=	no	no
senderContext	no	yes
.	no	no
createProducerTemplate	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
requester	no	yes
.	no	no
requestBody	no	yes
(	no	no
fromEndpoint	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
response	yes	yes
!=	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testSendThenFailoverThenSend	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ProducerTemplate	no	yes
requester	no	yes
=	no	no
senderContext	no	yes
.	no	no
createProducerTemplate	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
requester	no	yes
.	no	no
requestBody	no	yes
(	no	no
fromEndpoint	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
response	yes	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
response	yes	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
shutdownBrokerA	no	yes
(	no	no
)	no	no
;	no	no
createBrokerA	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
response	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
requester	no	yes
.	no	no
requestBody	no	yes
(	no	no
fromEndpoint	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
response	yes	yes
!=	no	no
null	no	yes
)	no	no
;	no	no

headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
replyQueueName	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
Exchange	no	yes
reply	no	yes
=	no	no
template	no	yes
.	no	no
request	no	yes
(	no	no
,	no	no
new	no	yes
Processor	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
process	no	yes
(	no	no
Exchange	no	yes
exchange	no	yes
)	no	no
{	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setBody	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
headers	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
123	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
replyQueueName	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setHeaders	no	yes
(	no	no
headers	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Message	no	yes
in	no	yes
=	no	no
reply	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	yes	yes
=	no	no
in	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no

headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
Exchange	no	yes
reply	no	yes
=	no	no
template	no	yes
.	no	no
request	no	yes
(	no	no
,	no	no
new	no	yes
Processor	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
process	no	yes
(	no	no
Exchange	no	yes
exchange	no	yes
)	no	no
{	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setBody	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
headers	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
123	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
replyQueueName	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setHeaders	no	yes
(	no	no
headers	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Message	no	yes
in	yes	yes
=	no	no
reply	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	no	yes
=	no	no
in	yes	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
replyTo	no	yes
)	no	no
;	no	no

headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
Exchange	no	yes
reply	no	yes
=	no	no
template	no	yes
.	no	no
request	no	yes
(	no	no
,	no	no
new	no	yes
Processor	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
process	no	yes
(	no	no
Exchange	no	yes
exchange	no	yes
)	no	no
{	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setBody	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
headers	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
123	no	no
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
replyQueueName	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setHeaders	no	yes
(	no	no
headers	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Message	no	yes
in	yes	yes
=	no	no
reply	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	no	yes
=	no	no
in	yes	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
replyTo	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
in	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
headers	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
;	no	no
exchange	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
.	no	no
setHeaders	no	yes
(	no	no
headers	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Message	no	yes
in	no	yes
=	no	no
reply	no	yes
.	no	no
getIn	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
replyTo	yes	yes
=	no	no
in	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
replyTo	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
in	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
in	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertMessageHeader	no	yes
(	no	no
in	no	yes
,	no	no
,	no	no
correlationID	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
receivedHeaders	no	yes
=	no	no
myBean	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
;	no	no
assertThat	no	yes
(	no	no
receivedHeaders	no	yes
,	no	no
hasKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertThat	no	yes
(	no	no
receivedHeaders	no	yes
,	no	no
hasEntry	no	yes
(	no	no
,	no	no
groupID	no	yes
)	no	no
)	no	no
;	no	no
assertThat	no	yes
(	no	no
receivedHeaders	no	yes
,	no	no
hasEntry	no	yes
(	no	no
,	no	no
correlationID	no	yes
)	no	no
)	no	no
;	no	no
replyTo	yes	yes
=	no	no
receivedHeaders	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testSendTextMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
expectedBody	no	yes
=	no	no
;	no	no
template	no	yes
.	no	no
sendBodyAndHeader	no	yes
(	no	no
startEndpointUri	no	yes
,	no	no
expectedBody	no	yes
,	no	no
,	no	no
123	no	no
)	no	no
;	no	no
listener	no	yes
.	no	no
assertMessagesArrived	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
list	no	yes
=	no	no
listener	no	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
list	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
list	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
response	no	yes
=	no	no
resp	no	yes
.	no	no
getResult	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
response	no	yes
.	no	no
isException	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ExceptionResponse	no	yes
er	no	yes
=	no	no
(	no	no
ExceptionResponse	no	yes
)	no	no
response	no	yes
;	no	no
exception	yes	yes
=	no	no
er	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
exception	yes	yes
=	no	no
e	yes	yes
;	no	no
}	no	no
if	no	yes
(	no	no
exception	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
exception	yes	yes
instanceof	no	no
JMSException	no	yes
)	no	no
{	no	no
onComplete	no	yes
.	no	no
onException	no	yes
(	no	no
(	no	no
JMSException	no	yes
)	no	no
exception	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
isClosed	no	yes
(	no	no
)	no	no
||	no	no
closing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
JMSException	no	yes
jmsEx	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no

throw	no	yes
new	no	yes
ConnectionClosedException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
Response	no	yes
response	no	yes
=	no	no
(	no	no
Response	no	yes
)	no	no
(	no	no
timeout	no	yes
>	no	no
0	no	no
?	no	no
this	no	yes
.	no	no
transport	no	yes
.	no	no
request	no	yes
(	no	no
command	no	yes
,	no	no
timeout	no	yes
)	no	no
:	no	no
this	no	yes
.	no	no
transport	no	yes
.	no	no
request	no	yes
(	no	no
command	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
response	no	yes
.	no	no
isException	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ExceptionResponse	no	yes
er	yes	yes
=	no	no
(	no	no
ExceptionResponse	no	yes
)	no	no
response	no	yes
;	no	no
if	no	yes
(	no	no
er	yes	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
instanceof	no	no
JMSException	no	yes
)	no	no
{	no	no
throw	no	yes
(	no	no
JMSException	no	yes
)	no	no
er	yes	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
isClosed	no	yes
(	no	no
)	no	no
||	no	no
closing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
JMSException	no	yes
jmsEx	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
jmsEx	no	yes
=	no	no
JMSExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
er	yes	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Response	no	yes
processMessageDispatch	no	yes
(	no	no
MessageDispatch	no	yes
md	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
waitForTransportInterruptionProcessingToComplete	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQDispatcher	no	yes
dispatcher	no	yes
=	no	no
dispatchers	yes	yes
.	no	no
get	no	yes
(	no	no
md	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
dispatcher	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
msg	no	yes
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setReadOnlyBody	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setReadOnlyProperties	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setRedeliveryCounter	no	yes
(	no	no
md	yes	yes
.	no	no
getRedeliveryCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setConnection	no	yes
(	no	no
ActiveMQConnection	no	yes
.	no	no
this	yes	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
md	yes	yes
.	no	no
setMessage	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
dispatcher	no	yes
.	no	no
dispatch	no	yes
(	no	no
md	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

}	no	no
msg	yes	yes
.	no	no
setJMSDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setJMSDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
long	no	yes
expiration	no	yes
=	no	no
0L	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
isDisableTimeStampsByDefault	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
timeStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
setJMSTimestamp	no	yes
(	no	no
timeStamp	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
timeToLive	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
expiration	no	yes
=	no	no
timeToLive	no	yes
+	no	no
timeStamp	no	yes
;	no	no
}	no	no
}	no	no
msg	yes	yes
.	no	no
setJMSExpiration	no	yes
(	no	no
expiration	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setJMSPriority	no	yes
(	no	no
priority	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setJMSRedelivered	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setMessageId	no	yes
(	no	no
messageId	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
onSend	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
setProducerId	no	yes
(	no	no
msg	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
signalInterruptionProcessingNeeded	no	yes
(	no	no
)	no	no
{	no	no
FailoverTransport	no	yes
failoverTransport	yes	yes
=	no	no
transport	no	yes
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
failoverTransport	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
failoverTransport	yes	yes
.	no	no
getStateTracker	no	yes
(	no	no
)	no	no
.	no	no
transportInterrupted	no	yes
(	no	no
this	no	yes
.	no	no
getConnectionInfo	no	yes
(	no	no
)	no	no
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
timeout	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
deadline	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
timeout	no	yes
;	no	no
}	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
MessageDispatch	no	yes
md	yes	yes
=	no	no
unconsumedMessages	no	yes
.	no	no
dequeue	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
md	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
timeout	no	yes
>	no	no
0	no	no
&&	no	no
!	no	no
unconsumedMessages	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
timeout	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
deadline	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
failureError	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
JMSExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
failureError	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
consumeExpiredMessage	no	yes
(	no	no
md	yes	yes
)	no	no
)	no	no
{	no	no

timeout	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
deadline	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
failureError	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
JMSExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
failureError	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
null	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
consumeExpiredMessage	no	yes
(	no	no
md	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
md	yes	yes
)	no	no
;	no	no
beforeMessageIsConsumed	no	yes
(	no	no
md	yes	yes
)	no	no
;	no	no
afterMessageIsConsumed	no	yes
(	no	no
md	yes	yes
,	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
timeout	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
timeout	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
deadline	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
sendPullCommand	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no

void	no	yes
clearMessagesInProgress	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
inProgressClearRequiredFlag	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
unconsumedMessages	yes	yes
.	no	no
getMutex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
inProgressClearRequiredFlag	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
ack	no	yes
=	no	no
pendingAck	no	yes
;	no	no
pendingAck	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
pendingAck	no	yes
!=	no	no
null	no	yes
&&	no	no
pendingAck	no	yes
.	no	no
isStandardAck	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ack	no	yes
=	no	no
pendingAck	no	yes
;	no	no
pendingAck	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
ack	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
MessageAck	no	yes
ackToSend	no	yes
=	no	no
ack	no	yes
;	no	no
if	no	yes
(	no	no
executorService	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
sendAck	no	yes
(	no	no
ackToSend	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

registerSync	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
deliveredCounter	no	yes
++	no	no
;	no	no
synchronized	no	yes
(	no	no
deliveredMessages	no	yes
)	no	no
{	no	no
MessageAck	no	yes
oldPendingAck	yes	yes
=	no	no
pendingAck	yes	yes
;	no	no
pendingAck	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
ackType	no	yes
,	no	no
deliveredCounter	no	yes
)	no	no
;	no	no
pendingAck	yes	yes
.	no	no
setTransactionId	no	yes
(	no	no
session	no	yes
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
oldPendingAck	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
pendingAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
pendingAck	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
oldPendingAck	yes	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
==	no	no
pendingAck	yes	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
pendingAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
oldPendingAck	yes	yes
.	no	no
getFirstMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
oldPendingAck	yes	yes
.	no	no
isDeliveredAck	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
oldPendingAck	yes	yes
,	no	no
pendingAck	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
sendAck	no	yes
(	no	no
oldPendingAck	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

deliveredCounter	no	yes
++	no	no
;	no	no
synchronized	no	yes
(	no	no
deliveredMessages	no	yes
)	no	no
{	no	no
MessageAck	no	yes
oldPendingAck	no	yes
=	no	no
pendingAck	yes	yes
;	no	no
pendingAck	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
ackType	no	yes
,	no	no
deliveredCounter	no	yes
)	no	no
;	no	no
pendingAck	yes	yes
.	no	no
setTransactionId	no	yes
(	no	no
session	no	yes
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
oldPendingAck	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
pendingAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
pendingAck	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
oldPendingAck	no	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
==	no	no
pendingAck	yes	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
pendingAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
oldPendingAck	no	yes
.	no	no
getFirstMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
oldPendingAck	no	yes
.	no	no
isDeliveredAck	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
oldPendingAck	no	yes
,	no	no
pendingAck	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
sendAck	no	yes
(	no	no
oldPendingAck	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
oldPendingAck	no	yes
,	no	no
pendingAck	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
rollbackOnFailedRecoveryRedelivery	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
if	no	yes
(	no	no
previouslyDeliveredMessages	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
numberNotReplayed	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
PreviouslyDelivered	no	yes
entry	no	yes
:	no	no
previouslyDeliveredMessages	yes	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
entry	no	yes
.	no	no
redelivered	no	yes
)	no	no
{	no	no
numberNotReplayed	no	yes
++	no	no
;	no	no

synchronized	no	yes
(	no	no
unconsumedMessages	no	yes
.	no	no
getMutex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
unconsumedMessages	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
info	no	yes
.	no	no
isBrowser	no	yes
(	no	no
)	no	no
||	no	no
md	no	yes
.	no	no
getDeliverySequenceId	no	yes
(	no	no
)	no	no
!=	no	no
0l	no	yes
||	no	no
!	no	no
session	no	yes
.	no	no
connection	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
this	no	yes
,	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
listener	no	yes
!=	no	no
null	no	yes
&&	no	no
unconsumedMessages	no	yes
.	no	no
isRunning	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
redeliveryExceeded	no	yes
(	no	no
md	no	yes
)	no	no
)	no	no
{	no	no
posionAck	no	yes
(	no	no
md	no	yes
,	no	no
+	no	no
md	no	yes
.	no	no
getRedeliveryCounter	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getConsumerId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
redeliveryPolicy	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
ActiveMQMessage	no	yes
message	no	yes
=	no	no
createActiveMQMessage	no	yes
(	no	no
md	no	yes
)	no	no
;	no	no
beforeMessageIsConsumed	no	yes
(	no	no
md	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
boolean	no	yes
expired	no	yes
=	no	no
isConsumerExpiryCheckEnabled	no	yes
(	no	no
)	no	no
&&	no	no
message	no	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
expired	no	yes
)	no	no
{	no	no
listener	no	yes
.	no	no
onMessage	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
afterMessageIsConsumed	no	yes
(	no	no
md	no	yes
,	no	no
expired	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
RuntimeException	no	yes
e	yes	yes
)	no	no
{	no	no

else	no	yes
{	no	no
afterMessageIsConsumed	no	yes
(	no	no
md	yes	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
md	yes	yes
.	no	no
setDeliverySequenceId	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
unconsumedMessages	no	yes
.	no	no
enqueue	no	yes
(	no	no
md	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
consumeExpiredMessage	no	yes
(	no	no
md	yes	yes
)	no	no
)	no	no
{	no	no
unconsumedMessages	no	yes
.	no	no
enqueue	no	yes
(	no	no
md	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
availableListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
availableListener	no	yes
.	no	no
onMessageAvailable	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
beforeMessageIsConsumed	no	yes
(	no	no
md	yes	yes
)	no	no
;	no	no
afterMessageIsConsumed	no	yes
(	no	no
md	yes	yes
,	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
info	no	yes
.	no	no
getCurrentPrefetchSize	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
this	no	yes
.	no	no
optimizedAckTask	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
this	no	yes
.	no	no
session	no	yes
.	no	no
connection	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
cancel	no	yes
(	no	no
optimizedAckTask	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	yes
e	yes	yes
;	no	no
}	no	no
this	no	yes
.	no	no
optimizedAckTask	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
optimizeAcknowledge	no	yes
&&	no	no
this	no	yes
.	no	no
optimizedAckScheduledAckInterval	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
this	no	yes
.	no	no
optimizedAckTask	no	yes
=	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
optimizeAcknowledge	no	yes
&&	no	no
!	no	no
unconsumedMessages	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
info	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
deliverAcks	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	yes
e	yes	yes
;	no	no
}	no	no
this	no	yes
.	no	no
optimizedAckTask	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
optimizeAcknowledge	no	yes
&&	no	no
this	no	yes
.	no	no
optimizedAckScheduledAckInterval	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
this	no	yes
.	no	no
optimizedAckTask	no	yes
=	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
optimizeAcknowledge	no	yes
&&	no	no
!	no	no
unconsumedMessages	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
info	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
deliverAcks	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
this	no	yes
.	no	no
session	no	yes
.	no	no
connection	no	yes
.	no	no
getScheduler	no	yes
(	no	no
)	no	no
.	no	no
executePeriodically	no	yes
(	no	no
optimizedAckTask	no	yes
,	no	no
optimizedAckScheduledAckInterval	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
MessageDispatch	no	yes
messageDispatch	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
messageDispatch	no	yes
=	no	no
executor	no	yes
.	no	no
dequeueNoWait	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
MessageDispatch	no	yes
md	no	yes
=	no	no
messageDispatch	no	yes
;	no	no
final	no	yes
ActiveMQMessage	no	yes
message	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
CommandTypes	no	yes
.	no	no
ACTIVEMQ_BLOB_MESSAGE	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
ActiveMQBlobMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
setBlobDownloader	no	yes
(	no	no
new	no	yes
BlobDownloader	no	yes
(	no	no
getBlobTransferPolicy	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
CommandTypes	no	yes
.	no	no
ACTIVEMQ_OBJECT_MESSAGE	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
setTrustAllPackages	no	yes
(	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
isTrustAllPackages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
setTrustedPackages	no	yes
(	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getTrustedPackages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MessageAck	no	yes
earlyAck	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
earlyAck	no	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
MessageAck	no	yes
.	no	no
EXPIRED_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
earlyAck	no	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
connection	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
ActiveMQSession	no	yes
.	no	no
this	yes	yes
,	no	no
message	yes	yes
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
message	no	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
CommandTypes	no	yes
.	no	no
ACTIVEMQ_OBJECT_MESSAGE	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
message	no	yes
)	no	no
.	no	no
setTrustAllPackages	no	yes
(	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
isTrustAllPackages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
message	no	yes
)	no	no
.	no	no
setTrustedPackages	no	yes
(	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getTrustedPackages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MessageAck	no	yes
earlyAck	yes	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
earlyAck	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
MessageAck	no	yes
.	no	no
EXPIRED_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
earlyAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
connection	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
ActiveMQSession	no	yes
.	no	no
this	no	yes
,	no	no
message	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	no	yes
,	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
earlyAck	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
MessageAck	no	yes
.	no	no
POSION_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
earlyAck	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
earlyAck	yes	yes
.	no	no
setPoisonCause	no	yes
(	no	no
new	no	yes
Throwable	no	yes
(	no	no
+	no	no
this	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
earlyAck	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
asyncSendPacket	no	yes
(	no	no
earlyAck	yes	yes
)	no	no
;	no	no

continue	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
isClientAcknowledge	no	yes
(	no	no
)	no	no
||	no	no
isIndividualAcknowledge	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	no	yes
.	no	no
setAcknowledgeCallback	no	yes
(	no	no
new	no	yes
Callback	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
execute	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
deliveryListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
deliveryListener	no	yes
.	no	no
beforeDelivery	no	yes
(	no	no
this	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
md	no	yes
.	no	no
setDeliverySequenceId	no	yes
(	no	no
getNextDeliveryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
lastDeliveredSequenceId	no	yes
=	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageAck	no	yes
ack	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	no	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
afterDeliveryError	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
redeliveryGuard	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
ack	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
doStartTransaction	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	yes
(	no	no
deliveryListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
deliveryListener	no	yes
.	no	no
beforeDelivery	no	yes
(	no	no
this	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
md	yes	yes
.	no	no
setDeliverySequenceId	no	yes
(	no	no
getNextDeliveryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
lastDeliveredSequenceId	no	yes
=	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageAck	no	yes
ack	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	yes	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
afterDeliveryError	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
redeliveryGuard	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
ack	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
doStartTransaction	no	yes
(	no	no
)	no	no
;	no	no
ack	yes	yes
.	no	no
setTransactionId	no	yes
(	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ack	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
clearRequestCount	no	yes
=	no	no
(	no	no
clearRequestsCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
?	no	no
clearRequestsCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
:	no	no
clearRequestsCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
beforeEnd	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

}	no	no
md	yes	yes
.	no	no
setDeliverySequenceId	no	yes
(	no	no
getNextDeliveryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
lastDeliveredSequenceId	no	yes
=	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageAck	no	yes
ack	yes	yes
=	no	no
new	no	yes
MessageAck	no	yes
(	no	no
md	yes	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
afterDeliveryError	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
redeliveryGuard	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
ack	yes	yes
.	no	no
setFirstMessageId	no	yes
(	no	no
md	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
doStartTransaction	no	yes
(	no	no
)	no	no
;	no	no
ack	yes	yes
.	no	no
setTransactionId	no	yes
(	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ack	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
clearRequestCount	no	yes
=	no	no
(	no	no
clearRequestsCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
?	no	no
clearRequestsCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
:	no	no
clearRequestsCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
beforeEnd	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
ack	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
.	no	no
isXATransaction	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
connection	yes	yes
.	no	no
hasDispatcher	no	yes
(	no	no
ack	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
ack	yes	yes
,	no	no
connection	yes	yes
)	no	no
;	no	no

if	no	yes
(	no	no
isInXATransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
TransactionInProgressException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
beforeEnd	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
throw	no	yes
e	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
transactionId	yes	yes
!=	no	no
null	no	yes
&&	no	no
rollbackOnly	no	yes
)	no	no
{	no	no
final	no	yes
String	no	yes
message	no	yes
=	no	no
+	no	no
transactionId	yes	yes
+	no	no
;	no	no
try	no	yes
{	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
throw	no	yes
new	no	yes
TransactionRolledBackException	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
transactionId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

}	no	no
if	no	yes
(	no	no
transactionId	no	yes
!=	no	no
null	no	yes
&&	no	no
rollbackOnly	no	yes
)	no	no
{	no	no
final	no	yes
String	no	yes
message	no	yes
=	no	no
+	no	no
transactionId	no	yes
+	no	no
;	no	no
try	no	yes
{	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
throw	no	yes
new	no	yes
TransactionRolledBackException	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
transactionId	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
transactionId	no	yes
,	no	no
(	no	no
synchronizations	no	yes
!=	no	no
null	no	yes
?	no	no
synchronizations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
)	no	no
)	no	no
;	no	no
TransactionInfo	no	yes
info	yes	yes
=	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
transactionId	no	yes
,	no	no
TransactionInfo	no	yes
.	no	no
COMMIT_ONE_PHASE	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
transactionId	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
this	no	yes
.	no	no
connection	no	yes
.	no	no
syncSendPacket	no	yes
(	no	no
info	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
localTransactionEventListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
localTransactionEventListener	no	yes
.	no	no
commitEvent	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
start	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
,	no	no
int	no	yes
flags	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
end	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
,	no	no
int	no	yes
flags	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
int	no	yes
prepare	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

throw	no	yes
new	no	yes
XAException	no	yes
(	no	no
XAException	no	yes
.	no	no
XAER_PROTO	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
x	no	yes
=	no	no
new	no	yes
XATransactionId	no	yes
(	no	no
xid	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
rollbackOnly	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
x	no	yes
+	no	no
)	no	no
;	no	no
throw	no	yes
new	no	yes
XAException	no	yes
(	no	no
XAException	no	yes
.	no	no
XA_RBINTEGRITY	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
TransactionInfo	no	yes
info	no	yes
=	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
x	no	yes
,	no	no
TransactionInfo	no	yes
.	no	no
PREPARE	no	yes
)	no	no
;	no	no
IntegerResponse	no	yes
response	no	yes
=	no	no
(	no	no
IntegerResponse	no	yes
)	no	no
this	no	yes
.	no	no
connection	no	yes
.	no	no
syncSendPacket	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
XAResource	no	yes
.	no	no
XA_RDONLY	no	yes
==	no	no
response	no	yes
.	no	no
getResult	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
TransactionContext	no	yes
>	no	no
l	no	yes
;	no	no
synchronized	no	yes
(	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
)	no	no
{	no	no
l	no	yes
=	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
.	no	no
remove	no	yes
(	no	no
x	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
l	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

synchronized	no	yes
(	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
)	no	no
{	no	no
l	no	yes
=	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
.	no	no
remove	no	yes
(	no	no
x	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
l	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
xid	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionContext	no	yes
ctx	yes	yes
:	no	no
l	no	yes
)	no	no
{	no	no
ctx	yes	yes
.	no	no
afterCommit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
return	no	yes
response	no	yes
.	no	no
getResult	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
x	yes	yes
+	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
TransactionContext	no	yes
>	no	no
l	no	yes
;	no	no
synchronized	no	yes
(	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
)	no	no
{	no	no
l	no	yes
=	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
.	no	no
remove	no	yes
(	no	no
x	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransactionContext	no	yes
ctx	yes	yes
:	no	no
l	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
rollback	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
commit	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
,	no	no
boolean	no	yes
onePhase	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

l	no	yes
=	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
.	no	no
remove	no	yes
(	no	no
x	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransactionContext	no	yes
ctx	yes	yes
:	no	no
l	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
ctx	yes	yes
.	no	no
afterCommit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
ignored	yes	yes
,	no	no
ignored	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
x	yes	yes
+	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
onePhase	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
TransactionContext	no	yes
>	no	no
l	no	yes
;	no	no
synchronized	no	yes
(	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
)	no	no
{	no	no
l	no	yes
=	no	no
ENDED_XA_TRANSACTION_CONTEXTS	no	yes
.	no	no
remove	no	yes
(	no	no
x	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
l	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransactionContext	no	yes
ctx	yes	yes
:	no	no
l	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
forget	no	yes
(	no	no
Xid	no	yes
xid	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
Xid	no	yes
[	no	no
]	no	no
recover	no	yes
(	no	no
int	no	yes
flag	yes	yes
)	no	no
throws	no	yes
XAException	no	yes
{	no	no

throw	no	yes
toXAException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
xid	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
associatedXid	no	yes
=	no	no
xid	no	yes
;	no	no
transactionId	yes	yes
=	no	no
new	no	yes
XATransactionId	no	yes
(	no	no
xid	no	yes
)	no	no
;	no	no
TransactionInfo	no	yes
info	no	yes
=	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
transactionId	yes	yes
,	no	no
TransactionInfo	no	yes
.	no	no
BEGIN	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
this	yes	yes
.	no	no
connection	no	yes
.	no	no
asyncSendPacket	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
transactionId	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
disassociate	no	yes
(	no	no
)	no	no
;	no	no
throw	no	yes
toXAException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
transactionId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
TransactionInfo	no	yes
info	no	yes
=	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
transactionId	yes	yes
,	no	no
TransactionInfo	no	yes
.	no	no
END	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no

Object	no	yes
result	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
object	yes	yes
instanceof	no	no
Reference	no	yes
)	no	no
{	no	no
Reference	no	yes
reference	no	yes
=	no	no
(	no	no
Reference	no	yes
)	no	no
object	yes	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
reference	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Class	no	yes
theClass	no	yes
=	no	no
loadClass	no	yes
(	no	no
this	no	yes
,	no	no
reference	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
JNDIStorableInterface	no	yes
.	no	no
class	no	yes
.	no	no
isAssignableFrom	no	yes
(	no	no
theClass	no	yes
)	no	no
)	no	no
{	no	no
JNDIStorableInterface	no	yes
store	no	yes
=	no	no
(	no	no
JNDIStorableInterface	no	yes
)	no	no
theClass	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
Properties	no	yes
properties	no	yes
=	no	no
new	no	yes
Properties	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Enumeration	no	yes
iter	no	yes
=	no	no
reference	no	yes
.	no	no
getAll	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
StringRefAddr	no	yes
addr	no	yes
=	no	no
(	no	no
StringRefAddr	no	yes
)	no	no
iter	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
addr	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
addr	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
?	no	no
:	no	no
addr	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
store	no	yes
.	no	no
setProperties	no	yes
(	no	no
properties	no	yes
)	no	no
;	no	no
result	no	yes
=	no	no
store	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

private	no	yes
void	no	yes
restoreTransactions	no	yes
(	no	no
Transport	no	yes
transport	no	yes
,	no	no
ConnectionState	no	yes
connectionState	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Vector	no	yes
<	no	no
TransactionInfo	no	yes
>	no	no
toRollback	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionState	no	yes
transactionState	yes	yes
:	no	no
connectionState	no	yes
.	no	no
getTransactionStates	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

Vector	no	yes
<	no	no
TransactionInfo	no	yes
>	no	no
toRollback	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionState	no	yes
transactionState	no	yes
:	no	no
connectionState	no	yes
.	no	no
getTransactionStates	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
transactionState	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Command	no	yes
lastCommand	no	yes
=	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
lastCommand	no	yes
instanceof	no	no
TransactionInfo	no	yes
)	no	no
{	no	no
TransactionInfo	no	yes
transactionInfo	no	yes
=	no	no
(	no	no
TransactionInfo	no	yes
)	no	no
lastCommand	no	yes
;	no	no
if	no	yes
(	no	no
transactionInfo	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
==	no	no
TransactionInfo	no	yes
.	no	no
COMMIT_ONE_PHASE	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
transactionState	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
toRollback	no	yes
.	no	no
add	no	yes
(	no	no
transactionInfo	no	yes
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
ProducerState	no	yes
producerState	yes	yes
:	no	no
transactionState	no	yes
.	no	no
getProducerStates	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	yes
(	no	no
!	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Command	no	yes
lastCommand	no	yes
=	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
lastCommand	no	yes
instanceof	no	no
TransactionInfo	no	yes
)	no	no
{	no	no
TransactionInfo	no	yes
transactionInfo	no	yes
=	no	no
(	no	no
TransactionInfo	no	yes
)	no	no
lastCommand	no	yes
;	no	no
if	no	yes
(	no	no
transactionInfo	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
==	no	no
TransactionInfo	no	yes
.	no	no
COMMIT_ONE_PHASE	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
transactionState	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
toRollback	no	yes
.	no	no
add	no	yes
(	no	no
transactionInfo	no	yes
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
ProducerState	no	yes
producerState	no	yes
:	no	no
transactionState	no	yes
.	no	no
getProducerStates	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
producerState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
producerState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Command	no	yes
command	yes	yes
:	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

TransactionInfo	no	yes
transactionInfo	no	yes
=	no	no
(	no	no
TransactionInfo	no	yes
)	no	no
lastCommand	no	yes
;	no	no
if	no	yes
(	no	no
transactionInfo	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
==	no	no
TransactionInfo	no	yes
.	no	no
COMMIT_ONE_PHASE	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
transactionState	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
toRollback	no	yes
.	no	no
add	no	yes
(	no	no
transactionInfo	no	yes
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
ProducerState	no	yes
producerState	yes	yes
:	no	no
transactionState	no	yes
.	no	no
getProducerStates	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
producerState	yes	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
producerState	yes	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Command	no	yes
command	no	yes
:	no	no
transactionState	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
ProducerState	no	yes
producerState	yes	yes
:	no	no
transactionState	no	yes
.	no	no
getProducerStates	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
restoreConsumers	no	yes
(	no	no
Transport	no	yes
transport	no	yes
,	no	no
SessionState	no	yes
sessionState	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
ConnectionState	no	yes
connectionState	no	yes
=	no	no
connectionStates	no	yes
.	no	no
get	no	yes
(	no	no
sessionState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
.	no	no
getParentId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
boolean	no	yes
connectionInterruptionProcessingComplete	no	yes
=	no	no
connectionState	no	yes
.	no	no
isConnectionInterruptProcessingComplete	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
consumerState	no	yes
:	no	no
sessionState	no	yes
.	no	no
getConsumerStates	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConsumerInfo	no	yes
infoToSend	yes	yes
=	no	no
consumerState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
connectionInterruptionProcessingComplete	no	yes
&&	no	no
infoToSend	yes	yes
.	no	no
getPrefetchSize	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
infoToSend	yes	yes
=	no	no
consumerState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
.	no	no
copy	no	yes
(	no	no
)	no	no
;	no	no
connectionState	no	yes
.	no	no
getRecoveringPullConsumers	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
infoToSend	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
consumerState	no	yes
.	no	no
getInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
infoToSend	yes	yes
.	no	no
setPrefetchSize	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
restoreTempDestinations	no	yes
(	no	no
Transport	no	yes
transport	no	yes
,	no	no
ConnectionState	no	yes
connectionState	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
iter2	no	yes
=	no	no
connectionState	no	yes
.	no	no
getTempDestinations	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter2	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
DestinationInfo	no	yes
info	yes	yes
=	no	no
(	no	no
DestinationInfo	no	yes
)	no	no
iter2	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
info	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
connectionInterruptProcessingComplete	no	yes
(	no	no
Transport	no	yes
transport	no	yes
,	no	no
ConnectionId	no	yes
connectionId	no	yes
)	no	no
{	no	no
ConnectionState	no	yes
connectionState	no	yes
=	no	no
connectionStates	no	yes
.	no	no
get	no	yes
(	no	no
connectionId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
connectionState	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connectionState	no	yes
.	no	no
setConnectionInterruptProcessingComplete	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
ConsumerInfo	no	yes
>	no	no
stalledConsumers	no	yes
=	no	no
connectionState	no	yes
.	no	no
getRecoveringPullConsumers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
ConsumerInfo	no	yes
>	no	no
entry	no	yes
:	no	no
stalledConsumers	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConsumerControl	no	yes
control	yes	yes
=	no	no
new	no	yes
ConsumerControl	no	yes
(	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setConsumerId	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setPrefetch	no	yes
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getPrefetchSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setDestination	no	yes
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

ConnectionState	no	yes
connectionState	no	yes
=	no	no
connectionStates	no	yes
.	no	no
get	no	yes
(	no	no
connectionId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
connectionState	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connectionState	no	yes
.	no	no
setConnectionInterruptProcessingComplete	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
ConsumerInfo	no	yes
>	no	no
stalledConsumers	no	yes
=	no	no
connectionState	no	yes
.	no	no
getRecoveringPullConsumers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
ConsumerInfo	no	yes
>	no	no
entry	no	yes
:	no	no
stalledConsumers	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ConsumerControl	no	yes
control	yes	yes
=	no	no
new	no	yes
ConsumerControl	no	yes
(	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setConsumerId	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setPrefetch	no	yes
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getPrefetchSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
control	yes	yes
.	no	no
setDestination	no	yes
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
control	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
control	yes	yes
.	no	no
getPrefetch	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
control	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
synchronized	no	yes
void	no	yes
executePeriodically	no	yes
(	no	no
final	no	yes
Runnable	no	yes
task	yes	yes
,	no	no
long	no	yes
period	no	yes
)	no	no
{	no	no
TimerTask	no	yes
existing	no	yes
=	no	no
timerTasks	no	yes
.	no	no
get	no	yes
(	no	no
task	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
existing	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

if	no	yes
(	no	no
monitorStarted	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
sendLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
tryLock	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
KeepAliveInfo	no	yes
info	no	yes
=	no	no
new	no	yes
KeepAliveInfo	no	yes
(	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
setResponseRequired	no	yes
(	no	no
keepAliveResponseRequired	no	yes
)	no	no
;	no	no
doOnewaySend	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
onException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
sendLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
isHeldByCurrentThread	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
sendLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
String	no	yes
toString	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
+	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
RejectedExecutionException	no	yes
ex	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
inReceive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
||	no	no
currentCounter	no	yes
!=	no	no
previousCounter	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
commandReceived	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
monitorStarted	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
ASYNC_TASKS	no	yes
.	no	no
isShutdown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
ASYNC_TASKS	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	no	yes
)	no	no
;	no	no
onException	no	yes
(	no	no
new	no	yes
InactivityIOException	no	yes
(	no	no
+	no	no
readCheckTime	no	yes
+	no	no
+	no	no
next	no	yes
.	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
String	no	yes
toString	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
+	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
RejectedExecutionException	no	yes
ex	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
ASYNC_TASKS	no	yes
.	no	no
isShutdown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
InterruptedIOException	no	yes
dealWithInterrupt	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
boolean	no	yes
configuredOk	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
boolean	no	yes
configured	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
ignoreAllWireFormatInfo	no	yes
)	no	no
{	no	no
configured	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
localWireFormatInfo	yes	yes
!=	no	no
null	no	yes
&&	no	no
remoteWireFormatInfo	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
ignoreRemoteWireFormat	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
localWireFormatInfo	yes	yes
+	no	no
+	no	no
remoteWireFormatInfo	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
readCheckTime	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
localWireFormatInfo	yes	yes
.	no	no
getMaxInactivityDuration	no	yes
(	no	no
)	no	no
,	no	no
remoteWireFormatInfo	no	yes
.	no	no
getMaxInactivityDuration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
writeCheckTime	no	yes
=	no	no
writeCheckValueFromReadCheck	no	yes
(	no	no
readCheckTime	no	yes
)	no	no
;	no	no
setReadCheckTime	no	yes
(	no	no
readCheckTime	no	yes
)	no	no
;	no	no
setInitialDelayTime	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
localWireFormatInfo	yes	yes
.	no	no
getMaxInactivityDurationInitalDelay	no	yes
(	no	no
)	no	no
,	no	no
remoteWireFormatInfo	no	yes
.	no	no
getMaxInactivityDurationInitalDelay	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
setWriteCheckTime	no	yes
(	no	no
writeCheckTime	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
Command	no	yes
command	yes	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
o	no	yes
instanceof	no	no
Command	no	yes
)	no	no
{	no	no
command	yes	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
ClassCastException	no	yes
(	no	no
+	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
command	yes	yes
.	no	no
isResponse	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Response	no	yes
response	yes	yes
=	no	no
(	no	no
Response	no	yes
)	no	no
command	yes	yes
;	no	no
FutureResponse	no	yes
future	no	yes
=	no	no
null	no	yes
;	no	no
synchronized	no	yes
(	no	no
requestMap	no	yes
)	no	no
{	no	no
future	no	yes
=	no	no
requestMap	no	yes
.	no	no
remove	no	yes
(	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
response	yes	yes
.	no	no
getCorrelationId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
future	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
future	no	yes
.	no	no
set	no	yes
(	no	no
response	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
sendWireFormat	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
try	no	yes
{	no	no
WireFormatInfo	no	yes
info	yes	yes
=	no	no
wireFormat	no	yes
.	no	no
getPreferedWireFormatInfo	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
negociate	no	yes
(	no	no
WireFormatInfo	no	yes
info	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
wireInfoSentDownLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
this	yes	yes
+	no	no
+	no	no
wireFormat	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
info	no	yes
.	no	no
isValid	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
onException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
info	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
<	no	no
minimumVersion	no	yes
)	no	no
{	no	no
onException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
+	no	no
info	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
minimumVersion	no	yes
+	no	no
)	no	no
)	no	no
;	no	no
}	no	no
wireFormat	yes	yes
.	no	no
renegotiateWireFormat	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
Socket	no	yes
socket	no	yes
=	no	no
next	no	yes
.	no	no
narrow	no	yes
(	no	no
Socket	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
socket	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
socket	no	yes
.	no	no
setTcpNoDelay	no	yes
(	no	no
wireFormat	yes	yes
.	no	no
isTcpNoDelayEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
static	no	yes
boolean	no	yes
deRegisterWrite	no	yes
(	no	no
WriteTimeoutFilter	no	yes
filter	no	yes
,	no	no
boolean	no	yes
fail	no	yes
,	no	no
IOException	no	yes
iox	no	yes
)	no	no
{	no	no
boolean	no	yes
result	no	yes
=	no	no
writers	no	yes
.	no	no
remove	no	yes
(	no	no
filter	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
result	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
fail	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
filter	no	yes
.	no	no
getNext	no	yes
(	no	no
)	no	no
.	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
Socket	no	yes
sock	no	yes
=	no	no
filter	no	yes
.	no	no
getSocket	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
sock	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onServiceAdd	no	yes
(	no	no
DiscoveryEvent	no	yes
event	no	yes
)	no	no
{	no	no
String	no	yes
url	no	yes
=	no	no
event	no	yes
.	no	no
getServiceName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
url	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
URI	no	yes
uri	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
url	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doAdvertizeSelf	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
selfService	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
String	no	yes
payload	no	yes
=	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
payload	no	yes
+=	no	no
started	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
?	no	no
ALIVE	no	yes
:	no	no
DEAD	no	yes
;	no	no
payload	no	yes
+=	no	no
DELIMITER	no	yes
+	no	no
+	no	no
DELIMITER	no	yes
;	no	no
payload	no	yes
+=	no	no
selfService	no	yes
;	no	no
try	no	yes
{	no	no
byte	no	yes
[	no	no
]	no	no
data	no	yes
=	no	no
payload	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no
DatagramPacket	no	yes
packet	no	yes
=	no	no
new	no	yes
DatagramPacket	no	yes
(	no	no
data	no	yes
,	no	no
0	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
,	no	no
sockAddress	no	yes
)	no	no
;	no	no
mcast	yes	yes
.	no	no
send	no	yes
(	no	no
packet	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
reportAdvertizeFailed	no	yes
)	no	no
{	no	no
reportAdvertizeFailed	no	yes
=	no	no
false	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
payload	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
serviceFailed	no	yes
(	no	no
DiscoveryEvent	no	yes
devent	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
SimpleDiscoveryEvent	no	yes
sevent	no	yes
=	no	no
(	no	no
SimpleDiscoveryEvent	no	yes
)	no	no
devent	no	yes
;	no	no
if	no	yes
(	no	no
running	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
sevent	no	yes
.	no	no
failed	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
listener	no	yes
.	no	no
onServiceRemove	no	yes
(	no	no
sevent	no	yes
)	no	no
;	no	no
taskRunner	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
SimpleDiscoveryEvent	no	yes
event	yes	yes
=	no	no
new	no	yes
SimpleDiscoveryEvent	no	yes
(	no	no
sevent	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
connectTime	no	yes
+	no	no
minConnectTime	no	yes
>	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
addService	no	yes
(	no	no
JmDNS	no	yes
jmDNS	no	yes
,	no	no
String	no	yes
type	yes	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
removeService	no	yes
(	no	no
JmDNS	no	yes
jmDNS	no	yes
,	no	no
String	no	yes
type	yes	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

newTransports	yes	yes
=	no	no
newTransports	yes	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
newTransports	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
isUpdateURIsSupported	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
URI	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
URI	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
StringTokenizer	no	yes
tokenizer	no	yes
=	no	no
new	no	yes
StringTokenizer	no	yes
(	no	no
newTransports	yes	yes
,	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
tokenizer	no	yes
.	no	no
hasMoreTokens	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
str	no	yes
=	no	no
tokenizer	no	yes
.	no	no
nextToken	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
URI	no	yes
uri	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
str	no	yes
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
str	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
list	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
==	no	no
false	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
updateURIs	no	yes
(	no	no
rebalance	no	yes
,	no	no
list	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	yes
URI	no	yes
[	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no

else	no	yes
if	no	yes
(	no	no
command	no	yes
instanceof	no	no
MessagePull	no	yes
)	no	no
{	no	no
MessagePull	no	yes
pullRequest	no	yes
=	no	no
(	no	no
MessagePull	no	yes
)	no	no
command	no	yes
;	no	no
if	no	yes
(	no	no
pullRequest	no	yes
.	no	no
getTimeout	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
MessageDispatch	no	yes
dispatch	no	yes
=	no	no
new	no	yes
MessageDispatch	no	yes
(	no	no
)	no	no
;	no	no
dispatch	no	yes
.	no	no
setConsumerId	no	yes
(	no	no
pullRequest	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dispatch	no	yes
.	no	no
setDestination	no	yes
(	no	no
pullRequest	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
processCommand	no	yes
(	no	no
dispatch	no	yes
)	no	no
;	no	no
}	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
!	no	no
disposed	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Transport	no	yes
transport	no	yes
=	no	no
connectedTransport	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
timedout	no	yes
=	no	no
false	no	yes
;	no	no
while	no	yes
(	no	no
transport	no	yes
==	no	no
null	no	yes
&&	no	no
!	no	no
disposed	no	yes
&&	no	no
connectionFailure	no	yes
==	no	no
null	no	yes
&&	no	no
!	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
isInterrupted	no	yes
(	no	no
)	no	no
&&	no	no
willReconnect	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
command	no	yes
)	no	no
;	no	no

error	no	yes
=	no	no
new	no	yes
IOException	no	yes
(	no	no
+	no	no
timeout	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
!	no	no
willReconnect	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
error	no	yes
=	no	no
new	no	yes
IOException	no	yes
(	no	no
+	no	no
maxReconnectAttempts	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
error	no	yes
=	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	yes
;	no	no
}	no	no
Tracked	no	yes
tracked	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
tracked	no	yes
=	no	no
stateTracker	no	yes
.	no	no
track	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
command	yes	yes
,	no	no
ioe	no	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
requestMap	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
tracked	no	yes
!=	no	no
null	no	yes
&&	no	no
tracked	no	yes
.	no	no
isWaitingForResponse	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
requestMap	no	yes
.	no	no
put	no	yes
(	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
command	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
tracked	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
tracked	no	yes
==	no	no
null	no	yes
&&	no	no
command	yes	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
error	no	yes
=	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	yes
;	no	no
}	no	no
Tracked	no	yes
tracked	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
tracked	no	yes
=	no	no
stateTracker	no	yes
.	no	no
track	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
command	yes	yes
,	no	no
ioe	no	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
requestMap	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
tracked	no	yes
!=	no	no
null	no	yes
&&	no	no
tracked	no	yes
.	no	no
isWaitingForResponse	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
requestMap	no	yes
.	no	no
put	no	yes
(	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
command	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
tracked	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
tracked	no	yes
==	no	no
null	no	yes
&&	no	no
command	yes	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
requestMap	no	yes
.	no	no
put	no	yes
(	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
command	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
transport	no	yes
.	no	no
oneway	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doUpdateURIsFromDisk	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
fileURL	yes	yes
=	no	no
getUpdateURIsURL	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
fileURL	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
BufferedReader	no	yes
in	no	yes
=	no	no
null	no	yes
;	no	no
String	no	yes
newUris	no	yes
=	no	no
null	no	yes
;	no	no
StringBuffer	no	yes
buffer	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
in	no	yes
=	no	no
new	no	yes
BufferedReader	no	yes
(	no	no
getURLStream	no	yes
(	no	no
fileURL	yes	yes
)	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
String	no	yes
line	no	yes
=	no	no
in	no	yes
.	no	no
readLine	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
line	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
buffer	no	yes
.	no	no
append	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
}	no	no
newUris	no	yes
=	no	no
buffer	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	yes	yes
)	no	no
{	no	no

doUpdateURIsFromDisk	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
disposed	no	yes
||	no	no
connectionFailure	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
reconnectMutex	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
(	no	no
connectedTransport	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
&&	no	no
!	no	no
doRebalance	no	yes
&&	no	no
!	no	no
priorityBackupAvailable	no	yes
)	no	no
||	no	no
disposed	no	yes
||	no	no
connectionFailure	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
connectList	yes	yes
=	no	no
getConnectList	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connectList	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
failure	no	yes
=	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
doRebalance	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
connectedToPriority	no	yes
||	no	no
compareURIs	no	yes
(	no	no
connectList	yes	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
connectedTransportURI	yes	yes
)	no	no
)	no	no
{	no	no
doRebalance	no	yes
=	no	no
false	no	yes
;	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no

if	no	yes
(	no	no
(	no	no
priorityBackup	no	yes
||	no	no
backup	no	yes
)	no	no
&&	no	no
!	no	no
backups	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ArrayList	no	yes
<	no	no
BackupTransport	no	yes
>	no	no
l	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
BackupTransport	no	yes
>	no	no
(	no	no
backups	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
randomize	no	yes
)	no	no
{	no	no
Collections	no	yes
.	no	no
shuffle	no	yes
(	no	no
l	no	yes
)	no	no
;	no	no
}	no	no
BackupTransport	no	yes
bt	no	yes
=	no	no
l	no	yes
.	no	no
remove	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
backups	no	yes
.	no	no
remove	no	yes
(	no	no
bt	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
bt	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
;	no	no
uri	yes	yes
=	no	no
bt	no	yes
.	no	no
getUri	no	yes
(	no	no
)	no	no
;	no	no
processCommand	no	yes
(	no	no
bt	no	yes
.	no	no
getBrokerInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
priorityBackup	no	yes
&&	no	no
priorityBackupAvailable	no	yes
)	no	no
{	no	no
Transport	no	yes
old	no	yes
=	no	no
this	no	yes
.	no	no
connectedTransport	no	yes
.	no	no
getAndSet	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
old	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
disposeTransport	no	yes
(	no	no
old	no	yes
)	no	no
;	no	no
}	no	no
priorityBackupAvailable	no	yes
=	no	no
false	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
transport	no	yes
==	no	no
null	no	yes
&&	no	no
!	no	no
firstConnection	no	yes
&&	no	no
connectFailures	yes	yes
==	no	no
0	no	no
&&	no	no
initialReconnectDelay	no	yes
>	no	no
0	no	no
&&	no	no
!	no	no
disposed	no	yes
)	no	no
{	no	no

Iterator	no	yes
<	no	no
URI	no	yes
>	no	no
iter	no	yes
=	no	no
connectList	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
transport	no	yes
!=	no	no
null	no	yes
||	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
(	no	no
connectedTransport	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
&&	no	no
!	no	no
disposed	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
transport	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
uri	yes	yes
=	no	no
addExtraQueryOptions	no	yes
(	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
transport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
compositeConnect	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
connectFailures	no	yes
,	no	no
uri	yes	yes
)	no	no
;	no	no
transport	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
createTransportListener	no	yes
(	no	no
transport	no	yes
)	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
started	no	yes
&&	no	no
!	no	no
firstConnection	no	yes
)	no	no
{	no	no
restoreTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
connectedTransportURI	no	yes
=	no	no
uri	yes	yes
;	no	no

try	no	yes
{	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
transport	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
uri	yes	yes
=	no	no
addExtraQueryOptions	no	yes
(	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
transport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
compositeConnect	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
connectFailures	no	yes
,	no	no
uri	yes	yes
)	no	no
;	no	no
transport	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
createTransportListener	no	yes
(	no	no
transport	no	yes
)	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
started	no	yes
&&	no	no
!	no	no
firstConnection	no	yes
)	no	no
{	no	no
restoreTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
connectedTransportURI	no	yes
=	no	no
uri	yes	yes
;	no	no
connectedTransport	no	yes
.	no	no
set	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
connectedToPriority	no	yes
=	no	no
isPriority	no	yes
(	no	no
connectedTransportURI	no	yes
)	no	no
;	no	no

transport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
compositeConnect	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
connectFailures	no	yes
,	no	no
uri	yes	yes
)	no	no
;	no	no
transport	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
createTransportListener	no	yes
(	no	no
transport	no	yes
)	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
started	no	yes
&&	no	no
!	no	no
firstConnection	no	yes
)	no	no
{	no	no
restoreTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
connectedTransportURI	no	yes
=	no	no
uri	yes	yes
;	no	no
connectedTransport	no	yes
.	no	no
set	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
connectedToPriority	no	yes
=	no	no
isPriority	no	yes
(	no	no
connectedTransportURI	no	yes
)	no	no
;	no	no
reconnectMutex	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
connectFailures	no	yes
=	no	no
0	no	no
;	no	no
synchronized	no	yes
(	no	no
listenerMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
transportListener	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

restoreTransport	no	yes
(	no	no
transport	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
connectedTransportURI	no	yes
=	no	no
uri	no	yes
;	no	no
connectedTransport	no	yes
.	no	no
set	no	yes
(	no	no
transport	yes	yes
)	no	no
;	no	no
connectedToPriority	no	yes
=	no	no
isPriority	no	yes
(	no	no
connectedTransportURI	no	yes
)	no	no
;	no	no
reconnectMutex	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
connectFailures	no	yes
=	no	no
0	no	no
;	no	no
synchronized	no	yes
(	no	no
listenerMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
transportListener	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
listenerMutex	no	yes
.	no	no
wait	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ex	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
transportListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
transportListener	no	yes
.	no	no
transportResumed	no	yes
(	no	no
)	no	no
;	no	no

connectedToPriority	no	yes
=	no	no
isPriority	no	yes
(	no	no
connectedTransportURI	no	yes
)	no	no
;	no	no
reconnectMutex	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
connectFailures	yes	yes
=	no	no
0	no	no
;	no	no
synchronized	no	yes
(	no	no
listenerMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
transportListener	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
listenerMutex	no	yes
.	no	no
wait	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ex	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
transportListener	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
transportListener	no	yes
.	no	no
transportResumed	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
firstConnection	no	yes
)	no	no
{	no	no
firstConnection	no	yes
=	no	no
false	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
uri	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doDelay	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
reconnectDelay	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
sleepMutex	no	yes
)	no	no
{	no	no

boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
first	no	yes
==	no	no
null	no	yes
||	no	no
second	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
result	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
first	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
==	no	no
second	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
InetAddress	no	yes
firstAddr	no	yes
=	no	no
null	no	yes
;	no	no
InetAddress	no	yes
secondAddr	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
firstAddr	no	yes
=	no	no
InetAddress	no	yes
.	no	no
getByName	no	yes
(	no	no
first	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
secondAddr	no	yes
=	no	no
InetAddress	no	yes
.	no	no
getByName	no	yes
(	no	no
second	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
firstAddr	no	yes
.	no	no
equals	no	yes
(	no	no
secondAddr	no	yes
)	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
firstAddr	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
first	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
transports	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
}	no	no
else	no	yes
{	no	no
Iterator	no	yes
<	no	no
FanoutTransportHandler	no	yes
>	no	no
iter	no	yes
=	no	no
transports	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
disposed	no	yes
)	no	no
{	no	no
long	no	yes
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
FanoutTransportHandler	no	yes
fanoutHandler	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
fanoutHandler	no	yes
.	no	no
transport	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
!=	no	no
0	no	no
&&	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
>	no	no
now	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
closestReconnectDate	no	yes
==	no	no
0	no	no
||	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
<	no	no
closestReconnectDate	no	yes
)	no	no
{	no	no
closestReconnectDate	no	yes
=	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
;	no	no
}	no	no
continue	no	yes
;	no	no
}	no	no
URI	no	yes
uri	yes	yes
=	no	no
fanoutHandler	no	yes
.	no	no
uri	yes	yes
;	no	no
try	no	yes
{	no	no

if	no	yes
(	no	no
closestReconnectDate	no	yes
==	no	no
0	no	no
||	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
<	no	no
closestReconnectDate	no	yes
)	no	no
{	no	no
closestReconnectDate	no	yes
=	no	no
fanoutHandler	no	yes
.	no	no
reconnectDate	no	yes
;	no	no
}	no	no
continue	no	yes
;	no	no
}	no	no
URI	no	yes
uri	yes	yes
=	no	no
fanoutHandler	no	yes
.	no	no
uri	yes	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
uri	yes	yes
)	no	no
;	no	no
Transport	no	yes
t	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
compositeConnect	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no
fanoutHandler	no	yes
.	no	no
transport	no	yes
=	no	no
t	no	yes
;	no	no
t	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
fanoutHandler	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
started	no	yes
)	no	no
{	no	no
restoreTransport	no	yes
(	no	no
fanoutHandler	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
fanoutHandler	no	yes
.	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
fanoutHandler	no	yes
.	no	no
connectFailures	no	yes
=	no	no
0	no	no
;	no	no

URI	no	yes
uri	no	yes
=	no	no
fanoutHandler	yes	yes
.	no	no
uri	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
uri	no	yes
)	no	no
;	no	no
Transport	no	yes
t	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
compositeConnect	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
fanoutHandler	yes	yes
.	no	no
transport	no	yes
=	no	no
t	no	yes
;	no	no
t	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
fanoutHandler	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
started	no	yes
)	no	no
{	no	no
restoreTransport	no	yes
(	no	no
fanoutHandler	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
fanoutHandler	yes	yes
.	no	no
reconnectDelay	no	yes
=	no	no
initialReconnectDelay	no	yes
;	no	no
fanoutHandler	yes	yes
.	no	no
connectFailures	no	yes
=	no	no
0	no	no
;	no	no
if	no	yes
(	no	no
primary	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
primary	no	yes
=	no	no
fanoutHandler	yes	yes
;	no	no
}	no	no
connectedCount	no	yes
++	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
uri	no	yes
+	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
fanoutHandler	no	yes
.	no	no
transport	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
ServiceSupport	no	yes
.	no	no
dispose	no	yes
(	no	no
fanoutHandler	no	yes
.	no	no
transport	no	yes
)	no	no
;	no	no
fanoutHandler	no	yes
.	no	no
transport	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
maxReconnectAttempts	no	yes
>	no	no
0	no	no
&&	no	no
++	no	no
fanoutHandler	no	yes
.	no	no
connectFailures	no	yes
>=	no	no
maxReconnectAttempts	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
fanoutHandler	no	yes
.	no	no
connectFailures	no	yes
+	no	no
)	no	no
;	no	no
connectionFailure	no	yes
=	no	no
e	no	yes
;	no	no
reconnectMutex	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
useExponentialBackOff	no	yes
)	no	no
{	no	no
fanoutHandler	no	yes
.	no	no
reconnectDelay	yes	yes
*=	no	no
backOffMultiplier	no	yes
;	no	no
if	no	yes
(	no	no
fanoutHandler	no	yes
.	no	no
reconnectDelay	yes	yes
>	no	no
maxReconnectDelay	no	yes
)	no	no
{	no	no
fanoutHandler	no	yes
.	no	no
reconnectDelay	yes	yes
=	no	no
maxReconnectDelay	no	yes
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
oneway	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
Command	no	yes
command	no	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
try	no	yes
{	no	no
synchronized	no	yes
(	no	no
reconnectMutex	no	yes
)	no	no
{	no	no
while	no	yes
(	no	no
connectedCount	no	yes
<	no	no
minAckCount	yes	yes
&&	no	no
!	no	no
disposed	no	yes
&&	no	no
connectionFailure	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
addBuffer	no	yes
(	no	no
int	no	yes
commandId	yes	yes
,	no	no
Object	no	yes
buffer	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

else	no	yes
if	no	yes
(	no	no
command	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
ReplayCommand	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
)	no	no
{	no	no
replayCommands	no	yes
(	no	no
(	no	no
ReplayCommand	no	yes
)	no	no
command	yes	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
int	no	yes
actualCounter	no	yes
=	no	no
command	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
valid	no	yes
=	no	no
expectedCounter	no	yes
==	no	no
actualCounter	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
valid	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
commands	no	yes
)	no	no
{	no	no
int	no	yes
nextCounter	no	yes
=	no	no
actualCounter	no	yes
;	no	no
boolean	no	yes
empty	no	yes
=	no	no
commands	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
empty	no	yes
)	no	no
{	no	no
Command	no	yes
nextAvailable	no	yes
=	no	no
commands	no	yes
.	no	no
first	no	yes
(	no	no
)	no	no
;	no	no
nextCounter	no	yes
=	no	no
nextAvailable	no	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
boolean	no	yes
keep	no	yes
=	no	no
replayStrategy	no	yes
.	no	no
onDroppedPackets	no	yes
(	no	no
this	no	yes
,	no	no
expectedCounter	no	yes
,	no	no
actualCounter	no	yes
,	no	no
nextCounter	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
keep	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
onMissingResponse	no	yes
(	no	no
Command	no	yes
command	yes	yes
,	no	no
FutureResponse	no	yes
response	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doStop	no	yes
(	no	no
ServiceStopper	no	yes
stopper	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
socket	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
closeAsync	no	yes
)	no	no
{	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
TaskRunnerFactory	no	yes
taskRunnerFactory	no	yes
=	no	no
new	no	yes
TaskRunnerFactory	no	yes
(	no	no
)	no	no
;	no	no
taskRunnerFactory	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
socket	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
socket	yes	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
socket	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
socket	yes	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
taskRunnerFactory	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
socket	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
socket	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
taskRunnerFactory	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
socket	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
socket	yes	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
socket	yes	yes
)	no	no
;	no	no

SocketAddress	no	yes
address	no	yes
=	no	no
channel	no	yes
.	no	no
receive	no	yes
(	no	no
readBuffer	no	yes
)	no	no
;	no	no
readBuffer	no	yes
.	no	no
flip	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
readBuffer	no	yes
.	no	no
limit	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
receiveCounter	no	yes
++	no	no
;	no	no
from	yes	yes
=	no	no
headerMarshaller	no	yes
.	no	no
createEndpoint	no	yes
(	no	no
readBuffer	no	yes
,	no	no
address	no	yes
)	no	no
;	no	no
int	no	yes
remaining	no	yes
=	no	no
readBuffer	no	yes
.	no	no
remaining	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
data	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
remaining	no	yes
]	no	no
;	no	no
readBuffer	no	yes
.	no	no
get	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
DataInputStream	no	yes
dataIn	no	yes
=	no	no
new	no	yes
DataInputStream	no	yes
(	no	no
new	no	yes
ByteArrayInputStream	no	yes
(	no	no
data	no	yes
)	no	no
)	no	no
;	no	no
answer	yes	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
dataIn	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
answer	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
answer	yes	yes
.	no	no
setFrom	no	yes
(	no	no
from	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
Command	no	yes
read	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Command	no	yes
answer	yes	yes
=	no	no
null	no	yes
;	no	no
Endpoint	no	yes
from	no	yes
=	no	no
null	no	yes
;	no	no
synchronized	no	yes
(	no	no
readLock	no	yes
)	no	no
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
DatagramPacket	no	yes
datagram	no	yes
=	no	no
createDatagramPacket	no	yes
(	no	no
)	no	no
;	no	no
channel	no	yes
.	no	no
receive	no	yes
(	no	no
datagram	no	yes
)	no	no
;	no	no
receiveCounter	no	yes
++	no	no
;	no	no
DataInputStream	no	yes
dataIn	no	yes
=	no	no
new	no	yes
DataInputStream	no	yes
(	no	no
new	no	yes
ByteArrayInputStream	no	yes
(	no	no
datagram	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
datagram	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
from	no	yes
=	no	no
headerMarshaller	no	yes
.	no	no
createEndpoint	no	yes
(	no	no
datagram	no	yes
,	no	no
dataIn	no	yes
)	no	no
;	no	no
answer	yes	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
dataIn	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
answer	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
answer	yes	yes
.	no	no
setFrom	no	yes
(	no	no
from	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
oneway	no	yes
(	no	no
Object	no	yes
command	yes	yes
,	no	no
SocketAddress	no	yes
address	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
Command	no	yes
command	no	yes
=	no	no
commandChannel	no	yes
.	no	no
read	no	yes
(	no	no
)	no	no
;	no	no
doConsume	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
AsynchronousCloseException	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e2	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
+	no	no
e2	no	yes
+	no	no
,	no	no
e2	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
SocketException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e2	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
+	no	no
e2	no	yes
+	no	no
,	no	no
e2	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
EOFException	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e2	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
+	no	no
e2	no	yes
+	no	no
,	no	no
e2	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
EOFException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e2	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
+	no	no
e2	no	yes
+	no	no
,	no	no
e2	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e2	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
bind	no	yes
(	no	no
DatagramSocket	no	yes
socket	no	yes
,	no	no
SocketAddress	no	yes
localAddress	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
channel	no	yes
.	no	no
configureBlocking	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
processInboundConnection	no	yes
(	no	no
Command	no	yes
command	yes	yes
)	no	no
{	no	no
DatagramEndpoint	no	yes
endpoint	yes	yes
=	no	no
(	no	no
DatagramEndpoint	no	yes
)	no	no
command	yes	yes
.	no	no
getFrom	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
+	no	no
endpoint	no	yes
+	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
Transport	no	yes
transport	no	yes
=	no	no
null	no	yes
;	no	no
synchronized	no	yes
(	no	no
transports	no	yes
)	no	no
{	no	no
transport	no	yes
=	no	no
transports	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
transport	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
usingWireFormatNegotiation	no	yes
&&	no	no
!	no	no
command	no	yes
.	no	no
isWireFormatInfo	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getFrom	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
transport	no	yes
=	no	no
createTransport	no	yes
(	no	no
command	no	yes
,	no	no
endpoint	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
configureTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
transports	no	yes
.	no	no
put	no	yes
(	no	no
endpoint	no	yes
,	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
fireEvent	no	yes
(	no	no
final	no	yes
int	no	yes
oldPercentUsage	yes	yes
,	no	no
final	no	yes
int	no	yes
newPercentUsage	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
running	no	yes
=	no	no
true	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
String	no	yes
threadName	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	no	yes
+	no	no
+	no	no
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
?	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
:	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bytesAsText	no	yes
&&	no	no
(	no	no
msg	no	yes
instanceof	no	no
BytesMessage	no	yes
)	no	no
)	no	no
{	no	no
long	no	yes
length	no	yes
=	no	no
(	no	no
(	no	no
BytesMessage	no	yes
)	no	no
msg	no	yes
)	no	no
.	no	no
getBodyLength	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
bytes	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
(	no	no
int	no	yes
)	no	no
length	no	yes
]	no	no
;	no	no
(	no	no
(	no	no
BytesMessage	no	yes
)	no	no
msg	no	yes
)	no	no
.	no	no
readBytes	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
new	no	yes
String	no	yes
(	no	no
bytes	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
received	yes	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
breakOnNull	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
getTransacted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
batchSize	yes	yes
>	no	no
0	no	no
&&	no	no
received	yes	yes
>	no	no
0	no	no
&&	no	no
received	yes	yes
%	no	no
batchSize	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	no	yes
+	no	no
+	no	no
transactions	no	yes
++	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

else	no	yes
{	no	no
if	no	yes
(	no	no
breakOnNull	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
getTransacted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
batchSize	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
%	no	no
batchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	yes	yes
+	no	no
+	no	no
transactions	no	yes
++	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
session	no	yes
.	no	no
getAcknowledgeMode	no	yes
(	no	no
)	no	no
==	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
batchSize	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
%	no	no
batchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchSize	no	yes
+	no	no
+	no	no
received	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
sleep	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
batchSize	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
%	no	no
batchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	yes	yes
+	no	no
+	no	no
transactions	no	yes
++	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
session	no	yes
.	no	no
getAcknowledgeMode	no	yes
(	no	no
)	no	no
==	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
batchSize	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
>	no	no
0	no	no
&&	no	no
received	no	yes
%	no	no
batchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchSize	no	yes
+	no	no
+	no	no
received	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
sleep	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
finished	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
finished	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
static	no	yes
boolean	no	yes
setProperty	no	yes
(	no	no
Object	no	yes
target	yes	yes
,	no	no
String	no	yes
name	yes	yes
,	no	no
Object	no	yes
value	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
clazz	no	yes
=	no	no
target	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
target	yes	yes
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
clazz	no	yes
=	no	no
SSLServerSocket	no	yes
.	no	no
class	no	yes
;	no	no
}	no	no
Method	no	yes
setter	no	yes
=	no	no
findSetterMethod	no	yes
(	no	no
clazz	no	yes
,	no	no
name	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
setter	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
setter	no	yes
.	no	no
setAccessible	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
value	no	yes
==	no	no
null	no	yes
||	no	no
value	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
setter	no	yes
.	no	no
getParameterTypes	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
setter	no	yes
.	no	no
invoke	no	yes
(	no	no
target	yes	yes
,	no	no
value	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
setter	no	yes
.	no	no
invoke	no	yes
(	no	no
target	yes	yes
,	no	no
convert	no	yes
(	no	no
value	no	yes
,	no	no
setter	no	yes
.	no	no
getParameterTypes	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
true	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
startClass	yes	yes
!=	no	no
stopClass	no	yes
)	no	no
{	no	no
addFields	no	yes
(	no	no
target	no	yes
,	no	no
startClass	yes	yes
.	no	no
getSuperclass	no	yes
(	no	no
)	no	no
,	no	no
stopClass	no	yes
,	no	no
map	no	yes
)	no	no
;	no	no
}	no	no
Field	no	yes
[	no	no
]	no	no
fields	no	yes
=	no	no
startClass	yes	yes
.	no	no
getDeclaredFields	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Field	no	yes
field	yes	yes
:	no	no
fields	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
Modifier	no	yes
.	no	no
isStatic	no	yes
(	no	no
field	yes	yes
.	no	no
getModifiers	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
Modifier	no	yes
.	no	no
isTransient	no	yes
(	no	no
field	yes	yes
.	no	no
getModifiers	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
Modifier	no	yes
.	no	no
isPrivate	no	yes
(	no	no
field	yes	yes
.	no	no
getModifiers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
field	yes	yes
.	no	no
setAccessible	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Object	no	yes
o	no	yes
=	no	no
field	yes	yes
.	no	no
get	no	yes
(	no	no
target	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
o	no	yes
!=	no	no
null	no	yes
&&	no	no
o	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
isArray	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
o	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
(	no	no
Object	no	yes
[	no	no
]	no	no
)	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
}	no	no
}	no	no
map	no	yes
.	no	no
put	no	yes
(	no	no
field	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
null	no	yes
;	no	no
String	no	yes
threadName	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
persistent	no	yes
?	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
:	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
msgTTL	no	yes
)	no	no
;	no	no
initPayLoad	no	yes
(	no	no
)	no	no
;	no	no
running	no	yes
=	no	no
true	no	yes
;	no	no

long	no	yes
tStart	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
runIndefinitely	no	yes
)	no	no
{	no	no
while	no	yes
(	no	no
running	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
paused	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
threadName	yes	yes
)	no	no
;	no	no
sentCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
for	no	yes
(	no	no
sentCount	no	yes
.	no	no
set	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
sentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
messageCount	no	yes
&&	no	no
running	no	yes
;	no	no
sentCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
paused	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
threadName	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	yes	yes
+	no	no
+	no	no
this	no	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
long	no	yes
tEnd	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
elapsed	yes	yes
=	no	no
(	no	no
tEnd	no	yes
-	no	no
tStart	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no

if	no	yes
(	no	no
runIndefinitely	no	yes
)	no	no
{	no	no
while	no	yes
(	no	no
running	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
paused	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
threadName	yes	yes
)	no	no
;	no	no
sentCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
for	no	yes
(	no	no
sentCount	no	yes
.	no	no
set	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
sentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
messageCount	no	yes
&&	no	no
running	no	yes
;	no	no
sentCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
paused	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
threadName	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	yes	yes
+	no	no
+	no	no
this	no	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
long	no	yes
tEnd	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
elapsed	no	yes
=	no	no
(	no	no
tEnd	no	yes
-	no	no
tStart	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
threadName	yes	yes
+	no	no
+	no	no
elapsed	no	yes
+	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
sendMessage	no	yes
(	no	no
MessageProducer	no	yes
producer	no	yes
,	no	no
String	no	yes
threadName	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Message	no	yes
message	no	yes
=	no	no
createMessage	no	yes
(	no	no
sentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
logError	no	yes
(	no	no
Object	no	yes
service	yes	yes
,	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
Logger	no	yes
log	no	yes
=	no	no
LoggerFactory	no	yes
.	no	no
getLogger	no	yes
(	no	no
service	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
static	no	yes
List	no	yes
<	no	no
Runnable	no	yes
>	no	no
shutdownNow	no	yes
(	no	no
ExecutorService	no	yes
executorService	yes	yes
)	no	no
{	no	no
List	no	yes
<	no	no
Runnable	no	yes
>	no	no
answer	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
executorService	yes	yes
.	no	no
isShutdown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDayOfWeek	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDayOfWeek	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDayOfWeekVariant	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
7	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDayOfWeekVariant	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
7	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	yes	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
11	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
FRIDAY	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
11	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no

result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
11	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
FRIDAY	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
11	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMonthVariant	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
7	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMonthVariant	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MARCH	no	yes
,	no	no
7	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	yes	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
APRIL	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
3	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
SUNDAY	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
APRIL	no	yes
,	no	no
30	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no

result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
APRIL	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
3	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
SUNDAY	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
APRIL	no	yes
,	no	no
30	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
APRIL	no	yes
,	no	no
30	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	yes	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
SUNDAY	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
MAY	no	yes
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MAY	no	yes
,	no	no
30	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no

result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
result	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
SECOND	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
SUNDAY	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
DAY_OF_WEEK	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Calendar	no	yes
.	no	no
MAY	no	yes
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MONTH	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2011	no	no
,	no	no
result	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
YEAR	no	yes
)	no	no
)	no	no
;	no	no
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2011	no	no
,	no	no
Calendar	no	yes
.	no	no
MAY	no	yes
,	no	no
30	no	no
,	no	no
22	no	no
,	no	no
0	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetStartNextMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
DECEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetStartNextMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
DECEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextStartCurrMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
DECEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextStartCurrMonth	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
DECEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDays	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	yes	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeDays	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
Calendar	no	yes
current	no	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
set	no	yes
(	no	no
2010	no	no
,	no	no
Calendar	no	yes
.	no	no
NOVEMBER	no	yes
,	no	no
15	no	no
,	no	no
9	no	no
,	no	no
15	no	no
,	no	no
30	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
current	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
.	no	no
getTimeInMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Calendar	no	yes
result	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMinutes	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
current	no	yes
=	no	no
20	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
Calendar	no	yes
calender	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
calender	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
current	no	yes
)	no	no
;	no	no
int	no	yes
startHours	no	yes
=	no	no
calender	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
;	no	no
int	no	yes
startMinutes	no	yes
=	no	no
calender	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testgetNextTimeMinutes	no	yes
(	no	no
)	no	no
throws	no	yes
MessageFormatException	no	yes
{	no	no
String	no	yes
test	no	yes
=	no	no
;	no	no
long	no	yes
current	no	yes
=	no	no
20	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
Calendar	no	yes
calender	yes	yes
=	no	no
Calendar	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
calender	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
current	no	yes
)	no	no
;	no	no
int	no	yes
startHours	no	yes
=	no	no
calender	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
HOUR_OF_DAY	no	yes
)	no	no
;	no	no
int	no	yes
startMinutes	no	yes
=	no	no
calender	yes	yes
.	no	no
get	no	yes
(	no	no
Calendar	no	yes
.	no	no
MINUTE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
calender	yes	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
next	no	yes
=	no	no
CronParser	no	yes
.	no	no
getNextScheduledTime	no	yes
(	no	no
test	no	yes
,	no	no
current	no	yes
)	no	no
;	no	no
calender	yes	yes
.	no	no
setTimeInMillis	no	yes
(	no	no
next	no	yes
)	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Thread	no	yes
waitForSpaceThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
startLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
running	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
memUsage	yes	yes
.	no	no
waitForSpace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
removeThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
addThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
useWaitForSpaceThread	no	yes
)	no	no
{	no	no

Thread	no	yes
waitForSpaceThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
startLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
running	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
memUsage	yes	yes
.	no	no
waitForSpace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
removeThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
addThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
useWaitForSpaceThread	no	yes
)	no	no
{	no	no
waitForSpaceThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Random	no	yes
r	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
seed	no	yes
)	no	no
;	no	no
startLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
verifyInflightAttribute	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
verifyInflightAttribute	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testInvoke	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testInvoke	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
createServer	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
jettyOptions	yes	yes
.	no	no
getConfig	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doPut	no	yes
(	no	no
HttpServletRequest	no	yes
req	no	yes
,	no	no
HttpServletResponse	no	yes
resp	no	yes
)	no	no
throws	no	yes
ServletException	no	yes
,	no	no
IOException	no	yes
{	no	no
String	no	yes
group	yes	yes
=	no	no
req	no	yes
.	no	no
getPathInfo	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
service	yes	yes
=	no	no
req	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doDelete	no	yes
(	no	no
HttpServletRequest	no	yes
req	no	yes
,	no	no
HttpServletResponse	no	yes
resp	no	yes
)	no	no
throws	no	yes
ServletException	no	yes
,	no	no
IOException	no	yes
{	no	no
String	no	yes
group	yes	yes
=	no	no
req	no	yes
.	no	no
getPathInfo	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
service	yes	yes
=	no	no
req	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no

synchronized	no	yes
private	no	yes
void	no	yes
doRegister	no	yes
(	no	no
String	no	yes
service	no	yes
)	no	no
{	no	no
String	no	yes
url	yes	yes
=	no	no
registryURL	no	yes
;	no	no
try	no	yes
{	no	no
HttpPut	no	yes
method	no	yes
=	no	no
new	no	yes
HttpPut	no	yes
(	no	no
url	yes	yes
)	no	no
;	no	no
method	no	yes
.	no	no
addHeader	no	yes
(	no	no
,	no	no
service	no	yes
)	no	no
;	no	no
ResponseHandler	no	yes
<	no	no
String	no	yes
>	no	no
handler	no	yes
=	no	no
new	no	yes
BasicResponseHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
responseBody	yes	yes
=	no	no
httpClient	no	yes
.	no	no
execute	no	yes
(	no	no
method	no	yes
,	no	no
handler	no	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
synchronized	no	yes
private	no	yes
void	no	yes
doUnRegister	no	yes
(	no	no
String	no	yes
service	no	yes
)	no	no
{	no	no
String	no	yes
url	yes	yes
=	no	no
registryURL	no	yes
;	no	no
try	no	yes
{	no	no
HttpDelete	no	yes
method	no	yes
=	no	no
new	no	yes
HttpDelete	no	yes
(	no	no
url	yes	yes
)	no	no
;	no	no
method	no	yes
.	no	no
addHeader	no	yes
(	no	no
,	no	no
service	no	yes
)	no	no
;	no	no
ResponseHandler	no	yes
<	no	no
String	no	yes
>	no	no
handler	no	yes
=	no	no
new	no	yes
BasicResponseHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
responseBody	yes	yes
=	no	no
httpClient	no	yes
.	no	no
execute	no	yes
(	no	no
method	no	yes
,	no	no
handler	no	yes
)	no	no
;	no	no

synchronized	no	yes
private	no	yes
Set	no	yes
<	no	no
String	no	yes
>	no	no
doLookup	no	yes
(	no	no
long	no	yes
freshness	no	yes
)	no	no
{	no	no
String	no	yes
url	yes	yes
=	no	no
registryURL	no	yes
+	no	no
+	no	no
freshness	no	yes
;	no	no
try	no	yes
{	no	no
HttpGet	no	yes
method	no	yes
=	no	no
new	no	yes
HttpGet	no	yes
(	no	no
url	yes	yes
)	no	no
;	no	no
ResponseHandler	no	yes
<	no	no
String	no	yes
>	no	no
handler	no	yes
=	no	no
new	no	yes
BasicResponseHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
httpClient	no	yes
.	no	no
execute	no	yes
(	no	no
method	no	yes
,	no	no
handler	no	yes
)	no	no
;	no	no

String	no	yes
url	yes	yes
=	no	no
registryURL	no	yes
+	no	no
+	no	no
freshness	no	yes
;	no	no
try	no	yes
{	no	no
HttpGet	no	yes
method	no	yes
=	no	no
new	no	yes
HttpGet	no	yes
(	no	no
url	yes	yes
)	no	no
;	no	no
ResponseHandler	no	yes
<	no	no
String	no	yes
>	no	no
handler	no	yes
=	no	no
new	no	yes
BasicResponseHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	no	yes
=	no	no
httpClient	no	yes
.	no	no
execute	no	yes
(	no	no
method	no	yes
,	no	no
handler	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
url	yes	yes
+	no	no
+	no	no
response	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
rc	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Scanner	no	yes
scanner	no	yes
=	no	no
new	no	yes
Scanner	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
scanner	no	yes
.	no	no
hasNextLine	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
service	no	yes
=	no	no
scanner	no	yes
.	no	no
nextLine	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
service	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
rc	no	yes
.	no	no
add	no	yes
(	no	no
service	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
scanner	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
rc	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
serviceFailed	no	yes
(	no	no
DiscoveryEvent	no	yes
devent	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
SimpleDiscoveryEvent	no	yes
event	yes	yes
=	no	no
(	no	no
SimpleDiscoveryEvent	no	yes
)	no	no
devent	no	yes
;	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
failed	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
discoveryListener	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
onServiceRemove	no	yes
(	no	no
event	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
event	yes	yes
.	no	no
removed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
connectTime	no	yes
+	no	no
minConnectTime	no	yes
>	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
serviceFailed	no	yes
(	no	no
DiscoveryEvent	no	yes
devent	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
SimpleDiscoveryEvent	no	yes
event	no	yes
=	no	no
(	no	no
SimpleDiscoveryEvent	no	yes
)	no	no
devent	no	yes
;	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
failed	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
{	no	no
discoveryListener	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
onServiceRemove	no	yes
(	no	no
event	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
event	no	yes
.	no	no
removed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
connectTime	no	yes
+	no	no
minConnectTime	no	yes
>	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
event	no	yes
)	no	no
;	no	no
event	no	yes
.	no	no
connectFailures	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
maxReconnectAttempts	yes	yes
>	no	no
0	no	no
&&	no	no
event	no	yes
.	no	no
connectFailures	no	yes
>=	no	no
maxReconnectAttempts	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
status	no	yes
==	no	no
HttpStatus	no	yes
.	no	no
SC_REQUEST_TIMEOUT	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
onException	no	yes
(	no	no
new	no	yes
InterruptedIOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
onException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
+	no	no
remoteUrl	yes	yes
+	no	no
+	no	no
answer	no	yes
)	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
receiveCounter	no	yes
++	no	no
;	no	no
DataInputStream	no	yes
stream	no	yes
=	no	no
createDataInputStream	no	yes
(	no	no
answer	no	yes
)	no	no
;	no	no
Object	no	yes
command	no	yes
=	no	no
getTextWireFormat	no	yes
(	no	no
)	no	no
.	no	no
unmarshal	no	yes
(	no	no
stream	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onWebSocketClose	no	yes
(	no	no
int	no	yes
statusCode	yes	yes
,	no	no
String	no	yes
reason	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
)	no	no
||	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
ORDERLY_CLOSE_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onWebSocketClose	no	yes
(	no	no
int	no	yes
arg0	yes	yes
,	no	no
String	no	yes
arg1	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
)	no	no
||	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
ORDERLY_CLOSE_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onWebSocketClose	no	yes
(	no	no
int	no	yes
arg0	yes	yes
,	no	no
String	no	yes
arg1	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
)	no	no
||	no	no
protocolLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
ORDERLY_CLOSE_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no

brokerOne	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
secondProducerConnectionFactory	no	yes
=	no	no
createBrokerTwoHttpConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
consumerConnectionFactory	no	yes
=	no	no
createBrokerOneHttpConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
consumerConnectionFactory	no	yes
)	no	no
;	no	no
AtomicInteger	no	yes
counter	no	yes
=	no	no
createConsumerCounter	no	yes
(	no	no
consumerConnectionFactory	no	yes
)	no	no
;	no	no
waitForConsumerToArrive	no	yes
(	no	no
counter	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
secondProducerConnectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
expectedMessagesReceived	no	yes
=	no	no
1000	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
expectedMessagesReceived	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
200	no	no
==	no	no
0	no	no
)	no	no
{	no	no

Connection	no	yes
connection	no	yes
=	no	no
secondProducerConnectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
expectedMessagesReceived	no	yes
=	no	no
1000	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
expectedMessagesReceived	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
200	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
expectedMessagesReceived	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
200	no	no
==	no	no
0	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
consumeMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
,	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
messageList	no	yes
)	no	no
{	no	no
super	no	yes
.	no	no
consumeMessage	no	yes
(	no	no
message	no	yes
,	no	no
messageList	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
TextMessage	no	yes
.	no	no
class	no	yes
.	no	no
cast	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no

private	no	yes
void	no	yes
doTestTextMessageCompression	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTextMessage	no	yes
tcpMessage	yes	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQTextMessage	no	yes
httpMessage	no	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	no	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ActiveMQTextMessage	no	yes
tcpMessage	no	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQTextMessage	no	yes
httpMessage	yes	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	yes	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tcpMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestBytesMessageCompression	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQBytesMessage	no	yes
tcpMessage	yes	yes
=	no	no
(	no	no
ActiveMQBytesMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQBytesMessage	no	yes
httpMessage	no	yes
=	no	no
(	no	no
ActiveMQBytesMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	no	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
readUTF	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	no	yes
.	no	no
readUTF	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ActiveMQBytesMessage	no	yes
tcpMessage	no	yes
=	no	no
(	no	no
ActiveMQBytesMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQBytesMessage	no	yes
httpMessage	yes	yes
=	no	no
(	no	no
ActiveMQBytesMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	yes	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
readUTF	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	yes	yes
.	no	no
readUTF	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tcpMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestStreamMessageCompression	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQStreamMessage	no	yes
tcpMessage	yes	yes
=	no	no
(	no	no
ActiveMQStreamMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQStreamMessage	no	yes
httpMessage	no	yes
=	no	no
(	no	no
ActiveMQStreamMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	no	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
readString	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	no	yes
.	no	no
readString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ActiveMQStreamMessage	no	yes
tcpMessage	no	yes
=	no	no
(	no	no
ActiveMQStreamMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQStreamMessage	no	yes
httpMessage	yes	yes
=	no	no
(	no	no
ActiveMQStreamMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	yes	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
readString	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	yes	yes
.	no	no
readString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tcpMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestMapMessageCompression	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQMapMessage	no	yes
tcpMessage	yes	yes
=	no	no
(	no	no
ActiveMQMapMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQMapMessage	no	yes
httpMessage	no	yes
=	no	no
(	no	no
ActiveMQMapMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	no	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	yes	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ActiveMQMapMessage	no	yes
tcpMessage	no	yes
=	no	no
(	no	no
ActiveMQMapMessage	no	yes
)	no	no
tcpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
ActiveMQMapMessage	no	yes
httpMessage	yes	yes
=	no	no
(	no	no
ActiveMQMapMessage	no	yes
)	no	no
httpConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpMessage	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpMessage	yes	yes
)	no	no
;	no	no
ByteSequence	no	yes
tcpContent	no	yes
=	no	no
tcpMessage	no	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
ByteSequence	no	yes
httpContent	no	yes
=	no	no
httpMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
tcpContent	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
httpContent	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
httpMessage	yes	yes
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
tcpCompressedSize	no	yes
=	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
httpCompressedSize	no	yes
=	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
,	no	no
httpContent	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
tcpMessage	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
,	no	no
httpMessage	yes	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tcpMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSendReceiveAfterPause	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
CountDownLatch	no	yes
failed	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

}	no	no
MQTTFrame	no	yes
frame	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
frame	no	yes
=	no	no
(	no	no
MQTTFrame	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
data	no	yes
,	no	no
offset	no	yes
,	no	no
length	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
switch	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
PINGREQ	no	yes
.	no	no
TYPE	no	yes
:	no	no
PINGREQ	no	yes
ping	no	yes
=	no	no
new	no	yes
PINGREQ	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ping	no	yes
)	no	no
;	no	no
sendFrame	no	yes
(	no	no
PING_RESP_FRAME	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
PINGRESP	no	yes
.	no	no
TYPE	no	yes
:	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
CONNACK	no	yes
.	no	no
TYPE	no	yes
:	no	no
CONNACK	no	yes
connAck	yes	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
wsStompConnection	no	yes
.	no	no
keepAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
15	no	no
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
wsStompConnection	no	yes
.	no	no
sendRawFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
incoming	no	yes
=	no	no
wsStompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
incoming	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
service	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no
service	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
wsStompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
new	no	yes
StompFrame	no	yes
(	no	no
Stomp	no	yes
.	no	no
Commands	no	yes
.	no	no
DISCONNECT	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testEscapedHeaders	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
wsStompConnection	no	yes
.	no	no
sendRawFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
incoming	no	yes
=	no	no
wsStompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
incoming	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
wsStompConnection	no	yes
.	no	no
sendRawFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
wsStompConnection	no	yes
.	no	no
sendRawFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
incoming	no	yes
=	no	no
wsStompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
incoming	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
incoming	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
wsStompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
new	no	yes
StompFrame	no	yes
(	no	no
Stomp	no	yes
.	no	no
Commands	no	yes
.	no	no
DISCONNECT	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
assertBeanMarshalls	no	yes
(	no	no
Object	no	yes
original	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
super	no	yes
.	no	no
assertBeanMarshalls	no	yes
(	no	no
original	no	yes
)	no	no
;	no	no
String	no	yes
xml	yes	yes
=	no	no
getXStreamWireFormat	no	yes
(	no	no
)	no	no
.	no	no
marshalText	no	yes
(	no	no
original	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
original	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
login	no	yes
(	no	no
)	no	no
throws	no	yes
LoginException	no	yes
{	no	no
succeeded	yes	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
credentialsInvalidate	no	yes
)	no	no
{	no	no
PasswordCallback	no	yes
passwordCallback	no	yes
=	no	no
new	no	yes
PasswordCallback	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
callbackHandler	no	yes
.	no	no
handle	no	yes
(	no	no
new	no	yes
Callback	no	yes
[	no	no
]	no	no
{	no	no
passwordCallback	no	yes
}	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
passwordCallback	no	yes
.	no	no
getPassword	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
succeeded	yes	yes
=	no	no
false	no	yes
;	no	no
passwordCallback	no	yes
.	no	no
clearPassword	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	no	yes
)	no	no
{	no	no
}	no	no
catch	no	yes
(	no	no
UnsupportedCallbackException	no	yes
uce	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

userSearchSubtreeBool	no	yes
=	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
getLDAPPropertyValue	no	yes
(	no	no
USER_SEARCH_SUBTREE	no	yes
)	no	no
)	no	no
.	no	no
booleanValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
String	no	yes
filter	yes	yes
=	no	no
userSearchMatchingFormat	no	yes
.	no	no
format	no	yes
(	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
doRFC2254Encoding	no	yes
(	no	no
username	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
SearchControls	no	yes
constraints	no	yes
=	no	no
new	no	yes
SearchControls	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
userSearchSubtreeBool	no	yes
)	no	no
{	no	no
constraints	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
SUBTREE_SCOPE	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
constraints	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
ONELEVEL_SCOPE	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
isLoginPropertySet	no	yes
(	no	no
USER_ROLE_NAME	no	yes
)	no	no
)	no	no
{	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
getLDAPPropertyValue	no	yes
(	no	no
USER_ROLE_NAME	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
attribs	no	yes
=	no	no
new	no	yes
String	no	yes
[	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
list	no	yes
.	no	no
toArray	no	yes
(	no	no
attribs	no	yes
)	no	no
;	no	no
constraints	no	yes
.	no	no
setReturningAttributes	no	yes
(	no	no
attribs	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getLDAPPropertyValue	no	yes
(	no	no
USER_BASE	no	yes
)	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filter	no	yes
)	no	no
;	no	no
}	no	no
NamingEnumeration	no	yes
<	no	no
SearchResult	no	yes
>	no	no
results	no	yes
=	no	no
context	no	yes
.	no	no
search	no	yes
(	no	no
getLDAPPropertyValue	no	yes
(	no	no
USER_BASE	no	yes
)	no	no
,	no	no
filter	no	yes
,	no	no
constraints	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
results	no	yes
==	no	no
null	no	yes
||	no	no
!	no	no
results	no	yes
.	no	no
hasMore	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
username	no	yes
+	no	no
)	no	no
;	no	no
throw	no	yes
new	no	yes
FailedLoginException	no	yes
(	no	no
+	no	no
username	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
SearchResult	no	yes
result	yes	yes
=	no	no
results	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
results	no	yes
.	no	no
hasMore	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
}	no	no
String	no	yes
dn	no	yes
;	no	no
if	no	yes
(	no	no
result	yes	yes
.	no	no
isRelative	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
result	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
NameParser	no	yes
parser	no	yes
=	no	no
context	no	yes
.	no	no
getNameParser	no	yes
(	no	no
)	no	no
;	no	no
Name	no	yes
contextName	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
context	no	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
result	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
NameParser	no	yes
parser	no	yes
=	no	no
context	no	yes
.	no	no
getNameParser	no	yes
(	no	no
)	no	no
;	no	no
Name	no	yes
contextName	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
context	no	yes
.	no	no
getNameInNamespace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Name	no	yes
baseName	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
getLDAPPropertyValue	no	yes
(	no	no
USER_BASE	no	yes
)	no	no
)	no	no
;	no	no
Name	no	yes
entryName	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
result	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Name	no	yes
name	no	yes
=	no	no
contextName	no	yes
.	no	no
addAll	no	yes
(	no	no
baseName	no	yes
)	no	no
;	no	no
name	no	yes
=	no	no
name	no	yes
.	no	no
addAll	no	yes
(	no	no
entryName	no	yes
)	no	no
;	no	no
dn	yes	yes
=	no	no
name	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
result	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
URI	no	yes
uri	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
result	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
path	no	yes
=	no	no
uri	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
path	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
dn	yes	yes
=	no	no
path	no	yes
.	no	no
substring	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

expandRolesBool	no	yes
=	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
getLDAPPropertyValue	no	yes
(	no	no
EXPAND_ROLES	no	yes
)	no	no
)	no	no
.	no	no
booleanValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
list	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
isLoginPropertySet	no	yes
(	no	no
ROLE_NAME	no	yes
)	no	no
)	no	no
{	no	no
return	no	yes
list	no	yes
;	no	no
}	no	no
String	no	yes
filter	yes	yes
=	no	no
roleSearchMatchingFormat	no	yes
.	no	no
format	no	yes
(	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
doRFC2254Encoding	no	yes
(	no	no
dn	no	yes
)	no	no
,	no	no
doRFC2254Encoding	no	yes
(	no	no
username	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
SearchControls	no	yes
constraints	no	yes
=	no	no
new	no	yes
SearchControls	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
roleSearchSubtreeBool	no	yes
)	no	no
{	no	no
constraints	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
SUBTREE_SCOPE	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
constraints	no	yes
.	no	no
setSearchScope	no	yes
(	no	no
SearchControls	no	yes
.	no	no
ONELEVEL_SCOPE	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getLDAPPropertyValue	no	yes
(	no	no
ROLE_BASE	no	yes
)	no	no
)	no	no
;	no	no

Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
env	no	yes
=	no	no
new	no	yes
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
INITIAL_CONTEXT_FACTORY	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
INITIAL_CONTEXT_FACTORY	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
isLoginPropertySet	no	yes
(	no	no
CONNECTION_USERNAME	no	yes
)	no	no
)	no	no
{	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_PRINCIPAL	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
CONNECTION_USERNAME	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
NamingException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isLoginPropertySet	no	yes
(	no	no
CONNECTION_PASSWORD	no	yes
)	no	no
)	no	no
{	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_CREDENTIALS	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
CONNECTION_PASSWORD	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
NamingException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_PROTOCOL	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
CONNECTION_PROTOCOL	no	yes
)	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
PROVIDER_URL	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
CONNECTION_URL	no	yes
)	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_AUTHENTICATION	no	yes
,	no	no
getLDAPPropertyValue	no	yes
(	no	no
AUTHENTICATION	no	yes
)	no	no
)	no	no
;	no	no
context	no	yes
=	no	no
new	no	yes
InitialDirContext	no	yes
(	no	no
env	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

throw	no	yes
new	no	yes
LoginException	no	yes
(	no	no
ioe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
UnsupportedCallbackException	no	yes
uce	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
LoginException	no	yes
(	no	no
uce	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
user	yes	yes
=	no	no
(	no	no
(	no	no
NameCallback	no	yes
)	no	no
callbacks	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
char	no	yes
[	no	no
]	no	no
tmpPassword	no	yes
=	no	no
(	no	no
(	no	no
PasswordCallback	no	yes
)	no	no
callbacks	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
.	no	no
getPassword	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tmpPassword	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
tmpPassword	no	yes
=	no	no
new	no	yes
char	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
user	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
FailedLoginException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
password	no	yes
=	no	no
users	no	yes
.	no	no
getProperty	no	yes
(	no	no
user	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
password	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
FailedLoginException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
password	no	yes
.	no	no
equals	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
tmpPassword	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
FailedLoginException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
succeeded	no	yes
=	no	no
true	no	yes
;	no	no

public	no	yes
synchronized	no	yes
ReloadableProperties	no	yes
obtained	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
reloadTime	no	yes
<	no	no
0	no	no
||	no	no
(	no	no
key	yes	yes
.	no	no
isReload	no	yes
(	no	no
)	no	no
&&	no	no
hasModificationAfter	no	yes
(	no	no
reloadTime	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
props	no	yes
=	no	no
new	no	yes
Properties	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
load	no	yes
(	no	no
key	yes	yes
.	no	no
file	no	yes
(	no	no
)	no	no
,	no	no
props	no	yes
)	no	no
;	no	no
invertedProps	no	yes
=	no	no
null	no	yes
;	no	no
invertedValueProps	no	yes
=	no	no
null	no	yes
;	no	no
regexpProps	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
key	yes	yes
.	no	no
isDebug	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
doStart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sql	yes	yes
=	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLockCreateStatement	no	yes
(	no	no
)	no	no
;	no	no

while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
dataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setAutoCommit	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
lockCreateStatement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sql	no	yes
)	no	no
;	no	no
lockCreateStatement	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
+	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
exceptionHandler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
exceptionHandler	no	yes
.	no	no
handle	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
handlerException	yes	yes
)	no	no
{	no	no

connection	no	yes
=	no	no
dataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setAutoCommit	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
lockCreateStatement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sql	no	yes
)	no	no
;	no	no
lockCreateStatement	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
+	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
exceptionHandler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
exceptionHandler	no	yes
.	no	no
handle	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
handlerException	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
exceptionHandler	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
handlerException	no	yes
+	no	no
+	no	no
e	yes	yes
,	no	no
handlerException	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

}	no	no
if	no	yes
(	no	no
exceptionHandler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
exceptionHandler	no	yes
.	no	no
handle	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
handlerException	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
exceptionHandler	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
handlerException	no	yes
+	no	no
+	no	no
e	no	yes
,	no	no
handlerException	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
null	no	yes
!=	no	no
connection	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
e1	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e1	yes	yes
,	no	no
e1	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
null	no	yes
!=	no	no
connection	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
e1	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e1	yes	yes
,	no	no
e1	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
e1	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e1	yes	yes
,	no	no
e1	yes	yes
)	no	no
;	no	no
}	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
null	no	yes
!=	no	no
lockCreateStatement	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
doStop	no	yes
(	no	no
ServiceStopper	no	yes
stopper	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
lockCreateStatement	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
lockCreateStatement	no	yes
.	no	no
cancel	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
SQLFeatureNotSupportedException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
dataSource	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
lockUpdateStatement	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
lockUpdateStatement	no	yes
.	no	no
cancel	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
SQLFeatureNotSupportedException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
dataSource	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
connection	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
sqle	yes	yes
)	no	no
{	no	no

boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
lockUpdateStatement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLockUpdateStatement	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
lockUpdateStatement	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setQueryTimeout	no	yes
(	no	no
lockUpdateStatement	no	yes
)	no	no
;	no	no
int	no	yes
rows	no	yes
=	no	no
lockUpdateStatement	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
rows	no	yes
==	no	no
1	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
lockUpdateStatement	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
lockUpdateStatement	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
addMessage	no	yes
(	no	no
final	no	yes
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
MessageId	no	yes
messageId	yes	yes
=	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
audit	no	yes
!=	no	no
null	no	yes
&&	no	no
audit	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
message	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setLockDataSource	no	yes
(	no	no
DataSource	no	yes
dataSource	no	yes
)	no	no
{	no	no
this	no	yes
.	no	no
lockDataSource	yes	yes
=	no	no
dataSource	no	yes
;	no	no

protected	no	yes
JDBCAdapter	no	yes
createAdapter	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
adapter	yes	yes
=	no	no
(	no	no
JDBCAdapter	no	yes
)	no	no
loadAdapter	no	yes
(	no	no
adapterFactoryFinder	no	yes
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
adapter	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
adapter	yes	yes
=	no	no
new	no	yes
DefaultJDBCAdapter	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
Object	no	yes
loadAdapter	no	yes
(	no	no
FactoryFinder	no	yes
finder	no	yes
,	no	no
String	no	yes
kind	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Object	no	yes
adapter	yes	yes
=	no	no
null	no	yes
;	no	no
TransactionContext	no	yes
c	no	yes
=	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
try	no	yes
{	no	no
String	no	yes
dirverName	yes	yes
=	no	no
c	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
.	no	no
getDriverName	no	yes
(	no	no
)	no	no
;	no	no
dirverName	yes	yes
=	no	no
dirverName	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
Locale	no	yes
.	no	no
ENGLISH	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
adapter	yes	yes
=	no	no
finder	no	yes
.	no	no
newInstance	no	yes
(	no	no
dirverName	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
Locker	no	yes
createDefaultLocker	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Locker	no	yes
locker	yes	yes
=	no	no
(	no	no
Locker	no	yes
)	no	no
loadAdapter	no	yes
(	no	no
lockFactoryFinder	no	yes
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
locker	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
locker	yes	yes
=	no	no
new	no	yes
DefaultDatabaseLocker	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
reportLeasOwnerShipAndDuration	no	yes
(	no	no
Connection	no	yes
connection	no	yes
)	no	no
throws	no	yes
SQLException	no	yes
{	no	no
PreparedStatement	no	yes
statement	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
statement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLeaseOwnerStatement	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ResultSet	no	yes
resultSet	yes	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
resultSet	yes	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
keepAlive	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
final	no	yes
String	no	yes
sql	yes	yes
=	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLeaseUpdateStatement	no	yes
(	no	no
)	no	no
;	no	no

connection	yes	yes
=	no	no
dataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
networkTimeout	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
connection	yes	yes
.	no	no
setNetworkTimeout	no	yes
(	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
,	no	no
networkTimeout	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
persistenceAdapter	no	yes
.	no	no
isChangeAutoCommitAllowed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
boolean	no	yes
autoCommit	no	yes
=	no	no
!	no	no
inTx	no	yes
;	no	no
if	no	yes
(	no	no
connection	yes	yes
.	no	no
getAutoCommit	no	yes
(	no	no
)	no	no
!=	no	no
autoCommit	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
autoCommit	no	yes
,	no	no
connection	yes	yes
)	no	no
;	no	no
connection	yes	yes
.	no	no
setAutoCommit	no	yes
(	no	no
autoCommit	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
connection	yes	yes
=	no	no
new	no	yes
UnlockOnCloseConnection	no	yes
(	no	no
connection	yes	yes
,	no	no
toLock	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SQLException	no	yes
e	no	yes
)	no	no
{	no	no
JDBCPersistenceAdapter	no	yes
.	no	no
log	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
inTx	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
toLock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IllegalMonitorStateException	no	yes
oops	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
executeStatement	no	yes
(	no	no
TransactionContext	no	yes
transactionContext	no	yes
,	no	no
String	no	yes
createStatement	yes	yes
,	no	no
boolean	no	yes
ignoreStatementExecutionFailure	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Statement	no	yes
statement	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
doDeleteOldMessages	no	yes
(	no	no
TransactionContext	no	yes
c	no	yes
)	no	no
throws	no	yes
SQLException	no	yes
,	no	no
IOException	no	yes
{	no	no
PreparedStatement	no	yes
s	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
this	no	yes
.	no	no
statements	no	yes
.	no	no
getDeleteOldMessagesStatementWithPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
s	no	yes
=	no	no
c	no	yes
.	no	no
getExclusiveConnection	no	yes
(	no	no
)	no	no
.	no	no
prepareStatement	no	yes
(	no	no
this	no	yes
.	no	no
statements	no	yes
.	no	no
getDeleteOldMessagesStatementWithPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
priority	yes	yes
=	no	no
priorityIterator	no	yes
++	no	no
%	no	no
10	no	no
;	no	no
s	no	yes
.	no	no
setInt	no	yes
(	no	no
1	no	no
,	no	no
priority	yes	yes
)	no	no
;	no	no
s	no	yes
.	no	no
setInt	no	yes
(	no	no
2	no	no
,	no	no
priority	yes	yes
)	no	no
;	no	no
int	no	yes
i	yes	yes
=	no	no
s	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
sql	no	yes
=	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLockCreateStatement	no	yes
(	no	no
)	no	no
;	no	no
statement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sql	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
statement	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
statement	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
exceptionHandler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
exceptionHandler	no	yes
.	no	no
handle	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
handlerException	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
statement	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
statement	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isStopping	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
Exception	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
exceptionHandler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
exceptionHandler	no	yes
.	no	no
handle	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
handlerException	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
exceptionHandler	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
handlerException	no	yes
+	no	no
+	no	no
e	yes	yes
,	no	no
handlerException	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
void	no	yes
addMessage	no	yes
(	no	no
final	no	yes
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
MessageId	no	yes
id	yes	yes
=	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
boolean	no	yes
debug	no	yes
=	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
incrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
message	no	yes
,	no	no
message	no	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

message	no	yes
.	no	no
incrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
message	no	yes
,	no	no
message	no	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
addMessage	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
addMessage	no	yes
(	no	no
this	no	yes
,	no	no
message	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

addMessage	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
addMessage	no	yes
(	no	no
this	no	yes
,	no	no
message	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
JournalMessageStore	no	yes
.	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
remove	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
addMessage	no	yes
(	no	no
context	no	yes
,	no	no
message	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
public	no	yes
void	no	yes
afterRollback	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
void	no	yes
removeMessage	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
MessageAck	no	yes
ack	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
boolean	no	yes
debug	no	yes
=	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
;	no	no
JournalQueueAck	no	yes
remove	no	yes
=	no	no
new	no	yes
JournalQueueAck	no	yes
(	no	no
)	no	no
;	no	no
remove	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
remove	no	yes
.	no	no
setMessageAck	no	yes
(	no	no
ack	yes	yes
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
remove	no	yes
,	no	no
ack	yes	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

remove	no	yes
.	no	no
setMessageAck	no	yes
(	no	no
ack	yes	yes
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
remove	no	yes
,	no	no
ack	yes	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ack	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
removeMessage	no	yes
(	no	no
ack	yes	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ack	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
removeMessage	no	yes
(	no	no
this	no	yes
,	no	no
ack	yes	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

removeMessage	no	yes
(	no	no
ack	yes	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ack	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
removeMessage	no	yes
(	no	no
this	no	yes
,	no	no
ack	yes	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ack	yes	yes
.	no	no
getLastMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
JournalMessageStore	no	yes
.	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
remove	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
removeMessage	no	yes
(	no	no
ack	yes	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
public	no	yes
void	no	yes
afterRollback	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
size	no	yes
+=	no	no
message	no	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
size	no	yes
>=	no	no
maxCheckpointMessageAddSize	no	yes
)	no	no
{	no	no
persitanceAdapter	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
persitanceAdapter	no	yes
.	no	no
beginTransaction	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
}	no	no
}	no	no
persitanceAdapter	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
persitanceAdapter	no	yes
.	no	no
beginTransaction	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
Iterator	no	yes
<	no	no
MessageAck	no	yes
>	no	no
iterator	no	yes
=	no	no
cpRemovedMessageLocations	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MessageAck	no	yes
ack	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
longTermStore	no	yes
.	no	no
removeMessage	no	yes
(	no	no
transactionTemplate	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
,	no	no
ack	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
)	no	no
;	no	no
futureTasks	no	yes
.	no	no
add	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
checkpointExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Iterator	no	yes
<	no	no
JournalTopicMessageStore	no	yes
>	no	no
iterator	no	yes
=	no	no
topics	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
JournalTopicMessageStore	no	yes
ms	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
task	no	yes
=	no	no
new	no	yes
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
(	no	no
new	no	yes
Callable	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
RecordLocation	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
ms	no	yes
.	no	no
checkpoint	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
futureTasks	no	yes
.	no	no
add	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
checkpointExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
Iterator	no	yes
<	no	no
JournalTopicMessageStore	no	yes
>	no	no
iterator	no	yes
=	no	no
topics	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
JournalTopicMessageStore	no	yes
ms	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
task	no	yes
=	no	no
new	no	yes
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
(	no	no
new	no	yes
Callable	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
RecordLocation	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
ms	no	yes
.	no	no
checkpoint	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
futureTasks	no	yes
.	no	no
add	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
checkpointExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>>	no	no
iter	no	yes
=	no	no
futureTasks	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
ft	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
RecordLocation	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
ms	no	yes
.	no	no
checkpoint	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
futureTasks	no	yes
.	no	no
add	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
checkpointExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>>	no	no
iter	no	yes
=	no	no
futureTasks	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
FutureTask	no	yes
<	no	no
RecordLocation	no	yes
>	no	no
ft	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
RecordLocation	no	yes
mark	no	yes
=	no	no
ft	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
fullCheckpoint	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
mark	no	yes
!=	no	no
null	no	yes
&&	no	no
(	no	no
newMark	no	yes
==	no	no
null	no	yes
||	no	no
newMark	no	yes
.	no	no
compareTo	no	yes
(	no	no
mark	no	yes
)	no	no
<	no	no
0	no	no
)	no	no
)	no	no
{	no	no
newMark	no	yes
=	no	no
mark	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

JournalTransaction	no	yes
command	no	yes
=	no	no
(	no	no
JournalTransaction	no	yes
)	no	no
c	yes	yes
;	no	no
try	no	yes
{	no	no
switch	no	yes
(	no	no
command	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
JournalTransaction	no	yes
.	no	no
XA_PREPARE	no	yes
:	no	no
transactionStore	no	yes
.	no	no
replayPrepare	no	yes
(	no	no
command	no	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
JournalTransaction	no	yes
.	no	no
XA_COMMIT	no	yes
:	no	no
case	no	yes
JournalTransaction	no	yes
.	no	no
LOCAL_COMMIT	no	yes
:	no	no
Tx	no	yes
tx	no	yes
=	no	no
transactionStore	no	yes
.	no	no
replayCommit	no	yes
(	no	no
command	no	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
command	no	yes
.	no	no
getWasPrepared	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tx	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
tx	no	yes
.	no	no
getOperations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
iter	no	yes
=	no	no
tx	no	yes
.	no	no
getOperations	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
TxOperation	no	yes
op	no	yes
=	no	no
(	no	no
TxOperation	no	yes
)	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
op	no	yes
.	no	no
operationType	no	yes
==	no	no
TxOperation	no	yes
.	no	no
ADD_OPERATION_TYPE	no	yes
)	no	no
{	no	no
op	no	yes
.	no	no
store	no	yes
.	no	no
replayAddMessage	no	yes
(	no	no
context	no	yes
,	no	no
(	no	no
Message	no	yes
)	no	no
op	no	yes
.	no	no
data	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
op	no	yes
.	no	no
operationType	no	yes
==	no	no
TxOperation	no	yes
.	no	no
REMOVE_OPERATION_TYPE	no	yes
)	no	no
{	no	no
op	no	yes
.	no	no
store	no	yes
.	no	no
replayRemoveMessage	no	yes
(	no	no
context	no	yes
,	no	no
(	no	no
MessageAck	no	yes
)	no	no
op	no	yes
.	no	no
data	no	yes
)	no	no
;	no	no

}	no	no
tx	no	yes
.	no	no
getOperations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
iter	no	yes
=	no	no
tx	no	yes
.	no	no
getOperations	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
TxOperation	no	yes
op	no	yes
=	no	no
(	no	no
TxOperation	no	yes
)	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
op	no	yes
.	no	no
operationType	no	yes
==	no	no
TxOperation	no	yes
.	no	no
ADD_OPERATION_TYPE	no	yes
)	no	no
{	no	no
op	no	yes
.	no	no
store	no	yes
.	no	no
replayAddMessage	no	yes
(	no	no
context	no	yes
,	no	no
(	no	no
Message	no	yes
)	no	no
op	no	yes
.	no	no
data	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
op	no	yes
.	no	no
operationType	no	yes
==	no	no
TxOperation	no	yes
.	no	no
REMOVE_OPERATION_TYPE	no	yes
)	no	no
{	no	no
op	no	yes
.	no	no
store	no	yes
.	no	no
replayRemoveMessage	no	yes
(	no	no
context	no	yes
,	no	no
(	no	no
MessageAck	no	yes
)	no	no
op	no	yes
.	no	no
data	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
op	no	yes
.	no	no
operationType	no	yes
==	no	no
TxOperation	no	yes
.	no	no
ACK_OPERATION_TYPE	no	yes
)	no	no
{	no	no
JournalTopicAck	no	yes
ack	no	yes
=	no	no
(	no	no
JournalTopicAck	no	yes
)	no	no
op	no	yes
.	no	no
data	no	yes
;	no	no
(	no	no
(	no	no
JournalTopicMessageStore	no	yes
)	no	no
op	no	yes
.	no	no
store	no	yes
)	no	no
.	no	no
replayAcknowledge	no	yes
(	no	no
context	no	yes
,	no	no
ack	no	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
,	no	no
ack	no	yes
.	no	no
getSubscritionName	no	yes
(	no	no
)	no	no
,	no	no
ack	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
transactionCounter	yes	yes
++	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
JournalTransaction	no	yes
.	no	no
LOCAL_ROLLBACK	no	yes
:	no	no
case	no	yes
JournalTransaction	no	yes
.	no	no
XA_ROLLBACK	no	yes
:	no	no
transactionStore	no	yes
.	no	no
replayRollback	no	yes
(	no	no
command	no	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
default	no	yes
:	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
acknowledge	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
String	no	yes
clientId	no	yes
,	no	no
String	no	yes
subscriptionName	no	yes
,	no	no
final	no	yes
MessageId	no	yes
messageId	yes	yes
,	no	no
MessageAck	no	yes
originalAck	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
final	no	yes
boolean	no	yes
debug	no	yes
=	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
;	no	no
JournalTopicAck	no	yes
ack	no	yes
=	no	no
new	no	yes
JournalTopicAck	no	yes
(	no	no
)	no	no
;	no	no
ack	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setMessageId	no	yes
(	no	no
messageId	yes	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setMessageSequenceId	no	yes
(	no	no
messageId	yes	yes
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ack	no	yes
.	no	no
setSubscritionName	no	yes
(	no	no
subscriptionName	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setClientId	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
?	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
ack	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
SubscriptionKey	no	yes
key	no	yes
=	no	no
new	no	yes
SubscriptionKey	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriptionName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

JournalTopicAck	no	yes
ack	no	yes
=	no	no
new	no	yes
JournalTopicAck	no	yes
(	no	no
)	no	no
;	no	no
ack	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setMessageId	no	yes
(	no	no
messageId	yes	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setMessageSequenceId	no	yes
(	no	no
messageId	yes	yes
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ack	no	yes
.	no	no
setSubscritionName	no	yes
(	no	no
subscriptionName	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setClientId	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
?	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
)	no	no
;	no	no
final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
ack	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
SubscriptionKey	no	yes
key	no	yes
=	no	no
new	no	yes
SubscriptionKey	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriptionName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
messageId	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
acknowledge	no	yes
(	no	no
messageId	yes	yes
,	no	no
location	yes	yes
,	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

final	no	yes
RecordLocation	no	yes
location	yes	yes
=	no	no
peristenceAdapter	no	yes
.	no	no
writeCommand	no	yes
(	no	no
ack	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
SubscriptionKey	no	yes
key	no	yes
=	no	no
new	no	yes
SubscriptionKey	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriptionName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
context	no	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
messageId	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
acknowledge	no	yes
(	no	no
messageId	yes	yes
,	no	no
location	yes	yes
,	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
messageId	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
acknowledge	no	yes
(	no	no
this	no	yes
,	no	no
ack	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no

acknowledge	no	yes
(	no	no
messageId	yes	yes
,	no	no
location	yes	yes
,	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
messageId	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
add	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
transactionStore	no	yes
.	no	no
acknowledge	no	yes
(	no	no
this	no	yes
,	no	no
ack	no	yes
,	no	no
location	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
getTransaction	no	yes
(	no	no
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
debug	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
messageId	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
JournalTopicMessageStore	no	yes
.	no	no
this	no	yes
)	no	no
{	no	no
inFlightTxLocations	no	yes
.	no	no
remove	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
acknowledge	no	yes
(	no	no
messageId	yes	yes
,	no	no
location	yes	yes
,	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
afterRollback	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
static	no	yes
boolean	no	yes
setProperty	no	yes
(	no	no
Object	no	yes
target	yes	yes
,	no	no
String	no	yes
name	yes	yes
,	no	no
Object	no	yes
value	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
clazz	no	yes
=	no	no
target	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
target	yes	yes
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
clazz	no	yes
=	no	no
SSLServerSocket	no	yes
.	no	no
class	no	yes
;	no	no
}	no	no
Method	no	yes
setter	no	yes
=	no	no
findSetterMethod	no	yes
(	no	no
clazz	no	yes
,	no	no
name	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
setter	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
setter	no	yes
.	no	no
setAccessible	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
value	no	yes
==	no	no
null	no	yes
||	no	no
value	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
==	no	no
setter	no	yes
.	no	no
getParameterTypes	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
setter	no	yes
.	no	no
invoke	no	yes
(	no	no
target	yes	yes
,	no	no
value	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
setter	no	yes
.	no	no
invoke	no	yes
(	no	no
target	yes	yes
,	no	no
convert	no	yes
(	no	no
value	no	yes
,	no	no
setter	no	yes
.	no	no
getParameterTypes	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
true	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTemporaryQueueWithMultipleConnectionUsers	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
pooledConnection	no	yes
=	no	no
null	no	yes
;	no	no
Connection	no	yes
pooledConnection2	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session2	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
tempQueue	yes	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
normalQueue	no	yes
=	no	no
null	no	yes
;	no	no
pooledConnection	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
pooledConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
tempQueue	yes	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTemporaryQueueWithMultipleConnectionUsers	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
pooledConnection	no	yes
=	no	no
null	no	yes
;	no	no
Connection	no	yes
pooledConnection2	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session2	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
tempQueue	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
normalQueue	yes	yes
=	no	no
null	no	yes
;	no	no
pooledConnection	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
pooledConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
tempQueue	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tempQueue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
countBrokerTemporaryQueues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pooledConnection2	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session2	no	yes
=	no	no
pooledConnection2	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
normalQueue	yes	yes
=	no	no
session2	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTemporaryQueueLeakAfterConnectionClose	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
pooledConnection	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
tempQueue	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
pooledConnection	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
pooledConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
tempQueue	yes	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTemporaryTopicLeakAfterConnectionClose	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
pooledConnection	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Topic	no	yes
tempTopic	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
pooledConnection	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
pooledConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
tempTopic	yes	yes
=	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTemporaryQueueLeakAfterConnectionCloseWithConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
pooledConnection	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
tempQueue	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
pooledConnection	no	yes
=	no	no
pooledFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
pooledConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
tempQueue	yes	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
tempQueue	yes	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConnectionFailures	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
CountDownLatch	no	yes
failed	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Connection	no	yes
connection	yes	yes
=	no	no
pooledConnFact	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
failed	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
.	no	no
await	no	yes
(	no	no
15	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
ex	yes	yes
)	no	no
{	no	no

failed	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
.	no	no
await	no	yes
(	no	no
15	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Connection	no	yes
connection2	yes	yes
=	no	no
pooledConnFact	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
assertNotSame	no	yes
(	no	no
connection	no	yes
,	no	no
connection2	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTempQueueIssue	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PooledConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
PooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setConnectionFactory	no	yes
(	no	no
factory	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	yes	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	yes	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
sendWithReplyToTemp	no	yes
(	no	no
ConnectionFactory	no	yes
cf	no	yes
,	no	no
String	no	yes
serviceQueue	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
Connection	no	yes
con	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
TemporaryQueue	no	yes
tempQueue	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
tempQueue	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
serviceQueue	no	yes
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
tempQueue	no	yes
)	no	no
;	no	no
Message	no	yes
replyMsg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
receiveAndRespondWithMessageIdAsCorrelationId	no	yes
(	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
,	no	no
String	no	yes
queueName	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
con	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
)	no	no
;	no	no
final	no	yes
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
inMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
requestMessageId	yes	yes
=	no	no
inMessage	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
receiveAndRespondWithMessageIdAsCorrelationId	no	yes
(	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
,	no	no
String	no	yes
queueName	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
con	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
)	no	no
;	no	no
final	no	yes
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
inMessage	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
requestMessageId	no	yes
=	no	no
inMessage	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
requestMessageId	no	yes
)	no	no
;	no	no
final	no	yes
TextMessage	no	yes
replyMessage	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
replyMessage	no	yes
.	no	no
setJMSCorrelationID	no	yes
(	no	no
inMessage	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
inMessage	yes	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IllegalStateException	no	yes
ise	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
ise	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
ise	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
(	no	no
(	no	no
PooledConnectionFactory	no	yes
)	no	no
cf	no	yes
)	no	no
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
cf	no	yes
=	no	no
createPooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IllegalStateException	no	yes
ise	yes	yes
)	no	no
{	no	no

cf	no	yes
=	no	no
createPooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IllegalStateException	no	yes
ise	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ise	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
PooledConnectionFactory	no	yes
)	no	no
cf	no	yes
)	no	no
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
cf	no	yes
=	no	no
createPooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testAllSessionsAvailableOnConstrainedPool	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
PooledConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
PooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setConnectionFactory	no	yes
(	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setMaxConnections	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setMaximumActiveSessionPerConnection	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setBlockIfSessionPoolIsFull	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
LinkedList	no	yes
<	no	no
Connection	no	yes
>	no	no
connections	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
HashSet	no	yes
<	no	no
Session	no	yes
>	no	no
sessions	no	yes
=	no	no
new	no	yes
HashSet	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
ConnectionFactory	no	yes
connectionFactory	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_MESSAGES	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	yes	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
String	no	yes
msgTo	no	yes
=	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
msgTo	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
totalMessagesExpected	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
numReceived	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
numReceived	yes	yes
%	no	no
20	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
ConnectionFactory	no	yes
connectionFactory	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_MESSAGES	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	yes	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
String	no	yes
msgTo	no	yes
=	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
msgTo	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_MESSAGES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
numReceived	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
numReceived	yes	yes
%	no	no
20	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
configureMetadata	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
brokerService	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
metadata	yes	yes
.	no	no
openwireVersion	no	yes
=	no	no
brokerService	no	yes
.	no	no
getStoreOpenWireVersion	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
setVersion	no	yes
(	no	no
metadata	yes	yes
.	no	no
openwireVersion	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
command	no	yes
=	no	no
load	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
KahaAddMessageCommand	no	yes
addMessage	no	yes
=	no	no
null	no	yes
;	no	no
switch	no	yes
(	no	no
command	no	yes
.	no	no
type	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
KAHA_UPDATE_MESSAGE_COMMAND	no	yes
:	no	no
addMessage	no	yes
=	no	no
(	no	no
(	no	no
KahaUpdateMessageCommand	no	yes
)	no	no
command	no	yes
)	no	no
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
KAHA_ADD_MESSAGE_COMMAND	no	yes
:	no	no
addMessage	no	yes
=	no	no
(	no	no
KahaAddMessageCommand	no	yes
)	no	no
command	no	yes
;	no	no
break	no	yes
;	no	no
default	no	yes
:	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
type	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
addMessage	no	yes
.	no	no
hasMessage	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
Message	no	yes
msg	no	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
DataInputStream	no	yes
(	no	no
addMessage	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
newInput	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
msg	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	no	yes
)	no	no
{	no	no
IOException	no	yes
ioe	yes	yes
=	no	no
IOExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
+	no	no
location	yes	yes
,	no	no
t	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
recover	no	yes
(	no	no
)	no	no
throws	no	yes
IllegalStateException	no	yes
,	no	no
IOException	no	yes
{	no	no
this	no	yes
.	no	no
indexLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
requiresJournalReplay	no	yes
=	no	no
recoverProducerAudit	no	yes
(	no	no
)	no	no
;	no	no
requiresJournalReplay	no	yes
|=	no	no
recoverAckMessageFileMap	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
lastIndoubtPosition	no	yes
=	no	no
getRecoveryPosition	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
recoveryPosition	yes	yes
=	no	no
requiresJournalReplay	no	yes
?	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
null	no	yes
)	no	no
:	no	no
lastIndoubtPosition	no	yes
;	no	no
if	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
redoCounter	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
dataFileRotationTracker	no	yes
=	no	no
recoveryPosition	yes	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
;	no	no

requiresJournalReplay	no	yes
|=	no	no
recoverAckMessageFileMap	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
lastIndoubtPosition	no	yes
=	no	no
getRecoveryPosition	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
recoveryPosition	yes	yes
=	no	no
requiresJournalReplay	no	yes
?	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
null	no	yes
)	no	no
:	no	no
lastIndoubtPosition	no	yes
;	no	no
if	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
redoCounter	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
dataFileRotationTracker	no	yes
=	no	no
recoveryPosition	yes	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
while	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
load	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
metadata	no	yes
.	no	no
lastUpdate	no	yes
=	no	no
recoveryPosition	yes	yes
;	no	no
process	no	yes
(	no	no
message	no	yes
,	no	no
recoveryPosition	yes	yes
,	no	no
lastIndoubtPosition	no	yes
)	no	no
;	no	no
redoCounter	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
load	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
metadata	no	yes
.	no	no
lastUpdate	no	yes
=	no	no
recoveryPosition	yes	yes
;	no	no
process	no	yes
(	no	no
message	no	yes
,	no	no
recoveryPosition	yes	yes
,	no	no
lastIndoubtPosition	no	yes
)	no	no
;	no	no
redoCounter	yes	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
journal	no	yes
.	no	no
corruptRecoveryLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
recoveryPosition	yes	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
&&	no	no
dataFileRotationTracker	no	yes
!=	no	no
recoveryPosition	yes	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
dataFileRotationTracker	no	yes
=	no	no
recoveryPosition	yes	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
;	no	no
journal	no	yes
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
&&	no	no
redoCounter	yes	yes
%	no	no
100000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

redoCounter	yes	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
journal	no	yes
.	no	no
corruptRecoveryLocation	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
recoveryPosition	no	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
recoveryPosition	no	yes
!=	no	no
null	no	yes
&&	no	no
dataFileRotationTracker	no	yes
!=	no	no
recoveryPosition	no	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
dataFileRotationTracker	no	yes
=	no	no
recoveryPosition	no	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
;	no	no
journal	no	yes
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
&&	no	no
redoCounter	yes	yes
%	no	no
100000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
+	no	no
+	no	no
redoCounter	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
&&	no	no
redoCounter	no	yes
%	no	no
100000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
+	no	no
+	no	no
redoCounter	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
redoCounter	no	yes
+	no	no
+	no	no
(	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
/	no	no
1000.0f	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
pageFile	no	yes
.	no	no
tx	yes	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Transaction	no	yes
.	no	no
Closure	no	yes
<	no	no
IOException	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
execute	no	yes
(	no	no
Transaction	no	yes
tx	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
recoverIndex	no	yes
(	no	no
tx	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
TransactionId	no	yes
>	no	no
toRollback	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
TransactionId	no	yes
>	no	no
toDiscard	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
inflightTransactions	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
TransactionId	no	yes
>	no	no
it	no	yes
=	no	no
inflightTransactions	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
it	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
TransactionId	no	yes
id	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
id	no	yes
.	no	no
isLocalTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
redoCounter	no	yes
+	no	no
+	no	no
(	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
/	no	no
1000.0f	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
pageFile	no	yes
.	no	no
tx	yes	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Transaction	no	yes
.	no	no
Closure	no	yes
<	no	no
IOException	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
execute	no	yes
(	no	no
Transaction	no	yes
tx	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
recoverIndex	no	yes
(	no	no
tx	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
TransactionId	no	yes
>	no	no
toRollback	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
TransactionId	no	yes
>	no	no
toDiscard	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
inflightTransactions	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
TransactionId	no	yes
>	no	no
it	no	yes
=	no	no
inflightTransactions	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
it	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
TransactionId	no	yes
id	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
id	no	yes
.	no	no
isLocalTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
toRollback	no	yes
.	no	no
add	no	yes
(	no	no
id	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

long	no	yes
start2	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
sync	no	yes
&&	no	no
journal	no	yes
.	no	no
isJournalDiskSyncPeriodic	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
lastAsyncJournalUpdate	no	yes
.	no	no
set	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
}	no	no
process	no	yes
(	no	no
data	yes	yes
,	no	no
location	no	yes
,	no	no
before	no	yes
)	no	no
;	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG_SLOW_ACCESS_TIME	no	yes
>	no	no
0	no	no
&&	no	no
end	no	yes
-	no	no
start	no	yes
>	no	no
LOG_SLOW_ACCESS_TIME	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
start2	no	yes
-	no	no
start	no	yes
)	no	no
+	no	no
+	no	no
(	no	no
end	no	yes
-	no	no
start2	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
persistenceAdapterStatistics	no	yes
.	no	no
addWriteTime	no	yes
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
checkpointLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
after	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
after	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
location	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ioe	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
Long	no	yes
sequence	no	yes
=	no	no
sd	no	yes
.	no	no
messageIdIndex	no	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
command	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
sequence	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
String	no	yes
subscriptionKey	no	yes
=	no	no
command	yes	yes
.	no	no
getSubscriptionKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
command	yes	yes
.	no	no
getAck	no	yes
(	no	no
)	no	no
!=	no	no
UNMATCHED	no	yes
)	no	no
{	no	no
sd	no	yes
.	no	no
orderIndex	no	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
sequence	no	yes
)	no	no
;	no	no
byte	no	yes
priority	no	yes
=	no	no
sd	no	yes
.	no	no
orderIndex	no	yes
.	no	no
lastGetPriority	no	yes
(	no	no
)	no	no
;	no	no
sd	no	yes
.	no	no
subscriptionAcks	no	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
subscriptionKey	no	yes
,	no	no
new	no	yes
LastAck	no	yes
(	no	no
sequence	no	yes
,	no	no
priority	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
MessageKeys	no	yes
keys	no	yes
=	no	no
sd	no	yes
.	no	no
orderIndex	no	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
sequence	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
keys	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
recordAckMessageReferenceLocation	no	yes
(	no	no
ackLocation	no	yes
,	no	no
keys	no	yes
.	no	no
location	no	yes
)	no	no
;	no	no
}	no	no
removeAckLocation	no	yes
(	no	no
command	yes	yes
,	no	no
tx	no	yes
,	no	no
sd	no	yes
,	no	no
subscriptionKey	no	yes
,	no	no
sequence	no	yes
)	no	no
;	no	no
metadata	no	yes
.	no	no
lastUpdate	no	yes
=	no	no
ackLocation	no	yes
;	no	no

while	no	yes
(	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Location	no	yes
>	no	no
subscription	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
dataFileId	no	yes
=	no	no
subscription	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
gcCandidateSet	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
&&	no	no
gcCandidateSet	yes	yes
.	no	no
first	no	yes
(	no	no
)	no	no
==	no	no
dataFileId	no	yes
)	no	no
{	no	no
final	no	yes
StoredDestination	no	yes
destination	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
subscriptionKey	no	yes
=	no	no
subscription	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
SequenceSet	no	yes
pendingAcks	no	yes
=	no	no
destination	no	yes
.	no	no
ackPositions	no	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
subscriptionKey	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
pendingAcks	no	yes
==	no	no
null	no	yes
||	no	no
pendingAcks	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
||	no	no
(	no	no
pendingAcks	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
pendingAcks	no	yes
.	no	no
getTail	no	yes
(	no	no
)	no	no
.	no	no
range	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
subscriptionKey	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
dataFileId	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
KahaSubscriptionCommand	no	yes
kahaSub	no	yes
=	no	no
destination	no	yes
.	no	no
subscriptions	no	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
subscriptionKey	no	yes
)	no	no
;	no	no
destination	no	yes
.	no	no
subLocations	no	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
subscriptionKey	no	yes
,	no	no
checkpointSubscriptionCommand	no	yes
(	no	no
kahaSub	no	yes
)	no	no
)	no	no
;	no	no
continue	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
StoredDestination	no	yes
destination	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
recoverPendingLocalTransactions	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
checkForCorruption	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
DataFile	no	yes
dataFile	yes	yes
:	no	no
journal	no	yes
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
dataFile	yes	yes
.	no	no
getCorruptedBlocks	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
DataFile	no	yes
dataFile	no	yes
:	no	no
journal	no	yes
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
dataFile	no	yes
.	no	no
getCorruptedBlocks	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
dataFile	no	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
,	no	no
dataFile	no	yes
.	no	no
getCorruptedBlocks	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
corruptJournalDetected	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
corruptJournalDetected	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Location	no	yes
location	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
location	no	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
location	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
process	no	yes
(	no	no
location	no	yes
,	no	no
load	no	yes
(	no	no
location	no	yes
)	no	no
)	no	no
;	no	no
location	no	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
oops	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
location	no	yes
,	no	no
oops	no	yes
)	no	no
;	no	no
corruptJournalDetected	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
pendingCommit	yes	yes
.	no	no
putAll	no	yes
(	no	no
inflightTransactions	no	yes
)	no	no
;	no	no

catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
adapter	no	yes
+	no	no
+	no	no
xid	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
listener	no	yes
.	no	no
recover	no	yes
(	no	no
xid	no	yes
,	no	no
addedMessages	no	yes
,	no	no
acks	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
boolean	no	yes
recoveryWorkPending	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
Broker	no	yes
broker	no	yes
=	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionId	no	yes
txid	yes	yes
:	no	no
broker	no	yes
.	no	no
getPreparedTransactions	no	yes
(	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
isLocalXid	no	yes
(	no	no
txid	yes	yes
)	no	no
)	no	no
{	no	no
recoveryWorkPending	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
corruptJournalDetected	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
txid	yes	yes
)	no	no
;	no	no
logSomeContext	no	yes
(	no	no
txid	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no

listener	no	yes
.	no	no
recover	no	yes
(	no	no
xid	no	yes
,	no	no
addedMessages	no	yes
,	no	no
acks	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
boolean	no	yes
recoveryWorkPending	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
Broker	no	yes
broker	no	yes
=	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionId	no	yes
txid	yes	yes
:	no	no
broker	no	yes
.	no	no
getPreparedTransactions	no	yes
(	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
isLocalXid	no	yes
(	no	no
txid	yes	yes
)	no	no
)	no	no
{	no	no
recoveryWorkPending	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
corruptJournalDetected	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
txid	yes	yes
)	no	no
;	no	no
logSomeContext	no	yes
(	no	no
txid	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
pendingCommit	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
txid	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
txid	yes	yes
)	no	no
;	no	no

}	no	no
boolean	no	yes
recoveryWorkPending	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
Broker	no	yes
broker	no	yes
=	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
TransactionId	no	yes
txid	yes	yes
:	no	no
broker	no	yes
.	no	no
getPreparedTransactions	no	yes
(	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
multiKahaDBPersistenceAdapter	no	yes
.	no	no
isLocalXid	no	yes
(	no	no
txid	yes	yes
)	no	no
)	no	no
{	no	no
recoveryWorkPending	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
corruptJournalDetected	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
txid	yes	yes
)	no	no
;	no	no
logSomeContext	no	yes
(	no	no
txid	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
pendingCommit	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
txid	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
txid	yes	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
null	no	yes
,	no	no
txid	yes	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

metadataPage	no	yes
.	no	no
set	no	yes
(	no	no
metadata	yes	yes
)	no	no
;	no	no
clear	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
metadata	yes	yes
=	no	no
metadataPage	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
metadata	yes	yes
.	no	no
page	no	yes
=	no	no
metadataPage	no	yes
;	no	no
if	no	yes
(	no	no
metadata	yes	yes
.	no	no
state	no	yes
==	no	no
OPEN_STATE	no	yes
)	no	no
{	no	no
metadata	yes	yes
.	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
metadata	yes	yes
.	no	no
binCapacity	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
t	no	yes
=	no	no
sizeOfBin	no	yes
(	no	no
tx	no	yes
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
t	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
metadata	yes	yes
.	no	no
binsActive	no	yes
++	no	no
;	no	no
}	no	no
metadata	yes	yes
.	no	no
size	no	yes
+=	no	no
t	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
calcThresholds	no	yes
(	no	no
)	no	no
;	no	no
metadata	yes	yes
.	no	no
state	no	yes
=	no	no
OPEN_STATE	no	yes
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
metadataPage	no	yes
,	no	no
metadataMarshaller	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
resize	no	yes
(	no	no
Transaction	no	yes
tx	no	yes
,	no	no
final	no	yes
int	no	yes
newSize	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no

}	no	no
metadata	yes	yes
.	no	no
binsActive	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
metadata	yes	yes
.	no	no
binCapacity	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
HashBin	no	yes
<	no	no
Key	no	yes
,	no	no
Value	no	yes
>	no	no
bin	no	yes
=	no	no
getBin	no	yes
(	no	no
tx	no	yes
,	no	no
i	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Key	no	yes
,	no	no
Value	no	yes
>	no	no
entry	no	yes
:	no	no
bin	no	yes
.	no	no
getAll	no	yes
(	no	no
tx	no	yes
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
HashBin	no	yes
<	no	no
Key	no	yes
,	no	no
Value	no	yes
>	no	no
resizeBin	no	yes
=	no	no
getBin	no	yes
(	no	no
tx	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
resizePageId	no	yes
,	no	no
resizeCapacity	no	yes
)	no	no
;	no	no
resizeBin	no	yes
.	no	no
put	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
store	no	yes
(	no	no
tx	no	yes
,	no	no
resizeBin	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
resizeBin	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
metadata	yes	yes
.	no	no
binsActive	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
}	no	no
tx	no	yes
.	no	no
free	no	yes
(	no	no
metadata	yes	yes
.	no	no
binPageId	no	yes
,	no	no
metadata	yes	yes
.	no	no
binCapacity	no	yes
)	no	no
;	no	no
metadata	yes	yes
.	no	no
binCapacity	no	yes
=	no	no
resizeCapacity	no	yes
;	no	no
metadata	yes	yes
.	no	no
binPageId	no	yes
=	no	no
resizePageId	no	yes
;	no	no
metadata	yes	yes
.	no	no
state	no	yes
=	no	no
OPEN_STATE	no	yes
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
metadata	yes	yes
.	no	no
page	no	yes
,	no	no
metadataMarshaller	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
calcThresholds	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
dir	no	yes
.	no	no
equals	no	yes
(	no	no
directory	no	yes
)	no	no
&&	no	no
n	no	yes
.	no	no
startsWith	no	yes
(	no	no
filePrefix	no	yes
)	no	no
&&	no	no
n	no	yes
.	no	no
endsWith	no	yes
(	no	no
fileSuffix	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
files	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
File	no	yes
file	no	yes
:	no	no
files	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
String	no	yes
n	no	yes
=	no	no
file	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
numStr	no	yes
=	no	no
n	no	yes
.	no	no
substring	no	yes
(	no	no
filePrefix	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
n	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
fileSuffix	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
num	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
numStr	no	yes
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
new	no	yes
DataFile	no	yes
(	no	no
file	no	yes
,	no	no
num	no	yes
)	no	no
;	no	no
fileMap	no	yes
.	no	no
put	no	yes
(	no	no
dataFile	no	yes
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
,	no	no
dataFile	no	yes
)	no	no
;	no	no
totalLength	no	yes
.	no	no
addAndGet	no	yes
(	no	no
dataFile	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NumberFormatException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
LinkedList	no	yes
<	no	no
DataFile	no	yes
>	no	no
l	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
fileMap	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
l	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
DataFile	no	yes
df	yes	yes
:	no	no
l	no	yes
)	no	no
{	no	no

preAllocateDirectBuffer	no	yes
.	no	no
rewind	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
FileChannel	no	yes
channel	no	yes
=	no	no
file	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
remLen	no	yes
=	no	no
maxFileLength	no	yes
;	no	no
while	no	yes
(	no	no
remLen	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
remLen	no	yes
<	no	no
preAllocateDirectBuffer	no	yes
.	no	no
remaining	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
preAllocateDirectBuffer	no	yes
.	no	no
limit	no	yes
(	no	no
remLen	no	yes
)	no	no
;	no	no
}	no	no
int	no	yes
writeLen	no	yes
=	no	no
channel	no	yes
.	no	no
write	no	yes
(	no	no
preAllocateDirectBuffer	no	yes
)	no	no
;	no	no
remLen	no	yes
-=	no	no
writeLen	no	yes
;	no	no
preAllocateDirectBuffer	no	yes
.	no	no
rewind	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
channel	no	yes
.	no	no
force	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
channel	no	yes
.	no	no
position	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ClosedByInterruptException	no	yes
ignored	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
ignored	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
forceRemoveDataFile	no	yes
(	no	no
DataFile	no	yes
dataFile	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
accessorPool	no	yes
.	no	no
disposeDataFileAccessors	no	yes
(	no	no
dataFile	no	yes
)	no	no
;	no	no
totalLength	no	yes
.	no	no
addAndGet	no	yes
(	no	no
-	no	no
dataFile	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
archiveDataLogs	no	yes
)	no	no
{	no	no
File	no	yes
directoryArchive	yes	yes
=	no	no
getDirectoryArchive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
directoryArchive	yes	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
forceRemoveDataFile	no	yes
(	no	no
DataFile	no	yes
dataFile	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
accessorPool	no	yes
.	no	no
disposeDataFileAccessors	no	yes
(	no	no
dataFile	yes	yes
)	no	no
;	no	no
totalLength	no	yes
.	no	no
addAndGet	no	yes
(	no	no
-	no	no
dataFile	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
archiveDataLogs	no	yes
)	no	no
{	no	no
File	no	yes
directoryArchive	no	yes
=	no	no
getDirectoryArchive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
directoryArchive	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
directoryArchive	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
directoryArchive	no	yes
.	no	no
isAbsolute	no	yes
(	no	no
)	no	no
)	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
directoryArchive	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
IOHelper	no	yes
.	no	no
mkdirs	no	yes
(	no	no
directoryArchive	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
dataFile	yes	yes
,	no	no
directoryArchive	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dataFile	yes	yes
.	no	no
move	no	yes
(	no	no
directoryArchive	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

totalLength	no	yes
.	no	no
addAndGet	no	yes
(	no	no
-	no	no
dataFile	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
archiveDataLogs	no	yes
)	no	no
{	no	no
File	no	yes
directoryArchive	no	yes
=	no	no
getDirectoryArchive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
directoryArchive	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
directoryArchive	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
directoryArchive	no	yes
.	no	no
isAbsolute	no	yes
(	no	no
)	no	no
)	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
directoryArchive	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
IOHelper	no	yes
.	no	no
mkdirs	no	yes
(	no	no
directoryArchive	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
dataFile	yes	yes
,	no	no
directoryArchive	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dataFile	yes	yes
.	no	no
move	no	yes
(	no	no
directoryArchive	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
dataFile	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
dataFile	yes	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

buff	no	yes
.	no	no
writeLong	no	yes
(	no	no
checksum	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
file	no	yes
.	no	no
seek	no	yes
(	no	no
nextWriteBatch	yes	yes
.	no	no
offset	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
maxStat	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
statIdx	no	yes
<	no	no
maxStat	no	yes
)	no	no
{	no	no
stats	no	yes
[	no	no
statIdx	no	yes
++	no	no
]	no	no
=	no	no
sequence	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
long	no	yes
all	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
statIdx	no	yes
>	no	no
0	no	no
;	no	no
)	no	no
{	no	no
all	no	yes
+=	no	no
stats	no	yes
[	no	no
--	no	no
statIdx	no	yes
]	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
all	no	yes
/	no	no
maxStat	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
file	no	yes
.	no	no
write	no	yes
(	no	no
sequence	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
sequence	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
,	no	no
sequence	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ReplicationTarget	no	yes
replicationTarget	no	yes
=	no	no
journal	no	yes
.	no	no
getReplicationTarget	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
replicationTarget	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
replicationTarget	no	yes
.	no	no
replicate	no	yes
(	no	no
nextWriteBatch	yes	yes
.	no	no
writes	no	yes
.	no	no
getHead	no	yes
(	no	no
)	no	no
.	no	no
location	no	yes
,	no	no
sequence	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
file	no	yes
.	no	no
sync	no	yes
(	no	no
)	no	no
;	no	no

throw	no	yes
IOExceptionSupport	no	yes
.	no	no
create	no	yes
(	no	no
+	no	no
t	no	yes
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
recoveryFile	no	yes
.	no	no
writeLong	no	yes
(	no	no
w	no	yes
.	no	no
page	no	yes
.	no	no
getPageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
recoveryFile	no	yes
.	no	no
write	no	yes
(	no	no
w	no	yes
.	no	no
getDiskBound	no	yes
(	no	no
tmpFilesForRemoval	no	yes
)	no	no
,	no	no
0	no	no
,	no	no
pageSize	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
recoveryPageCount	no	yes
>	no	no
recoveryFileMaxPageCount	no	yes
)	no	no
{	no	no
int	no	yes
t	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
recoveryFileMinPageCount	no	yes
,	no	no
batch	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
recoveryFile	no	yes
.	no	no
setLength	no	yes
(	no	no
recoveryFileSizeForPages	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
recoveryFile	no	yes
.	no	no
seek	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
recoveryFile	no	yes
.	no	no
writeLong	no	yes
(	no	no
nextTxid	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
recoveryFile	no	yes
.	no	no
writeLong	no	yes
(	no	no
checksum	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
recoveryFile	no	yes
.	no	no
writeInt	no	yes
(	no	no
batch	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
enableDiskSyncs	no	yes
)	no	no
{	no	no
recoveryFile	no	yes
.	no	no
sync	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
PageWrite	no	yes
w	no	yes
:	no	no
batch	yes	yes
)	no	no
{	no	no
writeFile	no	yes
.	no	no
seek	no	yes
(	no	no
toOffset	no	yes
(	no	no
w	no	yes
.	no	no
page	no	yes
.	no	no
getPageId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
writeFile	no	yes
.	no	no
write	no	yes
(	no	no
w	no	yes
.	no	no
getDiskBound	no	yes
(	no	no
tmpFilesForRemoval	no	yes
)	no	no
,	no	no
0	no	no
,	no	no
pageSize	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
commit	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
writeTransactionId	yes	yes
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
tmpFile	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
synchronized	no	yes
void	no	yes
doStop	no	yes
(	no	no
ServiceStopper	no	yes
stopper	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
scheduler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
PListStoreImpl	no	yes
.	no	no
class	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
scheduler	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
scheduler	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
scheduler	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
PListImpl	no	yes
pl	no	yes
:	no	no
this	yes	yes
.	no	no
persistentLists	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
pl	no	yes
.	no	no
unload	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
this	yes	yes
.	no	no
pageFile	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
this	yes	yes
.	no	no
pageFile	no	yes
.	no	no
unload	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
this	yes	yes
.	no	no
journal	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
journal	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
this	yes	yes
.	no	no
lockFile	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
this	yes	yes
.	no	no
lockFile	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
this	yes	yes
.	no	no
lockFile	no	yes
=	no	no
null	no	yes
;	no	no
this	yes	yes
.	no	no
initialized	no	yes
=	no	no
false	no	yes
;	no	no

}	no	no
if	no	yes
(	no	no
result	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
Location	no	yes
previousUpdate	no	yes
=	no	no
result	no	yes
.	no	no
getLastUpdate	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
JobLocation	no	yes
>	no	no
target	no	yes
=	no	no
null	no	yes
;	no	no
result	no	yes
.	no	no
setNextTime	no	yes
(	no	no
command	yes	yes
.	no	no
getNextExecutionTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
setLastUpdate	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
result	no	yes
.	no	no
setRescheduledCount	no	yes
(	no	no
command	yes	yes
.	no	no
getRescheduledCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
result	no	yes
.	no	no
isCron	no	yes
(	no	no
)	no	no
&&	no	no
result	no	yes
.	no	no
getRepeat	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
setRepeat	no	yes
(	no	no
result	no	yes
.	no	no
getRepeat	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
this	no	yes
.	no	no
index	no	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
command	yes	yes
.	no	no
getNextExecutionTime	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
target	no	yes
=	no	no
this	no	yes
.	no	no
index	no	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
command	yes	yes
.	no	no
getNextExecutionTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
target	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
target	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
target	no	yes
.	no	no
add	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
store	no	yes
.	no	no
incrementJournalCount	no	yes
(	no	no
tx	no	yes
,	no	no
location	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
previousUpdate	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

void	no	yes
fireJob	no	yes
(	no	no
JobLocation	no	yes
job	yes	yes
)	no	no
throws	no	yes
IllegalStateException	no	yes
,	no	no
IOException	no	yes
{	no	no

}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
t	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
pageFile	no	yes
.	no	no
unload	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignore	no	yes
)	no	no
{	no	no
}	no	no
if	no	yes
(	no	no
isArchiveCorruptedIndex	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
pageFile	no	yes
.	no	no
archive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
pageFile	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
metaData	no	yes
=	no	no
new	no	yes
JobSchedulerKahaDBMetaData	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
pageFile	no	yes
=	no	no
null	no	yes
;	no	no
loadPageFile	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
startCheckpoint	no	yes
(	no	no
)	no	no
;	no	no
recover	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
finally	no	yes
{	no	no
this	yes	yes
.	no	no
indexLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
checkpointLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
metaData	no	yes
.	no	no
getPage	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
checkpointUpdate	no	yes
(	no	no
getCleanupOnStop	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
checkpointLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
checkpointThreadLock	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
checkpointThread	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
checkpointThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
checkpointThread	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
pageFile	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

Iterator	no	yes
<	no	no
Entry	no	yes
<	no	no
Integer	no	yes
,	no	no
List	no	yes
<	no	no
Integer	no	yes
>>>	no	no
removals	no	yes
=	no	no
metaData	no	yes
.	no	no
getRemoveLocationTracker	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
orphans	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
removals	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
boolean	no	yes
orphanedRemove	no	yes
=	no	no
true	no	yes
;	no	no
Entry	no	yes
<	no	no
Integer	no	yes
,	no	no
List	no	yes
<	no	no
Integer	no	yes
>>	no	no
entry	no	yes
=	no	no
removals	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
gcCandidateSet	yes	yes
.	no	no
contains	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Integer	no	yes
addLocation	no	yes
:	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
completeFileSet	no	yes
.	no	no
contains	no	yes
(	no	no
addLocation	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
addLocation	no	yes
)	no	no
;	no	no
orphanedRemove	no	yes
=	no	no
false	no	yes
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
orphanedRemove	no	yes
)	no	no
{	no	no
gcCandidateSet	yes	yes
.	no	no
remove	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
recover	no	yes
(	no	no
)	no	no
throws	no	yes
IllegalStateException	no	yes
,	no	no
IOException	no	yes
{	no	no
this	no	yes
.	no	no
indexLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
lastIndoubtPosition	no	yes
=	no	no
getRecoveryPosition	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
recoveryPosition	yes	yes
=	no	no
lastIndoubtPosition	no	yes
;	no	no
if	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
redoCounter	no	yes
=	no	no
0	no	no
;	no	no

try	no	yes
{	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
lastIndoubtPosition	no	yes
=	no	no
getRecoveryPosition	no	yes
(	no	no
)	no	no
;	no	no
Location	no	yes
recoveryPosition	yes	yes
=	no	no
lastIndoubtPosition	no	yes
;	no	no
if	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
redoCounter	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
while	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
load	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
metaData	no	yes
.	no	no
setLastUpdateLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
doRecover	no	yes
(	no	no
message	no	yes
,	no	no
recoveryPosition	yes	yes
,	no	no
lastIndoubtPosition	no	yes
)	no	no
;	no	no
redoCounter	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
while	no	yes
(	no	no
recoveryPosition	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
load	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
metaData	no	yes
.	no	no
setLastUpdateLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
doRecover	no	yes
(	no	no
message	no	yes
,	no	no
recoveryPosition	yes	yes
,	no	no
lastIndoubtPosition	no	yes
)	no	no
;	no	no
redoCounter	yes	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
journal	no	yes
.	no	no
corruptRecoveryLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
recoveryPosition	yes	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
recoveryPosition	yes	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
recoveryPosition	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
&&	no	no
redoCounter	yes	yes
%	no	no
100000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
JournalCommand	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
load	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
metaData	no	yes
.	no	no
setLastUpdateLocation	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
doRecover	no	yes
(	no	no
message	no	yes
,	no	no
recoveryPosition	no	yes
,	no	no
lastIndoubtPosition	no	yes
)	no	no
;	no	no
redoCounter	yes	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
failedRecovery	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
isIgnoreMissingJournalfiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
journal	no	yes
.	no	no
corruptRecoveryLocation	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
throw	no	yes
new	no	yes
IOException	no	yes
(	no	no
+	no	no
recoveryPosition	no	yes
,	no	no
failedRecovery	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
recoveryPosition	no	yes
=	no	no
journal	no	yes
.	no	no
getNextLocation	no	yes
(	no	no
recoveryPosition	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
&&	no	no
redoCounter	yes	yes
%	no	no
100000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
recoveryPosition	no	yes
,	no	no
redoCounter	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	yes
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
recoverIndex	no	yes
(	no	no
Transaction	no	yes
tx	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
long	no	yes
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Location	no	yes
lastAppendLocation	no	yes
=	no	no
journal	no	yes
.	no	no
getLastAppendLocation	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
undoCounter	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>>	no	no
i	no	yes
=	no	no
metaData	no	yes
.	no	no
getJobSchedulers	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>	no	no
entry	no	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
JobSchedulerImpl	no	yes
scheduler	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
JobLocation	no	yes
>	no	no
jobLocationIterator	no	yes
=	no	no
scheduler	no	yes
.	no	no
getAllScheduledJobs	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
jobLocationIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
final	no	yes
JobLocation	no	yes
job	no	yes
=	no	no
jobLocationIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
job	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
compareTo	no	yes
(	no	no
lastAppendLocation	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
scheduler	no	yes
.	no	no
removeJobAtTime	no	yes
(	no	no
tx	no	yes
,	no	no
job	no	yes
.	no	no
getJobId	no	yes
(	no	no
)	no	no
,	no	no
job	no	yes
.	no	no
getNextTime	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
job	no	yes
.	no	no
getJobId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
undoCounter	yes	yes
++	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
undoCounter	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
long	no	yes
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
undoCounter	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
undoCounter	no	yes
,	no	no
(	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
/	no	no
1000.0f	no	no
)	no	no
)	no	no
;	no	no
undoCounter	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
HashSet	no	yes
<	no	no
Integer	no	yes
>	no	no
missingJournalFiles	yes	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>>	no	no
i	no	yes
=	no	no
metaData	no	yes
.	no	no
getJobSchedulers	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>	no	no
entry	no	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
JobSchedulerImpl	no	yes
scheduler	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
JobLocation	no	yes
>	no	no
jobLocationIterator	no	yes
=	no	no
scheduler	no	yes
.	no	no
getAllScheduledJobs	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
jobLocationIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
final	no	yes
JobLocation	no	yes
job	no	yes
=	no	no
jobLocationIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
missingJournalFiles	yes	yes
.	no	no
add	no	yes
(	no	no
job	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
job	no	yes
.	no	no
getLastUpdate	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
missingJournalFiles	yes	yes
.	no	no
add	no	yes
(	no	no
job	no	yes
.	no	no
getLastUpdate	no	yes
(	no	no
)	no	no
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
missingJournalFiles	yes	yes
.	no	no
removeAll	no	yes
(	no	no
journal	no	yes
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
missingJournalFiles	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

HashSet	no	yes
<	no	no
Integer	no	yes
>	no	no
missingJournalFiles	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>>	no	no
i	no	yes
=	no	no
metaData	no	yes
.	no	no
getJobSchedulers	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
JobSchedulerImpl	no	yes
>	no	no
entry	no	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
JobSchedulerImpl	no	yes
scheduler	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
JobLocation	no	yes
>	no	no
jobLocationIterator	no	yes
=	no	no
scheduler	no	yes
.	no	no
getAllScheduledJobs	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
jobLocationIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
final	no	yes
JobLocation	no	yes
job	no	yes
=	no	no
jobLocationIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
missingJournalFiles	no	yes
.	no	no
add	no	yes
(	no	no
job	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
job	no	yes
.	no	no
getLastUpdate	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
missingJournalFiles	no	yes
.	no	no
add	no	yes
(	no	no
job	no	yes
.	no	no
getLastUpdate	no	yes
(	no	no
)	no	no
.	no	no
getDataFileId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
missingJournalFiles	no	yes
.	no	no
removeAll	no	yes
(	no	no
journal	no	yes
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
missingJournalFiles	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
missingJournalFiles	no	yes
)	no	no
;	no	no
}	no	no
HashSet	no	yes
<	no	no
Location	no	yes
>	no	no
corruptedLocations	yes	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
Location	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
isCheckForCorruptJournalFiles	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
dataFiles	no	yes
=	no	no
journal	no	yes
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
stopRestartBroker	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUri	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setPriority	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
displayQueueViews	no	yes
(	no	no
brokerService	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
jmsConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
jmsConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	yes	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	no	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
displayQueueViews	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
ObjectName	no	yes
,	no	no
DestinationView	no	yes
>	no	no
queueViews	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getQueueViews	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
key	no	yes
:	no	no
queueViews	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationView	no	yes
destinationView	no	yes
=	no	no
queueViews	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationView	no	yes
instanceof	no	no
QueueView	no	yes
)	no	no
{	no	no
QueueView	no	yes
queueView	yes	yes
=	no	no
(	no	no
QueueView	no	yes
)	no	no
destinationView	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
corruptBatchCheckSumSplash	no	yes
(	no	no
int	no	yes
id	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
(	no	no
DataFile	no	yes
)	no	no
files	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
RecoverableRandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
dataFile	no	yes
.	no	no
openRandomAccessFile	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
batchPositions	yes	yes
=	no	no
findBatch	no	yes
(	no	no
randomAccessFile	no	yes
,	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
corruptBatchCheckSumSplash	no	yes
(	no	no
int	no	yes
id	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
(	no	no
DataFile	no	yes
)	no	no
files	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
RecoverableRandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
dataFile	no	yes
.	no	no
openRandomAccessFile	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
batchPositions	no	yes
=	no	no
findBatch	no	yes
(	no	no
randomAccessFile	no	yes
,	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchPositions	no	yes
)	no	no
;	no	no
int	no	yes
pos	yes	yes
=	no	no
batchPositions	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
corruptBatchCheckSumSplash	no	yes
(	no	no
int	no	yes
id	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
(	no	no
DataFile	no	yes
)	no	no
files	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
RecoverableRandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
dataFile	no	yes
.	no	no
openRandomAccessFile	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
batchPositions	no	yes
=	no	no
findBatch	no	yes
(	no	no
randomAccessFile	no	yes
,	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchPositions	no	yes
)	no	no
;	no	no
int	no	yes
pos	no	yes
=	no	no
batchPositions	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
pos	no	yes
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
seek	no	yes
(	no	no
pos	no	yes
+	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_HEADER	no	yes
.	no	no
length	no	yes
+	no	no
4	no	no
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
writeLong	no	yes
(	no	no
0l	no	yes
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
seek	no	yes
(	no	no
pos	no	yes
+	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_SIZE	no	yes
)	no	no
;	no	no
int	no	yes
size	yes	yes
=	no	no
randomAccessFile	no	yes
.	no	no
readInt	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
type	yes	yes
=	no	no
randomAccessFile	no	yes
.	no	no
readByte	no	yes
(	no	no
)	no	no
;	no	no

Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
(	no	no
DataFile	no	yes
)	no	no
files	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
RecoverableRandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
dataFile	no	yes
.	no	no
openRandomAccessFile	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
batchPositions	no	yes
=	no	no
findBatch	no	yes
(	no	no
randomAccessFile	no	yes
,	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchPositions	no	yes
)	no	no
;	no	no
int	no	yes
pos	no	yes
=	no	no
batchPositions	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
pos	no	yes
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
seek	no	yes
(	no	no
pos	no	yes
+	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_HEADER	no	yes
.	no	no
length	no	yes
+	no	no
4	no	no
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
writeLong	no	yes
(	no	no
0l	no	yes
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
seek	no	yes
(	no	no
pos	no	yes
+	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_SIZE	no	yes
)	no	no
;	no	no
int	no	yes
size	yes	yes
=	no	no
randomAccessFile	no	yes
.	no	no
readInt	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
type	no	yes
=	no	no
randomAccessFile	no	yes
.	no	no
readByte	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
size	yes	yes
+	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
randomAccessFile	no	yes
.	no	no
seek	no	yes
(	no	no
pos	no	yes
+	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_SIZE	no	yes
)	no	no
;	no	no
size	yes	yes
-=	no	no
1	no	no
;	no	no

private	no	yes
void	no	yes
corruptBatchEndEof	no	yes
(	no	no
int	no	yes
id	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
DataFile	no	yes
dataFile	no	yes
=	no	no
(	no	no
DataFile	no	yes
)	no	no
files	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
id	yes	yes
]	no	no
;	no	no
RecoverableRandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
dataFile	no	yes
.	no	no
openRandomAccessFile	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
batchPositions	no	yes
=	no	no
findBatch	no	yes
(	no	no
randomAccessFile	no	yes
,	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
int	no	yes
pos	yes	yes
=	no	no
batchPositions	no	yes
.	no	no
get	no	yes
(	no	no
batchPositions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
3	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
whackIndex	no	yes
(	no	no
File	no	yes
dataDir	no	yes
)	no	no
{	no	no
File	no	yes
indexToDelete	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testStopOnPageInIOError	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
sent	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFiles	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryAfterCorruption	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFiles	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no

produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFiles	no	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numFiles	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
numFiles	no	yes
,	no	no
numFiles	no	yes
>	no	no
4	no	no
)	no	no
;	no	no
File	no	yes
dataDir	no	yes
=	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	yes
afterStop	no	yes
=	no	no
totalOpenFileDescriptorCount	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
whackIndex	no	yes
(	no	no
dataDir	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
afterStop	no	yes
)	no	no
;	no	no
doStartBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
adapter	no	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getAccessorPool	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
adapter	no	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getAccessorPool	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
afterRecovery	yes	yes
=	no	no
totalOpenFileDescriptorCount	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryWithMissingMssagesWithValidAcks	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
doCreateBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
adapter	no	yes
.	no	no
setCheckpointInterval	no	yes
(	no	no
50000	no	no
)	no	no
;	no	no
adapter	no	yes
.	no	no
setCleanupInterval	no	yes
(	no	no
50000	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
toSend	no	yes
=	no	no
50	no	no
;	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
toSend	no	yes
)	no	no
;	no	no
int	no	yes
numFiles	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryCheckSpeedSmallMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
maxJournalSizeBytes	no	yes
=	no	no
Journal	no	yes
.	no	no
DEFAULT_MAX_FILE_LENGTH	no	yes
;	no	no
doCreateBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
toSend	no	yes
=	no	no
20000	no	no
;	no	no
payload	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
100	no	no
]	no	no
)	no	no
;	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
toSend	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
Instant	no	yes
b	no	yes
=	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
;	no	no
doStartBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Instant	no	yes
e	no	yes
=	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
;	no	no
Duration	no	yes
timeElapsed	yes	yes
=	no	no
Duration	no	yes
.	no	no
between	no	yes
(	no	no
b	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
whackFile	no	yes
(	no	no
File	no	yes
dataDir	no	yes
,	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
File	no	yes
indexToDelete	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
name	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryOnDeleteFailureMetaDataOk	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
sent	yes	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFilesAfterSend	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryOnDeleteFailureMetaDataOk	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
sent	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFilesAfterSend	no	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sent	no	yes
,	no	no
numFilesAfterSend	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
numFilesAfterSend	no	yes
,	no	no
numFilesAfterSend	no	yes
>	no	no
4	no	no
)	no	no
;	no	no
int	no	yes
received	no	yes
=	no	no
tryConsume	no	yes
(	no	no
destination	no	yes
,	no	no
sent	no	yes
/	no	no
2	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sent	no	yes
/	no	no
2	no	no
,	no	no
received	no	yes
)	no	no
;	no	no
int	no	yes
numFilesAfterRestart	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRecoveryOnDeleteFailureMetaDataOk	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
sent	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
int	no	yes
numFilesAfterSend	no	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sent	no	yes
,	no	no
numFilesAfterSend	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
numFilesAfterSend	no	yes
,	no	no
numFilesAfterSend	no	yes
>	no	no
4	no	no
)	no	no
;	no	no
int	no	yes
received	no	yes
=	no	no
tryConsume	no	yes
(	no	no
destination	no	yes
,	no	no
sent	no	yes
/	no	no
2	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sent	no	yes
/	no	no
2	no	no
,	no	no
received	no	yes
)	no	no
;	no	no
int	no	yes
numFilesAfterRestart	no	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numFilesAfterRestart	no	yes
)	no	no
;	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
int	no	yes
numFilesAfterGC	yes	yes
=	no	no
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sent	no	yes
/	no	no
2	no	no
,	no	no
received	no	yes
)	no	no
;	no	no

pf	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
getDirectory	no	yes
(	no	no
)	no	no
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
setPageSize	no	yes
(	no	no
4	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
id	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
.	no	no
getPageId	no	yes
(	no	no
)	no	no
;	no	no
BTreeIndex	no	yes
<	no	no
Long	no	yes
,	no	no
String	no	yes
>	no	no
test	no	yes
=	no	no
new	no	yes
BTreeIndex	no	yes
<	no	no
Long	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
pf	yes	yes
,	no	no
id	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setKeyMarshaller	no	yes
(	no	no
LongMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setValueMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
count	no	yes
=	no	no
5000	no	no
;	no	no
final	no	yes
int	no	yes
reps	no	yes
=	no	no
2	no	no
;	no	no
final	no	yes
long	no	yes
[	no	no
]	no	no
diffs	no	yes
=	no	no
new	no	yes
long	no	yes
[	no	no
reps	no	yes
]	no	no
;	no	no
long	no	yes
keyVal	no	yes
=	no	no
0	no	no
;	no	no
final	no	yes
String	no	yes
payload	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
50	no	no
]	no	no
)	no	no
;	no	no

final	no	yes
long	no	yes
[	no	no
]	no	no
diffs	no	yes
=	no	no
new	no	yes
long	no	yes
[	no	no
reps	no	yes
]	no	no
;	no	no
long	no	yes
keyVal	no	yes
=	no	no
0	no	no
;	no	no
final	no	yes
String	no	yes
payload	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
50	no	no
]	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
pf	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
-	no	no
pf	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
pf	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
pf	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
reps	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
count	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
test	no	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
keyVal	no	yes
++	no	no
,	no	no
payload	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
long	no	yes
k	no	yes
=	no	no
keyVal	no	yes
-	no	no
count	no	yes
;	no	no
k	no	yes
<	no	no
keyVal	no	yes
;	no	no
k	no	yes
++	no	no
)	no	no
{	no	no
test	no	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
k	no	yes
)	no	no
;	no	no
}	no	no
test	no	yes
.	no	no
clear	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
diffs	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
pf	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
-	no	no
pf	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testListIndexConsistancyOverTime	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
NUM_ITERATIONS	yes	yes
=	no	no
50	no	no
;	no	no
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
getDirectory	no	yes
(	no	no
)	no	no
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setPageSize	no	yes
(	no	no
4	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setWriteBatchSize	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
id	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
.	no	no
getPageId	no	yes
(	no	no
)	no	no
;	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
test	no	yes
=	no	no
new	no	yes
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
pf	no	yes
,	no	no
id	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setKeyMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setValueMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
expectedListEntries	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
nextSequenceId	no	yes
=	no	no
0	no	no
;	no	no

int	no	yes
startSequenceId	no	yes
=	no	no
nextSequenceId	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
concat	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
nextSequenceId	no	yes
++	no	no
)	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
exerciseAnotherIndex	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
exerciseAnotherIndex	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testPruning	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
createPageFileAndIndex	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
index	no	yes
=	no	no
(	no	no
(	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
)	no	no
this	no	yes
.	no	no
index	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
index	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
pageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
pageCount	yes	yes
)	no	no
;	no	no
long	no	yes
freePageCount	no	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
freePageCount	no	yes
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
doInsert	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
pageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
;	no	no

tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
pageCount	no	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
pageCount	no	yes
)	no	no
;	no	no
long	no	yes
freePageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
freePageCount	yes	yes
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
doInsert	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
pageCount	no	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageCount	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
pageCount	no	yes
>	no	no
1	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
doRemove	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
freePageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
pageCount	no	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageCount	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
pageCount	no	yes
>	no	no
1	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
doRemove	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
freePageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
freePageCount	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
freePageCount	yes	yes
,	no	no
freePageCount	yes	yes
>	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
doInsert	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
freePageCount	yes	yes
=	no	no
index	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
listIndex	no	yes
.	no	no
add	no	yes
(	no	no
tx	no	yes
,	no	no
key	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
(	no	no
long	no	yes
)	no	no
i	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
COUNT	yes	yes
+	no	no
+	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
listIndex	no	yes
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
removeCount	no	yes
=	no	no
0	no	no
;	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>>	no	no
iterator	no	yes
=	no	no
index	no	yes
.	no	no
iterator	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
iterator	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
removeCount	no	yes
++	no	no
;	no	no
}	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
COUNT	yes	yes
,	no	no
removeCount	no	yes
)	no	no
;	no	no

final	no	yes
int	no	yes
NUM_ITERATIONS	yes	yes
=	no	no
100	no	no
;	no	no
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
getDirectory	no	yes
(	no	no
)	no	no
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setPageSize	no	yes
(	no	no
4	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnablePageCaching	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
setWriteBatchSize	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
id	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
.	no	no
getPageId	no	yes
(	no	no
)	no	no
;	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
test	no	yes
=	no	no
new	no	yes
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
(	no	no
pf	no	yes
,	no	no
id	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setKeyMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setValueMarshaller	no	yes
(	no	no
SequenceSet	no	yes
.	no	no
Marshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
expectedListEntries	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
nextSequenceId	no	yes
=	no	no
0	no	no
;	no	no

int	no	yes
startSequenceId	no	yes
=	no	no
nextSequenceId	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
add	no	yes
(	no	no
nextSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
NUM_ITERATIONS	yes	yes
=	no	no
100	no	no
;	no	no
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
getDirectory	no	yes
(	no	no
)	no	no
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setPageSize	no	yes
(	no	no
4	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnablePageCaching	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
setWriteBatchSize	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
id	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
.	no	no
getPageId	no	yes
(	no	no
)	no	no
;	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
test	no	yes
=	no	no
new	no	yes
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
(	no	no
pf	no	yes
,	no	no
id	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setKeyMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setValueMarshaller	no	yes
(	no	no
SequenceSet	no	yes
.	no	no
Marshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
expectedListEntries	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
nextSequenceId	no	yes
=	no	no
0	no	no
;	no	no

int	no	yes
startSequenceId	no	yes
=	no	no
nextSequenceId	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
add	no	yes
(	no	no
nextSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
i	yes	yes
>=	no	no
0	no	no
;	no	no
--	no	no
i	yes	yes
)	no	no
{	no	no

test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
i	yes	yes
>=	no	no
0	no	no
;	no	no
--	no	no
i	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
NUM_ITERATIONS	yes	yes
=	no	no
100	no	no
;	no	no
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
getDirectory	no	yes
(	no	no
)	no	no
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setPageSize	no	yes
(	no	no
4	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnablePageCaching	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
setWriteBatchSize	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
id	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
.	no	no
getPageId	no	yes
(	no	no
)	no	no
;	no	no
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
test	no	yes
=	no	no
new	no	yes
ListIndex	no	yes
<	no	no
String	no	yes
,	no	no
SequenceSet	no	yes
>	no	no
(	no	no
pf	no	yes
,	no	no
id	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setKeyMarshaller	no	yes
(	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setValueMarshaller	no	yes
(	no	no
SequenceSet	no	yes
.	no	no
Marshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
test	no	yes
.	no	no
load	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
expectedListEntries	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
nextSequenceId	no	yes
=	no	no
0	no	no
;	no	no

int	no	yes
startSequenceId	no	yes
=	no	no
nextSequenceId	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
add	no	yes
(	no	no
nextSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
i	yes	yes
+=	no	no
2	no	no
)	no	no
{	no	no

test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
sequenceSet	no	yes
=	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
i	yes	yes
+=	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no
sequenceSet	no	yes
.	no	no
remove	no	yes
(	no	no
startSequenceId	no	yes
++	no	no
)	no	no
;	no	no
test	yes	yes
.	no	no
put	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
j	no	yes
)	no	no
,	no	no
sequenceSet	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
i	yes	yes
+=	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
--	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
get	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITERATIONS	no	yes
;	no	no
i	yes	yes
+=	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
remove	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
--	no	no
expectedListEntries	no	yes
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
NUM_ITERATIONS	no	yes
-	no	no
1	no	no
;	no	no
i	yes	yes
>	no	no
0	no	no
;	no	no
i	yes	yes
-=	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
test	yes	yes
.	no	no
containsKey	no	yes
(	no	no
tx	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
DataFile	no	yes
getCurrentDataFile	no	yes
(	no	no
int	no	yes
capacity	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
return	no	yes
currentDataFile	no	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getWriteBatchSize	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
4	no	no
*	no	no
1024	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
final	no	yes
ByteSequence	no	yes
byteSequence	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
ConcurrentLinkedQueue	no	yes
<	no	no
Location	no	yes
>	no	no
locations	no	yes
=	no	no
new	no	yes
ConcurrentLinkedQueue	no	yes
<	no	no
Location	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
HashSet	no	yes
<	no	no
CountDownLatch	no	yes
>	no	no
latches	yes	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
CountDownLatch	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<=	no	no
20	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Location	no	yes
location	no	yes
=	no	no
underTest	no	yes
.	no	no
storeItem	no	yes
(	no	no
byteSequence	no	yes
,	no	no
(	no	no
byte	no	yes
)	no	no
1	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
locations	no	yes
.	no	no
add	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
latches	yes	yes
.	no	no
add	no	yes
(	no	no
location	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
expected	no	yes
)	no	no
{	no	no
underTest	no	yes
.	no	no
shutdown	no	yes
=	no	no
false	no	yes
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testMaxFileLengthGrow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageStore	no	yes
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
8	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeBeforeChange	yes	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testMaxFileLengthGrow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageStore	no	yes
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
8	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeBeforeChange	no	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sizeBeforeChange	no	yes
)	no	no
;	no	no
store	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
6	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
verifyMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeAfterChange	yes	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testMaxFileLengthShrink	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageStore	no	yes
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
8	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeBeforeChange	yes	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testMaxFileLengthShrink	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageStore	no	yes
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
8	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeBeforeChange	no	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sizeBeforeChange	no	yes
)	no	no
;	no	no
store	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
messageStore	no	yes
=	no	no
createStore	no	yes
(	no	no
2	no	no
*	no	no
ONE_MB	no	yes
)	no	no
;	no	no
verifyMessages	no	yes
(	no	no
messageStore	no	yes
,	no	no
4	no	no
)	no	no
;	no	no
long	no	yes
sizeAfterChange	yes	yes
=	no	no
store	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
preallocationLatency	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TimeStatisticImpl	no	yes
sparse	yes	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
SPARSE_FILE	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
chunked_zeros	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
CHUNKED_ZEROS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
kernel	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
OS_KERNEL_COPY	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
preallocationLatency	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TimeStatisticImpl	no	yes
sparse	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
SPARSE_FILE	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
chunked_zeros	yes	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
CHUNKED_ZEROS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
kernel	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
OS_KERNEL_COPY	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sparse	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
preallocationLatency	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TimeStatisticImpl	no	yes
sparse	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
SPARSE_FILE	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
chunked_zeros	no	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
CHUNKED_ZEROS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeStatisticImpl	no	yes
kernel	yes	yes
=	no	no
executeTest	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationStrategy	no	yes
.	no	no
OS_KERNEL_COPY	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sparse	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
chunked_zeros	no	yes
)	no	no
;	no	no

File	no	yes
dataDirectory	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
+	no	no
randInt	no	yes
)	no	no
;	no	no
KahaDBStore	no	yes
store	no	yes
=	no	no
new	no	yes
KahaDBStore	no	yes
(	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
deleteAllMessages	no	yes
(	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
setDirectory	no	yes
(	no	no
dataDirectory	no	yes
)	no	no
;	no	no
store	no	yes
.	no	no
setPreallocationStrategy	no	yes
(	no	no
preallocationStrategy	no	yes
)	no	no
;	no	no
store	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
File	no	yes
journalLog	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDirectory	no	yes
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
journalLog	yes	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
FileInputStream	no	yes
is	no	yes
=	no	no
new	no	yes
FileInputStream	no	yes
(	no	no
journalLog	yes	yes
)	no	no
;	no	no
final	no	yes
FileChannel	no	yes
channel	yes	yes
=	no	no
is	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

return	no	yes
journalLog	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
FileInputStream	no	yes
is	no	yes
=	no	no
new	no	yes
FileInputStream	no	yes
(	no	no
journalLog	no	yes
)	no	no
;	no	no
final	no	yes
FileChannel	no	yes
channel	yes	yes
=	no	no
is	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
journalLog	no	yes
+	no	no
+	no	no
channel	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
journalLog	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
Journal	no	yes
.	no	no
DEFAULT_MAX_FILE_LENGTH	no	yes
==	no	no
channel	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
channel	yes	yes
.	no	no
position	no	yes
(	no	no
1	no	no
*	no	no
1024	no	no
*	no	no
1024	no	no
+	no	no
1	no	no
)	no	no
;	no	no
ByteBuffer	no	yes
buff	no	yes
=	no	no
ByteBuffer	no	yes
.	no	no
allocate	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
channel	yes	yes
.	no	no
read	no	yes
(	no	no
buff	no	yes
)	no	no
;	no	no
buff	no	yes
.	no	no
flip	no	yes
(	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
position	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0x00	no	yes
,	no	no
buff	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

pf	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pf2	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf2	no	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf2	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
pf2	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
freePages	yes	yes
=	no	no
pf2	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testBackgroundRecoveryIsThreadSafe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
PageFile	no	yes
pf	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
100000	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

PageFile	no	yes
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
100000	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pf2	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf2	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf2	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx2	no	yes
=	no	no
pf2	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
allocate	no	yes
(	no	no
100000	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
20	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Transaction	no	yes
txConcurrent	no	yes
=	no	no
pf2	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
Page	no	yes
page	no	yes
=	no	no
txConcurrent	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
t	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
page	no	yes
.	no	no
set	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
txConcurrent	no	yes
.	no	no
store	no	yes
(	no	no
page	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
txConcurrent	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
transactions	no	yes
.	no	no
add	no	yes
(	no	no
txConcurrent	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
pf2	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
freePages	yes	yes
=	no	no
pf2	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testBackgroundWillNotMarkEaslyPagesAsFree	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
PageFile	no	yes
pf	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
100000	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

PageFile	no	yes
pf	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
100000	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pf2	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf2	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf2	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx2	no	yes
=	no	no
pf2	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
allocate	no	yes
(	no	no
200	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pf2	no	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf2	no	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf2	no	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
Transaction	no	yes
tx2	no	yes
=	no	no
pf2	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
allocate	no	yes
(	no	no
200	no	no
)	no	no
;	no	no
tx2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf2	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Transaction	no	yes
tx3	no	yes
=	no	no
pf2	no	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
tx3	no	yes
.	no	no
allocate	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
pf2	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
freePages	yes	yes
=	no	no
pf2	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
;	no	no

log4jLogger	no	yes
.	no	no
addAppender	no	yes
(	no	no
appender	no	yes
)	no	no
;	no	no
log4jLogger	no	yes
.	no	no
setLevel	no	yes
(	no	no
Level	no	yes
.	no	no
DEBUG	no	yes
)	no	no
;	no	no
PageFile	no	yes
pf	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
pf	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
pagesToFree	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numberOfPages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
Page	no	yes
page	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
t	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
page	no	yes
.	no	no
set	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
page	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

Page	no	yes
page	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
t	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
page	no	yes
.	no	no
set	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
page	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
>=	no	no
numberOfPages	no	yes
/	no	no
2	no	no
)	no	no
{	no	no
pagesToFree	no	yes
.	no	no
add	no	yes
(	no	no
page	no	yes
.	no	no
getPageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
pf	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf	no	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pf2	yes	yes
=	no	no
new	no	yes
PageFile	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pf2	yes	yes
.	no	no
setEnableRecoveryFile	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
pf2	yes	yes
.	no	no
load	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf2	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Transaction	no	yes
tx	no	yes
=	no	no
pf2	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Long	no	yes
pageId	no	yes
:	no	no
pagesToFree	no	yes
)	no	no
{	no	no

for	no	yes
(	no	no
Long	no	yes
pageId	no	yes
:	no	no
pagesToFree	no	yes
)	no	no
{	no	no
tx	no	yes
.	no	no
free	no	yes
(	no	no
tx	no	yes
.	no	no
load	no	yes
(	no	no
pageId	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf2	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Transaction	no	yes
>	no	no
transactions	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	yes
totalFreePages	no	yes
=	no	no
numberOfPages	no	yes
/	no	no
2	no	no
;	no	no
int	no	yes
totalPages	no	yes
=	no	no
numberOfPages	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
20	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
tx	no	yes
=	no	no
pf2	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
Page	no	yes
page	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
t	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
page	no	yes
.	no	no
set	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
page	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
transactions	no	yes
.	no	no
add	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no

int	no	yes
totalPages	no	yes
=	no	no
numberOfPages	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
20	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
tx	no	yes
=	no	no
pf2	yes	yes
.	no	no
tx	no	yes
(	no	no
)	no	no
;	no	no
Page	no	yes
page	no	yes
=	no	no
tx	no	yes
.	no	no
allocate	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
t	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
page	no	yes
.	no	no
set	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
store	no	yes
(	no	no
page	no	yes
,	no	no
StringMarshaller	no	yes
.	no	no
INSTANCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
tx	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
transactions	no	yes
.	no	no
add	no	yes
(	no	no
tx	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
page	no	yes
.	no	no
getPageId	no	yes
(	no	no
)	no	no
<	no	no
numberOfPages	no	yes
)	no	no
{	no	no
totalFreePages	no	yes
--	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
totalPages	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pf2	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testGcDoneAtStop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
produceWithScheduledDelayAndConsume	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
jobSchedulerStore	no	yes
)	no	no
;	no	no
int	no	yes
numSchedulerFiles	no	yes
=	no	no
jobSchedulerStore	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
kahaDBPersistenceAdapter	no	yes
)	no	no
;	no	no
int	no	yes
numKahadbFiles	yes	yes
=	no	no
kahaDBPersistenceAdapter	no	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testNoGcAtStop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
produceWithScheduledDelayAndConsume	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
jobSchedulerStore	no	yes
)	no	no
;	no	no
int	no	yes
numSchedulerFiles	no	yes
=	no	no
jobSchedulerStore	no	yes
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
kahaDBPersistenceAdapter	no	yes
)	no	no
;	no	no
int	no	yes
numKahadbFiles	yes	yes
=	no	no
kahaDBPersistenceAdapter	no	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
int	no	yes
verifyFilesOnDisk	no	yes
(	no	no
File	no	yes
directory	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerService	no	yes
)	no	no
;	no	no

_stateChangeDispatcher	no	yes
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
_stateChangeDispatcher	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
synchronized	no	yes
(	no	no
_lock	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
_zk	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
changeState	no	yes
(	no	no
State	no	yes
.	no	no
NONE	no	yes
)	no	no
;	no	no
_zk	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
th	no	yes
=	no	no
getSendThread	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
th	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
th	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
_zk	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
process	no	yes
(	no	no
WatchedEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
deleteTheIndex	no	yes
(	no	no
LevelDBStore	no	yes
store	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
for	no	yes
(	no	no
String	no	yes
index	no	yes
:	no	no
store	no	yes
.	no	no
getLogDirectory	no	yes
(	no	no
)	no	no
.	no	no
list	no	yes
(	no	no
new	no	yes
FilenameFilter	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
accept	no	yes
(	no	no
File	no	yes
dir	yes	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

private	no	yes
int	no	yes
countLogFiles	no	yes
(	no	no
LevelDBStore	no	yes
store	no	yes
)	no	no
{	no	no
return	no	yes
store	no	yes
.	no	no
getLogDirectory	no	yes
(	no	no
)	no	no
.	no	no
list	no	yes
(	no	no
new	no	yes
FilenameFilter	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
accept	no	yes
(	no	no
File	no	yes
dir	yes	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

@	no	no
Ignore	no	yes
(	no	no
)	no	no
@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
1000	no	no
*	no	no
60	no	no
*	no	no
10	no	no
)	no	no
public	no	yes
void	no	yes
testAMQ4837viaJMX	no	yes
(	no	no
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

resetDirectories	no	yes
(	no	no
directories	no	yes
)	no	no
;	no	no
String	no	yes
playload	no	yes
=	no	no
createPlayload	no	yes
(	no	no
64	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
expected_list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
5	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
MasterLevelDBStore	no	yes
master	yes	yes
=	no	no
createMaster	no	yes
(	no	no
directories	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
CountDownFuture	no	yes
masterStart	no	yes
=	no	no
asyncStart	no	yes
(	no	no
master	yes	yes
)	no	no
;	no	no
SlaveLevelDBStore	no	yes
slave1	no	yes
=	no	no
createSlave	no	yes
(	no	no
master	yes	yes
,	no	no
directories	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
SlaveLevelDBStore	no	yes
slave2	no	yes
=	no	no
createSlave	no	yes
(	no	no
master	yes	yes
,	no	no
directories	no	yes
.	no	no
get	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
;	no	no
asyncStart	no	yes
(	no	no
slave2	no	yes
)	no	no
;	no	no
masterStart	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
j	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
master	yes	yes
)	no	no
;	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
slave1	no	yes
)	no	no
;	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
slave2	no	yes
)	no	no
;	no	no
}	no	no
MessageStore	no	yes
ms	no	yes
=	no	no
master	yes	yes
.	no	no
createQueueMessageStore	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
j	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
master	yes	yes
)	no	no
;	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
slave1	no	yes
)	no	no
;	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
slave2	no	yes
)	no	no
;	no	no
}	no	no
MessageStore	no	yes
ms	no	yes
=	no	no
master	yes	yes
.	no	no
createQueueMessageStore	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	yes	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TOTAL	no	yes
=	no	no
500	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
TOTAL	no	yes
*	no	no
0.10	no	no
)	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
100	no	no
*	no	no
i	no	yes
/	no	no
TOTAL	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
250	no	no
)	no	no
{	no	no
slave1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slave2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	yes	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TOTAL	no	yes
=	no	no
500	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
TOTAL	no	yes
*	no	no
0.10	no	no
)	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
100	no	no
*	no	no
i	no	yes
/	no	no
TOTAL	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
250	no	no
)	no	no
{	no	no
slave1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slave2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	yes	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
msgid	no	yes
=	no	no
+	no	no
j	no	yes
+	no	no
+	no	no
i	no	yes
;	no	no
addMessage	no	yes
(	no	no
ms	no	yes
,	no	no
msgid	no	yes
,	no	no
playload	no	yes
)	no	no
;	no	no
expected_list	no	yes
.	no	no
add	no	yes
(	no	no
msgid	no	yes
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TOTAL	no	yes
=	no	no
500	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
TOTAL	no	yes
*	no	no
0.10	no	no
)	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
100	no	no
*	no	no
i	no	yes
/	no	no
TOTAL	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
250	no	no
)	no	no
{	no	no
slave1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slave2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	yes	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
msgid	no	yes
=	no	no
+	no	no
j	no	yes
+	no	no
+	no	no
i	no	yes
;	no	no
addMessage	no	yes
(	no	no
ms	no	yes
,	no	no
msgid	no	yes
,	no	no
playload	no	yes
)	no	no
;	no	no
expected_list	no	yes
.	no	no
add	no	yes
(	no	no
msgid	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	yes	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
TOTAL	no	yes
*	no	no
0.10	no	no
)	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
100	no	no
*	no	no
i	no	yes
/	no	no
TOTAL	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
250	no	no
)	no	no
{	no	no
slave1	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slave2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	no	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
msgid	no	yes
=	no	no
+	no	no
j	no	yes
+	no	no
+	no	no
i	no	yes
;	no	no
addMessage	no	yes
(	no	no
ms	no	yes
,	no	no
msgid	no	yes
,	no	no
playload	no	yes
)	no	no
;	no	no
expected_list	no	yes
.	no	no
add	no	yes
(	no	no
msgid	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	no	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expected_list	no	yes
,	no	no
getMessages	no	yes
(	no	no
ms	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
master	no	yes
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
master	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

configureSlave	no	yes
(	no	no
node2	no	yes
,	no	no
node1	yes	yes
,	no	no
node2Dir	no	yes
)	no	no
;	no	no
SlaveLevelDBStore	no	yes
node3	no	yes
=	no	no
createSlave	no	yes
(	no	no
node1	yes	yes
,	no	no
node3Dir	no	yes
)	no	no
;	no	no
stores	no	yes
.	no	no
add	no	yes
(	no	no
node3	no	yes
)	no	no
;	no	no
asyncStart	no	yes
(	no	no
node2	no	yes
)	no	no
;	no	no
asyncStart	no	yes
(	no	no
node3	no	yes
)	no	no
;	no	no
masterStart	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
playload	no	yes
=	no	no
createPlayload	no	yes
(	no	no
64	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
MessageStore	no	yes
ms	no	yes
=	no	no
node1	yes	yes
.	no	no
createQueueMessageStore	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TOTAL	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
8	no	no
)	no	no
{	no	no
node3	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
msgid	no	yes
=	no	no
+	no	no
+	no	no
i	no	yes
;	no	no
addMessage	no	yes
(	no	no
ms	no	yes
,	no	no
msgid	no	yes
,	no	no
playload	no	yes
)	no	no
;	no	no

stores	no	yes
.	no	no
add	no	yes
(	no	no
node3	no	yes
)	no	no
;	no	no
asyncStart	no	yes
(	no	no
node2	yes	yes
)	no	no
;	no	no
asyncStart	no	yes
(	no	no
node3	no	yes
)	no	no
;	no	no
masterStart	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
playload	no	yes
=	no	no
createPlayload	no	yes
(	no	no
64	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
MessageStore	no	yes
ms	no	yes
=	no	no
node1	no	yes
.	no	no
createQueueMessageStore	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TOTAL	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TOTAL	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
8	no	no
)	no	no
{	no	no
node3	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
msgid	no	yes
=	no	no
+	no	no
+	no	no
i	no	yes
;	no	no
addMessage	no	yes
(	no	no
ms	no	yes
,	no	no
msgid	no	yes
,	no	no
playload	no	yes
)	no	no
;	no	no
expected_list	no	yes
.	no	no
add	no	yes
(	no	no
msgid	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

else	no	yes
{	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
env	yes	yes
=	no	no
new	no	yes
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
env	yes	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
INITIAL_CONTEXT_FACTORY	no	yes
,	no	no
initialContextFactoryName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
providerURL	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
env	yes	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
PROVIDER_URL	no	yes
,	no	no
providerURL	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LogLog	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
urlPkgPrefixes	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
env	yes	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
URL_PKG_PREFIXES	no	yes
,	no	no
urlPkgPrefixes	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
securityPrincipalName	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
env	yes	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_PRINCIPAL	no	yes
,	no	no
securityPrincipalName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
securityCredentials	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
env	yes	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_CREDENTIALS	no	yes
,	no	no
securityCredentials	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LogLog	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
onMQTTCommand	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
throws	no	yes
IOException	no	yes
,	no	no
JMSException	no	yes
{	no	no
switch	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
PINGREQ	no	yes
.	no	no
TYPE	no	yes
:	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
checkConnected	no	yes
(	no	no
)	no	no
;	no	no
sendToMQTT	no	yes
(	no	no
PING_RESP_FRAME	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
case	no	yes
CONNECT	no	yes
.	no	no
TYPE	no	yes
:	no	no
CONNECT	no	yes
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
onMQTTConnect	no	yes
(	no	no
connect	yes	yes
)	no	no
;	no	no

MQTTSubscription	no	yes
sub	no	yes
=	no	no
findSubscriptionStrategy	no	yes
(	no	no
)	no	no
.	no	no
getSubscription	no	yes
(	no	no
md	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
sub	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
MessageAck	no	yes
ack	no	yes
=	no	no
sub	no	yes
.	no	no
createMessageAck	no	yes
(	no	no
md	no	yes
)	no	no
;	no	no
PUBLISH	no	yes
publish	no	yes
=	no	no
sub	no	yes
.	no	no
createPublish	no	yes
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
switch	no	yes
(	no	no
publish	no	yes
.	no	no
qos	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	yes
AT_LEAST_ONCE	no	yes
:	no	no
case	no	yes
EXACTLY_ONCE	no	yes
:	no	no
publish	no	yes
.	no	no
dup	no	yes
(	no	no
publish	no	yes
.	no	no
dup	no	yes
(	no	no
)	no	no
?	no	no
true	no	yes
:	no	no
md	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
isRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
case	no	yes
AT_MOST_ONCE	no	yes
:	no	no
}	no	no
if	no	yes
(	no	no
ack	no	yes
!=	no	no
null	no	yes
&&	no	no
sub	no	yes
.	no	no
expectAck	no	yes
(	no	no
publish	no	yes
)	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
consumerAcks	no	yes
)	no	no
{	no	no
consumerAcks	no	yes
.	no	no
put	no	yes
(	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
,	no	no
ack	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
,	no	no
clientId	no	yes
,	no	no
connectionInfo	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
getMQTTTransport	no	yes
(	no	no
)	no	no
.	no	no
sendToMQTT	no	yes
(	no	no
publish	no	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ack	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
sub	no	yes
.	no	no
expectAck	no	yes
(	no	no
publish	no	yes
)	no	no
)	no	no
{	no	no
getMQTTTransport	no	yes
(	no	no
)	no	no
.	no	no
sendToActiveMQ	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
command	yes	yes
.	no	no
getDataStructureType	no	yes
(	no	no
)	no	no
==	no	no
ConnectionError	no	yes
.	no	no
DATA_STRUCTURE_TYPE	no	yes
)	no	no
{	no	no

void	no	yes
handleException	no	yes
(	no	no
Throwable	no	yes
exception	yes	yes
,	no	no
MQTTFrame	no	yes
command	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
command	no	yes
+	no	no
+	no	no
exception	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
deleteDurableQueues	no	yes
(	no	no
List	no	yes
<	no	no
ActiveMQQueue	no	yes
>	no	no
queues	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
ActiveMQQueue	no	yes
queue	yes	yes
:	no	no
queues	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testBadUserNameOrPasswordGetsConnAckWithErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setUserName	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testBadUserNameOrPasswordGetsConnAckWithErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setUserName	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	yes	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	yes	yes
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	no	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connAck	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
CONNACK	no	yes
.	no	no
Code	no	yes
.	no	no
CONNECTION_REFUSED_NOT_AUTHORIZED	no	yes
,	no	no
connAck	no	yes
.	no	no
code	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
failed	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
err	no	yes
)	no	no
{	no	no
failed	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
throw	no	yes
err	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

assertEquals	no	yes
(	no	no
ANONYMOUS	no	yes
,	no	no
new	no	yes
String	no	yes
(	no	no
msg	yes	yes
.	no	no
getTopic	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
ack	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
disconnect	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setVersion	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
qos	no	yes
=	no	no
connection	no	yes
.	no	no
subscribe	no	yes
(	no	no
new	no	yes
Topic	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
Topic	no	yes
(	no	no
NAMED	no	yes
,	no	no
QoS	no	yes
.	no	no
AT_MOST_ONCE	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
QoS	no	yes
.	no	no
AT_MOST_ONCE	no	yes
.	no	no
ordinal	no	yes
(	no	no
)	no	no
,	no	no
qos	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setUserName	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
BlockingConnection	no	yes
connectionPub	no	yes
=	no	no
mqttPub	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connectionPub	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
connectionPub	no	yes
.	no	no
publish	no	yes
(	no	no
NAMED	no	yes
,	no	no
NAMED	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
,	no	no
QoS	no	yes
.	no	no
AT_MOST_ONCE	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
msg	yes	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testInvalidClientIdGetCorrectErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testInvalidClientIdGetCorrectErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	yes	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	yes	yes
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	no	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connAck	no	yes
)	no	no
;	no	no
errorCode	no	yes
.	no	no
set	no	yes
(	no	no
connAck	no	yes
.	no	no
code	no	yes
(	no	no
)	no	no
.	no	no
ordinal	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
CONNACK	no	yes
.	no	no
Code	no	yes
.	no	no
CONNECTION_REFUSED_IDENTIFIER_REJECTED	no	yes
,	no	no
connAck	no	yes
.	no	no
code	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testBadCredentialExceptionGetsCorrectErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setUserName	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testBadCredentialExceptionGetsCorrectErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqttPub	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setUserName	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	yes	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	yes	yes
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

mqttPub	no	yes
.	no	no
setPassword	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errorCode	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
mqttPub	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
CONNACK	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
CONNACK	no	yes
connAck	no	yes
=	no	no
new	no	yes
CONNACK	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connAck	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connAck	no	yes
)	no	no
;	no	no
errorCode	no	yes
.	no	no
set	no	yes
(	no	no
connAck	no	yes
.	no	no
code	no	yes
(	no	no
)	no	no
.	no	no
ordinal	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
CONNACK	no	yes
.	no	no
Code	no	yes
.	no	no
CONNECTION_REFUSED_BAD_USERNAME_OR_PASSWORD	no	yes
,	no	no
connAck	no	yes
.	no	no
code	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testEmptyConnectBytes	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
CONNECT	no	yes
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
cleanSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connect	yes	yes
.	no	no
clientId	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
Buffer	no	yes
marshalled	no	yes
=	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayInputStream	no	yes
input	no	yes
=	no	no
new	no	yes
DataByteArrayInputStream	no	yes
(	no	no
marshalled	no	yes
)	no	no
;	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
!	no	no
frames	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
frames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frames	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConnectThenSubscribe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
CONNECT	no	yes
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
cleanSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connect	yes	yes
.	no	no
clientId	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
Buffer	no	yes
marshalled	no	yes
=	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayInputStream	no	yes
input	no	yes
=	no	no
new	no	yes
DataByteArrayInputStream	no	yes
(	no	no
marshalled	no	yes
)	no	no
;	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
!	no	no
frames	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
frames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frames	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

CONNECT	no	yes
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
cleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connect	yes	yes
.	no	no
clientId	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
userName	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
password	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
Buffer	no	yes
marshalled	no	yes
=	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayInputStream	no	yes
input	no	yes
=	no	no
new	no	yes
DataByteArrayInputStream	no	yes
(	no	no
marshalled	no	yes
)	no	no
;	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
!	no	no
frames	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
frames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
:	no	no
frames	no	yes
)	no	no
{	no	no
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

connect	yes	yes
.	no	no
cleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connect	yes	yes
.	no	no
clientId	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
userName	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
password	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
Buffer	no	yes
marshalled	no	yes
=	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayInputStream	no	yes
input	no	yes
=	no	no
new	no	yes
DataByteArrayInputStream	no	yes
(	no	no
marshalled	no	yes
)	no	no
;	no	no
int	no	yes
first	no	yes
=	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
/	no	no
2	no	no
;	no	no
int	no	yes
second	no	yes
=	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
first	no	yes
;	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
first	no	yes
)	no	no
;	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
second	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
!	no	no
frames	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
frames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frames	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

CONNECT	no	yes
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
cleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connect	yes	yes
.	no	no
clientId	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
userName	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
.	no	no
password	no	yes
(	no	no
new	no	yes
UTF8Buffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataByteArrayOutputStream	no	yes
output	no	yes
=	no	no
new	no	yes
DataByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
wireFormat	no	yes
.	no	no
marshal	no	yes
(	no	no
connect	yes	yes
.	no	no
encode	no	yes
(	no	no
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no
Buffer	no	yes
marshalled	no	yes
=	no	no
output	no	yes
.	no	no
toBuffer	no	yes
(	no	no
)	no	no
;	no	no
DataByteArrayInputStream	no	yes
input	no	yes
=	no	no
new	no	yes
DataByteArrayInputStream	no	yes
(	no	no
marshalled	no	yes
)	no	no
;	no	no
int	no	yes
size	no	yes
=	no	no
marshalled	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
size	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
codec	no	yes
.	no	no
parse	no	yes
(	no	no
input	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
!	no	no
frames	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
frames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connect	yes	yes
=	no	no
new	no	yes
CONNECT	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
frames	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
THREAD_COUNT	no	yes
=	no	no
16	no	no
;	no	no
final	no	yes
int	no	yes
CONNECTION_COUNT	no	yes
=	no	no
100	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
THREAD_COUNT	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
clientIdGemeratpr	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
CONNECTION_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
+	no	no
clientIdGemeratpr	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
BlockingConnection	no	yes
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
disconnect	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testDurableSubscriptionsAreRecovered	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MqttClient	no	yes
connection	no	yes
=	no	no
createClient	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
[	no	no
]	no	no
topics	yes	yes
=	no	no
{	no	no
,	no	no
,	no	no
}	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
topics	yes	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
doTestRetainedMessages	no	yes
(	no	no
String	no	yes
topicName	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
60	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
RETAIN	no	yes
=	no	no
;	no	no
final	no	yes
String	no	yes
TOPICA	no	yes
=	no	no
topicName	no	yes
;	no	no
final	no	yes
String	no	yes
[	no	no
]	no	no
clientIds	no	yes
=	no	no
{	no	no
null	no	yes
,	no	no
,	no	no
}	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
clientId	yes	yes
:	no	no
clientIds	no	yes
)	no	no
{	no	no
boolean	no	yes
cleanSession	yes	yes
=	no	no
!	no	no
.	no	no
equals	no	yes
(	no	no
clientId	yes	yes
)	no	no
;	no	no

msg	no	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
clientId	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
RETAIN	no	yes
,	no	no
new	no	yes
String	no	yes
(	no	no
msg	no	yes
.	no	no
getPayload	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
ack	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
disconnect	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
subscribe	no	yes
(	no	no
new	no	yes
Topic	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
Topic	no	yes
(	no	no
TOPICA	yes	yes
,	no	no
QoS	no	yes
.	no	no
AT_LEAST_ONCE	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
msg	no	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
clientId	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
RETAIN	no	yes
,	no	no
new	no	yes
String	no	yes
(	no	no
msg	no	yes
.	no	no
getPayload	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
ack	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testUniqueMessageIds	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
2	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
publishList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
2	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
publishList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	no	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
publishList	no	yes
.	no	no
add	no	yes
(	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testResendMessageId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
publishList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testResendMessageId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
publishList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	no	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
publishList	no	yes
.	no	no
add	no	yes
(	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
90	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testPacketIdGeneratorNonCleanSession	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
15	no	no
)	no	no
;	no	no
final	no	yes
Map	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
publishMap	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
90	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testPacketIdGeneratorNonCleanSession	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
15	no	no
)	no	no
;	no	no
final	no	yes
Map	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
publishMap	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	yes	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	yes	yes
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

final	no	yes
Map	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
publishMap	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	no	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
publishMap	no	yes
.	no	no
get	no	yes
(	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
publish	no	yes
.	no	no
dup	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
publishMap	no	yes
.	no	no
put	no	yes
(	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
,	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
90	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testPacketIdGeneratorCleanSession	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
[	no	no
]	no	no
cleanClientIds	no	yes
=	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
null	no	yes
}	no	no
;	no	no
final	no	yes
Map	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
publishMap	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
MQTT	no	yes
[	no	no
]	no	no
mqtts	no	yes
=	no	no
new	no	yes
MQTT	no	yes
[	no	no
cleanClientIds	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
cleanClientIds	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
15	no	no
)	no	no
;	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
90	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testPacketIdGeneratorCleanSession	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
[	no	no
]	no	no
cleanClientIds	no	yes
=	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
null	no	yes
}	no	no
;	no	no
final	no	yes
Map	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
publishMap	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
Short	no	yes
,	no	no
PUBLISH	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
MQTT	no	yes
[	no	no
]	no	no
mqtts	no	yes
=	no	no
new	no	yes
MQTT	no	yes
[	no	no
cleanClientIds	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
cleanClientIds	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
15	no	no
)	no	no
;	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	no	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	yes	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	yes	yes
.	no	no
decode	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setKeepAlive	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
15	no	no
)	no	no
;	no	no
mqtts	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no
PUBLISH	no	yes
publish	no	yes
=	no	no
new	no	yes
PUBLISH	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
publish	no	yes
.	no	no
decode	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
ProtocolException	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
publishMap	no	yes
.	no	no
get	no	yes
(	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
publish	no	yes
.	no	no
dup	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
publishMap	no	yes
.	no	no
put	no	yes
(	no	no
publish	no	yes
.	no	no
messageId	no	yes
(	no	no
)	no	no
,	no	no
publish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onSend	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testRepeatedLinkStealing	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
clientId	no	yes
=	no	no
;	no	no
final	no	yes
AtomicReference	no	yes
<	no	no
BlockingConnection	no	yes
>	no	no
oldConnection	no	yes
=	no	no
new	no	yes
AtomicReference	no	yes
<	no	no
BlockingConnection	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
TOPICA	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
10	no	no
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
10000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeWithZeroLengthTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	yes	yes
=	no	no
new	no	yes
Topic	no	yes
(	no	no
,	no	no
QoS	no	yes
.	no	no
EXACTLY_ONCE	no	yes
)	no	no
;	no	no
final	no	yes
BlockingConnection	no	yes
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
30	no	no
*	no	no
10000	no	no
)	no	no
public	no	yes
void	no	yes
testUnsubscribeWithZeroLengthTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	yes	yes
=	no	no
new	no	yes
Topic	no	yes
(	no	no
,	no	no
QoS	no	yes
.	no	no
EXACTLY_ONCE	no	yes
)	no	no
;	no	no
final	no	yes
BlockingConnection	no	yes
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no

mqtt	no	yes
.	no	no
setClientId	no	yes
(	no	no
)	no	no
;	no	no
mqtt	no	yes
.	no	no
setCleanSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
BlockingConnection	no	yes
connection	no	yes
=	no	no
mqtt	no	yes
.	no	no
blockingConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
Topic	no	yes
[	no	no
]	no	no
topics	no	yes
=	no	no
{	no	no
new	no	yes
Topic	no	yes
(	no	no
,	no	no
QoS	no	yes
.	no	no
EXACTLY_ONCE	no	yes
)	no	no
,	no	no
new	no	yes
Topic	no	yes
(	no	no
,	no	no
QoS	no	yes
.	no	no
EXACTLY_ONCE	no	yes
)	no	no
}	no	no
;	no	no
Topic	no	yes
[	no	no
]	no	no
wildcardTopic	no	yes
=	no	no
{	no	no
new	no	yes
Topic	no	yes
(	no	no
,	no	no
QoS	no	yes
.	no	no
AT_LEAST_ONCE	no	yes
)	no	no
}	no	no
;	no	no
connection	no	yes
.	no	no
subscribe	no	yes
(	no	no
wildcardTopic	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Topic	no	yes
topic	no	yes
:	no	no
topics	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
publish	no	yes
(	no	no
topic	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
payload	no	yes
,	no	no
QoS	no	yes
.	no	no
AT_LEAST_ONCE	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
int	no	yes
received	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
topics	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
received	no	yes
++	no	no
;	no	no
payload	no	yes
=	no	no
message	yes	yes
.	no	no
getPayload	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testActiveMQRecoveryPolicy	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
PolicyMap	no	yes
policyMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PolicyEntry	no	yes
policyEntry	no	yes
=	no	no
new	no	yes
PolicyEntry	no	yes
(	no	no
)	no	no
;	no	no
policyEntry	no	yes
.	no	no
setSubscriptionRecoveryPolicy	no	yes
(	no	no
new	no	yes
LastImageSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
policyMap	no	yes
.	no	no
put	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
policyEntry	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
policyMap	no	yes
)	no	no
;	no	no
MQTT	no	yes
mqtt	no	yes
=	no	no
createMQTTConnection	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
retain	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
nonretain	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
mqtt	no	yes
.	no	no
setTracer	no	yes
(	no	no
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
frame	yes	yes
.	no	no
messageType	no	yes
(	no	no
)	no	no
==	no	no
PUBLISH	no	yes
.	no	no
TYPE	no	yes
)	no	no
{	no	no

protected	no	yes
Tracer	no	yes
createTracer	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

final	no	yes
String	no	yes
topicName	no	yes
=	no	no
;	no	no
connection	no	yes
.	no	no
subscribe	no	yes
(	no	no
new	no	yes
Topic	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
Topic	no	yes
(	no	no
topicName	no	yes
,	no	no
QoS	no	yes
.	no	no
EXACTLY_ONCE	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
activeMQConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQConnection	no	yes
.	no	no
setUseRetroactiveConsumer	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
activeMQConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
s	no	yes
=	no	no
activeMQConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Queue	no	yes
consumerQ	no	yes
=	no	no
s	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
s	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerQ	no	yes
)	no	no
;	no	no
final	no	yes
MQTTClientProvider	no	yes
provider	no	yes
=	no	no
getMQTTClientProvider	no	yes
(	no	no
)	no	no
;	no	no
initializeConnection	no	yes
(	no	no
provider	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
RETAINED	no	yes
=	no	no
;	no	no
provider	no	yes
.	no	no
publish	no	yes
(	no	no
topicName	no	yes
,	no	no
RETAINED	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
,	no	no
EXACTLY_ONCE	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
message	no	yes
.	no	no
getPayload	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Session	no	yes
s	no	yes
=	no	no
activeMQConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Queue	no	yes
consumerQ	no	yes
=	no	no
s	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
s	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerQ	no	yes
)	no	no
;	no	no
final	no	yes
MQTTClientProvider	no	yes
provider	no	yes
=	no	no
getMQTTClientProvider	no	yes
(	no	no
)	no	no
;	no	no
initializeConnection	no	yes
(	no	no
provider	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
RETAINED	no	yes
=	no	no
;	no	no
provider	no	yes
.	no	no
publish	no	yes
(	no	no
topicName	no	yes
,	no	no
RETAINED	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
,	no	no
EXACTLY_ONCE	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
response	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
message	no	yes
.	no	no
getPayload	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
response	no	yes
)	no	no
;	no	no
ActiveMQMessage	no	yes
activeMQMessage	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
activeMQMessage	yes	yes
)	no	no
;	no	no
ByteSequence	no	yes
bs	no	yes
=	no	no
activeMQMessage	yes	yes
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
RETAINED	no	yes
,	no	no
new	no	yes
String	no	yes
(	no	no
bs	no	yes
.	no	no
data	no	yes
,	no	no
bs	no	yes
.	no	no
offset	no	yes
,	no	no
bs	no	yes
.	no	no
length	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
90000	no	no
)	no	no
public	no	yes
void	no	yes
testLotsOfClients	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
CLIENTS	yes	yes
=	no	no
Integer	no	yes
.	no	no
getInteger	no	yes
(	no	no
,	no	no
100	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
testClientIdSpecialChars	no	yes
(	no	no
int	no	yes
mqttVersion	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
void	no	yes
stop	no	yes
(	no	no
String	no	yes
pid	yes	yes
,	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

return	no	yes
(	no	no
(	no	no
XAConnection	no	yes
)	no	no
connection	yes	yes
)	no	no
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
connection	yes	yes
.	no	no
createSession	no	yes
(	no	no
key	no	yes
.	no	no
isTransacted	no	yes
(	no	no
)	no	no
,	no	no
key	no	yes
.	no	no
getAckMode	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
XAResource	no	yes
createXaResource	no	yes
(	no	no
PooledSession	no	yes
session	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
instanceof	no	no
XASession	no	yes
)	no	no
{	no	no
return	no	yes
(	no	no
(	no	no
XASession	no	yes
)	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
(	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
Connection	no	yes
wrap	no	yes
(	no	no
final	no	yes
Connection	no	yes
connection	yes	yes
)	no	no
{	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	yes	yes
)	no	no
.	no	no
addTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
setHasExpired	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
stopped	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
return	no	yes
connection	yes	yes
.	no	no
createSession	no	yes
(	no	no
key	no	yes
.	no	no
isTransacted	no	yes
(	no	no
)	no	no
,	no	no
key	no	yes
.	no	no
getAckMode	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
XAResource	no	yes
createXaResource	no	yes
(	no	no
PooledSession	no	yes
session	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
instanceof	no	no
XASession	no	yes
)	no	no
{	no	no
return	no	yes
(	no	no
(	no	no
XASession	no	yes
)	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
(	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
session	no	yes
.	no	no
getInternalSession	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
Connection	no	yes
wrap	no	yes
(	no	no
final	no	yes
Connection	no	yes
connection	yes	yes
)	no	no
{	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	yes	yes
)	no	no
.	no	no
addTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
setHasExpired	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
stopped	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	yes	yes
+	no	no
+	no	no
error	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
setInfo	no	yes
(	no	no
ActiveMQConnectionRequestInfo	no	yes
connectionRequestInfo	no	yes
)	no	no
{	no	no
info	yes	yes
=	no	no
connectionRequestInfo	no	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setClientid	no	yes
(	no	no
String	no	yes
clientid	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setServerUrl	no	yes
(	no	no
String	no	yes
url	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setTrustStore	no	yes
(	no	no
String	no	yes
trustStore	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setTrustStorePassword	no	yes
(	no	no
String	no	yes
trustStorePassword	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setKeyStore	no	yes
(	no	no
String	no	yes
keyStore	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setKeyStorePassword	no	yes
(	no	no
String	no	yes
keyStorePassword	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setKeyStoreKeyPassword	no	yes
(	no	no
String	no	yes
keyStoreKeyPassword	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setUserName	no	yes
(	no	no
String	no	yes
userid	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setOptimizeDurableTopicPrefetch	no	yes
(	no	no
Integer	no	yes
optimizeDurableTopicPrefetch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setDurableTopicPrefetch	no	yes
(	no	no
Integer	no	yes
durableTopicPrefetch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setInitialRedeliveryDelay	no	yes
(	no	no
Long	no	yes
value	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setMaximumRedeliveryDelay	no	yes
(	no	no
Long	no	yes
value	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setMaximumRedeliveries	no	yes
(	no	no
Integer	no	yes
value	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setQueueBrowserPrefetch	no	yes
(	no	no
Integer	no	yes
queueBrowserPrefetch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setQueuePrefetch	no	yes
(	no	no
Integer	no	yes
queuePrefetch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setRedeliveryBackOffMultiplier	no	yes
(	no	no
Double	no	yes
value	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setRedeliveryUseExponentialBackOff	no	yes
(	no	no
Boolean	no	yes
value	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setTopicPrefetch	no	yes
(	no	no
Integer	no	yes
topicPrefetch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setUseInboundSession	no	yes
(	no	no
Boolean	no	yes
useInboundSession	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
setUseSessionArgs	no	yes
(	no	no
Boolean	no	yes
useSessionArgs	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
e	yes	yes
)	no	no
;	no	no

this	no	yes
.	no	no
bootstrapContext	no	yes
=	no	no
bootstrapContext	no	yes
;	no	no
if	no	yes
(	no	no
brokerXmlConfig	no	yes
!=	no	no
null	no	yes
&&	no	no
brokerXmlConfig	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
brokerStartThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getContextClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setContextClassLoader	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getContextClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
ActiveMQResourceAdapter	no	yes
.	no	no
this	no	yes
)	no	no
{	no	no
broker	no	yes
=	no	no
BrokerFactory	no	yes
.	no	no
createBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
brokerXmlConfig	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
getServerUrl	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
setServerUrl	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
log	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
brokerXmlConfig	no	yes
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
XAResource	no	yes
[	no	no
]	no	no
getXAResources	no	yes
(	no	no
ActivationSpec	no	yes
[	no	no
]	no	no
activationSpecs	yes	yes
)	no	no
throws	no	yes
ResourceException	no	yes
{	no	no

synchronized	no	yes
(	no	no
runControlMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
runningFlag	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
runningFlag	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
workManager	no	yes
.	no	no
scheduleWork	no	yes
(	no	no
this	no	yes
,	no	no
WorkManager	no	yes
.	no	no
INDEFINITE	no	yes
,	no	no
null	no	yes
,	no	no
new	no	yes
WorkListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
workAccepted	no	yes
(	no	no
WorkEvent	no	yes
event	yes	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
event	yes	yes
)	no	no
;	no	no
}	no	no
public	no	yes
void	no	yes
workRejected	no	yes
(	no	no
WorkEvent	no	yes
event	yes	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
event	yes	yes
)	no	no
;	no	no
}	no	no
public	no	yes
void	no	yes
workStarted	no	yes
(	no	no
WorkEvent	no	yes
event	yes	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
event	yes	yes
)	no	no
;	no	no
}	no	no
public	no	yes
void	no	yes
workCompleted	no	yes
(	no	no
WorkEvent	no	yes
event	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
currentBatchSize	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no

currentBatchSize	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
register	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
session	no	yes
.	no	no
isRunning	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	no	yes
,	no	no
session	no	yes
.	no	no
getUnconsumedMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
register	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
session	no	yes
.	no	no
isRunning	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	no	yes
,	no	no
session	no	yes
.	no	no
getUnconsumedMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
log	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

else	no	yes
if	no	yes
(	no	no
session	no	yes
.	no	no
isRunning	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	no	yes
,	no	no
session	no	yes
.	no	no
getUnconsumedMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
log	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
unregister	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
runControlMutex	no	yes
)	no	no
{	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
stale	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
log	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
unregister	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
runControlMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
stale	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
runningFlag	no	yes
=	no	no
false	no	yes
;	no	no
pool	no	yes
.	no	no
removeFromPool	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no

if	no	yes
(	no	no
log	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
log	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
unregister	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
runControlMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
stale	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
runningFlag	no	yes
=	no	no
false	no	yes
;	no	no
pool	no	yes
.	no	no
removeFromPool	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
session	no	yes
.	no	no
hasUncomsumedMessages	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
runningFlag	no	yes
=	no	no
false	no	yes
;	no	no

}	no	no
else	no	yes
if	no	yes
(	no	no
log	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
InboundContextSupport	no	yes
.	no	no
unregister	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
runControlMutex	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
stale	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
runningFlag	no	yes
=	no	no
false	no	yes
;	no	no
pool	no	yes
.	no	no
removeFromPool	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
session	no	yes
.	no	no
hasUncomsumedMessages	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
runningFlag	no	yes
=	no	no
false	no	yes
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	yes
)	no	no
;	no	no
pool	no	yes
.	no	no
returnToPool	no	yes
(	no	no
this	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
afterDelivery	no	yes
(	no	no
ActiveMQSession	no	yes
session	no	yes
,	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
++	no	no
currentBatchSize	no	yes
>=	no	no
batchSize	no	yes
||	no	no
!	no	no
session	no	yes
.	no	no
hasUncomsumedMessages	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
currentBatchSize	no	yes
=	no	no
0	no	no
;	no	no
try	no	yes
{	no	no
endpoint	no	yes
.	no	no
afterDelivery	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
TransactionContext	no	yes
transactionContext	no	yes
=	no	no
session	no	yes
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
transactionContext	no	yes
!=	no	no
null	no	yes
&&	no	no
transactionContext	no	yes
.	no	no
isInLocalTransaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
useRAManagedTx	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

return	no	yes
null	no	yes
;	no	no
}	no	no
final	no	yes
ActiveMQSession	no	yes
session	no	yes
=	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
activeMQAsfEndpointWorker	no	yes
.	no	no
transacted	no	yes
,	no	no
acknowledge	no	yes
)	no	no
;	no	no
MessageEndpoint	no	yes
endpoint	no	yes
;	no	no
try	no	yes
{	no	no
int	no	yes
batchSize	no	yes
=	no	no
0	no	no
;	no	no
if	no	yes
(	no	no
activationSpec	no	yes
.	no	no
getEnableBatchBooleanValue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
batchSize	no	yes
=	no	no
activationSpec	no	yes
.	no	no
getMaxMessagesPerBatchIntValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
activationSpec	no	yes
.	no	no
isUseRAManagedTransactionEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
endpoint	no	yes
=	no	no
createEndpoint	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
return	no	yes
new	no	yes
ServerSessionImpl	no	yes
(	no	no
this	no	yes
,	no	no
session	no	yes
,	no	no
activeMQAsfEndpointWorker	no	yes
.	no	no
workManager	no	yes
,	no	no
endpoint	no	yes
,	no	no
true	no	yes
,	no	no
batchSize	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
endpoint	no	yes
=	no	no
createEndpoint	no	yes
(	no	no
new	no	yes
LocalAndXATransaction	no	yes
(	no	no
session	no	yes
.	no	no
getTransactionContext	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
new	no	yes
ServerSessionImpl	no	yes
(	no	no
this	no	yes
,	no	no
session	no	yes
,	no	no
activeMQAsfEndpointWorker	no	yes
.	no	no
workManager	no	yes
,	no	no
endpoint	no	yes
,	no	no
false	no	yes
,	no	no
batchSize	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
UnavailableException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

ss	yes	yes
=	no	no
getExistingServerSession	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
sessionLock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
ss	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
ss	yes	yes
;	no	no
}	no	no
ss	yes	yes
=	no	no
createServerSessionImpl	no	yes
(	no	no
)	no	no
;	no	no
sessionLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
ss	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
activeSessions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
&&	no	no
idleSessions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
JMSException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ss	yes	yes
=	no	no
getExistingServerSession	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
activeSessions	no	yes
.	no	no
add	no	yes
(	no	no
ss	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no

public	no	yes
void	no	yes
returnToPool	no	yes
(	no	no
ServerSessionImpl	no	yes
ss	yes	yes
)	no	no
{	no	no
sessionLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
activeSessions	no	yes
.	no	no
remove	no	yes
(	no	no
ss	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
ss	yes	yes
.	no	no
isStale	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
try	no	yes
{	no	no
ActiveMQSession	no	yes
session	no	yes
=	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
ss	yes	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
MessageDispatch	no	yes
>	no	no
l	no	yes
=	no	no
session	no	yes
.	no	no
getUnconsumedMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
isClosing	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
l	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
activeMQAsfEndpointWorker	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connection	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
MessageDispatch	no	yes
>	no	no
i	no	yes
=	no	no
l	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
MessageDispatch	no	yes
md	no	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
connection	no	yes
.	no	no
hasDispatcher	no	yes
(	no	no
md	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
dispatchToSession	no	yes
(	no	no
md	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
session	no	yes
,	no	no
md	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
md	no	yes
,	no	no
session	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
session	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
close	no	yes
(	no	no
)	no	no
{	no	no
closing	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	no	yes
)	no	no
;	no	no
int	no	yes
activeCount	yes	yes
=	no	no
closeSessions	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
activeCount	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAMQConnectionExecutorThreadCleanUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQResourceAdapter	no	yes
ra	yes	yes
=	no	no
new	no	yes
ActiveMQResourceAdapter	no	yes
(	no	no
)	no	no
;	no	no
ra	yes	yes
.	no	no
setServerUrl	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAMQConnectionExecutorThreadCleanUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQResourceAdapter	no	yes
ra	no	yes
=	no	no
new	no	yes
ActiveMQResourceAdapter	no	yes
(	no	no
)	no	no
;	no	no
ra	no	yes
.	no	no
setServerUrl	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ra	no	yes
.	no	no
getServerUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

public	no	yes
boolean	no	yes
hasActiveMQConnectionExceutorThread	no	yes
(	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
Thread	no	yes
>	no	no
threadSet	no	yes
=	no	no
Thread	no	yes
.	no	no
getAllStackTraces	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Thread	no	yes
>	no	no
iter	no	yes
=	no	no
threadSet	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
thread	yes	yes
=	no	no
(	no	no
Thread	no	yes
)	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
thread	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
AMQ_CONN_EXECUTOR_THREAD_NAME	no	yes
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testFailover	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUri	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQResourceAdapter	no	yes
adapter	no	yes
=	no	no
new	no	yes
ActiveMQResourceAdapter	no	yes
(	no	no
)	no	no
;	no	no
adapter	no	yes
.	no	no
setServerUrl	no	yes
(	no	no
brokerUri	no	yes
)	no	no
;	no	no
adapter	no	yes
.	no	no
start	no	yes
(	no	no
new	no	yes
StubBootstrapContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
messageDelivered	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
StubMessageEndpoint	no	yes
endpoint	no	yes
=	no	no
new	no	yes
StubMessageEndpoint	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
orderedReceipt	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
ORDER_PROP	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
afterDelivery	no	yes
(	no	no
)	no	no
throws	no	yes
ResourceException	no	yes
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
messageCount	yes	yes
==	no	no
2	no	no
)	no	no
{	no	no
xaresource	no	yes
.	no	no
end	no	yes
(	no	no
xid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMFAIL	no	yes
)	no	no
;	no	no
xaresource	no	yes
.	no	no
rollback	no	yes
(	no	no
xid	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
xaresource	no	yes
.	no	no
end	no	yes
(	no	no
xid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
xaresource	no	yes
.	no	no
prepare	no	yes
(	no	no
xid	no	yes
)	no	no
;	no	no
xaresource	no	yes
.	no	no
commit	no	yes
(	no	no
xid	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

will	no	yes
(	no	no
returnValue	no	yes
(	no	no
Boolean	no	yes
.	no	no
FALSE	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
messageActivationSpec	no	yes
)	no	no
.	no	no
isUseRAManagedTransactionEnabled	no	yes
(	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
returnValue	no	yes
(	no	no
Boolean	no	yes
.	no	no
TRUE	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
messageEndpointFactory	no	yes
)	no	no
.	no	no
createEndpoint	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
XAResource	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
returnValue	no	yes
(	no	no
messageEndpoint	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
workManager	no	yes
)	no	no
.	no	no
scheduleWork	no	yes
(	no	no
(	no	no
Work	no	yes
)	no	no
with	no	yes
(	no	no
Matchers	no	yes
.	no	no
instanceOf	no	yes
(	no	no
Work	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
long	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
ExecutionContext	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
WorkListener	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
new	no	yes
Action	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
Object	no	yes
invoke	no	yes
(	no	no
Invocation	no	yes
invocation	no	yes
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
invocation	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
invocation	no	yes
.	no	no
getParameter	no	yes
(	no	no
0	no	no
)	no	no
instanceof	no	no
ServerSessionImpl	no	yes
)	no	no
{	no	no
final	no	yes
ServerSessionImpl	no	yes
serverSession1	yes	yes
=	no	no
(	no	no
ServerSessionImpl	no	yes
)	no	no
invocation	no	yes
.	no	no
getParameter	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
serverSession1	yes	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no

messageCountRef	no	yes
.	no	no
set	no	yes
(	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
maxMessages	no	yes
)	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
senderDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
messageSent	yes	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
maxMessages	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
foundClosedSession	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
MessageDispatch	no	yes
messageDispatch	no	yes
=	no	no
new	no	yes
MessageDispatch	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQMessage	no	yes
message	no	yes
=	no	no
new	no	yes
ActiveMQTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setMessageId	no	yes
(	no	no
new	no	yes
MessageId	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
setBrokerSequenceId	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
messageDispatch	no	yes
.	no	no
setMessage	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messageDispatch	no	yes
.	no	no
setConsumerId	no	yes
(	no	no
new	no	yes
ConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ServerSessionImpl	no	yes
serverSession1	no	yes
=	no	no
null	no	yes
;	no	no

MessageDispatch	no	yes
messageDispatch	no	yes
=	no	no
new	no	yes
MessageDispatch	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQMessage	no	yes
message	no	yes
=	no	no
new	no	yes
ActiveMQTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setMessageId	no	yes
(	no	no
new	no	yes
MessageId	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
setBrokerSequenceId	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
messageDispatch	no	yes
.	no	no
setMessage	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messageDispatch	no	yes
.	no	no
setConsumerId	no	yes
(	no	no
new	no	yes
ConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ServerSessionImpl	no	yes
serverSession1	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
serverSession1	no	yes
=	no	no
(	no	no
ServerSessionImpl	no	yes
)	no	no
pool	no	yes
.	no	no
getServerSession	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQSession	no	yes
session1	no	yes
=	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
serverSession1	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
session1	no	yes
.	no	no
isClosed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
foundClosedSession	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
session1	no	yes
.	no	no
dispatch	no	yes
(	no	no
messageDispatch	no	yes
)	no	no
;	no	no
messageSent	yes	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
serverSession1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
debug	no	yes
(	no	no
String	no	yes
s	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
info	no	yes
(	no	no
String	no	yes
s	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
info	no	yes
(	no	no
String	no	yes
s	yes	yes
,	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
propertyName	no	yes
)	no	no
)	no	no
{	no	no
Element	no	yes
beanPropElement	no	yes
=	no	no
(	no	no
Element	no	yes
)	no	no
beanProp	no	yes
;	no	no
NodeList	no	yes
values	no	yes
=	no	no
beanPropElement	no	yes
.	no	no
getElementsByTagNameNS	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
k	no	yes
=	no	no
0	no	no
;	no	no
k	no	yes
<	no	no
values	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
k	no	yes
++	no	no
)	no	no
{	no	no
Node	no	yes
value	no	yes
=	no	no
values	no	yes
.	no	no
item	no	yes
(	no	no
k	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
value	no	yes
.	no	no
hasAttributes	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Node	no	yes
beanClassTypeNode	no	yes
=	no	no
value	no	yes
.	no	no
getAttributes	no	yes
(	no	no
)	no	no
.	no	no
getNamedItem	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
beanClassTypeNode	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
propertiesClazzes	yes	yes
.	no	no
add	no	yes
(	no	no
beanClassTypeNode	no	yes
.	no	no
getFirstChild	no	yes
(	no	no
)	no	no
.	no	no
getTextContent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
String	no	yes
value	no	yes
:	no	no
propertiesClazzes	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Object	no	yes
springBean	no	yes
=	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
loadClass	no	yes
(	no	no
value	no	yes
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
springBean	no	yes
instanceof	no	no
FactoryBean	no	yes
)	no	no
{	no	no
initialProperties	no	yes
.	no	no
putAll	no	yes
(	no	no
(	no	no
Properties	no	yes
)	no	no
FactoryBean	no	yes
.	no	no
class	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
)	no	no
null	no	yes
)	no	no
.	no	no
invoke	no	yes
(	no	no
springBean	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
value	yes	yes
.	no	no
hasAttributes	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Node	no	yes
beanClassTypeNode	no	yes
=	no	no
value	yes	yes
.	no	no
getAttributes	no	yes
(	no	no
)	no	no
.	no	no
getNamedItem	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
beanClassTypeNode	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
propertiesClazzes	no	yes
.	no	no
add	no	yes
(	no	no
beanClassTypeNode	no	yes
.	no	no
getFirstChild	no	yes
(	no	no
)	no	no
.	no	no
getTextContent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
String	no	yes
value	yes	yes
:	no	no
propertiesClazzes	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Object	no	yes
springBean	no	yes
=	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
loadClass	no	yes
(	no	no
value	yes	yes
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
springBean	no	yes
instanceof	no	no
FactoryBean	no	yes
)	no	no
{	no	no
initialProperties	no	yes
.	no	no
putAll	no	yes
(	no	no
(	no	no
Properties	no	yes
)	no	no
FactoryBean	no	yes
.	no	no
class	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
)	no	no
null	no	yes
)	no	no
.	no	no
invoke	no	yes
(	no	no
springBean	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
propertiesClazzes	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
Resource	no	yes
>	no	no
propResources	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
Resource	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
value	yes	yes
:	no	no
resources	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
value	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
String	no	yes
value	no	yes
:	no	no
propertiesClazzes	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Object	no	yes
springBean	no	yes
=	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
loadClass	no	yes
(	no	no
value	no	yes
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
springBean	no	yes
instanceof	no	no
FactoryBean	no	yes
)	no	no
{	no	no
initialProperties	no	yes
.	no	no
putAll	no	yes
(	no	no
(	no	no
Properties	no	yes
)	no	no
FactoryBean	no	yes
.	no	no
class	no	yes
.	no	no
getMethod	no	yes
(	no	no
,	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
)	no	no
null	no	yes
)	no	no
.	no	no
invoke	no	yes
(	no	no
springBean	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
propertiesClazzes	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
Resource	no	yes
>	no	no
propResources	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
Resource	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
value	no	yes
:	no	no
resources	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
!	no	no
value	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
propResources	no	yes
.	no	no
add	no	yes
(	no	no
Utils	no	yes
.	no	no
resourceFromString	no	yes
(	no	no
filter	no	yes
(	no	no
value	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
MalformedURLException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
value	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
Resource	no	yes
resource	yes	yes
:	no	no
propResources	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
applyModifications	no	yes
(	no	no
Resource	no	yes
configToMonitor	yes	yes
)	no	no
{	no	no
DtoBroker	no	yes
changed	no	yes
=	no	no
loadConfiguration	no	yes
(	no	no
configToMonitor	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
changed	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
currentConfiguration	no	yes
.	no	no
equals	no	yes
(	no	no
changed	no	yes
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
applyModifications	no	yes
(	no	no
Resource	no	yes
configToMonitor	no	yes
)	no	no
{	no	no
DtoBroker	no	yes
changed	no	yes
=	no	no
loadConfiguration	no	yes
(	no	no
configToMonitor	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
changed	no	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
currentConfiguration	yes	yes
.	no	no
equals	no	yes
(	no	no
changed	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
configToMonitor	no	yes
+	no	no
+	no	no
new	no	yes
Date	no	yes
(	no	no
lastModified	no	yes
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
applyModifications	no	yes
(	no	no
Resource	no	yes
configToMonitor	no	yes
)	no	no
{	no	no
DtoBroker	no	yes
changed	yes	yes
=	no	no
loadConfiguration	no	yes
(	no	no
configToMonitor	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
changed	yes	yes
!=	no	no
null	no	yes
&&	no	no
!	no	no
currentConfiguration	no	yes
.	no	no
equals	no	yes
(	no	no
changed	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
configToMonitor	no	yes
+	no	no
+	no	no
new	no	yes
Date	no	yes
(	no	no
lastModified	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filterPasswords	no	yes
(	no	no
currentConfiguration	no	yes
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
VirtualDestination	no	yes
newVirtualDest	no	yes
:	no	no
newVirtualDests	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
existingVirtualDests	no	yes
.	no	no
contains	no	yes
(	no	no
newVirtualDest	no	yes
)	no	no
)	no	no
{	no	no
addedVirtualDests	no	yes
.	no	no
add	no	yes
(	no	no
newVirtualDest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
VirtualDestination	no	yes
existingVirtualDest	no	yes
:	no	no
existingVirtualDests	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
newVirtualDests	no	yes
.	no	no
contains	no	yes
(	no	no
existingVirtualDest	no	yes
)	no	no
)	no	no
{	no	no
removedVirtualDests	no	yes
.	no	no
add	no	yes
(	no	no
existingVirtualDest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
virtualDestinationInterceptor	no	yes
.	no	no
setVirtualDestinations	no	yes
(	no	no
getVirtualDestinations	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
plugin	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
virtualDestinationInterceptor	no	yes
)	no	no
;	no	no
updatedExistingInterceptor	no	yes
=	no	no
true	no	yes
;	no	no
ConnectionContext	no	yes
connectionContext	no	yes
;	no	no
try	no	yes
{	no	no
connectionContext	no	yes
=	no	no
plugin	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getAdminConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
plugin	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
isUseVirtualDestSubs	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
VirtualDestination	no	yes
removedVirtualDest	yes	yes
:	no	no
removedVirtualDests	no	yes
)	no	no
{	no	no
plugin	no	yes
.	no	no
virtualDestinationRemoved	no	yes
(	no	no
connectionContext	no	yes
,	no	no
removedVirtualDest	yes	yes
)	no	no
;	no	no

}	no	no
}	no	no
for	no	yes
(	no	no
VirtualDestination	no	yes
existingVirtualDest	no	yes
:	no	no
existingVirtualDests	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
newVirtualDests	no	yes
.	no	no
contains	no	yes
(	no	no
existingVirtualDest	no	yes
)	no	no
)	no	no
{	no	no
removedVirtualDests	no	yes
.	no	no
add	no	yes
(	no	no
existingVirtualDest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
virtualDestinationInterceptor	no	yes
.	no	no
setVirtualDestinations	no	yes
(	no	no
getVirtualDestinations	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
plugin	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
virtualDestinationInterceptor	no	yes
)	no	no
;	no	no
updatedExistingInterceptor	no	yes
=	no	no
true	no	yes
;	no	no
ConnectionContext	no	yes
connectionContext	no	yes
;	no	no
try	no	yes
{	no	no
connectionContext	no	yes
=	no	no
plugin	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
getAdminConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
plugin	no	yes
.	no	no
getBrokerService	no	yes
(	no	no
)	no	no
.	no	no
isUseVirtualDestSubs	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
VirtualDestination	no	yes
removedVirtualDest	no	yes
:	no	no
removedVirtualDests	no	yes
)	no	no
{	no	no
plugin	no	yes
.	no	no
virtualDestinationRemoved	no	yes
(	no	no
connectionContext	no	yes
,	no	no
removedVirtualDest	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
removedVirtualDest	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
VirtualDestination	no	yes
addedVirtualDest	yes	yes
:	no	no
addedVirtualDests	no	yes
)	no	no
{	no	no
plugin	no	yes
.	no	no
virtualDestinationAdded	no	yes
(	no	no
connectionContext	no	yes
,	no	no
addedVirtualDest	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
exerciseVirtualTopic	no	yes
(	no	no
String	no	yes
prefix	no	yes
,	no	no
String	no	yes
topic	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createActiveMQConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQMessageConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
prefix	no	yes
+	no	no
topic	no	yes
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
exerciseCompositeQueue	no	yes
(	no	no
String	no	yes
dest	no	yes
,	no	no
String	no	yes
consumerQ	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createActiveMQConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQMessageConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
consumerQ	no	yes
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
exerciseFilteredCompositeQueue	no	yes
(	no	no
String	no	yes
dest	no	yes
,	no	no
String	no	yes
consumerDestination	no	yes
,	no	no
String	no	yes
acceptedHeaderValue	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createActiveMQConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQMessageConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
consumerDestination	no	yes
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
printDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
[	no	no
]	no	no
destinations	no	yes
=	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	yes	yes
:	no	no
destinations	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testUpdateNow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testUpdateNow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
String	no	yes
result	yes	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
String	no	yes
result	no	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
result	no	yes
,	no	no
result	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
propsAfter	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
propsAfter	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testUpdateFailedModParseError	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testUpdateFailedModParseError	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
String	no	yes
result	yes	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no

applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
String	no	yes
result	no	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
result	no	yes
,	no	no
result	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
propsAfter	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
propsAfter	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
String	no	yes
result	yes	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
result	yes	yes
,	no	no
result	yes	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
propsAfter	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
propsAfter	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
propsAfter	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
props	no	yes
.	no	no
get	no	yes
(	no	no
propOfInterest	no	yes
)	no	no
,	no	no
propsAfter	no	yes
.	no	no
get	no	yes
(	no	no
propOfInterest	no	yes
)	no	no
)	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
,	no	no
SLEEP	no	yes
)	no	no
;	no	no
result	yes	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testCanLoad	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
IOHelper	no	yes
.	no	no
getDefaultDataDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
brokerConfig	no	yes
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
brokerConfig	no	yes
,	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
applyNewConfig	no	yes
(	no	no
String	no	yes
configName	no	yes
,	no	no
String	no	yes
newConfigName	no	yes
,	no	no
long	no	yes
sleep	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Resource	no	yes
resource	no	yes
=	no	no
Utils	no	yes
.	no	no
resourceFromString	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
file	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
resource	no	yes
.	no	no
getFile	no	yes
(	no	no
)	no	no
,	no	no
configName	no	yes
+	no	no
)	no	no
;	no	no
FileOutputStream	no	yes
current	no	yes
=	no	no
new	no	yes
FileOutputStream	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
FileInputStream	no	yes
modifications	no	yes
=	no	no
new	no	yes
FileInputStream	no	yes
(	no	no
new	no	yes
File	no	yes
(	no	no
resource	no	yes
.	no	no
getFile	no	yes
(	no	no
)	no	no
,	no	no
newConfigName	no	yes
+	no	no
)	no	no
)	no	no
;	no	no
modifications	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
.	no	no
transferTo	no	yes
(	no	no
0	no	no
,	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
,	no	no
current	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
current	no	yes
.	no	no
getChannel	no	yes
(	no	no
)	no	no
.	no	no
force	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
current	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
modifications	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testModifiable	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testModifiable	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
assertNotEquals	no	yes
(	no	no
,	no	no
props	no	yes
.	no	no
get	no	yes
(	no	no
propOfInterest	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
result	yes	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no

applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
props	no	yes
)	no	no
;	no	no
assertNotEquals	no	yes
(	no	no
,	no	no
props	no	yes
.	no	no
get	no	yes
(	no	no
propOfInterest	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
result	no	yes
=	no	no
runtimeConfigurationView	no	yes
.	no	no
updateNow	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
result	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
propsAfter	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
propsAfter	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAddPropertyRefFromFileAsList	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAddPropertyRefFromFileAndBeanFactory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
brokerConfig	no	yes
=	no	no
;	no	no
applyNewConfig	no	yes
(	no	no
brokerConfig	no	yes
,	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
brokerConfig	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
RuntimeConfigurationBroker	no	yes
.	no	no
objectNamePropsAppendage	no	yes
)	no	no
;	no	no
RuntimeConfigurationViewMBean	no	yes
runtimeConfigurationView	no	yes
=	no	no
(	no	no
RuntimeConfigurationViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
RuntimeConfigurationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
String	no	yes
propOfInterest	no	yes
=	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
props	yes	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
IntrospectionSupport	no	yes
.	no	no
getProperties	no	yes
(	no	no
runtimeConfigurationView	no	yes
,	no	no
props	yes	yes
,	no	no
null	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
printDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
[	no	no
]	no	no
destinations	no	yes
=	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	yes	yes
:	no	no
destinations	no	yes
)	no	no
{	no	no

f	no	yes
.	no	no
setMaximumActiveSessionPerConnection	no	yes
(	no	no
maximumActive	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setConnectionFactory	no	yes
(	no	no
connectionFactory	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
pooledConnectionFactory	no	yes
=	no	no
f	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
t	yes	yes
,	no	no
t	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
pooledConnectionFactory	no	yes
==	no	no
null	no	yes
&&	no	no
transactionManager	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
XaPooledConnectionFactory	no	yes
f	no	yes
=	no	no
new	no	yes
XaPooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
f	no	yes
.	no	no
setTransactionManager	no	yes
(	no	no
(	no	no
TransactionManager	no	yes
)	no	no
transactionManager	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setMaxConnections	no	yes
(	no	no
maxConnections	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setMaximumActiveSessionPerConnection	no	yes
(	no	no
maximumActive	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setConnectionFactory	no	yes
(	no	no
connectionFactory	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
pooledConnectionFactory	no	yes
=	no	no
f	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no

LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
XaPooledConnectionFactory	no	yes
f	no	yes
=	no	no
new	no	yes
XaPooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
f	no	yes
.	no	no
setTransactionManager	no	yes
(	no	no
(	no	no
TransactionManager	no	yes
)	no	no
transactionManager	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setMaxConnections	no	yes
(	no	no
maxConnections	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setMaximumActiveSessionPerConnection	no	yes
(	no	no
maximumActive	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setConnectionFactory	no	yes
(	no	no
connectionFactory	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
pooledConnectionFactory	no	yes
=	no	no
f	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
t	yes	yes
,	no	no
t	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
pooledConnectionFactory	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
PooledConnectionFactory	no	yes
f	no	yes
=	no	no
new	no	yes
PooledConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
f	no	yes
.	no	no
setMaxConnections	no	yes
(	no	no
maxConnections	no	yes
)	no	no
;	no	no
f	no	yes
.	no	no
setMaximumActiveSessionPerConnection	no	yes
(	no	no
maximumActive	no	yes
)	no	no
;	no	no

protected	no	yes
ApplicationContext	no	yes
createApplicationContext	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
MalformedURLException	no	yes
{	no	no
Resource	no	yes
resource	yes	yes
=	no	no
Utils	no	yes
.	no	no
resourceFromString	no	yes
(	no	no
uri	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

public	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
String	no	yes
destName	no	yes
,	no	no
int	no	yes
msgNum	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
destName	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
msgNum	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
messageText	yes	yes
=	no	no
i	no	yes
+	no	no
;	no	no

while	no	yes
(	no	no
i	no	yes
++	no	no
<	no	no
10	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
(	no	no
long	no	yes
)	no	no
(	no	no
Math	no	yes
.	no	no
random	no	yes
(	no	no
)	no	no
*	no	no
SLEEP	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TransactionTemplate	no	yes
tt	no	yes
=	no	no
new	no	yes
TransactionTemplate	no	yes
(	no	no
this	no	yes
.	no	no
txManager	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
tt	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
TransactionCallbackWithoutResult	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doInTransactionWithoutResult	no	yes
(	no	no
TransactionStatus	no	yes
status	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
final	no	yes
String	no	yes
queue	yes	yes
:	no	no
QUEUES	no	yes
)	no	no
{	no	no
jmsTemplate	no	yes
.	no	no
send	no	yes
(	no	no
queue	yes	yes
+	no	no
+	no	no
AUDIT	yes	yes
,	no	no
new	no	yes
MessageCreator	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
Message	no	yes
createMessage	no	yes
(	no	no
Session	no	yes
session	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
return	no	yes
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
queue	yes	yes
+	no	no
+	no	no
BODY	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testRedelivery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

messageListenerContainer	no	yes
.	no	no
setReceiveTimeout	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
messageListenerContainer	no	yes
.	no	no
setRecoveryInterval	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
messageListenerContainer	no	yes
.	no	no
setAcceptMessagesWhileStopping	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
messageListenerContainer	no	yes
.	no	no
setCacheLevel	no	yes
(	no	no
DefaultMessageListenerContainer	no	yes
.	no	no
CACHE_NONE	no	yes
)	no	no
;	no	no
messageListenerContainer	no	yes
.	no	no
setSessionTransacted	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
messageListenerContainer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
(	no	no
message	yes	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
TextMessage	no	yes
textMessage	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	yes	yes
;	no	no
String	no	yes
text	yes	yes
=	no	no
textMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
messageDeliveryCount	yes	yes
=	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
JMSX_DELIVERY_COUNT	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messageDeliveryCount	yes	yes
>	no	no
1	no	no
)	no	no
{	no	no
messageRedelivered	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no

protected	no	yes
FrameTranslator	no	yes
findTranslator	no	yes
(	no	no
String	no	yes
header	yes	yes
,	no	no
ActiveMQDestination	no	yes
destination	no	yes
,	no	no
boolean	no	yes
advisory	no	yes
)	no	no
{	no	no
FrameTranslator	no	yes
translator	no	yes
=	no	no
frameTranslator	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
header	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
translator	no	yes
=	no	no
jmsFrameTranslators	no	yes
.	no	no
get	no	yes
(	no	no
header	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
translator	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
FrameTranslator	no	yes
findTranslator	no	yes
(	no	no
String	no	yes
header	yes	yes
,	no	no
ActiveMQDestination	no	yes
destination	no	yes
,	no	no
boolean	no	yes
advisory	no	yes
)	no	no
{	no	no
FrameTranslator	no	yes
translator	no	yes
=	no	no
frameTranslator	no	yes
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
header	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
translator	no	yes
=	no	no
jmsFrameTranslators	no	yes
.	no	no
get	no	yes
(	no	no
header	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
translator	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
header	yes	yes
)	no	no
;	no	no
translator	no	yes
=	no	no
(	no	no
FrameTranslator	no	yes
)	no	no
FRAME_TRANSLATOR_FINDER	no	yes
.	no	no
newInstance	no	yes
(	no	no
header	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
translator	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

try	no	yes
{	no	no
if	no	yes
(	no	no
header	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
translator	no	yes
=	no	no
jmsFrameTranslators	no	yes
.	no	no
get	no	yes
(	no	no
header	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
translator	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
header	no	yes
)	no	no
;	no	no
translator	no	yes
=	no	no
(	no	no
FrameTranslator	no	yes
)	no	no
FRAME_TRANSLATOR_FINDER	no	yes
.	no	no
newInstance	no	yes
(	no	no
header	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
translator	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
header	no	yes
)	no	no
;	no	no
jmsFrameTranslators	no	yes
.	no	no
put	no	yes
(	no	no
header	no	yes
,	no	no
translator	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
header	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
destination	no	yes
!=	no	no
null	no	yes
&&	no	no
(	no	no
advisory	no	yes
||	no	no
AdvisorySupport	no	yes
.	no	no
isAdvisoryTopic	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
translator	no	yes
=	no	no
new	no	yes
JmsFrameTranslator	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignore	yes	yes
)	no	no
{	no	no

else	no	yes
{	no	no
try	no	yes
{	no	no
hbReadInterval	yes	yes
=	no	no
(	no	no
Long	no	yes
.	no	no
parseLong	no	yes
(	no	no
keepAliveOpts	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
;	no	no
hbWriteInterval	yes	yes
=	no	no
Long	no	yes
.	no	no
parseLong	no	yes
(	no	no
keepAliveOpts	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NumberFormatException	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
ProtocolException	no	yes
(	no	no
+	no	no
heartBeatConfig	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
StompInactivityMonitor	no	yes
monitor	no	yes
=	no	no
this	no	yes
.	no	no
stompTransport	no	yes
.	no	no
getInactivityMonitor	no	yes
(	no	no
)	no	no
;	no	no
monitor	no	yes
.	no	no
setReadCheckTime	no	yes
(	no	no
(	no	no
long	no	yes
)	no	no
(	no	no
hbReadInterval	yes	yes
*	no	no
hbGracePeriodMultiplier	no	yes
)	no	no
)	no	no
;	no	no
monitor	no	yes
.	no	no
setInitialDelayTime	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
hbReadInterval	yes	yes
,	no	no
hbWriteInterval	yes	yes
)	no	no
)	no	no
;	no	no
monitor	no	yes
.	no	no
setWriteCheckTime	no	yes
(	no	no
hbWriteInterval	yes	yes
)	no	no
;	no	no
monitor	no	yes
.	no	no
startMonitoring	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
hbReadInterval	yes	yes
=	no	no
0	no	no
;	no	no
hbWriteInterval	yes	yes
=	no	no
0	no	no
;	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
t1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
1	no	no
==	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
connectionCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
15	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
200	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
doneConnect	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
ServerSocket	no	yes
socket	yes	yes
=	no	no
ServerSocketFactory	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
createServerSocket	no	yes
(	no	no
)	no	no
;	no	no
socket	yes	yes
.	no	no
setReuseAddress	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
InetAddress	no	yes
address	no	yes
=	no	no
InetAddress	no	yes
.	no	no
getLocalHost	no	yes
(	no	no
)	no	no
;	no	no
socket	yes	yes
.	no	no
bind	no	yes
(	no	no
new	no	yes
InetSocketAddress	no	yes
(	no	no
address	no	yes
,	no	no
listenPort	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnect	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectedNeverEncoded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectedNeverEncoded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
sessionHeader	no	yes
=	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
;	no	no
f	yes	yes
=	no	no
f	yes	yes
.	no	no
substring	no	yes
(	no	no
sessionHeader	no	yes
+	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectWithVersionOptions	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectWithValidFallback	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectWithInvalidFallback	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeartbeats	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeartbeatsDropsIdleConnection	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeartbeatsDropsIdleConnection	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeartbeatsKeepsConnectionOpen	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSendAfterMissingHeartbeat	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testRejectInvalidHeartbeats1	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testRejectInvalidHeartbeats2	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testRejectInvalidHeartbeats3	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeAndUnsubscribe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
StompFrame	no	yes
stompFrame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
stompFrame	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
stompFrame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
stompFrame	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeWithNoId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testUnsubscribeWithNoId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testAckMessageWithId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testAckMessageWithNoId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testAckMessageWithNoId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
received	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
ack	no	yes
=	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
StompFrame	no	yes
error	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeWithWildcardSubscription	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueBrowerSubscription	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
10	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
repsonse	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
repsonse	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
StompFrame	no	yes
message	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Stomp	no	yes
.	no	no
Responses	no	yes
.	no	no
MESSAGE	no	yes
,	no	no
message	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
SUBSCRIPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
StompFrame	no	yes
browseDone	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testNackMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeaderValuesAreNotWSTrimmed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSubOnTwoTopics	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
String	no	yes
domain	no	yes
=	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSubOnTwoTopics	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
String	no	yes
domain	no	yes
=	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSubFlow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
String	no	yes
domain	no	yes
=	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSubFlow	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
String	no	yes
domain	no	yes
=	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testMultipleDurableSubsWithOfflineMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
view	no	yes
=	no	no
getProxyToBroker	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testMultipleDurableSubsWithOfflineMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_1	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
view	no	yes
=	no	no
getProxyToBroker	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
view	no	yes
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no

receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
StompFrame	no	yes
message	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Stomp	no	yes
.	no	no
Responses	no	yes
.	no	no
MESSAGE	no	yes
,	no	no
message	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
SUBSCRIPTION	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no

frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
ackMode	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receivedFirst	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receivedFirst	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StompFrame	no	yes
receivedSecond	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receivedSecond	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
receivedSecond	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
receivedFirst	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
String	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTelnetStyleSends	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTelnetStyleSends	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
String	no	yes
send	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
send	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientAckWithoutAckId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientAckWithoutAckId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
received	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
ackId	no	yes
=	no	no
received	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
ackId	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
received	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
ackId	no	yes
=	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
ackId	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
ackId	no	yes
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientAck	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientAck	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
received	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
received	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
received	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
received	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientAckMultipleMessagesWithSingleAck	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
getProxyToQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
lastAckId	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
getProxyToQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
lastAckId	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
,	no	no
received	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
lastAckId	no	yes
=	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
lastAckId	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientIndividualAck	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClientIndividualAck	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
received	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
ACK_ID	no	yes
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testRepeatedClientIndividualAckInMultipleTransactions	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
50	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
50	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueBrowerSubscription	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
10	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
repsonse	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
repsonse	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
StompFrame	no	yes
message	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
Stomp	no	yes
.	no	no
Responses	no	yes
.	no	no
MESSAGE	no	yes
,	no	no
message	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
message	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Message	no	yes
.	no	no
SUBSCRIPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
StompFrame	no	yes
browseDone	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueBrowerNotInAutoAckMode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueBrowerNotInAutoAckMode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
browseDone	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSub	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
getProxyToBroker	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableSubAndUnSub	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerViewMBean	no	yes
view	no	yes
=	no	no
getProxyToBroker	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
getProxyToBroker	no	yes
(	no	no
)	no	no
.	no	no
getCurrentConnectionsCount	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
view	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeWithNoId	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSizeAndBrokerUsage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
int	no	yes
numK	no	yes
=	no	no
4	no	no
;	no	no
final	no	yes
byte	no	yes
[	no	no
]	no	no
bigPropContent	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
numK	no	yes
*	no	no
1024	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
bigPropContent	no	yes
,	no	no
Byte	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
bigProp	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
bigPropContent	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
int	no	yes
numK	no	yes
=	no	no
4	no	no
;	no	no
final	no	yes
byte	no	yes
[	no	no
]	no	no
bigPropContent	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
numK	no	yes
*	no	no
1024	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
bigPropContent	no	yes
,	no	no
Byte	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
bigProp	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
bigPropContent	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
usageStart	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
bigProp	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
repsonse	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
String	no	yes
bigProp	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
bigPropContent	no	yes
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
usageStart	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
bigProp	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StompFrame	no	yes
repsonse	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
repsonse	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
repsonse	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
long	no	yes
usageEnd	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
usageDiff	yes	yes
=	no	no
usageEnd	no	yes
-	no	no
usageStart	no	yes
;	no	no

private	no	yes
void	no	yes
doTestMessagesRetirementAfterTransactionAbortClientIndividualAckMode	no	yes
(	no	no
boolean	no	yes
nack	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
String	no	yes
begin	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
begin	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
ackIds	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestMessagesRetirementAfterTransactionAbortClientAckMode	no	yes
(	no	no
boolean	no	yes
nack	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
10	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
String	no	yes
begin	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
begin	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
ackIds	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestMixedAckNackWithMessageAckIds	no	yes
(	no	no
boolean	no	yes
individual	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
20	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
MESSAGE_COUNT	no	yes
=	no	no
20	no	no
;	no	no
stompConnection	no	yes
.	no	no
setVersion	no	yes
(	no	no
Stomp	no	yes
.	no	no
V1_2	no	yes
)	no	no
;	no	no
String	no	yes
connect	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connect	no	yes
)	no	no
;	no	no
String	no	yes
f	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
f	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
+	no	no
(	no	no
individual	no	yes
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
n	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
subscribe	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
+	no	no
(	no	no
individual	no	yes
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
subscribe	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receipt	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
receipt	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
receiptId	no	yes
=	no	no
receipt	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receiptId	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
ackIds	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
n	no	yes
=	no	no
0	no	no
;	no	no
n	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
n	no	yes
++	no	no
)	no	no
{	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
f	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
f	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisoryJSON	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_JSON	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisoryJSON	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_JSON	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
f	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
f	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisoryXML	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_XML	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConnectionAdvisoryXML	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_XML	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
f	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
f	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testConsumerAdvisory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testProducerAdvisory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
mess	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
mess	no	yes
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testProducerAdvisoryXML	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_ADVISORY_XML	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_ADVISORY_XML	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
mess	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
mess	no	yes
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testProducerAdvisoryJSON	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_ADVISORY_JSON	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_ADVISORY_JSON	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
mess	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
mess	no	yes
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Queue	no	yes
query	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
STATS_DESTINATION_PREFIX	no	yes
+	no	no
testQueue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
replyTo	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
query	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
child	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
+	no	no
replyTo	no	yes
.	no	no
getTopicName	no	yes
(	no	no
)	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
begin	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationAdvisoryTempQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationAdvisoryTempQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationAdvisoryTempTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationAdvisoryTempTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationAdvisoryCompositeTempDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
subheaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
subheaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
[	no	no
]	no	no
topicSubscribers	no	yes
=	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subscription	yes	yes
:	no	no
topicSubscribers	no	yes
)	no	no
{	no	no

stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
connect	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Subscribe	no	yes
.	no	no
AckModeValues	no	yes
.	no	no
AUTO	no	yes
,	no	no
subheaders	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
frame	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
[	no	no
]	no	no
topicSubscribers	no	yes
=	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subscription	no	yes
:	no	no
topicSubscribers	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
[	no	no
]	no	no
topicSubscribers	no	yes
=	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subscription	no	yes
:	no	no
topicSubscribers	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
subscription	no	yes
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
StompFrame	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
f	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
f	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
f	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
20000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeToCompositeQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
destinationA	yes	yes
=	no	no
;	no	no
String	no	yes
destinationB	yes	yes
=	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
20000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeToCompositeQueueTrailersDefault	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
destinationA	yes	yes
=	no	no
;	no	no
String	no	yes
destinationB	yes	yes
=	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
20000	no	no
)	no	no
public	no	yes
void	no	yes
testSubscribeToCompositeTopics	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
destinationA	yes	yes
=	no	no
;	no	no
String	no	yes
destinationB	yes	yes
=	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSendMessageToCompositeQueueNoPrefixes	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
destinationA	no	yes
=	no	no
;	no	no
String	no	yes
destinationB	no	yes
=	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
destinationA	no	yes
+	no	no
+	no	no
destinationB	no	yes
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
brokerView	no	yes
=	no	no
getProxyToBroker	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ObjectName	no	yes
queueName	yes	yes
:	no	no
brokerView	no	yes
.	no	no
getQueues	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testEmptyDestinationOnSubscribe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
)	no	no
;	no	no
StompFrame	no	yes
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
send	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
send	no	yes
)	no	no
;	no	no
StompFrame	no	yes
receipt	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
test	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no

StompFrame	no	yes
frame	no	yes
=	no	no
connection	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
60	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
numReceived	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
&&	no	no
(	no	no
numReceived	no	yes
%	no	no
50	no	no
)	no	no
==	no	no
0	no	no
||	no	no
numReceived	no	yes
==	no	no
MSG_COUNT	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
frame	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
receiveCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
numReceived	no	yes
!=	no	no
MSG_COUNT	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
numReceived	no	yes
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
ready	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
started	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
frame	no	yes
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
ix	no	yes
=	no	no
0	no	no
;	no	no
ix	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
ix	no	yes
++	no	no
)	no	no
{	no	no

public	no	yes
String	no	yes
doTestProducerConsumer	no	yes
(	no	no
int	no	yes
index	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
StompConnection	no	yes
producer	no	yes
=	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
StompConnection	no	yes
consumer	no	yes
=	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
subscribe	no	yes
(	no	no
consumer	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
index	no	yes
)	no	no
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
index	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
StompFrame	no	yes
frame	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
String	no	yes
doTestProducerDurableConsumer	no	yes
(	no	no
int	no	yes
index	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
StompConnection	no	yes
producer	no	yes
=	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
StompConnection	no	yes
consumer	no	yes
=	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
subscribe	no	yes
(	no	no
consumer	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
index	no	yes
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
producer	no	yes
,	no	no
index	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
StompFrame	no	yes
frame	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testRemoveSubscriber	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
2000	no	no
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
idx	no	yes
=	no	no
0	no	no
;	no	no
idx	no	yes
<	no	no
2000	no	no
;	no	no
++	no	no
idx	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
idx	no	yes
)	no	no
;	no	no
}	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
receiveFrame	yes	yes
(	no	no
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
int	no	yes
messagesCount	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
count	no	yes
<	no	no
2	no	no
)	no	no
{	no	no
String	no	yes
receiveFrame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	yes	yes
(	no	no
)	no	no
;	no	no

String	no	yes
messageId	no	yes
=	no	no
getHeaderValue	no	yes
(	no	no
receiveFrame	yes	yes
,	no	no
HEADER_MESSAGE_ID	no	yes
)	no	no
;	no	no
String	no	yes
ackmessage	no	yes
=	no	no
+	no	no
HEADER_MESSAGE_ID	no	yes
+	no	no
+	no	no
messageId	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
ackmessage	no	yes
)	no	no
;	no	no
++	no	no
messagesCount	no	yes
;	no	no
++	no	no
count	no	yes
;	no	no
}	no	no
stompDisconnect	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
)	no	no
;	no	no
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
receiveFrame	yes	yes
(	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
count	no	yes
!=	no	no
2000	no	no
)	no	no
{	no	no

stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
count	no	yes
!=	no	no
2000	no	no
)	no	no
{	no	no
String	no	yes
receiveFrame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
receiveFrame	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
COMMAND_MESSAGE	no	yes
,	no	no
getCommand	no	yes
(	no	no
receiveFrame	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
messageId	no	yes
=	no	no
getHeaderValue	no	yes
(	no	no
receiveFrame	no	yes
,	no	no
HEADER_MESSAGE_ID	no	yes
)	no	no
;	no	no
String	no	yes
ackmessage	no	yes
=	no	no
+	no	no
HEADER_MESSAGE_ID	no	yes
+	no	no
+	no	no
messageId	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
ackmessage	no	yes
)	no	no
;	no	no
++	no	no
messagesCount	yes	yes
;	no	no
++	no	no
count	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCRLF	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
connector	yes	yes
:	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCRLF	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
connector	yes	yes
:	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connector	yes	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
port	no	yes
=	no	no
connector	yes	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
StompConnection	no	yes
stompConnection	no	yes
=	no	no
new	no	yes
StompConnection	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
open	no	yes
(	no	no
createSocket	no	yes
(	no	no
port	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCRLF11	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
connector	yes	yes
:	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCRLF11	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
connector	yes	yes
:	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connector	yes	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
port	no	yes
=	no	no
connector	yes	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
StompConnection	no	yes
stompConnection	no	yes
=	no	no
new	no	yes
StompConnection	no	yes
(	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
open	no	yes
(	no	no
createSocket	no	yes
(	no	no
port	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StompFrame	no	yes
msg	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
ackHeaders	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
ackHeaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
msg	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ackHeaders	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
StompFrame	no	yes
ack	no	yes
=	no	no
new	no	yes
StompFrame	no	yes
(	no	no
,	no	no
ackHeaders	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
ack	no	yes
.	no	no
format	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	yes	yes
,	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
500	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationSendXMLObject	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_OBJECT_XML	no	yes
+	no	no
+	no	no
xmlObject	no	yes
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationReceiveJSONObjectAndMap	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ObjectMessage	no	yes
objMessage	no	yes
=	no	no
session	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
new	no	yes
SamplePojo	no	yes
(	no	no
,	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
objMessage	no	yes
)	no	no
;	no	no
MapMessage	no	yes
mapMessage	no	yes
=	no	no
session	no	yes
.	no	no
createMapMessage	no	yes
(	no	no
)	no	no
;	no	no
mapMessage	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
mapMessage	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
mapMessage	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_JSON	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
json	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

mapMessage	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
mapMessage	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
mapMessage	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_JSON	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
json	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
json	yes	yes
)	no	no
;	no	no
SamplePojo	no	yes
pojo	no	yes
=	no	no
createObjectFromJson	no	yes
(	no	no
json	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
pojo	no	yes
.	no	no
getCity	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
pojo	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
json	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationSendAndReceiveXmlMap	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_XML	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_MAP_JSON	no	yes
+	no	no
+	no	no
jsonMap	no	yes
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
xmlFrame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationSendAndReceiveJsonMap	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_JSON	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_MAP_XML	no	yes
+	no	no
+	no	no
xmlMap	no	yes
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
json	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationReceiveXMLMap	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
MapMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMapMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_MAP_XML	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
xmlFrame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransformationReceiveJSONMap	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
MapMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMapMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
Transformations	no	yes
.	no	no
JMS_MAP_JSON	no	yes
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
StompFrame	no	yes
json	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestActiveMQReplyToTempDestination	no	yes
(	no	no
String	no	yes
type	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
void	no	yes
doTestActiveMQReplyToTempDestination	no	yes
(	no	no
String	no	yes
type	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
dest	yes	yes
=	no	no
+	no	no
type	no	yes
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
tempDest	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestActiveMQReplyToTempDestination	no	yes
(	no	no
String	no	yes
type	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
dest	no	yes
=	no	no
+	no	no
type	no	yes
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
tempDest	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
+	no	no
+	no	no
tempDest	yes	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
tempDest	yes	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	yes	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
dest	no	yes
=	no	no
+	no	no
type	no	yes
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
tempDest	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
+	no	no
+	no	no
tempDest	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
tempDest	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
dest	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no
String	no	yes
remoteReplyTo	yes	yes
=	no	no
received	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
remoteReplyTo	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
remoteReplyTo	yes	yes
.	no	no
startsWith	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
tempDest	no	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
dest	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
StompFrame	no	yes
received	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
String	no	yes
remoteReplyTo	no	yes
=	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
remoteReplyTo	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
remoteReplyTo	no	yes
.	no	no
startsWith	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
remoteReplyTo	no	yes
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
remoteReplyTo	no	yes
,	no	no
)	no	no
;	no	no
StompFrame	no	yes
reply	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
reply	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
reply	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
doReplyToAcrossConnections	no	yes
(	no	no
String	no	yes
type	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
void	no	yes
doReplyToAcrossConnections	no	yes
(	no	no
String	no	yes
type	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
StompConnection	no	yes
responder	no	yes
=	no	no
new	no	yes
StompConnection	no	yes
(	no	no
)	no	no
;	no	no
stompConnect	no	yes
(	no	no
responder	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
responder	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
responder	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
dest	yes	yes
=	no	no
+	no	no
type	no	yes
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
tempDest	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no

frame	no	yes
=	no	no
responder	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
dest	no	yes
=	no	no
+	no	no
type	no	yes
+	no	no
+	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
tempDest	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
+	no	no
+	no	no
tempDest	yes	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
subscribe	no	yes
(	no	no
tempDest	yes	yes
)	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
RECEIPT_REQUESTED	no	yes
,	no	no
)	no	no
;	no	no
responder	no	yes
.	no	no
subscribe	no	yes
(	no	no
dest	no	yes
,	no	no
null	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
responder	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
indexOf	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	yes	yes
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
RECEIPT_REQUESTED	no	yes
,	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
indexOf	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
properties	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
;	no	no
properties	no	yes
.	no	no
put	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
RECEIPT_REQUESTED	no	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
tempDest	no	yes
)	no	no
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
dest	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
indexOf	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
StompFrame	no	yes
received	yes	yes
=	no	no
responder	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no
String	no	yes
remoteReplyTo	yes	yes
=	no	no
received	yes	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
remoteReplyTo	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
remoteReplyTo	yes	yes
.	no	no
startsWith	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
dest	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
frame	no	yes
,	no	no
frame	no	yes
.	no	no
indexOf	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Response	no	yes
.	no	no
RECEIPT_ID	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
StompFrame	no	yes
received	no	yes
=	no	no
responder	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
String	no	yes
remoteReplyTo	no	yes
=	no	no
received	no	yes
.	no	no
getHeaders	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
remoteReplyTo	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
remoteReplyTo	no	yes
.	no	no
startsWith	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
received	no	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
,	no	no
Stomp	no	yes
.	no	no
Headers	no	yes
.	no	no
Send	no	yes
.	no	no
REPLY_TO	no	yes
,	no	no
remoteReplyTo	no	yes
)	no	no
)	no	no
;	no	no
responder	no	yes
.	no	no
send	no	yes
(	no	no
remoteReplyTo	no	yes
,	no	no
)	no	no
;	no	no
StompFrame	no	yes
reply	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
reply	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
reply	yes	yes
.	no	no
getAction	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
reply	yes	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

stompConnect	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
frame	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	yes
gotMessage	no	yes
=	no	no
false	no	yes
;	no	no
boolean	no	yes
gotReceipt	no	yes
=	no	no
false	no	yes
;	no	no
char	no	yes
[	no	no
]	no	no
payload	no	yes
=	no	no
new	no	yes
char	no	yes
[	no	no
1024	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
payload	no	yes
,	no	no
'A'	no	no
)	no	no
;	no	no
String	no	yes
test	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
new	no	yes
String	no	yes
(	no	no
payload	no	yes
)	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
frame	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	yes	yes
)	no	no
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
gotMessage	no	yes
&&	no	no
!	no	no
gotReceipt	no	yes
)	no	no
{	no	no
frame	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testHeaderValuesAreTrimmed1_0	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectFrame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
connectFrame	no	yes
)	no	no
;	no	no
String	no	yes
f	yes	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
addTranportConnectors	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
isUseTcpConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
port	yes	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
port	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
isUseTcpConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
port	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
port	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
port	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
sslPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nioPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioPlusSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioSslPort	yes	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioSslPort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	yes
(	no	no
isUseSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
sslPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nioPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioPlusSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioSslPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nioSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseAutoConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
autoPort	yes	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
autoPort	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nioPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseNioPlusSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
nioSslPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nioSslPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nioSslPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseAutoConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
autoPort	no	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
autoPort	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
autoPort	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
isUseAutoSslConnector	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
connector	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
+	no	no
autoSslPort	yes	yes
+	no	no
getAdditionalConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSendMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
String	no	yes
frame	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
timestamp	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
TimeUnit	no	yes
.	no	no
DAYS	no	yes
.	no	no
toMillis	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
long	no	yes
expires	yes	yes
=	no	no
timestamp	yes	yes
+	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
evaluate	no	yes
(	no	no
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
repetitions	no	yes
&&	no	no
!	no	no
untilFailure	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
untilFailure	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageCount	no	yes
+	no	no
)	no	no
;	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
hasReceivedMessages	no	yes
(	no	no
messageCount	no	yes
)	no	no
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
long	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
if	no	yes
(	no	no
duration	no	yes
>=	no	no
maximumDuration	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
synchronized	no	yes
(	no	no
semaphore	no	yes
)	no	no
{	no	no
semaphore	no	yes
.	no	no
wait	no	yes
(	no	no
maximumDuration	no	yes
-	no	no
duration	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	yes
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

protected	no	yes
Destination	no	yes
createDestination	no	yes
(	no	no
String	no	yes
destName	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
String	no	yes
simpleName	no	yes
=	no	no
getSimpleName	no	yes
(	no	no
destName	yes	yes
)	no	no
;	no	no
byte	no	yes
destinationType	no	yes
=	no	no
getDestinationType	no	yes
(	no	no
destName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationType	no	yes
==	no	no
ActiveMQDestination	no	yes
.	no	no
QUEUE_TYPE	no	yes
)	no	no
{	no	no

protected	no	yes
Destination	no	yes
createTemporaryDestination	no	yes
(	no	no
String	no	yes
destName	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
byte	no	yes
destinationType	no	yes
=	no	no
getDestinationType	no	yes
(	no	no
destName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationType	no	yes
==	no	no
ActiveMQDestination	no	yes
.	no	no
TEMP_QUEUE_TYPE	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
destName	no	yes
)	no	no
;	no	no
TemporaryQueue	no	yes
temporaryQueue	yes	yes
=	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
args	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
arg	no	yes
=	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
if	no	yes
(	no	no
arg	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
||	no	no
arg	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
arg	no	yes
=	no	no
arg	no	yes
.	no	no
substring	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
index	no	yes
=	no	no
arg	no	yes
.	no	no
indexOf	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
key	no	yes
=	no	no
arg	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
index	no	yes
)	no	no
;	no	no
String	no	yes
val	no	yes
=	no	no
arg	no	yes
.	no	no
substring	no	yes
(	no	no
index	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
key	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
val	no	yes
.	no	no
endsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
val	no	yes
+=	no	no
;	no	no
}	no	no
configFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
val	no	yes
)	no	no
;	no	no
}	no	no
props	no	yes
.	no	no
setProperty	no	yes
(	no	no
key	no	yes
,	no	no
val	no	yes
)	no	no
;	no	no
}	no	no
Properties	no	yes
fileProps	no	yes
=	no	no
new	no	yes
Properties	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
configFile	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
MessageProducer	no	yes
createJmsProducer	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
jmsProducer	no	yes
=	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
createProducer	no	yes
(	no	no
dest	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
client	no	yes
.	no	no
getDeliveryMode	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
JmsProducerProperties	no	yes
.	no	no
DELIVERY_MODE_PERSISTENT	no	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
Destination	no	yes
createTemporaryDestination	no	yes
(	no	no
String	no	yes
destName	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
String	no	yes
simpleName	no	yes
=	no	no
getSimpleName	no	yes
(	no	no
destName	yes	yes
)	no	no
;	no	no
byte	no	yes
destinationType	no	yes
=	no	no
getDestinationType	no	yes
(	no	no
destName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destinationType	no	yes
==	no	no
ActiveMQDestination	no	yes
.	no	no
TEMP_QUEUE_TYPE	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
writeToXml	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
xmlFile	yes	yes
=	no	no
createXmlFile	no	yes
(	no	no
)	no	no
;	no	no
xmlFileWriter	no	yes
=	no	no
new	no	yes
PrintWriter	no	yes
(	no	no
new	no	yes
FileOutputStream	no	yes
(	no	no
xmlFile	yes	yes
)	no	no
)	no	no
;	no	no
writeXmlHeader	no	yes
(	no	no
)	no	no
;	no	no
writeXmlTestSettings	no	yes
(	no	no
)	no	no
;	no	no
writeXmlLogFile	no	yes
(	no	no
)	no	no
;	no	no
writeXmlPerfSummary	no	yes
(	no	no
)	no	no
;	no	no
writeXmlFooter	no	yes
(	no	no
)	no	no
;	no	no
xmlFileWriter	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
startSampler	no	yes
(	no	no
CountDownLatch	no	yes
completionLatch	no	yes
,	no	no
ClientRunBasis	no	yes
clientRunBasis	no	yes
,	no	no
long	no	yes
clientRunDuration	no	yes
)	no	no
{	no	no
Validate	no	yes
.	no	no
notNull	no	yes
(	no	no
clientRunBasis	no	yes
)	no	no
;	no	no
Validate	no	yes
.	no	no
notNull	no	yes
(	no	no
completionLatch	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
clientRunBasis	no	yes
==	no	no
ClientRunBasis	no	yes
.	no	no
time	no	yes
)	no	no
{	no	no
duration	yes	yes
=	no	no
(	no	no
duration	yes	yes
==	no	no
null	no	yes
)	no	no
?	no	no
clientRunDuration	no	yes
:	no	no
this	no	yes
.	no	no
duration	yes	yes
;	no	no
rampUpTime	yes	yes
=	no	no
(	no	no
rampUpTime	yes	yes
==	no	no
null	no	yes
)	no	no
?	no	no
(	no	no
duration	yes	yes
/	no	no
100	no	no
*	no	no
rampUpPercent	no	yes
)	no	no
:	no	no
this	no	yes
.	no	no
rampUpTime	yes	yes
;	no	no
rampDownTime	yes	yes
=	no	no
(	no	no
rampDownTime	yes	yes
==	no	no
null	no	yes
)	no	no
?	no	no
(	no	no
duration	yes	yes
/	no	no
100	no	no
*	no	no
rampDownPercent	no	yes
)	no	no
:	no	no
this	no	yes
.	no	no
rampDownTime	yes	yes
;	no	no
Validate	no	yes
.	no	no
isTrue	no	yes
(	no	no
duration	yes	yes
>=	no	no
(	no	no
rampUpTime	yes	yes
+	no	no
rampDownTime	yes	yes
)	no	no
,	no	no
+	no	no
rampDownTime	yes	yes
+	no	no
+	no	no
rampDownTime	yes	yes
+	no	no
+	no	no
duration	yes	yes
+	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testUseURIToSetUseClientIDPrefixOnConnectionFactory	no	yes
(	no	no
)	no	no
throws	no	yes
URISyntaxException	no	yes
,	no	no
JMSException	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
cf	no	yes
.	no	no
getClientIDPrefix	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientID	yes	yes
=	no	no
connection	no	yes
.	no	no
getClientID	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testGetBrokerName	no	yes
(	no	no
)	no	no
throws	no	yes
URISyntaxException	no	yes
,	no	no
JMSException	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
brokerName	yes	yes
=	no	no
connection	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertCreateConnection	no	yes
(	no	no
String	no	yes
uri	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
setPersistent	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setAdvisorySupport	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
addConnector	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
URI	no	yes
temp	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
URI	no	yes
currentURI	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
connector	no	yes
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
URI	no	yes
connectURI	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
temp	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getUserInfo	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
currentURI	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getQuery	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getFragment	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSerialization	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQMessageAuditNoSync	no	yes
audit	no	yes
=	no	no
new	no	yes
ActiveMQMessageAuditNoSync	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
bytes	yes	yes
=	no	no
serialize	no	yes
(	no	no
audit	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testSerialization	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQMessageAuditNoSync	no	yes
audit	no	yes
=	no	no
new	no	yes
ActiveMQMessageAuditNoSync	no	yes
(	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
bytes	no	yes
=	no	no
serialize	no	yes
(	no	no
audit	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
bytes	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
audit	no	yes
=	no	no
recover	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
MessageReference	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
MessageReference	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	yes	yes
=	no	no
0	no	no
;	no	no
j	yes	yes
<	no	no
1000	no	no
;	no	no
j	yes	yes
++	no	no
)	no	no
{	no	no
ProducerId	no	yes
pid	no	yes
=	no	no
new	no	yes
ProducerId	no	yes
(	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setConnectionId	no	yes
(	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setSessionId	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setValue	no	yes
(	no	no
j	yes	yes
)	no	no
;	no	no

ProducerId	no	yes
pid	no	yes
=	no	no
new	no	yes
ProducerId	no	yes
(	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setConnectionId	no	yes
(	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setSessionId	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
pid	no	yes
.	no	no
setValue	no	yes
(	no	no
j	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
j	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1000	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
MessageId	no	yes
id	no	yes
=	no	no
new	no	yes
MessageId	no	yes
(	no	no
)	no	no
;	no	no
id	no	yes
.	no	no
setProducerId	no	yes
(	no	no
pid	no	yes
)	no	no
;	no	no
id	no	yes
.	no	no
setProducerSequenceId	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
ActiveMQMessage	no	yes
msg	no	yes
=	no	no
new	no	yes
ActiveMQMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setMessageId	no	yes
(	no	no
id	no	yes
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
audit	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
msg	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
bytes	yes	yes
=	no	no
serialize	no	yes
(	no	no
audit	no	yes
)	no	no
;	no	no

id	no	yes
.	no	no
setProducerId	no	yes
(	no	no
pid	no	yes
)	no	no
;	no	no
id	no	yes
.	no	no
setProducerSequenceId	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
ActiveMQMessage	no	yes
msg	no	yes
=	no	no
new	no	yes
ActiveMQMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setMessageId	no	yes
(	no	no
id	no	yes
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
audit	no	yes
.	no	no
isDuplicate	no	yes
(	no	no
msg	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
bytes	yes	yes
=	no	no
serialize	no	yes
(	no	no
audit	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
bytes	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
audit	no	yes
=	no	no
recover	no	yes
(	no	no
bytes	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
250	no	no
==	no	no
0	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
MessageReference	no	yes
message	no	yes
:	no	no
list	no	yes
)	no	no
{	no	no
audit	no	yes
.	no	no
rollback	no	yes
(	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
list	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
bytes	yes	yes
=	no	no
serialize	no	yes
(	no	no
audit	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testGetBrokerName	no	yes
(	no	no
)	no	no
throws	no	yes
URISyntaxException	no	yes
,	no	no
JMSException	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
getXAConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
brokerName	yes	yes
=	no	no
connection	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testRollbackXaErrorCode	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
brokerName	no	yes
=	no	no
;	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
BrokerFactory	no	yes
.	no	no
createBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
+	no	no
brokerName	no	yes
)	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
getXAConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
XAConnection	no	yes
connection	no	yes
=	no	no
(	no	no
XAConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
session	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
resource	no	yes
.	no	no
rollback	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
expected	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertCreateConnection	no	yes
(	no	no
String	no	yes
uri	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
setPersistent	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
addConnector	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
URI	no	yes
temp	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
URI	no	yes
currentURI	no	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
connector	no	yes
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
URI	no	yes
connectURI	yes	yes
=	no	no
new	no	yes
URI	no	yes
(	no	no
temp	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getUserInfo	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
currentURI	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getQuery	no	yes
(	no	no
)	no	no
,	no	no
temp	no	yes
.	no	no
getFragment	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
Field	no	yes
field	no	yes
=	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getField	no	yes
(	no	no
attribute	yes	yes
)	no	no
;	no	no
field	no	yes
.	no	no
set	no	yes
(	no	no
this	no	yes
,	no	no
value	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
boolean	no	yes
found	no	yes
=	no	no
false	no	yes
;	no	no
String	no	yes
setterName	no	yes
=	no	no
+	no	no
attribute	yes	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
+	no	no
attribute	yes	yes
.	no	no
substring	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Method	no	yes
method	no	yes
:	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getMethods	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
setterName	no	yes
)	no	no
)	no	no
{	no	no
method	no	yes
.	no	no
invoke	no	yes
(	no	no
this	no	yes
,	no	no
value	yes	yes
)	no	no
;	no	no
found	no	yes
=	no	no
true	no	yes
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
!	no	no
found	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
NoSuchMethodError	no	yes
(	no	no
+	no	no
attribute	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testAsyncMessageExpiration	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ExecutorService	no	yes
executors	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
10L	no	yes
)	no	no
;	no	no
executors	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
failed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
count	yes	yes
<	no	no
30	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
count	yes	yes
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testMessageListenerWithConsumerCanBeStoppedConcurently	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicInteger	no	yes
counter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
closeDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
ActiveMQDestination	no	yes
.	no	no
QUEUE_TYPE	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
session	no	yes
,	no	no
destination	no	yes
,	no	no
2000	no	no
)	no	no
;	no	no
final	no	yes
ActiveMQMessageConsumer	no	yes
consumer	no	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
Map	no	yes
<	no	no
Thread	no	yes
,	no	no
Throwable	no	yes
>	no	no
exceptions	no	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedMap	no	yes
(	no	no
new	no	yes
HashMap	no	yes
<	no	no
Thread	no	yes
,	no	no
Throwable	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
setDefaultUncaughtExceptionHandler	no	yes
(	no	no
new	no	yes
UncaughtExceptionHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
uncaughtException	no	yes
(	no	no
Thread	no	yes
t	no	yes
,	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testMessageListenerOnMessageCloseUnackedWithPrefetch1StayInQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicInteger	no	yes
counter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
sendDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
got2Done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getPrefetchPolicy	no	yes
(	no	no
)	no	no
.	no	no
setAll	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setOptimizedMessageDispatch	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ackMode	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
destinationType	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no

public	no	yes
void	no	yes
testMessageListenerAutoAckOnCloseWithPrefetch1	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicInteger	no	yes
counter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
sendDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
got2Done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getPrefetchPolicy	no	yes
(	no	no
)	no	no
.	no	no
setAll	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setOptimizedMessageDispatch	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ackMode	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
destinationType	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no

public	no	yes
void	no	yes
testRedeliverNewSession	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
text	yes	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

public	no	yes
boolean	no	yes
waitForBridgeFormation	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
int	no	yes
bridgeIndex	no	yes
,	no	no
long	no	yes
wait	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
broker	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
activeCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
NetworkBridge	no	yes
bridge	yes	yes
:	no	no
broker	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bridgeIndex	no	yes
)	no	no
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
bridge	yes	yes
.	no	no
getRemoteBrokerName	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
final	no	yes
String	no	yes
name	yes	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerService	no	yes
broker	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
name	yes	yes
)	no	no
.	no	no
broker	no	yes
;	no	no
final	no	yes
TopicRegion	no	yes
topicRegion	no	yes
=	no	no
(	no	no
TopicRegion	no	yes
)	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getTopicRegion	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
name	yes	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
10000	no	no
)	no	no
public	no	yes
void	no	yes
testBrowsingExpiration	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
sendTestMessages	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
browserConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
browserConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
browsed	yes	yes
=	no	no
browse	no	yes
(	no	no
queue	no	yes
,	no	no
browserConnection	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MESSAGES_TO_SEND	no	yes
,	no	no
browsed	yes	yes
)	no	no
;	no	no
long	no	yes
begin	yes	yes
=	no	no
System	yes	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
browsed	yes	yes
!=	no	no
0	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
browsed	yes	yes
=	no	no
browse	no	yes
(	no	no
queue	no	yes
,	no	no
browserConnection	no	yes
)	no	no
;	no	no

private	no	yes
int	no	yes
browse	no	yes
(	no	no
ActiveMQQueue	no	yes
queue	no	yes
,	no	no
Connection	no	yes
connection	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
browsed	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
TextMessage	no	yes
m	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
browsed	yes	yes
++	no	no
;	no	no

protected	no	yes
void	no	yes
sendTestMessages	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
prodConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
prodConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
prodSession	no	yes
=	no	no
prodConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
prodSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
TTL	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
MESSAGES_TO_SEND	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
msgStr	yes	yes
=	no	no
+	no	no
i	no	yes
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
prodSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
msgStr	yes	yes
)	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
[	no	no
]	no	no
outbound	no	yes
=	no	no
new	no	yes
TextMessage	no	yes
[	no	no
10	no	no
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
outbound	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
outbound	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
long	no	yes
concount	yes	yes
=	no	no
proxy	no	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
[	no	no
]	no	no
outbound	no	yes
=	no	no
new	no	yes
TextMessage	no	yes
[	no	no
10	no	no
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
outbound	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
outbound	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
long	no	yes
concount	no	yes
=	no	no
proxy	no	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
concount	no	yes
)	no	no
;	no	no
long	no	yes
messcount	yes	yes
=	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
i	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
long	no	yes
concount	no	yes
=	no	no
proxy	no	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
concount	no	yes
)	no	no
;	no	no
long	no	yes
messcount	no	yes
=	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messcount	no	yes
)	no	no
;	no	no
CompositeData	no	yes
[	no	no
]	no	no
compdatalist	no	yes
=	no	no
proxy	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
compdatalist	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
messageIDs	no	yes
=	no	no
new	no	yes
String	no	yes
[	no	no
compdatalist	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
compdatalist	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
CompositeData	no	yes
cdata	yes	yes
=	no	no
compdatalist	no	yes
[	no	no
i	yes	yes
]	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no

TabularData	no	yes
table	no	yes
=	no	no
proxy	no	yes
.	no	no
browseAsTable	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
table	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
table	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
compdatalist	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
table	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
outbound	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
i	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
messcount	no	yes
=	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messcount	no	yes
)	no	no
;	no	no
compdatalist	no	yes
=	no	no
proxy	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
compdatalist	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
table	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
compdatalist	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
outbound	no	yes
.	no	no
length	no	yes
,	no	no
table	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
outbound	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
outbound	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
messcount	no	yes
=	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messcount	no	yes
)	no	no
;	no	no
compdatalist	no	yes
=	no	no
proxy	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
compdatalist	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
messageIDs	no	yes
=	no	no
new	no	yes
String	no	yes
[	no	no
compdatalist	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
compdatalist	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testLargeNumberOfMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
int	no	yes
numberOfMessages	no	yes
=	no	no
4096	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numberOfMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
numberBrowsed	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
browsed	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testSendReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
testSendReceive	no	yes
(	no	no
)	no	no
;	no	no
messages	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
consumerDestination	yes	yes
=	no	no
consumeSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testDuplicate	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
queue	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
configureMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
deliveryMode	no	yes
=	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
;	no	no
topic	no	yes
=	no	no
false	no	yes
;	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
consumerDestination2	yes	yes
=	no	no
consumeSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestRedelivery	no	yes
(	no	no
String	no	yes
brokerUrl	no	yes
,	no	no
boolean	no	yes
interleaveProducer	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
interleaveProducer	no	yes
)	no	no
{	no	no
populateDestinationWithInterleavedProducer	no	yes
(	no	no
nbMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
populateDestination	no	yes
(	no	no
nbMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
{	no	no
AtomicInteger	no	yes
received	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
rolledback	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
received	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
nbMessages	no	yes
)	no	no
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
6000000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
&&	no	no
rolledback	no	yes
.	no	no
put	no	yes
(	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
Boolean	no	yes
.	no	no
TRUE	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

else	no	yes
{	no	no
populateDestination	no	yes
(	no	no
nbMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
{	no	no
AtomicInteger	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
rolledback	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
received	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
nbMessages	no	yes
)	no	no
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
6000000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
&&	no	no
rolledback	no	yes
.	no	no
put	no	yes
(	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
Boolean	no	yes
.	no	no
TRUE	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
populateDestinationWithInterleavedProducer	no	yes
(	no	no
nbMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
{	no	no
AtomicInteger	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
rolledback	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
received	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
nbMessages	no	yes
)	no	no
{	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
6000000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
&&	no	no
rolledback	no	yes
.	no	no
put	no	yes
(	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
Boolean	no	yes
.	no	no
TRUE	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
nbMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
{	no	no
AtomicInteger	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
rolledback	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
received	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
nbMessages	no	yes
)	no	no
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
6000000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
&&	no	no
rolledback	no	yes
.	no	no
put	no	yes
(	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
Boolean	no	yes
.	no	no
TRUE	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
received	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUrl	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
numMessages	no	yes
,	no	no
destinationName	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
{	no	no
AtomicInteger	no	yes
received	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
maxRetries	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
received	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
maxRetries	no	yes
)	no	no
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testSendReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
messages	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
Object	no	yes
>	no	no
copyOfMessages	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
receivedMessages	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
counter	no	yes
=	no	no
0	no	no
;	no	no
if	no	yes
(	no	no
data	no	yes
.	no	no
length	no	yes
!=	no	no
copyOfMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Object	no	yes
>	no	no
iter	no	yes
=	no	no
copyOfMessages	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
counter	no	yes
++	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
,	no	no
receivedMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
received	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
receivedMessages	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
String	no	yes
text	yes	yes
=	no	no
received	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
stringProperty	no	yes
=	no	no
received	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
intProperty	no	yes
=	no	no
received	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
consumeMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
,	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
messageList	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testConsumeExpiredQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
timeToLive	no	yes
)	no	no
;	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

messages	yes	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messages	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
received	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageCount	no	yes
+	no	no
1	no	no
,	no	no
messages	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
dlqMessages	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dlqMessages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
-	no	no
1	no	no
,	no	no
dlqMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationStatistics	no	yes
view	no	yes
=	no	no
getDestinationStatistics	no	yes
(	no	no
BrokerRegistry	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
findFirst	no	yes
(	no	no
)	no	no
,	no	no
ActiveMQDestination	no	yes
.	no	no
transform	no	yes
(	no	no
consumerDestination	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

public	no	yes
void	no	yes
testConsumeQueue	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testConsumeExpiredTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
timeToLive	no	yes
)	no	no
;	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testConsumeTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testSlowConsumerDoesNotBlockFastTempUsers	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
advisoryConnFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
advisoryConnFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
ok	yes	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
first	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
VMTransport	no	yes
t	no	yes
=	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
)	no	no
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
VMTransport	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
t	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
first	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
true	no	yes
,	no	no
false	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ok	yes	yes
.	no	no
set	no	yes
(	no	no
done	no	yes
.	no	no
await	no	yes
(	no	no
35	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
deliveryMode	no	yes
=	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
;	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
consumerDestination2	yes	yes
=	no	no
consumeSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumeSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

session	no	yes
=	no	no
connection	yes	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumeSession	no	yes
=	no	no
connection	yes	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerDestination	no	yes
+	no	no
+	no	no
producerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testRecover	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
text	yes	yes
=	no	no
;	no	no
Message	no	yes
sendMessage	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testSendAndReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
clientConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
clientConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
+	no	no
getSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
clientConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
clientConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyDestination	no	yes
=	no	no
createTemporaryDestination	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
clientSideClientID	yes	yes
=	no	no
clientConnection	no	yes
.	no	no
getClientID	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendAndReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
clientConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
clientConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
+	no	no
getSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
clientConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
clientConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyDestination	no	yes
=	no	no
createTemporaryDestination	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
clientSideClientID	no	yes
=	no	no
clientConnection	no	yes
.	no	no
getClientID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
clientSideClientID	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
requestProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
requestDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
requestMessage	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
requestMessage	yes	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
send	no	yes
(	no	no
requestMessage	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

clientConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyDestination	no	yes
=	no	no
createTemporaryDestination	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
clientSideClientID	no	yes
=	no	no
clientConnection	no	yes
.	no	no
getClientID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
clientSideClientID	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
requestProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
requestDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
requestMessage	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
requestMessage	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
replyDestination	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
send	no	yes
(	no	no
requestMessage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
requestMessage	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
replyConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
replyMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
requestMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
durable	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
durable	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerDestination	no	yes
+	no	no
+	no	no
producerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	yes	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerDestination	no	yes
)	no	no
;	no	no
producer	yes	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
durable	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
+	no	no
+	no	no
(	no	no
deliveryMode	no	yes
==	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	yes	yes
=	no	no
createSendSession	no	yes
(	no	no
sendConnection	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
createReceiveSession	no	yes
(	no	no
receiveConnection	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
createSendSession	no	yes
(	no	no
sendConnection	no	yes
)	no	no
;	no	no
receiveSession	yes	yes
=	no	no
createReceiveSession	no	yes
(	no	no
receiveConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
createSendSession	no	yes
(	no	no
sendConnection	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
createReceiveSession	no	yes
(	no	no
receiveConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	yes	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	yes	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
createSendSession	no	yes
(	no	no
sendConnection	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
createReceiveSession	no	yes
(	no	no
receiveConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
+	no	no
+	no	no
(	no	no
deliveryMode	no	yes
==	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
messages	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testLargeMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testLargeMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
msg	no	yes
=	no	no
producerSession	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
writeBytes	no	yes
(	no	no
largeMessageData	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
now	no	yes
+	no	no
60000	no	no
>	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
&&	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
MESSAGE_COUNT	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageCount	yes	yes
)	no	no
;	no	no
synchronized	no	yes
(	no	no
messageCount	yes	yes
)	no	no
{	no	no
messageCount	yes	yes
.	no	no
wait	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageCount	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
messageCount	yes	yes
,	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
validMessageConsumption	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no

setUp	no	yes
(	no	no
new	no	yes
VMPendingSubscriberMessageStoragePolicy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
consumerRegistered	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotAdvisory	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
advisoryIsGood	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ActiveMQTopic	no	yes
discardedAdvisoryDestination	no	yes
=	no	no
AdvisorySupport	no	yes
.	no	no
getMessageDiscardedAdvisoryTopic	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Session	no	yes
advisorySession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
advisorySession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
discardedAdvisoryDestination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
advisoriesReceived	no	yes
=	no	no
0	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

public	no	yes
void	no	yes
doTestMessageEvictionMemoryUsage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
doAck	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
ackDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
consumerRegistered	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
doAck	no	yes
.	no	no
await	no	yes
(	no	no
60	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
session	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
maxDeliveries	no	yes
=	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
received	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testQueueSessionListenerExceptionDlq	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
session	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
final	no	yes
Message	no	yes
[	no	no
]	no	no
dlqMessage	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
ActiveMQDestination	no	yes
dlqDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dlqDestination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotDlqMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

final	no	yes
Message	no	yes
[	no	no
]	no	no
dlqMessage	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
ActiveMQDestination	no	yes
dlqDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dlqDestination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotDlqMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
dlqMessage	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
message	yes	yes
;	no	no
gotDlqMessage	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
maxDeliveries	no	yes
=	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
maxDeliveries	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
maxDeliveries	no	yes
=	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
maxDeliveries	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
gotMessage	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
getTestName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
gotMessage	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
gotDlqMessage	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
message	no	yes
=	no	no
dlqMessage	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
String	no	yes
cause	yes	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
ActiveMQMessage	no	yes
.	no	no
DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testTransactedQueueSessionListenerExceptionDlq	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
+	no	no
getTestName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
session	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Message	no	yes
[	no	no
]	no	no
dlqMessage	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
ActiveMQDestination	no	yes
dlqDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dlqDestination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotDlqMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

final	no	yes
Message	no	yes
[	no	no
]	no	no
dlqMessage	no	yes
=	no	no
new	no	yes
Message	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
ActiveMQDestination	no	yes
dlqDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dlqDestination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotDlqMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
dlqMessage	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
message	yes	yes
;	no	no
gotDlqMessage	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
maxDeliveries	no	yes
=	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
gotMessage	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
maxDeliveries	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
(	no	no
ActiveMQConnectionFactory	no	yes
)	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
done	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
keepGoing	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
i	yes	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
while	no	yes
(	no	no
keepGoing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
++	no	no
i	yes	yes
)	no	no
)	no	no
;	no	no

int	no	yes
i	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
while	no	yes
(	no	no
keepGoing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
++	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
waitForBlockedOrResourceLimit	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
5	no	no
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no

factory	no	yes
.	no	no
setUseAsyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
done	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
keepGoing	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
i	yes	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
while	no	yes
(	no	no
keepGoing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
++	no	no
i	yes	yes
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
while	no	yes
(	no	no
keepGoing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
++	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
waitForBlockedOrResourceLimit	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
5	no	no
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testDisableWarning	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicInteger	no	yes
warnings	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
debugs	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

final	no	yes
AtomicBoolean	no	yes
done	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
keepGoing	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
fillerStarted	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicLong	no	yes
sent	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
i	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
while	no	yes
(	no	no
keepGoing	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
fillerStarted	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
oneKb	no	yes
+	no	no
++	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
10	no	no
==	no	no
0	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
sent	yes	yes
.	no	no
getAndAdd	no	yes
(	no	no
10	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
fillerStarted	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
waitForBlocked	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
received	yes	yes
<	no	no
sent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
received	yes	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
fillerStarted	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
waitForBlocked	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
received	yes	yes
<	no	no
sent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
received	yes	yes
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no

}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
fillerStarted	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
waitForBlocked	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
received	yes	yes
<	no	no
sent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
received	yes	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
+	no	no
+	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
fillerStarted	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
waitForBlocked	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
received	yes	yes
<	no	no
sent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
received	yes	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
+	no	no
+	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
fillerStarted	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
waitForBlocked	no	yes
(	no	no
done	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
received	yes	yes
<	no	no
sent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
received	yes	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
+	no	no
+	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
received	yes	yes
%	no	no
5	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
received	yes	yes
%	no	no
3	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testReconnectMultipleTimesWithSameClientID	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
jmx	no	yes
.	no	no
ManagedTransportConnection	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
event	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
failed	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
log4jLogger	no	yes
.	no	no
addAppender	no	yes
(	no	no
appender	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
useConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<	no	no
11	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
connection2	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
useConnection	no	yes
(	no	no
connection2	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InvalidClientIDException	no	yes
e	yes	yes
)	no	no
{	no	no

receivedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	no	yes
)	no	no
{	no	no
ignored	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
<=	no	no
maxRedeliveries	no	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
done	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
assertFalse	no	yes
(	no	no
,	no	no
done	no	yes
.	no	no
await	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
remove	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
TextMessage	no	yes
m	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
m	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
m	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
cause	yes	yes
=	no	no
m	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
ActiveMQMessage	no	yes
.	no	no
DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
connection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
XAResource	no	yes
xaResource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
xid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
xaResource	no	yes
.	no	no
start	no	yes
(	no	no
xid	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receiveThreadDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receiveLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
receiveThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
600000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
expected	yes	yes
)	no	no
{	no	no
receiveLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
connection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
XAResource	no	yes
xaResource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
xid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
xaResource	no	yes
.	no	no
start	no	yes
(	no	no
xid	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receiveThreadDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receiveLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
receiveThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
600000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
expected	yes	yes
)	no	no
{	no	no
receiveLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
Session	no	yes
createConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
String	no	yes
consumerText	yes	yes
=	no	no
+	no	no
(	no	no
++	no	no
consumerCounter	no	yes
)	no	no
;	no	no

protected	no	yes
Session	no	yes
createConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
String	no	yes
consumerText	yes	yes
=	no	no
+	no	no
(	no	no
++	no	no
consumerCounter	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerText	yes	yes
+	no	no
+	no	no
destination	no	yes
)	no	no
;	no	no
Session	no	yes
answer	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
answer	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testDestiationSourceHasInitialDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
DestinationSource	no	yes
destinationSource	no	yes
=	no	no
connection	no	yes
.	no	no
getDestinationSource	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ActiveMQQueue	no	yes
>	no	no
queues	yes	yes
=	no	no
destinationSource	no	yes
.	no	no
getQueues	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ActiveMQTopic	no	yes
>	no	no
topics	no	yes
=	no	no
destinationSource	no	yes
.	no	no
getTopics	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testDestiationSourceHasInitialDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
DestinationSource	no	yes
destinationSource	no	yes
=	no	no
connection	no	yes
.	no	no
getDestinationSource	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ActiveMQQueue	no	yes
>	no	no
queues	no	yes
=	no	no
destinationSource	no	yes
.	no	no
getQueues	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ActiveMQTopic	no	yes
>	no	no
topics	yes	yes
=	no	no
destinationSource	no	yes
.	no	no
getTopics	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queues	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testConsumerForcesNotificationOfNewDestination	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
newQueue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
newQueue	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
assertThat	no	yes
(	no	no
newQueue	no	yes
,	no	no
isIn	no	yes
(	no	no
newDestinations	yes	yes
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testProducerForcesNotificationOfNewDestination	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
newQueue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
newQueue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
assertThat	no	yes
(	no	no
newQueue	no	yes
,	no	no
isIn	no	yes
(	no	no
newDestinations	yes	yes
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
onDestinationEvent	no	yes
(	no	no
DestinationEvent	no	yes
event	no	yes
)	no	no
{	no	no
ActiveMQDestination	no	yes
destination	yes	yes
=	no	no
event	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
isAddOperation	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
Session	no	yes
createProducer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
String	no	yes
consumerText	yes	yes
=	no	no
+	no	no
(	no	no
++	no	no
consumerCounter	no	yes
)	no	no
;	no	no

protected	no	yes
MessageConsumer	no	yes
createConsumer	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
String	no	yes
consumerText	yes	yes
=	no	no
+	no	no
(	no	no
++	no	no
consumerCounter	no	yes
)	no	no
;	no	no

protected	no	yes
MessageConsumer	no	yes
createConsumer	no	yes
(	no	no
Destination	no	yes
dest	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
String	no	yes
consumerText	yes	yes
=	no	no
+	no	no
(	no	no
++	no	no
consumerCounter	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerText	yes	yes
+	no	no
+	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fileUrl	yes	yes
=	no	no
+	no	no
tmpDir	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

int	no	yes
counter	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
,	no	no
2000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
printer	no	yes
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
receiveCounter	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
counter	no	yes
++	no	no
;	no	no
Message	no	yes
extra	no	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
extra	no	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
,	no	no
0	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
msg	no	yes
=	no	no
extra	no	yes
;	no	no
printer	no	yes
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
receiveCounter	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
counter	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createAck	no	yes
(	no	no
consumerInfo	no	yes
,	no	no
msg	no	yes
,	no	no
counter	no	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
receiveCounter	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
consumeCount	no	yes
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
prodcuerCount	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
StubConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
StubConnection	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
ConnectionInfo	no	yes
connectionInfo	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfo	no	yes
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfo	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfo	no	yes
)	no	no
;	no	no
ProducerInfo	no	yes
producerInfo	no	yes
=	no	no
createProducerInfo	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
producerInfo	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
produceCount	no	yes
/	no	no
prodcuerCount	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
deliveryMode	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setResponseRequired	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestScheduledRedelivery	no	yes
(	no	no
int	no	yes
maxBrokerRedeliveriesToValidate	no	yes
,	no	no
boolean	no	yes
validateDLQ	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
consumerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
RedeliveryPolicy	no	yes
redeliveryPolicy	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
redeliveryPolicy	no	yes
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
redeliveryPolicy	no	yes
.	no	no
setMaximumRedeliveries	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setRedeliveryPolicy	no	yes
(	no	no
redeliveryPolicy	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no

redeliveryPolicy	no	yes
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
redeliveryPolicy	no	yes
.	no	no
setMaximumRedeliveries	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setRedeliveryPolicy	no	yes
(	no	no
redeliveryPolicy	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxBrokerRedeliveriesToValidate	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
shouldBeNull	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
+	no	no
shouldBeNull	no	yes
,	no	no
shouldBeNull	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
Message	no	yes
brokerRedeliveryMessage	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1500	no	no
)	no	no
;	no	no

final	no	yes
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
connectionCount	no	yes
=	no	no
400	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
threadId	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
connectionCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
innerId	yes	yes
=	no	no
threadId	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ExceptionListener	no	yes
listener	no	yes
=	no	no
new	no	yes
NioQueueSubscriptionTestListener	no	yes
(	no	no
innerId	yes	yes
,	no	no
exceptions	no	yes
,	no	no
LOG	no	yes
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
connection	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

final	no	yes
int	no	yes
innerId	no	yes
=	no	no
threadId	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ExceptionListener	no	yes
listener	no	yes
=	no	no
new	no	yes
NioQueueSubscriptionTestListener	no	yes
(	no	no
innerId	no	yes
,	no	no
exceptions	yes	yes
,	no	no
LOG	no	yes
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
connection	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
innerId	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
exceptions	yes	yes
.	no	no
put	no	yes
(	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
exceptions	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
verifyPresenceOfQueueMbean	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ObjectName	no	yes
name	yes	yes
:	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
queryNames	no	yes
(	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
verifyPresenceOfQueueMbean	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ObjectName	no	yes
name	yes	yes
:	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
queryNames	no	yes
(	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	yes	yes
)	no	no
;	no	no
String	no	yes
type	no	yes
=	no	no
name	yes	yes
.	no	no
getKeyProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
type	no	yes
!=	no	no
null	no	yes
&&	no	no
type	no	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
assertEquals	no	yes
(	no	no
JMXSupport	no	yes
.	no	no
encodeObjectNamePart	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQQueue	no	yes
)	no	no
createDestination	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
name	yes	yes
.	no	no
getKeyProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
1	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterRestartNoTx	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
false	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
true	no	yes
,	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
false	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
true	no	yes
,	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
true	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testDurableSubRedeliveryFlagAfterRestartNotSupported	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

TopicSubscriber	no	yes
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
false	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
durableSub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
true	no	yes
,	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
false	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
true	no	yes
,	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
false	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
true	no	yes
,	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
true	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterRecovery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
1	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Exception	no	yes
expectedException	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Exception	no	yes
expectedException	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
i	no	yes
<	no	no
4	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
expectedException	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
assertNotNull	no	yes
(	no	no
,	no	no
expectedException	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
safeCloseConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
safeCloseConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
true	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testValidateRedeliveryFlagAfterTransientFailureConnectionDrop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Exception	no	yes
expectedException	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Exception	no	yes
expectedException	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
i	no	yes
<	no	no
4	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
i	no	yes
<	no	no
4	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
expectedException	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
assertNotNull	no	yes
(	no	no
,	no	no
expectedException	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
safeCloseConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

}	no	no
assertNotNull	no	yes
(	no	no
,	no	no
expectedException	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
safeCloseConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
true	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no

populateDestination	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
,	no	no
connection	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
TcpTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
getTransportListener	no	yes
(	no	no
)	no	no
.	no	no
onException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

}	no	no
connection	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
TcpTransport	no	yes
.	no	no
class	no	yes
)	no	no
.	no	no
getTransportListener	no	yes
(	no	no
)	no	no
.	no	no
onException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
true	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
msg	yes	yes
.	no	no
getLongProperty	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertSenderConfig	no	yes
(	no	no
String	no	yes
config	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
context	no	yes
=	no	no
new	no	yes
ClassPathXmlApplicationContext	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
(	no	no
SpringConsumer	no	yes
)	no	no
context	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
(	no	no
SpringProducer	no	yes
)	no	no
context	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
producer	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
producer	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
messages	no	yes
=	no	no
consumer	no	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
iter	no	yes
=	no	no
messages	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Object	no	yes
message	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
XATransactionId	no	yes
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createPrepareTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Response	no	yes
response	no	yes
=	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
connectionInfo	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
TransactionInfo	no	yes
.	no	no
RECOVER	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
DataArrayResponse	no	yes
dar	no	yes
=	no	no
(	no	no
DataArrayResponse	no	yes
)	no	no
response	no	yes
;	no	no
assertEquals	no	yes
(	no	no
4	no	no
,	no	no
dar	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
instanceof	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
{	no	no
PersistenceAdapterViewMBean	no	yes
kahadbView	no	yes
=	no	no
getProxyToPersistenceAdapter	no	yes
(	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
txFromView	yes	yes
=	no	no
kahadbView	no	yes
.	no	no
getTransactions	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
request	no	yes
(	no	no
consumerInfo	yes	yes
.	no	no
createRemoveCommand	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
producerInfo	no	yes
=	no	no
createProducerInfo	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
producerInfo	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createRollbackTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
consumerInfoSet	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	yes	yes
:	no	no
destinationList	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createRollbackTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
consumerInfoSet	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	yes	yes
:	no	no
destinationList	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfo	no	yes
,	no	no
dest	yes	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
consumerInfoSet	no	yes
.	no	no
add	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	yes	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
consumerInfo	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createRollbackTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
consumerInfoSet	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	no	yes
:	no	no
destinationList	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfo	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
consumerInfoSet	no	yes
.	no	no
add	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
consumerInfo	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
dest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
consumerInfo	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
dest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MessageAck	no	yes
ack	no	yes
=	no	no
createAck	no	yes
(	no	no
consumerInfo	no	yes
,	no	no
message	yes	yes
,	no	no
numMessages	no	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createCommitTransaction1Phase	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
consumerInfoSet	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
info	no	yes
.	no	no
createRemoveCommand	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumerInfoSet	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
dest	yes	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MessageAck	no	yes
ack	no	yes
=	no	no
createAck	no	yes
(	no	no
consumerInfo	yes	yes
,	no	no
message	no	yes
,	no	no
numMessages	no	yes
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
)	no	no
;	no	no
ack	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
message	no	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createCommitTransaction1Phase	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
consumerInfoSet	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
info	no	yes
.	no	no
createRemoveCommand	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumerInfoSet	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
dataArrayResponse	no	yes
=	no	no
(	no	no
DataArrayResponse	no	yes
)	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
recoverInfo	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
dataArrayResponse	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
message	no	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

connection	no	yes
.	no	no
request	no	yes
(	no	no
ack	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createCommitTransaction1Phase	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
consumerInfoSet	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
info	no	yes
.	no	no
createRemoveCommand	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumerInfoSet	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
dataArrayResponse	no	yes
=	no	no
(	no	no
DataArrayResponse	no	yes
)	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
recoverInfo	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
dataArrayResponse	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	yes	yes
:	no	no
destinationList	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfo	no	yes
,	no	no
dest	yes	yes
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
XATransactionId	no	yes
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
consumerInfos	no	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
ConsumerInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	no	yes
:	no	no
destinationList	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfo	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
consumerInfos	no	yes
.	no	no
add	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
}	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
consumerInfos	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

TransactionInfo	no	yes
recoverInfo	no	yes
=	no	no
new	no	yes
TransactionInfo	no	yes
(	no	no
connectionInfo	no	yes
.	no	no
getConnectionId	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
TransactionInfo	no	yes
.	no	no
RECOVER	no	yes
)	no	no
;	no	no
DataArrayResponse	no	yes
dataArrayResponse	no	yes
=	no	no
(	no	no
DataArrayResponse	no	yes
)	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
recoverInfo	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
dataArrayResponse	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
txid	no	yes
,	no	no
dataArrayResponse	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ConsumerInfo	no	yes
info	no	yes
:	no	no
consumerInfos	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
message	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
assertNoMessagesLeft	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createRollbackTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
txid	no	yes
=	no	no
createXATransaction	no	yes
(	no	no
sessionInfo	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createBeginTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
receiveSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
if	no	yes
(	no	no
e	no	yes
instanceof	no	no
TransactionRolledBackException	no	yes
)	no	no
{	no	no
TransactionRolledBackException	no	yes
transactionRolledBackException	no	yes
=	no	no
(	no	no
TransactionRolledBackException	no	yes
)	no	no
e	no	yes
;	no	no
if	no	yes
(	no	no
transactionRolledBackException	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
dbConnection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQMessage	no	yes
mqMessage	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	no	yes
;	no	no
MessageId	no	yes
id	no	yes
=	no	no
mqMessage	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
;	no	no
dbConnection	no	yes
=	no	no
sharedDs	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
s	no	yes
=	no	no
dbConnection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
findStatement	no	yes
)	no	no
;	no	no
s	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
id	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
s	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
id	no	yes
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
s	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
JMSException	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
if	no	yes
(	no	no
e	no	yes
instanceof	no	no
TransactionRolledBackException	no	yes
)	no	no
{	no	no
TransactionRolledBackException	no	yes
transactionRolledBackException	no	yes
=	no	no
(	no	no
TransactionRolledBackException	no	yes
)	no	no
e	no	yes
;	no	no
if	no	yes
(	no	no
transactionRolledBackException	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
indexOf	no	yes
(	no	no
)	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
dbConnection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQMessage	no	yes
mqMessage	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	no	yes
;	no	no
MessageId	no	yes
id	no	yes
=	no	no
mqMessage	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
;	no	no
dbConnection	no	yes
=	no	no
sharedDs	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
s	no	yes
=	no	no
dbConnection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
findStatement	no	yes
)	no	no
;	no	no
s	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
id	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
s	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
id	no	yes
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
s	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
mqMessage	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
long	no	yes
count	no	yes
=	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
proxy	no	yes
.	no	no
browseMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
objectNameStr	no	yes
=	no	no
broker	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
objectNameStr	no	yes
+=	no	no
+	no	no
to	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
objectNameStr	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
toProxy	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
count	no	yes
=	no	no
toProxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
messageCount	no	yes
)	no	no
;	no	no
long	no	yes
usageAfterMove	yes	yes
=	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
60	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
String	no	yes
objectNameStr	no	yes
=	no	no
broker	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
objectNameStr	no	yes
+=	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
objectNameStr	no	yes
)	no	no
;	no	no
HealthViewMBean	no	yes
health	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
HealthViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
HealthStatus	no	yes
>	no	no
list	no	yes
=	no	no
health	no	yes
.	no	no
healthList	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
HealthStatus	no	yes
status	yes	yes
:	no	no
list	no	yes
)	no	no
{	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCreateDurableSubsciber	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
clientId	no	yes
=	no	no
;	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
addTopic	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
createSubscriberSecurityException	no	yes
=	no	no
false	no	yes
;	no	no
String	no	yes
subscriberName	yes	yes
=	no	no
;	no	no
try	no	yes
{	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
createDurableSubscriber	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriberName	yes	yes
,	no	no
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testCreateDurableSubsciber	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
clientId	no	yes
=	no	no
;	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
addTopic	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
createSubscriberSecurityException	no	yes
=	no	no
false	no	yes
;	no	no
String	no	yes
subscriberName	yes	yes
=	no	no
;	no	no
try	no	yes
{	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
createDurableSubscriber	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriberName	yes	yes
,	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriberName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
java	no	yes
.	no	no
lang	no	yes
.	no	no
SecurityException	no	yes
se1	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
se1	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
createSubscriberSecurityException	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
assertFalse	no	yes
(	no	no
createSubscriberSecurityException	no	yes
)	no	no
;	no	no
boolean	no	yes
destroySubscriberSecurityException	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
destroyDurableSubscriber	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriberName	yes	yes
)	no	no
;	no	no

}	no	no
catch	no	yes
(	no	no
java	no	yes
.	no	no
lang	no	yes
.	no	no
SecurityException	no	yes
se1	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
se1	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
createSubscriberSecurityException	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
assertFalse	no	yes
(	no	no
createSubscriberSecurityException	no	yes
)	no	no
;	no	no
boolean	no	yes
destroySubscriberSecurityException	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
destroyDurableSubscriber	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriberName	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriberName	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
java	no	yes
.	no	no
lang	no	yes
.	no	no
SecurityException	no	yes
se2	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
se2	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
destroySubscriberSecurityException	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
}	no	no
assertFalse	no	yes
(	no	no
destroySubscriberSecurityException	no	yes
)	no	no
;	no	no
boolean	no	yes
subscriberAlreadyDeleted	no	yes
=	no	no
false	no	yes
;	no	no
try	no	yes
{	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
destroyDurableSubscriber	no	yes
(	no	no
clientId	no	yes
,	no	no
subscriberName	yes	yes
)	no	no
;	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
expected	no	yes
=	no	no
TimeoutException	no	yes
.	no	no
class	no	yes
)	no	no
public	no	yes
void	no	yes
testLongOperationTimesOut	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
sendMessages	no	yes
(	no	no
messageCount	yes	yes
)	no	no
;	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
message	no	yes
+	no	no
+	no	no
message	no	yes
.	no	no
getJMSDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
ObjectName	no	yes
dlqQueueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
SharedDeadLetterStrategy	no	yes
.	no	no
DEFAULT_DEAD_LETTER_QUEUE_NAME	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
dlq	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
dlqQueueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
ObjectName	no	yes
dlqQueueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
SharedDeadLetterStrategy	no	yes
.	no	no
DEFAULT_DEAD_LETTER_QUEUE_NAME	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
dlq	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
dlqQueueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dlq	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queue	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
MESSAGE_COUNT	no	yes
==	no	no
dlq	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
dlq	yes	yes
.	no	no
retryMessages	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testCopyMessagesBySelector	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
useConnection	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	yes	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	yes	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queue	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
queue	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
,	no	no
newDestination	no	yes
)	no	no
;	no	no
queueViewMBeanName	yes	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
newDestination	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueTwo	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	yes	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testCopyPurgeCopyBack	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
numMessages	no	yes
=	no	no
100	no	no
;	no	no
useConnection	no	yes
(	no	no
connection	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueT	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
c	yes	yes
=	no	no
queueT	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
newDestination	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testCopyPurgeCopyBack	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
numMessages	no	yes
=	no	no
100	no	no
;	no	no
useConnection	no	yes
(	no	no
connection	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueT	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
c	no	yes
=	no	no
queueT	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
newDestination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
c	no	yes
)	no	no
;	no	no
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
newDestination	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueD	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testCopyPurgeCopyBack	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
numMessages	no	yes
=	no	no
100	no	no
;	no	no
useConnection	no	yes
(	no	no
connection	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueT	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueT	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
c	no	yes
=	no	no
queueT	yes	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
newDestination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
c	no	yes
)	no	no
;	no	no
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
newDestination	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueD	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueT	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
c	no	yes
=	no	no
queueT	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
newDestination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
c	no	yes
)	no	no
;	no	no
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
newDestination	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueD	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueD	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueD	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueD	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueD	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueT	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueT	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
queueT	no	yes
.	no	no
purge	no	yes
(	no	no
)	no	no
;	no	no
queueD	yes	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
newDestination	no	yes
=	no	no
getSecondDestinationString	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueT	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueSize	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
int	no	yes
c	no	yes
=	no	no
queueT	yes	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
newDestination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
c	no	yes
)	no	no
;	no	no
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
newDestination	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueD	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueT	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueT	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueT	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueT	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
queueT	yes	yes
.	no	no
purge	no	yes
(	no	no
)	no	no
;	no	no
queueD	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
null	no	yes
,	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
,	no	no
numMessages	no	yes
,	no	no
queueD	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertCreateAndDestroyDurableSubscriptions	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
echo	no	yes
(	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
broker	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
addTopic	no	yes
(	no	no
getDestinationString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
broker	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
String	no	yes
topicName	no	yes
=	no	no
getDestinationString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
selector	no	yes
=	no	no
null	no	yes
;	no	no
ObjectName	no	yes
name1	yes	yes
=	no	no
broker	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
clientID	no	yes
,	no	no
,	no	no
topicName	no	yes
,	no	no
selector	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
clientID	no	yes
,	no	no
,	no	no
topicName	no	yes
,	no	no
selector	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
broker	no	yes
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
name1	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testDestinationOptionsAreVisible	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
QUEUE_WITH_OPTIONS	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
queueViewMBeanName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
QUEUE_WITH_OPTIONS	no	yes
,	no	no
queue	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
options	yes	yes
=	no	no
queue	no	yes
.	no	no
getOptions	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSubscriptionViewToConnectionMBean	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
queueConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
broker	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
broker	no	yes
.	no	no
getQueueSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
1	no	no
)	no	no
;	no	no
ObjectName	no	yes
subscriptionName	yes	yes
=	no	no
broker	no	yes
.	no	no
getQueueSubscribers	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no

connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
queueConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
broker	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
broker	no	yes
.	no	no
getQueueSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
1	no	no
)	no	no
;	no	no
ObjectName	no	yes
subscriptionName	no	yes
=	no	no
broker	no	yes
.	no	no
getQueueSubscribers	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriptionName	no	yes
)	no	no
;	no	no
SubscriptionViewMBean	no	yes
subscriberView	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
subscriptionName	no	yes
,	no	no
SubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
subscriberView	no	yes
)	no	no
;	no	no
ObjectName	no	yes
connectionName	yes	yes
=	no	no
subscriberView	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testAddRemoveConnectorBrokerView	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
brokerView	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
connectors	yes	yes
=	no	no
brokerView	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
;	no	no

ObjectName	no	yes
brokerName	no	yes
=	no	no
assertRegisteredObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
brokerView	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
brokerName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
connectors	yes	yes
=	no	no
brokerView	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connectors	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
connectors	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ConnectorViewMBean	no	yes
connector	no	yes
=	no	no
getProxyToConnectionView	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
connector	no	yes
)	no	no
;	no	no
String	no	yes
name	no	yes
=	no	no
connectors	yes	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
brokerView	no	yes
.	no	no
removeConnector	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
connectors	yes	yes
=	no	no
brokerView	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
connectors	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
name	no	yes
=	no	no
brokerView	no	yes
.	no	no
addConnector	no	yes
(	no	no
)	no	no
;	no	no
connector	no	yes
=	no	no
getProxyToConnectionView	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
connector	no	yes
)	no	no
;	no	no
connectors	yes	yes
=	no	no
brokerView	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
echo	no	yes
(	no	no
String	no	yes
text	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
echo	no	yes
(	no	no
String	no	yes
text	yes	yes
)	no	no
{	no	no

private	no	yes
boolean	no	yes
match	no	yes
(	no	no
String	no	yes
s	no	yes
,	no	no
Set	no	yes
<	no	no
ObjectName	no	yes
>	no	no
registeredMbeans	no	yes
)	no	no
{	no	no
String	no	yes
encodedName	yes	yes
=	no	no
JMXSupport	no	yes
.	no	no
encodeObjectNamePart	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
name	yes	yes
:	no	no
registeredMbeans	no	yes
)	no	no
{	no	no

Entry	no	yes
<	no	no
MessageConsumer	no	yes
,	no	no
MessageIdList	no	yes
>	no	no
consumertoAbort	no	yes
=	no	no
consumers	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
consumertoAbort	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
setProcessingDelay	no	yes
(	no	no
8	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Connection	no	yes
c	no	yes
:	no	no
connections	no	yes
)	no	no
{	no	no
c	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
startProducers	no	yes
(	no	no
destination	no	yes
,	no	no
100	no	no
)	no	no
;	no	no
consumertoAbort	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
assertMessagesReceived	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
amqDest	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
destination	no	yes
;	no	no
ObjectName	no	yes
destinationViewMBean	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
+	no	no
(	no	no
amqDest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
amqDest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
DestinationViewMBean	no	yes
queue	no	yes
=	no	no
(	no	no
DestinationViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
destinationViewMBean	no	yes
,	no	no
DestinationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
ObjectName	no	yes
slowConsumerPolicyMBeanName	no	yes
=	no	no
queue	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
)	no	no
;	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
abortPolicy	no	yes
=	no	no
(	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
,	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
TabularData	no	yes
slowOnes	yes	yes
=	no	no
abortPolicy	no	yes
.	no	no
getSlowConsumers	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
slowOnes	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
Connection	no	yes
c	no	yes
:	no	no
connections	no	yes
)	no	no
{	no	no
c	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
startProducers	no	yes
(	no	no
destination	no	yes
,	no	no
100	no	no
)	no	no
;	no	no
consumertoAbort	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
assertMessagesReceived	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
amqDest	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
destination	no	yes
;	no	no
ObjectName	no	yes
destinationViewMBean	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
+	no	no
(	no	no
amqDest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
amqDest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
DestinationViewMBean	no	yes
queue	no	yes
=	no	no
(	no	no
DestinationViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
destinationViewMBean	no	yes
,	no	no
DestinationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
ObjectName	no	yes
slowConsumerPolicyMBeanName	no	yes
=	no	no
queue	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
)	no	no
;	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
abortPolicy	no	yes
=	no	no
(	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
,	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
TabularData	no	yes
slowOnes	no	yes
=	no	no
abortPolicy	no	yes
.	no	no
getSlowConsumers	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
slowOnes	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
slowOnes	no	yes
)	no	no
;	no	no
CompositeData	no	yes
slowOne	yes	yes
=	no	no
(	no	no
CompositeData	no	yes
)	no	no
slowOnes	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

connections	no	yes
.	no	no
add	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQMessageConsumer	no	yes
messageconsumer	no	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
startProducers	no	yes
(	no	no
destination	no	yes
,	no	no
10	no	no
)	no	no
;	no	no
messageconsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageconsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageconsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageconsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
)	no	no
;	no	no
socketProxy	no	yes
.	no	no
pause	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
amqDest	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
destination	no	yes
;	no	no
ObjectName	no	yes
destinationViewMBean	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
+	no	no
(	no	no
amqDest	no	yes
.	no	no
isTopic	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
amqDest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
destView	yes	yes
=	no	no
(	no	no
DestinationViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
destinationViewMBean	no	yes
,	no	no
DestinationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testAbortAlreadyClosedConsumers	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
conn	no	yes
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	yes	yes
=	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
startProducers	no	yes
(	no	no
destination	no	yes
,	no	no
20	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testAbortAlreadyClosedConnection	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
conn	yes	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	yes	yes
.	no	no
setExceptionListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	yes	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
conn	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
startProducers	no	yes
(	no	no
destination	no	yes
,	no	no
20	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
messageCount	no	yes
=	no	no
4	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
messageCount	no	yes
=	no	no
4	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	no	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rollbackCount	no	yes
+	no	no
)	no	no
;	no	no
makeConsumer	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumeAndRollback	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
Queue	no	yes
dlqQueue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no
verifyIsDlq	no	yes
(	no	no
dlqQueue	no	yes
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
dlqQueue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumeAndRollback	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
Queue	no	yes
dlqQueue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no
verifyIsDlq	no	yes
(	no	no
dlqQueue	no	yes
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
dlqQueue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueViewMBean	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
queueViewMBean	no	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
==	no	no
messageCount	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
makeDlqConsumer	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
sharedDlqViewMBean	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
SharedDeadLetterStrategy	no	yes
.	no	no
DEFAULT_DEAD_LETTER_QUEUE_NAME	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
void	no	yes
testAuditConfigured	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
messageCount	no	yes
=	no	no
1	no	no
;	no	no
timeToLive	no	yes
=	no	no
2000	no	no
;	no	no
deliveryMode	no	yes
=	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testNoDLQLoop	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
messageCount	no	yes
=	no	no
2	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

protected	no	yes
void	no	yes
makeConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getDestination	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
makeDlqConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
dlqDestination	yes	yes
=	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
makeDlqBrowser	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
dlqDestination	yes	yes
=	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
,	no	no
int	no	yes
i	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

PolicyEntry	no	yes
e3	no	yes
=	no	no
new	no	yes
PolicyEntry	no	yes
(	no	no
)	no	no
;	no	no
e3	no	yes
.	no	no
setDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e3	no	yes
.	no	no
setMemoryLimit	no	yes
(	no	no
3000000	no	no
)	no	no
;	no	no
e3	no	yes
.	no	no
setPrioritizedMessages	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
entries	no	yes
.	no	no
add	no	yes
(	no	no
e3	no	yes
)	no	no
;	no	no
PolicyMap	no	yes
policyMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
policyMap	no	yes
.	no	no
setPolicyEntries	no	yes
(	no	no
entries	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
policyMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertNotNull	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
ManagedRegionBroker	no	yes
rb	no	yes
=	no	no
(	no	no
ManagedRegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
rb	no	yes
.	no	no
addDestination	no	yes
(	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
DESTNAME	yes	yes
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
+	no	no
DESTNAME	yes	yes
,	no	no
queue	no	yes
.	no	no
isPrioritizedMessages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
limit	yes	yes
=	no	no
queue	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no

PolicyEntry	no	yes
e2	no	yes
=	no	no
new	no	yes
PolicyEntry	no	yes
(	no	no
)	no	no
;	no	no
e2	no	yes
.	no	no
setDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e2	no	yes
.	no	no
setMemoryLimit	no	yes
(	no	no
3000000	no	no
)	no	no
;	no	no
e2	no	yes
.	no	no
setPrioritizedMessages	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
entries	no	yes
.	no	no
add	no	yes
(	no	no
e2	no	yes
)	no	no
;	no	no
PolicyMap	no	yes
policyMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
policyMap	no	yes
.	no	no
setPolicyEntries	no	yes
(	no	no
entries	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
policyMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertNotNull	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
ManagedRegionBroker	no	yes
rb	no	yes
=	no	no
(	no	no
ManagedRegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
rb	no	yes
.	no	no
addDestination	no	yes
(	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
DESTNAME	yes	yes
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
+	no	no
DESTNAME	yes	yes
,	no	no
queue	no	yes
.	no	no
isPrioritizedMessages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
limit	yes	yes
=	no	no
queue	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no

List	no	yes
<	no	no
PolicyEntry	no	yes
>	no	no
entries	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
PolicyEntry	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
PolicyEntry	no	yes
e1	no	yes
=	no	no
new	no	yes
PolicyEntry	no	yes
(	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
setDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
setMemoryLimit	no	yes
(	no	no
QUEUE_LIMIT	no	yes
)	no	no
;	no	no
e1	no	yes
.	no	no
setPrioritizedMessages	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
entries	no	yes
.	no	no
add	no	yes
(	no	no
e1	no	yes
)	no	no
;	no	no
PolicyMap	no	yes
policyMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
policyMap	no	yes
.	no	no
setPolicyEntries	no	yes
(	no	no
entries	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
policyMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
ManagedRegionBroker	no	yes
rb	no	yes
=	no	no
(	no	no
ManagedRegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
rb	no	yes
.	no	no
addDestination	no	yes
(	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
DESTNAME	no	yes
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
+	no	no
DESTNAME	no	yes
,	no	no
queue	no	yes
.	no	no
isPrioritizedMessages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
limit	yes	yes
=	no	no
queue	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

public	no	yes
void	no	yes
testDLQBrowsing	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
topic	no	yes
=	no	no
false	no	yes
;	no	no
deliveryMode	no	yes
=	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
;	no	no
durableSubscriber	no	yes
=	no	no
false	no	yes
;	no	no
messageCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

public	no	yes
void	no	yes
testDLQBrowsing	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
topic	no	yes
=	no	no
false	no	yes
;	no	no
deliveryMode	no	yes
=	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
;	no	no
durableSubscriber	no	yes
=	no	no
false	no	yes
;	no	no
messageCount	no	yes
=	no	no
1	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rollbackCount	yes	yes
+	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
rollbackCount	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
makeConsumer	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
browseDlq	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
messages	yes	yes
=	no	no
dlqBrowser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
messages	yes	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
Destination	no	yes
createDlqDestination	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
queueName	yes	yes
=	no	no
+	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
messageCount	no	yes
=	no	no
200	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

protected	no	yes
void	no	yes
makeDlqConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
dlqDestination	yes	yes
=	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testClashWithPublishAndGC	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
RegionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
ERROR	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDestinationGcAnonymousProducer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ActiveMQQueue	no	yes
q	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
addQueue	no	yes
(	no	no
q	yes	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
testPurgeLargeQueue	no	yes
(	no	no
boolean	no	yes
prioritizedMessages	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
applyBrokerSpoolingPolicy	no	yes
(	no	no
prioritizedMessages	no	yes
)	no	no
;	no	no
createProducerAndSendMessages	no	yes
(	no	no
NUM_TO_SEND	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
jmx	no	yes
.	no	no
QueueView	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
gotPurgeLogMessage	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
instanceof	no	no
String	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
contains	no	yes
(	no	no
+	no	no
NUM_TO_SEND	no	yes
+	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
createProducerAndSendMessages	no	yes
(	no	no
int	no	yes
numToSend	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numToSend	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
MESSAGE_TEXT	no	yes
+	no	no
i	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
!=	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
configureMessageListener	no	yes
(	no	no
MessageConsumer	no	yes
consumer	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
MessageConsumer	no	yes
fConsumer	yes	yes
=	no	no
consumer	no	yes
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no

e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
consumerList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumerList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
MESSAGE_COUNT	no	yes
/	no	no
10	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
senderList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
300000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
latch	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
senderList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
sent	no	yes
=	no	no
senderList	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
;	no	no

}	no	no
consumerList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumerList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
MESSAGE_COUNT	no	yes
/	no	no
10	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
senderList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
300000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
latch	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
senderList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
sent	yes	yes
=	no	no
senderList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
Message	no	yes
consumed	no	yes
=	no	no
consumerList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no

consumerList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumerList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
MESSAGE_COUNT	no	yes
/	no	no
10	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
senderList	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
300000	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
latch	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
senderList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
sent	no	yes
=	no	no
senderList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
Message	no	yes
consumed	yes	yes
=	no	no
consumerList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no

queueMessageStore	no	yes
.	no	no
registerIndexListener	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
QueueStorePrefetch	no	yes
myCursor	no	yes
=	no	no
new	no	yes
QueueStorePrefetch	no	yes
(	no	no
queue	no	yes
,	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SystemUsage	no	yes
systemUsage	no	yes
=	no	no
new	no	yes
SystemUsage	no	yes
(	no	no
)	no	no
;	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
setLimit	no	yes
(	no	no
messageBytesSize	no	yes
*	no	no
5	no	no
)	no	no
;	no	no
myCursor	no	yes
.	no	no
setSystemUsage	no	yes
(	no	no
systemUsage	no	yes
)	no	no
;	no	no
myCursor	no	yes
.	no	no
setEnableAudit	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
myCursor	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
myCursor	no	yes
.	no	no
isUseCache	no	yes
(	no	no
)	no	no
&&	no	no
myCursor	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ActiveMQTextMessage	no	yes
msg0	no	yes
=	no	no
getMessage	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
msg0	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
queueMessageStore	no	yes
.	no	no
addMessage	no	yes
(	no	no
null	no	yes
,	no	no
msg0	no	yes
)	no	no
;	no	no
myCursor	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
msg0	no	yes
)	no	no
;	no	no
msg0	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
myCursor	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	yes	yes
=	no	no
myCursor	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

myCursor	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
queueMessageStore	no	yes
.	no	no
removeMessage	no	yes
(	no	no
ref	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
increaseUsage	no	yes
(	no	no
messageBytesSize	no	yes
*	no	no
10	no	no
)	no	no
;	no	no
ActiveMQTextMessage	no	yes
msg1	no	yes
=	no	no
getMessage	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
msg1	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
queueMessageStore	no	yes
.	no	no
addMessage	no	yes
(	no	no
null	no	yes
,	no	no
msg1	no	yes
)	no	no
;	no	no
myCursor	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
msg1	no	yes
)	no	no
;	no	no
msg1	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
b	no	yes
=	no	no
true	no	yes
;	no	no
while	no	yes
(	no	no
b	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
myCursor	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	yes	yes
=	no	no
myCursor	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
underTest	no	yes
.	no	no
isUseCache	no	yes
(	no	no
)	no	no
&&	no	no
underTest	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
ConnectionContext	no	yes
contextNotInTx	no	yes
=	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
count	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ActiveMQTextMessage	no	yes
msg	no	yes
=	no	no
getMessage	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
queueMessageStore	no	yes
.	no	no
addMessage	no	yes
(	no	no
contextNotInTx	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
underTest	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
dequeueCount	no	yes
=	no	no
0	no	no
;	no	no
underTest	no	yes
.	no	no
setMaxBatchSize	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
&&	no	no
dequeueCount	no	yes
<	no	no
count	no	yes
)	no	no
{	no	no
MessageReference	no	yes
ref	yes	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
ref	yes	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
,	no	no
underTest	no	yes
.	no	no
isUseCache	no	yes
(	no	no
)	no	no
&&	no	no
underTest	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
=	no	no
getMessage	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
messages	no	yes
[	no	no
2	no	no
]	no	no
=	no	no
msg	no	yes
;	no	no
msg	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
systemUsage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
setFutureOrSequenceLong	no	yes
(	no	no
2l	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
underTest	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
2l	no	yes
,	no	no
queueMessageStore	no	yes
.	no	no
batch	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
dequeueCount	no	yes
=	no	no
0	no	no
;	no	no
underTest	no	yes
.	no	no
setMaxBatchSize	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
&&	no	no
dequeueCount	no	yes
<	no	no
count	no	yes
)	no	no
{	no	no
MessageReference	no	yes
ref	yes	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
ref	yes	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testGroupedMessagesDeliveredToOnlyOneConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testAddingConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testClosingMessageGroup	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
3	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
m1	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer1	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
m1	no	yes
)	no	no
;	no	no
}	no	no
Connection	no	yes
connection1	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
userName	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
connection1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session2	no	yes
=	no	no
connection1	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session2	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
consumer2	no	yes
.	no	no
receive	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
m	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
5	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no

TextMessage	no	yes
m1	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer1	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
m1	no	yes
)	no	no
;	no	no
}	no	no
Connection	no	yes
connection1	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
userName	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
connection1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session2	no	yes
=	no	no
connection1	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session2	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
consumer2	no	yes
.	no	no
receive	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
m	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
5	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testSimulatenousCron	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
COUNT	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
count	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
try	no	yes
{	no	no

final	no	yes
int	no	yes
COUNT	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
count	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
count	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
;	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
count	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
ScheduledMessage	no	yes
.	no	no
AMQ_SCHEDULED_CRON	no	yes
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testCron	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
COUNT	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	yes	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
count	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
latch	yes	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testScheduleRepeated	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
NUMBER	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	yes	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
NUMBER	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
count	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
latch	yes	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRemvoeJob	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
JobSchedulerViewMBean	no	yes
view	no	yes
=	no	no
getJobSchedulerMBean	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
view	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
view	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scheduleMessage	no	yes
(	no	no
60000	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
view	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TabularData	no	yes
jobs	no	yes
=	no	no
view	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
jobs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Object	no	yes
key	no	yes
:	no	no
jobs	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
jobId	yes	yes
=	no	no
(	no	no
(	no	no
List	no	yes
<	no	no
?	no	no
>	no	no
)	no	no
key	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testGetNextScheduledJob	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
JobSchedulerViewMBean	no	yes
view	no	yes
=	no	no
getJobSchedulerMBean	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
view	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
view	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scheduleMessage	no	yes
(	no	no
60000	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
view	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
before	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
57	no	no
*	no	no
1000	no	no
;	no	no
long	no	yes
toLate	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
63	no	no
*	no	no
1000	no	no
;	no	no
String	no	yes
next	yes	yes
=	no	no
view	no	yes
.	no	no
getNextScheduleTime	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
nextTime	no	yes
=	no	no
JobSupport	no	yes
.	no	no
getDataTime	no	yes
(	no	no
next	yes	yes
)	no	no
;	no	no

scheduleMessage	no	yes
(	no	no
connection	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
20	no	no
)	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
management	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
ScheduledMessage	no	yes
.	no	no
AMQ_SCHEDULER_MANAGEMENT_DESTINATION	no	yes
)	no	no
;	no	no
Destination	no	yes
browseDest	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
browseDest	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
browsedLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
browser	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
browsedLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

scheduleMessage	no	yes
(	no	no
connection	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
9	no	no
)	no	no
,	no	no
COUNT	no	yes
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
requestBrowse	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
ScheduledMessage	no	yes
.	no	no
AMQ_SCHEDULER_MANAGEMENT_DESTINATION	no	yes
)	no	no
;	no	no
Destination	no	yes
browseDest	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
browseDest	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
browsedLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
browser	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
browsedLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

scheduleMessage	no	yes
(	no	no
connection	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
20	no	no
)	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
requestBrowse	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
ScheduledMessage	no	yes
.	no	no
AMQ_SCHEDULER_MANAGEMENT_DESTINATION	no	yes
)	no	no
;	no	no
Destination	no	yes
browseDest	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
+	no	no
2	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
browseDest	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
browsedLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
COUNT	no	yes
)	no	no
;	no	no
browser	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
browsedLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

store	no	yes
.	no	no
setDirectory	no	yes
(	no	no
directory	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
NUMBER	no	yes
=	no	no
1000	no	no
;	no	no
store	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ByteSequence	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
ByteSequence	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUMBER	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ByteSequence	no	yes
buff	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
)	no	no
;	no	no
}	no	no
JobScheduler	no	yes
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
.	no	no
startDispatching	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
10	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
long	no	yes
period	no	yes
=	no	no
startTime	no	yes
;	no	no
for	no	yes
(	no	no
ByteSequence	no	yes
job	no	yes
:	no	no
list	no	yes
)	no	no
{	no	no
js	no	yes
.	no	no
schedule	no	yes
(	no	no
+	no	no
(	no	no
count	no	yes
++	no	no
)	no	no
,	no	no
job	no	yes
,	no	no
,	no	no
startTime	no	yes
,	no	no
period	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Job	no	yes
>	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no

list	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
)	no	no
;	no	no
}	no	no
JobScheduler	no	yes
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
.	no	no
startDispatching	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
10	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
long	no	yes
period	no	yes
=	no	no
startTime	no	yes
;	no	no
for	no	yes
(	no	no
ByteSequence	no	yes
job	no	yes
:	no	no
list	no	yes
)	no	no
{	no	no
js	no	yes
.	no	no
schedule	no	yes
(	no	no
+	no	no
(	no	no
count	no	yes
++	no	no
)	no	no
,	no	no
job	no	yes
,	no	no
,	no	no
startTime	no	yes
,	no	no
period	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Job	no	yes
>	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testGetExecutionCount	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
jobId	no	yes
=	no	no
;	no	no
long	no	yes
time	no	yes
=	no	no
10000	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	yes	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
String	no	yes
str	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
)	no	no
;	no	no
scheduler	no	yes
.	no	no
schedule	no	yes
(	no	no
jobId	no	yes
,	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
str	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
,	no	no
time	no	yes
,	no	no
1000	no	no
,	no	no
10	no	no
)	no	no
;	no	no
int	no	yes
size	no	yes
=	no	no
scheduler	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
size	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
scheduler	no	yes
.	no	no
addListener	no	yes
(	no	no
new	no	yes
JobListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
scheduledJob	no	yes
(	no	no
String	no	yes
id	no	yes
,	no	no
ByteSequence	no	yes
job	no	yes
)	no	no
{	no	no

@	no	no
Before	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
schedulerStoreDir	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
basedir	no	yes
,	no	no
+	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Before	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
IOHelper	no	yes
.	no	no
deleteFile	no	yes
(	no	no
schedulerStoreDir	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testMissingLogsCausesBrokerToFail	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
fillUpSomeLogFiles	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
jobCount	yes	yes
=	no	no
schedulerStore	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testRecoverWhenSomeLogsAreMissing	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
fillUpSomeLogFiles	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
jobCount	yes	yes
=	no	no
schedulerStore	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
JobSchedulerStoreImpl	no	yes
scheduler	no	yes
=	no	no
new	no	yes
JobSchedulerStoreImpl	no	yes
(	no	no
)	no	no
;	no	no
scheduler	no	yes
.	no	no
setDirectory	no	yes
(	no	no
testDir	no	yes
)	no	no
;	no	no
scheduler	no	yes
.	no	no
setJournalMaxFileLength	no	yes
(	no	no
1024	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
scheduler	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
NUMBER	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

store	no	yes
.	no	no
setDirectory	no	yes
(	no	no
directory	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
NUMBER	no	yes
=	no	no
1000	no	no
;	no	no
store	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ByteSequence	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
ByteSequence	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUMBER	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ByteSequence	no	yes
buff	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
)	no	no
;	no	no
}	no	no
JobScheduler	no	yes
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
.	no	no
startDispatching	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
10	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
long	no	yes
period	no	yes
=	no	no
startTime	no	yes
;	no	no
for	no	yes
(	no	no
ByteSequence	no	yes
job	no	yes
:	no	no
list	no	yes
)	no	no
{	no	no
js	no	yes
.	no	no
schedule	no	yes
(	no	no
+	no	no
(	no	no
count	no	yes
++	no	no
)	no	no
,	no	no
job	no	yes
,	no	no
,	no	no
startTime	no	yes
,	no	no
period	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Job	no	yes
>	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no

list	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
)	no	no
;	no	no
}	no	no
JobScheduler	no	yes
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
.	no	no
startDispatching	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
10	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
;	no	no
long	no	yes
period	no	yes
=	no	no
startTime	no	yes
;	no	no
for	no	yes
(	no	no
ByteSequence	no	yes
job	no	yes
:	no	no
list	no	yes
)	no	no
{	no	no
js	no	yes
.	no	no
schedule	no	yes
(	no	no
+	no	no
(	no	no
count	no	yes
++	no	no
)	no	no
,	no	no
job	no	yes
,	no	no
,	no	no
startTime	no	yes
,	no	no
period	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Job	no	yes
>	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
test	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
store	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
js	no	yes
=	no	no
store	no	yes
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
test	yes	yes
=	no	no
js	no	yes
.	no	no
getAllJobs	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testQueueSendThenAddConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ProgressPrinter	no	yes
printer	no	yes
=	no	no
new	no	yes
ProgressPrinter	no	yes
(	no	no
produceCount	yes	yes
,	no	no
20	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setUseCompression	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
getPrefetchPolicy	no	yes
(	no	no
)	no	no
.	no	no
setAll	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
DUPS_OK_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

RedeliveryPolicyMap	no	yes
redeliveryPolicyMap	no	yes
=	no	no
new	no	yes
RedeliveryPolicyMap	no	yes
(	no	no
)	no	no
;	no	no
RedeliveryPolicy	no	yes
defaultEntry	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
defaultEntry	no	yes
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
redeliveryPolicyMap	no	yes
.	no	no
setDefaultEntry	no	yes
(	no	no
defaultEntry	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
setRedeliveryPolicyMap	no	yes
(	no	no
redeliveryPolicyMap	no	yes
)	no	no
;	no	no
final	no	yes
BrokerService	no	yes
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Broker	no	yes
broker	no	yes
=	no	no
new	no	yes
ErrorBroker	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
BrokerService	no	yes
getBrokerService	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
brokerService	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no

brokerService	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Broker	no	yes
broker	no	yes
=	no	no
new	no	yes
ErrorBroker	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
BrokerService	no	yes
getBrokerService	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
brokerService	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	yes	yes
)	no	no
;	no	no
}	no	no
brokerService	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no

underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	yes	yes
)	no	no
;	no	no
}	no	no
brokerService	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	yes	yes
)	no	no
;	no	no
}	no	no
defaultEntry	no	yes
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
defaultEntry	no	yes
.	no	no
setRedeliveryDelay	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setSchedulerSupport	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
installPlugin	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
40000	no	no
)	no	no
public	no	yes
void	no	yes
testNoMemoryUsageIncreaseForTopic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
super	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
CREATED_STATIC_FOR_PERSISTENT	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
char	no	yes
[	no	no
]	no	no
m	no	yes
=	no	no
new	no	yes
char	no	yes
[	no	no
1024	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
m	no	yes
,	no	no
'x'	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<	no	no
12000	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
m	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList	yes	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
messageList	yes	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Destination	no	yes
consumeDestination	no	yes
=	no	no
createConsumeDestination	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
c1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumeDestination	no	yes
)	no	no
;	no	no
c1	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
messageList	yes	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
sendDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendDestination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
sendDestination	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
int	no	yes
total	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
total	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000L	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no

final	no	yes
AtomicLong	no	yes
numMessagesToSend	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
messageCount	no	yes
)	no	no
;	no	no
purge	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numThreads	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
produceMessages	no	yes
(	no	no
numMessagesToSend	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
long	no	yes
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
seconds	yes	yes
=	no	no
(	no	no
endTime	no	yes
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
produceMessages	no	yes
(	no	no
numMessagesToSend	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
long	no	yes
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
seconds	no	yes
=	no	no
(	no	no
endTime	no	yes
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
numThreads	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
,	no	no
seconds	no	yes
)	no	no
;	no	no
results	yes	yes
.	no	no
put	no	yes
(	no	no
numThreads	no	yes
,	no	no
seconds	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getTotalEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
@	no	no
Ignore	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
testPerf	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LinkedHashMap	no	yes
<	no	no
Integer	no	yes
,	no	no
Long	no	yes
>	no	no
resultsT	no	yes
=	no	no
new	no	yes
LinkedHashMap	no	yes
<	no	no
Integer	no	yes
,	no	no
Long	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
LinkedHashMap	no	yes
<	no	no
Integer	no	yes
,	no	no
Long	no	yes
>	no	no
resultsF	no	yes
=	no	no
new	no	yes
LinkedHashMap	no	yes
<	no	no
Integer	no	yes
,	no	no
Long	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
2	no	no
;	no	no
i	yes	yes
<	no	no
11	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Boolean	no	yes
concurrent	no	yes
:	no	no
new	no	yes
Boolean	no	yes
[	no	no
]	no	no
{	no	no
true	no	yes
,	no	no
false	no	yes
}	no	no
)	no	no
{	no	no
startBroker	no	yes
(	no	no
i	yes	yes
,	no	no
concurrent	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
messageCount	no	yes
)	no	no
,	no	no
target	no	yes
)	no	no
;	no	no
long	no	yes
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
seconds	yes	yes
=	no	no
(	no	no
endTime	no	yes
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
2	no	no
;	no	no
i	no	yes
<	no	no
11	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Boolean	no	yes
concurrent	no	yes
:	no	no
new	no	yes
Boolean	no	yes
[	no	no
]	no	no
{	no	no
true	no	yes
,	no	no
false	no	yes
}	no	no
)	no	no
{	no	no
startBroker	no	yes
(	no	no
i	no	yes
,	no	no
concurrent	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
messageCount	no	yes
)	no	no
,	no	no
target	no	yes
)	no	no
;	no	no
long	no	yes
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
seconds	no	yes
=	no	no
(	no	no
endTime	no	yes
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
,	no	no
seconds	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
concurrent	no	yes
)	no	no
{	no	no
resultsT	yes	yes
.	no	no
put	no	yes
(	no	no
i	no	yes
,	no	no
seconds	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resultsF	yes	yes
.	no	no
put	no	yes
(	no	no
i	no	yes
,	no	no
seconds	no	yes
)	no	no
;	no	no
}	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
resultsT	yes	yes
,	no	no
resultsF	yes	yes
)	no	no
;	no	no

}	no	no
}	no	no
while	no	yes
(	no	no
messagestoSend	no	yes
<	no	no
numMessages	no	yes
)	no	no
;	no	no
connection1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numConnections	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
runnable	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
String	no	yes
prefix	no	yes
=	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
doneOne	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
numDestinations	no	yes
-	no	no
1	no	no
;	no	no
i	no	yes
>=	no	no
0	no	no
;	no	no
i	no	yes
--	no	no
)	no	no
{	no	no
final	no	yes
ActiveMQQueue	no	yes
toDelete	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
ObjectName	no	yes
queueViewMBeanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
prefix	no	yes
+	no	no
toDelete	yes	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testWildcardAndSimpleConsumerShareMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerBean	no	yes
messageList1	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList2	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList3	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
messageList1	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
messageList2	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
messageList3	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
producerDestination	yes	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination1	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination2	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination3	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testWildcardAndSimpleConsumerShareMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerBean	no	yes
messageList1	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList2	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList3	no	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
messageList1	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
messageList2	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
messageList3	no	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
producerDestination	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination1	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination2	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination3	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerDestination	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConsumerMessagesAreNotOrdered	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TestConsumer	no	yes
consumerAllFail	no	yes
=	no	no
null	no	yes
;	no	no
messageList	yes	yes
=	no	no
new	no	yes
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
AtomicInteger	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
TestProducer	no	yes
producerAllFail	no	yes
=	no	no
new	no	yes
TestProducer	no	yes
(	no	no
queueFail	no	yes
)	no	no
;	no	no
thread	no	yes
(	no	no
producerAllFail	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
consumerAllFail	no	yes
=	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
queueFail	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
thread	no	yes
(	no	no
consumerAllFail	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
thread	no	yes
(	no	no
producerAllFail	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
producerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
thread	no	yes
(	no	no
producerAllFail	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
producerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
messageList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
totalNumberMessages	no	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
totalNumberMessages	no	yes
==	no	no
messageList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerAllFail	no	yes
.	no	no
getLatch	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
String	no	yes
>	no	no
keys	no	yes
=	no	no
messageList	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
AtomicInteger	no	yes
counter	yes	yes
:	no	no
messageList	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
keys	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
;	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ConsumerThread	no	yes
c1	no	yes
=	no	no
new	no	yes
ConsumerThread	no	yes
(	no	no
)	no	no
;	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
c1	no	yes
)	no	no
;	no	no
c1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
ConsumerThread	no	yes
c2	no	yes
=	no	no
new	no	yes
ConsumerThread	no	yes
(	no	no
)	no	no
;	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
c2	no	yes
)	no	no
;	no	no
c2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
totalReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
30	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
long	no	yes
c1Counter	yes	yes
=	no	no
c1	no	yes
.	no	no
counter	no	yes
.	no	no
getAndSet	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

QueueSession	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
QueueSender	no	yes
sender	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
queue	yes	yes
=	no	no
null	no	yes
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
queueConnection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
QueueSession	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
queue	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TEST_QUEUE_NAME	no	yes
)	no	no
;	no	no
sender	no	yes
=	no	no
session	no	yes
.	no	no
createSender	no	yes
(	no	no
queue	yes	yes
)	no	no
;	no	no
sender	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
sender	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
session	no	yes
.	no	no
getTransacted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testForDuplicateMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ConcurrentMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
Object	no	yes
lock	no	yes
=	no	no
new	no	yes
Object	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
duplicateSignal	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
messageCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TEST_MESSAGE_COUNT	no	yes
/	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
duplicateSignal	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendTextMessage	no	yes
(	no	no
TEST_QUEUE_NAME	no	yes
,	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
CONSUMER_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
receivers	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
new	no	yes
ThreadedMessageReceiver	no	yes
(	no	no
TEST_QUEUE_NAME	no	yes
,	no	no
new	no	yes
IMessageHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
int	no	yes
current	no	yes
=	no	no
messageCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
current	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

final	no	yes
CountDownLatch	no	yes
duplicateSignal	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
messageCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TEST_MESSAGE_COUNT	no	yes
/	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
duplicateSignal	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sendTextMessage	no	yes
(	no	no
TEST_QUEUE_NAME	no	yes
,	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
CONSUMER_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
receivers	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
new	no	yes
ThreadedMessageReceiver	no	yes
(	no	no
TEST_QUEUE_NAME	no	yes
,	no	no
new	no	yes
IMessageHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
int	no	yes
current	no	yes
=	no	no
messageCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
current	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
containsKey	no	yes
(	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
duplicateSignal	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
int	no	yes
current	no	yes
=	no	no
messageCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
current	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
containsKey	no	yes
(	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
duplicateSignal	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
fatal	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
messages	no	yes
.	no	no
put	no	yes
(	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
,	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
threadPool	no	yes
.	no	no
submit	no	yes
(	no	no
receivers	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TEST_MESSAGE_COUNT	yes	yes
/	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
duplicateSignal	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numConsumers	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ConsumerThread	no	yes
c1	no	yes
=	no	no
new	no	yes
ConsumerThread	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
c1	no	yes
)	no	no
;	no	no
c1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
started	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Thread	no	yes
producer	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
;	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
allGood	no	yes
=	no	no
receivedLatch	no	yes
.	no	no
await	no	yes
(	no	no
90	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
:	no	no
exceptions	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
produce	no	yes
(	no	no
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
PRODUCER_BROKER_URL	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
count	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
id	yes	yes
=	no	no
i	no	yes
+	no	no
1	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
id	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
id	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
id	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
PRODUCER_BROKER_URL	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
count	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
id	no	yes
=	no	no
i	no	yes
+	no	no
1	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
id	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
id	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
id	no	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
uncaughtException	no	yes
(	no	no
Thread	no	yes
thread	yes	yes
,	no	no
Throwable	no	yes
exception	yes	yes
)	no	no
{	no	no

props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
connectionUri	no	yes
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
queueName	yes	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
naming	no	yes
.	no	no
Context	no	yes
ctx	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
props	no	yes
)	no	no
;	no	no
QueueConnectionFactory	no	yes
factory	no	yes
=	no	no
(	no	no
QueueConnectionFactory	no	yes
)	no	no
ctx	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
QueueConnection	no	yes
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
ctx	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
QueueSession	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
QueueReceiver	no	yes
receiver	no	yes
=	no	no
session	no	yes
.	no	no
createReceiver	no	yes
(	no	no
queue	no	yes
,	no	no
selectors	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
receiver	no	yes
.	no	no
getMessageSelector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
receiver	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
txtMsg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
String	no	yes
msg	yes	yes
=	no	no
txtMsg	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no

props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
connectionUri	no	yes
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
topicName	yes	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
naming	no	yes
.	no	no
Context	no	yes
ctx	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
props	no	yes
)	no	no
;	no	no
TopicConnectionFactory	no	yes
factory	no	yes
=	no	no
(	no	no
TopicConnectionFactory	no	yes
)	no	no
ctx	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
TopicConnection	no	yes
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Topic	no	yes
topic	no	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
ctx	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
TopicSession	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
receiver	no	yes
=	no	no
session	no	yes
.	no	no
createSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
selectors	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
receiver	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
txtMsg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
String	no	yes
msg	yes	yes
=	no	no
txtMsg	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
After	no	yes
public	no	yes
void	no	yes
tearDown	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
executor	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
TeardownTask	no	yes
(	no	no
brokerLock	no	yes
,	no	no
broker	no	yes
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Boolean	no	yes
result	yes	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
long	no	yes
finish	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
verifyStats	no	yes
(	no	no
boolean	no	yes
brokerRestarts	no	yes
,	no	no
boolean	no	yes
transactional	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Destination	no	yes
dest	yes	yes
:	no	no
regionBroker	no	yes
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationStatistics	no	yes
stats	no	yes
=	no	no
dest	yes	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
brokerRestarts	no	yes
)	no	no
{	no	no

for	no	yes
(	no	no
Destination	no	yes
dest	no	yes
:	no	no
regionBroker	no	yes
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
DestinationStatistics	no	yes
stats	no	yes
=	no	no
dest	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
brokerRestarts	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dest	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
stats	no	yes
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
stats	no	yes
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
assertEquals	no	yes
(	no	no
+	no	no
dest	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
stats	no	yes
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
stats	no	yes
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Destination	no	yes
activeMQDlq	no	yes
=	no	no
regionBroker	no	yes
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
activeMQDlq	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
int	no	yes
countToExcuse	no	yes
=	no	no
0	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
[	no	no
]	no	no
messages	no	yes
=	no	no
activeMQDlq	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
candidate	yes	yes
:	no	no
messages	no	yes
)	no	no
{	no	no
final	no	yes
Object	no	yes
cause	yes	yes
=	no	no
candidate	yes	yes
.	no	no
getProperty	no	yes
(	no	no
DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cause	yes	yes
!=	no	no
null	no	yes
&&	no	no
(	no	no
(	no	no
(	no	no
(	no	no
String	no	yes
)	no	no
cause	yes	yes
)	no	no
.	no	no
contains	no	yes
(	no	no
DUPLICATE_FROM_STORE_MSG_PREFIX	no	yes
)	no	no
)	no	no
||	no	no
!	no	no
transactional	no	yes
&&	no	no
(	no	no
(	no	no
String	no	yes
)	no	no
cause	yes	yes
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
countToExcuse	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

class	no	yes
RestartTask	no	yes
extends	no	yes
TimerTask	no	yes
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
synchronized	no	yes
(	no	no
brokerLock	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
createBroker	no	yes
(	no	no
configurer	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
createBroker	no	yes
(	no	no
configurer	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
++	no	no
numBrokerRestarts	no	yes
<	no	no
MAX_BROKER_RESTARTS	yes	yes
&&	no	no
timer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
timer	no	yes
.	no	no
schedule	no	yes
(	no	no
new	no	yes
RestartTask	no	yes
(	no	no
)	no	no
,	no	no
brokerStopPeriod	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IllegalStateException	no	yes
ignore_alreadyCancelled	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

else	no	yes
{	no	no
AutoFailTestSupport	no	yes
.	no	no
dumpAllThreads	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
threads	yes	yes
)	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
receivers	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
expiry	no	yes
)	no	no
{	no	no
Receiver	no	yes
receiver	no	yes
=	no	no
receivers	no	yes
.	no	no
firstElement	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
receiver	no	yes
.	no	no
getNextExpectedSeqNo	no	yes
(	no	no
)	no	no
>=	no	no
numtoSend	no	yes
||	no	no
!	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
receiver	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
receivers	no	yes
.	no	no
remove	no	yes
(	no	no
receiver	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
Connection	no	yes
connection	no	yes
:	no	no
connections	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
connections	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
expiry	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
static	no	yes
void	no	yes
produce	no	yes
(	no	no
String	no	yes
brokerURL	no	yes
,	no	no
int	no	yes
count	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerURL	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
count	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
id	yes	yes
=	no	no
i	no	yes
+	no	no
1	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
id	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
id	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
id	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
;	no	no
Thread	no	yes
consumingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
consumerReady	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
count	yes	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumerContinue	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
consumeAll	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
++	no	no
count	yes	yes
%	no	no
LOG_INTERVAL	no	yes
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
receivedMessages	no	yes
.	no	no
release	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
validateQueueStats	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerView	no	yes
brokerView	yes	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1000	no	no
,	no	no
brokerView	yes	yes
.	no	no
getTotalEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
void	no	yes
sendMessage	no	yes
(	no	no
String	no	yes
msgText	yes	yes
,	no	no
String	no	yes
propertyValue	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no

broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	no	yes
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
redeliveryConsumerLatch	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
redeliveryConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
60	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
dlqConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
60	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
closeConsumer	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
closeDlqConsumer	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
FilenameFilter	no	yes
justLogFiles	no	yes
=	no	no
new	no	yes
FilenameFilter	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
accept	no	yes
(	no	no
File	no	yes
file	no	yes
,	no	no
String	no	yes
s	no	yes
)	no	no
{	no	no
return	no	yes
s	no	yes
.	no	no
endsWith	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
int	no	yes
numFiles	yes	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
.	no	no
list	no	yes
(	no	no
justLogFiles	no	yes
)	no	no
.	no	no
length	no	yes
;	no	no
if	no	yes
(	no	no
numFiles	yes	yes
>	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
.	no	no
list	no	yes
(	no	no
justLogFiles	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
openDlqConsumer	no	yes
(	no	no
final	no	yes
CountDownLatch	no	yes
received	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
dlqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
dlqSession	no	yes
=	no	no
dlqConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
dlqSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
received	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
received	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
%	no	no
200	no	no
==	no	no
0	no	no
)	no	no
{	no	no

sendMessage	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
BrokerView	no	yes
brokerView	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	no	yes
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
storePercentUsage	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
storePercentUsage	no	yes
>	no	no
minPercentUsageForStore	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
redeliveryConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
60	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
closeConsumer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
received	yes	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
messages	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
dlqSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
dlqSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
received	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
afterRestart	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
TextMessage	no	yes
txtMsg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
if	no	yes
(	no	no
txtMsg	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
twoNewMessages	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
txtMsg	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
thirdMessageReceived	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testRecoverRedelivery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
CountDownLatch	no	yes
redelivery	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
final	no	yes
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientId	no	yes
=	no	no
clientIdPrefix	no	yes
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

private	no	yes
void	no	yes
produceMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TopicConnection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
TopicSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
TOPICNAME	no	yes
)	no	no
;	no	no
TopicPublisher	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createPublisher	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
long	no	yes
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session2	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
publish	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

produceMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
conn1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
conn2	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
activeateSubscribers	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
[	no	no
]	no	no
subs	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
subs	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ObjectName	no	yes
subName	no	yes
=	no	no
subs	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
=	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testNoRestartOnMissingAckDataFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
makeAckChain	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
dataDir	no	yes
=	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
secondLastDataFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAckRemovedMessageReplayedAfterRecovery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
StagedConsumer	no	yes
consumer	no	yes
=	no	no
new	no	yes
StagedConsumer	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
numMessagesAvailable	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
Message	no	yes
firstUnacked	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAckRemovedMessageReplayedAfterRecovery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
StagedConsumer	no	yes
consumer	no	yes
=	no	no
new	no	yes
StagedConsumer	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
numMessagesAvailable	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
Message	no	yes
firstUnacked	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
firstUnacked	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
secondUnacked	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAckRemovedMessageReplayedAfterRecovery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
startBroker	no	yes
(	no	no
)	no	no
;	no	no
StagedConsumer	no	yes
consumer	no	yes
=	no	no
new	no	yes
StagedConsumer	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
numMessagesAvailable	no	yes
=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
Message	no	yes
firstUnacked	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
firstUnacked	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
secondUnacked	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secondUnacked	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
numMessagesAvailable	no	yes
-=	no	no
11	no	no
;	no	no
numMessagesAvailable	no	yes
+=	no	no
produceMessagesToConsumeMultipleDataFiles	no	yes
(	no	no
10	no	no
)	no	no
;	no	no

private	no	yes
int	no	yes
getNumberOfJournalFiles	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
Collection	no	yes
<	no	no
DataFile	no	yes
>	no	no
files	yes	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getFileMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Parameterized	no	yes
.	no	no
Parameters	no	yes
public	no	yes
static	no	yes
Collection	no	yes
<	no	no
PersistenceAdapterChoice	no	yes
[	no	no
]	no	no
>	no	no
getTestParameters	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
osName	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no

openConsumer	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5000	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendMessage	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
BrokerView	no	yes
brokerView	yes	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
<	no	no
minPercentUsageForStore	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
closeConsumer	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
<	no	no
minPercentUsageForStore	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
closeConsumer	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getStorePercentUsage	no	yes
(	no	no
)	no	no
<	no	no
minPercentUsageForStore	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5000	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendMessage	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
destroyDurableSubscriber	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
int	no	yes
getFileCount	no	yes
(	no	no
File	no	yes
dir	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
dir	no	yes
.	no	no
isDirectory	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
children	yes	yes
=	no	no
dir	no	yes
.	no	no
list	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
createProducerAndSendMessages	no	yes
(	no	no
int	no	yes
numToSend	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numToSend	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
MESSAGE_TEXT	no	yes
+	no	no
i	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
!=	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
50000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ConsumerBean	no	yes
messageList	yes	yes
=	no	no
new	no	yes
ConsumerBean	no	yes
(	no	no
)	no	no
;	no	no
messageList	yes	yes
.	no	no
setVerbose	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
ActiveMQDestination	no	yes
consumeDestination	no	yes
=	no	no
createConsumeDestination	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
c1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumeDestination	no	yes
)	no	no
;	no	no
c1	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
messageList	yes	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
sendDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendDestination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
sendDestination	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
total	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
total	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeDestination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
c1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumeDestination	no	yes
)	no	no
;	no	no
c1	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
messageList	yes	yes
)	no	no
;	no	no
ActiveMQQueue	no	yes
sendDestination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendDestination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
sendDestination	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
total	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
total	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
messageList	yes	yes
.	no	no
assertMessagesArrived	no	yes
(	no	no
total	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageList	yes	yes
)	no	no
;	no	no
messageList	yes	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
c2	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
sendDestination	no	yes
)	no	no
;	no	no
c2	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
messageList	yes	yes
)	no	no
;	no	no

while	no	yes
(	no	no
(	no	no
cur	no	yes
<	no	no
num_msg	no	yes
)	no	no
&&	no	no
(	no	no
!	no	no
testError	no	yes
)	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
100	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
resp_dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cur	no	yes
==	no	no
(	no	no
num_msg	no	yes
-	no	no
1	no	no
)	no	no
)	no	no
msg	no	yes
.	no	no
setBooleanProperty	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
req_prod	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
cur	no	yes
++	no	no
;	no	no
}	no	no
cons_client	no	yes
.	no	no
waitShutdown	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
tot_expected	yes	yes
=	no	no
num_msg	no	yes
*	no	no
(	no	no
echoResponseFill	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	no	yes
.	no	no
getNumMsgReceived	no	yes
(	no	no
)	no	no
==	no	no
tot_expected	yes	yes
)	no	no
{	no	no

msg	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
100	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
resp_dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cur	no	yes
==	no	no
(	no	no
num_msg	no	yes
-	no	no
1	no	no
)	no	no
)	no	no
msg	no	yes
.	no	no
setBooleanProperty	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
req_prod	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
cur	no	yes
++	no	no
;	no	no
}	no	no
cons_client	yes	yes
.	no	no
waitShutdown	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	yes	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
tot_expected	yes	yes
=	no	no
num_msg	no	yes
*	no	no
(	no	no
echoResponseFill	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	yes	yes
.	no	no
getNumMsgReceived	no	yes
(	no	no
)	no	no
==	no	no
tot_expected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tot_expected	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
void	no	yes
testTempTopic	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
int	no	yes
num_msg	yes	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testTopic	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
String	no	yes
topic_name	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testTempQueue	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testQueue	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
String	no	yes
queue_name	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

Thread	no	yes
start1	no	yes
;	no	no
Thread	no	yes
start2	no	yes
;	no	no
testError	no	yes
=	no	no
false	no	yes
;	no	no
start1	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
broker1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
broker2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
doTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
messageCount	no	yes
=	no	no
200	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
dlqView	no	yes
=	no	no
getProxyToDLQ	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
amqConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
;	no	no
rollbackCount	yes	yes
=	no	no
amqConnection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
getMaximumRedeliveries	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no

protected	no	yes
void	no	yes
makeConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getDestination	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
makeDlqConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
dlqDestination	yes	yes
=	no	no
createDlqDestination	no	yes
(	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Random	no	yes
random	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
random	no	yes
.	no	no
nextInt	no	yes
(	no	no
10	no	no
)	no	no
,	no	no
45	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
messageCount	no	yes
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
failureMessage	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
lowestPrioritySeen	yes	yes
=	no	no
10	no	no
;	no	no
boolean	no	yes
firstMessage	no	yes
=	no	no
true	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
currentPriority	yes	yes
=	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
visit	no	yes
(	no	no
ThreadGroup	no	yes
group	no	yes
,	no	no
int	no	yes
level	no	yes
)	no	no
{	no	no
int	no	yes
numThreads	no	yes
=	no	no
group	no	yes
.	no	no
activeCount	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
=	no	no
new	no	yes
Thread	no	yes
[	no	no
numThreads	no	yes
*	no	no
2	no	no
]	no	no
;	no	no
numThreads	no	yes
=	no	no
group	no	yes
.	no	no
enumerate	no	yes
(	no	no
threads	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numThreads	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
thread	yes	yes
=	no	no
threads	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no

try	no	yes
{	no	no
if	no	yes
(	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
trackException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
session	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
trackException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
connection	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
trackException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

try	no	yes
{	no	no
if	no	yes
(	no	no
ctx	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
ctx	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
trackException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
private	no	yes
void	no	yes
trackException	no	yes
(	no	no
String	no	yes
s	no	yes
,	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
s	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
error	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
}	no	no
final	no	yes
Random	no	yes
random	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ClientThread	no	yes
>	no	no
threads	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
ClientThread	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
threads	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
ClientThread	no	yes
(	no	no
tg	no	yes
,	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Thread	no	yes
thread	yes	yes
:	no	no
threads	no	yes
)	no	no
{	no	no
thread	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ExecutorService	no	yes
doTheInterrupts	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
threads	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
visit	no	yes
(	no	no
ThreadGroup	no	yes
group	no	yes
,	no	no
int	no	yes
level	no	yes
)	no	no
{	no	no
int	no	yes
numThreads	no	yes
=	no	no
group	no	yes
.	no	no
activeCount	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
=	no	no
new	no	yes
Thread	no	yes
[	no	no
numThreads	no	yes
*	no	no
2	no	no
]	no	no
;	no	no
numThreads	no	yes
=	no	no
group	no	yes
.	no	no
enumerate	no	yes
(	no	no
threads	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numThreads	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
thread	yes	yes
=	no	no
threads	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
runTest	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
produceSingleMessage	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
getThrowableInformation	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
getThrowableInformation	no	yes
(	no	no
)	no	no
.	no	no
getThrowable	no	yes
(	no	no
)	no	no
instanceof	no	no
InterruptedException	no	yes
)	no	no
{	no	no
InterruptedException	no	yes
ie	yes	yes
=	no	no
(	no	no
InterruptedException	no	yes
)	no	no
event	no	yes
.	no	no
getThrowableInformation	no	yes
(	no	no
)	no	no
.	no	no
getThrowable	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ie	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
startConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
sessionWithListener	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
startConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
sessionWithListener	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
private	no	yes
Session	no	yes
session	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
cnt	no	yes
=	no	no
0	no	no
;	no	no
cnt	no	yes
<	no	no
2	no	no
;	no	no
cnt	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
50000	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
sessionWithListener	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
private	no	yes
Session	no	yes
session	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
cnt	no	yes
=	no	no
0	no	no
;	no	no
cnt	no	yes
<	no	no
2	no	no
;	no	no
cnt	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
50000	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
)	no	no
;	no	no
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
private	no	yes
Session	no	yes
session	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
cnt	no	yes
=	no	no
0	no	no
;	no	no
cnt	no	yes
<	no	no
2	no	no
;	no	no
cnt	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
50000	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
Connection	no	yes
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerMQSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
activeConsumer	no	yes
=	no	no
(	no	no
TopicSubscriber	no	yes
)	no	no
consumerMQSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
final	no	yes
BrokerView	no	yes
brokerView	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
brokerView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
brokerView	no	yes
.	no	no
destroyDurableSubscriber	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ActiveMQSession	no	yes
.	no	no
INDIVIDUAL_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
LinkedBlockingQueue	no	yes
<	no	no
Message	no	yes
>	no	no
workQueue	no	yes
=	no	no
new	no	yes
LinkedBlockingQueue	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Thread	no	yes
consumer1Thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
totalConsumed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
NUM_MESSAGES	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer1	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
workQueue	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

Message	no	yes
message	no	yes
=	no	no
consumer1	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
workQueue	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
consumer1Thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
consumer2Thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
totalConsumed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
NUM_MESSAGES	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer2	no	yes
.	no	no
receive	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
workQueue	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
)	no	no
;	no	no
consumer1Thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
consumer2Thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
totalConsumed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
NUM_MESSAGES	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer2	no	yes
.	no	no
receive	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
workQueue	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
consumer2Thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
consumer2Thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_MESSAGES	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
pause	no	yes
.	no	no
nextInt	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
ackingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
getMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CompositeData	no	yes
messages	no	yes
[	no	no
]	no	no
=	no	no
queueView	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
messageID	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
messages	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
messageID	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
queueView	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageID	yes	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testDurableConsumerEnqueueCountWithZeroPrefetch	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
getPrefetchPolicy	no	yes
(	no	no
)	no	no
.	no	no
setAll	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
BrokerView	no	yes
view	no	yes
=	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
subName	no	yes
=	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
=	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getEnqueueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
BrokerView	no	yes
view	no	yes
=	no	no
brokerService	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
subName	no	yes
=	no	no
view	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
=	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getEnqueueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
getEnqueueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
600	no	no
)	no	no
;	no	no

final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
101	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

assertEquals	no	yes
(	no	no
101	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
101	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
%	no	no
2	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
4	no	no
,	no	no
4000	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
200	no	no
,	no	no
queueView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
%	no	no
2	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
4	no	no
,	no	no
4000	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
200	no	no
,	no	no
queueView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
msgCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
msgCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
100	no	no
)	no	no
{	no	no

assertEquals	no	yes
(	no	no
200	no	no
,	no	no
queueView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
msgCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
msgCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
100	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

try	no	yes
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
+	no	no
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Message	no	yes
received	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
received	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageCount	no	yes
+	no	no
1	no	no
,	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
dlqMessages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dlqMessages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
-	no	no
1	no	no
,	no	no
dlqMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no

ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Message	no	yes
received	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
received	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageCount	no	yes
+	no	no
1	no	no
,	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
dlqMessages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dlqMessages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
-	no	no
1	no	no
,	no	no
dlqMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no

Message	no	yes
received	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
received	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageCount	no	yes
+	no	no
1	no	no
,	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
dlqMessages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dlqMessages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
-	no	no
1	no	no
,	no	no
dlqMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
received	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageCount	no	yes
+	no	no
1	no	no
,	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
dlqMessages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
received	no	yes
=	no	no
dlqConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
dlqMessages	no	yes
.	no	no
add	no	yes
(	no	no
received	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
-	no	no
1	no	no
,	no	no
dlqMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	yes	yes
=	no	no
getProxyToQueueViewMBean	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queueView	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

prefecthPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefecthPolicy	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
,	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
!	no	no
done	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
RECEIVE_POLL_PERIOD	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
RECEIVE_BATCH	no	yes
&&	no	no
!	no	no
done	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
counter	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
counter	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
counter	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
Message	no	yes
createMessage	no	yes
(	no	no
int	no	yes
i	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
payload	no	yes
+	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
producer	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
messageCount	no	yes
)	no	no
;	no	no
ConsumerThread	no	yes
consumer	no	yes
=	no	no
new	no	yes
ConsumerThread	no	yes
(	no	no
consumerSess	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setBreakOnNull	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
messageCount	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
producer	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
,	no	no
consumer	no	yes
.	no	no
getReceived	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
fileCount	yes	yes
=	no	no
getFileCount	no	yes
(	no	no
kahaDbDir	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testDurableSubMessageLoss	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
connectionUri	no	yes
=	no	no
brokerService	no	yes
.	no	no
addConnector	no	yes
(	no	no
brokerUrl	no	yes
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setPersistent	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setKeepDurableSubsActive	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setAdvisorySupport	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numTests	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
Boolean	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setPriority	no	yes
(	no	no
Message	no	yes
.	no	no
DEFAULT_PRIORITY	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
Message	no	yes
.	no	no
DEFAULT_TIME_TO_LIVE	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
seq	yes	yes
=	no	no
1	no	no
;	no	no
seq	yes	yes
<=	no	no
numMsgs	no	yes
;	no	no
++	no	no
seq	yes	yes
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
seq	yes	yes
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

return	no	yes
Boolean	no	yes
.	no	no
TRUE	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
Callable	no	yes
<	no	no
Boolean	no	yes
>	no	no
durableSubscriber	no	yes
=	no	no
new	no	yes
Callable	no	yes
<	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
;	no	no
Connection	no	yes
connection	no	yes
;	no	no
Session	no	yes
session	no	yes
;	no	no
Topic	no	yes
topic	no	yes
;	no	no
TopicSubscriber	no	yes
consumer	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
Boolean	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
seqExpected	yes	yes
=	no	no
1	no	no
;	no	no
seqExpected	yes	yes
<=	no	no
numMsgs	no	yes
;	no	no
++	no	no
seqExpected	yes	yes
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
3000L	no	yes
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Destination	no	yes
test_data_destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
test_data_destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
test_data_destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
test_data_destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

createBroker	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
verifyPeerBrokerInfos	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
ConsumerState	no	yes
>	no	no
consumerStates	no	yes
=	no	no
startAllGWConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
startAllGWFanoutConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	no	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no

startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
verifyPeerBrokerInfos	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
ConsumerState	no	yes
>	no	no
consumerStates	no	yes
=	no	no
startAllGWConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
startAllGWFanoutConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	yes	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	no	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
expected	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
expected	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
expected	no	yes
-	no	no
50	no	no
)	no	no
{	no	no
dumpQueueStat	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
tally	yes	yes
.	no	no
expected	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
startConsumer	no	yes
(	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
,	no	no
tally	yes	yes
.	no	no
destination	no	yes
)	no	no
;	no	no
}	no	no
;	no	no
return	no	yes
false	no	yes
;	no	no

private	no	yes
long	no	yes
dumpQueueStat	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
sumTotal	no	yes
=	no	no
0	no	no
;	no	no
Collection	no	yes
<	no	no
BrokerItem	no	yes
>	no	no
brokerList	no	yes
=	no	no
brokers	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
BrokerItem	no	yes
>	no	no
i	no	yes
=	no	no
brokerList	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
BrokerService	no	yes
brokerService	yes	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
objectName	no	yes
:	no	no
brokerService	yes	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
destination	no	yes
!=	no	no
null	no	yes
&&	no	no
objectName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
destination	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
QueueViewMBean	no	yes
qViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
brokerService	yes	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no

compositeDest	no	yes
.	no	no
append	no	yes
(	no	no
','	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ActiveMQQueue	no	yes
compositeQ	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
compositeDest	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
id	no	yes
=	no	no
0	no	no
;	no	no
id	no	yes
<	no	no
nBrokers	no	yes
;	no	no
id	no	yes
++	no	no
)	no	no
{	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
(	no	no
portBase	no	yes
+	no	no
id	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
QueueConnection	no	yes
queueConnection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
queueConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
QueueSession	no	yes
queueSession	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
queueSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
compositeQ	no	yes
)	no	no
;	no	no
queueSession	no	yes
.	no	no
createReceiver	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
queueSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

accumulators	no	yes
.	no	no
put	no	yes
(	no	no
destination	no	yes
,	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumerState	no	yes
.	no	no
accumulator	no	yes
=	no	no
accumulators	no	yes
.	no	no
get	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
queueReceiver	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
consumerSleepTime	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
consumerSleepTime	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
consumerState	no	yes
.	no	no
accumulator	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
consumerState	no	yes
.	no	no
expected	no	yes
.	no	no
remove	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
verifyPeerBrokerInfo	no	yes
(	no	no
BrokerItem	no	yes
brokerItem	no	yes
,	no	no
final	no	yes
int	no	yes
max	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
=	no	no
brokerItem	no	yes
.	no	no
broker	yes	yes
;	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	yes	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

createBroker	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
verifyPeerBrokerInfos	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
ConsumerState	no	yes
>	no	no
consumerStates	no	yes
=	no	no
startAllGWConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
startAllGWFanoutConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	no	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no

startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
verifyPeerBrokerInfos	no	yes
(	no	no
numBrokers	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
List	no	yes
<	no	no
ConsumerState	no	yes
>	no	no
consumerStates	no	yes
=	no	no
startAllGWConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
startAllGWFanoutConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	yes	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
List	no	yes
<	no	no
ConsumerState	no	yes
>	no	no
consumerStates	no	yes
=	no	no
startAllGWConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
startAllGWFanoutConsumers	no	yes
(	no	no
numBrokers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
produce	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
ConsumerState	no	yes
tally	yes	yes
:	no	no
consumerStates	no	yes
)	no	no
{	no	no
final	no	yes
int	no	yes
expected	no	yes
=	no	no
numMessages	no	yes
*	no	no
(	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
isComposite	no	yes
(	no	no
)	no	no
?	no	no
tally	yes	yes
.	no	no
destination	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
:	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tally	yes	yes
.	no	no
brokerName	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
destination	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
accumulator	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
expected	no	yes
+	no	no
+	no	no
tally	yes	yes
.	no	no
expected	no	yes
)	no	no
;	no	no
return	no	yes
false	no	yes
;	no	no

compositeDest	no	yes
.	no	no
append	no	yes
(	no	no
','	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ActiveMQQueue	no	yes
compositeQ	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
compositeDest	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
id	no	yes
=	no	no
0	no	no
;	no	no
id	no	yes
<	no	no
nBrokers	no	yes
;	no	no
id	no	yes
++	no	no
)	no	no
{	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
(	no	no
portBase	no	yes
+	no	no
id	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
QueueConnection	no	yes
queueConnection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
queueConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
QueueSession	no	yes
queueSession	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
queueSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
compositeQ	no	yes
)	no	no
;	no	no
queueSession	no	yes
.	no	no
createReceiver	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
queueSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

accumulators	no	yes
.	no	no
put	no	yes
(	no	no
destination	no	yes
,	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumerState	no	yes
.	no	no
accumulator	no	yes
=	no	no
accumulators	no	yes
.	no	no
get	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
queueReceiver	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
consumerSleepTime	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
consumerSleepTime	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
consumerState	no	yes
.	no	no
accumulator	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
consumerState	no	yes
.	no	no
expected	no	yes
.	no	no
remove	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
AtomicInteger	no	yes
toSend	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
numMessages	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
numProducers	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
id	no	yes
=	no	no
i	no	yes
%	no	no
numBrokers	no	yes
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
(	no	no
portBase	no	yes
+	no	no
id	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
QueueConnection	no	yes
queueConnection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
queueConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
QueueSession	no	yes
queueSession	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
queueSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
int	no	yes
val	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
val	yes	yes
=	no	no
toSend	no	yes
.	no	no
decrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no
ActiveMQQueue	no	yes
compositeQ	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
verifyPeerBrokerInfo	no	yes
(	no	no
BrokerItem	no	yes
brokerItem	no	yes
,	no	no
final	no	yes
int	no	yes
max	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
=	no	no
brokerItem	no	yes
.	no	no
broker	yes	yes
;	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	yes	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

PolicyEntry	no	yes
policy	no	yes
=	no	no
new	no	yes
PolicyEntry	no	yes
(	no	no
)	no	no
;	no	no
policy	no	yes
.	no	no
setExpireMessagesPeriod	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
policy	no	yes
.	no	no
setMemoryLimit	no	yes
(	no	no
memoryLimit	no	yes
)	no	no
;	no	no
policy	no	yes
.	no	no
setProducerFlowControl	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
PolicyMap	no	yes
pMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
pMap	no	yes
.	no	no
setDefaultEntry	no	yes
(	no	no
policy	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
pMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
send	no	yes
(	no	no
ProducerBrokerExchange	no	yes
producerExchange	no	yes
,	no	no
final	no	yes
Message	no	yes
messageSend	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageSend	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
&&	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
Integer	no	yes
num	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TransactionBroker	no	yes
transactionBroker	no	yes
=	no	no
(	no	no
TransactionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
TransactionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
transactionBroker	no	yes
.	no	no
getTransaction	no	yes
(	no	no
producerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

policy	no	yes
.	no	no
setMemoryLimit	no	yes
(	no	no
memoryLimit	no	yes
)	no	no
;	no	no
policy	no	yes
.	no	no
setProducerFlowControl	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
PolicyMap	no	yes
pMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
pMap	no	yes
.	no	no
setDefaultEntry	no	yes
(	no	no
policy	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
pMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
send	no	yes
(	no	no
ProducerBrokerExchange	no	yes
producerExchange	no	yes
,	no	no
final	no	yes
Message	no	yes
messageSend	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageSend	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
&&	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
Integer	no	yes
num	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TransactionBroker	no	yes
transactionBroker	no	yes
=	no	no
(	no	no
TransactionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
TransactionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
transactionBroker	no	yes
.	no	no
getTransaction	no	yes
(	no	no
producerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
num	yes	yes
==	no	no
5	no	no
)	no	no
{	no	no

PolicyMap	no	yes
pMap	no	yes
=	no	no
new	no	yes
PolicyMap	no	yes
(	no	no
)	no	no
;	no	no
pMap	no	yes
.	no	no
setDefaultEntry	no	yes
(	no	no
policy	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
pMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
send	no	yes
(	no	no
ProducerBrokerExchange	no	yes
producerExchange	no	yes
,	no	no
final	no	yes
Message	no	yes
messageSend	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageSend	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
&&	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
Integer	no	yes
num	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TransactionBroker	no	yes
transactionBroker	no	yes
=	no	no
(	no	no
TransactionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
TransactionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
transactionBroker	no	yes
.	no	no
getTransaction	no	yes
(	no	no
producerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
num	yes	yes
==	no	no
5	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
slowSendResume	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

broker	no	yes
.	no	no
setDestinationPolicy	no	yes
(	no	no
pMap	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
send	no	yes
(	no	no
ProducerBrokerExchange	no	yes
producerExchange	no	yes
,	no	no
final	no	yes
Message	no	yes
messageSend	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageSend	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
&&	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
Integer	no	yes
num	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TransactionBroker	no	yes
transactionBroker	no	yes
=	no	no
(	no	no
TransactionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
TransactionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
transactionBroker	no	yes
.	no	no
getTransaction	no	yes
(	no	no
producerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
num	yes	yes
==	no	no
5	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
slowSendResume	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
messageCount	no	yes
+	no	no
1	no	no
==	no	no
num	yes	yes
)	no	no
{	no	no

if	no	yes
(	no	no
messageSend	yes	yes
.	no	no
isInTransaction	no	yes
(	no	no
)	no	no
&&	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
final	no	yes
Integer	no	yes
num	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
messageSend	yes	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TransactionBroker	no	yes
transactionBroker	no	yes
=	no	no
(	no	no
TransactionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getAdaptor	no	yes
(	no	no
TransactionBroker	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
transactionBroker	no	yes
.	no	no
getTransaction	no	yes
(	no	no
producerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
,	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
,	no	no
false	no	yes
)	no	no
.	no	no
addSynchronization	no	yes
(	no	no
new	no	yes
Synchronization	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
afterCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
num	yes	yes
==	no	no
5	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
slowSendResume	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
messageCount	no	yes
+	no	no
1	no	no
==	no	no
num	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
num	yes	yes
+	no	no
+	no	no
messageSend	yes	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
slowSendResume	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no

sessionVector	no	yes
.	no	no
add	no	yes
(	no	no
send	no	yes
(	no	no
i	no	yes
,	no	no
1	no	no
,	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
add	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
id	no	yes
=	no	no
i	no	yes
;	no	no
executorService	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
sessionVector	no	yes
.	no	no
get	no	yes
(	no	no
id	no	yes
)	no	no
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
fail	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
fail	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
DestinationViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
DestinationViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
DestinationViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
false	no	yes
)	no	no
assertTrue	no	yes
(	no	no
+	no	no
messageCount	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
Session	no	yes
send	no	yes
(	no	no
int	no	yes
id	no	yes
,	no	no
int	no	yes
messageSize	no	yes
,	no	no
boolean	no	yes
transacted	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
transacted	no	yes
,	no	no
transacted	no	yes
?	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
:	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
bytesMessage	yes	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bytesMessage	yes	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
messageSize	no	yes
]	no	no
)	no	no
;	no	no
bytesMessage	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
id	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bytesMessage	yes	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
private	no	yes
void	no	yes
doTestBrowsing	no	yes
(	no	no
int	no	yes
messagesToSend	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
messagesToSend	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
received	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
m	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testFDSLeak	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionURI	no	yes
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
connections	no	yes
=	no	no
100	no	no
;	no	no
final	no	yes
long	no	yes
original	yes	yes
=	no	no
openFileDescriptorCount	no	yes
(	no	no
)	no	no
;	no	no

ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
connections	no	yes
=	no	no
100	no	no
;	no	no
final	no	yes
long	no	yes
original	no	yes
=	no	no
openFileDescriptorCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
original	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
connections	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
connections	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
new	no	yes
Thread	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionURI	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
connections	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
connections	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
new	no	yes
Thread	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionURI	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
getStack	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TextMessage	no	yes
producerMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
producerMessage	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
producerSession	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
consumerMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
String	no	yes
txId	no	yes
=	no	no
consumerMessage	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
txId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
doTestBrowsing	no	yes
(	no	no
int	no	yes
messageToSend	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
ActiveMQQueue	no	yes
queue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
setUseAsyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
messageToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
msgStr	yes	yes
=	no	no
provideMessageText	no	yes
(	no	no
i	no	yes
,	no	no
8192	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
msgStr	yes	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
msgStr	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
msgStr	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
100	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
browsed	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
TextMessage	no	yes
m	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
browsed	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
browsed	yes	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
assertNoUnhandeledExceptions	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
Thread	no	yes
,	no	no
Throwable	no	yes
>	no	no
e	yes	yes
:	no	no
unhandeledExceptions	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertExactMessageCount	no	yes
(	no	no
final	no	yes
String	no	yes
brokerName	yes	yes
,	no	no
Destination	no	yes
destination	no	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ManagementContext	no	yes
context	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
context	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
brokerName	yes	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
currentCount	yes	yes
=	no	no
queueViewMBean	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertExactMessageCount	no	yes
(	no	no
final	no	yes
String	no	yes
brokerName	no	yes
,	no	no
Destination	no	yes
destination	no	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ManagementContext	no	yes
context	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
context	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
brokerName	no	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
currentCount	no	yes
=	no	no
queueViewMBean	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerName	no	yes
+	no	no
+	no	no
queueViewMBean	yes	yes
+	no	no
+	no	no
currentCount	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
!=	no	no
currentCount	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertExactConsumersConnect	no	yes
(	no	no
final	no	yes
String	no	yes
brokerName	yes	yes
,	no	no
Destination	no	yes
destination	no	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ManagementContext	no	yes
context	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
brokerName	yes	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
context	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
long	no	yes
currentCount	yes	yes
=	no	no
queueViewMBean	yes	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertExactConsumersConnect	no	yes
(	no	no
final	no	yes
String	no	yes
brokerName	no	yes
,	no	no
Destination	no	yes
destination	no	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ManagementContext	no	yes
context	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
brokerName	no	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
context	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
long	no	yes
currentCount	no	yes
=	no	no
queueViewMBean	yes	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerName	no	yes
+	no	no
+	no	no
queueViewMBean	yes	yes
+	no	no
+	no	no
currentCount	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
!=	no	no
currentCount	no	yes
)	no	no
{	no	no

}	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
30	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
sub	yes	yes
.	no	no
getDispatchedCounter	no	yes
(	no	no
)	no	no
==	no	no
20	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
30	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getEnqueueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getDequeueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getDispatchedCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getDispatchedQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerView	no	yes
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
30	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
sub	yes	yes
.	no	no
getDispatchedCounter	no	yes
(	no	no
)	no	no
==	no	no
20	no	no
;	no	no
}	no	no
}	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
30	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
25	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getEnqueueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getDequeueCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
sub	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getDispatchedCounter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
20	no	no
,	no	no
sub	yes	yes
.	no	no
getDispatchedQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sub	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
LevelDBStoreViewMBean	no	yes
levelDBView	no	yes
=	no	no
getLevelDBStoreMBean	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
levelDBView	no	yes
)	no	no
;	no	no
levelDBView	no	yes
.	no	no
compact	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
SIZE	no	yes
=	no	no
10	no	no
*	no	no
1024	no	no
;	no	no
final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
30000	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
byte	no	yes
buffer	no	yes
[	no	no
]	no	no
=	no	no
new	no	yes
byte	no	yes
[	no	no
SIZE	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
SIZE	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
buffer	no	yes
[	no	no
i	yes	yes
]	no	no
=	no	no
(	no	no
byte	no	yes
)	no	no
128	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
i	yes	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

buffer	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
(	no	no
byte	no	yes
)	no	no
128	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
(	no	no
done	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableTopicResourcesAreRemoved	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionURI	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
2	no	no
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testDurableTopicResourcesAreRemoved	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionURI	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	yes	yes
=	no	no
0	no	no
;	no	no
j	yes	yes
<	no	no
8	no	no
;	no	no
j	yes	yes
++	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
doTestBytesMessageSetPropertyBeforeCopy	no	yes
(	no	no
Connection	no	yes
connection	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
long	no	yes
sendTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
sendTime	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestStreamMessageSetPropertyBeforeCopy	no	yes
(	no	no
Connection	no	yes
connection	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
StreamMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createStreamMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
long	no	yes
sendTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setLongProperty	no	yes
(	no	no
,	no	no
sendTime	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
roundTripProperties	no	yes
(	no	no
ActiveMQObjectMessage	no	yes
message	no	yes
)	no	no
throws	no	yes
IOException	no	yes
,	no	no
JMSException	no	yes
{	no	no
ActiveMQObjectMessage	no	yes
copy	no	yes
=	no	no
new	no	yes
ActiveMQObjectMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
prop	yes	yes
:	no	no
message	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

consumersStarted	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
consumersStarted	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Destination	no	yes
producerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
PRODUCER_DESTINATION_NAME	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerDestination	no	yes
)	no	no
;	no	no
int	no	yes
messageIndex	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_LIMIT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
3	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumerA	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
14	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumerB	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
messageText	yes	yes
=	no	no
+	no	no
messageIndex	no	yes
++	no	no
+	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
messageText	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
i	no	yes
==	no	no
14	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumerB	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
messageText	no	yes
=	no	no
+	no	no
messageIndex	no	yes
++	no	no
+	no	no
+	no	no
new	no	yes
java	no	yes
.	no	no
util	no	yes
.	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
messageText	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
messageText	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumerA	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerQueue	no	yes
,	no	no
CONSUMER_A_SELECTOR	no	yes
)	no	no
;	no	no
consumerA	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listenerA	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumerB	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerQueue	no	yes
,	no	no
CONSUMER_B_SELECTOR	no	yes
)	no	no
;	no	no
consumerB	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listenerB	no	yes
)	no	no
;	no	no
consumerAtoConsumeCount	yes	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

broker	no	yes
=	no	no
BrokerFactory	no	yes
.	no	no
createBroker	no	yes
(	no	no
uri	no	yes
)	no	no
;	no	no
VirtualDestinationInterceptor	no	yes
interceptor	no	yes
=	no	no
new	no	yes
VirtualDestinationInterceptor	no	yes
(	no	no
)	no	no
;	no	no
VirtualTopic	no	yes
virtualTopic	no	yes
=	no	no
new	no	yes
VirtualTopic	no	yes
(	no	no
)	no	no
;	no	no
virtualTopic	no	yes
.	no	no
setName	no	yes
(	no	no
)	no	no
;	no	no
virtualTopic	no	yes
.	no	no
setSelectorAware	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
VirtualDestination	no	yes
[	no	no
]	no	no
virtualDestinations	no	yes
=	no	no
{	no	no
virtualTopic	no	yes
}	no	no
;	no	no
interceptor	no	yes
.	no	no
setVirtualDestinations	no	yes
(	no	no
virtualDestinations	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDestinationInterceptors	no	yes
(	no	no
new	no	yes
DestinationInterceptor	no	yes
[	no	no
]	no	no
{	no	no
interceptor	no	yes
}	no	no
)	no	no
;	no	no
SubQueueSelectorCacheBrokerPlugin	no	yes
subQueueSelectorCacheBrokerPlugin	no	yes
=	no	no
new	no	yes
SubQueueSelectorCacheBrokerPlugin	no	yes
(	no	no
)	no	no
;	no	no
BrokerPlugin	no	yes
[	no	no
]	no	no
updatedPlugins	no	yes
=	no	no
{	no	no
subQueueSelectorCacheBrokerPlugin	no	yes
}	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
updatedPlugins	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
toConsume	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
message	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
bytesMessage	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bytesMessage	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
messageSize	no	yes
]	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bigQueue	no	yes
,	no	no
bytesMessage	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
queueViewMBean	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueViewMBean	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
queueViewMBean	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Queue	no	yes
underTest	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
Message	no	yes
[	no	no
]	no	no
browsed	yes	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
bytesMessage	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bytesMessage	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
messageSize	no	yes
]	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bigQueue	no	yes
,	no	no
bytesMessage	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
queueViewMBean	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueViewMBean	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
queueViewMBean	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Queue	no	yes
underTest	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
Message	no	yes
[	no	no
]	no	no
browsed	yes	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
maxBrowsePageSize	no	yes
,	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
browsed	yes	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bigQueue	no	yes
,	no	no
bytesMessage	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
QueueViewMBean	no	yes
queueViewMBean	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
queueViewMBean	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueViewMBean	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
queueViewMBean	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Queue	no	yes
underTest	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
Message	no	yes
[	no	no
]	no	no
browsed	no	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browsed	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
maxBrowsePageSize	no	yes
,	no	no
browsed	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
browsed	no	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browsed	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
maxBrowsePageSize	no	yes
,	no	no
browsed	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
gc	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
free	yes	yes
=	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
freeMemory	no	yes
(	no	no
)	no	no
/	no	no
1024	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
queueViewMBean	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
queueViewMBean	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
queueViewMBean	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Queue	no	yes
underTest	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bigQueue	no	yes
)	no	no
;	no	no
Message	no	yes
[	no	no
]	no	no
browsed	yes	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
maxBrowsePageSize	no	yes
,	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
browsed	yes	yes
=	no	no
underTest	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
maxBrowsePageSize	no	yes
,	no	no
browsed	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
gc	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
free	no	yes
=	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
freeMemory	no	yes
(	no	no
)	no	no
/	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
free	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
freeMemory	no	yes
(	no	no
)	no	no
/	no	no
1024	no	no
)	no	no
;	no	no

ActiveMQXAConnection	no	yes
xaConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
xaConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
session	no	yes
=	no	no
xaConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
session	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
this	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
end	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
ret	no	yes
=	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
XAResource	no	yes
.	no	no
XA_OK	no	yes
==	no	no
ret	no	yes
)	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
xae	yes	yes
)	no	no
{	no	no

xaConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
session	no	yes
=	no	no
xaConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
session	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	yes	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	yes	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
this	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
end	no	yes
(	no	no
tid	yes	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
ret	no	yes
=	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
XAResource	no	yes
.	no	no
XA_OK	no	yes
==	no	no
ret	no	yes
)	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	yes	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
xae	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
xae	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
repeat	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

int	no	yes
receivedMessageCount	yes	yes
=	no	no
0	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
consumerFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
consumerFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
consumerConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
textMsg	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
textMsg	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
return	no	yes
receivedMessageCount	yes	yes
;	no	no
}	no	no
receivedMessageCount	yes	yes
++	no	no
;	no	no

ExportQueueConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
new	no	yes
ExportQueuePublisher	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
publisherMessagesPerThread	no	yes
,	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
long	no	yes
totalStart	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	yes	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	yes	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
new	no	yes
ExportQueuePublisher	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
publisherMessagesPerThread	no	yes
,	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
long	no	yes
totalStart	yes	yes
=	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	no	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
(	no	no
publishedIds	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

consumer	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	no	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
(	no	no
publishedIds	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
publishedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctPublishedCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toSeconds	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
totalStart	no	yes
)	no	no
)	no	no
;	no	no
long	no	yes
endWait	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
consumerWaitForConsumption	no	yes
;	no	no
while	no	yes
(	no	no
!	no	no
consumer	yes	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
endWait	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
secs	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secs	no	yes
+	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no

consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	no	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
(	no	no
publishedIds	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
publishedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctPublishedCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toSeconds	no	yes
(	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
totalStart	yes	yes
)	no	no
)	no	no
;	no	no
long	no	yes
endWait	no	yes
=	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
consumerWaitForConsumption	no	yes
;	no	no
while	no	yes
(	no	no
!	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
&&	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
endWait	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
secs	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secs	no	yes
+	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no

int	no	yes
secs	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secs	no	yes
+	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
toSeconds	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
totalStart	no	yes
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
consumer	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
idList	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctConsumed	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
idList	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
idList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctConsumed	no	yes
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
distinctPublishedCount	no	yes
-	no	no
distinctConsumed	no	yes
;	no	no

ExportQueueConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
new	no	yes
ExportQueuePublisher	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
publisherMessagesPerThread	no	yes
,	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	yes	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	yes	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	yes	yes
=	no	no
new	no	yes
TreeSet	no	yes
(	no	no
publishedIds	yes	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
publishedIds	no	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
(	no	no
publishedIds	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
publishedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctPublishedCount	no	yes
)	no	no
;	no	no
long	no	yes
endWait	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
consumerWaitForConsumption	no	yes
;	no	no
while	no	yes
(	no	no
!	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
endWait	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
secs	yes	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no

try	no	yes
{	no	no
int	no	yes
secs	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secs	no	yes
+	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
consumer	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
idList	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctConsumed	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
idList	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
idList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctConsumed	no	yes
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
distinctPublishedCount	no	yes
-	no	no
distinctConsumed	no	yes
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
(	no	no
diff	no	yes
>	no	no
0	no	no
?	no	no
diff	no	yes
:	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no

ExportQueueConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
new	no	yes
ExportQueuePublisher	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
publisherMessagesPerThread	no	yes
,	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	yes	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
publishedIds	yes	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	yes	yes
=	no	no
new	no	yes
TreeSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
publishedIds	yes	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
new	no	yes
ExportQueueConsumer	no	yes
(	no	no
activemqURL	no	yes
,	no	no
activemqQueues	no	yes
,	no	no
consumerThreadsPerQueue	no	yes
,	no	no
consumerBatchSize	no	yes
,	no	no
publisherMessagesPerThread	no	yes
*	no	no
publisherThreadCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctPublishedCount	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
publisher	no	yes
.	no	no
waitForCompletion	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
publishedIds	no	yes
=	no	no
publisher	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
;	no	no
distinctPublishedCount	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
publishedIds	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
publishedIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctPublishedCount	no	yes
)	no	no
;	no	no
long	no	yes
endWait	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
consumerWaitForConsumption	no	yes
;	no	no
while	no	yes
(	no	no
!	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
&&	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
<	no	no
endWait	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
secs	yes	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no

try	no	yes
{	no	no
int	no	yes
secs	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
endWait	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secs	no	yes
+	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
.	no	no
completed	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
consumer	no	yes
.	no	no
getIDs	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
idList	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
distinctConsumed	no	yes
=	no	no
new	no	yes
TreeSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
idList	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	yes
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
idList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
distinctConsumed	no	yes
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
distinctPublishedCount	no	yes
-	no	no
distinctConsumed	no	yes
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
(	no	no
diff	no	yes
>	no	no
0	no	no
?	no	no
diff	no	yes
:	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
consumeAndRollback	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
InterruptedException	no	yes
{	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
RedeliveryPolicy	no	yes
noRedelivery	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
noRedelivery	no	yes
.	no	no
setMaximumRedeliveries	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setRedeliveryPolicy	no	yes
(	no	no
noRedelivery	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
m	yes	yes
;	no	no
while	no	yes
(	no	no
(	no	no
m	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
long	no	yes
getQueueSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
queueSize	yes	yes
=	no	no
0	no	no
;	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueViewMBean	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
BrokerMBeanSupport	no	yes
.	no	no
createDestinationName	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBrokerObjectName	no	yes
(	no	no
)	no	no
,	no	no
dest	yes	yes
)	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
queueSize	yes	yes
=	no	no
queueViewMBean	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testManyTempDestinations	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
DEST_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
destination	no	yes
[	no	no
i	yes	yes
]	no	no
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no

errorDetectorAppender	no	yes
=	no	no
new	no	yes
AppenderSkeleton	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
close	no	yes
(	no	no
)	no	no
{	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
requiresLayout	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
false	no	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
append	no	yes
(	no	no
LoggingEvent	no	yes
event	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
isGreaterOrEqual	no	yes
(	no	no
Level	no	yes
.	no	no
ERROR	no	yes
)	no	no
)	no	no
hasErrorInLogger	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getRootLogger	no	yes
(	no	no
)	no	no
.	no	no
addAppender	no	yes
(	no	no
errorDetectorAppender	no	yes
)	no	no
;	no	no
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
false	no	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
append	no	yes
(	no	no
LoggingEvent	no	yes
event	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	no	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
isGreaterOrEqual	no	yes
(	no	no
Level	no	yes
.	no	no
ERROR	no	yes
)	no	no
)	no	no
hasErrorInLogger	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getRootLogger	no	yes
(	no	no
)	no	no
.	no	no
addAppender	no	yes
(	no	no
errorDetectorAppender	no	yes
)	no	no
;	no	no
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	yes	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	yes	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
producer	no	yes
)	no	no
;	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
Thread	no	yes
.	no	no
interrupted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
producer	no	yes
)	no	no
;	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
Thread	no	yes
.	no	no
interrupted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
0	no	no
,	no	no
100	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	yes	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
i	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
InterruptedIOException	no	yes
)	no	no
)	no	no
{	no	no
throw	no	yes
e	yes	yes
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
2	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testConsumerProperlyClosedWithoutError	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Random	no	yes
rn	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
NUMBER_OF_RUNS	yes	yes
=	no	no
1000	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
run	yes	yes
=	no	no
0	no	no
;	no	no
run	yes	yes
<	no	no
NUMBER_OF_RUNS	yes	yes
;	no	no
run	yes	yes
++	no	no
)	no	no
{	no	no
final	no	yes
AtomicInteger	no	yes
numberOfMessagesReceived	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
2	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testConsumerProperlyClosedWithoutError	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Random	no	yes
rn	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
NUMBER_OF_RUNS	no	yes
=	no	no
1000	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
run	no	yes
=	no	no
0	no	no
;	no	no
run	no	yes
<	no	no
NUMBER_OF_RUNS	no	yes
;	no	no
run	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
AtomicInteger	no	yes
numberOfMessagesReceived	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
run	no	yes
,	no	no
NUMBER_OF_RUNS	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
DUPS_OK_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
NUMBER_OF_RUNS	no	yes
=	no	no
1000	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
run	no	yes
=	no	no
0	no	no
;	no	no
run	no	yes
<	no	no
NUMBER_OF_RUNS	no	yes
;	no	no
run	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
AtomicInteger	no	yes
numberOfMessagesReceived	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
run	no	yes
,	no	no
NUMBER_OF_RUNS	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
DUPS_OK_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	yes	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	yes	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessagesReceived	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessagesReceived	yes	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
consumer	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
rn	no	yes
.	no	no
nextInt	no	yes
(	no	no
5	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
hasFailureInProducer	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
hasErrorInLogger	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
conn	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	yes	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
JmsUtils	no	yes
.	no	no
closeConnection	no	yes
(	no	no
conn	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
connector	no	yes
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
startupLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
TransportConnector	no	yes
connector	no	yes
=	no	no
this	no	yes
.	no	no
connector	no	yes
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
!	no	no
exceptions	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

JmsUtils	no	yes
.	no	no
closeConnection	no	yes
(	no	no
conn	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
connector	no	yes
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
startupLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
TransportConnector	no	yes
connector	no	yes
=	no	no
this	no	yes
.	no	no
connector	no	yes
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
!	no	no
exceptions	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exceptions	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
connector	no	yes
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
exceptions	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
maxConnections	no	yes
||	no	no
connector	no	yes
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
maxConnections	no	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
createPrepareTransaction	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
message	no	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
StubConnection	no	yes
connectionC	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
ConnectionInfo	no	yes
connectionInfoC	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfoC	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfoC	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no

ConnectionInfo	no	yes
connectionInfoC	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfoC	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfoC	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
m	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
m	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
m	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
)	no	no
)	no	no
;	no	no
assertNoMessagesLeft	no	yes
(	no	no
connectionC	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createCommitTransaction2Phase	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
m	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no

message	no	yes
=	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
)	no	no
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
proxy	no	yes
.	no	no
isCacheEnabled	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StubConnection	no	yes
connectionC	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
ConnectionInfo	no	yes
connectionInfoC	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfoC	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfoC	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
3	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
m	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no

SessionInfo	no	yes
sessionInfoC	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
consumerInfo	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfoC	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfoC	no	yes
)	no	no
;	no	no
connectionC	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo	no	yes
)	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
3	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
m	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connectionC	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
m	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
m	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
m	yes	yes
.	no	no
getTransactionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connectionC	no	yes
.	no	no
request	no	yes
(	no	no
createAck	no	yes
(	no	no
consumerInfo	no	yes
,	no	no
m	yes	yes
,	no	no
1	no	no
,	no	no
MessageAck	no	yes
.	no	no
STANDARD_ACK_TYPE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
txid	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
request	no	yes
(	no	no
createCommitTransaction2Phase	no	yes
(	no	no
connectionInfo	no	yes
,	no	no
txid	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
4	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
payload	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
65535	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
payload	no	yes
,	no	no
(	no	no
byte	no	yes
)	no	no
255	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
counter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
purge	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
!	no	no
done	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
queueView	no	yes
.	no	no
getBlockedSends	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
long	no	yes
queueSize	yes	yes
=	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
queueSize	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
60000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
counter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
purge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

)	no	no
;	no	no
purge	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
}	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
purge	no	yes
.	no	no
join	no	yes
(	no	no
60000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
purge	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	no	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
==	no	no
counter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testReadCounter	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
connectionUri	no	yes
)	no	no
;	no	no
byte	no	yes
[	no	no
]	no	no
payload	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
50	no	no
*	no	no
1024	no	no
*	no	no
1024	no	no
]	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
connection	yes	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
test	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQQueue	no	yes
compositeSendTo	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUrl	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
compositeSendTo	no	yes
)	no	no
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
dest	yes	yes
:	no	no
compositeSendTo	no	yes
.	no	no
getCompositeDestinations	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	yes	yes
)	no	no
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
tesIndividualAcksWithClosedConsumerAndAuditAsync	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
produceSomeMessages	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ActiveMQSession	no	yes
.	no	no
INDIVIDUAL_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
done	no	yes
.	no	no
await	no	yes
(	no	no
15	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
tesIndividualAcksWithClosedConsumerAndAuditSync	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
produceSomeMessages	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ActiveMQSession	no	yes
.	no	no
INDIVIDUAL_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
ActiveMQSession	no	yes
.	no	no
INDIVIDUAL_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testVoidSupport	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
sendMessage	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
name	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ActiveMQObjectMessage	no	yes
msg	no	yes
=	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
AMQ5921MessagePayload	no	yes
payload	yes	yes
=	no	no
(	no	no
AMQ5921MessagePayload	no	yes
)	no	no
msg	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dlq	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
Message	no	yes
.	no	no
DEFAULT_PRIORITY	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
dlq	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
==	no	no
MSG_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Deque	no	yes
<	no	no
String	no	yes
>	no	no
browsed	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
CompositeData	no	yes
[	no	no
]	no	no
elements	no	yes
=	no	no
queueView	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
elements	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
CompositeData	no	yes
element	no	yes
:	no	no
elements	no	yes
)	no	no
{	no	no
String	no	yes
messageID	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
element	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Deque	no	yes
<	no	no
String	no	yes
>	no	no
browsed	no	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
CompositeData	no	yes
[	no	no
]	no	no
elements	no	yes
=	no	no
queueView	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
,	no	no
elements	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
CompositeData	no	yes
element	no	yes
:	no	no
elements	no	yes
)	no	no
{	no	no
String	no	yes
messageID	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
element	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
messageID	yes	yes
)	no	no
;	no	no
browsed	no	yes
.	no	no
add	no	yes
(	no	no
messageID	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
removedMsgId	no	yes
=	no	no
browsed	no	yes
.	no	no
removeFirst	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
queueView	no	yes
.	no	no
removeMessage	no	yes
(	no	no
removedMsgId	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
-	no	no
1	no	no
,	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
elements	no	yes
=	no	no
queueView	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MSG_COUNT	no	yes
-	no	no
1	no	no
,	no	no
elements	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
CompositeData	no	yes
element	no	yes
:	no	no
elements	no	yes
)	no	no
{	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
TextMessage	no	yes
txtMessage	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
txtMessage	no	yes
.	no	no
setText	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
txtMessage	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
4	no	no
,	no	no
1000l	no	yes
)	no	no
;	no	no
}	no	no
final	no	yes
QueueViewMBean	no	yes
view	yes	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
view	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testPersistJMSRedeliveredMessageLossOnIndexRebuild	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
msgCount	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
ITERATIONS	no	yes
=	no	no
3	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no

Runnable	no	yes
r	no	yes
=	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
cx	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
8	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
count	yes	yes
<	no	no
100	no	no
;	no	no
count	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
RequestTimedOutIOException	no	yes
)	no	no
{	no	no
exceptionCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testSlowConsumerAdvisory	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicFilter	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
testName	no	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
Topic	no	yes
advisoryTopic	no	yes
=	no	no
AdvisorySupport	no	yes
.	no	no
getSlowConsumerAdvisoryTopic	no	yes
(	no	no
ActiveMQDestination	no	yes
.	no	no
createDestination	no	yes
(	no	no
topicA	no	yes
,	no	no
ActiveMQDestination	no	yes
.	no	no
TOPIC_TYPE	no	yes
)	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
advisoryConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicA	no	yes
)	no	no
,	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
m	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
Topic	no	yes
newTopic	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicPrefix	no	yes
+	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
sendTestMessages	no	yes
(	no	no
int	no	yes
numMessages	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
final	no	yes
TextMessage	no	yes
textMessage	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
textMessage	no	yes
.	no	no
setText	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
1	no	no
;	no	no
i	yes	yes
<=	no	no
numMessages	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
textMessage	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTransactedStoreUsageSuspendResume	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
MessageDatabase	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
File	no	yes
journalDataDir	no	yes
=	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
getDirectory	no	yes
(	no	no
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTempPercentUsageDecreases	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
MESSAGES_TO_SEND	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
brokerView	yes	yes
=	no	no
getBrokerView	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTempPercentUsageDecreases	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
MESSAGES_TO_SEND	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
brokerView	yes	yes
=	no	no
getBrokerView	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getTempPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTempPercentUsageDecreases	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
MESSAGES_TO_SEND	no	yes
)	no	no
;	no	no
final	no	yes
BrokerViewMBean	no	yes
brokerView	yes	yes
=	no	no
getBrokerView	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getTempPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerView	yes	yes
.	no	no
getTempPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
brokerView	yes	yes
.	no	no
getTempPercentUsage	no	yes
(	no	no
)	no	no
>	no	no
50	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
tempPercentUsageWithConsumer	no	yes
=	no	no
brokerView	yes	yes
.	no	no
getTempPercentUsage	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
(	no	no
50	no	no
<	no	no
tempPercentUsageWithConsumer	no	yes
)	no	no
)	no	no
;	no	no
messageConsumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
,	no	no
,	no	no
TRANSPORT_URL	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
blob	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
4	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
blob	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	no	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

Connection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
blob	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
4	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
blob	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	yes	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	yes	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	yes	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no

protected	no	yes
ConsumerObject	no	yes
getConsumer	no	yes
(	no	no
int	no	yes
id	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
RedeliveryPolicy	no	yes
redeliveryPolicy	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
redeliveryPolicy	no	yes
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
redeliveryPolicy	no	yes
.	no	no
setMaximumRedeliveries	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
consumerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setRedeliveryPolicy	no	yes
(	no	no
redeliveryPolicy	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	yes	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
TestDuplicateJobIDs	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerObject	no	yes
consumer1	no	yes
=	no	no
getConsumer	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ConsumerObject	no	yes
consumer2	no	yes
=	no	no
getConsumer	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
Message	no	yes
message1	yes	yes
=	no	no
consumer1	no	yes
.	no	no
getConsumer	no	yes
(	no	no
)	no	no
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message1	yes	yes
)	no	no
;	no	no

ConsumerObject	no	yes
consumer1	no	yes
=	no	no
getConsumer	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ConsumerObject	no	yes
consumer2	no	yes
=	no	no
getConsumer	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
Message	no	yes
message1	no	yes
=	no	no
consumer1	no	yes
.	no	no
getConsumer	no	yes
(	no	no
)	no	no
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message1	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message1	no	yes
)	no	no
;	no	no
Message	no	yes
message2	yes	yes
=	no	no
consumer2	no	yes
.	no	no
getConsumer	no	yes
(	no	no
)	no	no
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message2	yes	yes
)	no	no
;	no	no

Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
advisoryConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
getSlowConsumerAdvisoryTopic	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
advisoryConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
advisoryConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
}	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queue	no	yes
=	no	no
getProxyToQueue	no	yes
(	no	no
(	no	no
(	no	no
Queue	no	yes
)	no	no
destination	no	yes
)	no	no
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
slowConsumerPolicyMBeanName	no	yes
=	no	no
queue	no	yes
.	no	no
getSlowConsumerStrategy	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
)	no	no
;	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
abortPolicy	no	yes
=	no	no
(	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
slowConsumerPolicyMBeanName	no	yes
,	no	no
AbortSlowConsumerStrategyViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TabularData	no	yes
slowOnes	yes	yes
=	no	no
abortPolicy	no	yes
.	no	no
getSlowConsumers	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
logfiles	no	yes
(	no	no
File	no	yes
[	no	no
]	no	no
files	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
File	no	yes
file	yes	yes
:	no	no
files	no	yes
)	no	no
{	no	no

while	no	yes
(	no	no
acked	no	yes
<	no	no
numMessages	no	yes
/	no	no
2	no	no
)	no	no
{	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
consumerConnection	no	yes
)	no	no
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
consumerName	no	yes
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
consumerName	no	yes
)	no	no
;	no	no
counsumerStarted	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
null	no	yes
;	no	no
do	no	yes
{	no	no
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
receivedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
received	no	yes
!=	no	no
0	no	no
&&	no	no
received	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

assertTrue	no	yes
(	no	no
received	no	yes
>=	no	no
acked	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
numConsumers	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numConsumers	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
counsumerStarted	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Connection	no	yes
producerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
producerConnection	no	yes
)	no	no
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
forceRecover	no	yes
)	no	no
{	no	no
configurePersistence	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
producerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
msg	no	yes
=	no	no
producerSession	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
i	yes	yes
!=	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
forceRecover	no	yes
)	no	no
{	no	no
configurePersistence	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
CONSUMER_NAME	no	yes
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
CONSUMER_NAME	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrowsePriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
browseList	yes	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
browseList	yes	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
consumeList	no	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
browseList	yes	yes
.	no	no
equals	no	yes
(	no	no
consumeList	no	yes
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testBrowsePriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
browseList	no	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
browseList	no	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
browseList	no	yes
.	no	no
equals	no	yes
(	no	no
consumeList	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browseList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrowsePriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
browseList	yes	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
browseList	yes	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
consumeList	no	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
browseList	yes	yes
.	no	no
equals	no	yes
(	no	no
consumeList	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browseList	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrowsePriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
browseList	no	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
3	no	no
,	no	no
9	no	no
,	no	no
)	no	no
;	no	no
browseList	no	yes
=	no	no
browseQueue	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
browseList	no	yes
.	no	no
equals	no	yes
(	no	no
consumeList	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browseList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeList	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
browseList	no	yes
)	no	no
;	no	no

connection2	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session2	no	yes
=	no	no
connection2	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer2	no	yes
=	no	no
session2	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer2	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NMSG	no	yes
/	no	no
4	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
message	no	yes
=	no	no
session2	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
MSIZE	no	yes
]	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
COUNT_PROPERY_NAME	no	yes
,	no	no
count	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setJMSType	no	yes
(	no	no
)	no	no
;	no	no
producer2	no	yes
.	no	no
send	no	yes
(	no	no
consumerDestination2	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

}	no	no
,	no	no
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connection3	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection3	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
connection3	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumeSession3	no	yes
=	no	no
connection3	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer3	no	yes
=	no	no
consumeSession3	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
consumerDestination2	no	yes
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection3	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
loop	yes	yes
=	no	no
0	no	no
;	no	no
loop	yes	yes
<	no	no
4	no	no
;	no	no
++	no	no
loop	yes	yes
)	no	no
{	no	no
connection3	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection3	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
connection3	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumeSession3	no	yes
=	no	no
connection3	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer3	no	yes
=	no	no
consumeSession3	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
consumerDestination2	no	yes
,	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
null	no	yes
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
s	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
s	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
assertNotNull	no	yes
(	no	no
broker	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
DESTINATION_NAME	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
broker	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
DESTINATION_NAME_2	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
brokerViewMBean	no	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
objectName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
String	no	yes
pathToDataDir	no	yes
=	no	no
brokerViewMBean	no	yes
.	no	no
getDataDirectory	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
corruptTxStoreJournalAndTruncate	no	yes
(	no	no
pathToDataDir	no	yes
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
MultiKahaDBTransactionStore	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
AtomicBoolean	no	yes
foundSomeCorruption	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
AtomicBoolean	no	yes
ignoringCorruption	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
ERROR	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
corruptTxStore	no	yes
(	no	no
String	no	yes
pathToDataDir	yes	yes
,	no	no
boolean	no	yes
truncate	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
void	no	yes
corruptTxStore	no	yes
(	no	no
String	no	yes
pathToDataDir	no	yes
,	no	no
boolean	no	yes
truncate	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pathToDataDir	no	yes
)	no	no
;	no	no
RandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
new	no	yes
RandomAccessFile	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
pathToDataDir	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
final	no	yes
ByteSequence	no	yes
header	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_HEADER	no	yes
)	no	no
;	no	no
byte	no	yes
data	no	yes
[	no	no
]	no	no
=	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
*	no	no
20	no	no
]	no	no
;	no	no
ByteSequence	no	yes
bs	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
data	no	yes
,	no	no
0	no	no
,	no	no
randomAccessFile	no	yes
.	no	no
read	no	yes
(	no	no
data	no	yes
,	no	no
0	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
offset	yes	yes
+	no	no
1	no	no
)	no	no
;	no	no
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
offset	yes	yes
+	no	no
1	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
corruptTxStore	no	yes
(	no	no
String	no	yes
pathToDataDir	no	yes
,	no	no
boolean	no	yes
truncate	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pathToDataDir	no	yes
)	no	no
;	no	no
RandomAccessFile	no	yes
randomAccessFile	no	yes
=	no	no
new	no	yes
RandomAccessFile	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
pathToDataDir	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
final	no	yes
ByteSequence	no	yes
header	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_HEADER	no	yes
)	no	no
;	no	no
byte	no	yes
data	no	yes
[	no	no
]	no	no
=	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
*	no	no
20	no	no
]	no	no
;	no	no
ByteSequence	no	yes
bs	no	yes
=	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
data	no	yes
,	no	no
0	no	no
,	no	no
randomAccessFile	no	yes
.	no	no
read	no	yes
(	no	no
data	no	yes
,	no	no
0	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
offset	yes	yes
+	no	no
1	no	no
)	no	no
;	no	no
offset	yes	yes
=	no	no
bs	no	yes
.	no	no
indexOf	no	yes
(	no	no
header	no	yes
,	no	no
offset	yes	yes
+	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
offset	yes	yes
)	no	no
;	no	no
offset	yes	yes
+=	no	no
Journal	no	yes
.	no	no
BATCH_CONTROL_RECORD_SIZE	no	yes
;	no	no
offset	yes	yes
+=	no	no
4	no	no
;	no	no
offset	yes	yes
+=	no	no
1	no	no
;	no	no
byte	no	yes
fill	yes	yes
=	no	no
(	no	no
byte	no	yes
)	no	no
0xAF	no	yes
;	no	no

factory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetch	no	yes
)	no	no
;	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
bigDestination	no	yes
)	no	no
;	no	no
final	no	yes
Connection	no	yes
producerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
fillWithBigCount	no	yes
=	no	no
10	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
fillWithBigCount	no	yes
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
bigBuf	no	yes
)	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bigDestination	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
bigBuf	no	yes
)	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bigDestination	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idx	yes	yes
+	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
int	no	yes
toSend	no	yes
=	no	no
20	no	no
;	no	no
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
toSend	no	yes
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
destination	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idx	yes	yes
+	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
producingThreadTwo	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
toSend	no	yes
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
destination	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
producingThreadTwo	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	no	yes
=	no	no
0	no	no
;	no	no
idx	no	yes
<	no	no
toSend	no	yes
;	no	no
++	no	no
idx	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
idx	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
destination	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idx	no	yes
+	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThreadTwo	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messagesSent	no	yes
)	no	no
;	no	no
return	no	yes
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
20	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
;	no	no
count	yes	yes
<	no	no
10	no	no
;	no	no
count	yes	yes
++	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
(	no	no
m	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
m	yes	yes
+	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
uncaughtException	no	yes
(	no	no
Thread	no	yes
t	yes	yes
,	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testMemoryUsage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
createJmsConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
100000	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
BytesMessage	no	yes
bm	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bm	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bm	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
memoryUsagePercent	yes	yes
=	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getPercentUsage	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIt	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
startPercentage	yes	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getMemoryPercentUsage	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIt	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
startPercentage	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getMemoryPercentUsage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
startPercentage	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

Receiver	no	yes
xenaReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
xenaToHaloCtr	yes	yes
++	no	no
;	no	no
hectorSender	no	yes
.	no	no
send	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
xenaToHaloCtr	yes	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
possiblySleep	no	yes
(	no	no
xenaToHaloCtr	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
Receiver	no	yes
troyReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
troyToHaloCtr	no	yes
++	no	no
;	no	no
xenaSender	no	yes
.	no	no
send	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
troyToHaloCtr	no	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no

xenaToHaloCtr	no	yes
++	no	no
;	no	no
hectorSender	no	yes
.	no	no
send	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
xenaToHaloCtr	no	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
possiblySleep	no	yes
(	no	no
xenaToHaloCtr	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
Receiver	no	yes
troyReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
troyToHaloCtr	yes	yes
++	no	no
;	no	no
xenaSender	no	yes
.	no	no
send	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
troyToHaloCtr	yes	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
45	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
100	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
60	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
60000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	yes	yes
)	no	no
;	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
listener	yes	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
listener	yes	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
==	no	no
60	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
String	no	yes
text	no	yes
=	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
this	no	yes
.	no	no
hashCode	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
45	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
60	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
30000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
sleep	no	yes
(	no	no
200	no	no
)	no	no
;	no	no
int	no	yes
counter	yes	yes
=	no	no
1	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
counter	yes	yes
<=	no	no
60	no	no
;	no	no
++	no	no
counter	yes	yes
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no

message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
30000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
44	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
4	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
30000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
sleep	no	yes
(	no	no
200	no	no
)	no	no
;	no	no
int	no	yes
counter	yes	yes
=	no	no
1	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
counter	yes	yes
<=	no	no
60	no	no
;	no	no
++	no	no
counter	yes	yes
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testOrder	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
30	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
final	no	yes
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
createMessageText	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
consumeBatch	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
final	no	yes
Message	no	yes
message	yes	yes
=	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000L	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTransactedSendWithTimeoutRollbackUsage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
CountDownLatch	no	yes
gotTimeoutException	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
int	no	yes
sendTimeout	no	yes
=	no	no
5000	no	no
;	no	no
int	no	yes
numberOfMessageSent	no	yes
=	no	no
sendMessages	no	yes
(	no	no
broker	no	yes
,	no	no
gotTimeoutException	no	yes
,	no	no
sendTimeout	no	yes
,	no	no
3	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
gotTimeoutException	no	yes
.	no	no
await	no	yes
(	no	no
sendTimeout	no	yes
*	no	no
2	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
consumeMessages	no	yes
(	no	no
broker	no	yes
,	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
QueueView	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
broker	no	yes
,	no	no
DESTINATION	no	yes
)	no	no
;	no	no
long	no	yes
queueSize	yes	yes
=	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
memoryUsage	no	yes
=	no	no
queueView	no	yes
.	no	no
getCursorMemoryUsage	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testTransactedSendWithTimeoutRollbackUsage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
CountDownLatch	no	yes
gotTimeoutException	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
int	no	yes
sendTimeout	no	yes
=	no	no
5000	no	no
;	no	no
int	no	yes
numberOfMessageSent	no	yes
=	no	no
sendMessages	no	yes
(	no	no
broker	no	yes
,	no	no
gotTimeoutException	no	yes
,	no	no
sendTimeout	no	yes
,	no	no
3	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
gotTimeoutException	no	yes
.	no	no
await	no	yes
(	no	no
sendTimeout	no	yes
*	no	no
2	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
consumeMessages	no	yes
(	no	no
broker	no	yes
,	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
QueueView	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
broker	no	yes
,	no	no
DESTINATION	no	yes
)	no	no
;	no	no
long	no	yes
queueSize	no	yes
=	no	no
queueView	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
memoryUsage	yes	yes
=	no	no
queueView	no	yes
.	no	no
getCursorMemoryUsage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueSize	no	yes
)	no	no
;	no	no

ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
newConnectionFactory	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setSendTimeout	no	yes
(	no	no
sendTimeeOut	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
createTextMessage	no	yes
(	no	no
5000	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	no	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

connectionFactory	no	yes
.	no	no
setSendTimeout	no	yes
(	no	no
sendTimeeOut	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
createTextMessage	no	yes
(	no	no
5000	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	yes	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	yes	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	yes	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no

private	no	yes
int	no	yes
consumeMessages	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
,	no	no
int	no	yes
messageCount	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
numberOfMessageConsumed	yes	yes
=	no	no
0	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
newConnectionFactory	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
MessageConsumer	no	yes
jmsConsumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
numberOfMessageConsumed	yes	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageConsumed	yes	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageConsumed	yes	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
long	no	yes
acks	no	yes
=	no	no
acksReceived	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
acks	no	yes
%	no	no
1	no	no
==	no	no
0	no	no
)	no	no
{	no	no

Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Destination	no	yes
destinationQ1	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TEST_QUEUE_ONE	no	yes
)	no	no
;	no	no
Destination	no	yes
destinationQ2	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TEST_QUEUE_TWO	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producerQ1	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destinationQ1	no	yes
)	no	no
;	no	no
producerQ1	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
producerQ1	no	yes
.	no	no
send	no	yes
(	no	no
m	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerQ1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destinationQ1	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumerQ1	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

Destination	no	yes
destinationQ2	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TEST_QUEUE_TWO	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producerQ1	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destinationQ1	no	yes
)	no	no
;	no	no
producerQ1	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
producerQ1	no	yes
.	no	no
send	no	yes
(	no	no
m	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerQ1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destinationQ1	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
textMessage	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumerQ1	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
textMessage	no	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
textMessage	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
textMessage2	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumerQ1	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no

broker	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setDeleteAllMessagesOnStartup	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
addConnector	no	yes
(	no	no
)	no	no
.	no	no
setName	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
MESSAGES_COUNT	no	yes
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
setPriority	no	yes
(	no	no
Thread	no	yes
.	no	no
MAX_PRIORITY	no	yes
)	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Thread	no	yes
consumingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
messagesCount	yes	yes
!=	no	no
MESSAGES_COUNT	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
messagesCount	yes	yes
+	no	no
)	no	no
;	no	no
break	no	yes
;	no	no

;	no	no
producingThread	no	yes
.	no	no
setPriority	no	yes
(	no	no
Thread	no	yes
.	no	no
MAX_PRIORITY	no	yes
)	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Thread	no	yes
consumingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
messagesCount	yes	yes
!=	no	no
MESSAGES_COUNT	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
messagesCount	yes	yes
+	no	no
)	no	no
;	no	no
break	no	yes
;	no	no

Thread	no	yes
consumingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
diff	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
messagesCount	yes	yes
!=	no	no
MESSAGES_COUNT	no	yes
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
messagesCount	yes	yes
+	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
String	no	yes
text	no	yes
=	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
currentMsgIdx	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
text	no	yes
+	no	no
+	no	no
messagesCount	yes	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no

producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
producerHasSentTenMessages	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
MESSAGES_COUNT	no	yes
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
idx	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
producerHasSentTenMessages	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
idx	yes	yes
!=	no	no
0	no	no
&&	no	no
idx	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
idx	no	yes
!=	no	no
0	no	no
&&	no	no
idx	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
producerHasSentTenMessages	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
m	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
count	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
!=	no	no
0	no	no
&&	no	no
count	yes	yes
%	no	no
10	no	no
==	no	no
0	no	no
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
producerHasSentTenMessages	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
m	no	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
count	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
!=	no	no
0	no	no
&&	no	no
count	yes	yes
%	no	no
10	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
m	no	yes
)	no	no
;	no	no
}	no	no
messagesConsumed	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
producerHasSentTenMessages	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
count	yes	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
m	yes	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
m	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
count	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
!=	no	no
0	no	no
&&	no	no
count	yes	yes
%	no	no
10	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
m	yes	yes
)	no	no
;	no	no
}	no	no
messagesConsumed	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
)	no	no
;	no	no

Message	no	yes
m	no	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
count	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
!=	no	no
0	no	no
&&	no	no
count	yes	yes
%	no	no
10	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
m	no	yes
)	no	no
;	no	no
}	no	no
messagesConsumed	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
)	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
count	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
!=	no	no
0	no	no
&&	no	no
count	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
m	no	yes
)	no	no
;	no	no

broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
setSendFailIfNoSpace	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

final	no	yes
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ResourceAllocationException	no	yes
ex	yes	yes
)	no	no
{	no	no

Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ResourceAllocationException	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ex	no	yes
+	no	no
+	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messagesConsumed	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesConsumed	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
setSendFailIfNoSpace	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUri	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ResourceAllocationException	no	yes
ex	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
100	no	no
)	no	no
;	no	no

broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
setSendFailIfNoSpace	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUri	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
producerConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

producerConnection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
producerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
new	no	yes
String	no	yes
(	no	no
buf	no	yes
)	no	no
+	no	no
messagesSent	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ResourceAllocationException	no	yes
ex	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
messagesSent	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
200	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
messagesSent	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
ResourceAllocationException	no	yes
ex	no	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
+	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
200	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ex	no	yes
+	no	no
+	no	no
messagesSent	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Connection	no	yes
consumerConnection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
messageReceiveTimeout	no	yes
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
messagesConsumed	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messagesConsumed	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIt	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
startPercentage	yes	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getMemoryPercentUsage	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIt	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
startPercentage	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getMemoryPercentUsage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
startPercentage	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

ExecutorService	no	yes
sendExecutor	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
sendExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendExecutor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
sendExecutor	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
boolean	no	yes
allMessagesReceived	no	yes
=	no	no
messagesReceivedCountDown	yes	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
allMessagesReceived	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesSentCountDown	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
1240	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
shortRetainQueue	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
shortRetainQueue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
1240	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
.	no	no
getStoreUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumerStartLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MAX_MESSAGES	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
queue	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
20	no	no
==	no	no
0	no	no
)	no	no
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
messagesSentCountDown	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

;	no	no
Receiver	no	yes
xenaReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
xenaToHaloCtr	yes	yes
++	no	no
;	no	no
hectorSender	no	yes
.	no	no
send	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
xenaToHaloCtr	yes	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
Receiver	no	yes
troyReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
troyToHaloCtr	no	yes
++	no	no
;	no	no
xenaSender	no	yes
.	no	no
send	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
troyToHaloCtr	no	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
xenaToHaloCtr	no	yes
++	no	no
;	no	no
hectorSender	no	yes
.	no	no
send	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
xenaToHaloCtr	no	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
Receiver	no	yes
troyReceiver	no	yes
=	no	no
new	no	yes
Receiver	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
receive	no	yes
(	no	no
String	no	yes
s	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
troyToHaloCtr	yes	yes
++	no	no
;	no	no
xenaSender	no	yes
.	no	no
send	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
troyToHaloCtr	yes	yes
>=	no	no
counter	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
lock	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no

public	no	yes
void	no	yes
testDBCommitException	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
serviceLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
TransportConnection	no	yes
.	no	no
class	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
serviceLogger	no	yes
.	no	no
setLevel	no	yes
(	no	no
Level	no	yes
.	no	no
TRACE	no	yes
)	no	no
;	no	no
broker	no	yes
=	no	no
this	no	yes
.	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
deleteAllMessages	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
failoverTransportURL	no	yes
=	no	no
+	no	no
transportUrl	no	yes
+	no	no
;	no	no
sendMessage	no	yes
(	no	no
MY_TEST_Q	no	yes
,	no	no
failoverTransportURL	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Long	no	yes
>	no	no
dbSeq	yes	yes
=	no	no
dbMessageCount	no	yes
(	no	no
checkOnStoreConnection	no	yes
)	no	no
;	no	no

org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
serviceLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
TransportConnection	no	yes
.	no	no
class	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
serviceLogger	no	yes
.	no	no
setLevel	no	yes
(	no	no
Level	no	yes
.	no	no
TRACE	no	yes
)	no	no
;	no	no
broker	no	yes
=	no	no
this	no	yes
.	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
deleteAllMessages	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
failoverTransportURL	no	yes
=	no	no
+	no	no
transportUrl	no	yes
+	no	no
;	no	no
sendMessage	no	yes
(	no	no
MY_TEST_Q	no	yes
,	no	no
failoverTransportURL	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Long	no	yes
>	no	no
dbSeq	yes	yes
=	no	no
dbMessageCount	no	yes
(	no	no
checkOnStoreConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dbSeq	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
TextMessage	no	yes
>	no	no
consumedMessages	no	yes
=	no	no
consumeMessages	no	yes
(	no	no
MY_TEST_Q	no	yes
,	no	no
failoverTransportURL	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
consumedMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbSeq	yes	yes
=	no	no
dbMessageCount	no	yes
(	no	no
checkOnStoreConnection	no	yes
)	no	no
;	no	no

public	no	yes
List	no	yes
<	no	no
TextMessage	no	yes
>	no	no
consumeMessages	no	yes
(	no	no
String	no	yes
queue	no	yes
,	no	no
String	no	yes
transportURL	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
transportURL	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
TextMessage	no	yes
>	no	no
consumedMessages	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
TextMessage	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
transportURL	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
TextMessage	no	yes
m	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
m	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
m	no	yes
.	no	no
setText	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
m	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Long	no	yes
>	no	no
dbSeq	yes	yes
=	no	no
dbMessageCount	no	yes
(	no	no
checkOnStoreConnection	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testPrematureClosure	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnection	no	yes
persistentConn	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
persistentConn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
persistentConn	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ATTEMPTS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

public	no	yes
static	no	yes
void	no	yes
main	no	yes
(	no	no
String	no	yes
[	no	no
]	no	no
args	no	yes
)	no	no
{	no	no
BufferedReader	no	yes
br	no	yes
=	no	no
new	no	yes
BufferedReader	no	yes
(	no	no
new	no	yes
InputStreamReader	no	yes
(	no	no
System	no	yes
.	no	no
in	no	yes
)	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerService	yes	yes
=	no	no
null	no	yes
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
brokerService	yes	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	yes	yes
.	no	no
setBrokerName	no	yes
(	no	no
)	no	no
;	no	no
brokerService	yes	yes
.	no	no
setUseJmx	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1000	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ThreadExplorer	yes	yes
.	no	no
show	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
key	no	yes
=	no	no
br	no	yes
.	no	no
readLine	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
br	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
sleep	no	yes
(	no	no
8	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
br	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
sleep	no	yes
(	no	no
8	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ThreadExplorer	yes	yes
.	no	no
show	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
numTh	no	yes
=	no	no
ThreadExplorer	yes	yes
.	no	no
active	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
numTh	no	yes
>	no	no
2	no	no
)	no	no
{	no	no

private	no	yes
static	no	yes
void	no	yes
sleep	no	yes
(	no	no
int	no	yes
second	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
static	no	yes
int	no	yes
kill	no	yes
(	no	no
String	no	yes
threadName	yes	yes
,	no	no
boolean	no	yes
isStarredExp	yes	yes
,	no	no
String	no	yes
motivation	no	yes
)	no	no
{	no	no
String	no	yes
me	yes	yes
=	no	no
;	no	no
if	no	yes
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

msg1	yes	yes
.	no	no
setJMSPriority	no	yes
(	no	no
this	no	yes
.	no	no
jmsPriority	no	yes
)	no	no
;	no	no
msg1	yes	yes
.	no	no
setJMSTimestamp	no	yes
(	no	no
this	no	yes
.	no	no
jmsTimestamp	no	yes
)	no	no
;	no	no
msg1	yes	yes
.	no	no
setReadOnlyProperties	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
ActiveMQMessage	no	yes
msg2	no	yes
=	no	no
new	no	yes
ActiveMQMessage	no	yes
(	no	no
)	no	no
;	no	no
msg1	yes	yes
.	no	no
copy	no	yes
(	no	no
msg2	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
,	no	no
msg2	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSCorrelationID	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
msg2	no	yes
.	no	no
getJMSCorrelationID	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSDestination	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
msg2	no	yes
.	no	no
getJMSDestination	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
msg2	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSDeliveryMode	no	yes
(	no	no
)	no	no
==	no	no
msg2	no	yes
.	no	no
getJMSDeliveryMode	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
==	no	no
msg2	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSType	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
msg2	no	yes
.	no	no
getJMSType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSExpiration	no	yes
(	no	no
)	no	no
==	no	no
msg2	no	yes
.	no	no
getJMSExpiration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
==	no	no
msg2	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg1	yes	yes
.	no	no
getJMSTimestamp	no	yes
(	no	no
)	no	no
==	no	no
msg2	no	yes
.	no	no
getJMSTimestamp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ActiveMQMessage	no	yes
message	no	yes
=	no	no
new	no	yes
ActiveMQMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setProducerId	no	yes
(	no	no
new	no	yes
ProducerId	no	yes
(	no	no
new	no	yes
SessionId	no	yes
(	no	no
new	no	yes
ConnectionId	no	yes
(	no	no
new	no	yes
ConnectionId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
1	no	no
)	no	no
,	no	no
1	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setMessageId	no	yes
(	no	no
new	no	yes
MessageId	no	yes
(	no	no
message	no	yes
.	no	no
getProducerId	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setCommandId	no	yes
(	no	no
(	no	no
short	no	yes
)	no	no
1	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setGroupID	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setGroupSequence	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setCorrelationId	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setContent	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
,	no	no
0	no	no
,	no	no
1024	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setTimestamp	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
p	yes	yes
=	no	no
1000000	no	no
;	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
p	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
marshalAndUnmarshall	no	yes
(	no	no
message	no	yes
,	no	no
wireFormat	no	yes
)	no	no
;	no	no
}	no	no
long	no	yes
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testPropertiesFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
broker	yes	yes
=	no	no
BrokerFactory	no	yes
.	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testVmBrokerPropertiesFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
broker	yes	yes
=	no	no
BrokerRegistry	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
purgeAllMessages	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
,	no	no
Exception	no	yes
{	no	no
List	no	yes
<	no	no
ObjectInstance	no	yes
>	no	no
queueList	no	yes
=	no	no
JmxMBeansUtil	no	yes
.	no	no
queryMBeans	no	yes
(	no	no
createJmxConnection	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectInstance	no	yes
oi	no	yes
:	no	no
queueList	no	yes
)	no	no
{	no	no
ObjectName	no	yes
queueName	yes	yes
=	no	no
oi	no	yes
.	no	no
getObjectName	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
validateCounts	no	yes
(	no	no
int	no	yes
expectedWithCount	no	yes
,	no	no
int	no	yes
expectedWithoutCount	no	yes
,	no	no
int	no	yes
expectedAllCount	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
QueueBrowser	no	yes
withPropertyBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
,	no	no
MSG_SEL_WITH_PROPERTY	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
withoutPropertyBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
,	no	no
MSG_SEL_WITHOUT_PROPERTY	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
allBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
)	no	no
;	no	no
int	no	yes
withCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
withPropertyBrowser	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
withoutCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
withoutPropertyBrowser	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
allCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
allBrowser	no	yes
,	no	no
)	no	no
;	no	no
withPropertyBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
withoutPropertyBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
expectedWithCount	no	yes
+	no	no
+	no	no
withCount	yes	yes
,	no	no
expectedWithCount	no	yes
,	no	no
withCount	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
expectedWithoutCount	no	yes
+	no	no
+	no	no
withoutCount	yes	yes
,	no	no
expectedWithoutCount	no	yes
,	no	no
withoutCount	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
expectedAllCount	no	yes
+	no	no
+	no	no
allCount	yes	yes
,	no	no
expectedAllCount	no	yes
,	no	no
allCount	yes	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
testQueueViewMbean	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
addMessages	no	yes
(	no	no
)	no	no
;	no	no
validateCounts	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tokens	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
token	no	yes
:	no	no
tokens	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
ObjectInstance	no	yes
>	no	no
queueList	no	yes
=	no	no
JmxMBeansUtil	no	yes
.	no	no
queryMBeans	no	yes
(	no	no
createJmxConnection	no	yes
(	no	no
)	no	no
,	no	no
+	no	no
token	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectInstance	no	yes
queue	no	yes
:	no	no
queueList	no	yes
)	no	no
{	no	no
ObjectName	no	yes
queueName	no	yes
=	no	no
queue	no	yes
.	no	no
getObjectName	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
proxy	no	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
createJmxConnection	no	yes
(	no	no
)	no	no
,	no	no
queueName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
int	no	yes
removed	yes	yes
=	no	no
proxy	no	yes
.	no	no
removeMatchingMessages	no	yes
(	no	no
MSG_SEL_WITH_PROPERTY	no	yes
)	no	no
;	no	no

purgeCommand	no	yes
.	no	no
setJmxUseLocal	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tokens	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
MSG_SEL_COMPLEX	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
)	no	no
;	no	no
validateCounts	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
purgeCommand	no	yes
.	no	no
execute	no	yes
(	no	no
tokens	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
withPropertyBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
,	no	no
MSG_SEL_COMPLEX	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
allBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
)	no	no
;	no	no
int	no	yes
withCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
withPropertyBrowser	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
allCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
allBrowser	no	yes
,	no	no
)	no	no
;	no	no
withPropertyBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
withCount	yes	yes
,	no	no
0	no	no
,	no	no
withCount	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
MESSAGE_COUNT	no	yes
+	no	no
+	no	no
allCount	yes	yes
,	no	no
MESSAGE_COUNT	no	yes
,	no	no
allCount	yes	yes
)	no	no
;	no	no

context	no	yes
.	no	no
setFormatter	no	yes
(	no	no
new	no	yes
CommandShellOutputFormatter	no	yes
(	no	no
System	no	yes
.	no	no
out	no	yes
)	no	no
)	no	no
;	no	no
purgeCommand	no	yes
.	no	no
setCommandContext	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
purgeCommand	no	yes
.	no	no
setJmxUseLocal	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tokens	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
MSG_SEL_COMPLEX_SQL_AND	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
)	no	no
;	no	no
validateCounts	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
purgeCommand	no	yes
.	no	no
execute	no	yes
(	no	no
tokens	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
withPropertyBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
,	no	no
MSG_SEL_COMPLEX_SQL_AND	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
allBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
)	no	no
;	no	no
int	no	yes
withCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
withPropertyBrowser	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
allCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
allBrowser	no	yes
,	no	no
)	no	no
;	no	no
withPropertyBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

purgeCommand	no	yes
.	no	no
setJmxUseLocal	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tokens	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
tokens	no	yes
.	no	no
add	no	yes
(	no	no
MSG_SEL_COMPLEX_SQL_OR	no	yes
)	no	no
;	no	no
addMessages	no	yes
(	no	no
)	no	no
;	no	no
validateCounts	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
,	no	no
MESSAGE_COUNT	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
purgeCommand	no	yes
.	no	no
execute	no	yes
(	no	no
tokens	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
withPropertyBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
,	no	no
MSG_SEL_COMPLEX_SQL_OR	no	yes
)	no	no
;	no	no
QueueBrowser	no	yes
allBrowser	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createBrowser	no	yes
(	no	no
theQueue	no	yes
)	no	no
;	no	no
int	no	yes
withCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
withPropertyBrowser	no	yes
,	no	no
)	no	no
;	no	no
int	no	yes
allCount	yes	yes
=	no	no
getMessageCount	no	yes
(	no	no
allBrowser	no	yes
,	no	no
)	no	no
;	no	no
withPropertyBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allBrowser	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
withCount	yes	yes
,	no	no
0	no	no
,	no	no
withCount	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
allCount	yes	yes
,	no	no
0	no	no
,	no	no
allCount	yes	yes
)	no	no
;	no	no

String	no	yes
uri	yes	yes
=	no	no
;	no	no
String	no	yes
text	no	yes
=	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
printUsage	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
idx	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
arg	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	yes
(	no	no
arg	no	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
1	no	no
)	no	no
{	no	no
printUsage	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
uri	yes	yes
=	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
idx	no	yes
+=	no	no
2	no	no
;	no	no
}	no	no
String	no	yes
queueName	no	yes
=	no	no
args	no	yes
[	no	no
idx	no	yes
]	no	no
;	no	no

String	no	yes
text	no	yes
=	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
printUsage	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
idx	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
arg	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	yes
(	no	no
arg	no	yes
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
1	no	no
)	no	no
{	no	no
printUsage	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
uri	no	yes
=	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
idx	no	yes
+=	no	no
2	no	no
;	no	no
}	no	no
String	no	yes
queueName	yes	yes
=	no	no
args	no	yes
[	no	no
idx	no	yes
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
uri	no	yes
)	no	no
;	no	no

String	no	yes
destinationName	no	yes
=	no	no
null	no	yes
;	no	no
Context	no	yes
jndiContext	no	yes
=	no	no
null	no	yes
;	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
null	no	yes
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
null	no	yes
;	no	no
Session	no	yes
session	no	yes
=	no	no
null	no	yes
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
null	no	yes
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
destinationName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
destinationName	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
destinationName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
destinationName	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connectionFactory	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
destination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

destination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
m	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
m	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
null	no	yes
;	no	no
String	no	yes
destinationName	no	yes
=	no	no
null	no	yes
;	no	no
final	no	yes
int	no	yes
numMsgs	no	yes
;	no	no
if	no	yes
(	no	no
(	no	no
args	no	yes
.	no	no
length	no	yes
<	no	no
1	no	no
)	no	no
||	no	no
(	no	no
args	no	yes
.	no	no
length	no	yes
>	no	no
2	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
destinationName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
2	no	no
)	no	no
{	no	no
numMsgs	no	yes
=	no	no
(	no	no
new	no	yes
Integer	no	yes
(	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
numMsgs	no	yes
=	no	no
1	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
destinationName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
2	no	no
)	no	no
{	no	no
numMsgs	no	yes
=	no	no
(	no	no
new	no	yes
Integer	no	yes
(	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
numMsgs	no	yes
=	no	no
1	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connectionFactory	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
destination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connectionFactory	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
destination	no	yes
=	no	no
(	no	no
Destination	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMsgs	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no

Context	no	yes
jndiContext	no	yes
=	no	no
null	no	yes
;	no	no
QueueConnectionFactory	no	yes
queueConnectionFactory	no	yes
=	no	no
null	no	yes
;	no	no
QueueConnection	no	yes
queueConnection	no	yes
=	no	no
null	no	yes
;	no	no
QueueSession	no	yes
queueSession	no	yes
=	no	no
null	no	yes
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
null	no	yes
;	no	no
QueueReceiver	no	yes
queueReceiver	no	yes
=	no	no
null	no	yes
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
queueName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueName	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

TextMessage	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
queueName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueName	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
queueConnectionFactory	no	yes
=	no	no
(	no	no
QueueConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
queueConnection	no	yes
=	no	no
queueConnectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
queueSession	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
queueReceiver	no	yes
=	no	no
queueSession	no	yes
.	no	no
createReceiver	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
queueConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
m	no	yes
=	no	no
queueReceiver	no	yes
.	no	no
receive	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
m	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
m	no	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

QueueSender	no	yes
queueSender	no	yes
=	no	no
null	no	yes
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
final	no	yes
int	no	yes
numMsgs	no	yes
;	no	no
if	no	yes
(	no	no
(	no	no
args	no	yes
.	no	no
length	no	yes
<	no	no
1	no	no
)	no	no
||	no	no
(	no	no
args	no	yes
.	no	no
length	no	yes
>	no	no
2	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
queueName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
2	no	no
)	no	no
{	no	no
numMsgs	no	yes
=	no	no
(	no	no
new	no	yes
Integer	no	yes
(	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
numMsgs	no	yes
=	no	no
1	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
queueName	no	yes
=	no	no
args	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
args	no	yes
.	no	no
length	no	yes
==	no	no
2	no	no
)	no	no
{	no	no
numMsgs	no	yes
=	no	no
(	no	no
new	no	yes
Integer	no	yes
(	no	no
args	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
numMsgs	no	yes
=	no	no
1	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
jndiContext	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
queueConnectionFactory	no	yes
=	no	no
(	no	no
QueueConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
queueConnectionFactory	no	yes
=	no	no
(	no	no
QueueConnectionFactory	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
jndiContext	no	yes
.	no	no
lookup	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
NamingException	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
queueConnection	no	yes
=	no	no
queueConnectionFactory	no	yes
.	no	no
createQueueConnection	no	yes
(	no	no
)	no	no
;	no	no
queueSession	no	yes
=	no	no
queueConnection	no	yes
.	no	no
createQueueSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
queueSender	no	yes
=	no	no
queueSession	no	yes
.	no	no
createSender	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
queueSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMsgs	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no

private	no	yes
String	no	yes
consumeRollbackMessage	no	yes
(	no	no
String	no	yes
destination	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
String	no	yes
messageID	no	yes
=	no	no
null	no	yes
;	no	no
do	no	yes
{	no	no
message	yes	yes
=	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBrowseByteMessageFails	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQBytesMessage	no	yes
bm	no	yes
=	no	no
new	no	yes
ActiveMQBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bm	no	yes
.	no	no
writeBytes	no	yes
(	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Object	no	yes
result	yes	yes
=	no	no
OpenTypeSupport	no	yes
.	no	no
convert	no	yes
(	no	no
bm	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testNegativeTotalMessageCount	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
receiveMessage	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
totalMessageCount	yes	yes
=	no	no
getTotalMessageCount	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
totalMessageCount	yes	yes
<	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
sendMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TESTQUEUE	yes	yes
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
queue	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no

private	no	yes
Message	no	yes
receiveMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
TESTQUEUE	yes	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

private	no	yes
long	no	yes
getTotalMessageCount	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ObjectName	no	yes
brokerViewMBeanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
brokerMBean	yes	yes
=	no	no
(	no	no
BrokerViewMBean	no	yes
)	no	no
brokerService	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
brokerViewMBeanName	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testInitialContext	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
InitialContext	no	yes
context	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
context	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	yes	yes
=	no	no
(	no	no
ActiveMQConnectionFactory	no	yes
)	no	no
context	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
connectionFactory	yes	yes
!=	no	no
null	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testInitialContextHasXA	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
InitialContext	no	yes
context	no	yes
=	no	no
new	no	yes
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
context	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
ActiveMQXAConnectionFactory	no	yes
connectionFactory	yes	yes
=	no	no
(	no	no
ActiveMQXAConnectionFactory	no	yes
)	no	no
context	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
connectionFactory	yes	yes
!=	no	no
null	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertBinding	no	yes
(	no	no
Binding	no	yes
binding	no	yes
)	no	no
throws	no	yes
NamingException	no	yes
{	no	no
Object	no	yes
object	no	yes
=	no	no
binding	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
object	no	yes
,	no	no
object	no	yes
instanceof	no	no
Context	no	yes
)	no	no
;	no	no
Context	no	yes
childContext	no	yes
=	no	no
(	no	no
Context	no	yes
)	no	no
object	no	yes
;	no	no
NamingEnumeration	no	yes
<	no	no
Binding	no	yes
>	no	no
iter	no	yes
=	no	no
childContext	no	yes
.	no	no
listBindings	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
iter	no	yes
.	no	no
hasMore	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Binding	no	yes
destinationBinding	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testStatistic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BoundaryStatisticImpl	no	yes
stat	yes	yes
=	no	no
new	no	yes
BoundaryStatisticImpl	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
1000	no	no
,	no	no
2000	no	no
)	no	no
;	no	no
assertStatistic	no	yes
(	no	no
stat	yes	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1000	no	no
,	no	no
stat	yes	yes
.	no	no
getLowerBound	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2000	no	no
,	no	no
stat	yes	yes
.	no	no
getUpperBound	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testStatistic	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
CountStatisticImpl	no	yes
stat	yes	yes
=	no	no
new	no	yes
CountStatisticImpl	no	yes
(	no	no
,	no	no
,	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
setEnabled	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
assertStatistic	no	yes
(	no	no
stat	yes	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
decrement	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
increment	no	yes
(	no	no
)	no	no
;	no	no
assertLastTimeNotStartTime	no	yes
(	no	no
stat	yes	yes
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
100	no	no
,	no	no
stat	yes	yes
.	no	no
getHighWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
setCurrent	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
stat	yes	yes
.	no	no
getCurrent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
stat	yes	yes
.	no	no
getLowWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
100	no	no
,	no	no
stat	yes	yes
.	no	no
getHighWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
setCurrent	no	yes
(	no	no
200	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
200	no	no
,	no	no
stat	yes	yes
.	no	no
getCurrent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
stat	yes	yes
.	no	no
getLowWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
200	no	no
,	no	no
stat	yes	yes
.	no	no
getHighWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
setCurrent	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
stat	yes	yes
.	no	no
getCurrent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
stat	yes	yes
.	no	no
getLowWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
200	no	no
,	no	no
stat	yes	yes
.	no	no
getHighWaterMark	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertLastTimeNotStartTime	no	yes
(	no	no
stat	yes	yes
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
1	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
100	no	no
,	no	no
stat	yes	yes
.	no	no
getMinTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
100	no	no
,	no	no
stat	yes	yes
.	no	no
getMaxTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
addTime	no	yes
(	no	no
403	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
100	no	no
,	no	no
stat	yes	yes
.	no	no
getMinTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
403	no	no
,	no	no
stat	yes	yes
.	no	no
getMaxTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
addTime	no	yes
(	no	no
50	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
3	no	no
,	no	no
stat	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
50	no	no
,	no	no
stat	yes	yes
.	no	no
getMinTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
403	no	no
,	no	no
stat	yes	yes
.	no	no
getMaxTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
553	no	no
,	no	no
stat	yes	yes
.	no	no
getTotalTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
stat	yes	yes
.	no	no
addTime	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
assertLastTimeNotStartTime	no	yes
(	no	no
stat	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
dumpQueue	no	yes
(	no	no
MessageQueue	no	yes
queue	yes	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

destinationInfo1	no	yes
=	no	no
createDestinationInfo	no	yes
(	no	no
connection1	no	yes
,	no	no
connectionInfo1	no	yes
,	no	no
ActiveMQDestination	no	yes
.	no	no
QUEUE_TYPE	no	yes
)	no	no
;	no	no
connection1	no	yes
.	no	no
request	no	yes
(	no	no
createMessage	no	yes
(	no	no
producerInfo	no	yes
,	no	no
destinationInfo1	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Object	no	yes
[	no	no
]	no	no
messages	no	yes
=	no	no
browseQueueWithJmx	no	yes
(	no	no
localBroker	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
sendNumMessages	no	yes
,	no	no
messages	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
StubConnection	no	yes
connection2	no	yes
=	no	no
createRemoteConnection	no	yes
(	no	no
)	no	no
;	no	no
ConnectionInfo	no	yes
connectionInfo2	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfo2	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfo2	no	yes
)	no	no
;	no	no
connection2	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfo2	no	yes
)	no	no
;	no	no
connection2	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfo2	no	yes
)	no	no
;	no	no
ActiveMQDestination	no	yes
destinationInfo2	no	yes
=	no	no
createDestinationInfo	no	yes
(	no	no
connection2	no	yes
,	no	no
connectionInfo2	no	yes
,	no	no
ActiveMQDestination	no	yes
.	no	no
QUEUE_TYPE	no	yes
)	no	no
;	no	no
final	no	yes
ConsumerInfo	no	yes
consumerInfo2	no	yes
=	no	no
createConsumerInfo	no	yes
(	no	no
sessionInfo2	no	yes
,	no	no
destinationInfo2	no	yes
)	no	no
;	no	no
connection2	no	yes
.	no	no
send	no	yes
(	no	no
consumerInfo2	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
receiveNumMessages	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
Message	no	yes
message1	yes	yes
=	no	no
receiveMessage	no	yes
(	no	no
connection2	no	yes
,	no	no
20000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message1	yes	yes
)	no	no
;	no	no

private	no	yes
Object	no	yes
[	no	no
]	no	no
browseQueueWithJmx	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
new	no	yes
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
broker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
queueName	no	yes
)	no	no
;	no	no
ObjectName	no	yes
queueObjectName	no	yes
=	no	no
ObjectName	no	yes
.	no	no
getInstance	no	yes
(	no	no
amqDomain	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
ManagementContext	no	yes
mgmtCtx	no	yes
=	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
mgmtCtx	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
queueObjectName	no	yes
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
Object	no	yes
[	no	no
]	no	no
messages	yes	yes
=	no	no
queueView	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	yes	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	yes	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	yes	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	no	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	no	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bridges	no	yes
)	no	no
)	no	no
;	no	no
DemandForwardingBridgeSupport	no	yes
demandForwardingBridgeSupport	yes	yes
=	no	no
(	no	no
DemandForwardingBridgeSupport	no	yes
)	no	no
bridges	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
ConcurrentMap	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
DemandSubscription	no	yes
>	no	no
forwardingBridges	yes	yes
=	no	no
demandForwardingBridgeSupport	yes	yes
.	no	no
getLocalSubscriptionMap	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	no	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	no	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bridges	no	yes
)	no	no
)	no	no
;	no	no
DemandForwardingBridgeSupport	no	yes
demandForwardingBridgeSupport	no	yes
=	no	no
(	no	no
DemandForwardingBridgeSupport	no	yes
)	no	no
bridges	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
ConcurrentMap	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
DemandSubscription	no	yes
>	no	no
forwardingBridges	no	yes
=	no	no
demandForwardingBridgeSupport	no	yes
.	no	no
getLocalSubscriptionMap	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
demandForwardingBridgeSupport	no	yes
+	no	no
+	no	no
forwardingBridges	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
forwardingBridges	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
DemandSubscription	no	yes
demandSubscription	yes	yes
:	no	no
forwardingBridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
demandSubscription	yes	yes
.	no	no
getLocalInfo	no	yes
(	no	no
)	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
logAllMbeans	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
MalformedURLException	no	yes
{	no	no
try	no	yes
{	no	no
Set	no	yes
<	no	no
?	no	no
>	no	no
all	yes	yes
=	no	no
mBeanServer	no	yes
.	no	no
queryNames	no	yes
(	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testStaysUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
bridgeIdentity	yes	yes
=	no	no
getBridgeId	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
reproduceNpe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
broker0	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkConnector	no	yes
=	no	no
broker0	no	yes
.	no	no
addNetworkConnector	no	yes
(	no	no
+	no	no
urlString	no	yes
+	no	no
+	no	no
urlString	no	yes
+	no	no
)	no	no
;	no	no
networkConnector	no	yes
.	no	no
setDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
networkConnector	no	yes
.	no	no
setStaticBridge	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
networkConnector	no	yes
.	no	no
setStaticallyIncludedDestinations	no	yes
(	no	no
Arrays	no	yes
.	no	no
<	no	no
ActiveMQDestination	no	yes
>	no	no
asList	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
[	no	no
]	no	no
{	no	no
dest	no	yes
}	no	no
)	no	no
)	no	no
;	no	no
broker0	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
publish	no	yes
(	no	no
broker0	no	yes
.	no	no
getVmConnectorURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BrokerService	no	yes
broker1	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
addConnector	no	yes
(	no	no
urlString	no	yes
)	no	no
;	no	no
broker1	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
addConnection	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
ConnectionInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
addConnection	no	yes
(	no	no
context	no	yes
,	no	no
info	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
info	yes	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
&&	no	no
info	yes	yes
.	no	no
getClientId	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

brokerB	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
done	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
while	no	yes
(	no	no
!	no	no
done	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
brokerA	no	yes
=	no	no
createBroker	no	yes
(	no	no
,	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
brokerA	no	yes
.	no	no
setBrokerName	no	yes
(	no	no
)	no	no
;	no	no
brokerA	no	yes
.	no	no
setBrokerObjectName	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
brokerA	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
getJmxDomainName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
JMXSupport	no	yes
.	no	no
encodeObjectNamePart	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
)	no	no
;	no	no
(	no	no
(	no	no
KahaDBPersistenceAdapter	no	yes
)	no	no
brokerA	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getLocker	no	yes
(	no	no
)	no	no
.	no	no
setLockAcquireSleepInterval	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
brokerA	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
brokerA	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
brokerA1	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
doTestNetworkSendReceive	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
to	no	yes
,	no	no
final	no	yes
BrokerService	no	yes
from	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
,	no	no
JMSException	no	yes
{	no	no

private	no	yes
void	no	yes
doTestNetworkSendReceive	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
to	yes	yes
,	no	no
final	no	yes
BrokerService	no	yes
from	no	yes
)	no	no
throws	no	yes
Exception	no	yes
,	no	no
JMSException	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
from	no	yes
)	no	no
;	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
sslContext	no	yes
)	no	no
;	no	no
ConnectionFactory	no	yes
consFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
from	no	yes
)	no	no
;	no	no
Connection	no	yes
consConn	no	yes
=	no	no
consFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consConn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consSession	no	yes
=	no	no
consConn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
consSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION_NAME	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestNetworkSendReceive	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
to	no	yes
,	no	no
final	no	yes
BrokerService	no	yes
from	no	yes
)	no	no
throws	no	yes
Exception	no	yes
,	no	no
JMSException	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
from	no	yes
)	no	no
;	no	no
SslContext	no	yes
.	no	no
setCurrentSslContext	no	yes
(	no	no
sslContext	no	yes
)	no	no
;	no	no
ConnectionFactory	no	yes
consFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
from	no	yes
)	no	no
;	no	no
Connection	no	yes
consConn	no	yes
=	no	no
consFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consConn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consSession	no	yes
=	no	no
consConn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
consSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION_NAME	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
consSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
to	no	yes
)	no	no
;	no	no
sendMessageTo	no	yes
(	no	no
destination	no	yes
,	no	no
to	no	yes
)	no	no
;	no	no
boolean	no	yes
gotMessage	no	yes
=	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

protected	no	yes
Tracer	no	yes
createTracer	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
new	no	yes
Tracer	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onReceive	no	yes
(	no	no
MQTTFrame	no	yes
frame	yes	yes
)	no	no
{	no	no

private	no	yes
boolean	no	yes
verifyDurableConsumerCount	no	yes
(	no	no
final	no	yes
long	no	yes
expectedCount	no	yes
,	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
boolean	no	yes
result	no	yes
=	no	no
false	no	yes
;	no	no
BrokerView	no	yes
view	no	yes
=	no	no
broker	yes	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
view	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
ObjectName	no	yes
[	no	no
]	no	no
subs	yes	yes
=	no	no
broker	yes	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
subs	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testRequestReply	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MessageProducer	no	yes
remoteProducer	no	yes
=	no	no
remoteSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
remoteConsumer	no	yes
=	no	no
remoteSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
included	no	yes
)	no	no
;	no	no
remoteConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
final	no	yes
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
try	no	yes
{	no	no
String	no	yes
payload	no	yes
=	no	no
+	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
textMsg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyTo	no	yes
;	no	no
replyTo	no	yes
=	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
clearBody	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testRequestReply	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
MessageProducer	no	yes
remoteProducer	no	yes
=	no	no
remoteSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
remoteConsumer	no	yes
=	no	no
remoteSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
included	no	yes
)	no	no
;	no	no
remoteConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
final	no	yes
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
try	no	yes
{	no	no
String	no	yes
payload	no	yes
=	no	no
+	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
textMsg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyTo	no	yes
;	no	no
replyTo	no	yes
=	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
clearBody	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
remoteProducer	no	yes
.	no	no
send	no	yes
(	no	no
replyTo	no	yes
,	no	no
textMsg	yes	yes
)	no	no
;	no	no

remoteConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
final	no	yes
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
try	no	yes
{	no	no
String	no	yes
payload	no	yes
=	no	no
+	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
textMsg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyTo	no	yes
;	no	no
replyTo	no	yes
=	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
clearBody	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
remoteProducer	no	yes
.	no	no
send	no	yes
(	no	no
replyTo	no	yes
,	no	no
textMsg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
textMsg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
DestinationDoesNotExistException	no	yes
expected	no	yes
)	no	no
{	no	no
replyToNonExistDest	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
textMsg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Queue	no	yes
tempQueue	no	yes
=	no	no
localSession	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
requestProducer	no	yes
=	no	no
localSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
included	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
requestConsumer	no	yes
=	no	no
localSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
tempQueue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
dlqconsumer	no	yes
=	no	no
remoteSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
SharedDeadLetterStrategy	no	yes
.	no	no
DEFAULT_DEAD_LETTER_QUEUE_NAME	no	yes
)	no	no
)	no	no
;	no	no
dlqconsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
remoteDLQCount	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
long	no	yes
done	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
6000	no	no
)	no	no
;	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
MESSAGE_COUNT	no	yes
>	no	no
roundTripComplete	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
remoteDLQCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
replyToNonExistDest	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
&&	no	no
done	no	yes
>	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
)	no	no
{	no	no
String	no	yes
payload	no	yes
=	no	no
+	no	no
i	no	yes
;	no	no
i	no	yes
++	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
localSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
tempQueue	no	yes
)	no	no
;	no	no
requestProducer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
groupId	no	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
brokers	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
[	no	no
BROKER_COUNT	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
brokers	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
tearDown	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
forwardingClients	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

final	no	yes
TransportConnector	no	yes
transportConnector	no	yes
=	no	no
remote	no	yes
.	no	no
addConnector	no	yes
(	no	no
)	no	no
;	no	no
remote	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
local	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
local	no	yes
.	no	no
setSslContext	no	yes
(	no	no
sslContext	no	yes
)	no	no
;	no	no
local	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
local	no	yes
.	no	no
setPersistent	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
NetworkConnector	no	yes
networkConnector	no	yes
=	no	no
local	no	yes
.	no	no
addNetworkConnector	no	yes
(	no	no
+	no	no
remote	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
.	no	no
replace	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no
local	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
!	no	no
networkConnector	no	yes
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
&&	no	no
(	no	no
networkConnector	no	yes
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
new	no	yes
DurableConduitBridge	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
[	no	no
0	no	no
]	no	no
.	no	no
getRemoteBrokerName	no	yes
(	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicReference	no	yes
<	no	no
DurableConduitBridge	no	yes
>	no	no
bridge	yes	yes
=	no	no
new	no	yes
AtomicReference	no	yes
<	no	no
>	no	no
(	no	no
(	no	no
DurableConduitBridge	no	yes
)	no	no
networkConnector	no	yes
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
bridge	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getRemoteBrokerName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
200	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

String	no	yes
payload	no	yes
=	no	no
+	no	no
textMsg	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyTo	no	yes
;	no	no
replyTo	no	yes
=	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
textMsg	no	yes
.	no	no
clearBody	no	yes
(	no	no
)	no	no
;	no	no
textMsg	no	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
remoteProducer	no	yes
.	no	no
send	no	yes
(	no	no
replyTo	no	yes
,	no	no
textMsg	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TopicRequestor	no	yes
requestor	no	yes
=	no	no
new	no	yes
TopicRequestor	no	yes
(	no	no
(	no	no
TopicSession	no	yes
)	no	no
localSession	no	yes
,	no	no
included	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
localSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
TextMessage	no	yes
result	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
requestor	no	yes
.	no	no
request	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	yes	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	yes	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	yes	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	no	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	no	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bridges	no	yes
)	no	no
)	no	no
;	no	no
DemandForwardingBridgeSupport	no	yes
demandForwardingBridgeSupport	yes	yes
=	no	no
(	no	no
DemandForwardingBridgeSupport	no	yes
)	no	no
bridges	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
ConcurrentMap	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
DemandSubscription	no	yes
>	no	no
forwardingBridges	yes	yes
=	no	no
demandForwardingBridgeSupport	yes	yes
.	no	no
getLocalSubscriptionMap	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
waitForConsumerRegistration	no	yes
(	no	no
final	no	yes
BrokerService	no	yes
brokerService	yes	yes
,	no	no
final	no	yes
int	no	yes
min	no	yes
,	no	no
final	no	yes
ActiveMQDestination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
[	no	no
]	no	no
bridges	no	yes
=	no	no
brokerService	yes	yes
.	no	no
getNetworkConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
bridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
bridges	no	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bridges	no	yes
)	no	no
)	no	no
;	no	no
DemandForwardingBridgeSupport	no	yes
demandForwardingBridgeSupport	no	yes
=	no	no
(	no	no
DemandForwardingBridgeSupport	no	yes
)	no	no
bridges	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
ConcurrentMap	no	yes
<	no	no
ConsumerId	no	yes
,	no	no
DemandSubscription	no	yes
>	no	no
forwardingBridges	no	yes
=	no	no
demandForwardingBridgeSupport	no	yes
.	no	no
getLocalSubscriptionMap	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
brokerService	yes	yes
+	no	no
+	no	no
demandForwardingBridgeSupport	no	yes
+	no	no
+	no	no
forwardingBridges	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
forwardingBridges	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
DemandSubscription	no	yes
demandSubscription	yes	yes
:	no	no
forwardingBridges	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
demandSubscription	yes	yes
.	no	no
getLocalInfo	no	yes
(	no	no
)	no	no
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
localSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
included	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
test	no	yes
=	no	no
localSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
localConsumer	no	yes
=	no	no
localSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
included	no	yes
,	no	no
consumerName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
localConsumer	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
/	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
localConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
2500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
doTearDown	no	yes
(	no	no
)	no	no
;	no	no
doSetUp	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
remoteConsumer	yes	yes
=	no	no
remoteSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
included	no	yes
,	no	no
consumerName	no	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertRemoteAdvisoryCount	no	yes
(	no	no
final	no	yes
MessageConsumer	no	yes
advisoryConsumer	no	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
int	no	yes
available	no	yes
=	no	no
0	no	no
;	no	no
ActiveMQMessage	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
message	yes	yes
=	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
advisoryConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
available	no	yes
++	no	no
;	no	no

public	no	yes
void	no	yes
testQueueRequestorOverBridge	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
TextMessage	no	yes
result	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
requestor	no	yes
.	no	no
request	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testTopicRequestorOverBridge	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	yes	yes
=	no	no
requestServerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testTopicRequestorOverBridge	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
requestServerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
TextMessage	no	yes
result	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
requestor	no	yes
.	no	no
request	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
String	no	yes
payload	no	yes
=	no	no
+	no	no
textMsg	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
replyTo	no	yes
;	no	no
replyTo	no	yes
=	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
clearBody	no	yes
(	no	no
)	no	no
;	no	no
textMsg	yes	yes
.	no	no
setText	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testGenerateAndReParsingIsTheSame	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ByteArrayOutputStream	no	yes
buffer	no	yes
=	no	no
new	no	yes
ByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
DataOutputStream	no	yes
ds	no	yes
=	no	no
new	no	yes
DataOutputStream	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
Object	no	yes
expected	yes	yes
=	no	no
createObject	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testGenerateAndReParsingIsTheSame	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ByteArrayOutputStream	no	yes
buffer	no	yes
=	no	no
new	no	yes
ByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
DataOutputStream	no	yes
ds	no	yes
=	no	no
new	no	yes
DataOutputStream	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
Object	no	yes
expected	no	yes
=	no	no
createObject	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	no	yes
)	no	no
;	no	no
openWireformat	no	yes
.	no	no
marshal	no	yes
(	no	no
expected	no	yes
,	no	no
ds	no	yes
)	no	no
;	no	no
ds	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ByteArrayInputStream	no	yes
in	no	yes
=	no	no
new	no	yes
ByteArrayInputStream	no	yes
(	no	no
buffer	no	yes
.	no	no
toByteArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataInputStream	no	yes
dis	no	yes
=	no	no
new	no	yes
DataInputStream	no	yes
(	no	no
in	no	yes
)	no	no
;	no	no
Object	no	yes
actual	yes	yes
=	no	no
openWireformat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
dis	no	yes
)	no	no
;	no	no
assertBeansEqual	no	yes
(	no	no
,	no	no
new	no	yes
HashSet	no	yes
<	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
,	no	no
expected	no	yes
,	no	no
actual	yes	yes
)	no	no
;	no	no

comparedObjects	no	yes
.	no	no
add	no	yes
(	no	no
expected	no	yes
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
extends	no	yes
Object	no	yes
>	no	no
type	no	yes
=	no	no
expected	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
type	no	yes
,	no	no
actual	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BeanInfo	no	yes
beanInfo	no	yes
=	no	no
Introspector	no	yes
.	no	no
getBeanInfo	no	yes
(	no	no
type	no	yes
)	no	no
;	no	no
PropertyDescriptor	no	yes
[	no	no
]	no	no
descriptors	no	yes
=	no	no
beanInfo	no	yes
.	no	no
getPropertyDescriptors	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
descriptors	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
PropertyDescriptor	no	yes
descriptor	no	yes
=	no	no
descriptors	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
Method	no	yes
method	no	yes
=	no	no
descriptor	no	yes
.	no	no
getReadMethod	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
method	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
String	no	yes
name	yes	yes
=	no	no
descriptor	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
expectedValue	no	yes
=	no	no
null	no	yes
;	no	no
Object	no	yes
actualValue	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
expectedValue	no	yes
=	no	no
method	no	yes
.	no	no
invoke	no	yes
(	no	no
expected	no	yes
,	no	no
EMPTY_ARGUMENTS	no	yes
)	no	no
;	no	no
actualValue	no	yes
=	no	no
method	no	yes
.	no	no
invoke	no	yes
(	no	no
actual	no	yes
,	no	no
EMPTY_ARGUMENTS	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testLongNumberRanges	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
[	no	no
]	no	no
numberValues	no	yes
=	no	no
{	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0x7e	no	yes
,	no	no
0x7f	no	yes
,	no	no
0x80	no	yes
,	no	no
0x81	no	yes
,	no	no
0xf0	no	yes
,	no	no
0xff	no	yes
,	no	no
0x7eff	no	yes
,	no	no
0x7fffL	no	yes
,	no	no
0x8001L	no	yes
,	no	no
0x8000L	no	yes
,	no	no
0xe000L	no	yes
,	no	no
0xe0001L	no	yes
,	no	no
0xff00L	no	yes
,	no	no
0xffffL	no	yes
,	no	no
0x10000L	no	yes
,	no	no
0x700000L	no	yes
,	no	no
0x12345678L	no	yes
,	no	no
0x72345678L	no	yes
,	no	no
0x7fffffffL	no	yes
,	no	no
0x80000000L	no	yes
,	no	no
0x80000001L	no	yes
,	no	no
0xE0000001L	no	yes
,	no	no
0xFFFFFFFFL	no	yes
,	no	no
0x123456781L	no	yes
,	no	no
0x1234567812L	no	yes
,	no	no
0x12345678123L	no	yes
,	no	no
0x123456781234L	no	yes
,	no	no
0x1234567812345L	no	yes
,	no	no
0x12345678123456L	no	yes
,	no	no
0x7e345678123456L	no	yes
,	no	no
0x7fffffffffffffL	no	yes
,	no	no
0x80000000000000L	no	yes
,	no	no
0x80000000000001L	no	yes
,	no	no
0xe0000000000001L	no	yes
,	no	no
0xffffffffffffffL	no	yes
,	no	no
0x1234567812345678L	no	yes
,	no	no
0x7fffffffffffffffL	no	yes
,	no	no
0x8000000000000000L	no	yes
,	no	no
0x8000000000000001L	no	yes
,	no	no
0xe000000000000001L	no	yes
,	no	no
0xffffffffffffffffL	no	yes
,	no	no
1	no	no
}	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numberValues	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
long	no	yes
value	no	yes
=	no	no
numberValues	no	yes
[	no	no
i	yes	yes
]	no	no
;	no	no
SessionId	no	yes
object	no	yes
=	no	no
new	no	yes
SessionId	no	yes
(	no	no
)	no	no
;	no	no
object	no	yes
.	no	no
setConnectionId	no	yes
(	no	no
connectionId	no	yes
)	no	no
;	no	no
object	no	yes
.	no	no
setValue	no	yes
(	no	no
value	no	yes
)	no	no
;	no	no
writeObject	no	yes
(	no	no
object	no	yes
)	no	no
;	no	no
}	no	no
ds	no	yes
.	no	no
writeInt	no	yes
(	no	no
endOfStreamMarker	no	yes
)	no	no
;	no	no
ds	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ByteArrayInputStream	no	yes
in	no	yes
=	no	no
new	no	yes
ByteArrayInputStream	no	yes
(	no	no
buffer	no	yes
.	no	no
toByteArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataInputStream	no	yes
dis	no	yes
=	no	no
new	no	yes
DataInputStream	no	yes
(	no	no
in	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numberValues	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
long	no	yes
value	no	yes
=	no	no
numberValues	no	yes
[	no	no
i	yes	yes
]	no	no
;	no	no
String	no	yes
expected	yes	yes
=	no	no
Long	no	yes
.	no	no
toHexString	no	yes
(	no	no
value	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testPerformance	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Connection	no	yes
>	no	no
list	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Connection	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
CONNECTION_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no

assertNotNull	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
TOPIC_NAME	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
publisher	no	yes
)	no	no
;	no	no
MapMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createMapMessage	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
int	no	yes
loop	yes	yes
;	no	no
for	no	yes
(	no	no
loop	yes	yes
=	no	no
0	no	no
;	no	no
loop	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
loop	yes	yes
++	no	no
)	no	no
{	no	no
msg	no	yes
.	no	no
setInt	no	yes
(	no	no
,	no	no
loop	yes	yes
)	no	no
;	no	no
publisher	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DELIVERY_MODE	no	yes
,	no	no
DELIVERY_PRIORITY	no	yes
,	no	no
Message	no	yes
.	no	no
DEFAULT_TIME_TO_LIVE	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
loop	yes	yes
%	no	no
5000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
USERNAME	no	yes
,	no	no
DEFAULT_PASSWORD	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
CLIENTID	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
TOPIC_NAME	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
subscriber	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
SUBID	no	yes
,	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
subscriber	no	yes
)	no	no
;	no	no
int	no	yes
loop	yes	yes
;	no	no
for	no	yes
(	no	no
loop	yes	yes
=	no	no
0	no	no
;	no	no
loop	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
loop	yes	yes
++	no	no
)	no	no
{	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
loop	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
publisher	no	yes
)	no	no
;	no	no
MapMessage	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createMapMessage	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setString	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
int	no	yes
loop	yes	yes
;	no	no
for	no	yes
(	no	no
loop	yes	yes
=	no	no
0	no	no
;	no	no
loop	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
loop	yes	yes
++	no	no
)	no	no
{	no	no
msg	no	yes
.	no	no
setInt	no	yes
(	no	no
,	no	no
loop	yes	yes
)	no	no
;	no	no
publisher	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DELIVERY_MODE	no	yes
,	no	no
DELIVERY_PRIORITY	no	yes
,	no	no
Message	no	yes
.	no	no
DEFAULT_TIME_TO_LIVE	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
loop	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testPerformance	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
mp	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
mp	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
releaseDestination	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ClassPathXmlApplicationContext	no	yes
context1	no	yes
=	no	no
null	no	yes
;	no	no
BrokerFactoryBean	no	yes
brokerFactory	no	yes
=	no	no
new	no	yes
BrokerFactoryBean	no	yes
(	no	no
new	no	yes
ClassPathResource	no	yes
(	no	no
config	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
brokerFactory	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setContextClassLoader	no	yes
(	no	no
NetworkedSyncTest	no	yes
.	no	no
class	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context1	no	yes
=	no	no
new	no	yes
ClassPathXmlApplicationContext	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
broker1	no	yes
=	no	no
(	no	no
BrokerService	no	yes
)	no	no
context1	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
broker1	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	yes
e	yes	yes
;	no	no
}	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setContextClassLoader	no	yes
(	no	no
NetworkedSyncTest	no	yes
.	no	no
class	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context1	no	yes
=	no	no
new	no	yes
ClassPathXmlApplicationContext	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
broker2	no	yes
=	no	no
(	no	no
BrokerService	no	yes
)	no	no
context1	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
broker2	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker2	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no

e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
long	no	yes
counter	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NetworkedSyncTest	no	yes
.	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
text	no	yes
=	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
this	no	yes
.	no	no
hashCode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
counter	no	yes
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
counter	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
counter	no	yes
%	no	no
1000	no	no
)	no	no
==	no	no
0	no	no
)	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
counter	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
javax	no	yes
.	no	no
jms	no	yes
.	no	no
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
long	no	yes
counter	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NetworkedSyncTest	no	yes
.	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message2	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message2	yes	yes
instanceof	no	no
TextMessage	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMessage	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message2	yes	yes
;	no	no
textMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

consumerBroker	no	yes
=	no	no
createConsumerBroker	no	yes
(	no	no
consumerBindAddress	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
producerBroker	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
producerBroker	no	yes
=	no	no
createProducerBroker	no	yes
(	no	no
producerBindAddress	no	yes
)	no	no
;	no	no
}	no	no
consumerFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
consumerBindAddress	no	yes
)	no	no
;	no	no
consumerFactory	no	yes
.	no	no
setDispatchAsync	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
ActiveMQPrefetchPolicy	no	yes
policy	no	yes
=	no	no
new	no	yes
ActiveMQPrefetchPolicy	no	yes
(	no	no
)	no	no
;	no	no
policy	no	yes
.	no	no
setQueuePrefetch	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
consumerFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
policy	no	yes
)	no	no
;	no	no
producerFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
producerBindAddress	no	yes
)	no	no
;	no	no
Connection	no	yes
con	no	yes
=	no	no
consumerFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producers	no	yes
=	no	no
new	no	yes
PerfProducer	no	yes
[	no	no
numberofProducers	no	yes
*	no	no
numberOfDestinations	no	yes
]	no	no
;	no	no
consumers	no	yes
=	no	no
new	no	yes
PerfConsumer	no	yes
[	no	no
numberOfConsumers	no	yes
*	no	no
numberOfDestinations	no	yes
]	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
k	no	yes
=	no	no
0	no	no
;	no	no
k	no	yes
<	no	no
numberOfDestinations	no	yes
;	no	no
k	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
destinationName	no	yes
+	no	no
+	no	no
k	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
broker	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
bindAddress	no	yes
)	no	no
;	no	no
}	no	no
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
clientURI	no	yes
)	no	no
;	no	no
Connection	no	yes
con	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberofProducers	no	yes
+	no	no
+	no	no
numberOfConsumers	no	yes
+	no	no
+	no	no
numberOfDestinations	no	yes
+	no	no
)	no	no
;	no	no
totalNumberOfConsumers	no	yes
=	no	no
numberOfConsumers	no	yes
*	no	no
numberOfDestinations	no	yes
;	no	no
totalNumberOfProducers	no	yes
=	no	no
numberofProducers	no	yes
*	no	no
numberOfDestinations	no	yes
;	no	no
producers	no	yes
=	no	no
new	no	yes
PerfProducer	no	yes
[	no	no
totalNumberOfProducers	no	yes
]	no	no
;	no	no
consumers	no	yes
=	no	no
new	no	yes
PerfConsumer	no	yes
[	no	no
totalNumberOfConsumers	no	yes
]	no	no
;	no	no
int	no	yes
consumerCount	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
producerCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
k	no	yes
=	no	no
0	no	no
;	no	no
k	no	yes
<	no	no
numberOfDestinations	no	yes
;	no	no
k	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
destinationName	no	yes
+	no	no
+	no	no
k	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	yes	yes
)	no	no
{	no	no
super	no	yes
.	no	no
onMessage	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
60000	no	no
)	no	no
public	no	yes
void	no	yes
testForConnectionLeak	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Integer	no	yes
expectedConnectionCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
2	no	no
==	no	no
0	no	no
)	no	no
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
String	no	yes
uri	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
void	no	yes
testFunctionCall	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Object	no	yes
filter	yes	yes
=	no	no
parse	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
filter	yes	yes
instanceof	no	no
BooleanFunctionCallExpr	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testParseXPath	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BooleanExpression	no	yes
filter	yes	yes
=	no	no
parse	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
filter	yes	yes
instanceof	no	no
XPathExpression	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testParseWithParensAround	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
[	no	no
]	no	no
values	no	yes
=	no	no
{	no	no
,	no	no
,	no	no
}	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
values	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
value	yes	yes
=	no	no
values	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no

protected	no	yes
void	no	yes
assertCreatedURL	no	yes
(	no	no
String	no	yes
expectedURL	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
url	yes	yes
=	no	no
factory	no	yes
.	no	no
getBrokerURL	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
messages	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	no	yes
,	no	no
long	no	yes
maxWaitTime	no	yes
)	no	no
{	no	no
long	no	yes
maxRemainingMessageCount	yes	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
messageCount	no	yes
-	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	no	yes
,	no	no
long	no	yes
maxWaitTime	no	yes
)	no	no
{	no	no
long	no	yes
maxRemainingMessageCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
messageCount	no	yes
-	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
maxRemainingMessageCount	no	yes
+	no	no
)	no	no
;	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
endTime	no	yes
=	no	no
start	no	yes
+	no	no
maxWaitTime	no	yes
;	no	no
while	no	yes
(	no	no
maxRemainingMessageCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
synchronized	no	yes
(	no	no
messages	no	yes
)	no	no
{	no	no
messages	no	yes
.	no	no
wait	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
hasReceivedMessages	no	yes
(	no	no
messageCount	no	yes
)	no	no
||	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
>	no	no
endTime	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
maxRemainingMessageCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
messageCount	no	yes
-	no	no
messages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
long	no	yes
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

public	no	yes
void	no	yes
start	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
text	yes	yes
=	no	no
+	no	no
i	no	yes
;	no	no
template	no	yes
.	no	no
send	no	yes
(	no	no
destination	no	yes
,	no	no
new	no	yes
MessageCreator	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
Message	no	yes
createMessage	no	yes
(	no	no
Session	no	yes
session	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no

Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setContextClassLoader	no	yes
(	no	no
SpringTest	no	yes
.	no	no
class	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
=	no	no
new	no	yes
ClassPathXmlApplicationContext	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
(	no	no
SpringConsumer	no	yes
)	no	no
context	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
(	no	no
SpringProducer	no	yes
)	no	no
context	no	yes
.	no	no
getBean	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
producer	no	yes
!=	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
producer	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
messages	no	yes
=	no	no
consumer	no	yes
.	no	no
flushMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Iterator	no	yes
<	no	no
Message	no	yes
>	no	no
iter	no	yes
=	no	no
messages	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
Object	no	yes
message	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
BytesMessage	no	yes
createMessage	no	yes
(	no	no
int	no	yes
count	yes	yes
,	no	no
Session	no	yes
session	no	yes
,	no	no
int	no	yes
maxMessageSize	no	yes
,	no	no
AtomicLong	no	yes
publishedMessageSize	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
final	no	yes
BytesMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Random	no	yes
randomSize	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
size	yes	yes
=	no	no
randomSize	no	yes
.	no	no
nextInt	no	yes
(	no	no
(	no	no
maxMessageSize	no	yes
-	no	no
100	no	no
)	no	no
+	no	no
1	no	no
)	no	no
+	no	no
100	no	no
;	no	no

public	no	yes
void	no	yes
testQueues	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQQueue	no	yes
queue	no	yes
=	no	no
(	no	no
ActiveMQQueue	no	yes
)	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
ProducerThread	no	yes
lowPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
queue	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
ProducerThread	no	yes
highPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
queue	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
lowPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
queueConsumer	no	yes
=	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
queueConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

protected	no	yes
Message	no	yes
createMessage	no	yes
(	no	no
int	no	yes
priority	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
String	no	yes
text	yes	yes
=	no	no
+	no	no
priority	no	yes
;	no	no
Message	no	yes
msg	no	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
text	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testDurableSubsReconnect	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
(	no	no
ActiveMQTopic	no	yes
)	no	no
sess	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
subName	no	yes
=	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ProducerThread	no	yes
lowPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
ProducerThread	no	yes
highPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
lowPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
/	no	no
4	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no

sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ProducerThread	no	yes
lowPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
ProducerThread	no	yes
highPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
lowPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
/	no	no
4	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
(	no	no
msg	no	yes
!=	no	no
null	no	yes
?	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
?	no	no
HIGH_PRI	no	yes
:	no	no
LOW_PRI	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
closeFrequency	no	yes
==	no	no
0	no	no
)	no	no
{	no	no

sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
(	no	no
ActiveMQTopic	no	yes
)	no	no
sess	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
subName	no	yes
=	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
numToProduce	no	yes
=	no	no
2000	no	no
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
dups	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
numToProduce	no	yes
*	no	no
2	no	no
]	no	no
;	no	no
ProducerThread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
numToProduce	no	yes
,	no	no
LOW_PRI	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
batchSize	no	yes
=	no	no
250	no	no
;	no	no
int	no	yes
lowLowCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numToProduce	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no

producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
batchSize	no	yes
*	no	no
2	no	no
==	no	no
0	no	no
)	no	no
{	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
HIGH_PRI	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
batchSize	no	yes
*	no	no
4	no	no
==	no	no
0	no	no
)	no	no
{	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
lowLowCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
batchSize	no	yes
*	no	no
4	no	no
==	no	no
0	no	no
)	no	no
{	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
lowLowCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
batchSize	no	yes
*	no	no
2	no	no
==	no	no
0	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
lowLowCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
,	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
batchSize	no	yes
*	no	no
2	no	no
==	no	no
0	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
-	no	no
1	no	no
,	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
lowLowCount	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

final	no	yes
String	no	yes
subName	no	yes
=	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ProducerThread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
1	no	no
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
HIGH_PRI	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
-	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessagePriority	no	yes
(	no	no
LOW_PRI	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
producerThread	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HIGH_PRI	no	yes
-	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
LOW_PRI	no	yes
+	no	no
1	no	no
,	no	no
msg	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
15000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testQueueBacklog	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
backlog	no	yes
=	no	no
1800	no	no
;	no	no
ActiveMQQueue	no	yes
queue	no	yes
=	no	no
(	no	no
ActiveMQQueue	no	yes
)	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
ProducerThread	no	yes
lowPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
queue	no	yes
,	no	no
backlog	no	yes
,	no	no
LOW_PRI	no	yes
)	no	no
;	no	no
ProducerThread	no	yes
highPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
queue	no	yes
,	no	no
10	no	no
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
lowPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
queueConsumer	no	yes
=	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
500	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
queueConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no

File	no	yes
lockFile	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
testFolder	no	yes
.	no	no
getRoot	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
String	no	yes
jvmProp	no	yes
=	no	no
LockFile	no	yes
.	no	no
class	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
lockFile	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
jvmProp	no	yes
,	no	no
jvmProp	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
locked	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
final	no	yes
AtomicLong	no	yes
acquireTime	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0l	no	yes
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
underTest	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
acquireTime	yes	yes
.	no	no
set	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
locked	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
String	no	yes
receive	no	yes
(	no	no
Session	no	yes
session	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
String	no	yes
result	no	yes
=	no	no
null	no	yes
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

super	no	yes
.	no	no
persistOutcome	no	yes
(	no	no
tx	no	yes
,	no	no
txid	no	yes
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
persistenceAdapter	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
persistenceAdapter	no	yes
.	no	no
setTransactionStore	no	yes
(	no	no
transactionStore	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
sendMessages	no	yes
(	no	no
true	no	yes
,	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	yes	yes
)	no	no
{	no	no

protected	no	yes
int	no	yes
dumpMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
WireFormat	no	yes
wireFormat	no	yes
=	no	no
new	no	yes
OpenWireFormat	no	yes
(	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
conn	no	yes
=	no	no
(	no	no
(	no	no
JDBCPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
statement	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
)	no	no
;	no	no
ResultSet	no	yes
result	no	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
result	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
id	yes	yes
=	no	no
result	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
String	no	yes
xid	yes	yes
=	no	no
result	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
message	yes	yes
=	no	no
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
result	no	yes
.	no	no
getBytes	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
int	no	yes
receiveMessages	no	yes
(	no	no
int	no	yes
messagesExpected	yes	yes
,	no	no
Session	no	yes
session	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no

protected	no	yes
int	no	yes
receiveMessages	no	yes
(	no	no
int	no	yes
messagesExpected	no	yes
,	no	no
Session	no	yes
session	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
int	no	yes
messagesExpected	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

@	no	no
Before	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
gotError	no	yes
.	no	no
set	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
spi	no	yes
.	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
toInt	no	yes
(	no	no
)	no	no
>	no	no
Level	no	yes
.	no	no
INFO_INT	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testConcurrentDlqOk	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ActiveMQConnectionFactory	no	yes
amq	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
amq	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setIoExceptionHandler	no	yes
(	no	no
new	no	yes
DefaultIOExceptionHandler	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
handle	no	yes
(	no	no
IOException	no	yes
exception	yes	yes
)	no	no
{	no	no

connection	no	yes
=	no	no
amq	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
javax	no	yes
.	no	no
jms	no	yes
.	no	no
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onException	no	yes
(	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
RedeliveryPolicy	no	yes
queuePolicy	no	yes
=	no	no
new	no	yes
RedeliveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
queuePolicy	no	yes
.	no	no
setMaximumRedeliveries	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
)	no	no
.	no	no
setRedeliveryPolicy	no	yes
(	no	no
queuePolicy	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
consumed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
!	no	no
gotError	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
consumed	no	yes
.	no	no
decrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
produceMessages	no	yes
(	no	no
ActiveMQConnectionFactory	no	yes
amq	no	yes
,	no	no
Destination	no	yes
dest	no	yes
,	no	no
int	no	yes
numMessages	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
amq	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
javax	no	yes
.	no	no
jms	no	yes
.	no	no
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onException	no	yes
(	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
long	no	yes
counter	yes	yes
=	no	no
0	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
counter	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
counter	yes	yes
%	no	no
50	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

allowing	no	yes
(	no	no
jdbcPersistenceAdapter	no	yes
)	no	no
.	no	no
getLocker	no	yes
(	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
returnValue	no	yes
(	no	no
locker	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
locker	no	yes
)	no	no
.	no	no
keepAlive	no	yes
(	no	no
)	no	no
;	no	no
when	no	yes
(	no	no
jdbcConn	no	yes
.	no	no
is	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
returnValue	no	yes
(	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
locker	no	yes
)	no	no
.	no	no
keepAlive	no	yes
(	no	no
)	no	no
;	no	no
when	no	yes
(	no	no
jdbcConn	no	yes
.	no	no
is	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
returnValue	no	yes
(	no	no
false	no	yes
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
jdbcPersistenceAdapter	no	yes
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
with	no	yes
(	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
then	no	yes
(	no	no
jdbcConn	no	yes
.	no	no
is	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
brokerService	no	yes
)	no	no
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
then	no	yes
(	no	no
broker	yes	yes
.	no	no
is	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LeaseLockerIOExceptionHandler	no	yes
underTest	no	yes
=	no	no
new	no	yes
LeaseLockerIOExceptionHandler	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
setBrokerService	no	yes
(	no	no
brokerService	no	yes
)	no	no
;	no	no

try	no	yes
{	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
withJMX	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
dataSource	no	yes
.	no	no
stopDB	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
checkTransportConnectorStopped	no	yes
(	no	no
)	no	no
;	no	no
dataSource	no	yes
.	no	no
restartDB	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
checkTransportConnectorStarted	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
true	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no

ProducerThread	no	yes
medHighPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
MED_HIGH_PRI	no	yes
)	no	no
;	no	no
ProducerThread	no	yes
highPri	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
HIGH_PRI	no	yes
)	no	no
;	no	no
lowPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
medPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
medHighPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
medPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
medHighPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
priorities	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
]	no	no
{	no	no
HIGH_PRI	no	yes
,	no	no
MED_HIGH_PRI	no	yes
,	no	no
MED_PRI	no	yes
,	no	no
LOW_PRI	no	yes
}	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
4	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no

medPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
medHighPri	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lowPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
highPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
medPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
medHighPri	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
priorities	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
]	no	no
{	no	no
HIGH_PRI	no	yes
,	no	no
MED_HIGH_PRI	no	yes
,	no	no
MED_PRI	no	yes
,	no	no
LOW_PRI	no	yes
}	no	no
;	no	no
sub	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
4	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
(	no	no
msg	no	yes
!=	no	no
null	no	yes
?	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
,	no	no
priorities	no	yes
[	no	no
i	yes	yes
/	no	no
MSG_NUM	no	yes
]	no	no
,	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
closeFrequency	no	yes
==	no	no
0	no	no
)	no	no
{	no	no

final	no	yes
int	no	yes
maxPriority	no	yes
=	no	no
5	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
[	no	no
]	no	no
messageCounts	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
[	no	no
maxPriority	no	yes
]	no	no
;	no	no
final	no	yes
long	no	yes
[	no	no
]	no	no
messageIds	no	yes
=	no	no
new	no	yes
long	no	yes
[	no	no
maxPriority	no	yes
]	no	no
;	no	no
Vector	no	yes
<	no	no
ProducerThread	no	yes
>	no	no
producers	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
ProducerThread	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
priority	no	yes
=	no	no
0	no	no
;	no	no
priority	no	yes
<	no	no
maxPriority	no	yes
;	no	no
priority	no	yes
++	no	no
)	no	no
{	no	no
producers	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
topic	no	yes
,	no	no
MSG_NUM	no	yes
,	no	no
priority	no	yes
)	no	no
)	no	no
;	no	no
messageCounts	no	yes
[	no	no
priority	no	yes
]	no	no
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
messageIds	no	yes
[	no	no
priority	no	yes
]	no	no
=	no	no
1l	no	yes
;	no	no
}	no	no
for	no	yes
(	no	no
ProducerThread	no	yes
producer	no	yes
:	no	no
producers	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
/	no	no
2	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dups	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
maxPriority	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no

messageIds	no	yes
[	no	no
priority	no	yes
]	no	no
=	no	no
1l	no	yes
;	no	no
}	no	no
for	no	yes
(	no	no
ProducerThread	no	yes
producer	no	yes
:	no	no
producers	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
int	no	yes
closeFrequency	no	yes
=	no	no
MSG_NUM	no	yes
/	no	no
2	no	no
;	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dups	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MSG_NUM	no	yes
*	no	no
maxPriority	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	no	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
(	no	no
msg	no	yes
!=	no	no
null	no	yes
?	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
:	no	no
null	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
messageCounts	yes	yes
)	no	no
,	no	no
msg	no	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
,	no	no
dups	no	yes
.	no	no
put	no	yes
(	no	no
msg	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
,	no	no
subName	no	yes
)	no	no
)	no	no
;	no	no
messageCounts	yes	yes
[	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
]	no	no
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
msg	no	yes
,	no	no
messageIds	no	yes
[	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
]	no	no
,	no	no
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
msg	no	yes
)	no	no
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageIds	no	yes
[	no	no
msg	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
]	no	no
++	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
closeFrequency	no	yes
==	no	no
0	no	no
)	no	no
{	no	no

TopicSubscriber	no	yes
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
TO_SEND	no	yes
=	no	no
2000	no	no
;	no	no
final	no	yes
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
duplicates	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
[	no	no
]	no	no
dups	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
TO_SEND	no	yes
*	no	no
4	no	no
]	no	no
;	no	no
long	no	yes
start	no	yes
;	no	no
double	no	yes
max	yes	yes
=	no	no
0	no	no
,	no	no
sum	no	yes
=	no	no
0	no	no
;	no	no
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
TO_SEND	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
priority	no	yes
=	no	no
i	no	yes
%	no	no
10	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
i	no	yes
+	no	no
+	no	no
priority	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setJMSPriority	no	yes
(	no	no
priority	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
>	no	no
0	no	no
&&	no	no
i	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

double	no	yes
max	yes	yes
=	no	no
0	no	no
,	no	no
sum	no	yes
=	no	no
0	no	no
;	no	no
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
TO_SEND	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
int	no	yes
priority	no	yes
=	no	no
i	yes	yes
%	no	no
10	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
i	yes	yes
+	no	no
+	no	no
priority	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setJMSPriority	no	yes
(	no	no
priority	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
max	yes	yes
+	no	no
+	no	no
message	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
message	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
long	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
max	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
max	yes	yes
,	no	no
duration	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
duration	no	yes
==	no	no
max	yes	yes
)	no	no
{	no	no

start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
message	yes	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
long	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
max	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
max	no	yes
,	no	no
duration	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
duration	no	yes
==	no	no
max	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
max	no	yes
+	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
message	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sum	no	yes
+=	no	no
duration	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
TO_SEND	no	yes
+	no	no
+	no	no
max	no	yes
)	no	no
;	no	no
double	no	yes
noConsumerAve	no	yes
=	no	no
(	no	no
sum	no	yes
*	no	no
100	no	no
/	no	no
TO_SEND	no	yes
)	no	no
;	no	no
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
count	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
count	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
seqNo	no	yes
=	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
dups	no	yes
[	no	no
seqNo	no	yes
]	no	no
==	no	no
0	no	no
)	no	no
{	no	no
dups	no	yes
[	no	no
seqNo	no	yes
]	no	no
=	no	no
1	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
duplicates	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sum	no	yes
=	no	no
max	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
TO_SEND	no	yes
;	no	no
i	no	yes
<	no	no
(	no	no
TO_SEND	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
priority	no	yes
=	no	no
i	no	yes
%	no	no
10	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
i	no	yes
+	no	no
+	no	no
priority	no	yes
)	no	no
;	no	no

else	no	yes
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
(	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
duplicates	no	yes
.	no	no
add	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sum	no	yes
=	no	no
max	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
TO_SEND	no	yes
;	no	no
i	yes	yes
<	no	no
(	no	no
TO_SEND	no	yes
*	no	no
2	no	no
)	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
int	no	yes
priority	no	yes
=	no	no
i	yes	yes
%	no	no
10	no	no
;	no	no
message	yes	yes
.	no	no
setText	no	yes
(	no	no
i	yes	yes
+	no	no
+	no	no
priority	no	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setJMSPriority	no	yes
(	no	no
priority	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
max	yes	yes
+	no	no
+	no	no
message	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sum	no	yes
=	no	no
max	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
TO_SEND	yes	yes
;	no	no
i	no	yes
<	no	no
(	no	no
TO_SEND	yes	yes
*	no	no
2	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
priority	no	yes
=	no	no
i	no	yes
%	no	no
10	no	no
;	no	no
message	no	yes
.	no	no
setText	no	yes
(	no	no
i	no	yes
+	no	no
+	no	no
priority	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setJMSPriority	no	yes
(	no	no
priority	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
>	no	no
0	no	no
&&	no	no
i	no	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
max	yes	yes
+	no	no
+	no	no
message	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
message	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
long	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

TopicSubscriber	no	yes
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
messageProducer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
Message	no	yes
.	no	no
DEFAULT_PRIORITY	no	yes
,	no	no
4000	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
null	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
messageTableCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no

message	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
messageProducer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
null	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
messageTableCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
waitForAck	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jdbc	no	yes
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
messageTableCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
sub	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no

final	no	yes
ActiveMQQueue	no	yes
queue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
String	no	yes
payLoad	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
16	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
numMessages	no	yes
=	no	no
500	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
payLoad	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
expired	yes	yes
=	no	no
brokerService	no	yes
.	no	no
getDestination	no	yes
(	no	no
queue	no	yes
)	no	no
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getExpired	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
dumpMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
WireFormat	no	yes
wireFormat	no	yes
=	no	no
new	no	yes
OpenWireFormat	no	yes
(	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
conn	no	yes
=	no	no
(	no	no
(	no	no
JDBCPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
statement	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
)	no	no
;	no	no
ResultSet	no	yes
result	no	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
result	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
id	yes	yes
=	no	no
result	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
result	no	yes
.	no	no
getBytes	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
List	no	yes
<	no	no
Message	no	yes
>	no	no
dumpMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
WireFormat	no	yes
wireFormat	no	yes
=	no	no
new	no	yes
OpenWireFormat	no	yes
(	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
conn	no	yes
=	no	no
(	no	no
(	no	no
JDBCPersistenceAdapter	no	yes
)	no	no
service	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
statement	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
)	no	no
;	no	no
ResultSet	no	yes
result	no	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
results	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
result	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
id	yes	yes
=	no	no
result	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
result	no	yes
.	no	no
getBytes	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
)	no	no
;	no	no

protected	no	yes
int	no	yes
receiveMessages	no	yes
(	no	no
int	no	yes
messagesExpected	yes	yes
,	no	no
XASession	no	yes
session	no	yes
,	no	no
boolean	no	yes
onePhase	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
session	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no

protected	no	yes
int	no	yes
receiveMessages	no	yes
(	no	no
int	no	yes
messagesExpected	no	yes
,	no	no
XASession	no	yes
session	no	yes
,	no	no
boolean	no	yes
onePhase	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
session	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
end	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
onePhase	no	yes
)	no	no
{	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	yes	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
end	no	yes
(	no	no
tid	yes	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
onePhase	no	yes
)	no	no
{	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	yes	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	yes	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	yes	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no

resource	no	yes
.	no	no
end	no	yes
(	no	no
tid	yes	yes
,	no	no
XAResource	no	yes
.	no	no
TMSUCCESS	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
onePhase	no	yes
)	no	no
{	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	yes	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	yes	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	yes	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tid	yes	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
rollback	no	yes
(	no	no
tid	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
ex	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
resource	no	yes
.	no	no
prepare	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
commit	no	yes
(	no	no
tid	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
}	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tid	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
rollback	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
ex	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ex	no	yes
+	no	no
+	no	no
tid	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
forget	no	yes
(	no	no
tid	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
XAException	no	yes
ex1	yes	yes
)	no	no
{	no	no

executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
lockerB	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
lockedSet	no	yes
.	no	no
add	no	yes
(	no	no
lockerB	no	yes
)	no	no
;	no	no
printLockTable	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
lockedSet	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
lockerA	no	yes
.	no	no
keepAlive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
,	no	no
lockerB	no	yes
.	no	no
keepAlive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
fakeId	yes	yes
)	no	no
;	no	no
statement	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
jdbc	no	yes
.	no	no
getStatements	no	yes
(	no	no
)	no	no
.	no	no
getLeaseUpdateStatement	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testStatsAndRedispatchAfterAckPreparedClosed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
factory	no	yes
=	no	no
new	no	yes
ActiveMQXAConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
+	no	no
0	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ActiveMQXAConnection	no	yes
activeMQXAConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createXAConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

sendMessages	no	yes
(	no	no
messagesExpected	yes	yes
)	no	no
;	no	no
ActiveMQXAConnection	no	yes
activeMQXAConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createXAConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no

activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
proxy	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
10	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
proxy	no	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
proxy	no	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
10	no	no
,	no	no
proxy	no	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
proxy	no	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sendMessagesTo	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sendMessagesTo	no	yes
(	no	no
10	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
resource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
dumpMessages	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

private	no	yes
boolean	no	yes
consumeOnlyN	no	yes
(	no	no
int	no	yes
expected	no	yes
,	no	no
String	no	yes
clientId	no	yes
,	no	no
String	no	yes
subName	yes	yes
,	no	no
ActiveMQTopic	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
drained	no	yes
=	no	no
0	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
+	no	no
expected	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
subName	yes	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
while	no	yes
(	no	no
(	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
!=	no	no
null	no	yes
)	no	no
{	no	no
drained	no	yes
++	no	no
;	no	no

factory	no	yes
=	no	no
new	no	yes
ActiveMQXAConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
ActiveMQXAConnection	no	yes
activeMQXAConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createXAConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

sendMessages	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ActiveMQXAConnection	no	yes
activeMQXAConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
factory	no	yes
.	no	no
createXAConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
XASession	no	yes
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
xaSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
xaSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
XAResource	no	yes
resource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
Xid	no	yes
tid	no	yes
=	no	no
createXid	no	yes
(	no	no
)	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

ActiveMQXAConnectionFactory	no	yes
activeMQXAConnectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQXAConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
)	no	no
;	no	no
activeMQXAConnectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
activeMQXAConnection	no	yes
=	no	no
(	no	no
ActiveMQXAConnection	no	yes
)	no	no
activeMQXAConnectionFactory	no	yes
.	no	no
createXAConnection	no	yes
(	no	no
)	no	no
;	no	no
activeMQXAConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
xaSession	no	yes
=	no	no
activeMQXAConnection	no	yes
.	no	no
createXASession	no	yes
(	no	no
)	no	no
;	no	no
xaResource	no	yes
=	no	no
xaSession	no	yes
.	no	no
getXAResource	no	yes
(	no	no
)	no	no
;	no	no
xids	no	yes
=	no	no
xaResource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMSTARTRSCAN	no	yes
)	no	no
;	no	no
xaResource	no	yes
.	no	no
recover	no	yes
(	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
xids	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
xaResource	no	yes
.	no	no
rollback	no	yes
(	no	no
xids	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
regularReceiveWith	no	yes
(	no	no
receiveFactory	no	yes
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no

final	no	yes
byte	no	yes
[	no	no
]	no	no
branch2	no	yes
=	no	no
Arrays	no	yes
.	no	no
copyOf	no	yes
(	no	no
branch	no	yes
,	no	no
branch	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
branch2	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
'!'	no	no
;	no	no
Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

final	no	yes
byte	no	yes
[	no	no
]	no	no
branch2	no	yes
=	no	no
Arrays	no	yes
.	no	no
copyOf	no	yes
(	no	no
branch	no	yes
,	no	no
branch	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
branch2	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
'!'	no	no
;	no	no
Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

final	no	yes
byte	no	yes
[	no	no
]	no	no
branch2	no	yes
=	no	no
Arrays	no	yes
.	no	no
copyOf	no	yes
(	no	no
branch	no	yes
,	no	no
branch	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
branch2	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
'!'	no	no
;	no	no
Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

Xid	no	yes
branchTid	no	yes
=	no	no
new	no	yes
Xid	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
int	no	yes
getFormatId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getFormatId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
tid	no	yes
.	no	no
getGlobalTransactionId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
byte	no	yes
[	no	no
]	no	no
getBranchQualifier	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
branch2	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
resource	no	yes
.	no	no
start	no	yes
(	no	no
tid	no	yes
,	no	no
XAResource	no	yes
.	no	no
TMNOFLAGS	no	yes
)	no	no
;	no	no
int	no	yes
messagesReceived	no	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
messagesReceived	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
messagesExpected	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
messagesReceived	no	yes
++	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
sendMessagesWithTo	no	yes
(	no	no
ConnectionFactory	no	yes
factory	no	yes
,	no	no
int	no	yes
messagesExpected	yes	yes
,	no	no
Destination	no	yes
destination	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messagesExpected	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

}	no	no
WireFormat	no	yes
wireFormat	no	yes
=	no	no
new	no	yes
OpenWireFormat	no	yes
(	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
sql	no	yes
.	no	no
Connection	no	yes
conn	no	yes
=	no	no
(	no	no
(	no	no
JDBCPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
PreparedStatement	no	yes
statement	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
)	no	no
;	no	no
ResultSet	no	yes
result	yes	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
result	yes	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
id	no	yes
=	no	no
result	yes	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
message	no	yes
=	no	no
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
command	no	yes
.	no	no
Message	no	yes
)	no	no
wireFormat	no	yes
.	no	no
unmarshal	no	yes
(	no	no
new	no	yes
ByteSequence	no	yes
(	no	no
result	yes	yes
.	no	no
getBytes	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
xid	no	yes
=	no	no
result	yes	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
message	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getBrokerSequenceId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
xid	no	yes
+	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
statement	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
statement	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
statement	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
result	yes	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testDest1Deletion	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dest1	yes	yes
,	no	no
dest2	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testDest2Deletion	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dest1	yes	yes
,	no	no
dest2	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testStoreCleanupDeleteDest1First	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dest1	yes	yes
,	no	no
dest2	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testStoreCleanupDeleteDest2First	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dest1	yes	yes
,	no	no
dest2	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testModifyLockFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
master	no	yes
.	no	no
isStarted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
File	no	yes
lockFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
kahaDataDir	no	yes
,	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
parallelProducer	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
publishMessages	no	yes
(	no	no
sharedCount	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	no	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
publishMessages	no	yes
(	no	no
sharedCount	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	yes	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
duration	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
toSend	no	yes
*	no	no
1000	no	no
/	no	no
duration	no	yes
)	no	no
+	no	no
)	no	no
;	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	no	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
duration	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
toSend	no	yes
*	no	no
1000	no	no
/	no	no
duration	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
totalSent	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
kahaDBPersistenceAdapter	yes	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
kahaDBPersistenceAdapter	yes	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
.	no	no
getDiskSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
publishMessages	no	yes
(	no	no
sharedCount	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	no	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
gc	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
publishMessages	no	yes
(	no	no
sharedCount	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	yes	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
gc	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
duration	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
toSend	no	yes
*	no	no
1000	no	no
/	no	no
duration	no	yes
)	no	no
+	no	no
)	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
executorService	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
executorService	no	yes
.	no	no
isTerminated	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exceptions	no	yes
,	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
totalSent	no	yes
=	no	no
toSend	no	yes
*	no	no
payloadString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
gc	no	yes
(	no	no
)	no	no
;	no	no
double	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
stopBroker	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
duration	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
toSend	no	yes
*	no	no
1000	no	no
/	no	no
duration	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
totalSent	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
kahaDBPersistenceAdapter	yes	yes
.	no	no
getStore	no	yes
(	no	no
)	no	no
.	no	no
getJournal	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIndexDirExists	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
kahaIndexDir	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
kahaDataDir	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
kahaIndexDir	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
index	no	yes
=	no	no
kahaIndexDir	no	yes
.	no	no
list	no	yes
(	no	no
new	no	yes
FilenameFilter	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
accept	no	yes
(	no	no
File	no	yes
dir	no	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testIndexDirExists	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
produceMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
kahaIndexDir	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
kahaDataDir	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
kahaIndexDir	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
destName	no	yes
=	no	no
nameFromDestinationFilter	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
index	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
kahaIndexDir	no	yes
,	no	no
destName	no	yes
)	no	no
.	no	no
list	no	yes
(	no	no
new	no	yes
FilenameFilter	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
accept	no	yes
(	no	no
File	no	yes
dir	no	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
produceMessages	no	yes
(	no	no
queueA	no	yes
,	no	no
20	no	no
)	no	no
;	no	no
done	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BaseDestination	no	yes
baseDestinationA	no	yes
=	no	no
(	no	no
BaseDestination	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
return	no	yes
baseDestinationA	no	yes
!=	no	no
null	no	yes
&&	no	no
baseDestinationA	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getMessages	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
>	no	no
4l	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
BaseDestination	no	yes
baseDestinationA	no	yes
=	no	no
(	no	no
BaseDestination	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
queueA	no	yes
)	no	no
;	no	no
long	no	yes
enqueues	yes	yes
=	no	no
0l	no	yes
;	no	no
do	no	yes
{	no	no
enqueues	yes	yes
=	no	no
baseDestinationA	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
;	no	no

File	no	yes
dataDir	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
useUpSpace	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
useUpSpace	no	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
RandomAccessFile	no	yes
filler	no	yes
=	no	no
new	no	yes
RandomAccessFile	no	yes
(	no	no
useUpSpace	no	yes
,	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
setLength	no	yes
(	no	no
1024	no	no
*	no	no
1024	no	no
*	no	no
1212	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
toDelete	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
)	no	no
;	no	no
filler	no	yes
=	no	no
new	no	yes
RandomAccessFile	no	yes
(	no	no
toDelete	no	yes
,	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
setLength	no	yes
(	no	no
1024	no	no
*	no	no
1024	no	no
*	no	no
32	no	no
*	no	no
10	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
setDataDirectoryFile	no	yes
(	no	no
dataDir	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
AtomicLong	no	yes
consumed	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consume	no	yes
(	no	no
consumed	yes	yes
)	no	no
;	no	no

filler	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
toDelete	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
)	no	no
;	no	no
filler	no	yes
=	no	no
new	no	yes
RandomAccessFile	no	yes
(	no	no
toDelete	no	yes
,	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
setLength	no	yes
(	no	no
1024	no	no
*	no	no
1024	no	no
*	no	no
32	no	no
*	no	no
10	no	no
)	no	no
;	no	no
filler	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
setDataDirectoryFile	no	yes
(	no	no
dataDir	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
AtomicLong	no	yes
consumed	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consume	no	yes
(	no	no
consumed	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumed	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
AtomicLong	no	yes
sent	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	no	yes
)	no	no
{	no	no

}	no	no
broker	no	yes
.	no	no
setDataDirectoryFile	no	yes
(	no	no
dataDir	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
AtomicLong	no	yes
consumed	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
consume	no	yes
(	no	no
consumed	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumed	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
AtomicLong	no	yes
sent	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
read	no	yes
=	no	no
System	no	yes
.	no	no
in	no	yes
.	no	no
read	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
read	no	yes
)	no	no
;	no	no

consume	no	yes
(	no	no
consumed	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumed	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
AtomicLong	no	yes
sent	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
read	no	yes
=	no	no
System	no	yes
.	no	no
in	no	yes
.	no	no
read	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
read	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no

broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
.	no	no
checkpoint	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
AtomicLong	no	yes
sent	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
read	no	yes
=	no	no
System	no	yes
.	no	no
in	no	yes
.	no	no
read	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
read	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no
try	no	yes
{	no	no
produce	no	yes
(	no	no
sent	yes	yes
,	no	no
200	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
createBroker	no	yes
(	no	no
boolean	no	yes
deleteAllMessages	no	yes
,	no	no
boolean	no	yes
recover	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
service	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
service	no	yes
.	no	no
setBrokerName	no	yes
(	no	no
)	no	no
;	no	no
service	no	yes
.	no	no
setDeleteAllMessagesOnStartup	no	yes
(	no	no
deleteAllMessages	no	yes
)	no	no
;	no	no
service	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
KahaDBPersistenceAdapter	no	yes
pa	no	yes
=	no	no
new	no	yes
KahaDBPersistenceAdapter	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
dataFile	no	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
)	no	no
;	no	no
pa	no	yes
.	no	no
setDirectory	no	yes
(	no	no
dataFile	no	yes
)	no	no
;	no	no
pa	no	yes
.	no	no
setJournalMaxFileLength	no	yes
(	no	no
10	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
pa	no	yes
.	no	no
setPreallocationScope	no	yes
(	no	no
Journal	no	yes
.	no	no
PreallocationScope	no	yes
.	no	no
ENTIRE_JOURNAL	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pa	no	yes
.	no	no
setCheckpointInterval	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
pa	no	yes
.	no	no
setCleanupInterval	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
recover	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
File	no	yes
index	yes	yes
:	no	no
FileUtils	no	yes
.	no	no
listFiles	no	yes
(	no	no
dataFile	no	yes
,	no	no
new	no	yes
WildcardFileFilter	no	yes
(	no	no
)	no	no
,	no	no
TrueFileFilter	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
)	no	no
{	no	no

while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
int	no	yes
counter	no	yes
=	no	no
0	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
end	no	yes
=	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
size	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
<	no	no
5000	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
(	no	no
BytesMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
counter	no	yes
++	no	no
;	no	no
consumed	yes	yes
++	no	no
;	no	no
end	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
size	no	yes
+=	no	no
msg	no	yes
.	no	no
getBodyLength	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
counter	no	yes
*	no	no
1000.0	no	no
/	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
)	no	no
+	no	no
+	no	no
+	no	no
(	no	no
1.0	no	no
*	no	no
size	no	yes
/	no	no
(	no	no
1024.0	no	no
*	no	no
1024.0	no	no
)	no	no
)	no	no
*	no	no
(	no	no
(	no	no
1000.0	no	no
/	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
messageSize	no	yes
/	no	no
1024.0	no	no
)	no	no
+	no	no
)	no	no
;	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
stop	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
addShutdownHook	no	yes
(	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
stop	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
int	no	yes
produced	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
!	no	no
stop	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
end	no	yes
=	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
produceCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
end	no	yes
-	no	no
start	no	yes
)	no	no
<	no	no
5000	no	no
&&	no	no
!	no	no
stop	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
BytesMessage	no	yes
bm	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bm	no	yes
.	no	no
writeBytes	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
messageSize	no	yes
]	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
bm	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAddRemoveAddIndexSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
SystemUsage	no	yes
usage	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
;	no	no
usage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
setLimit	no	yes
(	no	no
1024	no	no
*	no	no
150	no	no
)	no	no
;	no	no
String	no	yes
body	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
new	no	yes
Queue	no	yes
(	no	no
brokerService	no	yes
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
new	no	yes
DestinationStatistics	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
=	no	no
new	no	yes
FilePendingMessageCursor	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
setSystemUsage	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pageFile	yes	yes
=	no	no
(	no	no
(	no	no
PListImpl	no	yes
)	no	no
underTest	no	yes
.	no	no
getDiskList	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAddRemoveAddIndexSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
SystemUsage	no	yes
usage	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
;	no	no
usage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
setLimit	no	yes
(	no	no
1024	no	no
*	no	no
150	no	no
)	no	no
;	no	no
String	no	yes
body	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
new	no	yes
Queue	no	yes
(	no	no
brokerService	no	yes
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
new	no	yes
DestinationStatistics	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
=	no	no
new	no	yes
FilePendingMessageCursor	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
setSystemUsage	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pageFile	yes	yes
=	no	no
(	no	no
(	no	no
PListImpl	no	yes
)	no	no
underTest	no	yes
.	no	no
getDiskList	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testAddRemoveAddIndexSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerService	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
brokerService	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
SystemUsage	no	yes
usage	no	yes
=	no	no
brokerService	no	yes
.	no	no
getSystemUsage	no	yes
(	no	no
)	no	no
;	no	no
usage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
setLimit	no	yes
(	no	no
1024	no	no
*	no	no
150	no	no
)	no	no
;	no	no
String	no	yes
body	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
new	no	yes
Queue	no	yes
(	no	no
brokerService	no	yes
,	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
new	no	yes
DestinationStatistics	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
brokerService	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
=	no	no
new	no	yes
FilePendingMessageCursor	no	yes
(	no	no
brokerService	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
setSystemUsage	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
PageFile	no	yes
pageFile	yes	yes
=	no	no
(	no	no
(	no	no
PListImpl	no	yes
)	no	no
underTest	no	yes
.	no	no
getDiskList	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getPageFile	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

mqMessage	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
body	no	yes
)	no	no
;	no	no
mqMessage	no	yes
.	no	no
setMessageId	no	yes
(	no	no
new	no	yes
MessageId	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
mqMessage	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
usage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mqMessage	no	yes
.	no	no
setRegionDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
new	no	yes
IndirectMessageReference	no	yes
(	no	no
mqMessage	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
assertFalse	no	yes
(	no	no
+	no	no
usage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
,	no	no
underTest	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
receivedCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	no	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
ref	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
++	no	no
,	no	no
ref	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

mqMessage	no	yes
.	no	no
setMessageId	no	yes
(	no	no
new	no	yes
MessageId	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
mqMessage	no	yes
.	no	no
setMemoryUsage	no	yes
(	no	no
usage	no	yes
.	no	no
getMemoryUsage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mqMessage	no	yes
.	no	no
setRegionDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
underTest	no	yes
.	no	no
addMessageLast	no	yes
(	no	no
new	no	yes
IndirectMessageReference	no	yes
(	no	no
mqMessage	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
assertFalse	no	yes
(	no	no
+	no	no
usage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
,	no	no
underTest	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
receivedCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	no	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
ref	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
++	no	no
,	no	no
ref	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
assertFalse	no	yes
(	no	no
+	no	no
usage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
,	no	no
underTest	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
receivedCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	no	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
ref	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
++	no	no
,	no	no
ref	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageContentSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
initialPageCount	no	yes
,	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
-	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
destroy	no	yes
(	no	no
)	no	no
;	no	no

assertFalse	no	yes
(	no	no
+	no	no
usage	no	yes
.	no	no
getTempUsage	no	yes
(	no	no
)	no	no
,	no	no
underTest	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
receivedCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	no	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
ref	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
++	no	no
,	no	no
ref	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageContentSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
initialPageCount	no	yes
,	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
-	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
destroy	no	yes
(	no	no
)	no	no
;	no	no

underTest	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
receivedCount	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
underTest	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
MessageReference	no	yes
ref	no	yes
=	no	no
underTest	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
ref	no	yes
.	no	no
decrementReferenceCount	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
++	no	no
,	no	no
ref	no	yes
.	no	no
getMessageId	no	yes
(	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
receivedCount	no	yes
,	no	no
numMessages	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageContentSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
initialPageCount	no	yes
,	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
-	no	no
pageFile	yes	yes
.	no	no
getFreePageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
underTest	no	yes
.	no	no
destroy	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pageFile	yes	yes
.	no	no
getPageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

lists	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
store	no	yes
.	no	no
getPList	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setName	no	yes
(	no	no
threadName	no	yes
)	no	no
;	no	no
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
class	no	yes
A	no	yes
implements	no	yes
Runnable	no	yes
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
threadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
iterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
PList	no	yes
candidate	no	yes
=	no	no
lists	no	yes
[	no	no
i	no	yes
%	no	no
numLists	no	yes
]	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
setName	no	yes
(	no	no
+	no	no
candidate	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
plistLocks	no	yes
(	no	no
candidate	no	yes
)	no	no
)	no	no
{	no	no
Object	no	yes
locator	no	yes
=	no	no
candidate	no	yes
.	no	no
addLast	no	yes
(	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
payload	no	yes
)	no	no
;	no	no
getFirst	no	yes
(	no	no
candidate	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
candidate	no	yes
.	no	no
remove	no	yes
(	no	no
locator	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
sendMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
configureMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertMessageValid	no	yes
(	no	no
int	no	yes
index	no	yes
,	no	no
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
TextMessage	no	yes
textMessage	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
String	no	yes
text	yes	yes
=	no	no
textMessage	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
consumeMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
,	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
messageList	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumeSession	no	yes
=	no	no
createConsumerSession	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumeSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
+	no	no
+	no	no
(	no	no
deliveryMode	no	yes
==	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
assertMessagesReceivedAreValid	no	yes
(	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
receivedMessages	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
super	no	yes
.	no	no
assertMessagesReceivedAreValid	no	yes
(	no	no
receivedMessages	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Message	no	yes
message	no	yes
:	no	no
receivedMessages	no	yes
)	no	no
{	no	no
String	no	yes
userID	yes	yes
=	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
assertMessagesReceivedAreValid2	no	yes
(	no	no
List	no	yes
<	no	no
Message	no	yes
>	no	no
receivedMessages	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
super	no	yes
.	no	no
assertMessagesReceivedAreValid	no	yes
(	no	no
receivedMessages	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
Message	no	yes
message	no	yes
:	no	no
receivedMessages	no	yes
)	no	no
{	no	no
String	no	yes
userID	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
message	no	yes
.	no	no
getObjectProperty	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSpoofedJMSXUserIdIsIgnored	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
configureMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testSpoofedJMSXUserIdIsIgnoredAsObjectProperty	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
createMessage	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
configureMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
message	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	yes	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	yes	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no

sendConnection	no	yes
=	no	no
createSendConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createReceiveConnection	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	yes	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	yes	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
deliveryMode	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
+	no	no
+	no	no
(	no	no
deliveryMode	no	yes
==	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testCreateTemporaryQueueThenCreateAQueueFromItsName	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
tempQueue	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryQueue	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
name	yes	yes
=	no	no
tempQueue	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testCreateTemporaryTopicThenCreateATopicFromItsName	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
tempTopic	no	yes
=	no	no
session	no	yes
.	no	no
createTemporaryTopic	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
name	yes	yes
=	no	no
tempTopic	no	yes
.	no	no
getTopicName	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
protected	no	yes
void	no	yes
assertMessageValid	no	yes
(	no	no
int	no	yes
index	no	yes
,	no	no
Message	no	yes
message	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Object	no	yes
value	no	yes
=	no	no
message	no	yes
.	no	no
getObjectProperty	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
index	no	yes
]	no	no
,	no	no
value	no	yes
)	no	no
;	no	no
Map	no	yes
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
message	no	yes
.	no	no
getObjectProperty	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
map	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Integer	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Long	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
index	no	yes
]	no	no
,	no	no
value	no	yes
)	no	no
;	no	no
Map	no	yes
map	yes	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
message	no	yes
.	no	no
getObjectProperty	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
map	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Integer	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Long	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	yes	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	no	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
list	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertNotNull	no	yes
(	no	no
map	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Integer	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	yes
Long	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
list	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
list	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
map	no	yes
)	no	no
;	no	no
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
message	no	yes
.	no	no
getObjectProperty	no	yes
(	no	no
)	no	no
;	no	no

MapMessage	no	yes
mapMessage	no	yes
=	no	no
(	no	no
MapMessage	no	yes
)	no	no
message	no	yes
;	no	no
Object	no	yes
value	no	yes
=	no	no
mapMessage	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
index	no	yes
]	no	no
,	no	no
value	no	yes
)	no	no
;	no	no
Map	no	yes
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
mapMessage	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
map	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
data	no	yes
[	no	no
index	no	yes
]	no	no
,	no	no
value	no	yes
)	no	no
;	no	no
Map	no	yes
map	yes	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
mapMessage	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
map	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	yes	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	no	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
list	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
list	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertNotNull	no	yes
(	no	no
map	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
23	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
45	no	no
)	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
Map	no	yes
)	no	no
;	no	no
map	no	yes
=	no	no
(	no	no
Map	no	yes
)	no	no
value	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
value	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
value	no	yes
instanceof	no	no
List	no	yes
)	no	no
;	no	no
List	no	yes
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
value	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
list	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
list	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
map	no	yes
)	no	no
;	no	no
list	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
mapMessage	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
uri	yes	yes
=	no	no
getBrokerXml	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
uri	yes	yes
=	no	no
getBrokerXml	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testVerifySessionCloseRedeliveryWithFailoverTransport	no	yes
(	no	no
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
String	no	yes
id	no	yes
=	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testVerifyConsumerAndSessionCloseRedeliveryWithFailoverTransport	no	yes
(	no	no
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
String	no	yes
id	no	yes
=	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testVerifyConsumerCloseSessionRollbackRedeliveryWithFailoverTransport	no	yes
(	no	no
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
String	no	yes
id	no	yes
=	no	no
message	yes	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendWithClientWriteTimeout	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ActiveMQQueue	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
messageTextPrefix	no	yes
=	no	no
initMessagePrefix	no	yes
(	no	no
80	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
URI	no	yes
tcpBrokerUri	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testWriteTimeout	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
messageTextPrefix	no	yes
=	no	no
initMessagePrefix	no	yes
(	no	no
8	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
dest	no	yes
,	no	no
500	no	no
)	no	no
;	no	no
URI	no	yes
tcpBrokerUri	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testWriteTimeoutStompNio	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQQueue	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
messageTextPrefix	no	yes
=	no	no
initMessagePrefix	no	yes
(	no	no
8	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
dest	no	yes
,	no	no
500	no	no
)	no	no
;	no	no
URI	no	yes
stompBrokerUri	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
+	no	no
+	no	no
dest	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
Stomp	no	yes
.	no	no
NULL	no	yes
;	no	no
stompConnection	no	yes
.	no	no
sendFrame	no	yes
(	no	no
frame	no	yes
)	no	no
;	no	no
proxy	no	yes
.	no	no
pause	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
proxy	no	yes
.	no	no
goOn	no	yes
(	no	no
)	no	no
;	no	no
frame	no	yes
=	no	no
stompConnection	no	yes
.	no	no
receiveFrame	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
frame	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
stompConnection	no	yes
.	no	no
send	no	yes
(	no	no
+	no	no
dest	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
,	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
SocketException	no	yes
expected	yes	yes
)	no	no
{	no	no

allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
allowing	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
getObjectInstance	no	yes
(	no	no
with	no	yes
(	no	no
equal	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
atLeast	no	yes
(	no	no
maxReconnects	no	yes
-	no	no
1	no	no
)	no	no
.	no	no
of	no	yes
(	no	no
managementContext	no	yes
)	no	no
.	no	no
registerMBean	no	yes
(	no	no
with	no	yes
(	no	no
any	no	yes
(	no	no
Object	no	yes
.	no	no
class	no	yes
)	no	no
)	no	no
,	no	no
with	no	yes
(	no	no
new	no	yes
NetworkBridgeObjectNameMatcher	no	yes
<	no	no
ObjectName	no	yes
>	no	no
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
+	no	no
proxy	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
will	no	yes
(	no	no
new	no	yes
CustomAction	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
Object	no	yes
invoke	no	yes
(	no	no
Invocation	no	yes
invocation	yes	yes
)	no	no
throws	no	yes
Throwable	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
invocation	yes	yes
.	no	no
getParameter	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
mbeanRegistered	no	yes
.	no	no
release	no	yes
(	no	no
)	no	no
;	no	no
return	no	yes
new	no	yes
ObjectInstance	no	yes
(	no	no
(	no	no
ObjectName	no	yes
)	no	no
invocation	yes	yes
.	no	no
getParameter	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
Thread	no	yes
t	yes	yes
:	no	no
threads	no	yes
)	no	no
{	no	no
existingNames	no	yes
.	no	no
add	no	yes
(	no	no
t	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
int	no	yes
idleThreadCount	no	yes
=	no	no
threads	no	yes
.	no	no
length	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idleThreadCount	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
noConnectionToCreate	no	yes
=	no	no
10	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
group	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
threads	no	yes
=	no	no
getThreads	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Thread	no	yes
t	yes	yes
:	no	no
threads	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
existingNames	no	yes
.	no	no
contains	no	yes
(	no	no
t	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	yes
int	no	yes
tryToFetchMissingMessages	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
)	no	no
)	no	no
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
break	no	yes
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
222	no	no
&&	no	no
!	no	no
restartDone	no	yes
)	no	no
{	no	no
bs	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
bs	no	yes
=	no	no
new	no	yes
BrokerService	no	yes
(	no	no
)	no	no
;	no	no
bs	no	yes
.	no	no
setPersistent	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
bs	no	yes
.	no	no
setUseJmx	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
bs	no	yes
.	no	no
addConnector	no	yes
(	no	no
tcpUri	no	yes
)	no	no
;	no	no
bs	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
restartDone	no	yes
=	no	no
true	no	yes
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
i	no	yes
,	no	no
message	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
PROPERTY_MSG_NUMBER	no	yes
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
TransactionRolledBackException	no	yes
expectedOnOccasion	yes	yes
)	no	no
{	no	no

int	no	yes
total	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQConnection	no	yes
c	no	yes
:	no	no
connections	no	yes
)	no	no
{	no	no
String	no	yes
key	yes	yes
=	no	no
c	no	yes
.	no	no
getTransportChannel	no	yes
(	no	no
)	no	no
.	no	no
getRemoteAddress	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
key	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
total	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
clientConnectionCounts	no	yes
.	no	no
containsKey	no	yes
(	no	no
key	yes	yes
)	no	no
)	no	no
{	no	no
double	no	yes
count	yes	yes
=	no	no
clientConnectionCounts	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
count	yes	yes
+=	no	no
1.0	no	no
;	no	no
clientConnectionCounts	no	yes
.	no	no
put	no	yes
(	no	no
key	yes	yes
,	no	no
count	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
clientConnectionCounts	no	yes
.	no	no
put	no	yes
(	no	no
key	yes	yes
,	no	no
1.0	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
keys	no	yes
=	no	no
clientConnectionCounts	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
key	yes	yes
:	no	no
keys	no	yes
)	no	no
{	no	no
double	no	yes
count	yes	yes
=	no	no
clientConnectionCounts	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
double	no	yes
percentage	yes	yes
=	no	no
count	yes	yes
/	no	no
total	yes	yes
;	no	no

addNetworkBridge	no	yes
(	no	no
getBroker	no	yes
(	no	no
BROKER_A_NAME	no	yes
)	no	no
,	no	no
,	no	no
+	no	no
BROKER_B_CLIENT_TC_ADDRESS	no	yes
+	no	no
,	no	no
false	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
getBroker	no	yes
(	no	no
BROKER_A_NAME	no	yes
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
addBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
,	no	no
createBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
)	no	no
)	no	no
;	no	no
TransportConnector	no	yes
connectorB	no	yes
=	no	no
getBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
)	no	no
.	no	no
addConnector	no	yes
(	no	no
BROKER_B_CLIENT_TC_ADDRESS	no	yes
)	no	no
;	no	no
connectorB	no	yes
.	no	no
setName	no	yes
(	no	no
)	no	no
;	no	no
connectorB	no	yes
.	no	no
setRebalanceClusterClients	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connectorB	no	yes
.	no	no
setUpdateClusterClients	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connectorB	no	yes
.	no	no
setUpdateClusterClientsOnRemove	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
addNetworkBridge	no	yes
(	no	no
getBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
)	no	no
,	no	no
,	no	no
+	no	no
BROKER_A_CLIENT_TC_ADDRESS	yes	yes
+	no	no
,	no	no
false	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
getBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
getBroker	no	yes
(	no	no
BROKER_B_NAME	no	yes
)	no	no
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
setClientUrl	no	yes
(	no	no
+	no	no
BROKER_A_CLIENT_TC_ADDRESS	yes	yes
+	no	no
)	no	no
;	no	no
createClients	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Test	no	yes
public	no	yes
void	no	yes
testFailoverClientAckMissingRedelivery	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
maxConsumers	no	yes
=	no	no
2	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
consumerCount	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
Subscription	no	yes
addConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
++	no	no
consumerCount	no	yes
==	no	no
maxConsumers	no	yes
)	no	no
{	no	no
context	no	yes
.	no	no
setDontSendReponse	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
return	no	yes
super	no	yes
.	no	no
addConsumer	no	yes
(	no	no
context	no	yes
,	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
url	no	yes
+	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
Queue	no	yes
destination	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
+	no	no
+	no	no
prefetch	no	yes
)	no	no
;	no	no
final	no	yes
Vector	no	yes
<	no	no
TestConsumer	no	yes
>	no	no
testConsumers	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
TestConsumer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
TestConsumer	no	yes
testConsumer	no	yes
=	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
consumerSession	no	yes
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
testConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no

ActiveMQConnectionFactory	no	yes
cf	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
url	no	yes
+	no	no
)	no	no
;	no	no
cf	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
Queue	no	yes
destination	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
QUEUE_NAME	no	yes
+	no	no
+	no	no
prefetch	no	yes
)	no	no
;	no	no
final	no	yes
Vector	no	yes
<	no	no
TestConsumer	no	yes
>	no	no
testConsumers	no	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
TestConsumer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
TestConsumer	no	yes
testConsumer	yes	yes
=	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
consumerSession	no	yes
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
testConsumer	yes	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no

)	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
shutdownConsumerAdded	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TestConsumer	no	yes
testConsumer	yes	yes
=	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
consumerSession	no	yes
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
;	no	no
testConsumer	yes	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
testConsumers	no	yes
.	no	no
add	no	yes
(	no	no
testConsumer	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
testConsumers	no	yes
.	no	no
add	no	yes
(	no	no
testConsumer	yes	yes
)	no	no
;	no	no
shutdownConsumerAdded	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
,	no	no
this	no	yes
.	no	no
url	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
doTestFailoverConsumerDups	no	yes
(	no	no
final	no	yes
boolean	no	yes
watchTopicAdvisories	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
maxConsumers	no	yes
=	no	no
4	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
consumerCount	no	yes
;	no	no
@	no	no
Override	no	yes
public	no	yes
Subscription	no	yes
addConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
++	no	no
consumerCount	no	yes
==	no	no
maxConsumers	no	yes
+	no	no
(	no	no
watchTopicAdvisories	no	yes
?	no	no
1	no	no
:	no	no
0	no	no
)	no	no
)	no	no
{	no	no
context	no	yes
.	no	no
setDontSendReponse	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
TestConsumer	no	yes
testConsumer	yes	yes
:	no	no
testConsumers	no	yes
)	no	no
{	no	no
long	no	yes
unconsumed	yes	yes
=	no	no
testConsumer	yes	yes
.	no	no
unconsumedSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testConsumer	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
unconsumed	yes	yes
)	no	no
;	no	no
totalUnconsumed	no	yes
+=	no	no
unconsumed	yes	yes
;	no	no
}	no	no
return	no	yes
totalUnconsumed	no	yes
==	no	no
(	no	no
maxConsumers	no	yes
-	no	no
1	no	no
)	no	no
*	no	no
prefetch	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
shutdownConsumerAdded	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
testConsumers	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
consumerSession	no	yes
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
)	no	no
;	no	no
shutdownConsumerAdded	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no

try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
testConsumers	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
TestConsumer	no	yes
(	no	no
consumerSession	no	yes
,	no	no
destination	no	yes
,	no	no
connection	no	yes
)	no	no
)	no	no
;	no	no
shutdownConsumerAdded	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
totalUnconsumed	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
TestConsumer	no	yes
testConsumer	yes	yes
:	no	no
testConsumers	no	yes
)	no	no
{	no	no
long	no	yes
unconsumed	yes	yes
=	no	no
testConsumer	yes	yes
.	no	no
unconsumedSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testConsumer	yes	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
unconsumed	yes	yes
)	no	no
;	no	no

@	no	no
org	no	yes
.	no	no
junit	no	yes
.	no	no
Test	no	yes
public	no	yes
void	no	yes
testFailoverCommit	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicInteger	no	yes
dispatchedCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
errorAt	no	yes
=	no	no
FailType	no	yes
.	no	no
ON_COMMIT	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
?	no	no
1	no	no
:	no	no
9	no	no
;	no	no
final	no	yes
int	no	yes
messageCount	no	yes
=	no	no
10	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
commitTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	no	yes
,	no	no
boolean	no	yes
onePhase	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
FailType	no	yes
.	no	no
ON_COMMIT	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
&&	no	no
dispatchedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
errorAt	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

final	no	yes
AtomicInteger	no	yes
dispatchedCount	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
errorAt	no	yes
=	no	no
FailType	no	yes
.	no	no
ON_COMMIT	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
?	no	no
1	no	no
:	no	no
9	no	no
;	no	no
final	no	yes
int	no	yes
messageCount	no	yes
=	no	no
10	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
commitTransaction	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
TransactionId	no	yes
xid	no	yes
,	no	no
boolean	no	yes
onePhase	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
FailType	no	yes
.	no	no
ON_COMMIT	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
&&	no	no
dispatchedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
errorAt	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
transportConnection	yes	yes
)	no	no
;	no	no
transportConnection	yes	yes
.	no	no
serviceException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
super	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
context	no	yes
,	no	no
xid	no	yes
,	no	no
onePhase	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
acknowledge	no	yes
(	no	no
ConsumerBrokerExchange	no	yes
consumerExchange	no	yes
,	no	no
MessageAck	no	yes
ack	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
FailType	no	yes
.	no	no
ON_ACK	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
&&	no	no
ack	no	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
==	no	no
MessageAck	no	yes
.	no	no
DELIVERED_ACK_TYPE	no	yes
&&	no	no
dispatchedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
errorAt	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
transportConnection	yes	yes
)	no	no
;	no	no
transportConnection	yes	yes
.	no	no
serviceException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
super	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
context	no	yes
,	no	no
xid	no	yes
,	no	no
onePhase	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
acknowledge	no	yes
(	no	no
ConsumerBrokerExchange	no	yes
consumerExchange	no	yes
,	no	no
MessageAck	no	yes
ack	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
FailType	no	yes
.	no	no
ON_ACK	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
&&	no	no
ack	no	yes
.	no	no
getAckType	no	yes
(	no	no
)	no	no
==	no	no
MessageAck	no	yes
.	no	no
DELIVERED_ACK_TYPE	no	yes
&&	no	no
dispatchedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
errorAt	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
transportConnection	yes	yes
)	no	no
;	no	no
transportConnection	yes	yes
.	no	no
serviceException	no	yes
(	no	no
new	no	yes
IOException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
super	no	yes
.	no	no
acknowledge	no	yes
(	no	no
consumerExchange	no	yes
,	no	no
ack	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
postProcessDispatch	no	yes
(	no	no
MessageDispatch	no	yes
messageDispatch	no	yes
)	no	no
{	no	no
super	no	yes
.	no	no
postProcessDispatch	no	yes
(	no	no
messageDispatch	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
FailType	no	yes
.	no	no
ON_DISPATCH	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
||	no	no
FailType	no	yes
.	no	no
ON_DISPACH_WITH_REPLAY_DELAY	no	yes
.	no	no
equals	no	yes
(	no	no
failType	no	yes
)	no	no
)	no	no
&&	no	no
dispatchedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
==	no	no
errorAt	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
TransportConnection	no	yes
transportConnection	yes	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Test	no	yes
public	no	yes
void	no	yes
testPrefetchZeroConsumerThroughRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
pullDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
Response	no	yes
messagePull	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
MessagePull	no	yes
pull	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
context	no	yes
.	no	no
setDontSendReponse	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
pullDone	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

private	no	yes
void	no	yes
restart	no	yes
(	no	no
boolean	no	yes
primary	no	yes
,	no	no
String	no	yes
primaryName	yes	yes
,	no	no
String	no	yes
secondaryName	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
primaryName	yes	yes
)	no	no
;	no	no
stopBroker	no	yes
(	no	no
primaryName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secondaryName	no	yes
)	no	no
;	no	no
stopBroker	no	yes
(	no	no
secondaryName	no	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no
assertAllConnectedTo	no	yes
(	no	no
urls	no	yes
.	no	no
get	no	yes
(	no	no
secondaryName	no	yes
)	no	no
)	no	no
;	no	no
assertBrokerInfo	no	yes
(	no	no
secondaryName	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
assertAllConnectedTo	no	yes
(	no	no
urls	no	yes
.	no	no
get	no	yes
(	no	no
primaryName	yes	yes
)	no	no
)	no	no
;	no	no
assertBrokerInfo	no	yes
(	no	no
primaryName	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no

}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
secondaryName	yes	yes
)	no	no
;	no	no
stopBroker	no	yes
(	no	no
secondaryName	yes	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no
assertAllConnectedTo	no	yes
(	no	no
urls	no	yes
.	no	no
get	no	yes
(	no	no
secondaryName	yes	yes
)	no	no
)	no	no
;	no	no
assertBrokerInfo	no	yes
(	no	no
secondaryName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
assertAllConnectedTo	no	yes
(	no	no
urls	no	yes
.	no	no
get	no	yes
(	no	no
primaryName	no	yes
)	no	no
)	no	no
;	no	no
assertBrokerInfo	no	yes
(	no	no
primaryName	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
primary	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
primaryName	no	yes
)	no	no
;	no	no
createBrokerByName	no	yes
(	no	no
primaryName	no	yes
)	no	no
;	no	no
getBroker	no	yes
(	no	no
primaryName	no	yes
)	no	no
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
void	no	yes
testBlockedFailoverSendWillReactToReadInactivityTimeout	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ActiveMQQueue	no	yes
dest	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
;	no	no
messageTextPrefix	no	yes
=	no	no
initMessagePrefix	no	yes
(	no	no
80	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
URI	no	yes
tcpBrokerUri	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tcpBrokerUri	no	yes
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
tcpBrokerUri	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
SocketProxy	no	yes
proxy	no	yes
=	no	no
new	no	yes
SocketProxy	no	yes
(	no	no
)	no	no
;	no	no
proxy	no	yes
.	no	no
setTarget	no	yes
(	no	no
tcpBrokerUri	no	yes
)	no	no
;	no	no
proxy	no	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
pFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
proxy	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
final	no	yes
ActiveMQConnection	no	yes
pc	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
pFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
interruptCounter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
pc	no	yes
.	no	no
addTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

interruptCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
transportResumed	no	yes
(	no	no
)	no	no
{	no	no
}	no	no
}	no	no
)	no	no
;	no	no
pc	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
messageCount	yes	yes
=	no	no
200	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
sentOne	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
executorService	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
pc	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
messageTextPrefix	no	yes
+	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
sentOne	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
,	no	no
url	no	yes
)	no	no
;	no	no
setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
commitDoneLatch	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
DestinationPathSeparatorBroker	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
commitDoneLatch	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
,	no	no
url	no	yes
)	no	no
;	no	no

setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
sendDoneLatch	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
proxy	no	yes
.	no	no
waitUntilClosed	no	yes
(	no	no
30	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
proxy	no	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
sendDoneLatch	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
(	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testFailoverConsumerAckLost	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
3	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
doTestFailoverConsumerAckLost	no	yes
(	no	no
final	no	yes
int	no	yes
pauseSeconds	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
acknowledge	no	yes
(	no	no
ConsumerBrokerExchange	no	yes
consumerExchange	no	yes
,	no	no
final	no	yes
MessageAck	no	yes
ack	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
consumerExchange	no	yes
.	no	no
getConnectionContext	no	yes
(	no	no
)	no	no
.	no	no
setDontSendReponse	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

final	no	yes
Session	no	yes
consumerSession2	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
consumerSession1	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
consumerSession2	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
producerSession	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
producerSession	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
receivedMessages	yes	yes
=	no	no
new	no	yes
Vector	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
commitDoneLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
gotTransactionRolledBackException	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer1	no	yes
.	no	no
receive	no	yes
(	no	no
20000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
receivedMessages	yes	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
random	no	yes
.	no	no
nextInt	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
=	no	no
consumer1	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
receivedMessages	yes	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedMessages	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
consumerSession1	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
TransactionRolledBackException	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
expected	no	yes
)	no	no
;	no	no
gotTransactionRolledBackException	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
commitDoneLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
receivedMessages	no	yes
.	no	no
add	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
consumerSession1	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
TransactionRolledBackException	no	yes
expected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
expected	no	yes
)	no	no
;	no	no
gotTransactionRolledBackException	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
commitDoneLatch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
false	no	yes
,	no	no
url	no	yes
)	no	no
;	no	no

setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
commitDoneLatch	no	yes
.	no	no
await	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedMessages	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer1	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
consumerSession1	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
msg	yes	yes
=	no	no
consumer2	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
consumerSession2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
Connection	no	yes
c	no	yes
:	no	no
connections	no	yes
)	no	no
{	no	no
c	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testPoolingNConsumesAfterReconnect	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
setDefaultPersistenceAdapter	no	yes
(	no	no
broker	no	yes
)	no	no
;	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPluginSupport	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
removeConsumer	no	yes
(	no	no
ConnectionContext	no	yes
context	no	yes
,	no	no
final	no	yes
ConsumerInfo	no	yes
info	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
count	no	yes
++	no	no
==	no	no
1	no	no
)	no	no
{	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no

connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connections	no	yes
.	no	no
add	no	yes
(	no	no
connection	no	yes
)	no	no
;	no	no
final	no	yes
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
sessionCount	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
Stack	no	yes
<	no	no
Session	no	yes
>	no	no
sessions	no	yes
=	no	no
new	no	yes
Stack	no	yes
<	no	no
Session	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
sessionCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sessions	no	yes
.	no	no
push	no	yes
(	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
int	no	yes
consumerCount	no	yes
=	no	no
1000	no	no
;	no	no
final	no	yes
Deque	no	yes
<	no	no
MessageConsumer	no	yes
>	no	no
consumers	no	yes
=	no	no
new	no	yes
ArrayDeque	no	yes
<	no	no
MessageConsumer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
consumerCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumers	no	yes
.	no	no
push	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
final	no	yes
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
FailoverTransport	no	yes
failoverTransport	yes	yes
=	no	no
(	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connection	no	yes
)	no	no
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
FailoverTransport	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBackupsAreCreated	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
this	no	yes
.	no	no
transport	no	yes
=	no	no
createTransport	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
failoverTransport	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
failoverTransport	yes	yes
.	no	no
isBackup	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
failoverTransport	yes	yes
.	no	no
getBackupPoolSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testFailoverToBackups	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
this	no	yes
.	no	no
transport	no	yes
=	no	no
createTransport	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
failoverTransport	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
failoverTransport	yes	yes
.	no	no
isBackup	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
failoverTransport	yes	yes
.	no	no
getBackupPoolSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

return	no	yes
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
currentBrokerInfo	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
transportInterruptions	no	yes
>=	no	no
1	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
transportResumptions	no	yes
>=	no	no
1	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
currentBrokerInfo	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
broker2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testBackupsRefilled	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
this	no	yes
.	no	no
transport	no	yes
=	no	no
createTransport	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
failoverTransport	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
failoverTransport	yes	yes
.	no	no
isBackup	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
failoverTransport	yes	yes
.	no	no
getBackupPoolSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

assertEquals	no	yes
(	no	no
1	no	no
,	no	no
failoverTransport	yes	yes
.	no	no
getBackupPoolSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
broker1	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
failoverTransport	yes	yes
.	no	no
getCurrentBackups	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
broker2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

protected	no	yes
Transport	no	yes
createTransport	no	yes
(	no	no
int	no	yes
backups	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
connectionUri	no	yes
=	no	no
+	no	no
broker1	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
broker2	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
broker3	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
if	no	yes
(	no	no
backups	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
connectionUri	no	yes
+=	no	no
+	no	no
backups	no	yes
;	no	no
}	no	no
Transport	no	yes
transport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
connect	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
connectionUri	no	yes
)	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
command	no	yes
instanceof	no	no
BrokerInfo	no	yes
)	no	no
{	no	no
currentBrokerInfo	no	yes
=	no	no
(	no	no
BrokerInfo	no	yes
)	no	no
command	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentBrokerInfo	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
transportInterupted	no	yes
(	no	no
)	no	no
{	no	no
transportInterruptions	yes	yes
++	no	no
;	no	no

connectionUri	no	yes
+=	no	no
+	no	no
backups	no	yes
;	no	no
}	no	no
Transport	no	yes
transport	no	yes
=	no	no
TransportFactory	no	yes
.	no	no
connect	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
connectionUri	no	yes
)	no	no
)	no	no
;	no	no
transport	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
command	no	yes
instanceof	no	no
BrokerInfo	no	yes
)	no	no
{	no	no
currentBrokerInfo	no	yes
=	no	no
(	no	no
BrokerInfo	no	yes
)	no	no
command	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentBrokerInfo	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
transportInterupted	no	yes
(	no	no
)	no	no
{	no	no
transportInterruptions	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
transportInterruptions	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
transportResumed	no	yes
(	no	no
)	no	no
{	no	no
transportResumptions	yes	yes
++	no	no
;	no	no

public	no	yes
void	no	yes
testNoBrokersInBrokerInfo	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerInfo	no	yes
info	no	yes
[	no	no
]	no	no
=	no	no
new	no	yes
BrokerInfo	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
TransportListener	no	yes
listener	no	yes
=	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testUpdateURIsViaFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
targetDir	no	yes
=	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
)	no	no
.	no	no
mkdir	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
updateFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
+	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testUpdateURIsViaFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
targetDir	no	yes
=	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
)	no	no
.	no	no
mkdir	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
updateFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
updateFile	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testUpdateURIsViaFile	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
targetDir	no	yes
=	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
)	no	no
.	no	no
mkdir	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
updateFile	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
targetDir	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
updateFile	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
updateFile	yes	yes
.	no	no
toURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testReconnects	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
k	yes	yes
=	no	no
1	no	no
;	no	no
k	yes	yes
<	no	no
10	no	no
;	no	no
k	yes	yes
++	no	no
)	no	no
{	no	no

ConnectionInfo	no	yes
connectionInfo3	no	yes
=	no	no
createConnectionInfo	no	yes
(	no	no
)	no	no
;	no	no
SessionInfo	no	yes
sessionInfo3	no	yes
=	no	no
createSessionInfo	no	yes
(	no	no
connectionInfo3	no	yes
)	no	no
;	no	no
final	no	yes
ProducerInfo	no	yes
producerInfo3	no	yes
=	no	no
createProducerInfo	no	yes
(	no	no
sessionInfo3	no	yes
)	no	no
;	no	no
connection3	no	yes
.	no	no
send	no	yes
(	no	no
connectionInfo3	no	yes
)	no	no
;	no	no
connection3	no	yes
.	no	no
send	no	yes
(	no	no
sessionInfo3	no	yes
)	no	no
;	no	no
connection3	no	yes
.	no	no
send	no	yes
(	no	no
producerInfo3	no	yes
)	no	no
;	no	no
connection3	no	yes
.	no	no
request	no	yes
(	no	no
createMessage	no	yes
(	no	no
producerInfo3	no	yes
,	no	no
destination	no	yes
,	no	no
deliveryMode	no	yes
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
receiveMessage	no	yes
(	no	no
connection1	no	yes
)	no	no
)	no	no
;	no	no
assertNoMessagesLeft	no	yes
(	no	no
connection1	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
receiveMessage	no	yes
(	no	no
connection2	no	yes
)	no	no
)	no	no
;	no	no
assertNoMessagesLeft	no	yes
(	no	no
connection2	no	yes
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
publishDone	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
MockTransport	no	yes
mt	no	yes
=	no	no
(	no	no
MockTransport	no	yes
)	no	no
connection3	no	yes
.	no	no
getTransport	no	yes
(	no	no
)	no	no
.	no	no
narrow	no	yes
(	no	no
MockTransport	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
mt	no	yes
.	no	no
install	no	yes
(	no	no
new	no	yes
TransportFilter	no	yes
(	no	no
mt	no	yes
.	no	no
getNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
oneway	no	yes
(	no	no
Object	no	yes
command	yes	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no

public	no	yes
void	no	yes
testAsyncSendPFCExistingConnection	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
,	no	no
,	no	no
TRANSPORT_URL	no	yes
+	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
exisitngConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
NUMBER_OF_PRODUCERS	no	yes
)	no	no
;	no	no
QueueView	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
broker	no	yes
,	no	no
DESTINATION_ONE	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUMBER_OF_PRODUCERS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
executorService	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
ProducerTask	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
waitForProducerFlowControl	no	yes
(	no	no
broker	no	yes
,	no	no
queueView	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
getProducerView	no	yes
(	no	no
broker	no	yes
,	no	no
DESTINATION_ONE	no	yes
)	no	no
.	no	no
isProducerBlocked	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
exisitngConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
waitForProducerFlowControl	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
,	no	no
QueueView	no	yes
queueView	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
boolean	no	yes
blockingAllSends	no	yes
;	no	no
do	no	yes
{	no	no
blockingAllSends	no	yes
=	no	no
queueView	yes	yes
.	no	no
getBlockedSends	no	yes
(	no	no
)	no	no
>=	no	no
10	no	no
;	no	no

connection	no	yes
.	no	no
setUseAsyncSend	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
connection	no	yes
.	no	no
setUseAsyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
createTextMessage	no	yes
(	no	no
producerSession	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
numberOfMessageSent	no	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
expected	yes	yes
)	no	no
{	no	no

private	no	yes
ProducerViewMBean	no	yes
getProducerView	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
,	no	no
String	no	yes
qName	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ObjectName	no	yes
[	no	no
]	no	no
qProducers	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueueProducers	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
name	no	yes
:	no	no
qProducers	no	yes
)	no	no
{	no	no
ProducerViewMBean	no	yes
proxy	yes	yes
=	no	no
(	no	no
ProducerViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
name	no	yes
,	no	no
ProducerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

final	no	yes
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
+	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
threadNumber	no	yes
=	no	no
500	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
threadNumber	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
errors	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
final	no	yes
Random	no	yes
rand	no	yes
=	no	no
new	no	yes
Random	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
threadNumber	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
thread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
100	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
int	no	yes
sleepTime	yes	yes
=	no	no
rand	no	yes
.	no	no
nextInt	no	yes
(	no	no
(	no	no
3000	no	no
-	no	no
1000	no	no
)	no	no
+	no	no
1	no	no
)	no	no
+	no	no
1000	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
sleepTime	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepTime	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
errors	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
thread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testValidWrapAroundPackets	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
[	no	no
]	no	no
sequenceNumbers	no	yes
=	no	no
new	no	yes
int	no	yes
[	no	no
10	no	no
]	no	no
;	no	no
int	no	yes
value	yes	yes
=	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
-	no	no
3	no	no
;	no	no
transport	no	yes
.	no	no
setExpectedCounter	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

info	no	yes
.	no	no
setSelector	no	yes
(	no	no
+	no	no
commandId	no	yes
)	no	no
;	no	no
info	no	yes
.	no	no
setCommandId	no	yes
(	no	no
commandId	no	yes
)	no	no
;	no	no
transport	no	yes
.	no	no
onCommand	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
Queue	no	yes
exceptions	no	yes
=	no	no
listener	no	yes
.	no	no
getExceptions	no	yes
(	no	no
)	no	no
;	no	no
Queue	no	yes
commands	no	yes
=	no	no
listener	no	yes
.	no	no
getCommands	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
expected	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
exceptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Exception	no	yes
e	yes	yes
=	no	no
(	no	no
Exception	no	yes
)	no	no
exceptions	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
e	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
expectedCount	no	yes
,	no	no
commands	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
transport	no	yes
.	no	no
getBufferedCommandCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
exceptions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
Exception	no	yes
e	yes	yes
=	no	no
(	no	no
Exception	no	yes
)	no	no
exceptions	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
sendWriteBuffer	no	yes
(	no	no
int	no	yes
commandId	yes	yes
,	no	no
SocketAddress	no	yes
address	no	yes
,	no	no
ByteBuffer	no	yes
writeBuffer	no	yes
,	no	no
boolean	no	yes
redelivery	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
dropCommandStrategy	no	yes
.	no	no
shouldDropCommand	no	yes
(	no	no
commandId	yes	yes
,	no	no
address	no	yes
,	no	no
redelivery	no	yes
)	no	no
)	no	no
{	no	no
writeBuffer	no	yes
.	no	no
flip	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
void	no	yes
sendWriteBuffer	no	yes
(	no	no
int	no	yes
commandId	yes	yes
,	no	no
SocketAddress	no	yes
address	no	yes
,	no	no
byte	no	yes
[	no	no
]	no	no
data	no	yes
,	no	no
boolean	no	yes
redelivery	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
if	no	yes
(	no	no
dropCommandStrategy	no	yes
.	no	no
shouldDropCommand	no	yes
(	no	no
commandId	yes	yes
,	no	no
address	no	yes
,	no	no
redelivery	no	yes
)	no	no
)	no	no
{	no	no

private	no	yes
boolean	no	yes
verifySslCredentials	no	yes
(	no	no
BrokerService	no	yes
broker	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	yes	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
URI	no	yes
brokerUri	yes	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
;	no	no
SSLContext	no	yes
context	no	yes
=	no	no
SSLContext	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
CertChainCatcher	no	yes
catcher	no	yes
=	no	no
new	no	yes
CertChainCatcher	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
init	no	yes
(	no	no
null	no	yes
,	no	no
new	no	yes
TrustManager	no	yes
[	no	no
]	no	no
{	no	no
catcher	no	yes
}	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
SSLSocketFactory	no	yes
factory	no	yes
=	no	no
context	no	yes
.	no	no
getSocketFactory	no	yes
(	no	no
)	no	no
;	no	no

TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
URI	no	yes
brokerUri	no	yes
=	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
;	no	no
SSLContext	no	yes
context	no	yes
=	no	no
SSLContext	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
CertChainCatcher	no	yes
catcher	no	yes
=	no	no
new	no	yes
CertChainCatcher	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
init	no	yes
(	no	no
null	no	yes
,	no	no
new	no	yes
TrustManager	no	yes
[	no	no
]	no	no
{	no	no
catcher	no	yes
}	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
SSLSocketFactory	no	yes
factory	no	yes
=	no	no
context	no	yes
.	no	no
getSocketFactory	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
brokerUri	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
brokerUri	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SSLSocket	no	yes
socket	no	yes
=	no	no
(	no	no
SSLSocket	no	yes
)	no	no
factory	no	yes
.	no	no
createSocket	no	yes
(	no	no
brokerUri	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
brokerUri	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
socket	no	yes
.	no	no
setSoTimeout	no	yes
(	no	no
2	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
socket	no	yes
.	no	no
startHandshake	no	yes
(	no	no
)	no	no
;	no	no
socket	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
matches	no	yes
=	no	no
false	no	yes
;	no	no
if	no	yes
(	no	no
catcher	no	yes
.	no	no
serverCerts	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
catcher	no	yes
.	no	no
serverCerts	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
X509Certificate	no	yes
cert	yes	yes
=	no	no
catcher	no	yes
.	no	no
serverCerts	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
options	no	yes
=	no	no
new	no	yes
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
5	no	no
;	no	no
++	no	no
j	no	yes
)	no	no
{	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
=	no	no
getMthNaryDigit	no	yes
(	no	no
i	yes	yes
,	no	no
j	no	yes
,	no	no
3	no	no
)	no	no
-	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
=	no	no
0	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
options	no	yes
.	no	no
put	no	yes
(	no	no
optionNames	no	yes
[	no	no
j	no	yes
]	no	no
,	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
1	no	no
?	no	no
:	no	no
)	no	no
;	no	no
}	no	no
}	no	no
StubSSLSocket	no	yes
socketStub	no	yes
=	no	no
new	no	yes
StubSSLSocket	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
StubSslTransport	no	yes
transport	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
transport	no	yes
=	no	no
new	no	yes
StubSslTransport	no	yes
(	no	no
null	no	yes
,	no	no
socketStub	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
5	no	no
;	no	no
++	no	no
j	no	yes
)	no	no
{	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
=	no	no
getMthNaryDigit	no	yes
(	no	no
i	no	yes
,	no	no
j	no	yes
,	no	no
3	no	no
)	no	no
-	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
=	no	no
0	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
options	yes	yes
.	no	no
put	no	yes
(	no	no
optionNames	no	yes
[	no	no
j	no	yes
]	no	no
,	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
1	no	no
?	no	no
:	no	no
)	no	no
;	no	no
}	no	no
}	no	no
StubSSLSocket	no	yes
socketStub	no	yes
=	no	no
new	no	yes
StubSSLSocket	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
StubSslTransport	no	yes
transport	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
transport	no	yes
=	no	no
new	no	yes
StubSslTransport	no	yes
(	no	no
null	no	yes
,	no	no
socketStub	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
=	no	no
0	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
options	no	yes
.	no	no
put	no	yes
(	no	no
optionNames	no	yes
[	no	no
j	no	yes
]	no	no
,	no	no
optionSettings	no	yes
[	no	no
j	no	yes
]	no	no
==	no	no
1	no	no
?	no	no
:	no	no
)	no	no
;	no	no
}	no	no
}	no	no
StubSSLSocket	no	yes
socketStub	no	yes
=	no	no
new	no	yes
StubSSLSocket	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
StubSslTransport	no	yes
transport	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
transport	no	yes
=	no	no
new	no	yes
StubSslTransport	no	yes
(	no	no
null	no	yes
,	no	no
socketStub	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
options	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
x	yes	yes
=	no	no
0	no	no
;	no	no
x	yes	yes
<	no	no
optionSettings	no	yes
.	no	no
length	no	yes
;	no	no
x	yes	yes
++	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
TransportConnector	no	yes
transportConnector	no	yes
:	no	no
brokerService	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
URI	no	yes
uri	no	yes
=	no	no
transportConnector	no	yes
.	no	no
getPublishableConnectURI	no	yes
(	no	no
)	no	no
;	no	no
Socket	no	yes
socket	yes	yes
;	no	no
if	no	yes
(	no	no
uri	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
SSLSocket	no	yes
sslSocket	no	yes
=	no	no
(	no	no
SSLSocket	no	yes
)	no	no
SSLSocketFactory	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
createSocket	no	yes
(	no	no
,	no	no
uri	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
doneHandShake	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
sslSocket	no	yes
.	no	no
addHandshakeCompletedListener	no	yes
(	no	no
new	no	yes
HandshakeCompletedListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
handshakeCompleted	no	yes
(	no	no
HandshakeCompletedEvent	no	yes
handshakeCompletedEvent	no	yes
)	no	no
{	no	no
doneHandShake	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sslSocket	no	yes
.	no	no
startHandshake	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
doneHandShake	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
socket	yes	yes
=	no	no
sslSocket	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
socket	yes	yes
=	no	no
new	no	yes
Socket	no	yes
(	no	no
,	no	no
uri	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

sslSocket	yes	yes
.	no	no
startHandshake	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
sslSocket	yes	yes
.	no	no
isConnected	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
IOException	no	yes
oops	no	yes
)	no	no
{	no	no
oops	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
inactivityMonitorFired	no	yes
.	no	no
await	no	yes
(	no	no
10	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
=	no	no
new	no	yes
Thread	no	yes
[	no	no
20	no	no
]	no	no
;	no	no
int	no	yes
activeCount	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getThreadGroup	no	yes
(	no	no
)	no	no
.	no	no
enumerate	no	yes
(	no	no
threads	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
activeCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
thread	no	yes
=	no	no
threads	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
thread	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
thread	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
&&	no	no
thread	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Thread	no	yes
.	no	no
State	no	yes
.	no	no
TIMED_WAITING	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testUriOptionsWork	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
uri	yes	yes
=	no	no
prefix	no	yes
+	no	no
bindAddress	no	yes
+	no	no
postfix	no	yes
;	no	no

private	no	yes
void	no	yes
testValidOptionsWork	no	yes
(	no	no
String	no	yes
options	no	yes
,	no	no
String	no	yes
msg	no	yes
)	no	no
{	no	no
String	no	yes
uri	yes	yes
=	no	no
prefix	no	yes
+	no	no
bindAddress	no	yes
+	no	no
postfix	no	yes
+	no	no
options	no	yes
;	no	no

private	no	yes
void	no	yes
testInvalidOptionsDoNotWork	no	yes
(	no	no
String	no	yes
options	no	yes
,	no	no
String	no	yes
msg	no	yes
)	no	no
{	no	no
String	no	yes
uri	yes	yes
=	no	no
prefix	no	yes
+	no	no
bindAddress	no	yes
+	no	no
postfix	no	yes
+	no	no
options	no	yes
;	no	no

public	no	yes
void	no	yes
testSendingSmallMessage	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerInfo	no	yes
expected	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
)	no	no
;	no	no
expected	yes	yes
.	no	no
setSelector	no	yes
(	no	no
)	no	no
;	no	no
expected	yes	yes
.	no	no
setExclusive	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
expected	yes	yes
.	no	no
setExclusive	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
expected	yes	yes
.	no	no
setPrefetchSize	no	yes
(	no	no
3456	no	no
)	no	no
;	no	no
try	no	yes
{	no	no

ConsumerInfo	no	yes
expected	no	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
setSelector	no	yes
(	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
setExclusive	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
expected	no	yes
.	no	no
setExclusive	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
expected	no	yes
.	no	no
setPrefetchSize	no	yes
(	no	no
3456	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
oneway	no	yes
(	no	no
expected	no	yes
)	no	no
;	no	no
Command	no	yes
received	no	yes
=	no	no
assertCommandReceived	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
received	no	yes
,	no	no
received	no	yes
instanceof	no	no
ConsumerInfo	no	yes
)	no	no
;	no	no
ConsumerInfo	no	yes
actual	no	yes
=	no	no
(	no	no
ConsumerInfo	no	yes
)	no	no
received	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expected	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
,	no	no
actual	no	yes
.	no	no
getSelector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expected	no	yes
.	no	no
isExclusive	no	yes
(	no	no
)	no	no
,	no	no
actual	no	yes
.	no	no
isExclusive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expected	no	yes
.	no	no
getPrefetchSize	no	yes
(	no	no
)	no	no
,	no	no
actual	no	yes
.	no	no
getPrefetchSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertSendTextMessage	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
,	no	no
String	no	yes
text	no	yes
)	no	no
throws	no	yes
MessageNotWriteableException	no	yes
{	no	no
large	no	yes
=	no	no
true	no	yes
;	no	no
ActiveMQTextMessage	no	yes
expected	yes	yes
=	no	no
new	no	yes
ActiveMQTextMessage	no	yes
(	no	no
)	no	no
;	no	no
expected	yes	yes
.	no	no
setText	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
expected	yes	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no

ActiveMQTextMessage	no	yes
expected	no	yes
=	no	no
new	no	yes
ActiveMQTextMessage	no	yes
(	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
setText	no	yes
(	no	no
text	no	yes
)	no	no
;	no	no
expected	no	yes
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
oneway	no	yes
(	no	no
expected	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
oneway	no	yes
(	no	no
new	no	yes
ProducerInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
oneway	no	yes
(	no	no
new	no	yes
ProducerInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Command	no	yes
received	no	yes
=	no	no
assertCommandReceived	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
received	no	yes
,	no	no
received	no	yes
instanceof	no	no
ActiveMQTextMessage	no	yes
)	no	no
;	no	no
ActiveMQTextMessage	no	yes
actual	no	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
received	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expected	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
,	no	no
actual	no	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
expected	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
,	no	no
actual	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
actual	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

consumer	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
UdpTestSupport	no	yes
.	no	no
this	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
public	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	yes	yes
)	no	no
{	no	no

consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
public	no	yes
void	no	yes
onAcceptError	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no
}	no	no
}	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
consumer	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
consumer	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setTransportListener	no	yes
(	no	no
new	no	yes
TransportListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
command	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
final	no	yes
Command	no	yes
command	yes	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
if	no	yes
(	no	no
command	yes	yes
instanceof	no	no
WireFormatInfo	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
onCommand	no	yes
(	no	no
Object	no	yes
o	no	yes
)	no	no
{	no	no
final	no	yes
Command	no	yes
command	yes	yes
=	no	no
(	no	no
Command	no	yes
)	no	no
o	no	yes
;	no	no
if	no	yes
(	no	no
command	yes	yes
instanceof	no	no
WireFormatInfo	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
command	yes	yes
.	no	no
isResponseRequired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
sendResponse	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
large	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
command	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
command	yes	yes
.	no	no
getCommandId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
lock	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
receivedCommand	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
receivedCommand	no	yes
=	no	no
command	yes	yes
;	no	no
}	no	no
else	no	yes
{	no	no

public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testRequestResponse	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerInfo	no	yes
expected	yes	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
)	no	no
;	no	no
expected	yes	yes
.	no	no
setSelector	no	yes
(	no	no
)	no	no
;	no	no
expected	yes	yes
.	no	no
setResponseRequired	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testRequestResponse	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ConsumerInfo	no	yes
expected	no	yes
=	no	no
new	no	yes
ConsumerInfo	no	yes
(	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
setSelector	no	yes
(	no	no
)	no	no
;	no	no
expected	no	yes
.	no	no
setResponseRequired	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expected	no	yes
)	no	no
;	no	no
Response	no	yes
response	yes	yes
=	no	no
(	no	no
Response	no	yes
)	no	no
producer	no	yes
.	no	no
request	no	yes
(	no	no
expected	no	yes
,	no	no
2000	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
100	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
local	no	yes
.	no	no
oneway	no	yes
(	no	no
new	no	yes
DummyCommand	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
t	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
remote	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
remote	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
t	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
expect	no	yes
+	no	no
+	no	no
remoteReceived	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
remoteReceived	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>=	no	no
expect	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testNoThreadLeak	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
=	no	no
filterDaemonThreads	no	yes
(	no	no
ThreadExplorer	yes	yes
.	no	no
listThreads	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
originalThreadCount	no	yes
=	no	no
threads	no	yes
.	no	no
length	no	yes
;	no	no

broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
cf	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
cf	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
threadCountAfterStop	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	yes
ok	no	yes
=	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
ThreadExplorer	no	yes
.	no	no
show	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
=	no	no
filterDaemonThreads	no	yes
(	no	no
ThreadExplorer	no	yes
.	no	no
listThreads	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
threadCountAfterStop	yes	yes
.	no	no
set	no	yes
(	no	no
threads	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
return	no	yes
threadCountAfterStop	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<=	no	no
originalThreadCount	yes	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

public	no	yes
Thread	no	yes
[	no	no
]	no	no
filterDaemonThreads	no	yes
(	no	no
Thread	no	yes
[	no	no
]	no	no
threads	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
List	no	yes
<	no	no
Thread	no	yes
>	no	no
threadList	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
Thread	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
threads	no	yes
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
threadList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
thread	yes	yes
=	no	no
threadList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no

Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
Destination	no	yes
dest	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
this	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
ProducerThread	no	yes
producer	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
sess	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BaseDestination	no	yes
baseDestination	no	yes
=	no	no
(	no	no
BaseDestination	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
return	no	yes
baseDestination	no	yes
!=	no	no
null	no	yes
&&	no	no
baseDestination	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
BaseDestination	no	yes
baseDestination	no	yes
=	no	no
(	no	no
BaseDestination	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
baseDestination	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	yes
sent	yes	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
sent	yes	yes
=	no	no
producer	no	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testRestartSend	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
queue	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testRestartSend	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
queue	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesA	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
queue	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendRestart	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
queue	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
restartBroker	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
queue	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesA	no	yes
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
File	no	yes
dataDir	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
IOHelper	no	yes
.	no	no
getDefaultDataDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
dests	no	yes
[	no	no
]	no	no
=	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
:	no	no
dests	no	yes
)	no	no
{	no	no
String	no	yes
name	yes	yes
=	no	no
destination	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
name	yes	yes
.	no	no
contains	no	yes
(	no	no
queue	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
ActiveMQDestination	no	yes
dests	no	yes
[	no	no
]	no	no
=	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
:	no	no
dests	no	yes
)	no	no
{	no	no
String	no	yes
name	yes	yes
=	no	no
destination	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
name	yes	yes
.	no	no
contains	no	yes
(	no	no
queue	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
dests	no	yes
=	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
dests	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
queue	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
removeQueue	no	yes
(	no	no
queue	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dests	no	yes
=	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
dests	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
:	no	no
dests	no	yes
)	no	no
{	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
prod	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
producerSession	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
prod	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
removeTopic	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
dest	no	yes
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
removeQueue	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQDestination	no	yes
)	no	no
dest	no	yes
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ActiveMQDestination	no	yes
dests	no	yes
[	no	no
]	no	no
=	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
matchingDestinations	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
ActiveMQDestination	no	yes
destination	no	yes
:	no	no
dests	no	yes
)	no	no
{	no	no
String	no	yes
name	yes	yes
=	no	no
destination	no	yes
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testAdvisoryForwarding	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
sendMessages	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testAdvisoryForwarding	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
sendMessages	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesA	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testAdvisoryForwardingDuplexNC	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
setDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
sendMessages	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testAdvisoryForwardingDuplexNC	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
setDuplex	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
this	no	yes
.	no	no
sendMessages	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesA	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testBridgeRelevantAdvisoryNotAvailable	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testBridgeRelevantAdvisoryNotAvailable	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQTopic	no	yes
advisoryTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkBridge	no	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
networkBridge	no	yes
.	no	no
addStaticallyIncludedDestination	no	yes
(	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
verifyPeerBrokerInfo	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumerA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
advisoryTopic	no	yes
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageIdList	no	yes
messagesA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerA	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messagesB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumerB	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesA	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
verifyPeerBrokerInfo	no	yes
(	no	no
BrokerItem	no	yes
brokerItem	no	yes
,	no	no
final	no	yes
int	no	yes
max	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
=	no	no
brokerItem	no	yes
.	no	no
broker	yes	yes
;	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	yes	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQDestination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
session	no	yes
,	no	no
ActiveMQDestination	no	yes
.	no	no
QUEUE_TYPE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setPriority	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
session	no	yes
,	no	no
producer	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer2	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer2	no	yes
.	no	no
setPriority	no	yes
(	no	no
9	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
session	no	yes
,	no	no
producer2	no	yes
,	no	no
3	no	no
)	no	no
;	no	no
producer2	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
5	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
while	no	yes
(	no	no
--	no	no
sleepCount	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	no	yes
)	no	no
{	no	no
}	no	no
super	no	yes
.	no	no
removeConnection	no	yes
(	no	no
context	no	yes
,	no	no
info	no	yes
,	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
3	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
socketProxy	no	yes
.	no	no
halfClose	no	yes
(	no	no
)	no	no
;	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
boolean	no	yes
allGood	no	yes
=	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
numConnections	yes	yes
=	no	no
hub	no	yes
.	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

createBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
int	no	yes
browsed	no	yes
=	no	no
browseMessages	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
clientA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
msgsA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientA	no	yes
)	no	no
;	no	no
msgsA	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
clientB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
msgsB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientB	no	yes
)	no	no
;	no	no
msgsB	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no

browser1	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Browser	no	yes
browser2	no	yes
=	no	no
new	no	yes
Browser	no	yes
(	no	no
,	no	no
composite	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
browser2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
composite	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
browser1	yes	yes
.	no	no
getTotalCount	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
browser2	no	yes
.	no	no
getTotalCount	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
browser1	yes	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
Browser	no	yes
browser2	yes	yes
=	no	no
new	no	yes
Browser	no	yes
(	no	no
,	no	no
composite	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
browser2	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
composite	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
browser1	no	yes
.	no	no
getTotalCount	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
browser2	yes	yes
.	no	no
getTotalCount	no	yes
(	no	no
)	no	no
==	no	no
MESSAGE_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
browser1	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
browser2	yes	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
int	no	yes
browseMessages	no	yes
(	no	no
QueueBrowser	no	yes
browser	no	yes
,	no	no
String	no	yes
name	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
msgs	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
browsedMessage	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
msgs	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
browsedMessage	no	yes
++	no	no
;	no	no
ActiveMQTextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
ActiveMQTextMessage	no	yes
)	no	no
msgs	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testSendReceive	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
messages	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
[	no	no
]	no	no
destinations	no	yes
=	no	no
getDestinations	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
destIdx	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
verbose	no	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	yes	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	yes	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
super	no	yes
.	no	no
setUp	no	yes
(	no	no
)	no	no
;	no	no
connectionFactory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
receiveConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	yes	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sendConnection	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveConnection	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
sendConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
receiveSession	no	yes
=	no	no
receiveConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
session	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receiveSession	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producer	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
topic	no	yes
)	no	no
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
consumerDestination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getConsumerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerDestination	yes	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
getProducerSubject	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumerDestination	no	yes
+	no	no
+	no	no
consumerDestination	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
@	no	no
Override	no	yes
protected	no	yes
void	no	yes
assertMessagesAreReceived	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
waitForMessagesToBeDelivered	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
size	no	yes
=	no	no
messageLists	no	yes
.	no	no
length	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
size	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
i	no	yes
%	no	no
2	no	no
==	no	no
0	no	no
&&	no	no
i	no	yes
<	no	no
jobs	no	yes
/	no	no
2	no	no
)	no	no
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
jobs	no	yes
*	no	no
10	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
+	no	no
(	no	no
j	no	yes
%	no	no
destinationCount	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allDone	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ignored	yes	yes
)	no	no
{	no	no

exceptions	no	yes
.	no	no
add	no	yes
(	no	no
ignored	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
ConnectionFactory	no	yes
factory	no	yes
=	no	no
createConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
jobs	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
allDone	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
consumersToActivate	no	yes
=	no	no
5	no	no
;	no	no
final	no	yes
Object	no	yes
addConsumerSignal	no	yes
=	no	no
new	no	yes
Object	no	yes
(	no	no
)	no	no
;	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
new	no	yes
ThreadFactory	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
Thread	no	yes
newThread	no	yes
(	no	no
Runnable	no	yes
r	no	yes
)	no	no
{	no	no
return	no	yes
new	no	yes
Thread	no	yes
(	no	no
r	no	yes
,	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MessageConsumer	no	yes
consumer	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
consumersToActivate	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
wait	no	yes
(	no	no
30	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
TimedMessageListener	no	yes
listener	no	yes
=	no	no
new	no	yes
TimedMessageListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	yes	yes
=	no	no
createDurableSubscriber	no	yes
(	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
,	no	no
destination	no	yes
,	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no

return	no	yes
new	no	yes
Thread	no	yes
(	no	no
r	no	yes
,	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
consumersToActivate	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
wait	no	yes
(	no	no
30	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
TimedMessageListener	no	yes
listener	no	yes
=	no	no
new	no	yes
TimedMessageListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
createDurableSubscriber	no	yes
(	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
,	no	no
destination	no	yes
,	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
consumers	no	yes
.	no	no
put	no	yes
(	no	no
consumer	no	yes
,	no	no
listener	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

consumer	no	yes
=	no	no
createDurableSubscriber	no	yes
(	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
,	no	no
destination	no	yes
,	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	yes	yes
)	no	no
;	no	no
consumers	no	yes
.	no	no
put	no	yes
(	no	no
consumer	no	yes
,	no	no
listener	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
double	no	yes
[	no	no
]	no	no
statsWithActive	no	yes
=	no	no
produceMessages	no	yes
(	no	no
destination	no	yes
,	no	no
500	no	no
,	no	no
10	no	no
,	no	no
session	no	yes
,	no	no
producer	no	yes
,	no	no
addConsumerSignal	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
statsWithActive	no	yes
[	no	no
1	no	no
]	no	no
+	no	no
+	no	no
statsWithActive	no	yes
[	no	no
0	no	no
]	no	no
+	no	no
+	no	no
(	no	no
statsWithActive	no	yes
[	no	no
0	no	no
]	no	no
/	no	no
statsWithActive	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
consumersToActivate	no	yes
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
}	no	no
long	no	yes
timeToFirstAccumulator	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
TimedMessageListener	no	yes
listener	yes	yes
:	no	no
consumers	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
time	no	yes
=	no	no
listener	yes	yes
.	no	no
getFirstReceipt	no	yes
(	no	no
)	no	no
;	no	no
timeToFirstAccumulator	no	yes
+=	no	no
time	no	yes
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numIterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
toSend	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
long	no	yes
singleSendstart	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
j	no	yes
)	no	no
;	no	no
int	no	yes
priority	no	yes
=	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
count	yes	yes
%	no	no
10	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
priority	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
max	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
max	yes	yes
,	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
singleSendstart	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
++	no	no
count	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
addConsumerSignal	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
5000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

TextMessage	no	yes
msg	no	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
j	no	yes
)	no	no
;	no	no
int	no	yes
priority	no	yes
=	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
count	no	yes
%	no	no
10	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
priority	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
max	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
max	yes	yes
,	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
singleSendstart	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
++	no	no
count	no	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
addConsumerSignal	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
%	no	no
5000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
max	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	yes
duration	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
batchMax	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
batchMax	yes	yes
,	no	no
duration	yes	yes
)	no	no
;	no	no
sum	no	yes
+=	no	no
duration	yes	yes
;	no	no

final	no	yes
int	no	yes
consumersToActivate	no	yes
=	no	no
5	no	no
;	no	no
final	no	yes
Object	no	yes
addConsumerSignal	no	yes
=	no	no
new	no	yes
Object	no	yes
(	no	no
)	no	no
;	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
new	no	yes
ThreadFactory	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
Thread	no	yes
newThread	no	yes
(	no	no
Runnable	no	yes
r	no	yes
)	no	no
{	no	no
return	no	yes
new	no	yes
Thread	no	yes
(	no	no
r	no	yes
,	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MessageConsumer	no	yes
consumer	yes	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
consumersToActivate	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
wait	no	yes
(	no	no
30	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
TimedMessageListener	no	yes
listener	no	yes
=	no	no
new	no	yes
TimedMessageListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	yes	yes
=	no	no
createConsumer	no	yes
(	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no

return	no	yes
new	no	yes
Thread	no	yes
(	no	no
r	no	yes
,	no	no
+	no	no
this	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
consumersToActivate	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
wait	no	yes
(	no	no
30	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
TimedMessageListener	no	yes
listener	no	yes
=	no	no
new	no	yes
TimedMessageListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
,	no	no
destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
consumer	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
consumers	no	yes
.	no	no
put	no	yes
(	no	no
consumer	no	yes
,	no	no
listener	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

consumers	no	yes
.	no	no
put	no	yes
(	no	no
consumer	no	yes
,	no	no
listener	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
double	no	yes
[	no	no
]	no	no
statsWithActive	no	yes
=	no	no
produceMessages	no	yes
(	no	no
destination	no	yes
,	no	no
NUM_MESSAGES	no	yes
,	no	no
ITERATIONS	no	yes
,	no	no
session	no	yes
,	no	no
producer	no	yes
,	no	no
addConsumerSignal	no	yes
)	no	no
;	no	no
expectedQueueDeliveries	yes	yes
+=	no	no
NUM_MESSAGES	no	yes
*	no	no
ITERATIONS	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
statsWithActive	no	yes
[	no	no
1	no	no
]	no	no
+	no	no
+	no	no
statsWithActive	no	yes
[	no	no
0	no	no
]	no	no
+	no	no
+	no	no
(	no	no
statsWithActive	no	yes
[	no	no
0	no	no
]	no	no
/	no	no
statsWithActive	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
consumersToActivate	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
timeToFirstAccumulator	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
TimedMessageListener	no	yes
listener	yes	yes
:	no	no
consumers	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	yes
time	no	yes
=	no	no
listener	yes	yes
.	no	no
getFirstReceipt	no	yes
(	no	no
)	no	no
;	no	no
timeToFirstAccumulator	no	yes
+=	no	no
time	no	yes
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numIterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
toSend	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
long	no	yes
singleSendstart	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
msg	no	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
j	no	yes
)	no	no
;	no	no
int	no	yes
priority	no	yes
=	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
count	yes	yes
%	no	no
10	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
priority	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
max	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
max	yes	yes
,	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
singleSendstart	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
++	no	no
count	yes	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
addConsumerSignal	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
5000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

TextMessage	no	yes
msg	no	yes
=	no	no
createTextMessage	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
j	no	yes
)	no	no
;	no	no
int	no	yes
priority	no	yes
=	no	no
(	no	no
(	no	no
int	no	yes
)	no	no
count	no	yes
%	no	no
10	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
priority	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
max	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
max	yes	yes
,	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
singleSendstart	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
++	no	no
count	no	yes
%	no	no
500	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
addConsumerSignal	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
synchronized	no	yes
(	no	no
addConsumerSignal	no	yes
)	no	no
{	no	no
addConsumerSignal	no	yes
.	no	no
notifyAll	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
%	no	no
5000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
max	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	yes
duration	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
batchMax	yes	yes
=	no	no
Math	no	yes
.	no	no
max	yes	yes
(	no	no
batchMax	yes	yes
,	no	no
duration	yes	yes
)	no	no
;	no	no
sum	no	yes
+=	no	no
duration	yes	yes
;	no	no

public	no	yes
void	no	yes
testInflightWithConsumerPerMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
makeMessages	no	yes
(	no	no
prefetchSize	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
testWithMessageCount	no	yes
(	no	no
int	no	yes
messageCount	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
makeMessages	no	yes
(	no	no
messageCount	yes	yes
)	no	no
;	no	no

protected	no	yes
void	no	yes
doValidateConsumerPrefetch	no	yes
(	no	no
String	no	yes
destination	no	yes
,	no	no
final	no	yes
long	no	yes
expectedCount	no	yes
,	no	no
final	no	yes
boolean	no	yes
greaterOrEqual	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
BrokerRegistry	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
lookup	no	yes
(	no	no
)	no	no
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Destination	no	yes
dest	no	yes
:	no	no
regionBroker	no	yes
.	no	no
getTopicRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Destination	no	yes
target	yes	yes
=	no	no
dest	no	yes
;	no	no
if	no	yes
(	no	no
dest	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
DestinationStatistics	no	yes
stats	no	yes
=	no	no
target	yes	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
org	no	yes
.	no	no
apache	no	yes
.	no	no
activemq	no	yes
.	no	no
broker	no	yes
.	no	no
region	no	yes
.	no	no
Destination	no	yes
target	no	yes
=	no	no
dest	yes	yes
;	no	no
if	no	yes
(	no	no
dest	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
DestinationStatistics	no	yes
stats	no	yes
=	no	no
target	no	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
target	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
stats	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
greaterOrEqual	no	yes
)	no	no
{	no	no
return	no	yes
stats	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
>=	no	no
expectedCount	no	yes
;	no	no
}	no	no
else	no	yes
{	no	no
return	no	yes
stats	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
expectedCount	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
JMSException	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
DestinationStatistics	no	yes
stats	no	yes
=	no	no
dest	yes	yes
.	no	no
getDestinationStatistics	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testReceiveAndResendWithCompressionOff	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
connection	no	yes
.	no	no
isUseCompression	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
createProducerAndSendMessages	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testReceiveAndResendWithCompressionOff	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertTrue	no	yes
(	no	no
connection	no	yes
.	no	no
isUseCompression	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
createProducerAndSendMessages	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
TextMessage	no	yes
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
(	no	no
(	no	no
ActiveMQMessage	no	yes
)	no	no
message	yes	yes
)	no	no
.	no	no
isCompressed	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setUseCompression	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
createProducerAndSendMessages	no	yes
(	no	no
int	no	yes
numToSend	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numToSend	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
!=	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testCreateLotsOfTemporaryQueues	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberToCreate	no	yes
+	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
numberToCreate	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testNonDiscriminatingConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
consumerConnection	yes	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testDiscriminatingConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
consumerConnection	yes	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
consumerConnection	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

Consumer	no	yes
consumer	yes	yes
=	no	no
new	no	yes
Consumer	no	yes
(	no	no
consumerConnection	no	yes
,	no	no
JMSTYPE_EATME	no	yes
)	no	no
;	no	no
Thread	no	yes
consumerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
consumer	yes	yes
)	no	no
;	no	no
consumerThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
producerConnection	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
Producer	no	yes
producer	no	yes
=	no	no
new	no	yes
Producer	no	yes
(	no	no
producerConnection	no	yes
)	no	no
;	no	no
Thread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
producer	no	yes
)	no	no
;	no	no
producerThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
stop	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
consumer	yes	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
(	no	no
testSize	yes	yes
/	no	no
2	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
onException	no	yes
(	no	no
IOException	no	yes
error	yes	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
makeConsumer	no	yes
(	no	no
int	no	yes
ackMode	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
durableName	yes	yes
=	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientID	yes	yes
=	no	no
getSubject	no	yes
(	no	no
)	no	no
;	no	no

MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
)	no	no
;	no	no
populateDestination	no	yes
(	no	no
1	no	no
,	no	no
topic	no	yes
,	no	no
producerConnection	no	yes
)	no	no
;	no	no
producerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getClients	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
1	no	no
)	no	no
;	no	no
TransportConnector	no	yes
connector	no	yes
=	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
TransportConnection	no	yes
connection	no	yes
=	no	no
connector	no	yes
.	no	no
getConnections	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
findFirst	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
.	no	no
getClients	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
;	no	no
durableConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
durableConnection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
durableConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
durableConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
)	no	no
;	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTestCacheExhaustion	no	yes
(	no	no
int	no	yes
prefetch	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
createDurableSub	no	yes
(	no	no
topic	no	yes
,	no	no
)	no	no
;	no	no
publishMesssages	no	yes
(	no	no
topic	no	yes
,	no	no
20	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
AbstractStoreCursor	no	yes
.	no	no
class	no	yes
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
failed	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
==	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
printDebugClientInfo	no	yes
(	no	no
ObjectName	no	yes
[	no	no
]	no	no
subscribers	yes	yes
,	no	no
ObjectName	no	yes
[	no	no
]	no	no
inactiveSubscribers	no	yes
,	no	no
final	no	yes
KahaDBPersistenceAdapter	no	yes
pa	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
Connection	no	yes
con	no	yes
=	no	no
openConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
SUBSCRIPTION_NAME	no	yes
,	no	no
selector	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
do	no	yes
{	no	no
long	no	yes
max	no	yes
=	no	no
end	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
inTransaction	no	yes
)	no	no
break	no	yes
;	no	no
max	no	yes
=	no	no
hardEnd	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
exit	no	yes
(	no	no
+	no	no
this	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
sweep	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
closed	no	yes
=	no	no
0	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
sweeped	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
String	no	yes
clientId	yes	yes
:	no	no
abandonedSubscriptions	no	yes
)	no	no
{	no	no

public	no	yes
static	no	yes
void	no	yes
exit	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testDurableSubNetwork	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
fact	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
fact	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
dest	no	yes
,	no	no
subName	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testTwoDurableSubsInNetworkWithUnsubscribe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
fact	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
fact	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
dest	no	yes
,	no	no
subName	yes	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testTwoDurableSubsInNetworkWithUnsubscribe	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
fact	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connector	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
fact	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
dest	no	yes
,	no	no
subName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subName	no	yes
+	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
sub2	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
(	no	no
Topic	no	yes
)	no	no
dest	no	yes
,	no	no
subName2	yes	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
restartBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
processLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
restartCount	yes	yes
++	no	no
;	no	no

try	no	yes
{	no	no
do	no	yes
{	no	no
long	no	yes
max	no	yes
=	no	no
end	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
inTransaction	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
max	no	yes
=	no	no
hardEnd	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
exit	no	yes
(	no	no
+	no	no
this	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
onClientMessage	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
trans	yes	yes
=	no	no
message	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
max	no	yes
=	no	no
hardEnd	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
exit	no	yes
(	no	no
+	no	no
this	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
onClientMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
trans	no	yes
=	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
trans	no	yes
+	no	no
+	no	no
transCount	no	yes
+	no	no
+	no	no
this	no	yes
+	no	no
)	no	no
;	no	no
inTransaction	no	yes
=	no	no
false	no	yes
;	no	no
transCount	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
committing	no	yes
=	no	no
server	no	yes
.	no	no
committingTransaction	no	yes
;	no	no
if	no	yes
(	no	no
committing	no	yes
==	no	no
trans	no	yes
)	no	no
{	no	no

Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
onClientMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
trans	no	yes
=	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
trans	no	yes
+	no	no
+	no	no
transCount	no	yes
+	no	no
+	no	no
this	no	yes
+	no	no
)	no	no
;	no	no
inTransaction	no	yes
=	no	no
false	no	yes
;	no	no
transCount	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
committing	no	yes
=	no	no
server	no	yes
.	no	no
committingTransaction	no	yes
;	no	no
if	no	yes
(	no	no
committing	no	yes
==	no	no
trans	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
inTransaction	no	yes
=	no	no
true	no	yes
;	no	no

private	no	yes
void	no	yes
sweep	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
closed	no	yes
=	no	no
0	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
sweeped	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
String	no	yes
clientId	yes	yes
:	no	no
abandonedSubscriptions	no	yes
)	no	no
{	no	no

public	no	yes
static	no	yes
void	no	yes
exit	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
restartBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
processLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
restartCount	yes	yes
++	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
exit	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no

Connection	no	yes
con	no	yes
=	no	no
openConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
SUBSCRIPTION_NAME	no	yes
,	no	no
selector	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
do	no	yes
{	no	no
long	no	yes
max	no	yes
=	no	no
end	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
inTransaction	no	yes
)	no	no
break	no	yes
;	no	no
max	no	yes
=	no	no
hardEnd	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
exit	no	yes
(	no	no
+	no	no
this	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
onClientMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
sweep	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
closed	no	yes
=	no	no
0	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
sweeped	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
String	no	yes
clientId	yes	yes
:	no	no
abandonedSubscriptions	no	yes
)	no	no
{	no	no
sweeped	no	yes
.	no	no
add	no	yes
(	no	no
clientId	yes	yes
)	no	no
;	no	no

public	no	yes
static	no	yes
void	no	yes
exit	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
e	yes	yes
)	no	no
{	no	no
Throwable	no	yes
log	no	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
message	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
log	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
restartBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
processLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
startBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
restartCount	yes	yes
++	no	no
;	no	no

Connection	no	yes
con	no	yes
=	no	no
openConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
sess	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
SUBSCRIPTION_NAME	no	yes
,	no	no
selector	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
do	no	yes
{	no	no
long	no	yes
max	no	yes
=	no	no
end	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
inTransaction	no	yes
)	no	no
break	no	yes
;	no	no
max	no	yes
=	no	no
hardEnd	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
max	no	yes
<=	no	no
0	no	no
)	no	no
exit	no	yes
(	no	no
+	no	no
this	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
continue	no	yes
;	no	no
onClientMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
message	yes	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
sweep	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
closed	no	yes
=	no	no
0	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
sweeped	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
String	no	yes
clientId	yes	yes
:	no	no
abandonedSubscriptions	no	yes
)	no	no
{	no	no

public	no	yes
static	no	yes
void	no	yes
exit	no	yes
(	no	no
String	no	yes
message	yes	yes
,	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	yes	yes
=	no	no
new	no	yes
RuntimeException	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no

session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
goOn	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
Thread	no	yes
sendThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
final	no	yes
Connection	no	yes
sendCon	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sendSession	no	yes
=	no	no
sendCon	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
sendSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
messageCount	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
boolean	no	yes
filter	no	yes
=	no	no
i	yes	yes
%	no	no
2	no	no
==	no	no
1	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
sendSession	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
filter	no	yes
?	no	no
:	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Connection	no	yes
sendCon	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sendSession	no	yes
=	no	no
sendCon	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
sendSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
Thread	no	yes
sendThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
messageCount	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
boolean	no	yes
filter	no	yes
=	no	no
i	yes	yes
%	no	no
2	no	no
==	no	no
1	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
sendSession	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
filter	no	yes
?	no	no
:	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
>	no	no
0	no	no
&&	no	no
i	yes	yes
%	no	no
1000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testDurableSubscriberNonPersistentMessage	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
interest	no	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Producer	no	yes
producer	no	yes
=	no	no
new	no	yes
Producer	no	yes
(	no	no
brokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
messageSize	no	yes
,	no	no
ttl	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
sendMessages	no	yes
(	no	no
totalMsgCount	yes	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testDurableSubscriberNonPersistentMessage	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
interest	no	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Producer	no	yes
producer	no	yes
=	no	no
new	no	yes
Producer	no	yes
(	no	no
brokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
messageSize	no	yes
,	no	no
ttl	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
sendMessages	no	yes
(	no	no
totalMsgCount	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
totalMsgCount	no	yes
+	no	no
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
initialMaxMsgs	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
reconnectSleep	no	yes
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
cleanupMsgCount	no	yes
)	no	no
;	no	no
String	no	yes
brokerVersion	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no

createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
Producer	no	yes
producer	no	yes
=	no	no
new	no	yes
Producer	no	yes
(	no	no
brokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
messageSize	no	yes
,	no	no
ttl	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
sendMessages	no	yes
(	no	no
totalMsgCount	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
totalMsgCount	no	yes
+	no	no
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
initialMaxMsgs	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
reconnectSleep	no	yes
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
cleanupMsgCount	no	yes
)	no	no
;	no	no
String	no	yes
brokerVersion	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerVersion	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
theJmxObject	no	yes
=	no	no
+	no	no
+	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Integer	no	yes
pendingQueueSize	yes	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
theJmxObject	no	yes
)	no	no
,	no	no
)	no	no
;	no	no

createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
initialMaxMsgs	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
reconnectSleep	no	yes
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
interest	no	yes
,	no	no
cleanupMsgCount	no	yes
)	no	no
;	no	no
String	no	yes
brokerVersion	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerVersion	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
theJmxObject	no	yes
=	no	no
+	no	no
+	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Integer	no	yes
pendingQueueSize	no	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
theJmxObject	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pendingQueueSize	no	yes
)	no	no
;	no	no
return	no	yes
pendingQueueSize	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Long	no	yes
cursorMemoryUsage	yes	yes
=	no	no
(	no	no
Long	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
theJmxObject	no	yes
)	no	no
,	no	no
)	no	no
;	no	no

final	no	yes
String	no	yes
theJmxObject	no	yes
=	no	no
+	no	no
+	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Integer	no	yes
pendingQueueSize	no	yes
=	no	no
(	no	no
Integer	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
theJmxObject	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pendingQueueSize	no	yes
)	no	no
;	no	no
return	no	yes
pendingQueueSize	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Long	no	yes
cursorMemoryUsage	no	yes
=	no	no
(	no	no
Long	no	yes
)	no	no
mbeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
new	no	yes
ObjectName	no	yes
(	no	no
theJmxObject	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
cursorMemoryUsage	no	yes
)	no	no
;	no	no
return	no	yes
cursorMemoryUsage	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
==	no	no
0L	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
totalMsgReceived	no	yes
==	no	no
initialMaxMsgs	no	yes
+	no	no
cleanupMsgCount	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
createConsumer	no	yes
(	no	no
String	no	yes
interest	no	yes
,	no	no
int	no	yes
maxMsgs	no	yes
)	no	no
{	no	no
int	no	yes
messageReceived	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
messagesNotReceived	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Consumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
consumer	no	yes
=	no	no
new	no	yes
Consumer	no	yes
(	no	no
consumerBrokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
clientId	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxMsgs	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
msg	yes	yes
=	no	no
consumer	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
createConsumer	no	yes
(	no	no
String	no	yes
interest	no	yes
,	no	no
int	no	yes
maxMsgs	no	yes
)	no	no
{	no	no
int	no	yes
messageReceived	no	yes
=	no	no
0	no	no
;	no	no
int	no	yes
messagesNotReceived	no	yes
=	no	no
0	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Consumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
consumer	no	yes
=	no	no
new	no	yes
Consumer	no	yes
(	no	no
consumerBrokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
clientId	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
maxMsgs	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageReceived	no	yes
++	no	no
;	no	no
totalMsgReceived	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no

Consumer	no	yes
consumer	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
consumer	no	yes
=	no	no
new	no	yes
Consumer	no	yes
(	no	no
consumerBrokerURL	no	yes
,	no	no
interest	no	yes
,	no	no
clientId	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxMsgs	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageReceived	no	yes
++	no	no
;	no	no
totalMsgReceived	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
messagesNotReceived	no	yes
++	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ie	yes	yes
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxMsgs	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageReceived	yes	yes
++	no	no
;	no	no
totalMsgReceived	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
messagesNotReceived	no	yes
++	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ie	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
Message	no	yes
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
getMessage	no	yes
(	no	no
messageTimeout	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageReceived	no	yes
++	no	no
;	no	no
totalMsgReceived	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
messagesNotReceived	yes	yes
++	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ie	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageReceived	no	yes
)	no	no
;	no	no

if	no	yes
(	no	no
msg	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
messageReceived	no	yes
++	no	no
;	no	no
totalMsgReceived	no	yes
++	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
messagesNotReceived	no	yes
++	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleep	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ie	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageReceived	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesNotReceived	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

Connection	no	yes
conSpoke	no	yes
=	no	no
facSpoke	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conHub	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
conSpoke	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
conHub	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
conSpoke	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sesHub	no	yes
=	no	no
conHub	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Session	no	yes
sesSpoke	no	yes
=	no	no
conSpoke	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQTopic	no	yes
topic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
consumerName	no	yes
=	no	no
;	no	no
MessageConsumer	no	yes
remoteConsumer	no	yes
=	no	no
sesSpoke	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
consumerName	no	yes
)	no	no
;	no	no
remoteConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
msg	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
textMsg	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
msg	no	yes
;	no	no
receivedMsgs	yes	yes
++	no	no
;	no	no

MessageProducer	no	yes
localProducer	no	yes
=	no	no
sesSpoke	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
localProducer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
final	no	yes
String	no	yes
payloadString	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
10	no	no
*	no	no
1024	no	no
]	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
MESSAGE_COUNT	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
test	no	yes
=	no	no
sesSpoke	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
;	no	no
test	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
payloadString	no	yes
)	no	no
;	no	no
localProducer	no	yes
.	no	no
send	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
}	no	no
localProducer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
String	no	yes
options	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
SPOKE	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
+	no	no
SPOKE	no	yes
+	no	no
options	no	yes
)	no	no
)	no	no
;	no	no
bridge	no	yes
(	no	no
SPOKE	no	yes
,	no	no
HUB	no	yes
)	no	no
;	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
SPOKE	no	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
int	no	yes
countMbeans	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
,	no	no
String	no	yes
type	no	yes
,	no	no
int	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
long	no	yes
expiryTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
timeout	no	yes
;	no	no
if	no	yes
(	no	no
!	no	no
type	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
type	no	yes
=	no	no
type	no	yes
+	no	no
;	no	no
}	no	no
final	no	yes
ObjectName	no	yes
beanName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
+	no	no
broker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
type	no	yes
+	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ObjectName	no	yes
>	no	no
mbeans	no	yes
=	no	no
null	no	yes
;	no	no
int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
do	no	yes
{	no	no
if	no	yes
(	no	no
timeout	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no
}	no	no
mbeans	no	yes
=	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
queryNames	no	yes
(	no	no
beanName	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
mbeans	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
count	no	yes
=	no	no
mbeans	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
objectName	yes	yes
:	no	no
mbeans	no	yes
)	no	no
{	no	no

private	no	yes
void	no	yes
logAllMbeans	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
MalformedURLException	no	yes
{	no	no
try	no	yes
{	no	no
Set	no	yes
<	no	no
?	no	no
>	no	no
all	yes	yes
=	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
queryNames	no	yes
(	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
logAllMbeans	no	yes
(	no	no
BrokerService	no	yes
broker	no	yes
)	no	no
throws	no	yes
MalformedURLException	no	yes
{	no	no
try	no	yes
{	no	no
Set	no	yes
<	no	no
?	no	no
>	no	no
all	no	yes
=	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
queryNames	no	yes
(	no	no
null	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
all	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
Object	no	yes
o	yes	yes
:	no	no
all	no	yes
)	no	no
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testHanging	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
registerDurableSubscription	no	yes
(	no	no
)	no	no
;	no	no
produceExpiredAndOneNonExpiredMessages	no	yes
(	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
collectMessagesFromDurableSubscriptionForOneMinute	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Parameterized	no	yes
.	no	no
Parameters	no	yes
(	no	no
name	no	yes
=	no	no
)	no	no
public	no	yes
static	no	yes
Collection	no	yes
<	no	no
Object	no	yes
[	no	no
]	no	no
>	no	no
getTestParameters	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
osName	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no

sent	no	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
DurableSubscriptionOfflineTestListener	no	yes
listener	yes	yes
=	no	no
new	no	yes
DurableSubscriptionOfflineTestListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	yes	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
int	no	yes
sent	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
sent	no	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
sent	no	yes
/	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
,	no	no
m	yes	yes
)	no	no
;	no	no

int	no	yes
sent	no	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sent	no	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
sent	no	yes
/	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
m	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
m	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
m	no	yes
)	no	no
;	no	no
}	no	no
ObjectName	no	yes
activeDurableSubName	yes	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no

@	no	no
Parameterized	no	yes
.	no	no
Parameters	no	yes
(	no	no
name	no	yes
=	no	no
)	no	no
public	no	yes
static	no	yes
Collection	no	yes
<	no	no
PersistenceAdapterChoice	no	yes
[	no	no
]	no	no
>	no	no
getTestParameters	no	yes
(	no	no
)	no	no
{	no	no
String	no	yes
osName	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no

con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
int	no	yes
filtered	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
boolean	no	yes
filter	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
Math	no	yes
.	no	no
random	no	yes
(	no	no
)	no	no
*	no	no
2	no	no
)	no	no
>=	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
filter	no	yes
)	no	no
filtered	yes	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
filter	no	yes
?	no	no
:	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
filtered	yes	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
boolean	no	yes
filter	no	yes
=	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
Math	no	yes
.	no	no
random	no	yes
(	no	no
)	no	no
*	no	no
2	no	no
)	no	no
>=	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
filter	no	yes
)	no	no
filtered	yes	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
filter	no	yes
?	no	no
:	no	no
)	no	no
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
sent	yes	yes
,	no	no
listener	no	yes
.	no	no
count	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sent	yes	yes
++	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no

session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
toSend	no	yes
=	no	no
500	no	no
;	no	no
final	no	yes
String	no	yes
payload	no	yes
=	no	no
new	no	yes
byte	no	yes
[	no	no
40	no	no
*	no	no
1024	no	no
]	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
sent	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
sent	yes	yes
;	no	no
i	no	yes
<	no	no
toSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
sent	yes	yes
++	no	no
;	no	no
}	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

sent	no	yes
++	no	no
;	no	no
}	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sent	no	yes
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
unsubscribe	no	yes
(	no	no
)	no	no
;	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
DurableSubscriptionOfflineTestListener	no	yes
listener	yes	yes
=	no	no
new	no	yes
DurableSubscriptionOfflineTestListener	no	yes
(	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
[	no	no
]	no	no
subs	no	yes
=	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
subs	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
ObjectName	no	yes
subName	no	yes
=	no	no
subs	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
sub	no	yes
=	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
CompositeData	no	yes
[	no	no
]	no	no
data	no	yes
=	no	no
sub	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
LinkedList	no	yes
<	no	no
String	no	yes
>	no	no
idToRemove	yes	yes
=	no	no
new	no	yes
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
idToRemove	yes	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
data	no	yes
[	no	no
5	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
idToRemove	yes	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
data	no	yes
[	no	no
9	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
idToRemove	yes	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
data	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

idToRemove	yes	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
data	no	yes
[	no	no
9	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
idToRemove	yes	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
data	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
idToRemove	yes	yes
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
id	no	yes
:	no	no
idToRemove	yes	yes
)	no	no
{	no	no
sub	no	yes
.	no	no
removeMessage	no	yes
(	no	no
id	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
defaultPersistenceAdapter	no	yes
.	no	no
compareTo	no	yes
(	no	no
TestSupport	no	yes
.	no	no
PersistenceAdapterChoice	no	yes
.	no	no
JDBC	no	yes
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
(	no	no
(	no	no
JDBCPersistenceAdapter	no	yes
)	no	no
broker	no	yes
.	no	no
getPersistenceAdapter	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
data	no	yes
=	no	no
sub	no	yes
.	no	no
browse	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
7	no	no
,	no	no
data	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
CompositeData	no	yes
c	no	yes
:	no	no
data	no	yes
)	no	no
{	no	no
String	no	yes
id	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
c	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
removedId	no	yes
:	no	no
idToRemove	yes	yes
)	no	no
{	no	no
assertNotEquals	no	yes
(	no	no
id	no	yes
,	no	no
removedId	no	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
2	no	no
*	no	no
60	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testOrderOnActivateDeactivate	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
synchronized	no	yes
(	no	no
this	no	yes
)	no	no
{	no	no
Connection	no	yes
con	yes	yes
=	no	no
clientFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
con	yes	yes
.	no	no
setClientID	no	yes
(	no	no
+	no	no
id	no	yes
)	no	no
;	no	no
con	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
con	yes	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
int	no	yes
nextId	no	yes
=	no	no
0	no	no
;	no	no
++	no	no
runCount	no	yes
;	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
;	no	no
i	yes	yes
<	no	no
messageCount	no	yes
/	no	no
2	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receiveNoWait	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
long	no	yes
producerSequenceId	no	yes
=	no	no
new	no	yes
MessageId	no	yes
(	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getProducerSequenceId	no	yes
(	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
id	no	yes
+	no	no
+	no	no
runCount	no	yes
+	no	no
+	no	no
message	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
,	no	no
++	no	no
nextId	no	yes
,	no	no
producerSequenceId	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
con	no	yes
.	no	no
getClientID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Runnable	no	yes
producer	no	yes
=	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
final	no	yes
String	no	yes
payLoad	no	yes
=	no	no
new	no	yes
String	no	yes
(	no	no
new	no	yes
byte	no	yes
[	no	no
600	no	no
]	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Connection	no	yes
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sendSession	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sendSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
filter	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
2000	no	no
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
sent	yes	yes
=	no	no
0	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
i	no	yes
==	no	no
1	no	no
?	no	no
:	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
sent	yes	yes
++	no	no
;	no	no

session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
int	no	yes
sent	yes	yes
=	no	no
0	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
0	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
sent	yes	yes
++	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
sent	yes	yes
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
sent	yes	yes
++	no	no
;	no	no
}	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
filter	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
con	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
con	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
con	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
sent	yes	yes
;	no	no
i	no	yes
<	no	no
30	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
sent	yes	yes
++	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TopicSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TopicPublisher	no	yes
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createPublisher	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
subscriber	no	yes
=	no	no
session	no	yes
.	no	no
createSubscriber	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no

publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no

}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no

connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TopicSession	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TopicPublisher	no	yes
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createPublisher	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
subscriber	no	yes
=	no	no
session	no	yes
.	no	no
createSubscriber	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
TopicSubscriber	no	yes
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
tearDown	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createPublisher	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
assertNotNull	no	yes
(	no	no
durableSub	no	yes
.	no	no
receive	no	yes
(	no	no
500	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
MSG_COUNT	yes	yes
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
publisher	no	yes
.	no	no
publish	no	yes
(	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
tearDown	no	yes
(	no	no
)	no	no
;	no	no
createBroker	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createTopicConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
getClientId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createTopicSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
getDestinationName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
publisher	no	yes
=	no	no
session	no	yes
.	no	no
createPublisher	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
durableSub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
,	no	no
null	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
waitUntilStarted	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQPrefetchPolicy	no	yes
prefetchPolicy	no	yes
=	no	no
new	no	yes
ActiveMQPrefetchPolicy	no	yes
(	no	no
)	no	no
;	no	no
prefetchPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
,	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
0	no	no
,	no	no
2000	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
DestinationStatistics	no	yes
view	no	yes
=	no	no
getDestinationStatistics	no	yes
(	no	no
broker	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getDispatched	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getExpired	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
DestinationStatistics	no	yes
view	no	yes
=	no	no
getDestinationStatistics	no	yes
(	no	no
broker	no	yes
,	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getDequeues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getDispatched	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getInflight	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getExpired	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
long	no	yes
oldEnqueues	no	yes
=	no	no
view	no	yes
.	no	no
getEnqueues	no	yes
(	no	no
)	no	no
.	no	no
getCount	no	yes
(	no	no
)	no	no
;	no	no

connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
setDeliveryMode	no	yes
(	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
2000	no	no
;	no	no
final	no	yes
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
i	yes	yes
++	no	no
<	no	no
sendCount	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
135	no	no
==	no	no
i	no	yes
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3000	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3000	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
view	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
&&	no	no
view	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
==	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
&&	no	no
view	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
==	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
&&	no	no
view	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
;	no	no

ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
2000	no	no
;	no	no
final	no	yes
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
i	yes	yes
++	no	no
<	no	no
sendCount	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
i	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
(	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
tStamp	no	yes
)	no	no
/	no	no
100	no	no
)	no	no
+	no	no
)	no	no
;	no	no
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3000	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
3000	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getDequeueCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getInFlightCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
sendCount	no	yes
==	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
;	no	no

createBroker	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
long	no	yes
queuePrefetch	no	yes
=	no	no
5	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
+	no	no
queuePrefetch	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
ttl	no	yes
=	no	no
4000	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receivedOneCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
waitCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no

connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
ttl	no	yes
=	no	no
4000	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
10	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receivedOneCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
waitCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
receivedOneCondition	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
waitCondition	no	yes
.	no	no
await	no	yes
(	no	no
6	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
i	yes	yes
++	no	no
<	no	no
sendCount	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
(	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
tStamp	no	yes
)	no	no
/	no	no
100	no	no
)	no	no
+	no	no
)	no	no
;	no	no
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queuePrefetch	no	yes
==	no	no
view	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queuePrefetch	no	yes
==	no	no
view	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
connectionUri	no	yes
+	no	no
+	no	no
queuePrefetch	no	yes
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
ttl	no	yes
=	no	no
4000	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
1500	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receivedOneCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
waitCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicLong	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
1500	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
receivedOneCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
waitCondition	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
AtomicLong	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
receivedOneCondition	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
received	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
waitCondition	no	yes
.	no	no
await	no	yes
(	no	no
5	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
message	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
long	no	yes
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
i	yes	yes
++	no	no
<	no	no
sendCount	no	yes
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
(	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
tStamp	no	yes
)	no	no
/	no	no
100	no	no
)	no	no
+	no	no
)	no	no
;	no	no
tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no

tStamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queuePrefetch	no	yes
==	no	no
view	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
receivedOneCondition	no	yes
.	no	no
await	no	yes
(	no	no
20	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
producingThread	no	yes
.	no	no
join	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
return	no	yes
!	no	no
producingThread	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
Wait	no	yes
.	no	no
MAX_WAIT_MILLIS	no	yes
*	no	no
10	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
queuePrefetch	no	yes
==	no	no
view	yes	yes
.	no	no
getDispatchCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
ttl	no	yes
=	no	no
1000	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
10	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
sendCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
(	no	no
ActiveMQTopic	no	yes
)	no	no
destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

Topic	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
int	no	yes
ttl	no	yes
=	no	no
1000	no	no
;	no	no
producer	no	yes
.	no	no
setTimeToLive	no	yes
(	no	no
ttl	no	yes
)	no	no
;	no	no
final	no	yes
long	no	yes
sendCount	no	yes
=	no	no
10	no	no
;	no	no
TopicSubscriber	no	yes
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
sendCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
DestinationViewMBean	no	yes
view	yes	yes
=	no	no
createView	no	yes
(	no	no
(	no	no
ActiveMQTopic	no	yes
)	no	no
destination	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
view	no	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	no	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicLong	no	yes
received	yes	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
received	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>=	no	no
sendCount	no	yes
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	yes	yes
.	no	no
getExpiredCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
10	no	no
,	no	no
view	yes	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicLong	no	yes
received	no	yes
=	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
)	no	no
;	no	no
sub	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
destination	no	yes
,	no	no
)	no	no
;	no	no
sub	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
received	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
>=	no	no
sendCount	no	yes
;	no	no
}	no	no
}	no	no
,	no	no
1000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRemoveQueueAndProduceAfterNewConsumerAdded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
firstConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
firstConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRemoveQueueAndProduceAfterNewConsumerAdded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
firstConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
firstConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
numberOfMessages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
firstConsumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
removeQueue	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
secondConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
secondConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRemoveQueueAndProduceBeforeNewConsumerAdded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
firstConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
firstConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testRemoveQueueAndProduceBeforeNewConsumerAdded	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
firstConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	yes	yes
=	no	no
firstConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
numberOfMessages	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
firstConsumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
removeQueue	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessage	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
secondConsumer	no	yes
=	no	no
registerConsumer	no	yes
(	no	no
)	no	no
;	no	no
message	yes	yes
=	no	no
secondConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
produceMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
textMessage	yes	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
count	no	yes
++	no	no
)	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
QUEUE_SIZE	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getMessageEvaluationContext	no	yes
(	no	no
)	no	no
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
long	no	yes
startTimeMillis	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
queue	no	yes
.	no	no
moveMatchingMessagesTo	no	yes
(	no	no
context	no	yes
,	no	no
+	no	no
(	no	no
QUEUE_SIZE	yes	yes
-	no	no
1	no	no
)	no	no
,	no	no
createDestination	no	yes
(	no	no
MOVE_TO_DESTINATION_NAME	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
durationMillis	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
QUEUE_SIZE	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getMessageEvaluationContext	no	yes
(	no	no
)	no	no
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
long	no	yes
startTimeMillis	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
queue	no	yes
.	no	no
copyMatchingMessagesTo	no	yes
(	no	no
context	no	yes
,	no	no
+	no	no
(	no	no
QUEUE_SIZE	yes	yes
-	no	no
1	no	no
)	no	no
,	no	no
createDestination	no	yes
(	no	no
MOVE_TO_DESTINATION_NAME	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
durationMillis	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
QUEUE_SIZE	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createMessage	no	yes
(	no	no
)	no	no
;	no	no
message	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Queue	no	yes
queue	no	yes
=	no	no
(	no	no
Queue	no	yes
)	no	no
broker	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
ConnectionContext	no	yes
context	no	yes
=	no	no
new	no	yes
ConnectionContext	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setBroker	no	yes
(	no	no
broker	no	yes
.	no	no
getBroker	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getMessageEvaluationContext	no	yes
(	no	no
)	no	no
.	no	no
setDestination	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
long	no	yes
startTimeMillis	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
queue	no	yes
.	no	no
removeMatchingMessages	no	yes
(	no	no
+	no	no
(	no	no
QUEUE_SIZE	yes	yes
-	no	no
1	no	no
)	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
durationMillis	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
;	no	no

Connection	no	yes
conn	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
ProducerThread	no	yes
producer	no	yes
=	no	no
new	no	yes
ProducerThread	no	yes
(	no	no
sess	no	yes
,	no	no
queue	no	yes
)	no	no
{	no	no
@	no	no
Override	no	yes
protected	no	yes
Message	no	yes
createMessage	no	yes
(	no	no
int	no	yes
i	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BytesMessage	no	yes
bytesMessage	no	yes
=	no	no
session	no	yes
.	no	no
createBytesMessage	no	yes
(	no	no
)	no	no
;	no	no
bytesMessage	no	yes
.	no	no
writeBytes	no	yes
(	no	no
payload	no	yes
)	no	no
;	no	no
return	no	yes
bytesMessage	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
producer	no	yes
.	no	no
setMessageCount	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
final	no	yes
Destination	no	yes
dest	yes	yes
=	no	no
broker	no	yes
.	no	no
getDestination	no	yes
(	no	no
(	no	no
ActiveMQQueue	no	yes
)	no	no
queue	no	yes
)	no	no
;	no	no

final	no	yes
Thread	no	yes
producerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
prod	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
10	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
seq	yes	yes
=	no	no
j	no	yes
+	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
j	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
5	no	no
==	no	no
0	no	no
)	no	no
{	no	no
seq	yes	yes
=	no	no
-	no	no
1	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
generateMessage	no	yes
(	no	no
session	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
i	yes	yes
)	no	no
,	no	no
seq	yes	yes
)	no	no
;	no	no
prod	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
messagesSent	no	yes
++	no	no
;	no	no

try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
prod	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
10	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
10	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
int	no	yes
seq	no	yes
=	no	no
j	no	yes
+	no	no
1	no	no
;	no	no
if	no	yes
(	no	no
(	no	no
j	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
5	no	no
==	no	no
0	no	no
)	no	no
{	no	no
seq	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
generateMessage	no	yes
(	no	no
session	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
i	yes	yes
)	no	no
,	no	no
seq	no	yes
)	no	no
;	no	no
prod	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
messagesSent	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
seq	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	yes	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
(	no	no
j	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
5	no	no
==	no	no
0	no	no
)	no	no
{	no	no
seq	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
generateMessage	no	yes
(	no	no
session	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
seq	no	yes
)	no	no
;	no	no
prod	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
messagesSent	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
+	no	no
seq	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
setMessageGroupCount	no	yes
(	no	no
getMessageGroupCount	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
messagesSent	no	yes
+	no	no
)	no	no
;	no	no
latchMessagesCreated	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
prod	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
final	no	yes
Thread	no	yes
consumerThread1	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
latchMessagesCreated	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
con1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
con1	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
break	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
formatMessage	no	yes
(	no	no
message	no	yes
)	no	no
)	no	no
;	no	no
checkMessage	no	yes
(	no	no
message	no	yes
,	no	no
,	no	no
messageGroups1	yes	yes
,	no	no
closedGroups1	no	yes
)	no	no
;	no	no

catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
final	no	yes
Thread	no	yes
consumerThread2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
latchMessagesCreated	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
con2	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
con2	no	yes
.	no	no
receive	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no

public	no	yes
void	no	yes
checkMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
,	no	no
String	no	yes
consumerId	yes	yes
,	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Integer	no	yes
>	no	no
messageGroups	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
closedGroups	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
String	no	yes
groupId	yes	yes
=	no	no
m	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
seq	yes	yes
=	no	no
m	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
Integer	no	yes
count	no	yes
=	no	no
messageGroups	no	yes
.	no	no
get	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
m	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
m	no	yes
.	no	no
getBooleanProperty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

int	no	yes
seq	yes	yes
=	no	no
m	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
Integer	no	yes
count	no	yes
=	no	no
messageGroups	no	yes
.	no	no
get	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
m	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
m	no	yes
.	no	no
getBooleanProperty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
consumerId	yes	yes
+	no	no
+	no	no
groupId	yes	yes
+	no	no
+	no	no
seq	yes	yes
)	no	no
;	no	no
errorCountFirstForConsumer	no	yes
++	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
seq	yes	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
closedGroups	no	yes
.	no	no
add	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
consumerId	yes	yes
+	no	no
+	no	no
groupId	yes	yes
)	no	no
;	no	no
errorCountWrongConsumerClose	no	yes
++	no	no
;	no	no
}	no	no
messageGroups	no	yes
.	no	no
put	no	yes
(	no	no
groupId	yes	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
closedGroups	no	yes
.	no	no
contains	no	yes
(	no	no
groupId	yes	yes
)	no	no
)	no	no
{	no	no
closedGroups	no	yes
.	no	no
remove	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
m	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
m	no	yes
.	no	no
getBooleanProperty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
!	no	no
m	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
m	no	yes
.	no	no
getBooleanProperty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
consumerId	yes	yes
+	no	no
+	no	no
groupId	yes	yes
+	no	no
+	no	no
seq	no	yes
)	no	no
;	no	no
errorCountFirstForConsumer	no	yes
++	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
seq	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
closedGroups	no	yes
.	no	no
add	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
consumerId	yes	yes
+	no	no
+	no	no
groupId	yes	yes
)	no	no
;	no	no
errorCountWrongConsumerClose	no	yes
++	no	no
;	no	no
}	no	no
messageGroups	no	yes
.	no	no
put	no	yes
(	no	no
groupId	yes	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
if	no	yes
(	no	no
closedGroups	no	yes
.	no	no
contains	no	yes
(	no	no
groupId	yes	yes
)	no	no
)	no	no
{	no	no
closedGroups	no	yes
.	no	no
remove	no	yes
(	no	no
groupId	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
!	no	no
m	no	yes
.	no	no
propertyExists	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
m	no	yes
.	no	no
getBooleanProperty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
consumerId	yes	yes
+	no	no
+	no	no
groupId	yes	yes
+	no	no
+	no	no
seq	no	yes
)	no	no
;	no	no
errorCountFirstForConsumer	no	yes
++	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
seq	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no

msga	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msga	no	yes
)	no	no
;	no	no
Message	no	yes
msgb	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msgb	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msgb	no	yes
)	no	no
;	no	no
}	no	no
new	no	yes
Thread	no	yes
(	no	no
worker3	no	yes
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
worker3Started	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
perBatch	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msgc	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msgc	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msgc	no	yes
)	no	no
;	no	no
}	no	no
doneSignal	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
workers	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
messageCount	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
workers	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
String	no	yes
worker	yes	yes
:	no	no
workers	no	yes
)	no	no
{	no	no

msga	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msga	no	yes
)	no	no
;	no	no
Message	no	yes
msgb	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msgb	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msgb	no	yes
)	no	no
;	no	no
}	no	no
new	no	yes
Thread	no	yes
(	no	no
worker2	no	yes
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
worker2Started	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
perBatch	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
msgc	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msgc	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msgc	no	yes
)	no	no
;	no	no
}	no	no
doneSignal	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageGroups	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageGroups	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
2	no	no
*	no	no
perBatch	no	yes
,	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
messageCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
messageGroups	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
2	no	no
,	no	no
messageGroups	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Message	no	yes
message	no	yes
=	no	no
generateMessage	no	yes
(	no	no
session	no	yes
,	no	no
group	no	yes
,	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
prod	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
messagesSent	no	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
latchMessagesCreated	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
i	no	yes
==	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
latchGroupsAcquired	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
20	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
messagesSent	no	yes
+	no	no
)	no	no
;	no	no
prod	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
;	no	no
final	no	yes
Thread	no	yes
consumerThread1	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
con1	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
latchMessagesCreated	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
con1	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
break	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
formatMessage	no	yes
(	no	no
message	no	yes
)	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
messagesRecvd1	yes	yes
++	no	no
;	no	no
if	no	yes
(	no	no
messagesRecvd1	yes	yes
==	no	no
groupNames	no	yes
.	no	no
length	no	yes
)	no	no
{	no	no

con1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
final	no	yes
Thread	no	yes
consumerThread2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
latchGroupsAcquired	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
consumerThread1	no	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
Queue	no	yes
queue	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
queueName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
con2	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numConsumers	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumedCounters	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0l	no	yes
)	no	no
)	no	no
;	no	no
batchCounters	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
AtomicLong	no	yes
(	no	no
0l	no	yes
)	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
id	yes	yes
=	no	no
i	no	yes
;	no	no
executorService	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
getBatchSize	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
(	no	no
id	yes	yes
+	no	no
1	no	no
)	no	no
*	no	no
batchSize	yes	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
connectionSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
int	no	yes
batchSize	yes	yes
=	no	no
getBatchSize	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
connectionSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destWithPrefetch	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
;	no	no
AtomicLong	no	yes
consumed	yes	yes
=	no	no
consumedCounters	no	yes
.	no	no
get	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no
AtomicLong	no	yes
batches	no	yes
=	no	no
batchCounters	no	yes
.	no	no
get	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no

executorService	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
getBatchSize	no	yes
(	no	no
)	no	no
{	no	no
return	no	yes
(	no	no
id	yes	yes
+	no	no
1	no	no
)	no	no
*	no	no
batchSize	yes	yes
;	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Session	no	yes
connectionSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
int	no	yes
batchSize	yes	yes
=	no	no
getBatchSize	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
connectionSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destWithPrefetch	no	yes
(	no	no
destination	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
;	no	no
AtomicLong	no	yes
consumed	yes	yes
=	no	no
consumedCounters	no	yes
.	no	no
get	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no
AtomicLong	no	yes
batches	no	yes
=	no	no
batchCounters	no	yes
.	no	no
get	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
batchSize	yes	yes
+	no	no
+	no	no
totalConsumed	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
consumed	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
totalConsumed	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
<	no	no
numMessages	no	yes
)	no	no
{	no	no
message	no	yes
=	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
testMessageRerouting	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
received	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumer	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testMessageRerouting	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
received	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumer	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
MESSAGE_COUNT	no	yes
,	no	no
received	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
.	no	no
waitUntilStopped	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
assertNoUnhandeledExceptions	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
Thread	no	yes
,	no	no
Throwable	no	yes
>	no	no
e	yes	yes
:	no	no
unhandeledExceptions	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

brokerSslContext	no	yes
.	no	no
setTrustStore	no	yes
(	no	no
TRUST_KEYSTORE	no	yes
)	no	no
;	no	no
brokerSslContext	no	yes
.	no	no
setTrustStorePassword	no	yes
(	no	no
PASSWORD	no	yes
)	no	no
;	no	no
brokerSslContext	no	yes
.	no	no
afterPropertiesSet	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerC	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerC	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
brokerC	no	yes
.	no	no
addConnector	no	yes
(	no	no
brokerCUri	no	yes
)	no	no
;	no	no
brokerC	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerB	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerB	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
brokerB	no	yes
.	no	no
addConnector	no	yes
(	no	no
brokerBUri	yes	yes
)	no	no
;	no	no
brokerB	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerA	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerA	no	yes
.	no	no
setNetworkConnectorStartAsync	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
NetworkConnector	no	yes
networkConnector	no	yes
=	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
brokerBUri	yes	yes
)	no	no
;	no	no
networkConnector	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no

brokerSslContext	no	yes
.	no	no
afterPropertiesSet	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerC	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerC	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
brokerC	no	yes
.	no	no
addConnector	no	yes
(	no	no
brokerCUri	yes	yes
)	no	no
;	no	no
brokerC	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerB	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerB	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
brokerB	no	yes
.	no	no
addConnector	no	yes
(	no	no
brokerBUri	no	yes
)	no	no
;	no	no
brokerB	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
BrokerService	no	yes
brokerA	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
brokerA	no	yes
.	no	no
setNetworkConnectorStartAsync	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
NetworkConnector	no	yes
networkConnector	no	yes
=	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
brokerBUri	no	yes
)	no	no
;	no	no
networkConnector	no	yes
.	no	no
setSslContext	no	yes
(	no	no
brokerSslContext	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerBUri	no	yes
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
brokerCUri	yes	yes
)	no	no
;	no	no

bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
proxyToB	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBroker	no	yes
(	no	no
brokerA	no	yes
,	no	no
brokerCUri	no	yes
)	no	no
;	no	no
Executor	no	yes
e	yes	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
e	yes	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
brokerA	no	yes
.	no	no
setNetworkConnectorStartAsync	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
brokerA	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	yes	yes
)	no	no
{	no	no

Thread	no	yes
slowWaitThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
slowConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
slowConsumerTime	yes	yes
.	no	no
set	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ex	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
ex	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
fastWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slowWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
,	no	no
FAST_SHARED_QUEUE	no	yes
,	no	no
fastConsumerLatch	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
slowConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
SLOW_SHARED_QUEUE	no	yes
,	no	no
slowConsumerLatch	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messageIdList	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
consumers	no	yes
.	no	no
get	no	yes
(	no	no
slowConsumer	no	yes
)	no	no
;	no	no
messageIdList	no	yes
.	no	no
setProcessingDelay	no	yes
(	no	no
SLOW_CONSUMER_DELAY_MILLIS	no	yes
)	no	no
;	no	no

slowConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
slowConsumerTime	yes	yes
.	no	no
set	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ex	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
ex	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
fastWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slowWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
,	no	no
fastDestination	no	yes
,	no	no
fastConsumerLatch	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
slowConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
slowDestination	no	yes
,	no	no
slowConsumerLatch	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messageIdList	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
consumers	no	yes
.	no	no
get	no	yes
(	no	no
slowConsumer	no	yes
)	no	no
;	no	no
messageIdList	no	yes
.	no	no
setProcessingDelay	no	yes
(	no	no
SLOW_CONSUMER_DELAY_MILLIS	no	yes
)	no	no
;	no	no
persistentDelivery	no	yes
=	no	no
false	no	yes
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
fastDestination	no	yes
,	no	no
NUM_MESSAGES	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
slowDestination	no	yes
,	no	no
NUM_MESSAGES	no	yes
)	no	no
;	no	no

slowConsumerLatch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
slowConsumerTime	yes	yes
.	no	no
set	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTimeMillis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
ex	no	yes
)	no	no
{	no	no
exceptions	no	yes
.	no	no
add	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
ex	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
fastWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
slowWaitThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
createConsumer	no	yes
(	no	no
,	no	no
fastDestination	no	yes
,	no	no
fastConsumerLatch	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
slowConsumer	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
slowDestination	no	yes
,	no	no
slowConsumerLatch	no	yes
)	no	no
;	no	no
MessageIdList	no	yes
messageIdList	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
consumers	no	yes
.	no	no
get	no	yes
(	no	no
slowConsumer	no	yes
)	no	no
;	no	no
messageIdList	no	yes
.	no	no
setProcessingDelay	no	yes
(	no	no
SLOW_CONSUMER_DELAY_MILLIS	no	yes
)	no	no
;	no	no
persistentDelivery	no	yes
=	no	no
false	no	yes
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
fastDestination	no	yes
,	no	no
NUM_MESSAGES	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
slowDestination	no	yes
,	no	no
NUM_MESSAGES	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
verifyPeerBrokerInfo	no	yes
(	no	no
BrokerItem	no	yes
brokerItem	no	yes
,	no	no
final	no	yes
int	no	yes
max	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerService	no	yes
broker	yes	yes
=	no	no
brokerItem	no	yes
.	no	no
broker	yes	yes
;	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	no	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
broker	yes	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
void	no	yes
testNewConsumerCausesNewDestinationToBeAutoCreated	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
wildcardText	no	yes
=	no	no
+	no	no
getDestinationString	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
wildcard	yes	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
wildcardText	no	yes
)	no	no
;	no	no

final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
beforeRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
afterRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	yes
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MSG_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
beforeRollback	no	yes
.	no	no
addAll	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
beforeRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
afterRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	yes
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MSG_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
beforeRollback	no	yes
.	no	no
addAll	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
received	yes	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
beforeRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
afterRollback	no	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	yes
received	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
MSG_COUNT	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
beforeRollback	no	yes
.	no	no
addAll	no	yes
(	no	no
received	yes	yes
)	no	no
;	no	no
received	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

@	no	no
Test	no	yes
public	no	yes
void	no	yes
testNonBlockingMessageDeleiveryIsDelayed	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
received	yes	yes
=	no	no
new	no	yes
LinkedHashSet	no	yes
<	no	no
Message	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
getRedeliveryPolicy	no	yes
(	no	no
)	no	no
.	no	no
setInitialRedeliveryDelay	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
6	no	no
)	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
destinationName	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

int	no	yes
count	no	yes
=	no	no
0	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
++	no	no
count	no	yes
>	no	no
10	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

final	no	yes
Destination	no	yes
dlq	no	yes
=	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
final	no	yes
MessageConsumer	no	yes
dlqConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dlq	no	yes
)	no	no
;	no	no
dlqConsumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
dlqed	no	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
received	yes	yes
.	no	no
add	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
MSG_COUNT	no	yes
+	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

Thread	no	yes
vmConsumerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setOptimizedMessageDispatch	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setObjectMessageSerializationDefered	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setCopyMessageOnSend	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerStarted	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQObjectMessage	no	yes
message	no	yes
=	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
30000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
MyObject	no	yes
object	yes	yes
=	no	no
(	no	no
MyObject	no	yes
)	no	no
message	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no

Thread	no	yes
vmConsumerThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
factory	no	yes
.	no	no
setOptimizedMessageDispatch	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setObjectMessageSerializationDefered	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
factory	no	yes
.	no	no
setCopyMessageOnSend	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
(	no	no
ActiveMQSession	no	yes
)	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
consumerStarted	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQObjectMessage	no	yes
message	no	yes
=	no	no
(	no	no
ActiveMQObjectMessage	no	yes
)	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
30000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
MyObject	no	yes
object	yes	yes
=	no	no
(	no	no
MyObject	no	yes
)	no	no
message	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testOfflineDurableSubscriberTimeout	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
AtomicBoolean	no	yes
foundLogMessage	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
isGreaterOrEqual	no	yes
(	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
)	no	no
{	no	no

ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendMessage	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	no	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	no	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	no	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
jmsProducer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
producerSession	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
Message	no	yes
sendMessage	no	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendMessage	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
jmsProducer	no	yes
.	no	no
send	no	yes
(	no	no
sendMessage	no	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numberOfMessageSent	yes	yes
++	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessageSent	yes	yes
)	no	no
;	no	no
return	no	yes
numberOfMessageSent	yes	yes
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no

private	no	yes
int	no	yes
consumeMessages	no	yes
(	no	no
int	no	yes
numberOfMessage	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

private	no	yes
int	no	yes
consumeMessages	no	yes
(	no	no
int	no	yes
numberOfMessage	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberOfMessage	no	yes
)	no	no
;	no	no
int	no	yes
numberConsumedMessage	yes	yes
=	no	no
0	no	no
;	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
jmsConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
boolean	no	yes
consume	no	yes
=	no	no
true	no	yes
;	no	no
while	no	yes
(	no	no
consume	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
jmsConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

int	no	yes
numberConsumedMessage	no	yes
=	no	no
0	no	no
;	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ActiveMQConnection	no	yes
connection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
jmsConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
boolean	no	yes
consume	no	yes
=	no	no
true	no	yes
;	no	no
while	no	yes
(	no	no
consume	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
jmsConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberConsumedMessage	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
int	no	yes
newAppId	yes	yes
=	no	no
message	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
numberConsumedMessage	no	yes
++	no	no
;	no	no

MessageConsumer	no	yes
jmsConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
DESTINATION	no	yes
)	no	no
)	no	no
;	no	no
boolean	no	yes
consume	no	yes
=	no	no
true	no	yes
;	no	no
while	no	yes
(	no	no
consume	no	yes
)	no	no
{	no	no
Message	no	yes
message	no	yes
=	no	no
jmsConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numberConsumedMessage	no	yes
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
int	no	yes
newAppId	no	yes
=	no	no
message	no	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
;	no	no
numberConsumedMessage	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
newAppId	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
newAppId	no	yes
!=	no	no
(	no	no
consumedAppId	yes	yes
+	no	no
1	no	no
)	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
newAppId	no	yes
+	no	no
+	no	no
(	no	no
consumedAppId	yes	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
consumedAppId	yes	yes
=	no	no
newAppId	no	yes
;	no	no
session	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
numberConsumedMessage	no	yes
==	no	no
numberOfMessage	no	yes
)	no	no
{	no	no

protected	no	yes
void	no	yes
sendMessage	no	yes
(	no	no
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
messages	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
data	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
objectMessage	yes	yes
=	no	no
producerSession	no	yes
.	no	no
createObjectMessage	no	yes
(	no	no
data	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
objectMessage	yes	yes
)	no	no
;	no	no
producerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
synchronized	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
objectMessage	yes	yes
=	no	no
(	no	no
ObjectMessage	no	yes
)	no	no
m	no	yes
;	no	no
consumeMessage	no	yes
(	no	no
objectMessage	yes	yes
,	no	no
messages	no	yes
)	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
data	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1024	no	no
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
data	no	yes
+=	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
received	yes	yes
++	no	no
;	no	no

Connection	no	yes
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
data	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1024	no	no
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
data	no	yes
+=	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
received	yes	yes
++	no	no
;	no	no

MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
data	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1024	no	no
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
data	no	yes
+=	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Thread	no	yes
browserThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
received	yes	yes
++	no	no
;	no	no

Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
String	no	yes
data	no	yes
=	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
1024	no	no
*	no	no
2	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
data	no	yes
+=	no	no
;	no	no
}	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
data	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
QueueBrowser	no	yes
browser	no	yes
=	no	no
session	no	yes
.	no	no
createBrowser	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
Enumeration	no	yes
<	no	no
?	no	no
>	no	no
enumeration	no	yes
=	no	no
browser	no	yes
.	no	no
getEnumeration	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
received	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
enumeration	no	yes
.	no	no
hasMoreElements	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
m	yes	yes
=	no	no
(	no	no
Message	no	yes
)	no	no
enumeration	no	yes
.	no	no
nextElement	no	yes
(	no	no
)	no	no
;	no	no
received	yes	yes
++	no	no
;	no	no

private	no	yes
MessageConsumer	no	yes
consumeVerifyOrder	no	yes
(	no	no
Session	no	yes
session	no	yes
,	no	no
final	no	yes
int	no	yes
num	no	yes
,	no	no
final	no	yes
int	no	yes
base	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
MessageConsumer	no	yes
messageConsumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
num	no	yes
;	no	no
)	no	no
{	no	no
Message	no	yes
message	yes	yes
=	no	no
messageConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
assertEquals	no	yes
(	no	no
i	no	yes
+	no	no
base	no	yes
,	no	no
message	yes	yes
.	no	no
getIntProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
;	no	no

public	no	yes
void	no	yes
testTransaction	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
queue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	yes	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	no	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	no	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	yes	yes
)	no	no
{	no	no

catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e1	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
tm	yes	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
tm	yes	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
new	no	yes
Date	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
4	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessages	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
4	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
@	no	no
Ignore	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessagesMoreThanPageSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
@	no	no
Ignore	no	yes
(	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessagesMoreThanPageSize	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
ConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
5	no	no
,	no	no
message	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessagesWithJmsBrowser	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	yes	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessagesWithJmsBrowser	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	no	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testPriorityMessagesWithJmsBrowser	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
-	no	no
1	no	no
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	no	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
produceMessages	no	yes
(	no	no
1	no	no
,	no	no
5	no	no
,	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
i	no	yes
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumeOneMessage	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
5	no	no
,	no	no
message	no	yes
.	no	no
getJMSPriority	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testJmsBrowserGetsPagedIn	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	yes	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testJmsBrowserGetsPagedIn	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	yes	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
browsed	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
browsed	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumeOneMessage	no	yes
(	no	no
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
browsed	yes	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
120000	no	no
)	no	no
public	no	yes
void	no	yes
testJmsBrowserGetsPagedIn	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
int	no	yes
numToSend	no	yes
=	no	no
5	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
ITERATIONS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
produceMessages	no	yes
(	no	no
numToSend	no	yes
,	no	no
4	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
browsed	no	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
consumeOneMessage	no	yes
(	no	no
,	no	no
Session	no	yes
.	no	no
CLIENT_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
browsed	no	yes
=	no	no
browseMessages	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
browsed	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Message	no	yes
>	no	no
consumeList	yes	yes
=	no	no
consumeMessages	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
consumerProducer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
received	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
consumerProducer	no	yes
.	no	no
send	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
received	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
sendSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
realReplyQ	no	yes
)	no	no
;	no	no
TextMessage	no	yes
reply	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
replyConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
receiveTimeout	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
reply	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
reply	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
BrokerService	no	yes
brokerService	no	yes
:	no	no
brokers	no	yes
)	no	no
{	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	yes	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
regionBroker	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
tempTopics	yes	yes
=	no	no
regionBroker	yes	yes
.	no	no
getTempTopicRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
;	no	no

consumerProducer	no	yes
.	no	no
send	no	yes
(	no	no
consumerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
received	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
consumerConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
sendSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
realReplyQ	no	yes
)	no	no
;	no	no
TextMessage	no	yes
reply	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
replyConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
receiveTimeout	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
reply	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
,	no	no
reply	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sendConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
BrokerService	no	yes
brokerService	no	yes
:	no	no
brokers	no	yes
)	no	no
{	no	no
final	no	yes
RegionBroker	no	yes
regionBroker	yes	yes
=	no	no
(	no	no
RegionBroker	no	yes
)	no	no
brokerService	no	yes
.	no	no
getRegionBroker	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
regionBroker	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Map	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
tempTopics	no	yes
=	no	no
regionBroker	yes	yes
.	no	no
getTempTopicRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
regionBroker	yes	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tempTopics	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
tempQ	yes	yes
=	no	no
regionBroker	yes	yes
.	no	no
getTempQueueRegion	no	yes
(	no	no
)	no	no
.	no	no
getDestinationMap	no	yes
(	no	no
)	no	no
;	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_RESPONDENTS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
respondentThreadPool	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
EchoRespondent	no	yes
(	no	no
brokerAFactory	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
ExecutorService	no	yes
senderThreadPool	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
BrokerItem	no	yes
brokerC	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
BROKER_C	no	yes
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
brokerCFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerC	no	yes
.	no	no
broker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_SENDS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
senderThreadPool	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
MessageSender	no	yes
(	no	no
brokerCFactory	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
senderThreadPool	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
senderThreadPool	no	yes
.	no	no
awaitTermination	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
15	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
shutdown	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
HashSet	no	yes
<	no	no
NetworkBridge	no	yes
>	no	no
bridgesEnd	yes	yes
=	no	no
new	no	yes
HashSet	no	yes
<	no	no
NetworkBridge	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
NetworkConnector	no	yes
networkConnector	no	yes
:	no	no
networkConnectors	no	yes
)	no	no
{	no	no
bridgesEnd	yes	yes
.	no	no
addAll	no	yes
(	no	no
networkConnector	no	yes
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

TextMessage	no	yes
msg	yes	yes
;	no	no
MessageClient	no	yes
cons_client	no	yes
;	no	no
int	no	yes
cur	no	yes
;	no	no
int	no	yes
tot_expected	no	yes
;	no	no
resp_cons	no	yes
=	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
resp_dest	no	yes
)	no	no
;	no	no
cons_client	no	yes
=	no	no
new	no	yes
MessageClient	no	yes
(	no	no
resp_cons	no	yes
,	no	no
num_msg	no	yes
)	no	no
;	no	no
cons_client	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
cur	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
cur	no	yes
<	no	no
num_msg	no	yes
)	no	no
&&	no	no
(	no	no
!	no	no
fatalTestError	no	yes
)	no	no
)	no	no
{	no	no
msg	yes	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
100	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
resp_dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cur	no	yes
==	no	no
(	no	no
num_msg	no	yes
-	no	no
1	no	no
)	no	no
)	no	no
msg	yes	yes
.	no	no
setBooleanProperty	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
sendWithRetryOnDeletedDest	no	yes
(	no	no
req_prod	no	yes
,	no	no
msg	yes	yes
)	no	no
;	no	no

cur	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
(	no	no
cur	no	yes
<	no	no
num_msg	no	yes
)	no	no
&&	no	no
(	no	no
!	no	no
fatalTestError	no	yes
)	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setIntProperty	no	yes
(	no	no
,	no	no
100	no	no
+	no	no
cur	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
resp_dest	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cur	no	yes
==	no	no
(	no	no
num_msg	no	yes
-	no	no
1	no	no
)	no	no
)	no	no
msg	no	yes
.	no	no
setBooleanProperty	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
sendWithRetryOnDeletedDest	no	yes
(	no	no
req_prod	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
cur	no	yes
++	no	no
;	no	no
}	no	no
cons_client	no	yes
.	no	no
waitShutdown	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
)	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
else	no	yes
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tot_expected	yes	yes
=	no	no
num_msg	no	yes
*	no	no
(	no	no
echoResponseFill	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	no	yes
.	no	no
getNumMsgReceived	no	yes
(	no	no
)	no	no
==	no	no
tot_expected	yes	yes
)	no	no
{	no	no

msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setJMSReplyTo	no	yes
(	no	no
resp_dest	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
cur	no	yes
==	no	no
(	no	no
num_msg	no	yes
-	no	no
1	no	no
)	no	no
)	no	no
msg	no	yes
.	no	no
setBooleanProperty	no	yes
(	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
sendWithRetryOnDeletedDest	no	yes
(	no	no
req_prod	no	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
msg	no	yes
)	no	no
;	no	no
cur	no	yes
++	no	no
;	no	no
}	no	no
cons_client	yes	yes
.	no	no
waitShutdown	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	yes	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
)	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
else	no	yes
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tot_expected	yes	yes
=	no	no
num_msg	no	yes
*	no	no
(	no	no
echoResponseFill	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
cons_client	yes	yes
.	no	no
getNumMsgReceived	no	yes
(	no	no
)	no	no
==	no	no
tot_expected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tot_expected	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
testError	no	yes
=	no	no
true	no	yes
;	no	no
if	no	yes
(	no	no
cons_client	yes	yes
.	no	no
getNumMsgReceived	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
fatalTestError	no	yes
=	no	no
true	no	yes
;	no	no

public	no	yes
void	no	yes
testTempTopic	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
int	no	yes
num_msg	yes	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testTopic	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
String	no	yes
topic_name	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testTempQueue	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

public	no	yes
void	no	yes
testQueue	no	yes
(	no	no
String	no	yes
prod_broker_url	yes	yes
,	no	no
String	no	yes
cons_broker_url	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
num_msg	yes	yes
;	no	no
Connection	no	yes
conn	no	yes
;	no	no
Session	no	yes
sess	no	yes
;	no	no
String	no	yes
queue_name	no	yes
;	no	no
Destination	no	yes
cons_dest	no	yes
;	no	no
num_msg	yes	yes
=	no	no
5	no	no
;	no	no

Thread	no	yes
start2	no	yes
;	no	no
Thread	no	yes
start3	no	yes
;	no	no
Thread	no	yes
start4	no	yes
;	no	no
ThreadPoolExecutor	no	yes
clientExecPool	no	yes
;	no	no
final	no	yes
CountDownLatch	no	yes
clientCompletionLatch	no	yes
;	no	no
int	no	yes
iter	no	yes
;	no	no
fatalTestError	no	yes
=	no	no
false	no	yes
;	no	no
testError	no	yes
=	no	no
false	no	yes
;	no	no
clientExecPool	no	yes
=	no	no
new	no	yes
ThreadPoolExecutor	no	yes
(	no	no
CONCURRENT_CLIENT_COUNT	no	yes
,	no	no
CONCURRENT_CLIENT_COUNT	no	yes
,	no	no
0	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
,	no	no
new	no	yes
ArrayBlockingQueue	no	yes
<	no	no
Runnable	no	yes
>	no	no
(	no	no
10000	no	no
)	no	no
)	no	no
;	no	no
clientCompletionLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
TOTAL_CLIENT_ITER	no	yes
)	no	no
;	no	no
start1	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
edge1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

testError	no	yes
=	no	no
false	no	yes
;	no	no
clientExecPool	no	yes
=	no	no
new	no	yes
ThreadPoolExecutor	no	yes
(	no	no
CONCURRENT_CLIENT_COUNT	no	yes
,	no	no
CONCURRENT_CLIENT_COUNT	no	yes
,	no	no
0	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
,	no	no
new	no	yes
ArrayBlockingQueue	no	yes
<	no	no
Runnable	no	yes
>	no	no
(	no	no
10000	no	no
)	no	no
)	no	no
;	no	no
clientCompletionLatch	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
TOTAL_CLIENT_ITER	no	yes
)	no	no
;	no	no
start1	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
edge1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
edge2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
edge2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start3	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
core1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

start2	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
edge2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start3	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
core1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
null	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
start4	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
;	no	no
start1	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
start2	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
start3	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
start4	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
start1	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
start2	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
start3	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
start4	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
traffic_gen	no	yes
=	no	no
new	no	yes
TopicTrafficGenerator	no	yes
(	no	no
edge1	no	yes
.	no	no
getConnectionUrl	no	yes
(	no	no
)	no	no
,	no	no
edge2	no	yes
.	no	no
getConnectionUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
traffic_gen	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
echo_svc	no	yes
=	no	no
new	no	yes
EchoService	no	yes
(	no	no
,	no	no
edge1	no	yes
.	no	no
getConnectionUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
echo_svc	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
iter	yes	yes
=	no	no
0	no	no
;	no	no

topic	no	yes
=	no	no
null	no	yes
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
=	no	no
null	no	yes
;	no	no
t	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
t	no	yes
;	no	no
connection	no	yes
.	no	no
setClientID	no	yes
(	no	no
clientID	no	yes
)	no	no
;	no	no
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
session	no	yes
.	no	no
createTopic	no	yes
(	no	no
topicName	no	yes
)	no	no
;	no	no
subscriber	no	yes
=	no	no
session	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
subscriberName	no	yes
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	yes
time	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
message	no	yes
=	no	no
subscriber	no	yes
.	no	no
receive	no	yes
(	no	no
15000L	no	yes
)	no	no
;	no	no
long	no	yes
elapsed	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
time	no	yes
;	no	no

public	no	yes
void	no	yes
testNoDuplicateQueueSubsHasLowestPriority	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
boolean	no	yes
suppressQueueDuplicateSubscriptions	no	yes
=	no	no
true	no	yes
;	no	no
boolean	no	yes
decreaseNetworkConsumerPriority	no	yes
=	no	no
true	no	yes
;	no	no
bridgeAllBrokers	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
suppressQueueDuplicateSubscriptions	no	yes
,	no	no
decreaseNetworkConsumerPriority	no	yes
)	no	no
;	no	no
final	no	yes
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
BrokerItem	no	yes
brokerB	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
brokerB	no	yes
.	no	no
broker	no	yes
.	no	no
setPlugins	no	yes
(	no	no
new	no	yes
BrokerPlugin	no	yes
[	no	no
]	no	no
{	no	no
new	no	yes
BrokerPlugin	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
Broker	no	yes
installPlugin	no	yes
(	no	no
Broker	no	yes
broker	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
new	no	yes
BrokerFilter	no	yes
(	no	no
broker	no	yes
)	no	no
{	no	no
final	no	yes
AtomicInteger	no	yes
count	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
preProcessDispatch	no	yes
(	no	no
MessageDispatch	no	yes
messageDispatch	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
messageDispatch	yes	yes
.	no	no
getDestination	no	yes
(	no	no
)	no	no
.	no	no
getPhysicalName	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
count	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testSubscriptionsCleanedUpRace	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerItem	no	yes
brokerA	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
BROKER_A	no	yes
)	no	no
;	no	no
Runnable	no	yes
tester	no	yes
=	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITER	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
conn	no	yes
=	no	no
brokerA	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
ECHO_QUEUE_NAME	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testSubscriptionsCleanedUpAfterConnectionClose	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
BrokerItem	no	yes
brokerA	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
BROKER_A	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
NUM_ITER	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
conn	no	yes
=	no	no
brokerA	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
ECHO_QUEUE_NAME	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
installEchoClientOnBrokerC	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
BrokerItem	no	yes
brokerC	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
BROKER_C	no	yes
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
brokerC	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
sess	no	yes
=	no	no
conn	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
sess	no	yes
.	no	no
createQueue	no	yes
(	no	no
ECHO_QUEUE_NAME	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer	no	yes
=	no	no
sess	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
TextMessage	no	yes
textMessage	yes	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
message	no	yes
;	no	no
try	no	yes
{	no	no
Destination	no	yes
replyTo	no	yes
=	no	no
message	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
sess	no	yes
.	no	no
createProducer	no	yes
(	no	no
replyTo	no	yes
)	no	no
;	no	no
Message	no	yes
response	no	yes
=	no	no
sess	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
textMessage	yes	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

brokerItem	no	yes
.	no	no
destroy	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
BrokerService	no	yes
restartedBroker	no	yes
=	no	no
createAndConfigureBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeAndConfigureBrokers	no	yes
(	no	no
,	no	no
,	no	no
dynamicOnly	no	yes
,	no	no
networkTTL	no	yes
,	no	no
conduitSubs	no	yes
)	no	no
;	no	no
bridgeAndConfigureBrokers	no	yes
(	no	no
,	no	no
,	no	no
dynamicOnly	no	yes
,	no	no
networkTTL	no	yes
,	no	no
conduitSubs	no	yes
)	no	no
;	no	no
restartedBroker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
clientA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
10	no	no
)	no	no
;	no	no
msgsA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientA	no	yes
)	no	no
;	no	no
msgsA	yes	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
msgsB	no	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
11	no	no
)	no	no
;	no	no
msgsC	no	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
11	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
11	no	no
,	no	no
msgsB	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
11	no	no
,	no	no
msgsC	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
brokerItem	no	yes
=	no	no
brokers	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
brokerItem	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
brokerItem	no	yes
.	no	no
destroy	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
restartedBroker	no	yes
=	no	no
createAndConfigureBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeAndConfigureBrokers	no	yes
(	no	no
,	no	no
,	no	no
dynamicOnly	no	yes
,	no	no
networkTTL	no	yes
,	no	no
conduitSubs	no	yes
)	no	no
;	no	no
bridgeAndConfigureBrokers	no	yes
(	no	no
,	no	no
,	no	no
dynamicOnly	no	yes
,	no	no
networkTTL	no	yes
,	no	no
conduitSubs	no	yes
)	no	no
;	no	no
restartedBroker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
clientA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
msgsA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientA	no	yes
)	no	no
;	no	no

private	no	yes
void	no	yes
doTestWithConduit	no	yes
(	no	no
boolean	no	yes
conduitPlease	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
brokerA	no	yes
=	no	no
newBroker	no	yes
(	no	no
)	no	no
;	no	no
brokerB	no	yes
=	no	no
newBroker	no	yes
(	no	no
)	no	no
;	no	no
brokerB	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
NetworkConnector	no	yes
networkConnector	yes	yes
=	no	no
bridgeBrokers	no	yes
(	no	no
brokerA	no	yes
,	no	no
brokerB	no	yes
,	no	no
conduitPlease	no	yes
)	no	no
;	no	no
brokerA	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
while	no	yes
(	no	no
networkConnector	yes	yes
.	no	no
activeBridges	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

final	no	yes
CountDownLatch	no	yes
consumersRegistered	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
numConsumers	no	yes
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numConsumers	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
final	no	yes
int	no	yes
id	yes	yes
=	no	no
i	no	yes
;	no	no
consumersExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
Connection	no	yes
connection	no	yes
=	no	no
remoteConnectionFactoryForConsumers	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
session	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumerWithSelector	no	yes
=	no	no
session	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
,	no	no
(	no	no
id	yes	yes
%	no	no
2	no	no
==	no	no
0	no	no
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
consumerWithSelector	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	yes	yes
)	no	no
{	no	no
int	no	yes
messageCount	no	yes
=	no	no
receivedCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
allReceived	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
messageCount	no	yes
%	no	no
20000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

protected	no	yes
NetworkConnector	no	yes
bridgeBrokers	no	yes
(	no	no
BrokerService	no	yes
localBroker	no	yes
,	no	no
BrokerService	no	yes
remoteBroker	no	yes
,	no	no
boolean	no	yes
conduitPlease	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
uri	no	yes
=	no	no
+	no	no
remoteBroker	no	yes
.	no	no
getTransportConnectorByScheme	no	yes
(	no	no
)	no	no
.	no	no
getPublishableConnectString	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
NetworkConnector	no	yes
connector	no	yes
=	no	no
new	no	yes
DiscoveryNetworkConnector	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
uri	no	yes
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setName	no	yes
(	no	no
localBroker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
remoteBroker	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connector	no	yes
.	no	no
setConduitSubscriptions	no	yes
(	no	no
conduitPlease	yes	yes
)	no	no
;	no	no
localBroker	no	yes
.	no	no
addNetworkConnector	no	yes
(	no	no
connector	no	yes
)	no	no
;	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	yes	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no

protected	no	yes
ObjectName	no	yes
assertRegisteredObjectName	no	yes
(	no	no
String	no	yes
name	no	yes
)	no	no
throws	no	yes
MalformedObjectNameException	no	yes
,	no	no
NullPointerException	no	yes
{	no	no
ObjectName	no	yes
objectName	yes	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
mbeanServer	no	yes
.	no	no
isRegistered	no	yes
(	no	no
objectName	yes	yes
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testPendingTopicStat	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
consumerCon	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerCon	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer1	no	yes
)	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
subscriber1	yes	yes
=	no	no
null	no	yes
;	no	no
ObjectName	no	yes
query	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getName	no	yes
(	no	no
true	no	yes
)	no	no
+	no	no
+	no	no
topic	no	yes
.	no	no
getTopicName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
util	no	yes
.	no	no
Set	no	yes
<	no	no
ObjectName	no	yes
>	no	no
set	no	yes
=	no	no
mbeanServer	no	yes
.	no	no
queryNames	no	yes
(	no	no
query	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
ObjectName	no	yes
subscriberObjName1	no	yes
=	no	no
set	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
subscriber1	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
subscriberObjName1	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testPendingTopicStat	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Connection	no	yes
consumerCon	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
consumerSession	no	yes
=	no	no
consumerCon	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
consumer1	no	yes
)	no	no
;	no	no
DurableSubscriptionViewMBean	no	yes
subscriber1	yes	yes
=	no	no
null	no	yes
;	no	no
ObjectName	no	yes
query	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
domain	no	yes
+	no	no
+	no	no
getName	no	yes
(	no	no
true	no	yes
)	no	no
+	no	no
+	no	no
topic	no	yes
.	no	no
getTopicName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
util	no	yes
.	no	no
Set	no	yes
<	no	no
ObjectName	no	yes
>	no	no
set	no	yes
=	no	no
mbeanServer	no	yes
.	no	no
queryNames	no	yes
(	no	no
query	no	yes
,	no	no
null	no	yes
)	no	no
;	no	no
ObjectName	no	yes
subscriberObjName1	no	yes
=	no	no
set	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
subscriber1	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
mbeanServer	no	yes
,	no	no
subscriberObjName1	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriber1	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
topic	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
producerSessions	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	no	yes
+	no	no
)	no	no
;	no	no
producerCon	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriber1	no	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
20	no	no
,	no	no
subscriber1	no	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
con2	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session2	no	yes
=	no	no
con2	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session2	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
Listener	no	yes
listener	yes	yes
=	no	no
new	no	yes
Listener	no	yes
(	no	no
)	no	no
;	no	no
consumer2	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
numMessages	no	yes
==	no	no
listener	yes	yes
.	no	no
count	no	yes
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
20	no	no
,	no	no
subscriber1	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
con2	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
session2	no	yes
=	no	no
con2	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
session2	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
topic	no	yes
,	no	no
,	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
final	no	yes
Listener	no	yes
listener	no	yes
=	no	no
new	no	yes
Listener	no	yes
(	no	no
)	no	no
;	no	no
consumer2	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
numMessages	no	yes
==	no	no
listener	no	yes
.	no	no
count	no	yes
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
listener	no	yes
.	no	no
count	no	yes
)	no	no
;	no	no
int	no	yes
pq	no	yes
=	no	no
subscriber1	yes	yes
.	no	no
getPendingQueueSize	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
pq	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
pq	no	yes
)	no	no
;	no	no

c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
TopicSubscriber	no	yes
durable	no	yes
=	no	no
listenerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
createDestination	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
durable	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
durable	no	yes
=	no	no
listenerSession	no	yes
.	no	no
createDurableSubscriber	no	yes
(	no	no
createDestination	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
durable	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
this	no	yes
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
createDestination	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
long	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessagesToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
count	yes	yes
=	no	no
produced	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ObjectName	no	yes
>	no	no
subON	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
ArrayList	no	yes
<	no	no
DurableSubscriptionViewMBean	no	yes
>	no	no
subViews	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
subON	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subName	no	yes
:	no	no
subON	no	yes
)	no	no
{	no	no
subViews	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
:	no	no
subViews	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ObjectName	no	yes
>	no	no
subON	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
ArrayList	no	yes
<	no	no
DurableSubscriptionViewMBean	no	yes
>	no	no
subViews	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
subON	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subName	no	yes
:	no	no
subON	no	yes
)	no	no
{	no	no
subViews	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
:	no	no
subViews	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ObjectName	no	yes
>	no	no
subON	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
ArrayList	no	yes
<	no	no
DurableSubscriptionViewMBean	no	yes
>	no	no
subViews	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
subON	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subName	no	yes
:	no	no
subON	no	yes
)	no	no
{	no	no
subViews	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
:	no	no
subViews	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ObjectName	no	yes
>	no	no
subON	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	yes
ArrayList	no	yes
<	no	no
DurableSubscriptionViewMBean	no	yes
>	no	no
subViews	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getInactiveDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
subON	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getDurableTopicSubscribers	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
!	no	no
subON	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
ObjectName	no	yes
subName	no	yes
:	no	no
subON	no	yes
)	no	no
{	no	no
subViews	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
DurableSubscriptionViewMBean	no	yes
)	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
.	no	no
newProxyInstance	no	yes
(	no	no
subName	no	yes
,	no	no
DurableSubscriptionViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
for	no	yes
(	no	no
DurableSubscriptionViewMBean	no	yes
sub	yes	yes
:	no	no
subViews	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
getSubscriptionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sub	yes	yes
.	no	no
cursorSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
long	no	yes
count	yes	yes
=	no	no
consumed	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

connectionFactory	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setProducerWindowSize	no	yes
(	no	no
1024	no	no
)	no	no
;	no	no
ActiveMQPrefetchPolicy	no	yes
prefetchPolicy	no	yes
=	no	no
new	no	yes
ActiveMQPrefetchPolicy	no	yes
(	no	no
)	no	no
;	no	no
prefetchPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
listenerSession	no	yes
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
TopicProducerFlowControlTest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
blockedCounter	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
AdvisorySupport	yes	yes
.	no	no
FULL_TOPIC_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
blockedCounter	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no

connectionFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
listenerSession	no	yes
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
TopicProducerFlowControlTest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
blockedCounter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
FULL_TOPIC_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_NAME	no	yes
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getLongProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_COUNT	no	yes
)	no	no
+	no	no
+	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
blockedCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no
error	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

final	no	yes
AtomicInteger	no	yes
blockedCounter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
FULL_TOPIC_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
%	no	no
100	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_NAME	no	yes
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getLongProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_COUNT	no	yes
)	no	no
+	no	no
+	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
blockedCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	no	yes
)	no	no
{	no	no
error	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
warnings	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
doTestTransactedProducerBlockedAndClosedWillRelease	no	yes
(	no	no
final	no	yes
boolean	no	yes
alwaysSyncSend	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUrl	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
alwaysSyncSend	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ActiveMQPrefetchPolicy	no	yes
prefetchPolicy	no	yes
=	no	no
new	no	yes
ActiveMQPrefetchPolicy	no	yes
(	no	no
)	no	no
;	no	no
prefetchPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
listenerSession	no	yes
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
warnings	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
)	no	no
;	no	no
Appender	no	yes
appender	no	yes
=	no	no
new	no	yes
DefaultTestAppender	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
doAppend	no	yes
(	no	no
LoggingEvent	no	yes
event	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
event	yes	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
Level	no	yes
.	no	no
WARN	no	yes
)	no	no
&&	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
event	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
warnings	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
log4jLogger	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
Topic	no	yes
.	no	no
class	no	yes
)	no	no
;	no	no
log4jLogger	no	yes
.	no	no
addAppender	no	yes
(	no	no
appender	no	yes
)	no	no
;	no	no
try	no	yes
{	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
long	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessagesToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
count	yes	yes
=	no	no
produced	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

for	no	yes
(	no	no
long	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessagesToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
count	no	yes
=	no	no
produced	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	no	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Throwable	no	yes
ex	no	yes
)	no	no
{	no	no
ex	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
try	no	yes
{	no	no
producer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
session	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
}	no	no
}	no	no
;	no	no
producingThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no

ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
brokerUrl	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setAlwaysSyncSend	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setProducerWindowSize	no	yes
(	no	no
1024	no	no
)	no	no
;	no	no
ActiveMQPrefetchPolicy	no	yes
prefetchPolicy	no	yes
=	no	no
new	no	yes
ActiveMQPrefetchPolicy	no	yes
(	no	no
)	no	no
;	no	no
prefetchPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
listenerSession	no	yes
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
TopicProducerToSubFileCursorTest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
blockedCounter	yes	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
AdvisorySupport	yes	yes
.	no	no
FULL_TOPIC_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

prefetchPolicy	no	yes
.	no	no
setAll	no	yes
(	no	no
5000	no	no
)	no	no
;	no	no
connectionFactory	no	yes
.	no	no
setPrefetchPolicy	no	yes
(	no	no
prefetchPolicy	no	yes
)	no	no
;	no	no
Connection	no	yes
c	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
c	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
listenerSession	no	yes
=	no	no
c	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
listenerSession	no	yes
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
TopicProducerToSubFileCursorTest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
blockedCounter	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
listenerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
FULL_TOPIC_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
message	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
LOG	no	yes
.	no	no
error	yes	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_NAME	no	yes
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getLongProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_COUNT	no	yes
)	no	no
+	no	no
+	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
blockedCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	yes	yes
)	no	no
{	no	no
error	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
message	no	yes
.	no	no
getStringProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_NAME	no	yes
)	no	no
+	no	no
+	no	no
message	no	yes
.	no	no
getLongProperty	no	yes
(	no	no
AdvisorySupport	no	yes
.	no	no
MSG_PROPERTY_USAGE_COUNT	no	yes
)	no	no
+	no	no
+	no	no
blockedCounter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
blockedCounter	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
error	no	yes
)	no	no
{	no	no
error	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
final	no	yes
Session	no	yes
session	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
final	no	yes
MessageProducer	no	yes
producer	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
Thread	no	yes
producingThread	no	yes
=	no	no
new	no	yes
Thread	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
long	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numMessagesToSend	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	yes
count	yes	yes
=	no	no
produced	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
count	yes	yes
%	no	no
10000	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
testNoExceptionOnRedeliveryAckWithSimpleTopicConsumer	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
createDestination	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
gotException	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
setExceptionListener	no	yes
(	no	no
new	no	yes
ExceptionListener	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
void	no	yes
onException	no	yes
(	no	no
JMSException	no	yes
exception	yes	yes
)	no	no
{	no	no

final	no	yes
int	no	yes
MSG_COUNT	no	yes
=	no	no
2000	no	no
;	no	no
final	no	yes
AtomicBoolean	no	yes
error	no	yes
=	no	no
new	no	yes
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
done	no	yes
=	no	no
new	no	yes
CountDownLatch	no	yes
(	no	no
MSG_COUNT	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
new	no	yes
Runnable	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
run	no	yes
(	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
consumedMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
consumedMessage	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
consumedMessage	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ackMode	no	yes
==	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
&&	no	no
commitBatch	no	yes
&&	no	no
(	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
50	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	yes	yes
)	no	no
{	no	no

for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
MSG_COUNT	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Message	no	yes
consumedMessage	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
consumedMessage	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
done	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
consumedMessage	no	yes
.	no	no
acknowledge	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
ackMode	no	yes
==	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
&&	no	no
commitBatch	no	yes
&&	no	no
(	no	no
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
%	no	no
50	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
error	no	yes
.	no	no
set	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
}	no	no
finally	no	yes
{	no	no
if	no	yes
(	no	no
ackMode	no	yes
==	no	no
Session	no	yes
.	no	no
SESSION_TRANSACTED	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no

consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
int	no	yes
msgCount	no	yes
;	no	no
int	no	yes
msgCommittedCount	no	yes
;	no	no
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
msgCount	no	yes
++	no	no
;	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	yes	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tm	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
msgRedelivered	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	yes	yes
+	no	no
(	no	no
tm	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msgCount	no	yes
==	no	no
3	no	no
)	no	no
{	no	no
msgRolledBack	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	yes	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

try	no	yes
{	no	no
msgCount	no	yes
++	no	no
;	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	yes	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
tm	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
msgRedelivered	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	yes	yes
+	no	no
(	no	no
tm	no	yes
.	no	no
getJMSRedelivered	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msgCount	no	yes
==	no	no
3	no	no
)	no	no
{	no	no
msgRolledBack	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	yes	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
msgCommittedCount	no	yes
++	no	no
;	no	no
msgCommitted	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	yes	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
msgCommittedCount	no	yes
++	no	no
;	no	no
msgCommitted	no	yes
.	no	no
add	no	yes
(	no	no
receivedText	no	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
msgCommittedCount	no	yes
==	no	no
numMessages	no	yes
)	no	no
{	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	yes	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e1	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e1	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
numMessages	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
tm	yes	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
testTransaction	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
ActiveMQConnectionFactory	no	yes
factory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
=	no	no
factory	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
queue	no	yes
=	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
consumerSession	no	yes
=	no	no
connection	no	yes
.	no	no
createSession	no	yes
(	no	no
true	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
producer	no	yes
=	no	no
producerSession	no	yes
.	no	no
createProducer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	yes	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no

consumer	no	yes
=	no	no
consumerSession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
queue	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setMessageListener	no	yes
(	no	no
new	no	yes
MessageListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onMessage	no	yes
(	no	no
Message	no	yes
m	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
TextMessage	no	yes
tm	no	yes
=	no	no
(	no	no
TextMessage	no	yes
)	no	no
m	no	yes
;	no	no
receivedText	no	yes
=	no	no
tm	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
receivedText	no	yes
)	no	no
;	no	no
consumerSession	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	yes	yes
)	no	no
{	no	no

catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
consumerSession	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e1	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e1	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
TextMessage	no	yes
tm	yes	yes
=	no	no
null	no	yes
;	no	no
try	no	yes
{	no	no
tm	yes	yes
=	no	no
producerSession	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
tm	yes	yes
.	no	no
setText	no	yes
(	no	no
+	no	no
new	no	yes
Date	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
messagesFromC	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
==	no	no
100	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messagesFromC	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
100	no	no
,	no	no
messagesFromC	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
destroyBroker	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
100	no	no
)	no	no
;	no	no
BrokerService	no	yes
broker	no	yes
=	no	no
createBroker	no	yes
(	no	no
new	no	yes
URI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
bridgeBrokerPair	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
messagesFromC	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
==	no	no
200	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
setUp	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
File	no	yes
dataDir	yes	yes
=	no	no
new	no	yes
File	no	yes
(	no	no
IOHelper	no	yes
.	no	no
getDefaultDataDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
clientA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
clientB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
5000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
final	no	yes
MessageIdList	no	yes
msgsA	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientA	no	yes
)	no	no
;	no	no
final	no	yes
MessageIdList	no	yes
msgsB	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientB	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
msgsA	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
+	no	no
msgsB	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
==	no	no
6000	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
clientA	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
clientB	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
dest	no	yes
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
5000	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
final	no	yes
MessageIdList	no	yes
msgsA	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientA	no	yes
)	no	no
;	no	no
final	no	yes
MessageIdList	no	yes
msgsB	yes	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
clientB	no	yes
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
msgsA	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
+	no	no
msgsB	yes	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
==	no	no
6000	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsA	no	yes
.	no	no
getMessageCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTwoClientsReceiveOneClientReconnects	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
applyRateLimitNetworkFilter	no	yes
(	no	no
0.2	no	no
*	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
broker1	no	yes
,	no	no
broker2	no	yes
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
broker2	no	yes
,	no	no
broker1	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker1	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker2	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
msgsClient1	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
msgsClient2	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
doTwoClientsReceiveOneClientReconnects	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
applyRateLimitNetworkFilter	no	yes
(	no	no
0.2	no	no
*	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
broker1	no	yes
,	no	no
broker2	no	yes
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
broker2	no	yes
,	no	no
broker1	no	yes
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker1	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker2	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
msgsClient1	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
msgsClient2	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient1	no	yes
)	no	no
;	no	no

startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
Destination	no	yes
dest	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker1	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
client2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker2	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
msgsClient1	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
msgsClient2	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient1	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient2	yes	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
client1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
msgsClient2	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no

sendMessages	no	yes
(	no	no
,	no	no
dest	no	yes
,	no	no
MESSAGE_COUNT	no	yes
)	no	no
;	no	no
msgsClient1	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
msgsClient2	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient1	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient2	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
client1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
msgsClient2	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient2	no	yes
)	no	no
;	no	no
client1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker1	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
msgsClient1	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
client1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient2	yes	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
client1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
msgsClient2	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient2	yes	yes
)	no	no
;	no	no
client1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
broker1	no	yes
,	no	no
dest	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
msgsClient1	no	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client1	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
client1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgsClient1	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
msgsClient2	yes	yes
+=	no	no
receiveExactMessages	no	yes
(	no	no
client2	no	yes
,	no	no
(	no	no
int	no	yes
)	no	no
(	no	no
MESSAGE_COUNT	no	yes
*	no	no
0.20	no	no
)	no	no
)	no	no
;	no	no
client2	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

protected	no	yes
int	no	yes
receiveExactMessages	no	yes
(	no	no
MessageConsumer	no	yes
consumer	no	yes
,	no	no
int	no	yes
msgCount	yes	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
Message	no	yes
msg	no	yes
;	no	no
int	no	yes
i	yes	yes
;	no	no
for	no	yes
(	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
msgCount	yes	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
msg	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
4000	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
msg	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
bridgeBrokers	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
waitForBridgeFormation	no	yes
(	no	no
)	no	no
;	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
iterations	no	yes
=	no	no
30	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
iterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendReceiveTempQueueMessage	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
brokerAView	yes	yes
=	no	no
createView	no	yes
(	no	no
,	no	no
,	no	no
ActiveMQDestination	no	yes
.	no	no
TOPIC_TYPE	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
int	no	yes
iterations	no	yes
=	no	no
30	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
iterations	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
sendReceiveTempQueueMessage	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
waitForMinTopicRegionConsumerCount	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
brokerAView	no	yes
=	no	no
createView	no	yes
(	no	no
,	no	no
,	no	no
ActiveMQDestination	no	yes
.	no	no
TOPIC_TYPE	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
brokerAView	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	yes
iterations	no	yes
*	no	no
2	no	no
==	no	no
brokerAView	no	yes
.	no	no
getEnqueueCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
DestinationViewMBean	no	yes
brokerBView	yes	yes
=	no	no
createView	no	yes
(	no	no
,	no	no
,	no	no
ActiveMQDestination	no	yes
.	no	no
TOPIC_TYPE	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no

public	no	yes
void	no	yes
testMessageLeaks	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
clearSelectorCacheFiles	no	yes
(	no	no
)	no	no
;	no	no
startAllBrokers	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
BrokerService	no	yes
brokerA	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
broker	no	yes
;	no	no
ActiveMQDestination	no	yes
consumerQueue	no	yes
=	no	no
createDestination	no	yes
(	no	no
,	no	no
false	no	yes
)	no	no
;	no	no
MessageConsumer	no	yes
consumer1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
MessageConsumer	no	yes
consumer2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
ActiveMQTopic	no	yes
virtualTopic	no	yes
=	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
;	no	no
ProducerThreadTester	no	yes
producerTester	yes	yes
=	no	no
createProducerTester	no	yes
(	no	no
,	no	no
virtualTopic	no	yes
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
setRunIndefinitely	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
setSleep	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
addMessageProperty	no	yes
(	no	no
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
addMessageProperty	no	yes
(	no	no
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no

producerTester	yes	yes
.	no	no
addMessageProperty	no	yes
(	no	no
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
addMessageProperty	no	yes
(	no	no
)	no	no
;	no	no
producerTester	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	yes
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentCount	yes	yes
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
MessageIdList	no	yes
consumer1Messages	no	yes
=	no	no
getConsumerMessages	no	yes
(	no	no
,	no	no
consumer1	no	yes
)	no	no
;	no	no
consumer1Messages	no	yes
.	no	no
waitForMessagesToArrive	no	yes
(	no	no
50	no	no
,	no	no
1000	no	no
)	no	no
;	no	no
consumer1	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerA	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no

consumer1	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerA	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentCount	yes	yes
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
consumer2	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerA	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no

return	no	yes
brokerA	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentCount	yes	yes
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
consumer2	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
consumer2	no	yes
=	no	no
createConsumer	no	yes
(	no	no
,	no	no
consumerQueue	no	yes
,	no	no
)	no	no
;	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
return	no	yes
brokerA	no	yes
.	no	no
getDestination	no	yes
(	no	no
new	no	yes
ActiveMQQueue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
2	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentCount	yes	yes
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
producerTester	yes	yes
.	no	no
getCountForProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
2000	no	no
)	no	no
;	no	no
currentCount	yes	yes
=	no	no
producerTester	yes	yes
.	no	no
getSentCount	no	yes
(	no	no
)	no	no
;	no	no

producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
ActiveMQConnection	no	yes
replyConnection	no	yes
=	no	no
(	no	no
ActiveMQConnection	no	yes
)	no	no
replyFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
replyConnection	no	yes
.	no	no
setWatchTopicAdvisories	no	yes
(	no	no
false	no	yes
)	no	no
;	no	no
replyConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
Session	no	yes
replySession	no	yes
=	no	no
replyConnection	no	yes
.	no	no
createSession	no	yes
(	no	no
false	no	yes
,	no	no
Session	no	yes
.	no	no
AUTO_ACKNOWLEDGE	no	yes
)	no	no
;	no	no
ActiveMQMessageConsumer	no	yes
replyConsumer	no	yes
=	no	no
(	no	no
ActiveMQMessageConsumer	no	yes
)	no	no
replySession	no	yes
.	no	no
createConsumer	no	yes
(	no	no
requestReplyDest	no	yes
)	no	no
;	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
msg	no	yes
=	no	no
replyConsumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
,	no	no
msg	no	yes
)	no	no
;	no	no
MessageProducer	no	yes
replyProducer	no	yes
=	no	no
replySession	no	yes
.	no	no
createProducer	no	yes
(	no	no
msg	no	yes
.	no	no
getJMSReplyTo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replyProducer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
+	no	no
i	yes	yes
)	no	no
)	no	no
;	no	no
replyConnection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
javax	no	yes
.	no	no
jms	no	yes
.	no	no
Message	no	yes
reply	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
tempDest	no	yes
+	no	no
+	no	no
consumer	no	yes
.	no	no
getConsumerId	no	yes
(	no	no
)	no	no
,	no	no
reply	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
tempDest	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no

private	no	yes
void	no	yes
assertNoUnhandledExceptions	no	yes
(	no	no
)	no	no
{	no	no
for	no	yes
(	no	no
Entry	no	yes
<	no	no
Thread	no	yes
,	no	no
Throwable	no	yes
>	no	no
e	yes	yes
:	no	no
unhandledExceptions	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
assertExactConsumersConnect	no	yes
(	no	no
final	no	yes
String	no	yes
brokerName	yes	yes
,	no	no
final	no	yes
int	no	yes
count	no	yes
,	no	no
final	no	yes
int	no	yes
numChecks	no	yes
,	no	no
long	no	yes
timeout	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
final	no	yes
ManagementContext	no	yes
context	no	yes
=	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getManagementContext	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
AtomicInteger	no	yes
stability	no	yes
=	no	no
new	no	yes
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
brokerName	yes	yes
,	no	no
Wait	no	yes
.	no	no
waitFor	no	yes
(	no	no
new	no	yes
Wait	no	yes
.	no	no
Condition	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
boolean	no	yes
isSatisified	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
try	no	yes
{	no	no
QueueViewMBean	no	yes
queueViewMBean	yes	yes
=	no	no
(	no	no
QueueViewMBean	no	yes
)	no	no
context	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
brokers	no	yes
.	no	no
get	no	yes
(	no	no
brokerName	yes	yes
)	no	no
.	no	no
broker	no	yes
.	no	no
getAdminView	no	yes
(	no	no
)	no	no
.	no	no
getQueues	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
,	no	no
QueueViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
false	no	yes
)	no	no
;	no	no
long	no	yes
currentCount	yes	yes
=	no	no
queueViewMBean	yes	yes
.	no	no
getConsumerCount	no	yes
(	no	no
)	no	no
;	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	yes	yes
,	no	no
long	no	yes
maximumDuration	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
waitForMessagesToArrive	no	yes
(	no	no
int	no	yes
messageCount	no	yes
,	no	no
long	no	yes
maximumDuration	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
messageCount	no	yes
+	no	no
)	no	no
;	no	no
long	no	yes
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
messageCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
if	no	yes
(	no	no
hasReceivedMessages	no	yes
(	no	no
messageCount	no	yes
)	no	no
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
long	no	yes
duration	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no
if	no	yes
(	no	no
duration	no	yes
>=	no	no
maximumDuration	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
synchronized	no	yes
(	no	no
semaphore	no	yes
)	no	no
{	no	no
semaphore	no	yes
.	no	no
wait	no	yes
(	no	no
maximumDuration	no	yes
-	no	no
duration	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
InterruptedException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	yes
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

public	no	yes
void	no	yes
assertAuthentication	no	yes
(	no	no
JMXConnector	no	yes
connector	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
connector	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
MBeanServerConnection	no	yes
connection	no	yes
=	no	no
connector	no	yes
.	no	no
getMBeanServerConnection	no	yes
(	no	no
)	no	no
;	no	no
ObjectName	no	yes
name	no	yes
=	no	no
new	no	yes
ObjectName	no	yes
(	no	no
)	no	no
;	no	no
BrokerViewMBean	no	yes
mbean	yes	yes
=	no	no
MBeanServerInvocationHandler	no	yes
.	no	no
newProxyInstance	no	yes
(	no	no
connection	no	yes
,	no	no
name	no	yes
,	no	no
BrokerViewMBean	no	yes
.	no	no
class	no	yes
,	no	no
true	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrokerConfiguredCorrectly	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertEquals	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Topic	no	yes
topic	yes	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
DispatchPolicy	no	yes
dispatchPolicy	no	yes
=	no	no
topic	yes	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
,	no	no
dispatchPolicy	no	yes
instanceof	no	no
RoundRobinDispatchPolicy	no	yes
)	no	no
;	no	no
SubscriptionRecoveryPolicy	no	yes
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	yes	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrokerConfiguredCorrectly	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertEquals	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
DispatchPolicy	no	yes
dispatchPolicy	yes	yes
=	no	no
topic	no	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	yes	yes
,	no	no
dispatchPolicy	yes	yes
instanceof	no	no
RoundRobinDispatchPolicy	no	yes
)	no	no
;	no	no
SubscriptionRecoveryPolicy	no	yes
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	no	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no

public	no	yes
void	no	yes
testBrokerConfiguredCorrectly	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
assertEquals	no	yes
(	no	no
,	no	no
brokerService	no	yes
.	no	no
getBrokerName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Topic	no	yes
topic	no	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
DispatchPolicy	no	yes
dispatchPolicy	no	yes
=	no	no
topic	no	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
,	no	no
dispatchPolicy	no	yes
instanceof	no	no
RoundRobinDispatchPolicy	no	yes
)	no	no
;	no	no
SubscriptionRecoveryPolicy	no	yes
subscriptionRecoveryPolicy	yes	yes
=	no	no
topic	no	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	yes	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	yes	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	yes	yes
,	no	no
subscriptionRecoveryPolicy	yes	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
,	no	no
dispatchPolicy	no	yes
instanceof	no	no
RoundRobinDispatchPolicy	no	yes
)	no	no
;	no	no
SubscriptionRecoveryPolicy	no	yes
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	yes	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
topic	yes	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
dispatchPolicy	no	yes
=	no	no
topic	yes	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
,	no	no
dispatchPolicy	no	yes
instanceof	no	no
StrictOrderDispatchPolicy	no	yes
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	yes	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
TimedSubscriptionRecoveryPolicy	no	yes
timedSubscriptionPolicy	no	yes
=	no	no
(	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
60000	no	no
,	no	no
timedSubscriptionPolicy	no	yes
.	no	no
getRecoverDuration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

SubscriptionRecoveryPolicy	no	yes
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	no	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dispatchPolicy	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
dispatchPolicy	yes	yes
=	no	no
topic	no	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	yes	yes
,	no	no
dispatchPolicy	yes	yes
instanceof	no	no
StrictOrderDispatchPolicy	no	yes
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
topic	no	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	no	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	no	yes
,	no	no
subscriptionRecoveryPolicy	no	yes
instanceof	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
TimedSubscriptionRecoveryPolicy	no	yes
timedSubscriptionPolicy	no	yes
=	no	no
(	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	no	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
60000	no	no
,	no	no
timedSubscriptionPolicy	no	yes
.	no	no
getRecoverDuration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no

subscriptionRecoveryPolicy	yes	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	yes	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	yes	yes
,	no	no
subscriptionRecoveryPolicy	yes	yes
instanceof	no	no
LastImageSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	yes	yes
)	no	no
;	no	no
topic	no	yes
=	no	no
(	no	no
Topic	no	yes
)	no	no
broker	no	yes
.	no	no
addDestination	no	yes
(	no	no
context	no	yes
,	no	no
new	no	yes
ActiveMQTopic	no	yes
(	no	no
)	no	no
,	no	no
true	no	yes
)	no	no
;	no	no
dispatchPolicy	no	yes
=	no	no
topic	no	yes
.	no	no
getDispatchPolicy	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
,	no	no
dispatchPolicy	no	yes
instanceof	no	no
StrictOrderDispatchPolicy	no	yes
)	no	no
;	no	no
subscriptionRecoveryPolicy	yes	yes
=	no	no
topic	no	yes
.	no	no
getSubscriptionRecoveryPolicy	no	yes
(	no	no
)	no	no
;	no	no
subscriptionRecoveryPolicy	yes	yes
=	no	no
(	no	no
(	no	no
RetainedMessageSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	yes	yes
)	no	no
.	no	no
getWrapped	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
subscriptionRecoveryPolicy	yes	yes
,	no	no
subscriptionRecoveryPolicy	yes	yes
instanceof	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
;	no	no
TimedSubscriptionRecoveryPolicy	no	yes
timedSubscriptionPolicy	no	yes
=	no	no
(	no	no
TimedSubscriptionRecoveryPolicy	no	yes
)	no	no
subscriptionRecoveryPolicy	yes	yes
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
60000	no	no
,	no	no
timedSubscriptionPolicy	no	yes
.	no	no
getRecoverDuration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
topic	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dispatchPolicy	no	yes
)	no	no
;	no	no

protected	no	yes
BrokerService	no	yes
createBroker	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
String	no	yes
uri	yes	yes
=	no	no
;	no	no

public	no	yes
void	no	yes
contextInitialized	no	yes
(	no	no
ServletContextEvent	no	yes
event	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
webconsoleType	no	yes
=	no	no
getWebconsoleType	no	yes
(	no	no
)	no	no
;	no	no
ServletContext	no	yes
servletContext	no	yes
=	no	no
event	no	yes
.	no	no
getServletContext	no	yes
(	no	no
)	no	no
;	no	no
WebApplicationContext	no	yes
context	no	yes
=	no	no
createWebapplicationContext	no	yes
(	no	no
servletContext	no	yes
,	no	no
webconsoleType	no	yes
)	no	no
;	no	no
initializeWebClient	no	yes
(	no	no
servletContext	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
webconsoleType	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
port	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
host	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
host	yes	yes
!=	no	no
null	no	yes
&&	no	no
port	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
void	no	yes
contextInitialized	no	yes
(	no	no
ServletContextEvent	no	yes
event	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
webconsoleType	no	yes
=	no	no
getWebconsoleType	no	yes
(	no	no
)	no	no
;	no	no
ServletContext	no	yes
servletContext	no	yes
=	no	no
event	no	yes
.	no	no
getServletContext	no	yes
(	no	no
)	no	no
;	no	no
WebApplicationContext	no	yes
context	no	yes
=	no	no
createWebapplicationContext	no	yes
(	no	no
servletContext	no	yes
,	no	no
webconsoleType	no	yes
)	no	no
;	no	no
initializeWebClient	no	yes
(	no	no
servletContext	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
webconsoleType	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
port	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
host	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
host	yes	yes
!=	no	no
null	no	yes
&&	no	no
port	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
host	yes	yes
,	no	no
port	yes	yes
)	no	no
;	no	no

private	no	yes
WebApplicationContext	no	yes
createWebapplicationContext	no	yes
(	no	no
ServletContext	no	yes
servletContext	no	yes
,	no	no
String	no	yes
webconsoleType	yes	yes
)	no	no
{	no	no
String	no	yes
configuration	no	yes
=	no	no
+	no	no
webconsoleType	yes	yes
+	no	no
;	no	no

public	no	yes
ModelAndView	no	yes
handleRequest	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
ModelAndView	no	yes
handleRequest	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
jobId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
JobSchedulerViewMBean	no	yes
jobScheduler	no	yes
=	no	no
getBrokerFacade	no	yes
(	no	no
)	no	no
.	no	no
getJobScheduler	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
jobScheduler	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
jobScheduler	no	yes
.	no	no
removeJob	no	yes
(	no	no
jobId	yes	yes
)	no	no
;	no	no

public	no	yes
ModelAndView	no	yes
handleRequest	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
ModelAndView	no	yes
handleRequest	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

public	no	yes
ModelAndView	no	yes
handleRequest	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
if	no	yes
(	no	no
messageId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
QueueViewMBean	no	yes
queueView	no	yes
=	no	no
getQueueView	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
queueView	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

object	yes	yes
=	no	no
getApplicationContext	no	yes
(	no	no
)	no	no
.	no	no
getBean	no	yes
(	no	no
handlerName	no	yes
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
object	yes	yes
instanceof	no	no
HandlerExecutionChain	no	yes
)	no	no
{	no	no
HandlerExecutionChain	no	yes
handlerExecutionChain	no	yes
=	no	no
(	no	no
HandlerExecutionChain	no	yes
)	no	no
object	yes	yes
;	no	no
object	yes	yes
=	no	no
handlerExecutionChain	no	yes
.	no	no
getHandler	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
object	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
object	yes	yes
instanceof	no	no
DestinationFacade	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
(	no	no
(	no	no
DestinationFacade	no	yes
)	no	no
object	yes	yes
)	no	no
.	no	no
getSupportedHttpMethods	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
request	no	yes
.	no	no
getMethod	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
UnsupportedOperationException	no	yes
(	no	no
+	no	no
request	no	yes
.	no	no
getMethod	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getRequestURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
request	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
||	no	no
!	no	no
request	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
UnsupportedOperationException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ServletRequestDataBinder	no	yes
binder	no	yes
=	no	no
new	no	yes
ServletRequestDataBinder	no	yes
(	no	no
object	yes	yes
,	no	no
)	no	no
;	no	no
try	no	yes
{	no	no
binder	no	yes
.	no	no
bind	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
binder	no	yes
.	no	no
setIgnoreUnknownFields	no	yes
(	no	no
true	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
(	no	no
+	no	no
+	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	no	yes
=	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf2	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch2	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf2	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch2	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullResponse	yes	yes
=	no	no
response	no	yes
+	no	no
buf2	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
(	no	no
+	no	no
+	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	no	yes
=	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf2	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch2	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf2	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch2	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullResponse	yes	yes
=	no	no
response	no	yes
+	no	no
buf2	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

int	no	yes
port	no	yes
=	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
msg	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
,	no	no
,	no	no
null	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	yes	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no

int	no	yes
port	no	yes
=	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producerA	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producerB	no	yes
=	no	no
session	no	yes
.	no	no
createProducer	no	yes
(	no	no
session	no	yes
.	no	no
createQueue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerA	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerA	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerB	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
producerB	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
)	no	no
;	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	yes	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no

httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
)	no	no
;	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
expected1	no	yes
=	no	no
;	no	no
String	no	yes
expected2	no	yes
=	no	no
;	no	no
assertContains	no	yes
(	no	no
expected1	no	yes
,	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertContains	no	yes
(	no	no
expected2	no	yes
,	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf2	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch2	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf2	yes	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch2	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sessionId	no	yes
=	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
subscribe	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
,	no	no
null	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
sendMessages	no	yes
(	no	no
httpClient	no	yes
,	no	no
port	no	yes
,	no	no
(	no	no
+	no	no
+	no	no
+	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
response	no	yes
=	no	no
buf	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf2	no	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch2	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf2	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
latch2	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullResponse	yes	yes
=	no	no
response	no	yes
+	no	no
buf2	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
15	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testCorrelation	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
port	no	yes
=	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
correlId	yes	yes
=	no	no
+	no	no
RandomStringUtils	no	yes
.	no	no
randomNumeric	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
correlId	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
correlId	yes	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setJMSCorrelationID	no	yes
(	no	no
correlId	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
15	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testCorrelation	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
port	no	yes
=	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
200	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
correlId	no	yes
=	no	no
+	no	no
RandomStringUtils	no	yes
.	no	no
randomNumeric	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
TextMessage	no	yes
message	no	yes
=	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
correlId	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
,	no	no
correlId	no	yes
)	no	no
;	no	no
message	no	yes
.	no	no
setJMSCorrelationID	no	yes
(	no	no
correlId	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
correlId	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	yes	yes
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	yes
(	no	no
timeout	no	yes
=	no	no
15	no	no
*	no	no
1000	no	no
)	no	no
public	no	yes
void	no	yes
testDisconnect	no	yes
(	no	no
)	no	no
throws	no	yes
Exception	no	yes
{	no	no
int	no	yes
port	no	yes
=	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
session	no	yes
.	no	no
createTextMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HttpClient	no	yes
httpClient	no	yes
=	no	no
new	no	yes
HttpClient	no	yes
(	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
StringBuffer	no	yes
buf	yes	yes
=	no	no
new	no	yes
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
final	no	yes
CountDownLatch	no	yes
latch	no	yes
=	no	no
asyncRequest	no	yes
(	no	no
httpClient	no	yes
,	no	no
+	no	no
port	no	yes
+	no	no
,	no	no
buf	yes	yes
)	no	no
;	no	no
latch	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
onMessageAvailable	no	yes
(	no	no
MessageConsumer	no	yes
consumer	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
onMessageAvailable	no	yes
(	no	no
MessageConsumer	no	yes
consumer	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
consumer	no	yes
,	no	no
continuation	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
continuation	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
message	yes	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
public	no	yes
synchronized	no	yes
void	no	yes
onMessageAvailable	no	yes
(	no	no
MessageConsumer	no	yes
consumer	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
consumer	no	yes
,	no	no
continuation	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
continuation	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no
Message	no	yes
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
!	no	no
continuation	yes	yes
.	no	no
isResumed	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doPost	no	yes
(	no	no
HttpServletRequest	no	yes
request	yes	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
ServletException	no	yes
,	no	no
IOException	no	yes
{	no	no
AjaxWebClient	no	yes
client	yes	yes
=	no	no
getAjaxWebClient	no	yes
(	no	no
request	yes	yes
)	no	no
;	no	no
String	no	yes
messageIds	no	yes
=	no	no
;	no	no
synchronized	no	yes
(	no	no
client	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

synchronized	no	yes
(	no	no
client	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
client	no	yes
+	no	no
+	no	no
request	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getPathInfo	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getContentType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
messages	yes	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
String	no	yes
destinationName	yes	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	yes	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	yes	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
destinationName	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
destinationName	yes	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
message	yes	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	yes	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	yes	yes
)	no	no
)	no	no
;	no	no
String	no	yes
type	yes	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	yes	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	yes	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
destinationName	yes	yes
==	no	no
null	no	yes
||	no	no
message	yes	yes
==	no	no
null	no	yes
||	no	no
type	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
Destination	no	yes
destination	no	yes
=	no	no
getDestination	no	yes
(	no	no
client	no	yes
,	no	no
request	no	yes
,	no	no
destinationName	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
client	no	yes
+	no	no
+	no	no
request	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getPathInfo	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
request	no	yes
.	no	no
getContentType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
int	no	yes
messages	no	yes
=	no	no
0	no	no
;	no	no
while	no	yes
(	no	no
true	no	yes
)	no	no
{	no	no
String	no	yes
destinationName	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	no	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
destinationName	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
destinationName	no	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
message	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	no	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
type	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
messages	no	yes
==	no	no
0	no	no
?	no	no
:	no	no
(	no	no
+	no	no
messages	no	yes
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
destinationName	no	yes
==	no	no
null	no	yes
||	no	no
message	no	yes
==	no	no
null	no	yes
||	no	no
type	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
break	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getDestination	no	yes
(	no	no
client	no	yes
,	no	no
request	no	yes
,	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
messages	no	yes
+	no	no
+	no	no
destinationName	no	yes
+	no	no
+	no	no
message	no	yes
+	no	no
+	no	no
type	no	yes
)	no	no
;	no	no

break	no	yes
;	no	no
}	no	no
try	no	yes
{	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getDestination	no	yes
(	no	no
client	no	yes
,	no	no
request	no	yes
,	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
messages	no	yes
+	no	no
+	no	no
destinationName	no	yes
+	no	no
+	no	no
message	yes	yes
+	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
destination	yes	yes
+	no	no
+	no	no
destination	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
messages	no	yes
++	no	no
;	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
type	no	yes
)	no	no
)	no	no
{	no	no
AjaxListener	no	yes
listener	no	yes
=	no	no
client	no	yes
.	no	no
getListener	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerIdMap	no	yes
=	no	no
client	no	yes
.	no	no
getIdMap	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerDestinationNameMap	no	yes
=	no	no
client	no	yes
.	no	no
getDestinationNameMap	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
closeConsumer	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no
MessageAvailableConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
client	no	yes
.	no	no
getConsumer	no	yes
(	no	no
destination	yes	yes
,	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
WebClient	no	yes
.	no	no
selectorName	no	yes
)	no	no
)	no	no
;	no	no
consumer	yes	yes
.	no	no
setAvailableListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
consumerIdMap	no	yes
.	no	no
put	no	yes
(	no	no
consumer	yes	yes
,	no	no
message	yes	yes
)	no	no
;	no	no

AjaxListener	no	yes
listener	no	yes
=	no	no
client	no	yes
.	no	no
getListener	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerIdMap	no	yes
=	no	no
client	no	yes
.	no	no
getIdMap	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerDestinationNameMap	no	yes
=	no	no
client	no	yes
.	no	no
getDestinationNameMap	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
closeConsumer	no	yes
(	no	no
destination	no	yes
)	no	no
;	no	no
MessageAvailableConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
client	no	yes
.	no	no
getConsumer	no	yes
(	no	no
destination	no	yes
,	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
WebClient	no	yes
.	no	no
selectorName	no	yes
)	no	no
)	no	no
;	no	no
consumer	yes	yes
.	no	no
setAvailableListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
consumerIdMap	no	yes
.	no	no
put	no	yes
(	no	no
consumer	yes	yes
,	no	no
message	no	yes
)	no	no
;	no	no
consumerDestinationNameMap	no	yes
.	no	no
put	no	yes
(	no	no
consumer	yes	yes
,	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
consumer	yes	yes
+	no	no
+	no	no
destination	no	yes
+	no	no
+	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
type	no	yes
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerIdMap	no	yes
=	no	no
client	no	yes
.	no	no
getIdMap	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerDestinationNameMap	no	yes
=	no	no
client	no	yes
.	no	no
getDestinationNameMap	no	yes
(	no	no
)	no	no
;	no	no
MessageAvailableConsumer	no	yes
consumer	yes	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
client	no	yes
.	no	no
getConsumer	no	yes
(	no	no
destination	no	yes
,	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
WebClient	no	yes
.	no	no
selectorName	no	yes
)	no	no
)	no	no
;	no	no
consumer	yes	yes
.	no	no
setAvailableListener	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no

consumerDestinationNameMap	no	yes
.	no	no
put	no	yes
(	no	no
consumer	no	yes
,	no	no
destinationName	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
consumer	no	yes
+	no	no
+	no	no
destination	yes	yes
+	no	no
+	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
type	no	yes
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerIdMap	no	yes
=	no	no
client	no	yes
.	no	no
getIdMap	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerDestinationNameMap	no	yes
=	no	no
client	no	yes
.	no	no
getDestinationNameMap	no	yes
(	no	no
)	no	no
;	no	no
MessageAvailableConsumer	no	yes
consumer	no	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
client	no	yes
.	no	no
getConsumer	no	yes
(	no	no
destination	yes	yes
,	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
WebClient	no	yes
.	no	no
selectorName	no	yes
)	no	no
)	no	no
;	no	no
consumer	no	yes
.	no	no
setAvailableListener	no	yes
(	no	no
null	no	yes
)	no	no
;	no	no
consumerIdMap	no	yes
.	no	no
remove	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
consumerDestinationNameMap	no	yes
.	no	no
remove	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
closeConsumer	no	yes
(	no	no
destination	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
consumer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
type	no	yes
)	no	no
)	no	no
{	no	no
TextMessage	no	yes
text	no	yes
=	no	no
client	no	yes
.	no	no
getSession	no	yes
(	no	no
)	no	no
.	no	no
createTextMessage	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no

appendParametersToMessage	no	yes
(	no	no
request	no	yes
,	no	no
text	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
send	no	yes
(	no	no
destination	yes	yes
,	no	no
text	no	yes
)	no	no
;	no	no
messageIds	no	yes
+=	no	no
text	no	yes
.	no	no
getJMSMessageID	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	no	yes
+	no	no
+	no	no
destination	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
type	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
doMessages	no	yes
(	no	no
client	no	yes
,	no	no
request	no	yes
,	no	no
response	no	yes
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
JMSException	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
ServletException	no	yes
(	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doGet	no	yes
(	no	no
HttpServletRequest	no	yes
request	yes	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
ServletException	no	yes
,	no	no
IOException	no	yes
{	no	no
try	no	yes
{	no	no
AjaxWebClient	no	yes
client	yes	yes
=	no	no
getAjaxWebClient	no	yes
(	no	no
request	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	yes
void	no	yes
doMessages	no	yes
(	no	no
AjaxWebClient	no	yes
client	no	yes
,	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
,	no	no
IOException	no	yes
{	no	no
int	no	yes
messages	no	yes
=	no	no
0	no	no
;	no	no
long	no	yes
timeout	yes	yes
=	no	no
getReadTimeout	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

Message	no	yes
message	yes	yes
=	no	no
null	no	yes
;	no	no
undelivered_message	no	yes
=	no	no
(	no	no
UndeliveredAjaxMessage	no	yes
)	no	no
request	no	yes
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
undelivered_message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
message	yes	yes
=	no	no
undelivered_message	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
synchronized	no	yes
(	no	no
client	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
MessageConsumer	no	yes
>	no	no
consumers	no	yes
=	no	no
client	no	yes
.	no	no
getConsumers	no	yes
(	no	no
)	no	no
;	no	no
MessageAvailableConsumer	no	yes
consumer	yes	yes
=	no	no
null	no	yes
;	no	no
if	no	yes
(	no	no
undelivered_message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
consumer	yes	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
undelivered_message	no	yes
.	no	no
getConsumer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
message	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
message	yes	yes
==	no	no
null	no	yes
&&	no	no
i	no	yes
<	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumer	yes	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
consumers	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumer	yes	yes
.	no	no
getAvailableListener	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
message	yes	yes
=	no	no
consumer	yes	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no

if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
for	no	yes
(	no	no
int	no	yes
i	no	yes
=	no	no
0	no	no
;	no	no
message	no	yes
==	no	no
null	no	yes
&&	no	no
i	no	yes
<	no	no
consumers	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
consumer	no	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
consumers	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
consumer	no	yes
.	no	no
getAvailableListener	no	yes
(	no	no
)	no	no
==	no	no
null	no	yes
)	no	no
{	no	no
continue	no	yes
;	no	no
}	no	no
message	no	yes
=	no	no
consumer	no	yes
.	no	no
receive	no	yes
(	no	no
10	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
message	no	yes
+	no	no
+	no	no
consumer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
response	no	yes
.	no	no
setContentType	no	yes
(	no	no
)	no	no
;	no	no
response	no	yes
.	no	no
setHeader	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
&&	no	no
client	no	yes
.	no	no
getListener	no	yes
(	no	no
)	no	no
.	no	no
getUndeliveredMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Continuation	no	yes
continuation	no	yes
=	no	no
ContinuationSupport	no	yes
.	no	no
getContinuation	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
continuation	no	yes
.	no	no
addContinuationListener	no	yes
(	no	no
new	no	yes
ContinuationListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onTimeout	no	yes
(	no	no
Continuation	no	yes
cont	yes	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
&&	no	no
client	no	yes
.	no	no
getListener	no	yes
(	no	no
)	no	no
.	no	no
getUndeliveredMessages	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Continuation	no	yes
continuation	yes	yes
=	no	no
ContinuationSupport	no	yes
.	no	no
getContinuation	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
continuation	yes	yes
.	no	no
addContinuationListener	no	yes
(	no	no
new	no	yes
ContinuationListener	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onTimeout	no	yes
(	no	no
Continuation	no	yes
cont	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
cont	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	yes
public	no	yes
void	no	yes
onComplete	no	yes
(	no	no
Continuation	no	yes
cont	no	yes
)	no	no
{	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
cont	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
continuation	yes	yes
.	no	no
isExpired	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_OK	no	yes
)	no	no
;	no	no
StringWriter	no	yes
swriter	no	yes
=	no	no
new	no	yes
StringWriter	no	yes
(	no	no
)	no	no
;	no	no
PrintWriter	no	yes
writer	no	yes
=	no	no
new	no	yes
PrintWriter	no	yes
(	no	no
swriter	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
continuation	no	yes
)	no	no
;	no	no
AjaxListener	no	yes
listener	no	yes
=	no	no
client	no	yes
.	no	no
getListener	no	yes
(	no	no
)	no	no
;	no	no
listener	no	yes
.	no	no
access	no	yes
(	no	no
)	no	no
;	no	no
listener	no	yes
.	no	no
setContinuation	no	yes
(	no	no
continuation	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
StringWriter	no	yes
swriter	no	yes
=	no	no
new	no	yes
StringWriter	no	yes
(	no	no
)	no	no
;	no	no
PrintWriter	no	yes
writer	no	yes
=	no	no
new	no	yes
PrintWriter	no	yes
(	no	no
swriter	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerIdMap	no	yes
=	no	no
client	no	yes
.	no	no
getIdMap	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
MessageAvailableConsumer	no	yes
,	no	no
String	no	yes
>	no	no
consumerDestinationNameMap	no	yes
=	no	no
client	no	yes
.	no	no
getDestinationNameMap	no	yes
(	no	no
)	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_OK	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
String	no	yes
id	yes	yes
=	no	no
consumerIdMap	no	yes
.	no	no
get	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
String	no	yes
destinationName	yes	yes
=	no	no
consumerDestinationNameMap	no	yes
.	no	no
get	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	yes
protected	no	yes
void	no	yes
doPost	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
,	no	no
HttpServletResponse	no	yes
response	no	yes
)	no	no
throws	no	yes
ServletException	no	yes
,	no	no
IOException	no	yes
{	no	no
try	no	yes
{	no	no
String	no	yes
action	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientId	yes	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
clientId	yes	yes
!=	no	no
null	no	yes
&&	no	no
.	no	no
equals	no	yes
(	no	no
action	no	yes
)	no	no
)	no	no
{	no	no

try	no	yes
{	no	no
String	no	yes
action	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clientId	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
clientId	no	yes
!=	no	no
null	no	yes
&&	no	no
.	no	no
equals	no	yes
(	no	no
action	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
clientId	no	yes
)	no	no
;	no	no
WebClient	no	yes
client	no	yes
=	no	no
getWebClient	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
clients	no	yes
.	no	no
remove	no	yes
(	no	no
clientId	no	yes
)	no	no
;	no	no
return	no	yes
;	no	no
}	no	no
WebClient	no	yes
client	no	yes
=	no	no
getWebClient	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
String	no	yes
text	yes	yes
=	no	no
getPostedMessageBody	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
Destination	no	yes
destination	yes	yes
=	no	no
getDestination	no	yes
(	no	no
client	no	yes
,	no	no
request	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
destination	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
NoDestinationSuppliedException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

if	no	yes
(	no	no
destination	yes	yes
==	no	no
null	no	yes
)	no	no
{	no	no
throw	no	yes
new	no	yes
NoDestinationSuppliedException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
consumer	no	yes
=	no	no
(	no	no
MessageAvailableConsumer	no	yes
)	no	no
client	no	yes
.	no	no
getConsumer	no	yes
(	no	no
destination	yes	yes
,	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
WebClient	no	yes
.	no	no
selectorName	no	yes
)	no	no
)	no	no
;	no	no
Continuation	no	yes
continuation	no	yes
=	no	no
ContinuationSupport	no	yes
.	no	no
getContinuation	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
continuation	no	yes
.	no	no
isInitial	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
activeConsumers	no	yes
.	no	no
add	no	yes
(	no	no
consumer	no	yes
)	no	no
)	no	no
{	no	no
throw	no	yes
new	no	yes
ServletException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
null	no	yes
;	no	no
long	no	yes
deadline	no	yes
=	no	no
getReadDeadline	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
long	no	yes
timeout	yes	yes
=	no	no
deadline	no	yes
-	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
synchronized	no	yes
(	no	no
consumer	no	yes
)	no	no
{	no	no
Listener	no	yes
listener	no	yes
=	no	no
(	no	no
Listener	no	yes
)	no	no
consumer	no	yes
.	no	no
getAvailableListener	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
listener	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
listener	no	yes
=	no	no
new	no	yes
Listener	no	yes
(	no	no
consumer	no	yes
)	no	no
;	no	no
consumer	no	yes
.	no	no
setAvailableListener	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

response	no	yes
.	no	no
setContentType	no	yes
(	no	no
defaultContentType	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
isXmlContent	no	yes
(	no	no
message	no	yes
)	no	no
)	no	no
{	no	no
response	no	yes
.	no	no
setContentType	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
response	no	yes
.	no	no
setContentType	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
PrintWriter	no	yes
writer	no	yes
=	no	no
response	no	yes
.	no	no
getWriter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
message	no	yes
==	no	no
null	no	yes
)	no	no
{	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_NO_CONTENT	no	yes
)	no	no
;	no	no
}	no	no
else	no	yes
{	no	no
messages	yes	yes
=	no	no
1	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_OK	no	yes
)	no	no
;	no	no
setResponseHeaders	no	yes
(	no	no
response	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
writeMessageResponse	no	yes
(	no	no
writer	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	yes
{	no	no

public	no	yes
WebClient	no	yes
getWebClient	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
)	no	no
{	no	no
String	no	yes
clientId	yes	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
clientId	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
String	no	yes
getPostedMessageBody	no	yes
(	no	no
HttpServletRequest	no	yes
request	no	yes
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
String	no	yes
answer	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
bodyParameter	no	yes
)	no	no
;	no	no
String	no	yes
contentType	yes	yes
=	no	no
request	no	yes
.	no	no
getContentType	no	yes
(	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
answer	no	yes
==	no	no
null	no	yes
&&	no	no
contentType	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no

protected	no	yes
synchronized	no	yes
void	no	yes
closeConnection	no	yes
(	no	no
)	no	no
{	no	no
if	no	yes
(	no	no
connector	yes	yes
!=	no	no
null	no	yes
)	no	no
{	no	no
try	no	yes
{	no	no

public	no	yes
void	no	yes
send	no	yes
(	no	no
Destination	no	yes
destination	yes	yes
,	no	no
Message	no	yes
message	yes	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
getProducer	no	yes
(	no	no
)	no	no
.	no	no
send	no	yes
(	no	no
destination	yes	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

public	no	yes
void	no	yes
send	no	yes
(	no	no
Destination	no	yes
destination	yes	yes
,	no	no
Message	no	yes
message	yes	yes
,	no	no
boolean	no	yes
persistent	no	yes
,	no	no
int	no	yes
priority	no	yes
,	no	no
long	no	yes
timeToLive	no	yes
)	no	no
throws	no	yes
JMSException	no	yes
{	no	no
int	no	yes
deliveryMode	no	yes
=	no	no
persistent	no	yes
?	no	no
DeliveryMode	no	yes
.	no	no
PERSISTENT	no	yes
:	no	no
DeliveryMode	no	yes
.	no	no
NON_PERSISTENT	no	yes
;	no	no
getProducer	no	yes
(	no	no
)	no	no
.	no	no
send	no	yes
(	no	no
destination	yes	yes
,	no	no
message	yes	yes
,	no	no
deliveryMode	no	yes
,	no	no
priority	no	yes
,	no	no
timeToLive	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Parameterized	no	yes
.	no	no
Parameters	no	yes
(	no	no
name	no	yes
=	no	no
)	no	no
public	no	yes
static	no	yes
Collection	no	yes
<	no	no
String	no	yes
[	no	no
]	no	no
>	no	no
getTestParameters	no	yes
(	no	no
)	no	no
throws	no	yes
IOException	no	yes
{	no	no
List	no	yes
<	no	no
String	no	yes
[	no	no
]	no	no
>	no	no
configUrls	no	yes
=	no	no
new	no	yes
ArrayList	no	yes
<	no	no
String	no	yes
[	no	no
]	no	no
>	no	no
(	no	no
)	no	no
;	no	no
configUrls	no	yes
.	no	no
add	no	yes
(	no	no
new	no	yes
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
}	no	no
)	no	no
;	no	no
String	no	yes
osName	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no

BrokerService	no	yes
broker	no	yes
=	no	no
null	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
configUrl	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
configUrl	no	yes
)	no	no
;	no	no
broker	no	yes
=	no	no
BrokerFactory	no	yes
.	no	no
createBroker	no	yes
(	no	no
configUrl	no	yes
)	no	no
;	no	no
if	no	yes
(	no	no
.	no	no
equals	no	yes
(	no	no
shortName	no	yes
)	no	no
)	no	no
{	no	no
try	no	yes
{	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
TimeoutException	no	yes
expectedWithNoZk	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
transport	no	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
URI	no	yes
UriToConnectTo	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
transport	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	yes
(	no	no
TimeoutException	no	yes
expectedWithNoZk	no	yes
)	no	no
{	no	no
return	no	yes
;	no	no
}	no	no
}	no	no
else	no	yes
{	no	no
broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
transport	no	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
URI	no	yes
UriToConnectTo	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
transport	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
UriToConnectTo	yes	yes
)	no	no
;	no	no
StompConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
StompConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
open	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
UriToConnectTo	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no

broker	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	yes
{	no	no
for	no	yes
(	no	no
TransportConnector	no	yes
transport	no	yes
:	no	no
broker	no	yes
.	no	no
getTransportConnectors	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
final	no	yes
URI	no	yes
UriToConnectTo	yes	yes
=	no	no
URISupport	no	yes
.	no	no
removeQuery	no	yes
(	no	no
transport	no	yes
.	no	no
getConnectUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
UriToConnectTo	yes	yes
)	no	no
;	no	no
StompConnection	no	yes
connection	no	yes
=	no	no
new	no	yes
StompConnection	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
open	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
UriToConnectTo	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
break	no	yes
;	no	no
}	no	no
else	no	yes
if	no	yes
(	no	no
UriToConnectTo	yes	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
UriToConnectTo	yes	yes
)	no	no
;	no	no
ActiveMQConnectionFactory	no	yes
connectionFactory	no	yes
=	no	no
new	no	yes
ActiveMQConnectionFactory	no	yes
(	no	no
UriToConnectTo	yes	yes
)	no	no
;	no	no
Connection	no	yes
connection	no	yes
=	no	no
connectionFactory	no	yes
.	no	no
createConnection	no	yes
(	no	no
secProps	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
,	no	no
secProps	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

