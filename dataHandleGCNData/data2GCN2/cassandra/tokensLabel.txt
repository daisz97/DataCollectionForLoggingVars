@	no	no
Override	no	no
public	no	no
void	no	no
log	no	no
(	no	no
AuditLogEntry	no	no
auditLogEntry	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
login	no	no
(	no	no
)	no	no
throws	no	no
LoginException	no	yes
{	no	no
if	no	no
(	no	no
callbackHandler	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
NameCallback	no	yes
nc	no	yes
=	no	no
new	no	no
NameCallback	no	yes
(	no	no
)	no	no
;	no	no
PasswordCallback	no	yes
pc	no	yes
=	no	no
new	no	no
PasswordCallback	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
try	no	no
{	no	no
callbackHandler	no	yes
.	no	no
handle	no	yes
(	no	no
new	no	no
Callback	no	yes
[	no	no
]	no	no
{	no	no
nc	no	yes
,	no	no
pc	no	yes
}	no	no
)	no	no
;	no	no
username	no	yes
=	no	no
nc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
char	no	no
[	no	no
]	no	no
tmpPassword	no	yes
=	no	no
pc	no	yes
.	no	no
getPassword	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tmpPassword	no	yes
==	no	no
null	no	no
)	no	no
tmpPassword	no	yes
=	no	no
new	no	no
char	no	no
[	no	no
0	no	no
]	no	no
;	no	no
password	no	yes
=	no	no
new	no	no
char	no	no
[	no	no
tmpPassword	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
System	no	yes
.	no	no
arraycopy	no	yes
(	no	no
tmpPassword	no	yes
,	no	no
0	no	no
,	no	no
password	no	yes
,	no	no
0	no	no
,	no	no
tmpPassword	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
pc	no	yes
.	no	no
clearPassword	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
|	no	no
UnsupportedCallbackException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
setupDefaultRole	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
sortedTokens	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
hasExistingRoles	no	no
(	no	no
)	no	no
)	no	no
{	no	no
QueryProcessor	no	yes
.	no	no
process	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
,	no	no
SchemaConstants	no	yes
.	no	no
AUTH_KEYSPACE_NAME	no	yes
,	no	no
AuthKeyspace	no	yes
.	no	no
ROLES	no	yes
,	no	no
DEFAULT_SUPERUSER_NAME	yes	yes
,	no	no
escape	no	yes
(	no	no
hashpw	no	yes
(	no	no
DEFAULT_SUPERUSER_PASSWORD	no	yes
)	no	no
)	no	no
)	no	no
,	no	no
consistencyForRole	no	yes
(	no	no
DEFAULT_SUPERUSER_NAME	yes	yes
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
setRate	no	no
(	no	no
final	no	no
int	no	no
throttleInKB	yes	yes
)	no	no
{	no	no
int	no	no
endpointsCount	no	yes
=	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
getSizeOfAllEndpoints	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
endpointsCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
int	no	no
endpointThrottleInKB	yes	yes
=	no	no
throttleInKB	yes	yes
/	no	no
endpointsCount	no	yes
;	no	no
double	no	no
throughput	no	yes
=	no	no
endpointThrottleInKB	yes	yes
==	no	no
0	no	no
?	no	no
Double	no	yes
.	no	no
MAX_VALUE	no	yes
:	no	no
endpointThrottleInKB	yes	yes
*	no	no
1024.0	no	no
;	no	no
if	no	no
(	no	no
rateLimiter	no	no
.	no	no
getRate	no	no
(	no	no
)	no	no
!=	no	no
throughput	no	yes
)	no	no
{	no	no

public	no	no
int	no	no
loadSaved	no	no
(	no	no
)	no	no
{	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
dataPath	yes	yes
=	no	no
getCacheDataPath	no	yes
(	no	no
CURRENT_VERSION	no	yes
)	no	no
;	no	no
File	no	yes
crcPath	no	yes
=	no	no
getCacheCrcPath	no	yes
(	no	no
CURRENT_VERSION	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dataPath	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
&&	no	no
crcPath	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
DataInputStreamPlus	no	yes
in	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no

while	no	no
(	no	no
futures	no	yes
.	no	no
peek	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
futures	no	yes
.	no	no
peek	no	no
(	no	no
)	no	no
.	no	no
isDone	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Future	no	yes
<	no	no
Pair	no	yes
<	no	no
K	no	yes
,	no	no
V	no	yes
>>	no	no
future	no	yes
=	no	no
futures	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
Pair	no	yes
<	no	no
K	no	yes
,	no	no
V	no	yes
>	no	no
entry	no	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
entry	no	yes
!=	no	no
null	no	no
&&	no	no
entry	no	yes
.	no	no
right	no	yes
!=	no	no
null	no	no
)	no	no
put	no	yes
(	no	no
entry	no	yes
.	no	no
left	no	yes
,	no	no
entry	no	yes
.	no	no
right	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
futures	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1000	no	no
)	no	no
Thread	no	yes
.	no	no
yield	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
futures	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1000	no	no
)	no	no
;	no	no
}	no	no
Future	no	yes
<	no	no
Pair	no	yes
<	no	no
K	no	yes
,	no	no
V	no	yes
>>	no	no
future	no	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
(	no	no
future	no	yes
=	no	no
futures	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
Pair	no	yes
<	no	no
K	no	yes
,	no	no
V	no	yes
>	no	no
entry	no	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
entry	no	yes
!=	no	no
null	no	no
&&	no	no
entry	no	yes
.	no	no
right	no	yes
!=	no	no
null	no	no
)	no	no
put	no	yes
(	no	no
entry	no	yes
.	no	no
left	no	yes
,	no	no
entry	no	yes
.	no	no
right	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
CorruptFileException	no	no
e	no	yes
)	no	no
{	no	no
JVMStabilityInspector	no	yes
.	no	no
inspectThrowable	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
dataPath	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
JVMStabilityInspector	no	yes
.	no	no
inspectThrowable	no	yes
(	no	no
t	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync	no	no
==	no	no
Config	no	no
.	no	no
CommitLogSync	no	no
.	no	no
batch	no	no
)	no	no
{	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync	no	no
==	no	no
CommitLogSync	no	no
.	no	no
group	no	no
)	no	no
{	no	no
if	no	no
(	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
)	no	no
||	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
<=	no	no
0d	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_batch_window_in_ms	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no

}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync	no	no
==	no	no
CommitLogSync	no	no
.	no	no
group	no	no
)	no	no
{	no	no
if	no	no
(	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
)	no	no
||	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
<=	no	no
0d	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_batch_window_in_ms	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
==	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
auto	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
=	no	no
hasLargeAddressSpace	no	yes
(	no	no
)	no	no
?	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap	no	yes
:	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
standard	no	yes
;	no	no

if	no	no
(	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
)	no	no
||	no	no
conf	yes	yes
.	no	no
commitlog_sync_group_window_in_ms	no	no
<=	no	no
0d	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_batch_window_in_ms	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
==	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
auto	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
=	no	no
hasLargeAddressSpace	no	yes
(	no	no
)	no	no
?	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap	no	yes
:	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
standard	no	yes
;	no	no
indexAccessMode	yes	yes
=	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
,	no	no
indexAccessMode	yes	yes
)	no	no
;	no	no

else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
Double	no	no
.	no	no
isNaN	no	no
(	no	no
conf	yes	yes
.	no	no
commitlog_sync_batch_window_in_ms	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
commitlog_sync_period_in_ms	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
==	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
auto	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
=	no	no
hasLargeAddressSpace	no	yes
(	no	no
)	no	no
?	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap	no	yes
:	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
standard	no	yes
;	no	no
indexAccessMode	yes	yes
=	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
,	no	no
indexAccessMode	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
==	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap_index_only	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
=	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
standard	no	yes
;	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
,	no	no
indexAccessMode	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
==	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap_index_only	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
=	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
standard	no	yes
;	no	no
indexAccessMode	no	yes
=	no	no
Config	no	yes
.	no	no
DiskAccessMode	no	yes
.	no	no
mmap	no	yes
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
,	no	no
indexAccessMode	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
indexAccessMode	no	yes
=	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	yes	yes
.	no	no
disk_access_mode	no	yes
,	no	no
indexAccessMode	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
gc_warn_threshold_in_ms	no	no
<	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
phi_convict_threshold	no	yes
<	no	no
5	no	no
||	no	no
conf	yes	yes
.	no	no
phi_convict_threshold	no	yes
>	no	no
16	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
+	no	no
conf	yes	yes
.	no	no
phi_convict_threshold	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
concurrent_reads	no	yes
<	no	no
2	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
+	no	no
conf	yes	yes
.	no	no
concurrent_reads	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	yes	yes
.	no	no
concurrent_writes	no	no
<	no	no
2	no	no
&&	no	no
System	no	no
.	no	no
getProperty	no	no
(	no	no
,	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
conf	no	yes
.	no	no
native_transport_max_concurrent_requests_in_bytes_per_ip	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
native_transport_max_concurrent_requests_in_bytes_per_ip	no	yes
=	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
maxMemory	no	yes
(	no	no
)	no	no
/	no	no
40	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
commitlog_total_space_in_mb	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
final	no	no
int	no	no
preferredSizeInMB	no	yes
=	no	no
8192	no	no
;	no	no
try	no	no
{	no	no
final	no	no
long	no	no
totalSpaceInBytes	no	yes
=	no	no
guessFileStore	no	yes
(	no	no
conf	no	yes
.	no	no
commitlog_directory	no	yes
)	no	no
.	no	no
getTotalSpace	no	yes
(	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
commitlog_total_space_in_mb	no	yes
=	no	no
calculateDefaultSpaceInMB	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
commitlog_directory	no	yes
,	no	no
,	no	no
preferredSizeInMB	no	yes
,	no	no
totalSpaceInBytes	no	yes
,	no	no
1	no	no
,	no	no
4	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
commitlog_directory	no	yes
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
cdc_enabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
FBUtilities	no	yes
.	no	no
isWindows	no	yes
&&	no	no
conf	no	yes
.	no	no
commitlog_compression	no	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
cdc_raw_directory	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
cdc_raw_directory	no	yes
=	no	no
storagedirFor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
cdc_total_space_in_mb	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
logInfo	no	no
(	no	no
String	no	no
property	yes	no
,	no	no
long	no	no
actualValue	yes	no
,	no	no
long	no	no
lowestAcceptedValue	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
useOffheapMerkleTrees	no	no
(	no	no
boolean	no	no
value	yes	no
)	no	no
{	no	no

public	no	no
Config	no	no
loadConfig	no	no
(	no	no
URL	no	no
url	yes	no
)	no	no
throws	no	no
ConfigurationException	no	no
{	no	no
try	no	no
{	no	no

public	no	no
static	no	no
void	no	no
rebuildSecondaryIndex	no	no
(	no	no
String	no	no
ksName	yes	yes
,	no	no
String	no	no
cfName	yes	yes
,	no	no
String	no	no
...	no	no
idxNames	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
cfs	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
ksName	yes	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
cfName	yes	yes
)	no	no
;	no	no

throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
long	no	no
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ColumnFamilyStore	no	yes
cfs	no	yes
:	no	no
concatWithIndexes	no	yes
(	no	no
)	no	no
)	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	no	yes
:	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
now	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
now	no	yes
,	no	no
sstable	no	yes
.	no	no
maxDataAge	no	yes
)	no	no
;	no	no
truncatedAt	no	yes
=	no	no
now	no	yes
;	no	no
Runnable	no	no
truncateRunnable	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
data	no	yes
.	no	no
notifyTruncated	no	yes
(	no	no
truncatedAt	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
DatabaseDescriptor	no	yes
.	no	no
isAutoSnapshot	no	yes
(	no	no
)	no	no
)	no	no
snapshot	no	yes
(	no	no
Keyspace	no	yes
.	no	no
getTimestampedSnapshotNameWithPrefix	no	yes
(	no	no
name	yes	yes
,	no	no
SNAPSHOT_TRUNCATE_PREFIX	no	yes
)	no	no
)	no	no
;	no	no
discardSSTables	no	yes
(	no	no
truncatedAt	no	yes
)	no	no
;	no	no
indexManager	no	yes
.	no	no
truncateAllIndexesBlocking	no	yes
(	no	no
truncatedAt	no	yes
)	no	no
;	no	no
viewManager	no	yes
.	no	no
truncateBlocking	no	yes
(	no	no
replayAfter	no	yes
,	no	no
truncatedAt	no	yes
)	no	no
;	no	no
SystemKeyspace	no	yes
.	no	no
saveTruncationRecord	no	yes
(	no	no
ColumnFamilyStore	no	yes
.	no	no
this	no	no
,	no	no
truncatedAt	no	yes
,	no	no
replayAfter	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
invalidateCaches	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
verifyFullPermissions	no	no
(	no	no
File	no	no
dir	no	no
,	no	no
String	no	no
dataDir	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
dir	no	no
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
removeTemporaryDirectories	no	no
(	no	no
)	no	no
{	no	no
for	no	no
(	no	no
File	no	yes
dataDir	no	yes
:	no	no
dataPaths	no	no
)	no	no
{	no	no
File	no	yes
tmpDir	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
dataDir	no	yes
,	no	no
TMP_SUBDIR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tmpDir	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
DiskBoundaries	no	yes
getDiskBoundaries	no	no
(	no	no
ColumnFamilyStore	no	no
cfs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
cfs	no	yes
.	no	no
getPartitioner	no	yes
(	no	no
)	no	no
.	no	no
splitter	no	yes
(	no	no
)	no	no
.	no	no
isPresent	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
new	no	no
DiskBoundaries	no	yes
(	no	no
cfs	no	yes
,	no	no
cfs	no	yes
.	no	no
getDirectories	no	yes
(	no	no
)	no	no
.	no	no
getWriteableLocations	no	yes
(	no	no
)	no	no
,	no	no
DisallowedDirectories	no	yes
.	no	no
getDirectoriesVersion	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
diskBoundaries	yes	yes
==	no	no
null	no	no
||	no	no
diskBoundaries	yes	yes
.	no	no
isOutOfDate	no	no
(	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
if	no	no
(	no	no
diskBoundaries	yes	yes
==	no	no
null	no	no
||	no	no
diskBoundaries	yes	yes
.	no	no
isOutOfDate	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
cfs	no	yes
.	no	no
keyspace	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
cfs	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DiskBoundaries	no	yes
oldBoundaries	yes	yes
=	no	no
diskBoundaries	yes	yes
;	no	no
diskBoundaries	yes	yes
=	no	no
getDiskBoundaryValue	no	yes
(	no	no
cfs	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
createReplicationStrategy	no	no
(	no	no
KeyspaceMetadata	no	no
ksm	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
createReplicationStrategy	no	yes
(	no	no
KeyspaceMetadata	no	no
ksm	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ksm	yes	yes
.	no	no
name	no	yes
+	no	no
+	no	no
ksm	yes	yes
.	no	no
params	no	yes
)	no	no
;	no	no
replicationStrategy	no	yes
=	no	no
ksm	yes	yes
.	no	no
createReplicationStrategy	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
ksm	yes	yes
.	no	no
params	no	yes
.	no	no
replication	no	no
.	no	no
equals	no	no
(	no	no
replicationParams	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
synchronized	no	no
List	no	no
<	no	no
String	no	no
>	no	no
importNewSSTables	no	no
(	no	no
Options	no	no
options	yes	no
)	no	no
{	no	no

List	no	yes
<	no	no
Pair	no	yes
<	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
,	no	no
String	no	yes
>>	no	no
listers	no	yes
=	no	no
getSSTableListers	no	yes
(	no	no
options	no	yes
.	no	no
srcPaths	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
Descriptor	no	yes
>	no	no
currentDescriptors	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	no	yes
:	no	no
cfs	no	yes
.	no	no
getSSTables	no	yes
(	no	no
SSTableSet	no	yes
.	no	no
CANONICAL	no	yes
)	no	no
)	no	no
currentDescriptors	no	yes
.	no	no
add	no	yes
(	no	no
sstable	no	yes
.	no	no
descriptor	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
failedDirectories	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
options	no	yes
.	no	no
verifySSTables	no	yes
||	no	no
options	no	yes
.	no	no
verifyTokens	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
Pair	no	yes
<	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
,	no	no
String	no	yes
>	no	no
listerPair	no	yes
:	no	no
listers	no	yes
)	no	no
{	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
lister	no	yes
=	no	no
listerPair	no	yes
.	no	no
left	no	yes
;	no	no
String	no	yes
dir	yes	yes
=	no	no
listerPair	no	yes
.	no	no
right	no	yes
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	yes
,	no	no
Set	no	yes
<	no	no
Component	no	no
>>	no	no
entry	no	yes
:	no	no
lister	no	yes
.	no	no
list	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Descriptor	no	yes
descriptor	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
currentDescriptors	no	yes
.	no	no
contains	no	no
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
verifySSTableForImport	no	yes
(	no	no
descriptor	yes	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
options	no	yes
.	no	no
verifyTokens	no	yes
,	no	no
options	no	yes
.	no	no
verifySSTables	no	yes
,	no	no
options	no	yes
.	no	no
extendedVerify	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
dir	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
failedDirectories	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
options	no	yes
.	no	no
verifySSTables	no	yes
||	no	no
options	no	yes
.	no	no
verifyTokens	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
Pair	no	no
<	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
,	no	no
String	no	yes
>	no	no
listerPair	no	yes
:	no	no
listers	no	no
)	no	no
{	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
lister	no	yes
=	no	no
listerPair	no	yes
.	no	no
left	no	yes
;	no	no
String	no	yes
dir	no	yes
=	no	no
listerPair	no	yes
.	no	no
right	no	yes
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	yes
,	no	no
Set	no	no
<	no	no
Component	no	no
>>	no	no
entry	no	yes
:	no	no
lister	no	yes
.	no	no
list	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Descriptor	no	yes
descriptor	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
currentDescriptors	no	no
.	no	no
contains	no	no
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
verifySSTableForImport	no	yes
(	no	no
descriptor	yes	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
options	no	yes
.	no	no
verifyTokens	no	yes
,	no	no
options	no	yes
.	no	no
verifySSTables	no	yes
,	no	no
options	no	yes
.	no	no
extendedVerify	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
dir	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
descriptor	yes	yes
,	no	no
dir	no	yes
,	no	no
t	yes	yes
)	no	no
;	no	no
failedDirectories	no	yes
.	no	no
add	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
}	no	no
}	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
newSSTables	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Pair	no	no
<	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
,	no	no
String	no	yes
>	no	no
listerPair	no	yes
:	no	no
listers	no	no
)	no	no
{	no	no
Directories	no	yes
.	no	no
SSTableLister	no	yes
lister	no	yes
=	no	no
listerPair	no	yes
.	no	no
left	no	yes
;	no	no
String	no	yes
dir	yes	yes
=	no	no
listerPair	no	yes
.	no	no
right	no	yes
;	no	no
if	no	no
(	no	no
failedDirectories	no	yes
.	no	no
contains	no	yes
(	no	no
dir	yes	yes
)	no	no
)	no	no
continue	no	no
;	no	no
Set	no	yes
<	no	no
MovedSSTable	no	yes
>	no	no
movedSSTables	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
newSSTablesPerDirectory	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	yes
,	no	no
Set	no	yes
<	no	no
Component	no	no
>>	no	no
entry	no	yes
:	no	no
lister	no	yes
.	no	no
list	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Descriptor	no	yes
oldDescriptor	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentDescriptors	no	yes
.	no	no
contains	no	yes
(	no	no
oldDescriptor	no	yes
)	no	no
)	no	no
continue	no	no
;	no	no
File	no	yes
targetDir	no	yes
=	no	no
getTargetDirectory	no	yes
(	no	no
dir	yes	yes
,	no	no
oldDescriptor	no	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Descriptor	no	yes
newDescriptor	no	yes
=	no	no
cfs	no	yes
.	no	no
getUniqueDescriptorFor	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
targetDir	no	yes
)	no	no
;	no	no
maybeMutateMetadata	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
options	no	yes
)	no	no
;	no	no
movedSSTables	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
MovedSSTable	no	yes
(	no	no
newDescriptor	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
failedDirectories	no	yes
.	no	no
contains	no	yes
(	no	no
dir	no	yes
)	no	no
)	no	no
continue	no	no
;	no	no
Set	no	yes
<	no	no
MovedSSTable	no	yes
>	no	no
movedSSTables	yes	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
newSSTablesPerDirectory	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	yes
,	no	no
Set	no	yes
<	no	no
Component	no	no
>>	no	no
entry	no	yes
:	no	no
lister	no	no
.	no	no
list	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Descriptor	no	yes
oldDescriptor	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentDescriptors	no	yes
.	no	no
contains	no	yes
(	no	no
oldDescriptor	no	yes
)	no	no
)	no	no
continue	no	no
;	no	no
File	no	yes
targetDir	no	yes
=	no	no
getTargetDirectory	no	yes
(	no	no
dir	no	yes
,	no	no
oldDescriptor	no	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Descriptor	no	yes
newDescriptor	no	yes
=	no	no
cfs	no	yes
.	no	no
getUniqueDescriptorFor	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
targetDir	no	yes
)	no	no
;	no	no
maybeMutateMetadata	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
options	no	yes
)	no	no
;	no	no
movedSSTables	yes	yes
.	no	no
add	no	yes
(	no	no
new	no	no
MovedSSTable	no	yes
(	no	no
newDescriptor	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
SSTableReader	no	yes
sstable	no	yes
=	no	no
SSTableReader	no	yes
.	no	no
moveAndOpenSSTable	no	yes
(	no	no
cfs	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
newDescriptor	no	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
newSSTablesPerDirectory	no	yes
.	no	no
add	no	yes
(	no	no
sstable	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	no
)	no	no
{	no	no
newSSTablesPerDirectory	no	yes
.	no	no
forEach	no	yes
(	no	no
s	no	yes
->	no	no
s	no	yes
.	no	no
selfRef	no	yes
(	no	no
)	no	no
.	no	no
release	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
snapshotOnVersionChange	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
previous	yes	yes
=	no	no
getPreviousVersionString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
next	yes	yes
=	no	no
FBUtilities	no	yes
.	no	no
getReleaseVersionString	no	yes
(	no	no
)	no	no
;	no	no
FBUtilities	no	yes
.	no	no
setPreviousReleaseVersionString	no	yes
(	no	no
previous	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
previous	yes	yes
.	no	no
equals	no	no
(	no	no
NULL_VERSION	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
previous	yes	yes
.	no	no
equals	no	no
(	no	no
next	yes	yes
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
writePreparedStatement	no	no
(	no	no
String	no	no
loggedKeyspace	yes	yes
,	no	no
MD5Digest	no	no
key	no	yes
,	no	no
String	no	no
cql	yes	yes
)	no	no
{	no	no
executeInternal	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
PreparedStatements	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
loggedKeyspace	yes	yes
,	no	no
key	no	yes
.	no	no
byteBuffer	no	yes
(	no	no
)	no	no
,	no	no
cql	yes	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
migratePeers	no	no
(	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
newPeers	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
SchemaConstants	no	yes
.	no	no
SYSTEM_KEYSPACE_NAME	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
PEERS_V2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
newPeers	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
peersName	yes	yes
,	no	no
legacyPeersName	yes	yes
,	no	no
peersName	yes	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
legacyPeersName	yes	yes
)	no	no
;	no	no
String	no	yes
insert	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
peersName	yes	yes
)	no	no
;	no	no
UntypedResultSet	no	yes
rows	no	yes
=	no	no
QueryProcessor	no	yes
.	no	no
executeInternalWithPaging	no	yes
(	no	no
query	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
int	no	no
transferred	no	yes
=	no	no
0	no	no
;	no	no

private	no	no
static	no	no
void	no	no
migratePeers	no	no
(	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
newPeers	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
SchemaConstants	no	yes
.	no	no
SYSTEM_KEYSPACE_NAME	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
PEERS_V2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
newPeers	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
peersName	no	yes
,	no	no
legacyPeersName	no	yes
,	no	no
peersName	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
legacyPeersName	no	yes
)	no	no
;	no	no
String	no	yes
insert	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
peersName	no	yes
)	no	no
;	no	no
UntypedResultSet	no	yes
rows	no	yes
=	no	no
QueryProcessor	no	yes
.	no	no
executeInternalWithPaging	no	yes
(	no	no
query	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
int	no	no
transferred	yes	yes
=	no	no
0	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
legacyPeersName	no	yes
,	no	no
peersName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
UntypedResultSet	no	yes
.	no	no
Row	no	no
row	no	no
:	no	no
rows	no	yes
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
migratePeerEvents	no	no
(	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
newPeerEvents	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
SchemaConstants	no	yes
.	no	no
SYSTEM_KEYSPACE_NAME	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
PEER_EVENTS_V2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
newPeerEvents	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
peerEventsName	no	yes
,	no	no
legacyPeerEventsName	no	yes
,	no	no
peerEventsName	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
legacyPeerEventsName	no	yes
)	no	no
;	no	no
String	no	yes
insert	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
peerEventsName	no	yes
)	no	no
;	no	no
UntypedResultSet	no	yes
rows	no	yes
=	no	no
QueryProcessor	no	yes
.	no	no
executeInternalWithPaging	no	yes
(	no	no
query	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
int	no	no
transferred	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
UntypedResultSet	no	yes
.	no	no
Row	no	no
row	no	no
:	no	no
rows	no	yes
)	no	no
{	no	no

static	no	no
void	no	no
migrateTransferredRanges	no	no
(	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
newTransferredRanges	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
SchemaConstants	no	yes
.	no	no
SYSTEM_KEYSPACE_NAME	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
TRANSFERRED_RANGES_V2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
newTransferredRanges	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
transferredRangesName	no	yes
,	no	no
legacyTransferredRangesName	no	yes
,	no	no
transferredRangesName	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
legacyTransferredRangesName	no	yes
)	no	no
;	no	no
String	no	yes
insert	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
transferredRangesName	no	yes
)	no	no
;	no	no
UntypedResultSet	no	yes
rows	no	yes
=	no	no
QueryProcessor	no	yes
.	no	no
executeInternalWithPaging	no	yes
(	no	no
query	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
int	no	no
transferred	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
UntypedResultSet	no	yes
.	no	no
Row	no	no
row	no	no
:	no	no
rows	no	yes
)	no	no
{	no	no

static	no	no
void	no	no
migrateAvailableRanges	no	no
(	no	no
)	no	no
{	no	no
ColumnFamilyStore	no	yes
newAvailableRanges	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
SchemaConstants	no	yes
.	no	no
SYSTEM_KEYSPACE_NAME	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
AVAILABLE_RANGES_V2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
newAvailableRanges	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
availableRangesName	no	yes
,	no	no
legacyAvailableRangesName	no	yes
,	no	no
availableRangesName	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
legacyAvailableRangesName	no	yes
)	no	no
;	no	no
String	no	yes
insert	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
availableRangesName	no	yes
)	no	no
;	no	no
UntypedResultSet	no	yes
rows	no	yes
=	no	no
QueryProcessor	no	yes
.	no	no
executeInternalWithPaging	no	yes
(	no	no
query	no	yes
,	no	no
1000	no	no
)	no	no
;	no	no
int	no	no
transferred	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
UntypedResultSet	no	yes
.	no	no
Row	no	no
row	no	no
:	no	no
rows	no	yes
)	no	no
{	no	no

void	no	no
forceRecycleAll	no	no
(	no	no
Iterable	no	no
<	no	no
TableId	no	yes
>	no	no
droppedTables	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
CommitLogSegment	no	yes
>	no	no
segmentsToRecycle	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
activeSegments	no	yes
)	no	no
;	no	no
CommitLogSegment	no	yes
last	no	yes
=	no	no
segmentsToRecycle	no	yes
.	no	no
get	no	yes
(	no	no
segmentsToRecycle	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
advanceAllocatingFrom	no	yes
(	no	no
last	no	yes
)	no	no
;	no	no
last	no	yes
.	no	no
waitForModifications	no	yes
(	no	no
)	no	no
;	no	no
Keyspace	no	yes
.	no	no
writeOrder	no	yes
.	no	no
awaitNewBarrier	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
?	no	no
>	no	no
future	no	yes
=	no	no
flushDataFrom	no	yes
(	no	no
segmentsToRecycle	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
CommitLogSegment	no	yes
segment	no	yes
:	no	no
activeSegments	no	yes
)	no	no
for	no	no
(	no	no
TableId	no	yes
tableId	no	yes
:	no	no
droppedTables	no	yes
)	no	no
segment	no	yes
.	no	no
markClean	no	yes
(	no	no
tableId	no	yes
,	no	no
CommitLogPosition	no	yes
.	no	no
NONE	no	yes
,	no	no
segment	no	yes
.	no	no
getCurrentCommitLogPosition	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
CommitLogSegment	no	yes
segment	no	yes
:	no	no
activeSegments	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
segment	no	yes
.	no	no
isUnused	no	yes
(	no	no
)	no	no
)	no	no
archiveAndDiscard	no	yes
(	no	no
segment	no	yes
)	no	no
;	no	no
}	no	no
CommitLogSegment	no	yes
first	no	yes
;	no	no
if	no	no
(	no	no
(	no	no
first	no	yes
=	no	no
activeSegments	no	yes
.	no	no
peek	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
first	no	yes
.	no	no
id	no	yes
<=	no	no
last	no	yes
.	no	no
id	no	yes
)	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

void	no	no
archiveAndDiscard	no	no
(	no	no
final	no	no
CommitLogSegment	no	no
segment	yes	yes
)	no	no
{	no	no
boolean	no	no
archiveSuccess	no	yes
=	no	no
commitLog	no	yes
.	no	no
archiver	no	yes
.	no	no
maybeWaitForArchiving	no	yes
(	no	no
segment	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
activeSegments	no	yes
.	no	no
remove	no	yes
(	no	no
segment	yes	yes
)	no	no
)	no	no
return	no	no
;	no	no

public	no	no
void	no	no
discardCompletedSegments	no	no
(	no	no
final	no	no
TableId	no	no
id	no	yes
,	no	no
final	no	no
CommitLogPosition	no	no
lowerBound	no	yes
,	no	no
final	no	no
CommitLogPosition	no	no
upperBound	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
lowerBound	no	yes
,	no	no
upperBound	no	yes
,	no	no
id	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Iterator	no	no
<	no	no
CommitLogSegment	no	yes
>	no	no
iter	no	yes
=	no	no
segmentManager	no	no
.	no	no
getActiveSegments	no	no
(	no	no
)	no	no
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
CommitLogSegment	no	yes
segment	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
segment	yes	yes
.	no	no
markClean	no	yes
(	no	no
id	no	yes
,	no	no
lowerBound	no	yes
,	no	no
upperBound	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
segment	yes	yes
.	no	no
isUnused	no	no
(	no	no
)	no	no
)	no	no
{	no	no

static	no	no
List	no	yes
<	no	no
File	no	yes
>	no	no
filterCommitLogFiles	no	no
(	no	no
File	no	yes
[	no	no
]	no	no
toFilter	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
File	no	yes
>	no	no
filtered	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
toFilter	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
File	no	yes
file	yes	no
:	no	no
toFilter	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
shouldSkip	no	no
(	no	no
file	yes	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
shouldSkipSegmentId	no	yes
(	no	no
file	yes	yes
,	no	no
desc	no	yes
,	no	no
minPosition	no	yes
)	no	no
)	no	no
return	no	no
;	no	no
CommitLogSegmentReader	no	yes
segmentReader	no	yes
;	no	no
try	no	no
{	no	no
segmentReader	no	yes
=	no	no
new	no	no
CommitLogSegmentReader	no	yes
(	no	no
handler	no	yes
,	no	no
desc	no	yes
,	no	no
reader	no	yes
,	no	no
tolerateTruncation	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
handler	no	yes
.	no	no
handleUnrecoverableError	no	yes
(	no	no
new	no	no
CommitLogReadException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
,	no	no
CommitLogReadErrorReason	no	yes
.	no	no
UNRECOVERABLE_UNKNOWN_ERROR	no	yes
,	no	no
tolerateTruncation	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
ReadStatusTracker	no	yes
statusTracker	no	yes
=	no	no
new	no	no
ReadStatusTracker	no	yes
(	no	no
mutationLimit	no	yes
,	no	no
tolerateTruncation	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
CommitLogSegmentReader	no	yes
.	no	no
SyncSegment	no	no
syncSegment	no	yes
:	no	no
segmentReader	no	yes
)	no	no
{	no	no
statusTracker	no	yes
.	no	no
tolerateErrorsInSection	no	yes
=	no	no
tolerateTruncation	no	yes
&	no	no
syncSegment	no	yes
.	no	no
toleratesErrorsInSection	no	yes
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
id	no	yes
==	no	no
minPosition	no	yes
.	no	no
segmentId	no	yes
&&	no	no
syncSegment	no	yes
.	no	no
endPosition	no	yes
<	no	no
minPosition	no	yes
.	no	no
position	no	yes
)	no	no
continue	no	no
;	no	no
statusTracker	no	yes
.	no	no
errorContext	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
syncSegment	no	yes
.	no	no
fileStartPosition	no	yes
,	no	no
desc	no	yes
.	no	no
fileName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
readSection	no	yes
(	no	no
handler	no	yes
,	no	no
syncSegment	no	yes
.	no	no
input	no	yes
,	no	no
minPosition	no	yes
,	no	no
syncSegment	no	yes
.	no	no
endPosition	no	yes
,	no	no
statusTracker	no	yes
,	no	no
desc	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
statusTracker	no	yes
.	no	no
shouldContinue	no	yes
(	no	no
)	no	no
)	no	no
break	no	no
;	no	no

private	no	no
boolean	no	no
shouldSkipSegmentId	no	no
(	no	no
File	no	no
file	yes	no
,	no	no
CommitLogDescriptor	no	no
desc	yes	no
,	no	no
CommitLogPosition	no	no
minPosition	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
TableId	no	yes
,	no	no
IntervalSet	no	yes
<	no	no
CommitLogPosition	no	yes
>>	no	no
cfPersisted	yes	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
ReplayFilter	no	yes
replayFilter	no	yes
=	no	no
ReplayFilter	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ColumnFamilyStore	no	no
cfs	no	yes
:	no	no
ColumnFamilyStore	no	no
.	no	no
all	no	no
(	no	no
)	no	no
)	no	no
{	no	no
CommitLogPosition	no	yes
truncatedAt	no	yes
=	no	no
SystemKeyspace	no	yes
.	no	no
getTruncatedPosition	no	yes
(	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
truncatedAt	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
restoreTime	no	yes
=	no	no
commitLog	no	yes
.	no	no
archiver	no	yes
.	no	no
restorePointInTime	no	yes
;	no	no
long	no	no
truncatedTime	no	yes
=	no	no
SystemKeyspace	no	yes
.	no	no
getTruncatedAt	no	yes
(	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
truncatedTime	no	yes
>	no	no
restoreTime	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
replayFilter	no	yes
.	no	no
includes	no	no
(	no	no
cfs	no	yes
.	no	no
metadata	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
keyspace	no	yes
,	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
name	no	yes
)	no	no
;	no	no
SystemKeyspace	no	yes
.	no	no
removeTruncationRecord	no	yes
(	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
truncatedAt	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
}	no	no
IntervalSet	no	yes
<	no	no
CommitLogPosition	no	yes
>	no	no
filter	no	yes
=	no	no
persistedIntervals	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
,	no	no
truncatedAt	no	yes
)	no	no
;	no	no
cfPersisted	yes	yes
.	no	no
put	no	yes
(	no	no
cfs	no	yes
.	no	no
metadata	no	yes
.	no	no
id	no	yes
,	no	no
filter	no	yes
)	no	no
;	no	no
}	no	no
CommitLogPosition	no	yes
globalPosition	yes	yes
=	no	no
firstNotCovered	no	yes
(	no	no
cfPersisted	yes	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
boolean	no	no
shouldSkipSegmentOnError	no	no
(	no	no
CommitLogReadException	no	no
exception	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
exception	no	yes
.	no	no
permissible	no	yes
)	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
exception	no	yes
)	no	no
;	no	no
else	no	no
if	no	no
(	no	no
Boolean	no	no
.	no	no
getBoolean	no	no
(	no	no
IGNORE_REPLAY_ERRORS_PROPERTY	yes	no
)	no	no
)	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
exception	no	yes
)	no	no
;	no	no
else	no	no
if	no	no
(	no	no
!	no	no
CommitLog	no	no
.	no	no
handleCommitError	no	no
(	no	no
,	no	no
exception	no	yes
)	no	no
)	no	no
{	no	no

static	no	no
void	no	no
validateSSTableBoundsForAnticompaction	no	no
(	no	no
UUID	no	no
sessionID	no	yes
,	no	no
Collection	no	no
<	no	no
SSTableReader	no	no
>	no	no
sstables	no	no
,	no	no
RangesAtEndpoint	no	no
ranges	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
Range	no	yes
<	no	no
Token	no	yes
>>	no	no
normalizedRanges	no	yes
=	no	no
Range	no	yes
.	no	no
normalize	no	yes
(	no	no
ranges	no	yes
.	no	no
ranges	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	no
sstable	no	yes
:	no	no
sstables	no	no
)	no	no
{	no	no
Bounds	no	yes
<	no	no
Token	no	yes
>	no	no
bounds	no	yes
=	no	no
new	no	no
Bounds	no	yes
<	no	no
>	no	no
(	no	no
sstable	no	yes
.	no	no
first	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
sstable	no	yes
.	no	no
last	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
Iterables	no	no
.	no	no
any	no	no
(	no	no
normalizedRanges	no	yes
,	no	no
r	no	no
->	no	no
(	no	no
r	no	no
.	no	no
contains	no	no
(	no	no
bounds	no	yes
.	no	no
left	no	no
)	no	no
&&	no	no
r	no	no
.	no	no
contains	no	no
(	no	no
bounds	no	yes
.	no	no
right	no	no
)	no	no
)	no	no
||	no	no
r	no	no
.	no	no
intersects	no	no
(	no	no
bounds	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
PreviewKind	no	yes
.	no	no
NONE	no	yes
.	no	no
logPrefix	no	yes
(	no	no
sessionID	no	yes
)	no	no
,	no	no
sstable	no	yes
,	no	no
bounds	no	yes
,	no	no
normalizedRanges	no	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
findSSTablesToAnticompact	no	no
(	no	no
Iterator	no	no
<	no	no
SSTableReader	no	yes
>	no	no
sstableIterator	no	yes
,	no	no
List	no	no
<	no	no
Range	no	no
<	no	no
Token	no	yes
>>	no	no
normalizedRanges	no	no
,	no	no
UUID	no	no
parentRepairSession	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
fullyContainedSSTables	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
sstableIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
SSTableReader	no	yes
sstable	yes	yes
=	no	no
sstableIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Bounds	no	yes
<	no	no
Token	no	yes
>	no	no
sstableBounds	no	yes
=	no	no
new	no	no
Bounds	no	yes
<	no	no
>	no	no
(	no	no
sstable	yes	yes
.	no	no
first	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
last	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Range	no	no
<	no	no
Token	no	yes
>	no	no
r	yes	no
:	no	no
normalizedRanges	no	no
)	no	no
{	no	no
if	no	no
(	no	no
r	yes	no
.	no	no
contains	no	no
(	no	no
sstable	yes	yes
.	no	no
first	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
r	yes	no
.	no	no
contains	no	no
(	no	no
sstable	yes	yes
.	no	no
last	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

public	no	no
Future	no	no
<	no	no
?	no	no
>	no	no
submitUserDefined	no	no
(	no	no
final	no	no
ColumnFamilyStore	no	no
cfs	no	yes
,	no	no
final	no	no
Collection	no	yes
<	no	no
Descriptor	no	no
>	no	no
dataFiles	no	yes
,	no	no
final	no	no
int	no	no
gcBefore	no	no
)	no	no
{	no	no
Runnable	no	no
runnable	no	no
=	no	no
new	no	no
WrappedRunnable	no	no
(	no	no
)	no	no
{	no	no
protected	no	no
void	no	no
runMayThrow	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Collection	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
sstables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
dataFiles	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Descriptor	no	no
desc	yes	yes
:	no	no
dataFiles	no	yes
)	no	no
{	no	no
SSTableReader	no	yes
sstable	no	yes
=	no	no
lookupSSTable	no	yes
(	no	no
cfs	no	yes
,	no	no
desc	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sstable	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
void	no	no
doAntiCompaction	no	no
(	no	no
ColumnFamilyStore	no	no
cfs	no	no
,	no	no
RangesAtEndpoint	no	no
ranges	no	no
,	no	no
LifecycleTransaction	no	no
txn	no	yes
,	no	no
UUID	no	no
pendingRepair	yes	no
,	no	no
BooleanSupplier	no	no
isCancelled	no	no
)	no	no
{	no	no
int	no	no
originalCount	yes	yes
=	no	no
txn	no	yes
.	no	no
originals	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

else	no	no
{	no	no
unrepairedWriter	no	yes
.	no	no
append	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
bytesScanned	no	yes
=	no	no
scanners	no	yes
.	no	no
getTotalBytesScanned	no	yes
(	no	no
)	no	no
;	no	no
compactionRateLimiterAcquire	no	yes
(	no	no
limiter	no	yes
,	no	no
bytesScanned	no	yes
,	no	no
lastBytesScanned	no	yes
,	no	no
compressionRatio	no	yes
)	no	no
;	no	no
lastBytesScanned	no	yes
=	no	no
bytesScanned	no	yes
;	no	no
}	no	no
}	no	no
fullWriter	no	yes
.	no	no
prepareToCommit	no	yes
(	no	no
)	no	no
;	no	no
transWriter	no	yes
.	no	no
prepareToCommit	no	yes
(	no	no
)	no	no
;	no	no
unrepairedWriter	no	yes
.	no	no
prepareToCommit	no	yes
(	no	no
)	no	no
;	no	no
txn	yes	yes
.	no	no
checkpoint	no	yes
(	no	no
)	no	no
;	no	no
txn	yes	yes
.	no	no
obsoleteOriginals	no	yes
(	no	no
)	no	no
;	no	no
txn	yes	yes
.	no	no
prepareToCommit	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
fullSSTables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
fullWriter	no	yes
.	no	no
finished	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
transSSTables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
transWriter	no	yes
.	no	no
finished	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
unrepairedSSTables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
unrepairedWriter	no	yes
.	no	no
finished	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fullWriter	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
setNewLocalCompactionStrategy	no	no
(	no	no
CompactionParams	no	no
params	yes	no
)	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
getCompactionCandidates	no	no
(	no	no
Iterable	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
candidateSSTables	no	yes
,	no	no
long	no	no
now	no	yes
,	no	no
int	no	no
base	no	yes
)	no	no
{	no	no
Iterable	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
candidates	no	yes
=	no	no
filterOldSSTables	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
candidateSSTables	no	yes
)	no	no
,	no	no
options	no	yes
.	no	no
maxSSTableAge	no	yes
,	no	no
now	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>>	no	no
buckets	yes	yes
=	no	no
getBuckets	no	yes
(	no	no
createSSTableAndMinTimestampPairs	no	yes
(	no	no
candidates	no	yes
)	no	no
,	no	no
options	no	yes
.	no	no
baseTime	no	yes
,	no	no
base	no	yes
,	no	no
now	no	yes
,	no	no
options	no	yes
.	no	no
maxWindowSize	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
getSSTablesForSTCS	no	no
(	no	no
Collection	no	no
<	no	no
SSTableReader	no	yes
>	no	no
sstables	yes	yes
,	no	no
int	no	no
minThreshold	no	yes
,	no	no
int	no	no
maxThreshold	no	yes
,	no	no
SizeTieredCompactionStrategyOptions	no	no
stcsOptions	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
s	yes	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
mostInterestingBucket	no	yes
(	no	no
getSTCSBuckets	no	yes
(	no	no
sstables	yes	yes
,	no	no
stcsOptions	no	yes
)	no	no
,	no	no
minThreshold	no	yes
,	no	no
maxThreshold	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
compactionCounter	no	yes
.	no	no
length	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
j	no	yes
,	no	no
compactionCounter	no	yes
[	no	no
j	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
generations	no	no
.	no	no
length	no	yes
-	no	no
1	no	no
;	no	no
i	no	no
>	no	no
0	no	no
;	no	no
i	no	no
--	no	no
)	no	no
{	no	no
if	no	no
(	no	no
getLevelSize	no	no
(	no	no
i	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
compactionCounter	no	yes
[	no	no
i	no	no
]	no	no
>	no	no
NO_COMPACTION_LIMIT	no	no
)	no	no
{	no	no
PartitionPosition	no	yes
max	no	yes
=	no	no
null	no	no
;	no	no
PartitionPosition	no	yes
min	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
candidate	no	yes
:	no	no
candidates	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
min	no	yes
==	no	no
null	no	no
||	no	no
candidate	no	yes
.	no	no
first	no	yes
.	no	no
compareTo	no	yes
(	no	no
min	no	yes
)	no	no
<	no	no
0	no	no
)	no	no
min	no	yes
=	no	no
candidate	no	yes
.	no	no
first	no	yes
;	no	no
if	no	no
(	no	no
max	no	yes
==	no	no
null	no	no
||	no	no
candidate	no	yes
.	no	no
last	no	yes
.	no	no
compareTo	no	yes
(	no	no
max	no	yes
)	no	no
>	no	no
0	no	no
)	no	no
max	no	yes
=	no	no
candidate	no	yes
.	no	no
last	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
min	no	yes
==	no	no
null	no	no
||	no	no
max	no	yes
==	no	no
null	no	no
||	no	no
min	no	yes
.	no	no
equals	no	yes
(	no	no
max	no	yes
)	no	no
)	no	no
return	no	no
candidates	no	yes
;	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
compacting	no	yes
=	no	no
cfs	no	yes
.	no	no
getTracker	no	yes
(	no	no
)	no	no
.	no	no
getCompacting	no	yes
(	no	no
)	no	no
;	no	no
Range	no	yes
<	no	no
PartitionPosition	no	yes
>	no	no
boundaries	no	yes
=	no	no
new	no	no
Range	no	yes
<	no	no
>	no	no
(	no	no
min	no	yes
,	no	no
max	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	yes	yes
:	no	no
getLevel	no	no
(	no	no
i	no	no
)	no	no
)	no	no
{	no	no
Range	no	yes
<	no	no
PartitionPosition	no	yes
>	no	no
r	no	yes
=	no	no
new	no	no
Range	no	yes
<	no	no
PartitionPosition	no	yes
>	no	no
(	no	no
sstable	yes	yes
.	no	no
first	no	yes
,	no	no
sstable	yes	yes
.	no	no
last	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
boundaries	no	yes
.	no	no
contains	no	no
(	no	no
r	no	yes
)	no	no
&&	no	no
!	no	no
compacting	no	yes
.	no	no
contains	no	no
(	no	no
sstable	yes	yes
)	no	no
)	no	no
{	no	no

private	no	no
synchronized	no	no
void	no	no
removeSessionIfEmpty	no	no
(	no	no
UUID	no	no
sessionID	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
strategies	no	yes
.	no	no
containsKey	no	yes
(	no	no
sessionID	yes	yes
)	no	no
||	no	no
!	no	no
strategies	no	yes
.	no	no
get	no	yes
(	no	no
sessionID	yes	yes
)	no	no
.	no	no
getSSTables	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
runMayThrow	no	no
(	no	no
)	no	no
{	no	no
SSTableReader	no	yes
sstable	yes	yes
=	no	no
transaction	no	yes
.	no	no
onlyOne	no	yes
(	no	no
)	no	no
;	no	no
StatsMetadata	no	yes
metadataBefore	no	yes
=	no	no
sstable	yes	yes
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
level	yes	no
==	no	no
metadataBefore	no	yes
.	no	no
sstableLevel	no	no
)	no	no
{	no	no

int	no	no
estimatedRemainingTasks	no	yes
=	no	no
0	no	no
;	no	no
TreeSet	no	yes
<	no	no
Long	no	yes
>	no	no
allKeys	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
buckets	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Long	no	yes
>	no	no
it	no	yes
=	no	no
allKeys	no	yes
.	no	no
descendingIterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Long	no	yes
key	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
bucket	no	yes
=	no	no
buckets	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
key	no	yes
,	no	no
now	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
bucket	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>=	no	no
minThreshold	no	yes
&&	no	no
key	no	yes
>=	no	no
now	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
Pair	no	yes
<	no	no
SSTableReader	no	yes
,	no	no
Long	no	yes
>>	no	no
pairs	yes	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
createSSTableAndLengthPairs	no	yes
(	no	no
bucket	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>>	no	no
stcsBuckets	no	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
getBuckets	no	yes
(	no	no
pairs	yes	yes
,	no	no
stcsOptions	yes	yes
.	no	no
bucketHigh	no	yes
,	no	no
stcsOptions	yes	yes
.	no	no
bucketLow	no	yes
,	no	no
stcsOptions	yes	yes
.	no	no
minSSTableSize	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
stcsInterestingBucket	no	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
mostInterestingBucket	no	yes
(	no	no
stcsBuckets	no	yes
,	no	no
minThreshold	no	yes
,	no	no
maxThreshold	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
stcsInterestingBucket	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
double	no	no
remaining	no	yes
=	no	no
bucket	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
maxThreshold	no	yes
;	no	no
estimatedRemainingTasks	no	yes
+=	no	no
1	no	no
+	no	no
(	no	no
remaining	no	yes
>	no	no
minThreshold	no	yes
?	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
remaining	no	yes
/	no	no
maxThreshold	no	yes
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sstables	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
Pair	no	yes
<	no	no
SSTableReader	no	yes
,	no	no
Long	no	yes
>>	no	no
pairs	no	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
createSSTableAndLengthPairs	no	yes
(	no	no
bucket	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>>	no	no
stcsBuckets	no	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
getBuckets	no	yes
(	no	no
pairs	no	yes
,	no	no
stcsOptions	no	yes
.	no	no
bucketHigh	no	yes
,	no	no
stcsOptions	no	yes
.	no	no
bucketLow	no	yes
,	no	no
stcsOptions	no	yes
.	no	no
minSSTableSize	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
stcsInterestingBucket	no	yes
=	no	no
SizeTieredCompactionStrategy	no	yes
.	no	no
mostInterestingBucket	no	yes
(	no	no
stcsBuckets	no	yes
,	no	no
minThreshold	no	yes
,	no	no
maxThreshold	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
stcsInterestingBucket	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
double	no	no
remaining	no	yes
=	no	no
bucket	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
maxThreshold	no	yes
;	no	no
estimatedRemainingTasks	no	yes
+=	no	no
1	no	no
+	no	no
(	no	no
remaining	no	yes
>	no	no
minThreshold	no	yes
?	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
remaining	no	yes
/	no	no
maxThreshold	no	yes
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sstables	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
pairs	no	yes
,	no	no
stcsOptions	no	yes
)	no	no
;	no	no
sstables	no	yes
=	no	no
stcsInterestingBucket	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
pairs	no	yes
,	no	no
stcsOptions	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
bucket	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>=	no	no
2	no	no
&&	no	no
key	no	no
<	no	no
now	no	no
)	no	no
{	no	no
double	no	no
remaining	no	yes
=	no	no
bucket	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
maxThreshold	no	yes
;	no	no
estimatedRemainingTasks	no	yes
+=	no	no
1	no	no
+	no	no
(	no	no
remaining	no	yes
>	no	no
minThreshold	no	yes
?	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
remaining	no	yes
/	no	no
maxThreshold	no	yes
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sstables	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
realAppend	no	no
(	no	no
UnfilteredRowIterator	no	no
partition	no	yes
)	no	no
{	no	no
RowIndexEntry	no	yes
rie	no	yes
=	no	no
sstableWriter	no	yes
.	no	no
append	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sstableWriter	no	yes
.	no	no
currentWriter	no	no
(	no	no
)	no	no
.	no	no
getEstimatedOnDiskBytesWritten	no	no
(	no	no
)	no	no
>	no	no
currentBytesToWrite	yes	yes
&&	no	no
currentRatioIndex	no	yes
<	no	no
ratios	no	yes
.	no	no
length	no	no
-	no	no
1	no	no
)	no	no
{	no	no
currentRatioIndex	no	yes
++	no	no
;	no	no
currentBytesToWrite	yes	yes
=	no	no
Math	no	yes
.	no	no
round	no	yes
(	no	no
totalSize	no	yes
*	no	no
ratios	no	yes
[	no	no
currentRatioIndex	no	yes
]	no	no
)	no	no
;	no	no
switchCompactionLocation	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no

Map	no	no
<	no	no
LogReplica	no	no
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
linesByReplica	no	yes
=	no	no
replicas	no	no
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
collect	no	no
(	no	no
Collectors	no	no
.	no	no
toMap	no	no
(	no	no
Function	no	no
.	no	no
<	no	no
LogReplica	no	no
>	no	no
identity	no	no
(	no	no
)	no	no
,	no	no
LogReplica	no	no
::	no	no
readLines	no	no
,	no	no
(	no	no
k	no	yes
,	no	no
v	no	no
)	no	no
->	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
k	no	yes
)	no	no
;	no	no
}	no	no
,	no	no
LinkedHashMap	no	no
::	no	no
new	no	no
)	no	no
)	no	no
;	no	no
int	no	no
maxNumLines	no	yes
=	no	no
linesByReplica	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
List	no	yes
::	no	no
size	no	yes
)	no	no
.	no	no
reduce	no	yes
(	no	no
0	no	no
,	no	no
Integer	no	yes
::	no	no
max	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
maxNumLines	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
firstLine	yes	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
partial	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
LogReplica	no	no
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
linesByReplica	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
currentLines	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
i	no	yes
>=	no	no
currentLines	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
String	no	yes
currentLine	yes	yes
=	no	no
currentLines	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
firstLine	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
firstLine	yes	yes
=	no	no
currentLine	yes	yes
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isPrefixMatch	no	no
(	no	no
firstLine	yes	yes
,	no	no
currentLine	yes	yes
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
currentLines	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
i	no	yes
>=	no	no
currentLines	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
String	no	yes
currentLine	yes	yes
=	no	no
currentLines	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
firstLine	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
firstLine	yes	yes
=	no	no
currentLine	yes	yes
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isPrefixMatch	no	no
(	no	no
firstLine	yes	yes
,	no	no
currentLine	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	yes	yes
,	no	no
firstLine	yes	yes
)	no	no
;	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
setError	no	yes
(	no	no
currentLine	yes	yes
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
firstLine	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
firstLine	yes	yes
.	no	no
equals	no	no
(	no	no
currentLine	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
i	no	yes
==	no	no
currentLines	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	yes	yes
,	no	no
firstLine	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentLine	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
firstLine	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
firstLine	yes	yes
=	no	no
currentLine	yes	yes
;	no	no
partial	no	yes
=	no	no
true	no	no
;	no	no

continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isPrefixMatch	no	no
(	no	no
firstLine	no	yes
,	no	no
currentLine	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	no	yes
,	no	no
firstLine	no	yes
)	no	no
;	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
setError	no	yes
(	no	no
currentLine	no	yes
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
firstLine	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
firstLine	no	yes
.	no	no
equals	no	no
(	no	no
currentLine	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
i	no	no
==	no	no
currentLines	no	no
.	no	no
size	no	no
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	no	yes
,	no	no
firstLine	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentLine	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
firstLine	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
firstLine	no	yes
=	no	no
currentLine	no	yes
;	no	no
partial	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	no	yes
,	no	no
firstLine	no	yes
)	no	no
;	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
setError	no	yes
(	no	no
currentLine	no	yes
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
firstLine	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LogRecord	no	yes
record	yes	yes
=	no	no
LogRecord	no	yes
.	no	no
make	no	yes
(	no	no
firstLine	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
!	no	no
firstLine	no	yes
.	no	no
equals	no	no
(	no	no
currentLine	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
i	no	no
==	no	no
currentLines	no	no
.	no	no
size	no	no
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	no	yes
,	no	no
firstLine	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentLine	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
firstLine	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
firstLine	no	yes
=	no	no
currentLine	no	yes
;	no	no
partial	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getFileName	no	yes
(	no	no
)	no	no
,	no	no
currentLine	no	yes
,	no	no
firstLine	no	yes
)	no	no
;	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
setError	no	yes
(	no	no
currentLine	no	yes
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
firstLine	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LogRecord	no	yes
record	yes	yes
=	no	no
LogRecord	no	yes
.	no	no
make	no	yes
(	no	no
firstLine	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
records	no	no
.	no	no
contains	no	no
(	no	no
record	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
record	yes	yes
,	no	no
record	yes	yes
.	no	no
fileName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setError	no	yes
(	no	no
record	yes	yes
,	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partial	no	yes
)	no	no
record	yes	yes
.	no	no
setPartial	no	yes
(	no	no
)	no	no
;	no	no

void	no	no
append	no	yes
(	no	no
LogRecord	no	no
record	yes	yes
)	no	no
{	no	no
Throwable	no	yes
err	no	yes
=	no	no
Throwables	no	yes
.	no	no
perform	no	yes
(	no	no
null	no	no
,	no	no
replicas	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
r	no	yes
->	no	no
(	no	no
)	no	no
->	no	no
r	no	yes
.	no	no
append	no	yes
(	no	no
record	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
err	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
record	yes	yes
.	no	no
isFinal	no	yes
(	no	no
)	no	no
||	no	no
err	no	yes
.	no	no
getSuppressed	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
==	no	no
replicas	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
Throwables	no	yes
.	no	no
maybeFail	no	yes
(	no	no
err	no	yes
)	no	no
;	no	no

void	no	no
onConflict	no	no
(	no	no
String	no	no
keyspace	yes	no
,	no	no
String	no	no
name	yes	no
,	no	no
String	no	no
fieldName	yes	no
)	no	no
{	no	no

return	no	no
new	no	no
Refs	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
sstablesToValidate	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
com	no	yes
.	no	no
google	no	yes
.	no	no
common	no	yes
.	no	no
base	no	yes
.	no	no
Predicate	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
predicate	no	yes
;	no	no
if	no	no
(	no	no
prs	no	yes
.	no	no
isPreview	no	no
(	no	no
)	no	no
)	no	no
{	no	no
predicate	no	yes
=	no	no
prs	no	yes
.	no	no
previewKind	no	yes
.	no	no
predicate	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isIncremental	no	yes
)	no	no
{	no	no
predicate	no	yes
=	no	no
s	no	yes
->	no	no
parentId	yes	yes
.	no	no
equals	no	yes
(	no	no
s	no	yes
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
pendingRepair	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
predicate	no	yes
=	no	no
(	no	no
s	no	yes
)	no	no
->	no	no
!	no	no
prs	no	yes
.	no	no
isIncremental	no	yes
||	no	no
!	no	no
s	no	yes
.	no	no
isRepaired	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
(	no	no
ColumnFamilyStore	no	no
.	no	no
RefViewFragment	no	no
sstableCandidates	no	no
=	no	no
cfs	no	no
.	no	no
selectAndReference	no	no
(	no	no
View	no	no
.	no	no
select	no	no
(	no	no
SSTableSet	no	no
.	no	no
CANONICAL	no	no
,	no	no
predicate	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	no	yes
:	no	no
sstableCandidates	no	no
.	no	no
sstables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
new	no	no
Bounds	no	no
<	no	no
>	no	no
(	no	no
sstable	no	yes
.	no	no
first	no	no
.	no	no
getToken	no	no
(	no	no
)	no	no
,	no	no
sstable	no	yes
.	no	no
last	no	no
.	no	no
getToken	no	no
(	no	no
)	no	no
)	no	no
.	no	no
intersects	no	no
(	no	no
ranges	no	no
)	no	no
)	no	no
{	no	no
sstablesToValidate	no	yes
.	no	no
add	no	yes
(	no	no
sstable	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
sstables	no	yes
=	no	no
Refs	no	yes
.	no	no
tryRef	no	yes
(	no	no
sstablesToValidate	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sstables	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
static	no	no
RowIterator	no	no
loggingIterator	no	no
(	no	no
RowIterator	no	no
iterator	no	yes
,	no	no
final	no	no
String	no	no
id	yes	no
)	no	no
{	no	no
TableMetadata	no	yes
metadata	yes	yes
=	no	no
iterator	no	yes
.	no	no
metadata	yes	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
UnfilteredRowIterator	no	no
loggingIterator	no	no
(	no	no
UnfilteredRowIterator	no	no
iterator	no	yes
,	no	no
final	no	no
String	no	no
id	yes	no
,	no	no
final	no	no
boolean	no	no
fullDetails	no	no
)	no	no
{	no	no
TableMetadata	no	yes
metadata	yes	yes
=	no	no
iterator	no	yes
.	no	no
metadata	yes	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
cfs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
tableId	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
ComponentManifest	no	yes
manifest	no	yes
=	no	no
header	no	yes
.	no	no
componentManifest	no	yes
;	no	no
long	no	no
totalSize	yes	yes
=	no	no
manifest	no	yes
.	no	no
totalSize	yes	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
fileSequenceNumber	no	yes
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	yes	yes
)	no	no
,	no	no
cfs	no	yes
.	no	no
metadata	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BigTableZeroCopyWriter	no	yes
writer	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
writer	no	yes
=	no	no
createWriter	no	yes
(	no	no
cfs	no	yes
,	no	no
totalSize	yes	yes
,	no	no
manifest	no	yes
.	no	no
components	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
bytesRead	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Component	no	no
component	yes	yes
:	no	no
manifest	no	yes
.	no	no
components	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
length	yes	yes
=	no	no
manifest	no	yes
.	no	no
sizeOf	no	yes
(	no	no
component	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
component	yes	yes
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
length	yes	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
bytesRead	yes	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	yes	yes
)	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
writeComponent	no	yes
(	no	no
component	yes	yes
.	no	no
type	no	yes
,	no	no
in	no	yes
,	no	no
length	yes	yes
)	no	no
;	no	no
session	yes	yes
.	no	no
progress	no	yes
(	no	no
writer	no	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
component	yes	yes
)	no	no
,	no	no
ProgressInfo	no	yes
.	no	no
Direction	no	yes
.	no	no
IN	no	yes
,	no	no
length	yes	yes
,	no	no
length	yes	yes
)	no	no
;	no	no
bytesRead	yes	yes
+=	no	no
length	yes	yes
;	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
fileSequenceNumber	no	yes
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	no	yes
)	no	no
,	no	no
cfs	yes	yes
.	no	no
metadata	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BigTableZeroCopyWriter	no	yes
writer	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
writer	no	yes
=	no	no
createWriter	no	yes
(	no	no
cfs	yes	yes
,	no	no
totalSize	no	yes
,	no	no
manifest	no	yes
.	no	no
components	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
bytesRead	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Component	no	no
component	no	yes
:	no	no
manifest	no	yes
.	no	no
components	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
length	no	yes
=	no	no
manifest	no	yes
.	no	no
sizeOf	no	yes
(	no	no
component	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
component	no	yes
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
length	no	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
bytesRead	no	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	no	yes
)	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
writeComponent	no	yes
(	no	no
component	no	yes
.	no	no
type	no	yes
,	no	no
in	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no
session	yes	yes
.	no	no
progress	no	yes
(	no	no
writer	no	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
component	no	yes
)	no	no
,	no	no
ProgressInfo	no	yes
.	no	no
Direction	no	yes
.	no	no
IN	no	yes
,	no	no
length	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no
bytesRead	no	yes
+=	no	no
length	no	yes
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
component	no	yes
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
length	no	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
bytesRead	no	yes
)	no	no
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
Function	no	yes
<	no	no
StatsMetadata	no	yes
,	no	no
StatsMetadata	no	yes
>	no	no
transform	no	yes
=	no	no
stats	no	yes
->	no	no
stats	no	yes
.	no	no
mutateLevel	no	yes
(	no	no
header	no	yes
.	no	no
sstableLevel	no	yes
)	no	no
.	no	no
mutateRepairedMetadata	no	yes
(	no	no
messageHeader	no	yes
.	no	no
repairedAt	no	yes
,	no	no
messageHeader	no	yes
.	no	no
pendingRepair	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
descriptor	no	yes
.	no	no
getMetadataSerializer	no	yes
(	no	no
)	no	no
.	no	no
mutate	no	yes
(	no	no
writer	no	yes
.	no	no
descriptor	no	yes
,	no	no
transform	no	yes
)	no	no
;	no	no
return	no	no
writer	no	yes
;	no	no

public	no	no
void	no	no
write	no	no
(	no	no
AsyncStreamingOutputPlus	no	no
out	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
totalSize	no	yes
=	no	no
manifest	no	yes
.	no	no
totalSize	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
getFilename	no	yes
(	no	no
)	no	no
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
sstable	yes	yes
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
repairedAt	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
progress	no	yes
=	no	no
0L	no	no
;	no	no
for	no	no
(	no	no
Component	no	no
component	yes	yes
:	no	no
manifest	no	yes
.	no	no
components	no	no
(	no	no
)	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
FileChannel	no	yes
in	no	yes
=	no	no
new	no	no
RandomAccessFile	no	yes
(	no	no
sstable	yes	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
component	yes	yes
)	no	no
,	no	no
)	no	no
.	no	no
getChannel	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
length	yes	yes
=	no	no
in	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
write	no	no
(	no	no
AsyncStreamingOutputPlus	no	no
out	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
totalSize	yes	yes
=	no	no
manifest	no	yes
.	no	no
totalSize	yes	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
getFilename	no	yes
(	no	no
)	no	no
,	no	no
session	yes	yes
.	no	no
peer	no	yes
,	no	no
sstable	yes	yes
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
repairedAt	no	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
totalSize	yes	yes
)	no	no
)	no	no
;	no	no
long	no	no
progress	no	yes
=	no	no
0L	no	no
;	no	no
for	no	no
(	no	no
Component	no	no
component	yes	yes
:	no	no
manifest	no	yes
.	no	no
components	no	no
(	no	no
)	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
FileChannel	no	yes
in	no	yes
=	no	no
new	no	no
RandomAccessFile	no	yes
(	no	no
sstable	yes	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
component	yes	yes
)	no	no
,	no	no
)	no	no
.	no	no
getChannel	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
length	yes	yes
=	no	no
in	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
session	yes	yes
.	no	no
planId	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
getKeyspaceName	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
getColumnFamilyName	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
descriptor	no	yes
.	no	no
generation	no	yes
,	no	no
component	yes	yes
,	no	no
prettyPrintMemory	no	yes
(	no	no
length	yes	yes
)	no	no
)	no	no
;	no	no
long	no	no
bytesWritten	yes	yes
=	no	no
out	no	yes
.	no	no
writeFileToChannel	no	yes
(	no	no
in	no	yes
,	no	no
limiter	no	yes
)	no	no
;	no	no
progress	no	yes
+=	no	no
bytesWritten	yes	yes
;	no	no
session	yes	yes
.	no	no
progress	no	yes
(	no	no
sstable	yes	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
component	yes	yes
)	no	no
,	no	no
ProgressInfo	no	yes
.	no	no
Direction	no	yes
.	no	no
OUT	no	yes
,	no	no
bytesWritten	yes	yes
,	no	no
length	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
synchronized	no	no
void	no	no
read	no	no
(	no	no
DataInputPlus	no	no
in	no	yes
,	no	no
int	no	no
version	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
CassandraStreamHeader	no	yes
streamHeader	yes	yes
=	no	no
CassandraStreamHeader	no	yes
.	no	no
serializer	no	yes
.	no	no
deserialize	no	yes
(	no	no
in	no	yes
,	no	no
version	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
write	no	no
(	no	no
DataOutputStreamPlus	no	no
output	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
totalSize	yes	yes
=	no	no
totalSize	yes	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
start	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
SystemKeyspace	no	no
.	no	no
isViewBuilt	no	no
(	no	no
ksName	yes	no
,	no	no
view	yes	no
.	no	no
name	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
newRanges	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
pendingRanges	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
finish	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
DatabaseDescriptor	no	yes
.	no	no
getPartitioner	no	yes
(	no	no
)	no	no
.	no	no
splitter	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
s	no	yes
->	no	no
s	no	yes
.	no	no
split	no	yes
(	no	no
newRanges	no	yes
,	no	no
NUM_TASKS	no	yes
)	no	no
)	no	no
.	no	no
orElse	no	yes
(	no	no
newRanges	no	yes
)	no	no
.	no	no
forEach	no	yes
(	no	no
r	no	yes
->	no	no
pendingRanges	no	yes
.	no	no
put	no	yes
(	no	no
r	no	yes
,	no	no
Pair	no	yes
.	no	no
<	no	no
Token	no	yes
,	no	no
Long	no	yes
>	no	no
create	no	yes
(	no	no
null	no	no
,	no	no
0L	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
Long	no	yes
>>	no	no
futures	no	yes
=	no	no
pendingRanges	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
e	no	yes
->	no	no
new	no	no
ViewBuilderTask	no	yes
(	no	no
baseCfs	no	yes
,	no	no
view	yes	yes
,	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
left	no	yes
,	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
right	no	yes
)	no	no
)	no	no
.	no	no
peek	no	yes
(	no	no
tasks	no	yes
::	no	no
add	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
::	no	no
submitViewBuilder	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
Long	no	yes
>>	no	no
future	no	yes
=	no	no
Futures	no	yes
.	no	no
allAsList	no	yes
(	no	no
futures	no	yes
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	no
(	no	no
future	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
List	no	yes
<	no	no
Long	no	yes
>>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
result	no	yes
)	no	no
{	no	no
keysBuilt	yes	yes
+=	no	no
result	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
mapToLong	no	yes
(	no	no
x	no	yes
->	no	no
x	no	yes
)	no	no
.	no	no
sum	no	yes
(	no	no
)	no	no
;	no	no
builtRanges	no	yes
.	no	no
addAll	no	yes
(	no	no
pendingRanges	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pendingRanges	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
public	no	no
void	no	no
onFailure	no	no
(	no	no
Throwable	no	no
t	no	no
)	no	no
{	no	no
if	no	no
(	no	no
t	no	no
instanceof	no	no
CompactionInterruptedException	no	no
)	no	no
{	no	no
internalStop	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

private	no	no
void	no	no
finish	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
ksName	yes	yes
=	no	no
baseCfs	no	yes
.	no	no
keyspace	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isStopped	no	no
)	no	no
{	no	no
SystemKeyspace	no	yes
.	no	no
updateViewBuildStatus	no	yes
(	no	no
ksName	yes	yes
,	no	no
view	yes	yes
.	no	no
name	no	yes
,	no	no
range	yes	yes
,	no	no
range	yes	yes
.	no	no
right	no	yes
,	no	no
keysBuilt	yes	yes
)	no	no
;	no	no

private	no	no
static	no	no
Collection	no	no
<	no	no
Token	no	no
>	no	no
getSpecifiedTokens	no	no
(	no	no
final	no	no
TokenMetadata	no	no
metadata	no	no
,	no	no
Collection	no	no
<	no	no
String	no	no
>	no	no
initialTokens	yes	no
)	no	no
{	no	no

private	no	no
MutableCapacityGraph	no	yes
<	no	no
Vertex	no	yes
,	no	no
Integer	no	yes
>	no	no
getGraph	no	no
(	no	no
)	no	no
{	no	no
MutableCapacityGraph	no	yes
<	no	no
Vertex	no	yes
,	no	no
Integer	no	yes
>	no	no
capacityGraph	no	yes
=	no	no
MutableCapacityGraph	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Range	no	no
<	no	no
Token	no	no
>	no	no
range	yes	no
:	no	no
rangesWithSources	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
trivialRanges	no	no
.	no	no
contains	no	no
(	no	no
range	yes	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
addRanges	no	no
(	no	no
String	no	no
keyspaceName	yes	yes
,	no	no
ReplicaCollection	no	no
<	no	no
?	no	no
>	no	no
replicas	no	no
)	no	no
{	no	no
Keyspace	no	yes
keyspace	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspaceName	yes	yes
)	no	no
;	no	no
AbstractReplicationStrategy	no	yes
strat	no	yes
=	no	no
keyspace	no	yes
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
strat	no	yes
instanceof	no	no
LocalStrategy	no	no
)	no	no
{	no	no

public	no	no
static	no	no
EndpointsByReplica	no	no
calculateRangesToFetchWithPreferredEndpoints	no	no
(	no	no
BiFunction	no	no
<	no	no
InetAddressAndPort	no	yes
,	no	no
EndpointsForRange	no	no
,	no	no
EndpointsForRange	no	no
>	no	no
snitchGetSortedListByProximity	no	no
,	no	no
AbstractReplicationStrategy	no	no
strat	no	yes
,	no	no
ReplicaCollection	no	no
<	no	no
?	no	no
>	no	no
fetchRanges	no	no
,	no	no
boolean	no	no
useStrictConsistency	no	no
,	no	no
TokenMetadata	no	no
tmdBefore	no	yes
,	no	no
TokenMetadata	no	no
tmdAfter	no	no
,	no	no
String	no	no
keyspace	yes	no
,	no	no
Collection	no	no
<	no	no
SourceFilter	no	no
>	no	no
sourceFilters	no	no
)	no	no
{	no	no
EndpointsByRange	no	yes
rangeAddresses	no	yes
=	no	no
strat	no	yes
.	no	no
getRangeAddresses	no	yes
(	no	no
tmdBefore	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
localAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
EndpointsByReplica	no	no
calculateRangesToFetchWithPreferredEndpoints	no	no
(	no	no
BiFunction	no	no
<	no	no
InetAddressAndPort	no	yes
,	no	no
EndpointsForRange	no	no
,	no	no
EndpointsForRange	no	no
>	no	no
snitchGetSortedListByProximity	no	no
,	no	no
AbstractReplicationStrategy	no	no
strat	no	yes
,	no	no
ReplicaCollection	no	no
<	no	no
?	no	no
>	no	no
fetchRanges	yes	no
,	no	no
boolean	no	no
useStrictConsistency	no	no
,	no	no
TokenMetadata	no	no
tmdBefore	no	yes
,	no	no
TokenMetadata	no	no
tmdAfter	no	no
,	no	no
String	no	no
keyspace	no	yes
,	no	no
Collection	no	no
<	no	no
SourceFilter	no	no
>	no	no
sourceFilters	no	no
)	no	no
{	no	no
EndpointsByRange	no	yes
rangeAddresses	no	yes
=	no	no
strat	no	yes
.	no	no
getRangeAddresses	no	yes
(	no	no
tmdBefore	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
localAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspace	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
EndpointsByReplica	no	no
calculateRangesToFetchWithPreferredEndpoints	no	no
(	no	no
BiFunction	no	no
<	no	no
InetAddressAndPort	no	yes
,	no	no
EndpointsForRange	no	no
,	no	no
EndpointsForRange	no	no
>	no	no
snitchGetSortedListByProximity	no	no
,	no	no
AbstractReplicationStrategy	no	no
strat	no	yes
,	no	no
ReplicaCollection	no	no
<	no	no
?	no	no
>	no	no
fetchRanges	no	yes
,	no	no
boolean	no	no
useStrictConsistency	no	no
,	no	no
TokenMetadata	no	no
tmdBefore	no	yes
,	no	no
TokenMetadata	no	no
tmdAfter	no	no
,	no	no
String	no	no
keyspace	no	yes
,	no	no
Collection	no	no
<	no	no
SourceFilter	no	no
>	no	no
sourceFilters	no	no
)	no	no
{	no	no
EndpointsByRange	no	yes
rangeAddresses	yes	yes
=	no	no
strat	no	yes
.	no	no
getRangeAddresses	no	yes
(	no	no
tmdBefore	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
localAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspace	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fetchRanges	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
EndpointsByReplica	no	yes
calculateRangesToFetchWithPreferredEndpoints	no	no
(	no	no
BiFunction	no	no
<	no	no
InetAddressAndPort	no	yes
,	no	no
EndpointsForRange	no	yes
,	no	no
EndpointsForRange	no	yes
>	no	no
snitchGetSortedListByProximity	no	yes
,	no	no
AbstractReplicationStrategy	no	no
strat	no	yes
,	no	no
ReplicaCollection	no	no
<	no	no
?	no	no
>	no	no
fetchRanges	no	yes
,	no	no
boolean	no	no
useStrictConsistency	no	no
,	no	no
TokenMetadata	no	no
tmdBefore	no	yes
,	no	no
TokenMetadata	no	no
tmdAfter	no	no
,	no	no
String	no	no
keyspace	no	yes
,	no	no
Collection	no	no
<	no	no
SourceFilter	no	no
>	no	no
sourceFilters	no	yes
)	no	no
{	no	no
EndpointsByRange	no	yes
rangeAddresses	no	yes
=	no	no
strat	no	yes
.	no	no
getRangeAddresses	no	yes
(	no	no
tmdBefore	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
localAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspace	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fetchRanges	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rangeAddresses	no	yes
)	no	no
;	no	no
Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
testSourceFilters	no	yes
=	no	no
and	no	yes
(	no	no
sourceFilters	no	yes
)	no	no
;	no	no
Function	no	yes
<	no	no
EndpointsForRange	no	yes
,	no	no
EndpointsForRange	no	yes
>	no	no
sorted	no	yes
=	no	no
endpoints	no	yes
->	no	no
snitchGetSortedListByProximity	no	yes
.	no	no
apply	no	yes
(	no	no
localAddress	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
rangesToFetchWithPreferredEndpoints	no	yes
=	no	no
new	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Replica	no	yes
toFetch	yes	yes
:	no	no
fetchRanges	no	yes
)	no	no
{	no	no
Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
isSufficient	no	yes
=	no	no
r	no	yes
->	no	no
toFetch	yes	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
||	no	no
r	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rangeAddresses	no	yes
)	no	no
;	no	no
Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
testSourceFilters	no	yes
=	no	no
and	no	yes
(	no	no
sourceFilters	no	yes
)	no	no
;	no	no
Function	no	yes
<	no	no
EndpointsForRange	no	yes
,	no	no
EndpointsForRange	no	yes
>	no	no
sorted	no	yes
=	no	no
endpoints	no	yes
->	no	no
snitchGetSortedListByProximity	no	yes
.	no	no
apply	no	yes
(	no	no
localAddress	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
rangesToFetchWithPreferredEndpoints	no	yes
=	no	no
new	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Replica	no	yes
toFetch	no	yes
:	no	no
fetchRanges	no	no
)	no	no
{	no	no
Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
isSufficient	no	yes
=	no	no
r	no	yes
->	no	no
toFetch	no	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
||	no	no
r	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
toFetch	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Range	no	no
<	no	no
Token	no	no
>	no	no
range	no	yes
:	no	no
rangeAddresses	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
range	no	yes
.	no	no
contains	no	yes
(	no	no
toFetch	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
final	no	no
EndpointsForRange	no	yes
oldEndpoints	yes	yes
=	no	no
sorted	no	yes
.	no	no
apply	no	yes
(	no	no
rangeAddresses	no	yes
.	no	no
get	no	yes
(	no	no
range	no	yes
)	no	no
)	no	no
;	no	no
EndpointsForRange	no	yes
sources	no	yes
;	no	no
if	no	no
(	no	no
useStrictConsistency	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
strictEndpoints	no	yes
;	no	no
if	no	no
(	no	no
oldEndpoints	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
strat	no	yes
.	no	no
getReplicationFactor	no	no
(	no	no
)	no	no
.	no	no
allReplicas	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
newEndpoints	no	yes
=	no	no
strat	no	yes
.	no	no
calculateNaturalReplicas	no	yes
(	no	no
toFetch	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
.	no	no
right	no	yes
,	no	no
tmdAfter	no	yes
)	no	no
;	no	no

Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
testSourceFilters	no	yes
=	no	no
and	no	yes
(	no	no
sourceFilters	no	yes
)	no	no
;	no	no
Function	no	yes
<	no	no
EndpointsForRange	no	yes
,	no	no
EndpointsForRange	no	yes
>	no	no
sorted	no	yes
=	no	no
endpoints	no	yes
->	no	no
snitchGetSortedListByProximity	no	yes
.	no	no
apply	no	yes
(	no	no
localAddress	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
rangesToFetchWithPreferredEndpoints	no	yes
=	no	no
new	no	no
EndpointsByReplica	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Replica	no	yes
toFetch	no	yes
:	no	no
fetchRanges	no	no
)	no	no
{	no	no
Predicate	no	yes
<	no	no
Replica	no	yes
>	no	no
isSufficient	no	yes
=	no	no
r	no	yes
->	no	no
toFetch	no	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
||	no	no
r	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
toFetch	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Range	no	no
<	no	no
Token	no	no
>	no	no
range	no	yes
:	no	no
rangeAddresses	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
range	no	yes
.	no	no
contains	no	yes
(	no	no
toFetch	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
final	no	no
EndpointsForRange	no	yes
oldEndpoints	no	yes
=	no	no
sorted	no	yes
.	no	no
apply	no	yes
(	no	no
rangeAddresses	no	yes
.	no	no
get	no	yes
(	no	no
range	no	yes
)	no	no
)	no	no
;	no	no
EndpointsForRange	no	yes
sources	no	yes
;	no	no
if	no	no
(	no	no
useStrictConsistency	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
strictEndpoints	no	yes
;	no	no
if	no	no
(	no	no
oldEndpoints	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
strat	no	yes
.	no	no
getReplicationFactor	no	no
(	no	no
)	no	no
.	no	no
allReplicas	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
newEndpoints	yes	yes
=	no	no
strat	no	yes
.	no	no
calculateNaturalReplicas	no	yes
(	no	no
toFetch	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
.	no	no
right	no	yes
,	no	no
tmdAfter	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
oldEndpoints	no	yes
)	no	no
;	no	no

strictEndpoints	no	yes
=	no	no
oldEndpoints	no	yes
.	no	no
without	no	yes
(	no	no
newEndpoints	no	yes
.	no	no
endpoints	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
strictEndpoints	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
strictEndpoints	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
all	no	yes
(	no	no
strictEndpoints	no	yes
,	no	no
testSourceFilters	no	yes
)	no	no
)	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
buildErrorMessage	no	yes
(	no	no
sourceFilters	no	yes
,	no	no
strictEndpoints	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
strictEndpoints	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
&&	no	no
toFetch	yes	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
toFetch	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
any	no	no
(	no	no
strictEndpoints	no	yes
,	no	no
isSufficient	no	yes
)	no	no
)	no	no
{	no	no
Optional	no	yes
<	no	no
Replica	no	yes
>	no	no
fullReplica	no	yes
=	no	no
Iterables	no	yes
.	no	no
<	no	no
Replica	no	yes
>	no	no
tryFind	no	yes
(	no	no
oldEndpoints	no	yes
,	no	no
and	no	yes
(	no	no
isSufficient	no	yes
,	no	no
testSourceFilters	no	yes
)	no	no
)	no	no
.	no	no
toJavaUtil	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fullReplica	no	yes
.	no	no
isPresent	no	yes
(	no	no
)	no	no
)	no	no
strictEndpoints	no	yes
=	no	no
Endpoints	no	yes
.	no	no
concat	no	yes
(	no	no
strictEndpoints	no	yes
,	no	no
EndpointsForRange	no	yes
.	no	no
of	no	yes
(	no	no
fullReplica	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
else	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
buildErrorMessage	no	yes
(	no	no
sourceFilters	no	yes
,	no	no
oldEndpoints	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
strictEndpoints	no	yes
=	no	no
sorted	no	yes
.	no	no
apply	no	yes
(	no	no
oldEndpoints	no	yes
.	no	no
filter	no	yes
(	no	no
and	no	yes
(	no	no
isSufficient	no	yes
,	no	no
testSourceFilters	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sources	yes	yes
=	no	no
strictEndpoints	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
sources	yes	yes
=	no	no
sorted	no	yes
.	no	no
apply	no	yes
(	no	no
oldEndpoints	no	yes
.	no	no
filter	no	yes
(	no	no
and	no	yes
(	no	no
isSufficient	no	yes
,	no	no
testSourceFilters	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
sources	yes	yes
=	no	no
sources	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
?	no	no
sources	yes	yes
.	no	no
subList	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
)	no	no
:	no	no
sources	yes	yes
;	no	no
}	no	no
rangesToFetchWithPreferredEndpoints	no	yes
.	no	no
putAll	no	yes
(	no	no
toFetch	yes	yes
,	no	no
sources	yes	yes
,	no	no
Conflict	no	yes
.	no	no
NONE	no	yes
)	no	no
;	no	no

public	no	no
StreamResultFuture	no	no
fetchAsync	no	no
(	no	no
)	no	no
{	no	no
toFetch	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
keyspace	yes	no
,	no	no
sources	yes	no
)	no	no
->	no	no
{	no	no

public	no	no
StreamResultFuture	no	no
fetchAsync	no	no
(	no	no
)	no	no
{	no	no
toFetch	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
keyspace	no	yes
,	no	no
sources	no	yes
)	no	no
->	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspace	no	yes
,	no	no
sources	no	yes
)	no	no
;	no	no
sources	no	yes
.	no	no
asMap	no	no
(	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
source	no	no
,	no	no
fetchReplicas	yes	yes
)	no	no
->	no	no
{	no	no
SystemKeyspace	no	yes
.	no	no
AvailableRanges	no	yes
available	yes	yes
=	no	no
stateStore	no	yes
.	no	no
getAvailableRanges	no	yes
(	no	no
keyspace	no	yes
,	no	no
metadata	no	yes
.	no	no
partitioner	no	yes
)	no	no
;	no	no
Predicate	no	no
<	no	no
FetchReplica	no	yes
>	no	no
isAvailable	no	yes
=	no	no
fetch	no	yes
->	no	no
{	no	no
boolean	no	no
isInFull	no	yes
=	no	no
available	yes	yes
.	no	no
full	no	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
isInTrans	no	yes
=	no	no
available	yes	yes
.	no	no
trans	no	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isInFull	no	yes
&&	no	no
!	no	no
isInTrans	no	yes
)	no	no
return	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
isInFull	no	yes
==	no	no
fetch	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
;	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
remaining	no	yes
=	no	no
fetchReplicas	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
not	no	yes
(	no	no
isAvailable	no	yes
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
remaining	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
<	no	no
available	yes	yes
.	no	no
full	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
+	no	no
available	yes	yes
.	no	no
trans	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
skipped	yes	yes
=	no	no
fetchReplicas	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
isAvailable	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Predicate	no	no
<	no	no
FetchReplica	no	yes
>	no	no
isAvailable	no	yes
=	no	no
fetch	no	yes
->	no	no
{	no	no
boolean	no	no
isInFull	no	yes
=	no	no
available	no	yes
.	no	no
full	no	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
isInTrans	no	yes
=	no	no
available	no	yes
.	no	no
trans	no	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isInFull	no	yes
&&	no	no
!	no	no
isInTrans	no	yes
)	no	no
return	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
isInFull	no	yes
==	no	no
fetch	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
;	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
remaining	no	yes
=	no	no
fetchReplicas	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
not	no	yes
(	no	no
isAvailable	no	yes
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
remaining	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
<	no	no
available	no	yes
.	no	no
full	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
+	no	no
available	no	yes
.	no	no
trans	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
skipped	no	yes
=	no	no
fetchReplicas	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
isAvailable	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fetchReplicas	yes	yes
,	no	no
skipped	no	yes
,	no	no
available	no	yes
.	no	no
full	no	yes
,	no	no
available	no	yes
.	no	no
trans	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
description	no	yes
,	no	no
source	no	yes
,	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
remaining	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
self	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
full	no	yes
=	no	no
remaining	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
self	no	yes
)	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
transientReplicas	no	yes
=	no	no
remaining	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
self	no	yes
)	no	no
)	no	no
;	no	no

boolean	no	no
isInFull	no	yes
=	no	no
available	no	yes
.	no	no
full	yes	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
isInTrans	no	yes
=	no	no
available	no	yes
.	no	no
trans	no	yes
.	no	no
contains	no	yes
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
range	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isInFull	no	yes
&&	no	no
!	no	no
isInTrans	no	yes
)	no	no
return	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fetch	no	yes
.	no	no
local	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
isInFull	no	yes
==	no	no
fetch	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
;	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
remaining	no	yes
=	no	no
fetchReplicas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
not	no	yes
(	no	no
isAvailable	no	yes
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
remaining	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
<	no	no
available	no	yes
.	no	no
full	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
+	no	no
available	no	yes
.	no	no
trans	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
FetchReplica	no	yes
>	no	no
skipped	no	yes
=	no	no
fetchReplicas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
isAvailable	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fetchReplicas	no	yes
,	no	no
skipped	no	yes
,	no	no
available	no	yes
.	no	no
full	yes	yes
,	no	no
available	no	yes
.	no	no
trans	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
description	no	yes
,	no	no
source	yes	yes
,	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
remaining	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
self	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
full	yes	yes
=	no	no
remaining	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
self	no	yes
)	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
transientReplicas	yes	yes
=	no	no
remaining	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
self	no	yes
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fetchReplicas	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
enableEventPersistence	no	no
(	no	no
String	no	no
eventClazz	yes	no
)	no	no
{	no	no
try	no	no
{	no	no

public	no	no
void	no	no
disableEventPersistence	no	no
(	no	no
String	no	no
eventClazz	yes	no
)	no	no
{	no	no
try	no	no
{	no	no

public	no	no
synchronized	no	no
<	no	no
E	no	no
extends	no	no
DiagnosticEvent	no	no
>	no	no
void	no	no
subscribe	no	no
(	no	no
Class	no	no
<	no	no
E	no	no
>	no	no
event	no	no
,	no	no
Consumer	no	no
<	no	no
E	no	no
>	no	no
consumer	yes	no
)	no	no
{	no	no

public	no	no
synchronized	no	no
void	no	no
stop	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
BinLog	no	yes
binLog	yes	yes
=	no	no
this	no	no
.	no	no
binLog	yes	yes
;	no	no
if	no	no
(	no	no
binLog	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

Set	no	yes
<	no	no
File	no	yes
>	no	no
pathsToClean	yes	yes
=	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fullQueryLogPath	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
File	no	yes
fullQueryLogPathFile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
fullQueryLogPath	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fullQueryLogPathFile	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pathsToClean	yes	yes
.	no	no
add	no	yes
(	no	no
fullQueryLogPathFile	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
binLog	no	yes
!=	no	no
null	no	no
&&	no	no
binLog	no	yes
.	no	no
path	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
File	no	yes
pathFile	no	yes
=	no	no
binLog	no	yes
.	no	no
path	no	yes
.	no	no
toFile	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pathFile	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pathsToClean	yes	yes
.	no	no
add	no	yes
(	no	no
pathFile	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
binLog	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
pathsToClean	yes	yes
)	no	no
;	no	no
binLog	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
binLog	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
else	no	no
{	no	no

long	no	no
diff	no	yes
=	no	no
now	no	yes
-	no	no
lastInterpret	no	yes
;	no	no
lastInterpret	no	yes
=	no	no
now	no	yes
;	no	no
if	no	no
(	no	no
diff	no	yes
>	no	no
MAX_LOCAL_PAUSE_IN_NANOS	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
diff	no	yes
,	no	no
MAX_LOCAL_PAUSE_IN_NANOS	no	yes
)	no	no
;	no	no
lastPause	no	yes
=	no	no
now	no	yes
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
preciseTime	no	no
.	no	no
now	no	yes
(	no	no
)	no	no
-	no	no
lastPause	no	yes
<	no	no
MAX_LOCAL_PAUSE_IN_NANOS	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
double	no	no
phi	yes	yes
=	no	no
hbWnd	no	yes
.	no	no
phi	yes	yes
(	no	no
now	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
ep	yes	yes
,	no	no
phi	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
PHI_FACTOR	no	yes
*	no	no
phi	yes	yes
>	no	no
getPhiConvictThreshold	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
ep	yes	yes
,	no	no
PHI_FACTOR	no	yes
*	no	no
phi	yes	yes
,	no	no
getPhiConvictThreshold	no	yes
(	no	no
)	no	no
,	no	no
hbWnd	no	yes
,	no	no
hbWnd	no	yes
.	no	no
mean	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
for	no	no
(	no	no
IFailureDetectionEventListener	no	no
listener	no	yes
:	no	no
fdEvntListeners	no	no
)	no	no
{	no	no
listener	no	yes
.	no	no
convict	no	yes
(	no	no
ep	yes	yes
,	no	no
phi	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
forceConviction	no	no
(	no	no
InetAddressAndPort	no	no
ep	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
doVerb	no	no
(	no	no
Message	no	no
message	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
Gossiper	no	no
.	no	no
instance	no	no
.	no	no
isEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
long	no	no
getVeryLongTime	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
newVLT	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
newVLT	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
convict	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
,	no	no
double	no	no
phi	no	no
)	no	no
{	no	no
runInGossipStageBlocking	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
EndpointState	no	yes
epState	yes	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epState	yes	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
if	no	no
(	no	no
!	no	no
epState	yes	yes
.	no	no
isAlive	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no

public	no	no
void	no	no
removeEndpoint	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
)	no	no
{	no	no
checkProperThreadForStateMutation	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
IEndpointStateChangeSubscriber	no	yes
subscriber	no	yes
:	no	no
subscribers	no	yes
)	no	no
subscriber	no	yes
.	no	no
onRemove	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
seeds	yes	yes
.	no	no
contains	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no
buildSeedsList	no	yes
(	no	no
)	no	no
;	no	no
seeds	yes	yes
.	no	no
remove	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
advertiseRemoving	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	no	yes
,	no	no
UUID	no	no
hostId	yes	no
,	no	no
UUID	no	no
localHostId	no	no
)	no	no
{	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
int	no	no
generation	no	yes
=	no	no
epState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
advertiseRemoving	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
,	no	no
UUID	no	no
hostId	no	yes
,	no	no
UUID	no	no
localHostId	no	no
)	no	no
{	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
int	no	no
generation	no	yes
=	no	no
epState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
hostId	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
advertiseRemoving	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
,	no	no
UUID	no	no
hostId	no	yes
,	no	no
UUID	no	no
localHostId	no	no
)	no	no
{	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
int	no	no
generation	no	yes
=	no	no
epState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
hostId	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
StorageService	no	yes
.	no	no
RING_DELAY	no	yes
,	no	no
endpoint	yes	yes
)	no	no
;	no	no
Uninterruptibles	no	yes
.	no	no
sleepUninterruptibly	no	yes
(	no	no
StorageService	no	yes
.	no	no
RING_DELAY	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
!=	no	no
generation	no	yes
)	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
endpoint	yes	yes
+	no	no
)	no	no
;	no	no

public	no	no
void	no	no
advertiseTokenRemoved	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
,	no	no
UUID	no	no
hostId	no	yes
)	no	no
{	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
epState	no	yes
.	no	no
updateTimestamp	no	yes
(	no	no
)	no	no
;	no	no
epState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
forceNewerGenerationUnsafe	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
expireTime	no	yes
=	no	no
computeExpireTime	no	yes
(	no	no
)	no	no
;	no	no
epState	no	yes
.	no	no
addApplicationState	no	yes
(	no	no
ApplicationState	no	yes
.	no	no
STATUS_WITH_PORT	no	yes
,	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
valueFactory	no	yes
.	no	no
removedNonlocal	no	yes
(	no	no
hostId	no	yes
,	no	no
expireTime	no	yes
)	no	no
)	no	no
;	no	no
epState	no	yes
.	no	no
addApplicationState	no	yes
(	no	no
ApplicationState	no	yes
.	no	no
STATUS	no	yes
,	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
valueFactory	no	yes
.	no	no
removedNonlocal	no	yes
(	no	no
hostId	no	yes
,	no	no
expireTime	no	yes
)	no	no
)	no	no
;	no	no

long	no	no
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
nowNano	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
pending	no	yes
=	no	no
(	no	no
(	no	no
JMXEnabledThreadPoolExecutor	no	yes
)	no	no
Stage	no	yes
.	no	no
GOSSIP	no	yes
.	no	no
executor	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
metrics	no	yes
.	no	no
pendingTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pending	no	yes
>	no	no
0	no	no
&&	no	no
lastProcessedMessageAt	no	no
<	no	no
now	no	yes
-	no	no
1000	no	no
)	no	no
{	no	no
Uninterruptibles	no	yes
.	no	no
sleepUninterruptibly	no	yes
(	no	no
100	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lastProcessedMessageAt	no	no
<	no	no
now	no	yes
-	no	no
1000	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
pending	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
eps	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	yes	yes
:	no	no
eps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
endpoint	yes	yes
.	no	no
equals	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
FailureDetector	no	yes
.	no	no
instance	no	yes
.	no	no
interpret	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epState	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isGossipOnlyMember	no	no
(	no	no
endpoint	yes	yes
)	no	no
&&	no	no
!	no	no
justRemovedEndpoints	no	no
.	no	no
containsKey	no	no
(	no	no
endpoint	yes	yes
)	no	no
&&	no	no
TimeUnit	no	yes
.	no	no
NANOSECONDS	no	no
.	no	no
toMillis	no	no
(	no	no
nowNano	no	yes
-	no	no
epState	no	yes
.	no	no
getUpdateTimestamp	no	no
(	no	no
)	no	no
)	no	no
>	no	no
fatClientTimeout	yes	no
)	no	no
{	no	no

}	no	no
}	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
eps	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	yes	yes
:	no	no
eps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
endpoint	yes	yes
.	no	no
equals	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
FailureDetector	no	yes
.	no	no
instance	no	yes
.	no	no
interpret	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epState	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isGossipOnlyMember	no	no
(	no	no
endpoint	yes	yes
)	no	no
&&	no	no
!	no	no
justRemovedEndpoints	no	no
.	no	no
containsKey	no	no
(	no	no
endpoint	yes	yes
)	no	no
&&	no	no
TimeUnit	no	no
.	no	no
NANOSECONDS	no	no
.	no	no
toMillis	no	no
(	no	no
nowNano	no	no
-	no	no
epState	no	yes
.	no	no
getUpdateTimestamp	no	no
(	no	no
)	no	no
)	no	no
>	no	no
fatClientTimeout	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
fatClientTimeout	no	yes
)	no	no
;	no	no
runInGossipStageBlocking	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
removeEndpoint	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
evictFromMembership	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no
}	no	no
long	no	no
expireTime	yes	yes
=	no	no
getExpireTimeForEndpoint	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
epState	no	yes
.	no	no
isAlive	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
now	no	no
>	no	no
expireTime	yes	yes
)	no	no
&&	no	no
(	no	no
!	no	no
StorageService	no	no
.	no	no
instance	no	yes
.	no	no
getTokenMetadata	no	no
(	no	no
)	no	no
.	no	no
isMember	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

void	no	no
notifyFailureDetector	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
,	no	no
EndpointState	no	yes
remoteEndpointState	no	yes
)	no	no
{	no	no
EndpointState	no	yes
localEndpointState	no	yes
=	no	no
endpointStateMap	no	yes
.	no	no
get	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
localEndpointState	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
IFailureDetector	no	yes
fd	no	yes
=	no	no
FailureDetector	no	yes
.	no	no
instance	no	yes
;	no	no
int	no	no
localGeneration	no	yes
=	no	no
localEndpointState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
remoteGeneration	no	yes
=	no	no
remoteEndpointState	no	yes
.	no	no
getHeartBeatState	no	yes
(	no	no
)	no	no
.	no	no
getGeneration	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
remoteGeneration	no	yes
>	no	no
localGeneration	no	yes
)	no	no
{	no	no
localEndpointState	no	yes
.	no	no
updateTimestamp	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
localEndpointState	no	yes
.	no	no
isAlive	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
void	no	no
realMarkAlive	no	no
(	no	no
final	no	no
InetAddressAndPort	no	no
addr	yes	yes
,	no	no
final	no	no
EndpointState	no	no
localState	no	yes
)	no	no
{	no	no
checkProperThreadForStateMutation	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
addr	yes	yes
)	no	no
;	no	no
localState	no	yes
.	no	no
markAlive	no	yes
(	no	no
)	no	no
;	no	no
localState	no	yes
.	no	no
updateTimestamp	no	yes
(	no	no
)	no	no
;	no	no
liveEndpoints	no	yes
.	no	no
add	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
unreachableEndpoints	no	yes
.	no	no
remove	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
expireTimeEndpointMap	no	yes
.	no	no
remove	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
void	no	no
realMarkAlive	no	no
(	no	no
final	no	no
InetAddressAndPort	no	no
addr	yes	yes
,	no	no
final	no	no
EndpointState	no	no
localState	no	yes
)	no	no
{	no	no
checkProperThreadForStateMutation	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
addr	yes	yes
)	no	no
;	no	no
localState	no	yes
.	no	no
markAlive	no	yes
(	no	no
)	no	no
;	no	no
localState	no	yes
.	no	no
updateTimestamp	no	yes
(	no	no
)	no	no
;	no	no
liveEndpoints	no	yes
.	no	no
add	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
unreachableEndpoints	no	yes
.	no	no
remove	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
expireTimeEndpointMap	no	yes
.	no	no
remove	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
addr	yes	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
void	no	no
markDead	no	yes
(	no	no
InetAddressAndPort	no	no
addr	yes	yes
,	no	no
EndpointState	no	no
localState	no	yes
)	no	no
{	no	no
checkProperThreadForStateMutation	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isTraceEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
addr	yes	yes
)	no	no
;	no	no
localState	no	yes
.	no	no
markDead	no	yes
(	no	no
)	no	no
;	no	no
liveEndpoints	no	yes
.	no	no
remove	no	yes
(	no	no
addr	yes	yes
)	no	no
;	no	no
unreachableEndpoints	no	yes
.	no	no
put	no	yes
(	no	no
addr	yes	yes
,	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	no
void	no	no
maybeFinishShadowRound	no	no
(	no	no
InetAddressAndPort	no	no
respondent	yes	yes
,	no	no
boolean	no	no
isInShadowRound	no	no
,	no	no
Map	no	no
<	no	no
InetAddressAndPort	no	no
,	no	no
EndpointState	no	no
>	no	no
epStateMap	no	no
)	no	no
{	no	no
if	no	no
(	no	no
inShadowRound	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isInShadowRound	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
seeds	no	yes
.	no	no
contains	no	yes
(	no	no
respondent	yes	yes
)	no	no
)	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
respondent	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
addExpireTimeForEndpoint	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	yes	no
,	no	no
long	no	no
expireTime	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
logger	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

final	no	no
int	no	no
GOSSIP_SETTLE_MIN_WAIT_MS	no	yes
=	no	no
5000	no	no
;	no	no
final	no	no
int	no	no
GOSSIP_SETTLE_POLL_INTERVAL_MS	no	yes
=	no	no
1000	no	no
;	no	no
final	no	no
int	no	no
GOSSIP_SETTLE_POLL_SUCCESSES_REQUIRED	no	yes
=	no	no
3	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Uninterruptibles	no	yes
.	no	no
sleepUninterruptibly	no	yes
(	no	no
GOSSIP_SETTLE_MIN_WAIT_MS	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
int	no	no
totalPolls	yes	yes
=	no	no
0	no	no
;	no	no
int	no	no
numOkay	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
epSize	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getEndpointCount	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
numOkay	no	yes
<	no	no
GOSSIP_SETTLE_POLL_SUCCESSES_REQUIRED	no	yes
)	no	no
{	no	no
Uninterruptibles	no	yes
.	no	no
sleepUninterruptibly	no	yes
(	no	no
GOSSIP_SETTLE_POLL_INTERVAL_MS	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
int	no	no
currentSize	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getEndpointCount	no	yes
(	no	no
)	no	no
;	no	no
totalPolls	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
currentSize	no	yes
==	no	no
epSize	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
numOkay	no	yes
++	no	no
;	no	no

return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
hint	no	yes
.	no	no
mutation	no	yes
.	no	no
getPartitionUpdates	no	yes
(	no	no
)	no	no
.	no	no
forEach	no	yes
(	no	no
PartitionUpdate	no	yes
::	no	no
validate	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MarshalException	no	no
e	yes	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
address	no	yes
,	no	no
hostId	no	yes
)	no	no
;	no	no
respond	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
hostId	no	yes
.	no	no
equals	no	no
(	no	no
StorageService	no	no
.	no	no
instance	no	yes
.	no	no
getLocalHostUUID	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
HintsService	no	yes
.	no	no
instance	no	yes
.	no	no
write	no	yes
(	no	no
hostId	no	yes
,	no	no
hint	no	yes
)	no	no
;	no	no
respond	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
StorageProxy	no	no
.	no	no
instance	no	yes
.	no	no
appliesLocally	no	no
(	no	no
hint	no	yes
.	no	no
mutation	no	yes
)	no	no
)	no	no
{	no	no
HintsService	no	yes
.	no	no
instance	no	yes
.	no	no
writeForAllReplicas	no	yes
(	no	no
hint	no	yes
)	no	no
;	no	no
respond	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
hint	no	yes
.	no	no
applyFuture	no	no
(	no	no
)	no	no
.	no	no
thenAccept	no	no
(	no	no
o	no	no
->	no	no
respond	no	yes
(	no	no
message	no	yes
)	no	no
)	no	no
.	no	no
exceptionally	no	no
(	no	no
e	yes	no
->	no	no
{	no	no

for	no	no
(	no	no
Index	no	yes
index	no	yes
:	no	no
indexes	no	no
)	no	no
{	no	no
IndexBuildingSupport	no	yes
buildOrRecoveryTask	no	yes
=	no	no
isFullRebuild	no	yes
?	no	no
index	no	yes
.	no	no
getBuildTaskSupport	no	yes
(	no	no
)	no	no
:	no	no
index	no	yes
.	no	no
getRecoveryTaskSupport	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Index	no	yes
>	no	no
stored	no	yes
=	no	no
byType	no	yes
.	no	no
computeIfAbsent	no	yes
(	no	no
buildOrRecoveryTask	no	yes
,	no	no
i	no	yes
->	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
stored	no	yes
.	no	no
add	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
?	no	no
>>	no	no
futures	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
byType	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
byType	no	yes
.	no	no
forEach	no	yes
(	no	no
(	no	no
buildingSupport	no	yes
,	no	no
groupedIndexes	yes	yes
)	no	no
->	no	no
{	no	no
SecondaryIndexBuilder	no	yes
builder	no	yes
=	no	no
buildingSupport	no	yes
.	no	no
getIndexBuildTask	no	yes
(	no	no
baseCfs	no	yes
,	no	no
groupedIndexes	yes	yes
,	no	no
sstables	no	yes
)	no	no
;	no	no
final	no	no
SettableFuture	no	yes
build	no	yes
=	no	no
SettableFuture	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
CompactionManager	no	no
.	no	no
instance	no	no
.	no	no
submitIndexBuild	no	no
(	no	no
builder	no	yes
)	no	no
,	no	no
new	no	no
FutureCallback	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onFailure	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
logAndMarkIndexesFailed	no	yes
(	no	no
groupedIndexes	yes	yes
,	no	no
t	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
unbuiltIndexes	no	yes
.	no	no
addAll	no	yes
(	no	no
groupedIndexes	yes	yes
)	no	no
;	no	no
build	no	yes
.	no	no
setException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
Object	no	no
o	no	no
)	no	no
{	no	no
groupedIndexes	yes	yes
.	no	no
forEach	no	yes
(	no	no
i	no	yes
->	no	no
markIndexBuilt	no	yes
(	no	no
i	no	yes
,	no	no
isFullRebuild	no	yes
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
futures	no	yes
.	no	no
add	no	yes
(	no	no
build	no	yes
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no
FBUtilities	no	yes
.	no	no
waitOnFutures	no	yes
(	no	no
futures	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
accumulatedFail	no	yes
=	no	no
e	no	yes
;	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
Set	no	yes
<	no	no
Index	no	yes
>	no	no
failedIndexes	no	yes
=	no	no
Sets	no	yes
.	no	no
difference	no	yes
(	no	no
indexes	no	yes
,	no	no
Sets	no	yes
.	no	no
union	no	yes
(	no	no
builtIndexes	no	yes
,	no	no
unbuiltIndexes	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
failedIndexes	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logAndMarkIndexesFailed	no	yes
(	no	no
failedIndexes	no	yes
,	no	no
accumulatedFail	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
flushIndexesBlocking	no	no
(	no	no
builtIndexes	no	yes
,	no	no
new	no	no
FutureCallback	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
indexNames	yes	yes
=	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
builtIndexes	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
i	no	yes
->	no	no
i	no	yes
.	no	no
getIndexMetadata	no	yes
(	no	no
)	no	no
.	no	no
name	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
','	no	no
)	no	no
;	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onFailure	no	no
(	no	no
Throwable	no	no
ignored	no	no
)	no	no
{	no	no

private	no	no
void	no	no
executeAllBlocking	no	no
(	no	no
Stream	no	no
<	no	no
Index	no	no
>	no	no
indexers	yes	no
,	no	no
Function	no	no
<	no	no
Index	no	no
,	no	no
Callable	no	no
<	no	no
?	no	no
>>	no	no
function	no	no
,	no	no
FutureCallback	no	no
<	no	no
Object	no	no
>	no	no
callback	no	no
)	no	no
{	no	no
if	no	no
(	no	no
function	no	no
==	no	no
null	no	no
)	no	no
{	no	no

Set	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
builtSSTables	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
sstables	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	no	yes
:	no	no
sstables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
sstable	no	yes
.	no	no
isMarkedCompacted	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
File	no	yes
indexFile	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
sstable	no	yes
.	no	no
descriptor	no	yes
.	no	no
filenameFor	no	yes
(	no	no
columnIndex	no	yes
.	no	no
getComponent	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
indexFile	yes	yes
.	no	no
exists	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
if	no	no
(	no	no
indexFile	yes	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
builtSSTables	no	yes
.	no	no
add	no	yes
(	no	no
sstable	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
SSTableIndex	no	yes
index	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
index	no	yes
=	no	no
new	no	no
SSTableIndex	no	yes
(	no	no
columnIndex	no	yes
,	no	no
indexFile	yes	yes
,	no	no
sstable	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
columnIndex	no	yes
.	no	no
getColumnName	no	yes
(	no	no
)	no	no
,	no	no
columnIndex	no	yes
.	no	no
getValidator	no	yes
(	no	no
)	no	no
.	no	no
getString	no	yes
(	no	no
index	no	yes
.	no	no
minTerm	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
columnIndex	no	yes
.	no	no
getValidator	no	yes
(	no	no
)	no	no
.	no	no
getString	no	yes
(	no	no
index	no	yes
.	no	no
maxTerm	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
keyValidator	no	yes
.	no	no
getString	no	yes
(	no	no
index	no	yes
.	no	no
minKey	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
keyValidator	no	yes
.	no	no
getString	no	yes
(	no	no
index	no	yes
.	no	no
maxKey	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
index	no	yes
.	no	no
getSSTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
indexes	no	yes
.	no	no
add	no	yes
(	no	no
index	no	yes
)	no	no
)	no	no
builtSSTables	no	yes
.	no	no
add	no	yes
(	no	no
sstable	no	yes
)	no	no
;	no	no
else	no	no
index	no	yes
.	no	no
release	no	no
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
indexOptions	no	yes
==	no	no
null	no	no
||	no	no
indexOptions	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
IndexMode	no	yes
.	no	no
NOT_INDEXED	no	yes
;	no	no
Mode	no	yes
mode	no	yes
;	no	no
try	no	no
{	no	no
mode	no	yes
=	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_MODE_OPTION	no	yes
)	no	no
==	no	no
null	no	no
?	no	no
Mode	no	yes
.	no	no
PREFIX	no	yes
:	no	no
Mode	no	yes
.	no	no
mode	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_MODE_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalArgumentException	no	no
e	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
+	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_MODE_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
isAnalyzed	no	yes
=	no	no
false	no	no
;	no	no
Class	no	yes
analyzerClass	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZER_CLASS_OPTION	yes	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
analyzerClass	no	yes
=	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZER_CLASS_OPTION	yes	yes
)	no	no
)	no	no
;	no	no
isAnalyzed	no	yes
=	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
==	no	no
null	no	no
?	no	no
true	no	no
:	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
isAnalyzed	no	yes
=	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	no	no
)	no	no
{	no	no

}	no	no
boolean	no	no
isAnalyzed	no	yes
=	no	no
false	no	no
;	no	no
Class	no	yes
analyzerClass	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZER_CLASS_OPTION	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
analyzerClass	no	yes
=	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZER_CLASS_OPTION	no	yes
)	no	no
)	no	no
;	no	no
isAnalyzed	no	yes
=	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
==	no	no
null	no	no
?	no	no
true	no	no
:	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
isAnalyzed	no	yes
=	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZED_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_ANALYZER_CLASS_OPTION	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
isLiteral	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
literalOption	no	yes
=	no	no
indexOptions	no	yes
.	no	no
get	no	yes
(	no	no
INDEX_IS_LITERAL_OPTION	yes	yes
)	no	no
;	no	no
AbstractType	no	yes
<	no	no
?	no	no
>	no	no
validator	no	yes
=	no	no
column	no	yes
.	no	no
cellValueType	no	yes
(	no	no
)	no	no
;	no	no
isLiteral	no	yes
=	no	no
literalOption	no	yes
==	no	no
null	no	no
?	no	no
(	no	no
validator	no	yes
instanceof	no	no
UTF8Type	no	yes
||	no	no
validator	no	yes
instanceof	no	no
AsciiType	no	yes
)	no	no
:	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
literalOption	no	yes
)	no	no
;	no	no

public	no	no
OnDiskIndexBuilder	no	no
add	no	no
(	no	no
ByteBuffer	no	no
term	yes	no
,	no	no
DecoratedKey	no	no
key	no	no
,	no	no
long	no	no
keyPosition	no	no
)	no	no
{	no	no
if	no	no
(	no	no
term	yes	no
.	no	no
remaining	no	no
(	no	no
)	no	no
>=	no	no
MAX_TERM_SIZE	no	no
)	no	no
{	no	no

public	no	no
long	no	no
index	no	yes
(	no	no
DecoratedKey	no	no
key	no	no
,	no	no
ByteBuffer	no	no
value	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
value	no	yes
==	no	no
null	no	no
||	no	no
value	no	yes
.	no	no
remaining	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
0	no	no
;	no	no
AbstractType	no	yes
<	no	no
?	no	no
>	no	no
validator	yes	yes
=	no	no
index	no	yes
.	no	no
columnIndex	no	yes
.	no	no
getValidator	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
TypeUtil	no	no
.	no	no
isValid	no	no
(	no	no
value	no	yes
,	no	no
validator	yes	yes
)	no	no
)	no	no
{	no	no
int	no	no
size	no	yes
=	no	no
value	no	yes
.	no	no
remaining	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
value	no	yes
=	no	no
TypeUtil	no	no
.	no	no
tryUpcast	no	no
(	no	no
value	no	yes
,	no	no
validator	yes	yes
)	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
long	no	no
add	no	no
(	no	no
DecoratedKey	no	no
key	yes	no
,	no	no
ByteBuffer	no	yes
value	no	yes
)	no	no
{	no	no
AbstractAnalyzer	no	yes
analyzer	no	yes
=	no	no
columnIndex	yes	yes
.	no	no
getAnalyzer	no	yes
(	no	no
)	no	no
;	no	no
analyzer	no	yes
.	no	no
reset	no	yes
(	no	no
value	no	yes
.	no	no
duplicate	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
analyzer	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ByteBuffer	no	yes
term	yes	yes
=	no	no
analyzer	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
term	yes	yes
.	no	no
remaining	no	no
(	no	no
)	no	no
>=	no	no
OnDiskIndexBuilder	yes	no
.	no	no
MAX_TERM_SIZE	no	no
)	no	no
{	no	no

public	no	no
boolean	no	no
isSatisfiedBy	no	no
(	no	no
ByteBuffer	no	no
value	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
TypeUtil	no	no
.	no	no
isValid	no	no
(	no	no
value	no	yes
,	no	no
validator	yes	no
)	no	no
)	no	no
{	no	no
int	no	no
size	yes	yes
=	no	no
value	no	yes
.	no	no
remaining	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
value	no	yes
=	no	no
TypeUtil	no	no
.	no	no
tryUpcast	no	no
(	no	no
value	no	yes
,	no	no
validator	yes	no
)	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
delete	no	no
(	no	no
Descriptor	no	no
desc	yes	no
,	no	no
Set	no	no
<	no	no
Component	no	no
>	no	no
components	no	no
)	no	no
{	no	no

public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
FileUtils	no	yes
.	no	no
deleteRecursive	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
Collection	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
openAll	no	no
(	no	no
Set	no	no
<	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	no
,	no	no
Set	no	no
<	no	no
Component	no	no
>>>	no	no
entries	no	no
,	no	no
final	no	no
TableMetadataRef	no	no
metadata	no	yes
)	no	no
{	no	no
final	no	no
Collection	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
sstables	no	yes
=	no	no
new	no	no
LinkedBlockingQueue	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
DebuggableThreadPoolExecutor	no	yes
.	no	no
createWithFixedPoolSize	no	yes
(	no	no
,	no	no
FBUtilities	no	yes
.	no	no
getAvailableProcessors	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Descriptor	no	no
,	no	no
Set	no	no
<	no	no
Component	no	no
>>	no	no
entry	yes	yes
:	no	no
entries	no	no
)	no	no
{	no	no
Runnable	no	no
runnable	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
SSTableReader	no	yes
sstable	no	yes
;	no	no
try	no	no
{	no	no
sstable	no	yes
=	no	no
open	no	yes
(	no	no
entry	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
metadata	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CorruptSSTableException	no	no
ex	yes	yes
)	no	no
{	no	no
JVMStabilityInspector	no	yes
.	no	no
inspectThrowable	no	yes
(	no	no
ex	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
entry	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FSError	no	no
ex	yes	yes
)	no	no
{	no	no
JVMStabilityInspector	no	yes
.	no	no
inspectThrowable	no	yes
(	no	no
ex	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
SSTableReader	no	no
moveAndOpenSSTable	no	no
(	no	no
ColumnFamilyStore	no	no
cfs	no	yes
,	no	no
Descriptor	no	no
oldDescriptor	no	yes
,	no	no
Descriptor	no	no
newDescriptor	no	yes
,	no	no
Set	no	no
<	no	no
Component	no	no
>	no	no
components	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
oldDescriptor	no	yes
.	no	no
isCompatible	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
oldDescriptor	no	yes
.	no	no
getFormat	no	yes
(	no	no
)	no	no
.	no	no
getLatestVersion	no	yes
(	no	no
)	no	no
,	no	no
oldDescriptor	no	yes
)	no	no
)	no	no
;	no	no
boolean	no	no
isLive	no	yes
=	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
anyMatch	no	yes
(	no	no
r	no	yes
->	no	no
r	no	yes
.	no	no
descriptor	no	yes
.	no	no
equals	no	yes
(	no	no
newDescriptor	no	yes
)	no	no
||	no	no
r	no	yes
.	no	no
descriptor	no	yes
.	no	no
equals	no	yes
(	no	no
oldDescriptor	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isLive	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
oldDescriptor	no	yes
,	no	no
newDescriptor	no	yes
)	no	no
;	no	no

boolean	no	no
isLive	no	yes
=	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
anyMatch	no	yes
(	no	no
r	no	yes
->	no	no
r	no	yes
.	no	no
descriptor	no	yes
.	no	no
equals	no	yes
(	no	no
newDescriptor	yes	yes
)	no	no
||	no	no
r	no	yes
.	no	no
descriptor	no	yes
.	no	no
equals	no	yes
(	no	no
oldDescriptor	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isLive	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
oldDescriptor	no	yes
,	no	no
newDescriptor	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
new	no	no
File	no	no
(	no	no
newDescriptor	yes	yes
.	no	no
filenameFor	no	yes
(	no	no
Component	no	yes
.	no	no
DATA	no	yes
)	no	no
)	no	no
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
newDescriptor	yes	yes
.	no	no
filenameFor	no	yes
(	no	no
Component	no	yes
.	no	no
DATA	no	yes
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
oldDescriptor	no	yes
,	no	no
newDescriptor	yes	yes
)	no	no
;	no	no
SSTableWriter	no	yes
.	no	no
rename	no	yes
(	no	no
oldDescriptor	no	yes
,	no	no
newDescriptor	yes	yes
,	no	no
components	no	yes
)	no	no
;	no	no
SSTableReader	no	yes
reader	no	yes
;	no	no
try	no	no
{	no	no
reader	no	yes
=	no	no
SSTableReader	no	yes
.	no	no
open	no	yes
(	no	no
newDescriptor	yes	yes
,	no	no
components	no	yes
,	no	no
cfs	no	yes
.	no	no
metadata	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	no
)	no	no
{	no	no

public	no	no
RowIndexEntry	no	no
append	no	no
(	no	no
UnfilteredRowIterator	no	no
iterator	no	yes
)	no	no
{	no	no
DecoratedKey	no	yes
key	no	yes
=	no	no
iterator	no	yes
.	no	no
partitionKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
key	no	yes
.	no	no
getKey	no	no
(	no	no
)	no	no
.	no	no
remaining	no	no
(	no	no
)	no	no
>	no	no
FBUtilities	yes	no
.	no	no
MAX_UNSIGNED_SHORT	no	no
)	no	no
{	no	no

public	no	no
void	no	no
writeComponent	no	no
(	no	no
Component	no	no
.	no	no
Type	no	no
type	yes	no
,	no	no
DataInputPlus	no	no
in	no	no
,	no	no
long	no	no
size	no	no
)	no	no
{	no	no

private	no	no
void	no	no
write	no	no
(	no	no
AsyncStreamingInputPlus	no	no
in	no	no
,	no	no
long	no	no
size	yes	no
,	no	no
SequentialWriter	no	no
writer	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
livenessCheck	no	no
(	no	no
HashMap	no	no
<	no	no
InetAddressAndPort	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
>	no	no
reloadedMap	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
reloadedDefaultDCRack	no	yes
)	no	no
{	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
hosts	no	yes
=	no	no
Arrays	no	yes
.	no	no
equals	no	yes
(	no	no
defaultDCRack	no	yes
,	no	no
reloadedDefaultDCRack	no	yes
)	no	no
?	no	no
Sets	no	yes
.	no	no
intersection	no	yes
(	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getLiveRingMembers	no	yes
(	no	no
)	no	no
,	no	no
Sets	no	yes
.	no	no
union	no	yes
(	no	no
endpointMap	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
,	no	no
reloadedMap	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
:	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getLiveRingMembers	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
host	yes	yes
:	no	no
hosts	no	yes
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
origValue	yes	yes
=	no	no
endpointMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
host	yes	yes
)	no	no
?	no	no
endpointMap	no	yes
.	no	no
get	no	yes
(	no	no
host	yes	yes
)	no	no
:	no	no
defaultDCRack	no	yes
;	no	no
String	no	yes
[	no	no
]	no	no
updateValue	yes	yes
=	no	no
reloadedMap	no	yes
.	no	no
containsKey	no	yes
(	no	no
host	yes	yes
)	no	no
?	no	no
reloadedMap	no	yes
.	no	no
get	no	yes
(	no	no
host	yes	yes
)	no	no
:	no	no
reloadedDefaultDCRack	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
Arrays	no	yes
.	no	no
equals	no	yes
(	no	no
origValue	yes	yes
,	no	no
updateValue	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
void	no	no
reconnect	no	no
(	no	no
InetAddressAndPort	no	no
publicAddress	yes	no
,	no	no
InetAddressAndPort	no	no
localAddress	yes	no
,	no	no
IEndpointSnitch	no	no
snitch	no	no
,	no	no
String	no	no
localDc	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
new	no	no
OutboundConnectionSettings	no	no
(	no	no
publicAddress	yes	no
,	no	no
localAddress	yes	no
)	no	no
.	no	no
withDefaults	no	no
(	no	no
ConnectionCategory	no	no
.	no	no
MESSAGING	no	no
)	no	no
.	no	no
authenticate	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
ChannelFuture	no	no
bind	no	no
(	no	no
Initializer	no	no
initializer	yes	no
)	no	no
throws	no	no
ConfigurationException	no	no
{	no	no

ByteBuffer	no	yes
buf	no	yes
=	no	no
bytes	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
begin	no	yes
=	no	no
buf	no	yes
.	no	no
position	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
end	no	yes
=	no	no
buf	no	yes
.	no	no
limit	no	yes
(	no	no
)	no	no
;	no	no
buf	no	yes
.	no	no
limit	no	yes
(	no	no
begin	no	yes
+	no	no
size	no	yes
)	no	no
;	no	no
Message	no	yes
<	no	no
?	no	no
>	no	no
message	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
(	no	no
DataInputBuffer	no	no
in	no	yes
=	no	no
new	no	no
DataInputBuffer	no	no
(	no	no
buf	no	yes
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
Message	no	yes
<	no	no
?	no	no
>	no	no
m	no	yes
=	no	no
serializer	no	yes
.	no	no
deserialize	no	yes
(	no	no
in	no	yes
,	no	no
header	no	yes
,	no	no
version	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
in	no	yes
.	no	no
available	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
throw	no	no
new	no	no
InvalidSerializedSizeException	no	yes
(	no	no
header	no	yes
.	no	no
verb	no	yes
,	no	no
size	no	yes
,	no	no
size	no	yes
-	no	no
in	no	yes
.	no	no
available	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
message	no	yes
=	no	no
m	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
IncompatibleSchemaException	no	no
e	no	yes
)	no	no
{	no	no
callbacks	no	yes
.	no	no
onFailedDeserialize	no	yes
(	no	no
size	no	yes
,	no	no
header	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
noSpamLogger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
this	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
JVMStabilityInspector	no	yes
.	no	no
inspectThrowable	no	yes
(	no	no
t	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
callbacks	no	yes
.	no	no
onFailedDeserialize	no	yes
(	no	no
size	no	yes
,	no	no
header	no	yes
,	no	no
t	yes	yes
)	no	no
;	no	no

EventLoopGroup	no	no
makeEventLoopGroup	no	no
(	no	no
int	no	no
threadCount	no	no
,	no	no
String	no	no
threadNamePrefix	yes	no
)	no	no
{	no	no

static	no	no
SslHandler	no	no
newSslHandler	no	no
(	no	no
Channel	no	no
channel	no	yes
,	no	no
SslContext	no	no
sslContext	no	yes
,	no	no
@	no	no
Nullable	no	no
InetSocketAddress	no	no
peer	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
peer	yes	yes
==	no	no
null	no	no
)	no	no
return	no	no
sslContext	no	yes
.	no	no
newHandler	no	yes
(	no	no
channel	no	yes
.	no	no
alloc	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	yes
datacenter	no	yes
:	no	no
datacenterToPeers	no	yes
.	no	no
keys	no	no
(	no	no
)	no	no
)	no	no
{	no	no
dcToRemainingPeers	no	yes
.	no	no
put	no	yes
(	no	no
datacenter	no	yes
,	no	no
new	no	no
CountDownLatch	no	yes
(	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
datacenterToPeers	no	yes
.	no	no
get	no	yes
(	no	no
datacenter	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
,	no	no
0	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
long	no	no
startNanos	yes	yes
=	no	no
System	yes	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
alivePeers	no	yes
=	no	no
Collections	no	yes
.	no	no
newSetFromMap	no	yes
(	no	no
new	no	no
ConcurrentHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
AliveListener	no	yes
listener	no	yes
=	no	no
new	no	no
AliveListener	no	yes
(	no	no
alivePeers	no	yes
,	no	no
dcToRemainingPeers	no	yes
,	no	no
acks	no	yes
,	no	no
peerToDatacenter	no	yes
::	no	no
get	no	yes
)	no	no
;	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
register	no	yes
(	no	no
listener	no	yes
)	no	no
;	no	no
sendPingMessages	no	yes
(	no	no
peers	no	yes
,	no	no
dcToRemainingPeers	no	yes
,	no	no
acks	no	yes
,	no	no
peerToDatacenter	no	yes
::	no	no
get	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
peer	no	yes
:	no	no
peers	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
isAlive	no	no
(	no	no
peer	no	yes
)	no	no
&&	no	no
alivePeers	no	yes
.	no	no
add	no	no
(	no	no
peer	no	yes
)	no	no
&&	no	no
acks	no	yes
.	no	no
incrementAndCheck	no	no
(	no	no
peer	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
datacenter	no	yes
=	no	no
peerToDatacenter	no	yes
.	no	no
get	no	yes
(	no	no
peer	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dcToRemainingPeers	no	yes
.	no	no
containsKey	no	yes
(	no	no
datacenter	no	yes
)	no	no
)	no	no
dcToRemainingPeers	no	yes
.	no	no
get	no	yes
(	no	no
datacenter	no	yes
)	no	no
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
boolean	no	no
succeeded	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
CountDownLatch	no	yes
countDownLatch	no	yes
:	no	no
dcToRemainingPeers	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
remainingNanos	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
1	no	no
,	no	no
timeoutNanos	no	yes
-	no	no
(	no	no
System	yes	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startNanos	yes	yes
)	no	no
)	no	no
;	no	no
succeeded	no	yes
&=	no	no
Uninterruptibles	no	yes
.	no	no
awaitUninterruptibly	no	yes
(	no	no
countDownLatch	no	yes
,	no	no
remainingNanos	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
NANOSECONDS	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
startSync	no	no
(	no	no
)	no	no
{	no	no
InetAddressAndPort	no	yes
remote	no	yes
=	no	no
nodePair	no	yes
.	no	no
peer	no	yes
;	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
rangesToSync	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
remote	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
onSuccess	no	no
(	no	no
StreamState	no	no
result	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	yes	yes
.	no	no
sessionId	no	yes
,	no	no
nodePair	no	yes
.	no	no
coordinator	no	yes
,	no	no
nodePair	no	yes
.	no	no
peer	no	yes
,	no	no
desc	yes	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	no	yes
:	no	no
allEndpoints	no	yes
)	no	no
{	no	no
SnapshotTask	no	yes
snapshotTask	no	yes
=	no	no
new	no	no
SnapshotTask	no	yes
(	no	no
desc	yes	yes
,	no	no
endpoint	no	yes
)	no	no
;	no	no
snapshotTasks	no	yes
.	no	no
add	no	yes
(	no	no
snapshotTask	no	yes
)	no	no
;	no	no
taskExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
snapshotTask	no	yes
)	no	no
;	no	no
}	no	no
allSnapshotTasks	no	yes
=	no	no
Futures	no	yes
.	no	no
allAsList	no	yes
(	no	no
snapshotTasks	no	yes
)	no	no
;	no	no
}	no	no
validations	no	yes
=	no	no
Futures	no	yes
.	no	no
transformAsync	no	yes
(	no	no
allSnapshotTasks	no	yes
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
List	no	yes
<	no	no
InetAddressAndPort	no	no
>	no	no
,	no	no
List	no	yes
<	no	no
TreeResponse	no	no
>>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
TreeResponse	no	no
>>	no	no
apply	no	no
(	no	no
List	no	yes
<	no	no
InetAddressAndPort	no	no
>	no	no
endpoints	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
parallelismDegree	no	yes
==	no	no
RepairParallelism	no	yes
.	no	no
SEQUENTIAL	no	yes
)	no	no
return	no	no
sendSequentialValidationRequest	no	yes
(	no	no
endpoints	no	yes
)	no	no
;	no	no
else	no	no
return	no	no
sendDCAwareValidationRequest	no	no
(	no	no
endpoints	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
taskExecutor	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
validations	no	yes
=	no	no
sendValidationRequest	no	yes
(	no	no
allEndpoints	no	yes
)	no	no
;	no	no
}	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
SyncStat	no	yes
>>	no	no
syncResults	no	yes
=	no	no
Futures	no	yes
.	no	no
transformAsync	no	yes
(	no	no
validations	no	yes
,	no	no
session	no	yes
.	no	no
optimiseStreams	no	yes
&&	no	no
!	no	no
session	no	yes
.	no	no
pullRepair	no	yes
?	no	no
this	no	no
::	no	no
optimisedSyncing	no	yes
:	no	no
this	no	no
::	no	no
standardSyncing	no	yes
,	no	no
taskExecutor	no	yes
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	no
(	no	no
syncResults	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
List	no	yes
<	no	no
SyncStat	no	yes
>>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
List	no	yes
<	no	no
SyncStat	no	yes
>	no	no
stats	no	no
)	no	no
{	no	no

TreeResponse	no	yes
self	no	yes
=	no	no
r1	no	yes
.	no	no
endpoint	no	yes
.	no	no
equals	no	yes
(	no	no
local	no	yes
)	no	no
?	no	no
r1	no	yes
:	no	no
r2	no	yes
;	no	no
TreeResponse	no	yes
remote	no	yes
=	no	no
r2	no	yes
.	no	no
endpoint	no	yes
.	no	no
equals	no	yes
(	no	no
local	no	yes
)	no	no
?	no	no
r1	no	yes
:	no	no
r2	no	yes
;	no	no
boolean	no	no
requestRanges	no	yes
=	no	no
!	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
self	no	yes
.	no	no
endpoint	no	yes
)	no	no
;	no	no
boolean	no	no
transferRanges	no	yes
=	no	no
!	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
remote	no	yes
.	no	no
endpoint	no	yes
)	no	no
&&	no	no
!	no	no
pullRepair	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
requestRanges	no	yes
&&	no	no
!	no	no
transferRanges	no	yes
)	no	no
continue	no	no
;	no	no
task	no	yes
=	no	no
new	no	no
LocalSyncTask	no	yes
(	no	no
desc	yes	yes
,	no	no
self	no	yes
.	no	no
endpoint	no	yes
,	no	no
remote	no	yes
.	no	no
endpoint	no	yes
,	no	no
differences	no	yes
,	no	no
isIncremental	no	yes
?	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
:	no	no
null	no	no
,	no	no
requestRanges	no	yes
,	no	no
transferRanges	no	yes
,	no	no
previewKind	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
r1	no	yes
.	no	no
endpoint	no	yes
)	no	no
||	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
r2	no	yes
.	no	no
endpoint	no	yes
)	no	no
)	no	no
{	no	no
TreeResponse	no	yes
streamFrom	no	yes
=	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
r1	no	yes
.	no	no
endpoint	no	yes
)	no	no
?	no	no
r1	no	yes
:	no	no
r2	no	yes
;	no	no
TreeResponse	no	yes
streamTo	no	yes
=	no	no
isTransient	no	yes
.	no	no
test	no	yes
(	no	no
r1	no	yes
.	no	no
endpoint	no	yes
)	no	no
?	no	no
r2	no	yes
:	no	no
r1	no	yes
;	no	no
task	no	yes
=	no	no
new	no	no
AsymmetricRemoteSyncTask	no	yes
(	no	no
desc	yes	yes
,	no	no
streamTo	no	yes
.	no	no
endpoint	no	yes
,	no	no
streamFrom	no	yes
.	no	no
endpoint	no	yes
,	no	no
differences	no	yes
,	no	no
previewKind	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
task	no	yes
=	no	no
new	no	no
SymmetricRemoteSyncTask	no	yes
(	no	no
desc	yes	yes
,	no	no
r1	no	yes
.	no	no
endpoint	no	yes
,	no	no
r2	no	yes
.	no	no
endpoint	no	yes
,	no	no
differences	no	yes
,	no	no
previewKind	no	yes
)	no	no
;	no	no
}	no	no
syncTasks	yes	yes
.	no	no
add	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
}	no	no
trees	yes	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
trees	yes	yes
.	no	no
release	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
trees	yes	yes
.	no	no
get	no	yes
(	no	no
trees	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
.	no	no
trees	yes	yes
.	no	no
release	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
ListenableFuture	no	no
<	no	no
List	no	no
<	no	no
TreeResponse	no	no
>>	no	no
sendValidationRequest	no	no
(	no	no
Collection	no	no
<	no	no
InetAddressAndPort	no	no
>	no	no
endpoints	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no

private	no	no
ListenableFuture	no	no
<	no	no
List	no	no
<	no	no
TreeResponse	no	no
>>	no	no
sendSequentialValidationRequest	no	no
(	no	no
Collection	no	no
<	no	no
InetAddressAndPort	no	no
>	no	no
endpoints	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no

private	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
TreeResponse	no	yes
>>	no	no
sendSequentialValidationRequest	no	no
(	no	no
Collection	no	no
<	no	no
InetAddressAndPort	no	yes
>	no	no
endpoints	no	yes
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
desc	no	yes
.	no	no
sessionId	no	yes
)	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
Tracing	no	yes
.	no	no
traceRepair	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
int	no	no
nowInSec	no	yes
=	no	no
getNowInSeconds	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
TreeResponse	no	yes
>>	no	no
tasks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
endpoints	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
requests	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
endpoints	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
address	yes	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
ValidationTask	no	yes
firstTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
address	yes	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no

int	no	no
nowInSec	no	yes
=	no	no
getNowInSeconds	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
TreeResponse	no	yes
>>	no	no
tasks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
endpoints	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
requests	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
endpoints	no	yes
)	no	no
;	no	no
InetAddressAndPort	no	yes
address	no	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
ValidationTask	no	yes
firstTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
address	no	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
desc	no	yes
.	no	no
sessionId	no	yes
)	no	no
,	no	no
address	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
trackValidationCompletion	no	yes
(	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
desc	no	yes
,	no	no
address	no	yes
)	no	no
,	no	no
firstTask	no	yes
)	no	no
;	no	no
tasks	no	yes
.	no	no
add	no	yes
(	no	no
firstTask	no	yes
)	no	no
;	no	no
ValidationTask	no	yes
currentTask	no	yes
=	no	no
firstTask	no	yes
;	no	no
while	no	no
(	no	no
requests	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
final	no	no
InetAddressAndPort	no	yes
nextAddress	yes	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ValidationTask	no	yes
nextTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
nextAddress	yes	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no
tasks	no	yes
.	no	no
add	no	yes
(	no	no
nextTask	no	yes
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
currentTask	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
TreeResponse	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
TreeResponse	no	yes
result	no	no
)	no	no
{	no	no

private	no	no
ListenableFuture	no	no
<	no	no
List	no	no
<	no	no
TreeResponse	no	no
>>	no	no
sendDCAwareValidationRequest	no	no
(	no	no
Collection	no	no
<	no	no
InetAddressAndPort	no	no
>	no	no
endpoints	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
,	no	no
endpoints	no	yes
)	no	no
;	no	no

Tracing	no	yes
.	no	no
traceRepair	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
int	no	no
nowInSec	no	yes
=	no	no
getNowInSeconds	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
TreeResponse	no	yes
>>	no	no
tasks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
endpoints	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>>	no	no
requestsByDatacenter	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	no	yes
:	no	no
endpoints	no	yes
)	no	no
{	no	no
String	no	yes
dc	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getEndpointSnitch	no	yes
(	no	no
)	no	no
.	no	no
getDatacenter	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
queue	no	yes
=	no	no
requestsByDatacenter	no	yes
.	no	no
get	no	yes
(	no	no
dc	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
queue	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
queue	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
requestsByDatacenter	no	yes
.	no	no
put	no	yes
(	no	no
dc	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
}	no	no
queue	no	yes
.	no	no
add	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>>	no	no
entry	no	yes
:	no	no
requestsByDatacenter	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
requests	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
address	yes	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
ValidationTask	no	yes
firstTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
address	yes	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no

}	no	no
queue	no	yes
.	no	no
add	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>>	no	no
entry	no	yes
:	no	no
requestsByDatacenter	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Queue	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
requests	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
address	no	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
ValidationTask	no	yes
firstTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
address	no	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
session	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
address	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
trackValidationCompletion	no	yes
(	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
desc	no	yes
,	no	no
address	no	yes
)	no	no
,	no	no
firstTask	no	yes
)	no	no
;	no	no
tasks	no	yes
.	no	no
add	no	yes
(	no	no
firstTask	no	yes
)	no	no
;	no	no
ValidationTask	no	yes
currentTask	no	yes
=	no	no
firstTask	no	yes
;	no	no
while	no	no
(	no	no
requests	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
final	no	no
InetAddressAndPort	no	yes
nextAddress	yes	yes
=	no	no
requests	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ValidationTask	no	yes
nextTask	no	yes
=	no	no
new	no	no
ValidationTask	no	yes
(	no	no
desc	no	yes
,	no	no
nextAddress	yes	yes
,	no	no
nowInSec	no	yes
,	no	no
session	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no
tasks	no	yes
.	no	no
add	no	yes
(	no	no
nextTask	no	yes
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
currentTask	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
TreeResponse	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
TreeResponse	no	no
result	no	no
)	no	no
{	no	no

public	no	no
void	no	no
doVerb	no	no
(	no	no
final	no	no
Message	no	no
<	no	no
RepairMessage	no	no
>	no	no
message	no	yes
)	no	no
{	no	no
RepairJobDesc	no	yes
desc	no	yes
=	no	no
message	no	yes
.	no	no
payload	no	yes
.	no	no
desc	no	yes
;	no	no
try	no	no
{	no	no
switch	no	no
(	no	no
message	no	yes
.	no	no
verb	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
PREPARE_MSG	no	no
:	no	no
PrepareMessage	no	no
prepareMessage	yes	no
=	no	no
(	no	no
PrepareMessage	no	no
)	no	no
message	no	yes
.	no	no
payload	no	yes
;	no	no

}	no	no
columnFamilyStores	no	yes
.	no	no
add	no	yes
(	no	no
columnFamilyStore	no	yes
)	no	no
;	no	no
}	no	no
ActiveRepairService	no	yes
.	no	no
instance	no	yes
.	no	no
registerParentRepairSession	no	yes
(	no	no
prepareMessage	no	yes
.	no	no
parentRepairSession	no	yes
,	no	no
message	yes	yes
.	no	no
from	no	yes
(	no	no
)	no	no
,	no	no
columnFamilyStores	no	yes
,	no	no
prepareMessage	no	yes
.	no	no
ranges	no	yes
,	no	no
prepareMessage	no	yes
.	no	no
isIncremental	no	yes
,	no	no
prepareMessage	no	yes
.	no	no
timestamp	no	yes
,	no	no
prepareMessage	no	yes
.	no	no
isGlobal	no	yes
,	no	no
prepareMessage	no	yes
.	no	no
previewKind	no	yes
)	no	no
;	no	no
MessagingService	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
send	no	yes
(	no	no
message	yes	yes
.	no	no
emptyResponse	no	yes
(	no	no
)	no	no
,	no	no
message	yes	yes
.	no	no
from	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SNAPSHOT_MSG	no	no
:	no	no
logger	no	no
.	no	no
debug	no	no
(	no	no
,	no	no
desc	yes	yes
)	no	no
;	no	no
final	no	no
ColumnFamilyStore	no	yes
cfs	no	yes
=	no	no
ColumnFamilyStore	no	yes
.	no	no
getIfExists	no	yes
(	no	no
desc	yes	yes
.	no	no
keyspace	no	yes
,	no	no
desc	yes	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cfs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
logErrorAndSendFailureResponse	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	yes	yes
.	no	no
keyspace	no	yes
,	no	no
desc	yes	yes
.	no	no
columnFamily	no	yes
,	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
)	no	no
,	no	no
message	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
ActiveRepairService	no	yes
.	no	no
ParentRepairSession	no	yes
prs	no	yes
=	no	no
ActiveRepairService	no	yes
.	no	no
instance	no	yes
.	no	no
getParentRepairSession	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
)	no	no
;	no	no
TableRepairManager	no	yes
repairManager	no	yes
=	no	no
cfs	no	yes
.	no	no
getRepairManager	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
prs	no	yes
.	no	no
isGlobal	no	yes
)	no	no
{	no	no
repairManager	no	yes
.	no	no
snapshot	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
prs	no	yes
.	no	no
getRanges	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
repairManager	no	yes
.	no	no
snapshot	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
desc	yes	yes
.	no	no
ranges	no	yes
,	no	no
true	no	no
)	no	no
;	no	no

case	no	no
SNAPSHOT_MSG	no	no
:	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
desc	yes	yes
)	no	no
;	no	no
final	no	no
ColumnFamilyStore	no	yes
cfs	no	yes
=	no	no
ColumnFamilyStore	no	yes
.	no	no
getIfExists	no	yes
(	no	no
desc	yes	yes
.	no	no
keyspace	no	yes
,	no	no
desc	yes	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cfs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
logErrorAndSendFailureResponse	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
desc	yes	yes
.	no	no
keyspace	no	yes
,	no	no
desc	yes	yes
.	no	no
columnFamily	no	yes
,	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
)	no	no
,	no	no
message	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
ActiveRepairService	no	yes
.	no	no
ParentRepairSession	no	yes
prs	no	yes
=	no	no
ActiveRepairService	no	yes
.	no	no
instance	no	yes
.	no	no
getParentRepairSession	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
)	no	no
;	no	no
TableRepairManager	no	yes
repairManager	no	yes
=	no	no
cfs	no	yes
.	no	no
getRepairManager	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
prs	no	yes
.	no	no
isGlobal	no	no
)	no	no
{	no	no
repairManager	no	yes
.	no	no
snapshot	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
prs	no	yes
.	no	no
getRanges	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
repairManager	no	yes
.	no	no
snapshot	no	yes
(	no	no
desc	yes	yes
.	no	no
parentSessionId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
desc	yes	yes
.	no	no
ranges	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
desc	yes	yes
.	no	no
sessionId	no	yes
,	no	no
message	no	yes
.	no	no
from	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessagingService	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
send	no	yes
(	no	no
message	no	yes
.	no	no
emptyResponse	no	yes
(	no	no
)	no	no
,	no	no
message	no	yes
.	no	no
from	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VALIDATION_REQ	no	no
:	no	no
ValidationRequest	no	no
validationRequest	no	no
=	no	no
(	no	no
ValidationRequest	no	no
)	no	no
message	no	yes
.	no	no
payload	no	no
;	no	no

private	no	no
void	no	no
logErrorAndSendFailureResponse	no	no
(	no	no
String	no	no
errorMessage	yes	no
,	no	no
Message	no	no
<	no	no
?	no	no
>	no	no
respondTo	no	no
)	no	no
{	no	no

public	no	no
void	no	no
notification	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
notifyError	no	no
(	no	no
Throwable	no	no
error	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
error	yes	yes
instanceof	no	no
SomeRepairFailedException	no	yes
)	no	no
return	no	no
;	no	no

private	no	no
void	no	no
notifyStarting	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
cmd	no	yes
,	no	no
parentSession	no	yes
,	no	no
keyspace	no	yes
,	no	no
options	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
normalRepair	no	no
(	no	no
UUID	no	no
parentSession	no	yes
,	no	no
long	no	no
startTime	no	no
,	no	no
TraceState	no	no
traceState	no	no
,	no	no
List	no	yes
<	no	no
CommonRange	no	no
>	no	no
commonRanges	no	yes
,	no	no
String	no	no
...	no	no
cfnames	no	yes
)	no	no
{	no	no
ListeningExecutorService	no	yes
executor	no	yes
=	no	no
createExecutor	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
RepairSessionResult	no	yes
>>	no	no
allSessions	no	yes
=	no	no
submitRepairSessions	no	yes
(	no	no
parentSession	no	yes
,	no	no
false	no	no
,	no	no
executor	no	yes
,	no	no
commonRanges	no	yes
,	no	no
cfnames	no	yes
)	no	no
;	no	no
final	no	no
Collection	no	yes
<	no	no
Range	no	yes
<	no	no
Token	no	yes
>>	no	no
successfulRanges	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
AtomicBoolean	no	yes
hasFailure	no	yes
=	no	no
new	no	no
AtomicBoolean	no	yes
(	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
repairResult	no	no
=	no	no
Futures	no	no
.	no	no
transformAsync	no	no
(	no	no
allSessions	no	yes
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
List	no	yes
<	no	no
RepairSessionResult	no	yes
>	no	no
,	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
public	no	no
ListenableFuture	no	yes
apply	no	no
(	no	no
List	no	yes
<	no	no
RepairSessionResult	no	yes
>	no	no
results	yes	no
)	no	no
{	no	no
for	no	no
(	no	no
RepairSessionResult	no	yes
sessionResult	no	no
:	no	no
results	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
previewRepair	no	no
(	no	no
UUID	no	no
parentSession	yes	no
,	no	no
long	no	no
startTime	no	no
,	no	no
List	no	no
<	no	no
CommonRange	no	no
>	no	no
commonRanges	no	no
,	no	no
String	no	no
...	no	no
cfnames	no	no
)	no	no
{	no	no

return	no	no
;	no	no
}	no	no
PreviewKind	no	yes
previewKind	no	yes
=	no	no
options	no	yes
.	no	no
getPreviewKind	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
previewKind	no	yes
!=	no	no
PreviewKind	no	yes
.	no	no
NONE	no	yes
,	no	no
)	no	no
;	no	no
SyncStatSummary	no	yes
summary	no	yes
=	no	no
new	no	no
SyncStatSummary	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
summary	no	yes
.	no	no
consumeSessionResults	no	yes
(	no	no
results	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
message	no	yes
;	no	no
if	no	no
(	no	no
summary	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
message	no	yes
=	no	no
previewKind	no	yes
==	no	no
PreviewKind	no	yes
.	no	no
REPAIRED	no	yes
?	no	no
:	no	no
;	no	no
}	no	no
else	no	no
{	no	no
message	no	yes
=	no	no
(	no	no
previewKind	no	yes
==	no	no
PreviewKind	no	yes
.	no	no
REPAIRED	no	yes
?	no	no
:	no	no
)	no	no
+	no	no
summary	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
RepairMetrics	no	yes
.	no	no
previewFailures	no	yes
.	no	no
inc	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
previewKind	no	yes
==	no	no
PreviewKind	no	yes
.	no	no
REPAIRED	no	yes
)	no	no
maybeSnapshotReplicas	no	yes
(	no	no
parentSession	no	yes
,	no	no
keyspace	no	yes
,	no	no
results	no	yes
)	no	no
;	no	no
}	no	no
notification	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
success	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

try	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
mismatchingTables	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
nodes	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RepairSessionResult	no	no
sessionResult	no	no
:	no	no
results	no	no
)	no	no
{	no	no
for	no	no
(	no	no
RepairResult	no	no
repairResult	no	yes
:	no	no
emptyIfNull	no	no
(	no	no
sessionResult	no	no
.	no	no
repairJobResults	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
SyncStat	no	no
stat	no	yes
:	no	no
emptyIfNull	no	no
(	no	no
repairResult	no	yes
.	no	no
stats	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
stat	no	yes
.	no	no
numberOfDifferences	no	yes
>	no	no
0	no	no
)	no	no
mismatchingTables	no	yes
.	no	no
add	no	yes
(	no	no
repairResult	no	yes
.	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no
nodes	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
nodes	no	yes
.	no	no
coordinator	no	yes
)	no	no
;	no	no
nodes	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
nodes	no	yes
.	no	no
peer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
String	no	yes
snapshotName	yes	yes
=	no	no
DiagnosticSnapshotService	no	yes
.	no	no
getSnapshotName	no	yes
(	no	no
DiagnosticSnapshotService	no	yes
.	no	no
REPAIRED_DATA_MISMATCH_SNAPSHOT_PREFIX	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
table	yes	yes
:	no	no
mismatchingTables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	yes	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
table	yes	yes
)	no	no
.	no	no
snapshotExists	no	no
(	no	no
snapshotName	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
options	no	yes
.	no	no
getPreviewKind	no	yes
(	no	no
)	no	no
.	no	no
logPrefix	no	yes
(	no	no
parentSession	no	yes
)	no	no
,	no	no
keyspace	yes	yes
,	no	no
table	yes	yes
,	no	no
snapshotName	yes	yes
,	no	no
nodes	no	yes
)	no	no
;	no	no
DiagnosticSnapshotService	no	yes
.	no	no
repairedDataMismatch	no	yes
(	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	yes	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
table	yes	yes
)	no	no
.	no	no
metadata	no	yes
(	no	no
)	no	no
,	no	no
nodes	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
nodes	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RepairSessionResult	no	no
sessionResult	no	no
:	no	no
results	no	no
)	no	no
{	no	no
for	no	no
(	no	no
RepairResult	no	no
repairResult	no	yes
:	no	no
emptyIfNull	no	no
(	no	no
sessionResult	no	no
.	no	no
repairJobResults	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
SyncStat	no	no
stat	no	yes
:	no	no
emptyIfNull	no	no
(	no	no
repairResult	no	yes
.	no	no
stats	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
stat	no	yes
.	no	no
numberOfDifferences	no	yes
>	no	no
0	no	no
)	no	no
mismatchingTables	no	yes
.	no	no
add	no	yes
(	no	no
repairResult	no	yes
.	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no
nodes	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
nodes	no	yes
.	no	no
coordinator	no	yes
)	no	no
;	no	no
nodes	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
nodes	no	yes
.	no	no
peer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
String	no	yes
snapshotName	no	yes
=	no	no
DiagnosticSnapshotService	no	yes
.	no	no
getSnapshotName	no	yes
(	no	no
DiagnosticSnapshotService	no	yes
.	no	no
REPAIRED_DATA_MISMATCH_SNAPSHOT_PREFIX	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
table	no	yes
:	no	no
mismatchingTables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
table	no	yes
)	no	no
.	no	no
snapshotExists	no	no
(	no	no
snapshotName	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
options	no	yes
.	no	no
getPreviewKind	no	yes
(	no	no
)	no	no
.	no	no
logPrefix	no	yes
(	no	no
parentSession	no	yes
)	no	no
,	no	no
keyspace	no	yes
,	no	no
table	no	yes
,	no	no
snapshotName	no	yes
,	no	no
nodes	no	yes
)	no	no
;	no	no
DiagnosticSnapshotService	no	yes
.	no	no
repairedDataMismatch	no	yes
(	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
table	no	yes
)	no	no
.	no	no
metadata	no	yes
(	no	no
)	no	no
,	no	no
nodes	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
options	no	yes
.	no	no
getPreviewKind	no	yes
(	no	no
)	no	no
.	no	no
logPrefix	no	yes
(	no	no
parentSession	no	yes
)	no	no
,	no	no
keyspace	no	yes
,	no	no
table	no	yes
,	no	no
snapshotName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
RepairSessionResult	no	yes
>>	no	no
submitRepairSessions	no	no
(	no	no
UUID	no	no
parentSession	no	no
,	no	no
boolean	no	no
isIncremental	no	yes
,	no	no
ListeningExecutorService	no	no
executor	no	no
,	no	no
List	no	yes
<	no	no
CommonRange	no	no
>	no	no
commonRanges	no	no
,	no	no
String	no	no
...	no	no
cfnames	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
RepairSessionResult	no	yes
>>	no	no
futures	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
options	no	yes
.	no	no
getRanges	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
force	no	yes
=	no	no
options	no	yes
.	no	no
isForcedRepair	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
isIncremental	no	yes
;	no	no
for	no	no
(	no	no
CommonRange	no	no
commonRange	yes	no
:	no	no
commonRanges	no	no
)	no	no
{	no	no

if	no	no
(	no	no
terminated	no	yes
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
parentRepairSession	no	yes
,	no	no
repairedNodes	no	yes
(	no	no
)	no	no
,	no	no
commonRange	no	yes
,	no	no
keyspace	no	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
cfnames	no	yes
)	no	no
)	no	no
;	no	no
Tracing	no	yes
.	no	no
traceRepair	no	yes
(	no	no
,	no	no
commonRange	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
previewKind	no	yes
.	no	no
isPreview	no	no
(	no	no
)	no	no
)	no	no
{	no	no
SystemDistributedKeyspace	no	yes
.	no	no
startRepairs	no	yes
(	no	no
getId	no	yes
(	no	no
)	no	no
,	no	no
parentRepairSession	no	yes
,	no	no
keyspace	no	yes
,	no	no
cfnames	no	yes
,	no	no
commonRange	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
commonRange	no	yes
.	no	no
endpoints	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
commonRange	no	yes
)	no	no
)	no	no
;	no	no
Tracing	no	yes
.	no	no
traceRepair	no	yes
(	no	no
message	yes	yes
)	no	no
;	no	no
set	no	yes
(	no	no
new	no	no
RepairSessionResult	no	yes
(	no	no
id	no	yes
,	no	no
keyspace	no	yes
,	no	no
commonRange	no	yes
.	no	no
ranges	no	yes
,	no	no
Lists	no	yes
.	no	no
<	no	no
RepairResult	no	yes
>	no	no
newArrayList	no	yes
(	no	no
)	no	no
,	no	no
skippedReplicas	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
previewKind	no	yes
.	no	no
isPreview	no	no
(	no	no
)	no	no
)	no	no
{	no	no
SystemDistributedKeyspace	no	yes
.	no	no
failRepairs	no	yes
(	no	no
getId	no	yes
(	no	no
)	no	no
,	no	no
keyspace	no	yes
,	no	no
cfnames	no	yes
,	no	no
new	no	no
RuntimeException	no	yes
(	no	no
message	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	no	yes
:	no	no
commonRange	no	yes
.	no	no
endpoints	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
FailureDetector	no	no
.	no	no
instance	no	no
.	no	no
isAlive	no	no
(	no	no
endpoint	no	yes
)	no	no
&&	no	no
!	no	no
skippedReplicas	no	yes
)	no	no
{	no	no
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
endpoint	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
convict	no	no
(	no	no
InetAddressAndPort	no	no
endpoint	no	yes
,	no	no
double	no	no
phi	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
commonRange	no	yes
.	no	no
endpoints	no	yes
.	no	no
contains	no	yes
(	no	no
endpoint	no	yes
)	no	no
)	no	no
return	no	no
;	no	no
if	no	no
(	no	no
phi	no	yes
<	no	no
2	no	no
*	no	no
DatabaseDescriptor	no	yes
.	no	no
getPhiConvictThreshold	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isFailed	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
false	no	no
,	no	no
true	no	no
)	no	no
)	no	no
return	no	no
;	no	no
Exception	no	yes
exception	yes	yes
=	no	no
new	no	no
IOException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
endpoint	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
onIRStateChange	no	no
(	no	no
LocalSession	no	no
session	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
previewKind	no	no
==	no	no
PreviewKind	no	no
.	no	no
REPAIRED	no	no
&&	no	no
session	yes	no
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
ConsistentSession	no	no
.	no	no
State	no	no
.	no	no
FINALIZED	no	no
&&	no	no
includesTables	no	no
(	no	no
session	yes	no
.	no	no
tableIds	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Range	no	no
<	no	no
Token	no	no
>	no	no
range	no	no
:	no	no
session	yes	no
.	no	no
ranges	no	no
)	no	no
{	no	no
if	no	no
(	no	no
range	no	no
.	no	no
intersects	no	no
(	no	no
ranges	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
startSync	no	no
(	no	no
)	no	no
{	no	no
InetAddressAndPort	no	yes
local	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
SyncRequest	no	yes
request	no	yes
=	no	no
new	no	no
SyncRequest	no	yes
(	no	no
desc	yes	yes
,	no	no
local	no	yes
,	no	no
nodePair	no	yes
.	no	no
coordinator	no	yes
,	no	no
nodePair	no	yes
.	no	no
peer	no	yes
,	no	no
rangesToSync	no	yes
,	no	no
previewKind	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
nodePair	no	yes
.	no	no
coordinator	no	yes
.	no	no
equals	no	yes
(	no	no
request	no	yes
.	no	no
src	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
request	no	yes
.	no	no
ranges	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
src	no	yes
,	no	no
request	no	yes
.	no	no
dst	no	yes
)	no	no
;	no	no

public	no	no
final	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
format	yes	yes
=	no	no
String	no	yes
.	no	no
format	yes	yes
(	no	no
,	no	no
previewKind	no	yes
.	no	no
logPrefix	no	yes
(	no	no
desc	no	yes
.	no	no
sessionId	no	yes
)	no	no
,	no	no
nodePair	no	yes
.	no	no
coordinator	no	yes
,	no	no
nodePair	no	yes
.	no	no
peer	no	yes
,	no	no
desc	no	yes
.	no	no
columnFamily	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rangesToSync	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
validator	yes	yes
.	no	no
prepare	no	yes
(	no	no
cfs	no	yes
,	no	no
tree	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
vi	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
(	no	no
UnfilteredRowIterator	no	no
partition	no	yes
=	no	no
vi	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
validator	yes	yes
.	no	no
add	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
partitionCount	yes	yes
++	no	no
;	no	no
}	no	no
}	no	no
validator	yes	yes
.	no	no
complete	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
estimatedTotalBytes	yes	yes
=	no	no
vi	no	yes
.	no	no
getEstimatedBytes	no	yes
(	no	no
)	no	no
;	no	no
partitionCount	yes	yes
=	no	no
vi	no	yes
.	no	no
estimatedPartitions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
cfs	no	yes
.	no	no
metric	no	yes
.	no	no
bytesValidated	no	yes
.	no	no
update	no	yes
(	no	no
estimatedTotalBytes	yes	yes
)	no	no
;	no	no
cfs	no	yes
.	no	no
metric	no	yes
.	no	no
partitionsValidated	no	yes
.	no	no
update	no	yes
(	no	no
partitionCount	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
logger	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
duration	yes	yes
=	no	no
TimeUnit	no	yes
.	no	no
NANOSECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
)	no	no
;	no	no

public	no	no
ListenableFuture	no	yes
execute	no	no
(	no	no
Supplier	no	no
<	no	no
ListenableFuture	no	yes
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>>>	no	no
sessionSubmitter	no	no
,	no	no
AtomicBoolean	no	no
hasFailure	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sessionID	yes	yes
)	no	no
;	no	no
sessionStart	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
prepareResult	no	yes
=	no	no
prepare	no	yes
(	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>>	no	no
repairSessionResults	no	no
=	no	no
Futures	no	no
.	no	no
transformAsync	no	no
(	no	no
prepareResult	no	yes
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
Boolean	no	yes
,	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
ListenableFuture	no	yes
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>>	no	no
apply	no	no
(	no	no
Boolean	no	yes
success	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
success	no	no
)	no	no
{	no	no
repairStart	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
ListenableFuture	no	no
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>>	no	no
apply	no	no
(	no	no
Boolean	no	no
success	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
success	no	no
)	no	no
{	no	no
repairStart	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sessionID	yes	yes
,	no	no
formatDuration	no	yes
(	no	no
sessionStart	no	yes
,	no	no
repairStart	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
setRepairing	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
sessionSubmitter	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
Futures	no	yes
.	no	no
immediateFuture	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	no
>	no	no
proposeFuture	no	no
=	no	no
Futures	no	yes
.	no	no
transformAsync	no	no
(	no	no
repairSessionResults	no	no
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
,	no	no
Boolean	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	no
>	no	no
apply	no	no
(	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
results	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
results	no	no
==	no	no
null	no	no
||	no	no
results	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
Iterables	no	no
.	no	no
any	no	no
(	no	no
results	no	no
,	no	no
r	no	no
->	no	no
r	no	no
==	no	no
null	no	no
)	no	no
)	no	no
{	no	no
finalizeStart	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	yes
>	no	no
proposeFuture	no	no
=	no	no
Futures	no	yes
.	no	no
transformAsync	no	no
(	no	no
repairSessionResults	no	no
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	yes
>	no	no
apply	no	no
(	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
results	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
results	no	no
==	no	no
null	no	no
||	no	no
results	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
Iterables	no	no
.	no	no
any	no	no
(	no	no
results	no	no
,	no	no
r	no	no
->	no	no
r	no	no
==	no	no
null	no	no
)	no	no
)	no	no
{	no	no
finalizeStart	yes	yes
=	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sessionID	yes	yes
,	no	no
formatDuration	no	yes
(	no	no
repairStart	no	yes
,	no	no
finalizeStart	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
Futures	no	yes
.	no	no
immediateFailedFuture	no	yes
(	no	no
SomeRepairFailedException	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
finalizePropose	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
SettableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
resultFuture	no	yes
=	no	no
SettableFuture	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	no
(	no	no
proposeFuture	no	no
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
@	no	no
Nullable	no	no
Boolean	no	yes
result	no	no
)	no	no
{	no	no
try	no	no
{	no	no

,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	yes
>	no	no
proposeFuture	no	no
=	no	no
Futures	no	yes
.	no	no
transformAsync	no	no
(	no	no
repairSessionResults	no	no
,	no	no
new	no	no
AsyncFunction	no	no
<	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
,	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
ListenableFuture	no	no
<	no	no
Boolean	no	yes
>	no	no
apply	no	no
(	no	no
List	no	no
<	no	no
RepairSessionResult	no	no
>	no	no
results	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
results	no	no
==	no	no
null	no	no
||	no	no
results	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
Iterables	no	no
.	no	no
any	no	no
(	no	no
results	no	no
,	no	no
r	no	no
->	no	no
r	no	no
==	no	no
null	no	no
)	no	no
)	no	no
{	no	no
finalizeStart	no	yes
=	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sessionID	yes	yes
,	no	no
formatDuration	no	yes
(	no	no
repairStart	no	yes
,	no	no
finalizeStart	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
Futures	no	yes
.	no	no
immediateFailedFuture	no	yes
(	no	no
SomeRepairFailedException	no	yes
.	no	no
INSTANCE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
finalizePropose	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
SettableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
resultFuture	no	yes
=	no	no
SettableFuture	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	no
(	no	no
proposeFuture	no	no
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
@	no	no
Nullable	no	no
Boolean	no	yes
result	no	no
)	no	no
{	no	no
try	no	no
{	no	no

else	no	no
{	no	no
return	no	no
finalizePropose	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
,	no	no
MoreExecutors	no	no
.	no	no
directExecutor	no	no
(	no	no
)	no	no
)	no	no
;	no	no
SettableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
resultFuture	no	yes
=	no	no
SettableFuture	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
proposeFuture	no	no
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
Boolean	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
@	no	no
Nullable	no	no
Boolean	no	yes
result	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
result	no	no
!=	no	no
null	no	no
&&	no	no
result	no	no
)	no	no
{	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sessionID	yes	yes
,	no	no
formatDuration	no	yes
(	no	no
finalizeStart	no	yes
,	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finalizeCommit	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sessionID	yes	yes
,	no	no
formatDuration	no	yes
(	no	no
sessionStart	yes	yes
,	no	no
System	yes	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
hasFailure	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

public	no	no
void	no	no
cancelSession	no	no
(	no	no
UUID	no	no
sessionID	yes	no
,	no	no
boolean	no	no
force	no	no
)	no	no
{	no	no

logger	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isNodeInitialized	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
LocalSession	no	yes
>	no	no
currentSessions	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
sessions	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
LocalSession	no	yes
session	yes	yes
:	no	no
currentSessions	no	yes
)	no	no
{	no	no
synchronized	no	no
(	no	no
session	yes	yes
)	no	no
{	no	no
int	no	no
now	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
nowInSeconds	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
shouldFail	no	no
(	no	no
session	yes	yes
,	no	no
now	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
session	yes	yes
)	no	no
;	no	no
failSession	no	yes
(	no	no
session	yes	yes
.	no	no
sessionID	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
shouldDelete	no	no
(	no	no
session	yes	yes
,	no	no
now	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
session	yes	yes
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
FINALIZED	no	no
&&	no	no
!	no	no
isSuperseded	no	no
(	no	no
session	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
session	yes	yes
.	no	no
sessionID	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
sessionHasData	no	no
(	no	no
session	yes	yes
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
failSession	no	no
(	no	no
UUID	no	no
sessionID	yes	yes
,	no	no
boolean	no	no
sendMessage	no	no
)	no	no
{	no	no
LocalSession	no	yes
session	no	yes
=	no	no
getSession	no	yes
(	no	no
sessionID	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
session	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
session	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
session	no	yes
.	no	no
getState	no	no
(	no	no
)	no	no
!=	no	no
FAILED	no	no
)	no	no
{	no	no

public	no	no
synchronized	no	no
void	no	no
deleteSession	no	no
(	no	no
UUID	no	no
sessionID	yes	no
)	no	no
{	no	no

parentSession	no	yes
=	no	no
getParentRepairSession	no	yes
(	no	no
sessionID	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
sessionID	yes	yes
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
coordinator	no	yes
,	no	no
Message	no	yes
.	no	no
out	no	yes
(	no	no
PREPARE_CONSISTENT_RSP	no	yes
,	no	no
new	no	no
PrepareConsistentResponse	no	yes
(	no	no
sessionID	yes	yes
,	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
LocalSession	no	yes
session	no	yes
=	no	no
createSessionUnsafe	no	yes
(	no	no
sessionID	yes	yes
,	no	no
parentSession	no	yes
,	no	no
peers	no	yes
)	no	no
;	no	no
putSessionUnsafe	no	yes
(	no	no
session	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
session	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
parentSession	no	yes
.	no	no
getColumnFamilyStores	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
KeyspaceRepairManager	no	yes
repairManager	no	yes
=	no	no
parentSession	no	yes
.	no	no
getKeyspace	no	yes
(	no	no
)	no	no
.	no	no
getRepairManager	no	yes
(	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
tokenRanges	no	yes
=	no	no
filterLocalRanges	no	yes
(	no	no
parentSession	no	yes
.	no	no
getKeyspace	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
parentSession	no	yes
.	no	no
getRanges	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
repairPreparation	no	yes
=	no	no
prepareSession	no	yes
(	no	no
repairManager	no	yes
,	no	no
sessionID	yes	yes
,	no	no
parentSession	no	yes
.	no	no
getColumnFamilyStores	no	yes
(	no	no
)	no	no
,	no	no
tokenRanges	no	yes
,	no	no
executor	no	yes
,	no	no
(	no	no
)	no	no
->	no	no
session	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
!=	no	no
PREPARING	no	yes
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
repairPreparation	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
@	no	no
Nullable	no	no
Object	no	no
result	no	no
)	no	no
{	no	no
try	no	no
{	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
session	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
parentSession	no	yes
.	no	no
getColumnFamilyStores	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
KeyspaceRepairManager	no	yes
repairManager	no	yes
=	no	no
parentSession	no	yes
.	no	no
getKeyspace	no	yes
(	no	no
)	no	no
.	no	no
getRepairManager	no	yes
(	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
tokenRanges	no	yes
=	no	no
filterLocalRanges	no	yes
(	no	no
parentSession	no	yes
.	no	no
getKeyspace	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
parentSession	no	yes
.	no	no
getRanges	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
repairPreparation	no	yes
=	no	no
prepareSession	no	yes
(	no	no
repairManager	no	yes
,	no	no
sessionID	yes	yes
,	no	no
parentSession	no	yes
.	no	no
getColumnFamilyStores	no	yes
(	no	no
)	no	no
,	no	no
tokenRanges	no	yes
,	no	no
executor	no	yes
,	no	no
(	no	no
)	no	no
->	no	no
session	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
!=	no	no
PREPARING	no	yes
)	no	no
;	no	no
Futures	no	no
.	no	no
addCallback	no	no
(	no	no
repairPreparation	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
@	no	no
Nullable	no	no
Object	no	no
result	no	no
)	no	no
{	no	no
try	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sessionID	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
session	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
!=	no	no
FAILED	no	yes
)	no	no
setStateAndSave	no	yes
(	no	no
session	no	yes
,	no	no
PREPARED	no	yes
)	no	no
;	no	no
else	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sessionID	yes	yes
)	no	no
;	no	no
Message	no	yes
<	no	no
PrepareConsistentResponse	no	yes
>	no	no
message	no	yes
=	no	no
Message	no	yes
.	no	no
out	no	yes
(	no	no
PREPARE_CONSISTENT_RSP	no	yes
,	no	no
new	no	no
PrepareConsistentResponse	no	yes
(	no	no
sessionID	yes	yes
,	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
,	no	no
session	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
!=	no	no
FAILED	no	yes
)	no	no
)	no	no
;	no	no
sendMessage	no	yes
(	no	no
coordinator	no	yes
,	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
executor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
maybeSetRepairing	no	no
(	no	no
UUID	no	no
sessionID	no	yes
)	no	no
{	no	no
LocalSession	no	yes
session	yes	yes
=	no	no
getSession	no	yes
(	no	no
sessionID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
session	yes	yes
!=	no	no
null	no	no
&&	no	no
session	yes	yes
.	no	no
getState	no	no
(	no	no
)	no	no
!=	no	no
REPAIRING	no	no
)	no	no
{	no	no

public	no	no
void	no	no
handleFinalizeProposeMessage	no	no
(	no	no
InetAddressAndPort	no	no
from	no	yes
,	no	no
FinalizePropose	no	no
propose	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
propose	no	yes
,	no	no
from	no	yes
)	no	no
;	no	no
UUID	no	yes
sessionID	yes	yes
=	no	no
propose	no	yes
.	no	no
sessionID	yes	yes
;	no	no
LocalSession	no	yes
session	no	yes
=	no	no
getSession	no	yes
(	no	no
sessionID	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
session	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
sendStatusRequest	no	no
(	no	no
LocalSession	no	no
session	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
maybeScheduleSchemaPull	no	no
(	no	no
final	no	no
UUID	no	no
theirVersion	no	no
,	no	no
final	no	no
InetAddressAndPort	no	no
endpoint	no	no
,	no	no
String	no	yes
releaseVersion	yes	no
)	no	no
{	no	no
String	no	yes
ourMajorVersion	yes	yes
=	no	no
FBUtilities	no	yes
.	no	no
getReleaseVersionMajor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
releaseVersion	yes	no
.	no	no
startsWith	no	no
(	no	no
ourMajorVersion	yes	yes
)	no	no
)	no	no
{	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
ourMajorVersion	no	yes
,	no	no
releaseVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
unknownLocalSchemaVersion	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
isSameVersion	no	no
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	yes	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
versionMatch	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
shouldPullSchemaFrom	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
skipPull	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
runtimeMXBean	no	no
.	no	no
getUptime	no	no
(	no	no
)	no	no
<	no	no
MIGRATION_DELAY_IN_MS	no	no
)	no	no
{	no	no

return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
isSameVersion	no	no
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
versionMatch	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
shouldPullSchemaFrom	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
skipPull	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
runtimeMXBean	no	no
.	no	no
getUptime	no	no
(	no	no
)	no	no
<	no	no
MIGRATION_DELAY_IN_MS	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
submitMigrationTask	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Runnable	no	no
runnable	no	no
=	no	no
(	no	no
)	no	no
->	no	no
{	no	no
UUID	no	yes
epSchemaVersion	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getSchemaVersion	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
versionMatch	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
shouldPullSchemaFrom	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
skipPull	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
runtimeMXBean	no	no
.	no	no
getUptime	no	no
(	no	no
)	no	no
<	no	no
MIGRATION_DELAY_IN_MS	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
Schema	no	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
submitMigrationTask	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Runnable	no	no
runnable	no	no
=	no	no
(	no	no
)	no	no
->	no	no
{	no	no
UUID	no	yes
epSchemaVersion	yes	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getSchemaVersion	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epSchemaVersion	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
!	no	no
shouldPullSchemaFrom	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
skipPull	no	yes
(	no	no
endpoint	yes	yes
,	no	no
theirVersion	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
runtimeMXBean	no	no
.	no	no
getUptime	no	no
(	no	no
)	no	no
<	no	no
MIGRATION_DELAY_IN_MS	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
endpoint	yes	yes
,	no	no
Schema	yes	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
Schema	yes	yes
.	no	no
schemaVersionToString	no	yes
(	no	no
theirVersion	no	yes
)	no	no
)	no	no
;	no	no
submitMigrationTask	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Runnable	no	no
runnable	no	no
=	no	no
(	no	no
)	no	no
->	no	no
{	no	no
UUID	no	yes
epSchemaVersion	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getSchemaVersion	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epSchemaVersion	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Schema	yes	yes
.	no	no
instance	no	yes
.	no	no
isSameVersion	no	no
(	no	no
epSchemaVersion	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
epSchemaVersion	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
announceNewKeyspace	no	no
(	no	no
KeyspaceMetadata	no	no
ksm	yes	yes
,	no	no
long	no	no
timestamp	no	no
,	no	no
boolean	no	no
announceLocally	no	no
)	no	no
throws	no	no
ConfigurationException	no	no
{	no	no
ksm	yes	yes
.	no	no
validate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
ksm	yes	yes
.	no	no
name	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
AlreadyExistsException	no	yes
(	no	no
ksm	yes	yes
.	no	no
name	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
announceNewTable	no	no
(	no	no
TableMetadata	no	no
cfm	yes	yes
,	no	no
boolean	no	no
throwOnDuplicate	no	no
,	no	no
long	no	no
timestamp	no	no
)	no	no
{	no	no
cfm	yes	yes
.	no	no
validate	no	yes
(	no	no
)	no	no
;	no	no
KeyspaceMetadata	no	yes
ksm	no	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
cfm	yes	yes
.	no	no
keyspace	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ksm	no	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
cfm	yes	yes
.	no	no
name	no	yes
,	no	no
cfm	yes	yes
.	no	no
keyspace	no	yes
)	no	no
)	no	no
;	no	no
else	no	no
if	no	no
(	no	no
throwOnDuplicate	no	no
&&	no	no
ksm	no	yes
.	no	no
getTableOrViewNullable	no	no
(	no	no
cfm	yes	yes
.	no	no
name	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
AlreadyExistsException	no	no
(	no	no
cfm	yes	yes
.	no	no
keyspace	no	yes
,	no	no
cfm	yes	yes
.	no	no
name	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
announceKeyspaceUpdate	no	no
(	no	no
KeyspaceMetadata	no	yes
ksm	yes	yes
)	no	no
{	no	no
ksm	yes	yes
.	no	no
validate	no	yes
(	no	no
)	no	no
;	no	no
KeyspaceMetadata	no	yes
oldKsm	yes	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
ksm	yes	yes
.	no	no
name	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
oldKsm	yes	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
ksm	yes	yes
.	no	no
name	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
announceTableUpdate	no	no
(	no	no
TableMetadata	no	yes
updated	yes	yes
,	no	no
boolean	no	no
announceLocally	no	no
)	no	no
{	no	no
updated	yes	yes
.	no	no
validate	no	yes
(	no	no
)	no	no
;	no	no
TableMetadata	no	yes
current	yes	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getTableMetadata	no	yes
(	no	no
updated	yes	yes
.	no	no
keyspace	no	yes
,	no	no
updated	yes	yes
.	no	no
name	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
current	yes	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
updated	yes	yes
.	no	no
name	no	yes
,	no	no
updated	yes	yes
.	no	no
keyspace	no	yes
)	no	no
)	no	no
;	no	no
KeyspaceMetadata	no	yes
ksm	no	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
current	yes	yes
.	no	no
keyspace	no	yes
)	no	no
;	no	no
updated	yes	yes
.	no	no
validateCompatibility	no	yes
(	no	no
current	yes	yes
)	no	no
;	no	no
long	no	no
timestamp	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
timestampMicros	no	yes
(	no	no
)	no	no
;	no	no

static	no	no
void	no	no
announceKeyspaceDrop	no	no
(	no	no
String	no	yes
ksName	no	yes
)	no	no
{	no	no
KeyspaceMetadata	no	yes
oldKsm	yes	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
ksName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
oldKsm	yes	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
ksName	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
announceTableDrop	no	no
(	no	no
String	no	yes
ksName	no	yes
,	no	no
String	no	yes
cfName	no	yes
,	no	no
boolean	no	no
announceLocally	no	no
)	no	no
{	no	no
TableMetadata	no	yes
tm	yes	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getTableMetadata	no	yes
(	no	no
ksName	no	yes
,	no	no
cfName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tm	yes	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
cfName	no	yes
,	no	no
ksName	no	yes
)	no	no
)	no	no
;	no	no
KeyspaceMetadata	no	yes
ksm	no	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
getKeyspaceMetadata	no	yes
(	no	no
ksName	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
resetLocalSchema	no	yes
(	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
resetLocalSchema	no	yes
(	no	no
)	no	no
;	no	no
SchemaKeyspace	no	yes
.	no	no
truncate	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
liveEndpoints	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getLiveMembers	no	yes
(	no	no
)	no	no
;	no	no
liveEndpoints	no	yes
.	no	no
remove	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
node	yes	no
:	no	no
liveEndpoints	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
shouldPullSchemaFrom	no	no
(	no	no
node	yes	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
runMayThrow	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
!	no	no
FailureDetector	no	no
.	no	no
instance	no	yes
.	no	no
isAlive	no	no
(	no	no
endpoint	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
endpoint	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
taskSendAborted	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
MigrationManager	no	no
.	no	no
shouldPullSchemaFrom	no	no
(	no	no
endpoint	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
endpoint	no	yes
)	no	no
;	no	no
SchemaMigrationDiagnostics	no	yes
.	no	no
taskSendAborted	no	yes
(	no	no
endpoint	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
Message	no	yes
message	no	yes
=	no	no
Message	no	yes
.	no	no
out	no	yes
(	no	no
SCHEMA_PULL_REQ	no	yes
,	no	no
noPayload	no	yes
)	no	no
;	no	no
final	no	no
CountDownLatch	no	yes
completionLatch	no	yes
=	no	no
new	no	no
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
RequestCallback	no	no
<	no	no
Collection	no	no
<	no	no
Mutation	no	no
>>	no	no
cb	no	no
=	no	no
msg	no	yes
->	no	no
{	no	no
try	no	no
{	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
mergeAndAnnounceVersion	no	yes
(	no	no
msg	no	yes
.	no	no
payload	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ConfigurationException	no	no
e	yes	no
)	no	no
{	no	no

List	no	yes
<	no	no
AbstractType	no	yes
<	no	no
?	no	no
>>	no	no
argTypes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
type	no	yes
:	no	no
row	no	yes
.	no	no
getFrozenList	no	yes
(	no	no
,	no	no
UTF8Type	no	yes
.	no	no
instance	no	yes
)	no	no
)	no	no
argTypes	no	yes
.	no	no
add	no	yes
(	no	no
CQLTypeParser	no	yes
.	no	no
parse	no	yes
(	no	no
ksName	no	yes
,	no	no
type	no	yes
,	no	no
types	no	yes
)	no	no
)	no	no
;	no	no
AbstractType	no	yes
<	no	no
?	no	no
>	no	no
returnType	no	yes
=	no	no
CQLTypeParser	no	yes
.	no	no
parse	no	yes
(	no	no
ksName	no	yes
,	no	no
row	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
,	no	no
types	no	yes
)	no	no
;	no	no
String	no	yes
language	no	yes
=	no	no
row	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
body	no	yes
=	no	no
row	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
calledOnNullInput	no	yes
=	no	no
row	no	yes
.	no	no
getBoolean	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
cassandra	no	yes
.	no	no
cql3	no	yes
.	no	no
functions	no	yes
.	no	no
Function	no	yes
existing	no	yes
=	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
findFunction	no	yes
(	no	no
name	yes	yes
,	no	no
argTypes	no	yes
)	no	no
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
existing	no	yes
instanceof	no	no
UDFunction	no	yes
)	no	no
{	no	no
UDFunction	no	yes
udf	no	yes
=	no	no
(	no	no
UDFunction	no	yes
)	no	no
existing	no	yes
;	no	no
if	no	no
(	no	no
udf	no	yes
.	no	no
argNames	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
argNames	no	yes
)	no	no
&&	no	no
udf	no	yes
.	no	no
argTypes	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
argTypes	no	yes
)	no	no
&&	no	no
udf	no	yes
.	no	no
returnType	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
returnType	no	yes
)	no	no
&&	no	no
!	no	no
udf	no	yes
.	no	no
isAggregate	no	no
(	no	no
)	no	no
&&	no	no
udf	no	yes
.	no	no
language	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
language	no	yes
)	no	no
&&	no	no
udf	no	yes
.	no	no
body	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
body	no	yes
)	no	no
&&	no	no
udf	no	yes
.	no	no
isCalledOnNullInput	no	no
(	no	no
)	no	no
==	no	no
calledOnNullInput	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
name	yes	yes
)	no	no
;	no	no
return	no	no
udf	no	yes
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
return	no	no
UDFunction	no	yes
.	no	no
create	no	yes
(	no	no
name	yes	yes
,	no	no
argNames	no	yes
,	no	no
argTypes	no	yes
,	no	no
returnType	no	yes
,	no	no
calledOnNullInput	no	yes
,	no	no
language	no	yes
,	no	no
body	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InvalidRequestException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
verifyCompactionsPendingThreshold	no	no
(	no	no
UUID	no	no
parentRepairSession	yes	no
,	no	no
PreviewKind	no	no
previewKind	no	no
)	no	no
{	no	no
int	no	no
pendingCompactions	yes	yes
=	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getPendingTasks	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
pendingThreshold	yes	yes
=	no	no
ActiveRepairService	no	yes
.	no	no
instance	no	yes
.	no	no
getRepairPendingCompactionRejectThreshold	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pendingCompactions	yes	yes
>	no	no
pendingThreshold	yes	yes
)	no	no
{	no	no

private	no	no
AutoSavingCache	no	yes
<	no	no
CounterCacheKey	no	yes
,	no	no
ClockAndCount	no	yes
>	no	no
initCounterCache	no	no
(	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
DatabaseDescriptor	yes	yes
.	no	no
getCounterCacheSizeInMB	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
capacity	no	yes
=	no	no
DatabaseDescriptor	yes	yes
.	no	no
getCounterCacheSizeInMB	no	yes
(	no	no
)	no	no
*	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
AutoSavingCache	no	yes
<	no	no
CounterCacheKey	no	yes
,	no	no
ClockAndCount	no	yes
>	no	no
cache	no	yes
=	no	no
new	no	no
AutoSavingCache	no	yes
<	no	no
>	no	no
(	no	no
CaffeineCache	no	yes
.	no	no
create	no	yes
(	no	no
capacity	no	yes
)	no	no
,	no	no
CacheType	no	yes
.	no	no
COUNTER_CACHE	no	yes
,	no	no
new	no	no
CounterCacheSerializer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
keysToSave	no	yes
=	no	no
DatabaseDescriptor	yes	yes
.	no	no
getCounterCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no

try	no	no
{	no	no
startupChecks	no	yes
.	no	no
verify	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
StartupException	no	no
e	yes	yes
)	no	no
{	no	no
exitOrFail	no	yes
(	no	no
e	yes	yes
.	no	no
returnCode	no	yes
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
SystemKeyspace	no	yes
.	no	no
snapshotOnVersionChange	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
exitOrFail	no	yes
(	no	no
3	no	no
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SystemKeyspace	no	yes
.	no	no
persistLocalMetadata	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
setDefaultUncaughtExceptionHandler	no	yes
(	no	no
CassandraDaemon	no	yes
::	no	no
uncaughtException	no	yes
)	no	no
;	no	no
SystemKeyspaceMigrator40	no	yes
.	no	no
migrate	no	yes
(	no	no
)	no	no
;	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
populateTokenMetadata	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Schema	no	yes
.	no	no
instance	no	yes
.	no	no
loadFromDisk	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
static	no	no
void	no	no
uncaughtException	no	no
(	no	no
Thread	no	no
t	yes	no
,	no	no
Throwable	no	no
e	yes	no
)	no	no
{	no	no
StorageMetrics	no	yes
.	no	no
uncaughtExceptions	no	yes
.	no	no
inc	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
RangesByEndpoint	no	yes
calculateRangesToStreamWithEndpoints	no	no
(	no	no
RangesAtEndpoint	no	no
streamRanges	no	no
,	no	no
AbstractReplicationStrategy	no	no
strat	no	yes
,	no	no
TokenMetadata	no	no
tmdBefore	no	yes
,	no	no
TokenMetadata	no	no
tmdAfter	no	yes
)	no	no
{	no	no
RangesByEndpoint	no	yes
.	no	no
Builder	no	yes
endpointRanges	no	yes
=	no	no
new	no	no
RangesByEndpoint	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Replica	no	no
toStream	yes	yes
:	no	no
streamRanges	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
oldEndpoints	yes	yes
=	no	no
strat	no	yes
.	no	no
calculateNaturalReplicas	no	yes
(	no	no
toStream	yes	yes
.	no	no
range	no	yes
(	no	no
)	no	no
.	no	no
right	no	yes
,	no	no
tmdBefore	no	yes
)	no	no
;	no	no
EndpointsForRange	no	yes
newEndpoints	yes	yes
=	no	no
strat	no	yes
.	no	no
calculateNaturalReplicas	no	yes
(	no	no
toStream	yes	yes
.	no	no
range	no	yes
(	no	no
)	no	no
.	no	no
right	no	yes
,	no	no
tmdAfter	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
calculateToFromStreams	no	no
(	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
keyspace	yes	yes
:	no	no
keyspaceNames	no	no
)	no	no
{	no	no
AbstractReplicationStrategy	no	yes
strategy	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	yes	yes
)	no	no
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	no
keyspace	no	yes
:	no	no
keyspaceNames	no	no
)	no	no
{	no	no
AbstractReplicationStrategy	no	yes
strategy	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	no	yes
)	no	no
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
keyspace	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Token	no	yes
newToken	no	yes
:	no	no
tokens	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
Token	no	yes
>	no	no
currentTokens	no	yes
=	no	no
tokenMetaClone	no	yes
.	no	no
getTokens	no	yes
(	no	no
localAddress	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentTokens	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
||	no	no
currentTokens	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
currentTokens	no	yes
)	no	no
;	no	no
}	no	no
Pair	no	yes
<	no	no
RangesAtEndpoint	no	yes
,	no	no
RangesAtEndpoint	no	yes
>	no	no
streamAndFetchOwnRanges	no	yes
;	no	no
if	no	no
(	no	no
tokenMetaClone	no	yes
.	no	no
getTopology	no	no
(	no	no
)	no	no
.	no	no
getDatacenterEndpoints	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
DatabaseDescriptor	no	no
.	no	no
getEndpointSnitch	no	no
(	no	no
)	no	no
.	no	no
getLocalDatacenter	no	no
(	no	no
)	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
RangesAtEndpoint	no	yes
currentReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getAddressReplicas	no	yes
(	no	no
localAddress	no	yes
)	no	no
;	no	no
RangesAtEndpoint	no	yes
updatedReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getPendingAddressRanges	no	yes
(	no	no
tokenMetaClone	no	yes
,	no	no
newToken	no	yes
,	no	no
localAddress	no	yes
)	no	no
;	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
calculateStreamAndFetchRanges	no	yes
(	no	no
currentReplicas	no	yes
,	no	no
updatedReplicas	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
,	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangesByEndpoint	no	yes
rangesToStream	yes	yes
=	no	no
calculateRangesToStreamWithEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
left	no	yes
,	no	no
strategy	no	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
keyspace	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
Token	no	yes
newToken	no	yes
:	no	no
tokens	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
Token	no	yes
>	no	no
currentTokens	no	yes
=	no	no
tokenMetaClone	no	yes
.	no	no
getTokens	no	yes
(	no	no
localAddress	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentTokens	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
||	no	no
currentTokens	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
currentTokens	no	yes
)	no	no
;	no	no
}	no	no
Pair	no	yes
<	no	no
RangesAtEndpoint	no	yes
,	no	no
RangesAtEndpoint	no	yes
>	no	no
streamAndFetchOwnRanges	no	yes
;	no	no
if	no	no
(	no	no
tokenMetaClone	no	yes
.	no	no
getTopology	no	no
(	no	no
)	no	no
.	no	no
getDatacenterEndpoints	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
DatabaseDescriptor	no	no
.	no	no
getEndpointSnitch	no	no
(	no	no
)	no	no
.	no	no
getLocalDatacenter	no	no
(	no	no
)	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
RangesAtEndpoint	no	yes
currentReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getAddressReplicas	no	yes
(	no	no
localAddress	no	yes
)	no	no
;	no	no
RangesAtEndpoint	no	yes
updatedReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getPendingAddressRanges	no	yes
(	no	no
tokenMetaClone	no	yes
,	no	no
newToken	no	yes
,	no	no
localAddress	no	yes
)	no	no
;	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
calculateStreamAndFetchRanges	no	yes
(	no	no
currentReplicas	no	yes
,	no	no
updatedReplicas	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
,	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangesByEndpoint	no	yes
rangesToStream	no	yes
=	no	no
calculateRangesToStreamWithEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
left	no	yes
,	no	no
strategy	no	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rangesToStream	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	no
address	yes	no
:	no	no
rangesToStream	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
tokenMetaClone	no	yes
.	no	no
getTopology	no	no
(	no	no
)	no	no
.	no	no
getDatacenterEndpoints	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
DatabaseDescriptor	no	no
.	no	no
getEndpointSnitch	no	no
(	no	no
)	no	no
.	no	no
getLocalDatacenter	no	no
(	no	no
)	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
RangesAtEndpoint	no	yes
currentReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getAddressReplicas	no	yes
(	no	no
localAddress	no	yes
)	no	no
;	no	no
RangesAtEndpoint	no	yes
updatedReplicas	no	yes
=	no	no
strategy	no	yes
.	no	no
getPendingAddressRanges	no	yes
(	no	no
tokenMetaClone	no	yes
,	no	no
newToken	no	yes
,	no	no
localAddress	no	yes
)	no	no
;	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
calculateStreamAndFetchRanges	no	yes
(	no	no
currentReplicas	no	yes
,	no	no
updatedReplicas	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
,	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangesByEndpoint	no	yes
rangesToStream	no	yes
=	no	no
calculateRangesToStreamWithEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
left	no	yes
,	no	no
strategy	no	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rangesToStream	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
address	yes	yes
:	no	no
rangesToStream	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rangesToStream	no	yes
.	no	no
get	no	yes
(	no	no
address	yes	yes
)	no	no
,	no	no
keyspace	yes	yes
,	no	no
address	yes	yes
)	no	no
;	no	no
RangesAtEndpoint	no	yes
ranges	no	yes
=	no	no
rangesToStream	no	yes
.	no	no
get	no	yes
(	no	no
address	yes	yes
)	no	no
;	no	no
streamPlan	no	yes
.	no	no
transferRanges	no	yes
(	no	no
address	yes	yes
,	no	no
keyspace	yes	yes
,	no	no
ranges	no	yes
)	no	no
;	no	no
}	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
RangeStreamer	no	yes
.	no	no
FetchReplica	no	yes
>	no	no
rangesToFetch	no	yes
=	no	no
calculateRangesToFetchWithPreferredEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
right	no	yes
,	no	no
strategy	no	yes
,	no	no
keyspace	yes	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
rangesToFetch	no	yes
.	no	no
asMap	no	no
(	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
address	yes	yes
,	no	no
sourceAndOurReplicas	no	yes
)	no	no
->	no	no
{	no	no
RangesAtEndpoint	no	yes
full	no	yes
=	no	no
sourceAndOurReplicas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no

streamAndFetchOwnRanges	no	yes
=	no	no
calculateStreamAndFetchRanges	no	yes
(	no	no
currentReplicas	no	yes
,	no	no
updatedReplicas	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
streamAndFetchOwnRanges	no	yes
=	no	no
Pair	no	yes
.	no	no
create	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
,	no	no
RangesAtEndpoint	no	yes
.	no	no
empty	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangesByEndpoint	no	yes
rangesToStream	no	yes
=	no	no
calculateRangesToStreamWithEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
left	no	yes
,	no	no
strategy	no	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rangesToStream	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
address	no	yes
:	no	no
rangesToStream	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rangesToStream	no	yes
.	no	no
get	no	yes
(	no	no
address	no	yes
)	no	no
,	no	no
keyspace	yes	yes
,	no	no
address	no	yes
)	no	no
;	no	no
RangesAtEndpoint	no	yes
ranges	no	yes
=	no	no
rangesToStream	no	yes
.	no	no
get	no	yes
(	no	no
address	no	yes
)	no	no
;	no	no
streamPlan	no	yes
.	no	no
transferRanges	no	yes
(	no	no
address	no	yes
,	no	no
keyspace	yes	yes
,	no	no
ranges	no	yes
)	no	no
;	no	no
}	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
RangeStreamer	no	yes
.	no	no
FetchReplica	no	yes
>	no	no
rangesToFetch	yes	yes
=	no	no
calculateRangesToFetchWithPreferredEndpoints	no	yes
(	no	no
streamAndFetchOwnRanges	no	yes
.	no	no
right	no	yes
,	no	no
strategy	no	yes
,	no	no
keyspace	yes	yes
,	no	no
tokenMetaClone	no	yes
,	no	no
tokenMetaCloneAllSettled	no	yes
)	no	no
;	no	no
rangesToFetch	yes	yes
.	no	no
asMap	no	no
(	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
address	no	yes
,	no	no
sourceAndOurReplicas	no	yes
)	no	no
->	no	no
{	no	no
RangesAtEndpoint	no	yes
full	no	yes
=	no	no
sourceAndOurReplicas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isFull	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
trans	no	yes
=	no	no
sourceAndOurReplicas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
remote	no	yes
.	no	no
isTransient	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
pair	no	yes
->	no	no
pair	no	yes
.	no	no
local	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
RangesAtEndpoint	no	yes
.	no	no
collector	no	yes
(	no	no
localAddress	no	yes
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rangesToFetch	yes	yes
.	no	no
get	no	yes
(	no	no
address	no	yes
)	no	no
,	no	no
keyspace	yes	yes
,	no	no
address	no	yes
)	no	no
;	no	no
streamPlan	no	yes
.	no	no
requestRanges	no	yes
(	no	no
address	no	yes
,	no	no
keyspace	yes	yes
,	no	no
full	no	yes
,	no	no
trans	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
Pair	no	no
<	no	no
RangesAtEndpoint	no	yes
,	no	no
RangesAtEndpoint	no	yes
>	no	no
calculateStreamAndFetchRanges	no	no
(	no	no
RangesAtEndpoint	no	yes
currentRanges	no	yes
,	no	no
RangesAtEndpoint	no	yes
updatedRanges	no	yes
)	no	no
{	no	no
RangesAtEndpoint	no	yes
.	no	no
Builder	no	yes
toStream	yes	yes
=	no	no
RangesAtEndpoint	no	yes
.	no	no
builder	no	yes
(	no	no
currentRanges	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
.	no	no
Builder	no	yes
toFetch	no	yes
=	no	no
RangesAtEndpoint	no	yes
.	no	no
builder	no	yes
(	no	no
currentRanges	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
computeRanges	no	yes
(	no	no
currentRanges	no	yes
,	no	no
updatedRanges	no	yes
,	no	no
toStream	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
computeRanges	no	yes
(	no	no
updatedRanges	no	yes
,	no	no
currentRanges	no	yes
,	no	no
toFetch	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
Pair	no	no
<	no	no
RangesAtEndpoint	no	yes
,	no	no
RangesAtEndpoint	no	yes
>	no	no
calculateStreamAndFetchRanges	no	no
(	no	no
RangesAtEndpoint	no	yes
currentRanges	no	yes
,	no	no
RangesAtEndpoint	no	yes
updatedRanges	no	yes
)	no	no
{	no	no
RangesAtEndpoint	no	yes
.	no	no
Builder	no	yes
toStream	no	yes
=	no	no
RangesAtEndpoint	no	yes
.	no	no
builder	no	yes
(	no	no
currentRanges	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
RangesAtEndpoint	no	yes
.	no	no
Builder	no	yes
toFetch	yes	yes
=	no	no
RangesAtEndpoint	no	yes
.	no	no
builder	no	yes
(	no	no
currentRanges	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
computeRanges	no	yes
(	no	no
currentRanges	no	yes
,	no	no
updatedRanges	no	yes
,	no	no
toStream	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
computeRanges	no	yes
(	no	no
updatedRanges	no	yes
,	no	no
currentRanges	no	yes
,	no	no
toFetch	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
toStream	no	yes
)	no	no
;	no	no

ReplicaPlan	no	yes
.	no	no
ForTokenWrite	no	yes
replicaPlan	no	yes
=	no	no
ReplicaPlans	no	yes
.	no	no
forLocalBatchlogWrite	no	yes
(	no	no
)	no	no
;	no	no
BatchlogCleanup	no	yes
cleanup	no	yes
=	no	no
new	no	no
BatchlogCleanup	no	yes
(	no	no
mutations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
)	no	no
->	no	no
asyncRemoveFromBatchlog	no	yes
(	no	no
replicaPlan	no	yes
,	no	no
batchUUID	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Mutation	no	no
mutation	yes	yes
:	no	no
mutations	no	yes
)	no	no
{	no	no
String	no	yes
keyspaceName	no	yes
=	no	no
mutation	yes	yes
.	no	no
getKeyspaceName	no	yes
(	no	no
)	no	no
;	no	no
Token	no	yes
tk	no	yes
=	no	no
mutation	yes	yes
.	no	no
key	no	yes
(	no	no
)	no	no
.	no	no
getToken	no	yes
(	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
Replica	no	yes
>	no	no
pairedEndpoint	no	yes
=	no	no
ViewUtils	no	yes
.	no	no
getViewNaturalEndpoint	no	yes
(	no	no
keyspaceName	no	yes
,	no	no
baseToken	no	yes
,	no	no
tk	no	yes
)	no	no
;	no	no
EndpointsForToken	no	yes
pendingReplicas	no	yes
=	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
pendingEndpointsForToken	no	yes
(	no	no
tk	no	yes
,	no	no
keyspaceName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
pairedEndpoint	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pendingReplicas	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
,	no	no
mutation	yes	yes
.	no	no
key	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pairedEndpoint	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
.	no	no
isSelf	no	no
(	no	no
)	no	no
&&	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
isJoined	no	no
(	no	no
)	no	no
&&	no	no
pendingReplicas	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
mutation	yes	yes
.	no	no
apply	no	yes
(	no	no
writeCommitLog	no	yes
)	no	no
;	no	no
nonLocalMutations	no	yes
.	no	no
remove	no	yes
(	no	no
mutation	yes	yes
)	no	no
;	no	no
cleanup	no	yes
.	no	no
ackMutation	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
truncateBlocking	no	no
(	no	no
String	no	no
keyspace	yes	no
,	no	no
String	no	no
cfname	yes	no
)	no	no
throws	no	no
UnavailableException	no	no
,	no	no
TimeoutException	no	no
{	no	no

private	no	no
static	no	no
int	no	no
getRingDelay	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
newdelay	yes	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
newdelay	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
synchronized	no	no
UUID	no	no
prepareForReplacement	no	no
(	no	no
)	no	no
throws	no	no
ConfigurationException	no	yes
{	no	no
if	no	no
(	no	no
SystemKeyspace	no	yes
.	no	no
bootstrapComplete	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
joinRing	no	yes
)	no	no
throw	no	no
new	no	no
ConfigurationException	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
DatabaseDescriptor	no	yes
.	no	no
isAutoBootstrap	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
Boolean	no	yes
.	no	no
getBoolean	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
replaceAddress	yes	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getReplaceAddress	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
populateTokenMetadata	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
Boolean	no	no
.	no	no
parseBoolean	no	no
(	no	no
System	no	no
.	no	no
getProperty	no	no
(	no	no
,	no	no
)	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
Token	no	yes
>	no	no
loadedTokens	no	yes
=	no	no
SystemKeyspace	no	yes
.	no	no
loadTokens	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
shouldBootstrap	no	yes
(	no	no
)	no	no
)	no	no
loadedTokens	no	yes
.	no	no
putAll	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
,	no	no
SystemKeyspace	no	yes
.	no	no
getSavedTokens	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InetAddressAndPort	no	yes
ep	no	yes
:	no	no
loadedTokens	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
tokenMetadata	yes	yes
.	no	no
updateNormalTokens	no	yes
(	no	no
loadedTokens	no	yes
.	no	no
get	no	yes
(	no	no
ep	no	yes
)	no	no
,	no	no
ep	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
setRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setReadRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setReadRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setRangeRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setRangeRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setWriteRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setWriteRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setInternodeTcpConnectTimeoutInMS	no	yes
(	no	no
int	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setInternodeTcpConnectTimeoutInMS	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setInternodeTcpUserTimeoutInMS	no	yes
(	no	no
int	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setInternodeTcpUserTimeoutInMS	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setCounterWriteRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setCounterWriteRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setCasContentionTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setCasContentionTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setTruncateRpcTimeout	no	yes
(	no	no
long	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setTruncateRpcTimeout	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setStreamThroughputMbPerSec	no	no
(	no	no
int	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setStreamThroughputOutboundMegabitsPerSec	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setInterDCStreamThroughputMbPerSec	no	no
(	no	no
int	no	no
value	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setInterDCStreamThroughputOutboundMegabitsPerSec	no	yes
(	no	no
value	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setConcurrentValidators	no	no
(	no	no
int	no	no
value	no	yes
)	no	no
{	no	no
int	no	no
concurrentCompactors	yes	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getConcurrentCompactors	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
>	no	no
concurrentCompactors	yes	yes
&&	no	no
!	no	no
DatabaseDescriptor	no	yes
.	no	no
allowUnlimitedConcurrentValidations	no	yes
)	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
concurrentCompactors	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
tokenMetadata	no	yes
.	no	no
updateNormalTokens	no	yes
(	no	no
tokens	yes	yes
,	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SystemKeyspace	no	yes
.	no	no
removeEndpoint	no	yes
(	no	no
DatabaseDescriptor	no	yes
.	no	no
getReplaceAddress	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
seenAnySeed	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
Boolean	no	no
.	no	no
getBoolean	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
SystemKeyspace	no	yes
.	no	no
resetAvailableRanges	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
invalidateDiskBoundaries	no	yes
(	no	no
)	no	no
;	no	no
setMode	no	yes
(	no	no
Mode	no	yes
.	no	no
JOINING	no	yes
,	no	no
,	no	no
true	no	no
)	no	no
;	no	no
BootStrapper	no	yes
bootstrapper	no	yes
=	no	no
new	no	no
BootStrapper	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
,	no	no
tokens	yes	yes
,	no	no
tokenMetadata	no	yes
)	no	no
;	no	no
bootstrapper	no	yes
.	no	no
addProgressListener	no	yes
(	no	no
progressSupport	no	yes
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
StreamState	no	yes
>	no	no
bootstrapStream	no	yes
=	no	no
bootstrapper	no	yes
.	no	no
bootstrap	no	yes
(	no	no
streamStateStore	no	yes
,	no	no
useStrictConsistency	no	yes
&&	no	no
!	no	no
replacing	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
bootstrapStream	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
bootstrapFinished	no	yes
(	no	no
)	no	no
;	no	no

progressSupport	no	yes
.	no	no
progress	no	yes
(	no	no
,	no	no
ProgressEvent	no	yes
.	no	no
createNotification	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
finishJoiningRing	no	yes
(	no	no
true	no	no
,	no	no
bootstrapTokens	no	yes
)	no	no
;	no	no
}	no	no
progressSupport	no	yes
.	no	no
progress	no	yes
(	no	no
,	no	no
new	no	no
ProgressEvent	no	yes
(	no	no
ProgressEventType	no	yes
.	no	no
COMPLETE	no	yes
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isNativeTransportRunning	no	yes
(	no	no
)	no	no
)	no	no
daemon	no	yes
.	no	no
initializeNativeTransport	no	yes
(	no	no
)	no	no
;	no	no
daemon	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
onFailure	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onFailure	no	yes
(	no	no
Throwable	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
;	no	no
if	no	no
(	no	no
e	yes	yes
instanceof	no	no
ExecutionException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
message	yes	yes
+=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
message	yes	yes
+=	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

case	no	no
VersionedValue	no	no
.	no	no
STATUS_NORMAL	no	no
:	no	no
handleStateNormal	no	no
(	no	no
endpoint	yes	yes
,	no	no
VersionedValue	no	no
.	no	no
STATUS_NORMAL	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VersionedValue	no	no
.	no	no
SHUTDOWN	no	no
:	no	no
handleStateNormal	no	no
(	no	no
endpoint	yes	yes
,	no	no
VersionedValue	no	no
.	no	no
SHUTDOWN	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VersionedValue	no	no
.	no	no
REMOVING_TOKEN	no	no
:	no	no
case	no	no
VersionedValue	no	no
.	no	no
REMOVED_TOKEN	no	no
:	no	no
handleStateRemoving	no	no
(	no	no
endpoint	yes	yes
,	no	no
pieces	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VersionedValue	no	no
.	no	no
STATUS_LEAVING	no	no
:	no	no
handleStateLeaving	no	no
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VersionedValue	no	no
.	no	no
STATUS_LEFT	no	no
:	no	no
handleStateLeft	no	no
(	no	no
endpoint	yes	yes
,	no	no
pieces	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VersionedValue	no	no
.	no	no
STATUS_MOVING	no	no
:	no	no
handleStateMoving	no	no
(	no	no
endpoint	yes	yes
,	no	no
pieces	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
EndpointState	no	yes
epState	no	yes
=	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
getEndpointStateForEndpoint	no	yes
(	no	no
endpoint	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epState	no	yes
==	no	no
null	no	no
||	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
isDeadState	no	no
(	no	no
epState	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
ensureUpToDateTokenMetadata	no	no
(	no	no
String	no	no
status	yes	yes
,	no	no
InetAddressAndPort	no	no
endpoint	yes	yes
)	no	no
{	no	no
Set	no	yes
<	no	no
Token	no	yes
>	no	no
tokens	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
getTokensFor	no	yes
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
status	yes	yes
,	no	no
tokens	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tokenMetadata	no	no
.	no	no
isMember	no	no
(	no	no
endpoint	yes	yes
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
updateTokenMetadata	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	yes	no
,	no	no
Iterable	no	no
<	no	no
Token	no	yes
>	no	no
tokens	no	no
,	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
endpointsToRemove	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
Token	no	yes
>	no	no
tokensToUpdateInMetadata	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Token	no	yes
>	no	no
tokensToUpdateInSystemKeyspace	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Token	no	yes
token	yes	yes
:	no	no
tokens	no	no
)	no	no
{	no	no
InetAddressAndPort	no	yes
currentOwner	no	yes
=	no	no
tokenMetadata	no	yes
.	no	no
getEndpoint	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentOwner	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

for	no	no
(	no	no
final	no	no
Token	no	yes
token	yes	yes
:	no	no
tokens	no	no
)	no	no
{	no	no
InetAddressAndPort	no	yes
currentOwner	yes	yes
=	no	no
tokenMetadata	no	yes
.	no	no
getEndpoint	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentOwner	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
endpoint	yes	yes
.	no	no
equals	no	no
(	no	no
currentOwner	yes	yes
)	no	no
)	no	no
{	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
Gossiper	no	no
.	no	no
instance	no	no
.	no	no
compareEndpointStartup	no	no
(	no	no
endpoint	yes	yes
,	no	no
currentOwner	yes	yes
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
Token	no	yes
>	no	no
epToTokenCopy	no	yes
=	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
getEndpointToTokenMapForReading	no	yes
(	no	no
)	no	no
;	no	no
epToTokenCopy	no	yes
.	no	no
get	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
.	no	no
remove	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epToTokenCopy	no	yes
.	no	no
get	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
endpointsToRemove	no	yes
.	no	no
add	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
currentOwner	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
endpoint	yes	yes
.	no	no
equals	no	no
(	no	no
currentOwner	yes	yes
)	no	no
)	no	no
{	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
Gossiper	no	no
.	no	no
instance	no	no
.	no	no
compareEndpointStartup	no	no
(	no	no
endpoint	yes	yes
,	no	no
currentOwner	yes	yes
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
tokensToUpdateInMetadata	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
tokensToUpdateInSystemKeyspace	no	yes
.	no	no
add	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
Token	no	yes
>	no	no
epToTokenCopy	no	yes
=	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
getEndpointToTokenMapForReading	no	yes
(	no	no
)	no	no
;	no	no
epToTokenCopy	no	yes
.	no	no
get	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
.	no	no
remove	no	yes
(	no	no
token	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
epToTokenCopy	no	yes
.	no	no
get	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
endpointsToRemove	no	yes
.	no	no
add	no	yes
(	no	no
currentOwner	yes	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
endpoint	yes	yes
,	no	no
currentOwner	yes	yes
,	no	no
token	yes	yes
,	no	no
endpoint	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

private	no	no
void	no	no
excise	no	no
(	no	no
Collection	no	no
<	no	no
Token	no	no
>	no	no
tokens	yes	no
,	no	no
InetAddressAndPort	no	no
endpoint	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
restoreReplicaCount	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	no	no
,	no	no
final	no	no
InetAddressAndPort	no	yes
notifyEndpoint	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
FetchReplica	no	yes
>>	no	no
replicasToFetch	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
myAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
keyspaceName	yes	no
:	no	no
Schema	no	no
.	no	no
instance	no	no
.	no	no
getNonLocalStrategyKeyspaces	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
restoreReplicaCount	no	no
(	no	no
InetAddressAndPort	no	yes
endpoint	no	yes
,	no	no
final	no	no
InetAddressAndPort	no	yes
notifyEndpoint	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
FetchReplica	no	yes
>>	no	no
replicasToFetch	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
InetAddressAndPort	no	yes
myAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
keyspaceName	yes	yes
:	no	no
Schema	no	no
.	no	no
instance	no	no
.	no	no
getNonLocalStrategyKeyspaces	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspaceName	yes	yes
)	no	no
;	no	no
EndpointsByReplica	no	yes
changedReplicas	no	yes
=	no	no
getChangedReplicasForLeaving	no	yes
(	no	no
keyspaceName	yes	yes
,	no	no
endpoint	no	yes
,	no	no
tokenMetadata	no	yes
,	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspaceName	yes	yes
)	no	no
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
LeavingReplica	no	yes
>	no	no
myNewReplicas	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Replica	no	yes
,	no	no
Replica	no	yes
>	no	no
entry	no	yes
:	no	no
changedReplicas	no	yes
.	no	no
flattenEntries	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Replica	no	yes
replica	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replica	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
myAddress	no	yes
)	no	no
)	no	no
{	no	no
myNewReplicas	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
LeavingReplica	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
changedReplicas	no	yes
,	no	no
myNewReplicas	no	yes
)	no	no
;	no	no
replicasToFetch	no	yes
.	no	no
put	no	yes
(	no	no
keyspaceName	yes	yes
,	no	no
getNewSourceReplicas	no	yes
(	no	no
keyspaceName	yes	yes
,	no	no
myNewReplicas	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
StreamPlan	no	yes
stream	no	yes
=	no	no
new	no	no
StreamPlan	no	yes
(	no	no
StreamOperation	no	yes
.	no	no
RESTORE_REPLICA_COUNT	no	yes
)	no	no
;	no	no
replicasToFetch	no	yes
.	no	no
forEach	no	no
(	no	no
(	no	no
keyspaceName	yes	yes
,	no	no
sources	no	no
)	no	no
->	no	no
{	no	no

InetAddressAndPort	no	yes
myAddress	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
keyspaceName	no	yes
:	no	no
Schema	no	no
.	no	no
instance	no	no
.	no	no
getNonLocalStrategyKeyspaces	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspaceName	no	yes
)	no	no
;	no	no
EndpointsByReplica	no	yes
changedReplicas	no	yes
=	no	no
getChangedReplicasForLeaving	no	yes
(	no	no
keyspaceName	no	yes
,	no	no
endpoint	no	yes
,	no	no
tokenMetadata	no	yes
,	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspaceName	no	yes
)	no	no
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
LeavingReplica	no	yes
>	no	no
myNewReplicas	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Replica	no	yes
,	no	no
Replica	no	yes
>	no	no
entry	no	yes
:	no	no
changedReplicas	no	yes
.	no	no
flattenEntries	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Replica	no	yes
replica	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replica	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
myAddress	no	yes
)	no	no
)	no	no
{	no	no
myNewReplicas	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
LeavingReplica	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
changedReplicas	no	yes
,	no	no
myNewReplicas	no	yes
)	no	no
;	no	no
replicasToFetch	no	yes
.	no	no
put	no	yes
(	no	no
keyspaceName	no	yes
,	no	no
getNewSourceReplicas	no	yes
(	no	no
keyspaceName	no	yes
,	no	no
myNewReplicas	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
StreamPlan	no	yes
stream	no	yes
=	no	no
new	no	no
StreamPlan	no	yes
(	no	no
StreamOperation	no	yes
.	no	no
RESTORE_REPLICA_COUNT	no	yes
)	no	no
;	no	no
replicasToFetch	no	yes
.	no	no
forEach	no	no
(	no	no
(	no	no
keyspaceName	no	yes
,	no	no
sources	no	no
)	no	no
->	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
keyspaceName	no	yes
)	no	no
;	no	no
sources	no	no
.	no	no
asMap	no	no
(	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
(	no	no
sourceAddress	no	no
,	no	no
fetchReplicas	yes	no
)	no	no
->	no	no
{	no	no

public	no	no
int	no	no
verify	no	no
(	no	no
boolean	no	no
extendedVerify	no	yes
,	no	no
boolean	no	no
checkVersion	no	yes
,	no	no
boolean	no	no
diskFailurePolicy	no	yes
,	no	no
boolean	no	no
mutateRepairStatus	no	yes
,	no	no
boolean	no	no
checkOwnsTokens	no	yes
,	no	no
boolean	no	no
quick	no	yes
,	no	no
String	no	no
keyspaceName	yes	no
,	no	no
String	no	no
...	no	no
tableNames	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
ExecutionException	no	no
,	no	no
InterruptedException	no	no
{	no	no
CompactionManager	no	yes
.	no	no
AllSSTableOpStatus	no	yes
status	no	yes
=	no	no
CompactionManager	no	yes
.	no	no
AllSSTableOpStatus	no	yes
.	no	no
SUCCESSFUL	no	yes
;	no	no
Verifier	no	yes
.	no	no
Options	no	yes
options	yes	yes
=	no	no
Verifier	no	yes
.	no	no
options	yes	yes
(	no	no
)	no	no
.	no	no
invokeDiskFailurePolicy	no	yes
(	no	no
diskFailurePolicy	no	yes
)	no	no
.	no	no
extendedVerification	no	yes
(	no	no
extendedVerify	no	yes
)	no	no
.	no	no
checkVersion	no	yes
(	no	no
checkVersion	no	yes
)	no	no
.	no	no
mutateRepairStatus	no	yes
(	no	no
mutateRepairStatus	no	yes
)	no	no
.	no	no
checkOwnsTokens	no	yes
(	no	no
checkOwnsTokens	no	yes
)	no	no
.	no	no
quick	no	yes
(	no	no
quick	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
forceKeyspaceFlush	no	no
(	no	no
String	no	no
keyspaceName	yes	no
,	no	no
String	no	no
...	no	no
tableNames	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
ColumnFamilyStore	no	no
cfStore	yes	no
:	no	no
getValidColumnFamilies	no	no
(	no	no
true	no	no
,	no	no
false	no	no
,	no	no
keyspaceName	yes	no
,	no	no
tableNames	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
leaveRing	no	no
(	no	no
)	no	no
{	no	no
SystemKeyspace	no	yes
.	no	no
setBootstrapState	no	yes
(	no	no
SystemKeyspace	no	yes
.	no	no
BootstrapState	no	yes
.	no	no
NEEDS_BOOTSTRAP	no	yes
)	no	no
;	no	no
tokenMetadata	no	yes
.	no	no
removeEndpoint	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
PendingRangeCalculatorService	no	yes
.	no	no
instance	no	yes
.	no	no
update	no	yes
(	no	no
)	no	no
;	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
addLocalApplicationState	no	yes
(	no	no
ApplicationState	no	yes
.	no	no
STATUS_WITH_PORT	no	yes
,	no	no
valueFactory	no	yes
.	no	no
left	no	yes
(	no	no
getLocalTokens	no	yes
(	no	no
)	no	no
,	no	no
Gossiper	no	yes
.	no	no
computeExpireTime	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Gossiper	no	yes
.	no	no
instance	no	yes
.	no	no
addLocalApplicationState	no	yes
(	no	no
ApplicationState	no	yes
.	no	no
STATUS	no	yes
,	no	no
valueFactory	no	yes
.	no	no
left	no	yes
(	no	no
getLocalTokens	no	yes
(	no	no
)	no	no
,	no	no
Gossiper	no	yes
.	no	no
computeExpireTime	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	no
delay	yes	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
RING_DELAY	no	yes
,	no	no
Gossiper	no	yes
.	no	no
intervalInMillis	no	yes
*	no	no
2	no	no
)	no	no
;	no	no

if	no	no
(	no	no
oldSnitch	no	yes
instanceof	no	no
DynamicEndpointSnitch	no	yes
)	no	no
(	no	no
(	no	no
DynamicEndpointSnitch	no	yes
)	no	no
oldSnitch	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
IEndpointSnitch	no	yes
newSnitch	no	yes
;	no	no
try	no	no
{	no	no
newSnitch	no	yes
=	no	no
DatabaseDescriptor	yes	yes
.	no	no
createEndpointSnitch	no	yes
(	no	no
dynamic	no	yes
!=	no	no
null	no	no
&&	no	no
dynamic	no	yes
,	no	no
epSnitchClassName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ConfigurationException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
ClassNotFoundException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newSnitch	no	yes
instanceof	no	no
DynamicEndpointSnitch	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
(	no	no
(	no	no
DynamicEndpointSnitch	no	yes
)	no	no
newSnitch	no	yes
)	no	no
.	no	no
subsnitch	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
DatabaseDescriptor	yes	yes
.	no	no
getDynamicUpdateInterval	no	yes
(	no	no
)	no	no
,	no	no
DatabaseDescriptor	yes	yes
.	no	no
getDynamicResetInterval	no	yes
(	no	no
)	no	no
,	no	no
DatabaseDescriptor	yes	yes
.	no	no
getDynamicBadnessThreshold	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
newSnitch	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
DatabaseDescriptor	yes	yes
.	no	no
setEndpointSnitch	no	yes
(	no	no
newSnitch	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
ks	no	yes
:	no	no
Schema	no	no
.	no	no
instance	no	no
.	no	no
getKeyspaces	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
ks	no	yes
)	no	no
.	no	no
getReplicationStrategy	no	yes
(	no	no
)	no	no
.	no	no
snitch	no	yes
=	no	no
newSnitch	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
oldSnitch	no	yes
instanceof	no	no
DynamicEndpointSnitch	no	yes
)	no	no
{	no	no

private	no	no
Future	no	no
<	no	no
StreamState	no	no
>	no	no
streamRanges	no	no
(	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
EndpointsByReplica	no	yes
>	no	no
rangesToStreamByKeyspace	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
RangesByEndpoint	no	yes
>	no	no
sessionsToStreamByKeyspace	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
EndpointsByReplica	no	yes
>	no	no
entry	no	yes
:	no	no
rangesToStreamByKeyspace	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
keyspace	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
EndpointsByReplica	no	yes
rangesWithEndpoints	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rangesWithEndpoints	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
Map	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
Set	no	yes
<	no	no
Range	no	yes
<	no	no
Token	no	yes
>>>	no	no
transferredRangePerKeyspace	no	yes
=	no	no
SystemKeyspace	no	yes
.	no	no
getTransferredRanges	no	yes
(	no	no
,	no	no
keyspace	yes	yes
,	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
getTokenMetadata	no	yes
(	no	no
)	no	no
.	no	no
partitioner	no	yes
)	no	no
;	no	no
RangesByEndpoint	no	yes
.	no	no
Builder	no	yes
replicasPerEndpoint	no	yes
=	no	no
new	no	no
RangesByEndpoint	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Replica	no	yes
,	no	no
Replica	no	yes
>	no	no
endPointEntry	no	yes
:	no	no
rangesWithEndpoints	no	yes
.	no	no
flattenEntries	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Replica	no	yes
local	yes	yes
=	no	no
endPointEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Replica	no	yes
remote	yes	yes
=	no	no
endPointEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Range	no	yes
<	no	no
Token	no	yes
>>	no	no
transferredRanges	no	yes
=	no	no
transferredRangePerKeyspace	no	yes
.	no	no
get	no	yes
(	no	no
remote	yes	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
transferredRanges	no	yes
!=	no	no
null	no	no
&&	no	no
transferredRanges	no	yes
.	no	no
contains	no	no
(	no	no
local	yes	yes
.	no	no
range	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
setTombstoneWarnThreshold	no	yes
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setTombstoneWarnThreshold	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setTombstoneFailureThreshold	no	yes
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setTombstoneFailureThreshold	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setCachedReplicaRowsWarnThreshold	no	yes
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setCachedReplicaRowsWarnThreshold	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setCachedReplicaRowsFailThreshold	no	yes
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setCachedReplicaRowsFailThreshold	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setColumnIndexCacheSize	no	yes
(	no	no
int	no	no
cacheSizeInKB	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setColumnIndexCacheSize	no	yes
(	no	no
cacheSizeInKB	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setBatchSizeFailureThreshold	no	no
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setBatchSizeFailThresholdInKB	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setBatchSizeWarnThreshold	no	no
(	no	no
int	no	no
threshold	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setBatchSizeWarnThresholdInKB	no	yes
(	no	no
threshold	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setHintedHandoffThrottleInKB	no	yes
(	no	no
int	no	no
throttleInKB	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setHintedHandoffThrottleInKB	no	yes
(	no	no
throttleInKB	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
enableAuditLog	no	no
(	no	no
String	no	no
loggerName	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
parameters	no	yes
,	no	no
String	no	no
includedKeyspaces	no	yes
,	no	no
String	no	no
excludedKeyspaces	no	yes
,	no	no
String	no	no
includedCategories	no	yes
,	no	no
String	no	no
excludedCategories	no	yes
,	no	no
String	no	no
includedUsers	no	yes
,	no	no
String	no	no
excludedUsers	no	yes
)	no	no
throws	no	no
ConfigurationException	no	no
,	no	no
IllegalStateException	no	no
{	no	no
loggerName	no	yes
=	no	no
loggerName	no	yes
!=	no	no
null	no	no
?	no	no
loggerName	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
logger	no	yes
.	no	no
class_name	no	yes
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
loggerName	no	yes
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
isAuditLoggerClassExists	no	yes
(	no	no
loggerName	no	yes
)	no	no
,	no	no
+	no	no
loggerName	no	yes
)	no	no
;	no	no
AuditLogOptions	no	yes
auditLogOptions	yes	yes
=	no	no
new	no	no
AuditLogOptions	no	yes
(	no	no
)	no	no
;	no	no
auditLogOptions	yes	yes
.	no	no
enabled	no	yes
=	no	no
true	no	no
;	no	no
auditLogOptions	yes	yes
.	no	no
logger	no	yes
=	no	no
new	no	no
ParameterizedClass	no	yes
(	no	no
loggerName	no	yes
,	no	no
parameters	no	yes
)	no	no
;	no	no
auditLogOptions	yes	yes
.	no	no
included_keyspaces	no	yes
=	no	no
includedKeyspaces	no	yes
!=	no	no
null	no	no
?	no	no
includedKeyspaces	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
included_keyspaces	no	yes
;	no	no
auditLogOptions	yes	yes
.	no	no
excluded_keyspaces	no	yes
=	no	no
excludedKeyspaces	no	yes
!=	no	no
null	no	no
?	no	no
excludedKeyspaces	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
excluded_keyspaces	no	yes
;	no	no
auditLogOptions	yes	yes
.	no	no
included_categories	no	yes
=	no	no
includedCategories	no	yes
!=	no	no
null	no	no
?	no	no
includedCategories	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
included_categories	no	yes
;	no	no
auditLogOptions	yes	yes
.	no	no
excluded_categories	no	yes
=	no	no
excludedCategories	no	yes
!=	no	no
null	no	no
?	no	no
excludedCategories	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
excluded_categories	no	yes
;	no	no
auditLogOptions	yes	yes
.	no	no
included_users	no	yes
=	no	no
includedUsers	no	yes
!=	no	no
null	no	no
?	no	no
includedUsers	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
included_users	no	yes
;	no	no
auditLogOptions	yes	yes
.	no	no
excluded_users	no	yes
=	no	no
excludedUsers	no	yes
!=	no	no
null	no	no
?	no	no
excludedUsers	no	yes
:	no	no
DatabaseDescriptor	no	yes
.	no	no
getAuditLoggingOptions	no	yes
(	no	no
)	no	no
.	no	no
excluded_users	no	yes
;	no	no
AuditLogManager	no	yes
.	no	no
instance	no	yes
.	no	no
enable	no	yes
(	no	no
auditLogOptions	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
setCorruptedTombstoneStrategy	no	yes
(	no	no
String	no	no
strategy	yes	yes
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setCorruptedTombstoneStrategy	no	yes
(	no	no
Config	no	yes
.	no	no
CorruptedTombstoneStrategy	no	yes
.	no	no
valueOf	no	yes
(	no	no
strategy	yes	yes
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
incrementCachedRows	no	no
(	no	no
)	no	no
{	no	no
currentRowsCached	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
currentRowsCached	no	yes
==	no	no
cachedRowsFailThreshold	no	yes
+	no	no
1	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
,	no	no
cachedRowsFailThreshold	no	yes
,	no	no
command	no	yes
.	no	no
toCQLString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
doVerb	no	no
(	no	no
Message	no	no
msg	yes	yes
)	no	no
{	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
confirmReplication	no	yes
(	no	no
msg	yes	yes
.	no	no
from	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
startSession	no	no
(	no	no
StreamSession	no	no
session	yes	yes
)	no	no
{	no	no
session	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
synchronized	no	no
StreamResultFuture	no	yes
createFollower	no	no
(	no	no
int	no	no
sessionIndex	yes	no
,	no	no
UUID	no	no
planId	yes	yes
,	no	no
StreamOperation	no	no
streamOperation	yes	no
,	no	no
InetAddressAndPort	no	no
from	yes	no
,	no	no
Channel	no	no
channel	yes	no
,	no	no
UUID	no	no
pendingRepair	no	no
,	no	no
PreviewKind	no	no
previewKind	no	no
)	no	no
{	no	no
StreamResultFuture	no	yes
future	no	yes
=	no	no
StreamManager	no	yes
.	no	no
instance	no	yes
.	no	no
getReceivingStream	no	yes
(	no	no
planId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
future	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

void	no	no
handleSessionPrepared	no	no
(	no	no
StreamSession	no	no
session	yes	yes
)	no	no
{	no	no
SessionInfo	no	yes
sessionInfo	yes	yes
=	no	no
session	yes	yes
.	no	no
getSessionInfo	no	yes
(	no	no
)	no	no
;	no	no

void	no	no
handleSessionComplete	no	no
(	no	no
StreamSession	no	no
session	yes	no
)	no	no
{	no	no

public	no	no
synchronized	no	no
Future	no	no
onError	no	no
(	no	no
Throwable	no	no
e	no	yes
)	no	no
{	no	no
boolean	no	no
isEofException	no	yes
=	no	no
e	no	yes
instanceof	no	no
EOFException	no	yes
;	no	no
if	no	no
(	no	no
isEofException	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
state	yes	no
.	no	no
finalState	no	no
)	no	no
{	no	no

private	no	no
void	no	no
logError	no	no
(	no	no
Throwable	no	no
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	no
instanceof	no	no
SocketTimeoutException	no	no
)	no	no
{	no	no

public	no	no
void	no	no
complete	no	yes
(	no	no
int	no	no
sequenceNumber	yes	yes
)	no	no
{	no	no
boolean	no	no
signalComplete	no	yes
;	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
ScheduledFuture	no	yes
timeout	no	yes
=	no	no
timeoutTasks	no	yes
.	no	no
remove	no	yes
(	no	no
sequenceNumber	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
timeout	no	yes
!=	no	no
null	no	no
)	no	no
timeout	no	yes
.	no	no
cancel	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
OutgoingStreamMessage	no	yes
stream	no	yes
=	no	no
streams	yes	yes
.	no	no
remove	no	yes
(	no	no
sequenceNumber	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
stream	no	yes
!=	no	no
null	no	no
)	no	no
stream	no	yes
.	no	no
complete	no	yes
(	no	no
)	no	no
;	no	no

java	no	no
.	no	no
util	no	no
.	no	no
concurrent	no	no
.	no	no
Future	no	no
onControlMessageComplete	no	no
(	no	no
Future	no	no
<	no	no
?	no	no
>	no	no
future	yes	yes
,	no	no
StreamMessage	no	no
msg	yes	no
)	no	no
{	no	no
ChannelFuture	no	yes
channelFuture	no	yes
=	no	no
(	no	no
ChannelFuture	no	yes
)	no	no
future	yes	yes
;	no	no
Throwable	no	yes
cause	no	yes
=	no	no
future	yes	yes
.	no	no
cause	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cause	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
null	no	no
;	no	no
Channel	no	yes
channel	yes	yes
=	no	no
channelFuture	no	yes
.	no	no
channel	yes	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
partition	no	yes
.	no	no
staticRow	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
partition	no	yes
.	no	no
staticRow	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
serializeRow	no	yes
(	no	no
partition	no	yes
.	no	no
staticRow	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
updatePosition	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Unfiltered	no	yes
unfiltered	no	yes
;	no	no
while	no	no
(	no	no
partition	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
unfiltered	no	yes
=	no	no
partition	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
unfiltered	no	yes
instanceof	no	no
Row	no	yes
)	no	no
{	no	no
serializeRow	no	yes
(	no	no
(	no	no
Row	no	yes
)	no	no
unfiltered	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
unfiltered	no	yes
instanceof	no	no
RangeTombstoneMarker	no	yes
)	no	no
{	no	no
serializeTombstone	no	yes
(	no	no
(	no	no
RangeTombstoneMarker	no	yes
)	no	no
unfiltered	no	yes
)	no	no
;	no	no
}	no	no
updatePosition	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
json	no	yes
.	no	no
writeEndArray	no	yes
(	no	no
)	no	no
;	no	no
json	no	yes
.	no	no
writeEndObject	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no
String	no	yes
key	yes	yes
=	no	no
metadata	no	yes
.	no	no
partitionKeyType	no	yes
.	no	no
getString	no	yes
(	no	no
partition	no	yes
.	no	no
partitionKey	no	yes
(	no	no
)	no	no
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
cd	no	yes
.	no	no
column	no	yes
(	no	no
)	no	no
.	no	no
isSimple	no	no
(	no	no
)	no	no
)	no	no
{	no	no
serializeCell	no	yes
(	no	no
(	no	no
Cell	no	yes
)	no	no
cd	no	yes
,	no	no
liveInfo	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
ComplexColumnData	no	yes
complexData	no	yes
=	no	no
(	no	no
ComplexColumnData	no	yes
)	no	no
cd	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
complexData	no	yes
.	no	no
complexDeletion	no	yes
(	no	no
)	no	no
.	no	no
isLive	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
objectIndenter	no	yes
.	no	no
setCompact	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
json	no	yes
.	no	no
writeStartObject	no	yes
(	no	no
)	no	no
;	no	no
json	no	yes
.	no	no
writeFieldName	no	yes
(	no	no
)	no	no
;	no	no
json	no	yes
.	no	no
writeString	no	yes
(	no	no
cd	no	yes
.	no	no
column	no	yes
(	no	no
)	no	no
.	no	no
name	no	yes
.	no	no
toCQLString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
serializeDeletion	no	yes
(	no	no
complexData	no	yes
.	no	no
complexDeletion	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
objectIndenter	no	yes
.	no	no
setCompact	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
json	no	yes
.	no	no
writeEndObject	no	yes
(	no	no
)	no	no
;	no	no
objectIndenter	no	yes
.	no	no
setCompact	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

limit	no	yes
=	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
count	no	yes
>	no	no
limit	no	yes
)	no	no
{	no	no
noSpamLogger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
limit	no	yes
,	no	no
count	no	yes
)	no	no
;	no	no
ctx	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
perIpLimit	yes	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getNativeTransportMaxConcurrentConnectionsPerIp	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
perIpLimit	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
InetAddress	no	yes
address	no	yes
=	no	no
(	no	no
(	no	no
InetSocketAddress	no	yes
)	no	no
ctx	no	yes
.	no	no
channel	no	yes
(	no	no
)	no	no
.	no	no
remoteAddress	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getAddress	no	yes
(	no	no
)	no	no
;	no	no
AtomicLong	no	yes
perIpCount	yes	yes
=	no	no
connectionsPerClient	no	yes
.	no	no
get	no	yes
(	no	no
address	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
perIpCount	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
perIpCount	yes	yes
=	no	no
new	no	no
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
AtomicLong	no	yes
old	no	yes
=	no	no
connectionsPerClient	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
address	no	yes
,	no	no
perIpCount	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
perIpCount	yes	yes
=	no	no
old	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
perIpCount	yes	yes
.	no	no
incrementAndGet	no	no
(	no	no
)	no	no
>	no	no
perIpLimit	yes	yes
)	no	no
{	no	no

public	no	no
T	no	no
decode	no	no
(	no	no
ByteBuf	no	no
body	no	no
,	no	no
ProtocolVersion	no	no
version	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
ProtocolVersion	no	no
.	no	no
SUPPORTED	no	no
.	no	no
contains	no	no
(	no	no
version	yes	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
InetAddress	no	yes
getJustLocalAddress	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
localInetAddress	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
DatabaseDescriptor	no	no
.	no	no
getListenAddress	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
localInetAddress	yes	yes
=	no	no
InetAddress	no	yes
.	no	no
getLocalHost	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
inspectCommitLogError	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
StorageService	no	no
.	no	no
instance	no	no
.	no	no
isDaemonSetupCompleted	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
List	no	yes
<	no	no
TreeRange	no	yes
>	no	no
difference	no	no
(	no	no
MerkleTree	no	no
ltree	no	yes
,	no	no
MerkleTree	no	no
rtree	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
equals	no	yes
(	no	no
rtree	no	yes
.	no	no
fullRange	no	yes
)	no	no
)	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
+	no	no
+	no	no
rtree	no	yes
.	no	no
fullRange	no	yes
+	no	no
')'	no	no
)	no	no
;	no	no
ltree	no	yes
.	no	no
fillInnerHashes	no	yes
(	no	no
)	no	no
;	no	no
rtree	no	yes
.	no	no
fillInnerHashes	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TreeRange	no	yes
>	no	no
diff	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
TreeRange	no	yes
active	no	yes
=	no	no
new	no	no
TreeRange	no	yes
(	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
left	no	yes
,	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
right	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Node	no	yes
lnode	yes	yes
=	no	no
ltree	no	yes
.	no	no
root	no	yes
;	no	no
Node	no	yes
rnode	yes	yes
=	no	no
rtree	no	yes
.	no	no
root	no	yes
;	no	no
if	no	no
(	no	no
lnode	yes	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
lnode	yes	yes
instanceof	no	no
Leaf	no	no
||	no	no
rnode	yes	yes
instanceof	no	no
Leaf	no	no
)	no	no
{	no	no

public	no	no
static	no	no
List	no	yes
<	no	no
TreeRange	no	yes
>	no	no
difference	no	no
(	no	no
MerkleTree	no	no
ltree	no	yes
,	no	no
MerkleTree	no	no
rtree	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
equals	no	yes
(	no	no
rtree	no	yes
.	no	no
fullRange	no	yes
)	no	no
)	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
+	no	no
+	no	no
rtree	no	yes
.	no	no
fullRange	no	yes
+	no	no
')'	no	no
)	no	no
;	no	no
ltree	no	yes
.	no	no
fillInnerHashes	no	yes
(	no	no
)	no	no
;	no	no
rtree	no	yes
.	no	no
fillInnerHashes	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TreeRange	no	yes
>	no	no
diff	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
TreeRange	no	yes
active	yes	yes
=	no	no
new	no	no
TreeRange	no	yes
(	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
left	no	yes
,	no	no
ltree	no	yes
.	no	no
fullRange	no	yes
.	no	no
right	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
Node	no	yes
lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
root	no	yes
;	no	no
Node	no	yes
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
root	no	yes
;	no	no
if	no	no
(	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
lnode	no	yes
instanceof	no	no
Leaf	no	no
||	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
diff	no	yes
.	no	no
add	no	yes
(	no	no
active	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
ltree	no	yes
,	no	no
rtree	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
FULLY_INCONSISTENT	no	no
==	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	yes
,	no	no
active	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
Difference	no	no
differenceHelper	no	no
(	no	no
MerkleTree	no	no
ltree	no	yes
,	no	no
MerkleTree	no	no
rtree	no	no
,	no	no
List	no	no
<	no	no
TreeRange	no	no
>	no	no
diff	no	no
,	no	no
TreeRange	no	no
active	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
active	yes	yes
.	no	no
depth	no	yes
==	no	no
Byte	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
return	no	no
CONSISTENT	no	yes
;	no	no
Token	no	yes
midpoint	yes	yes
=	no	no
ltree	no	yes
.	no	no
partitioner	no	yes
(	no	no
)	no	no
.	no	no
midpoint	yes	yes
(	no	no
active	yes	yes
.	no	no
left	no	yes
,	no	no
active	yes	yes
.	no	no
right	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
midpoint	yes	yes
.	no	no
equals	no	no
(	no	no
active	yes	yes
.	no	no
left	no	yes
)	no	no
||	no	no
midpoint	yes	yes
.	no	no
equals	no	no
(	no	no
active	yes	yes
.	no	no
right	no	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
midpoint	no	yes
.	no	no
equals	no	no
(	no	no
active	yes	yes
.	no	no
left	yes	yes
)	no	no
||	no	no
midpoint	no	yes
.	no	no
equals	no	no
(	no	no
active	yes	yes
.	no	no
right	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
midpoint	no	yes
,	no	no
active	yes	yes
)	no	no
;	no	no
return	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
TreeRange	no	yes
left	yes	yes
=	no	no
new	no	no
TreeRange	no	yes
(	no	no
active	yes	yes
.	no	no
left	yes	yes
,	no	no
midpoint	no	yes
,	no	no
active	yes	yes
.	no	no
depth	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
TreeRange	no	yes
right	no	yes
=	no	no
new	no	no
TreeRange	no	yes
(	no	no
midpoint	no	yes
,	no	no
active	yes	yes
.	no	no
right	no	yes
,	no	no
active	yes	yes
.	no	no
depth	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	yes	yes
,	no	no
right	no	yes
,	no	no
active	yes	yes
,	no	no
midpoint	no	yes
)	no	no
;	no	no
Node	no	yes
lnode	no	yes
,	no	no
rnode	no	yes
;	no	no
lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
left	yes	yes
)	no	no
;	no	no
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
left	yes	yes
)	no	no
;	no	no
Difference	no	yes
ldiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	yes	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
ldiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
left	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
,	no	no
right	yes	yes
,	no	no
active	yes	yes
,	no	no
midpoint	no	yes
)	no	no
;	no	no
Node	no	yes
lnode	yes	yes
,	no	no
rnode	yes	yes
;	no	no
lnode	yes	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
left	no	yes
)	no	no
;	no	no
rnode	yes	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
left	no	yes
)	no	no
;	no	no
Difference	no	yes
ldiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	yes	yes
&&	no	no
null	no	no
!=	no	no
rnode	yes	yes
&&	no	no
lnode	yes	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	yes	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
,	no	no
lnode	yes	yes
,	no	no
rnode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
lnode	yes	yes
instanceof	no	no
Leaf	no	yes
)	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
ldiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
left	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	yes	yes
||	no	no
null	no	no
==	no	no
rnode	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
)	no	no
;	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
lnode	yes	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
rnode	yes	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
Difference	no	yes
rdiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no

Difference	no	yes
ldiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
ldiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
left	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
)	no	no
;	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
Difference	no	yes
rdiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	yes	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
rdiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
right	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
lnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
ldiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
left	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	yes	yes
)	no	no
;	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
Difference	no	yes
rdiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	yes	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
rdiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
right	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	yes	yes
)	no	no
;	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no

else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	yes	yes
)	no	no
;	no	no
ldiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
right	no	yes
)	no	no
;	no	no
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
right	no	yes
)	no	no
;	no	no
Difference	no	yes
rdiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	no	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
rdiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
right	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	no	yes
)	no	no
;	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
ldiff	no	yes
==	no	no
FULLY_INCONSISTENT	no	yes
&&	no	no
rdiff	no	yes
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	yes	yes
,	no	no
right	no	yes
)	no	no
;	no	no

lnode	no	yes
=	no	no
ltree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
rnode	no	yes
=	no	no
rtree	no	yes
.	no	no
find	no	yes
(	no	no
right	yes	yes
)	no	no
;	no	no
Difference	no	yes
rdiff	no	yes
=	no	no
CONSISTENT	no	yes
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
lnode	no	yes
&&	no	no
null	no	no
!=	no	no
rnode	no	yes
&&	no	no
lnode	no	yes
.	no	no
hashesDiffer	no	no
(	no	no
rnode	no	yes
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	yes	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
rdiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	yes
,	no	no
rtree	no	yes
,	no	no
diff	no	no
,	no	no
right	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	yes	yes
)	no	no
;	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
ldiff	no	no
==	no	no
FULLY_INCONSISTENT	no	yes
&&	no	no
rdiff	no	yes
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
,	no	no
right	yes	yes
)	no	no
;	no	no
return	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ldiff	no	no
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
)	no	no
;	no	no

logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	no	yes
,	no	no
lnode	no	yes
,	no	no
rnode	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rnode	no	yes
instanceof	no	no
Leaf	no	yes
)	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
else	no	no
rdiff	no	yes
=	no	no
differenceHelper	no	no
(	no	no
ltree	no	no
,	no	no
rtree	no	no
,	no	no
diff	no	yes
,	no	no
right	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
null	no	no
==	no	no
lnode	no	yes
||	no	no
null	no	no
==	no	no
rnode	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	no	yes
)	no	no
;	no	no
rdiff	no	yes
=	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
ldiff	no	no
==	no	no
FULLY_INCONSISTENT	no	yes
&&	no	no
rdiff	no	yes
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
,	no	no
right	no	yes
)	no	no
;	no	no
return	no	no
FULLY_INCONSISTENT	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ldiff	no	no
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
left	no	yes
)	no	no
;	no	no
diff	no	yes
.	no	no
add	no	yes
(	no	no
left	no	yes
)	no	no
;	no	no
return	no	no
PARTIALLY_INCONSISTENT	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rdiff	no	yes
==	no	no
FULLY_INCONSISTENT	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
active	yes	yes
.	no	no
depth	no	yes
,	no	no
right	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
ByteBuffer	no	no
allocate	no	no
(	no	no
int	no	no
innerNodeCount	no	yes
,	no	no
IPartitioner	no	no
partitioner	no	yes
)	no	no
{	no	no
int	no	no
size	yes	yes
=	no	no
offHeapBufferSize	no	yes
(	no	no
innerNodeCount	no	yes
,	no	no
partitioner	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
logStatus	no	no
(	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ThreadPoolMetrics	no	no
tpool	yes	no
:	no	no
CassandraMetricsRegistry	no	no
.	no	no
Metrics	no	no
.	no	no
allThreadPoolMetrics	no	no
(	no	no
)	no	no
)	no	no
{	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ThreadPoolMetrics	no	no
tpool	no	yes
:	no	no
CassandraMetricsRegistry	no	no
.	no	no
Metrics	no	no
.	no	no
allThreadPoolMetrics	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
tpool	no	yes
.	no	no
poolName	no	yes
,	no	no
tpool	no	yes
.	no	no
activeTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
pendingTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
completedTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
currentBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
totalBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getActiveCompactions	no	yes
(	no	no
)	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getPendingTasks	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	no
pendingLargeMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getLargeMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingLargeMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
int	no	no
pendingSmallMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getSmallMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingSmallMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
pendingLargeMessages	no	yes
+	no	no
+	no	no
pendingSmallMessages	no	yes
)	no	no
)	no	no
;	no	no
AutoSavingCache	no	yes
<	no	no
KeyCacheKey	no	yes
,	no	no
RowIndexEntry	no	yes
>	no	no
keyCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
keyCache	no	yes
;	no	no
AutoSavingCache	no	yes
<	no	no
RowCacheKey	no	yes
,	no	no
IRowCacheEntry	no	yes
>	no	no
rowCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
rowCache	no	yes
;	no	no
int	no	no
keyCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getKeyCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
rowCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getRowCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
ThreadPoolMetrics	no	no
tpool	no	yes
:	no	no
CassandraMetricsRegistry	no	no
.	no	no
Metrics	no	no
.	no	no
allThreadPoolMetrics	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
tpool	no	yes
.	no	no
poolName	no	yes
,	no	no
tpool	no	yes
.	no	no
activeTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
pendingTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
completedTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
currentBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
totalBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getActiveCompactions	no	yes
(	no	no
)	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getPendingTasks	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	no
pendingLargeMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getLargeMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingLargeMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
int	no	no
pendingSmallMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getSmallMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingSmallMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
pendingLargeMessages	no	yes
+	no	no
+	no	no
pendingSmallMessages	no	yes
)	no	no
)	no	no
;	no	no
AutoSavingCache	no	yes
<	no	no
KeyCacheKey	no	yes
,	no	no
RowIndexEntry	no	yes
>	no	no
keyCache	yes	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
keyCache	yes	yes
;	no	no
AutoSavingCache	no	yes
<	no	no
RowCacheKey	no	yes
,	no	no
IRowCacheEntry	no	yes
>	no	no
rowCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
rowCache	no	yes
;	no	no
int	no	no
keyCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getKeyCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
rowCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getRowCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
tpool	no	yes
.	no	no
poolName	no	yes
,	no	no
tpool	no	yes
.	no	no
activeTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
pendingTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
completedTasks	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
currentBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
,	no	no
tpool	no	yes
.	no	no
totalBlocked	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getActiveCompactions	no	yes
(	no	no
)	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getPendingTasks	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	no
pendingLargeMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getLargeMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingLargeMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
int	no	no
pendingSmallMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getSmallMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingSmallMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
pendingLargeMessages	no	yes
+	no	no
+	no	no
pendingSmallMessages	no	yes
)	no	no
)	no	no
;	no	no
AutoSavingCache	no	yes
<	no	no
KeyCacheKey	no	yes
,	no	no
RowIndexEntry	no	yes
>	no	no
keyCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
keyCache	no	yes
;	no	no
AutoSavingCache	no	yes
<	no	no
RowCacheKey	no	yes
,	no	no
IRowCacheEntry	no	yes
>	no	no
rowCache	yes	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
rowCache	yes	yes
;	no	no
int	no	no
keyCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getKeyCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
rowCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getRowCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
keyCache	no	yes
.	no	no
weightedSize	no	yes
(	no	no
)	no	no
,	no	no
keyCache	no	yes
.	no	no
getCapacity	no	yes
(	no	no
)	no	no
,	no	no
keyCacheKeysToSave	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
?	no	no
:	no	no
keyCacheKeysToSave	no	yes
)	no	no
)	no	no
;	no	no

}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getActiveCompactions	no	yes
(	no	no
)	no	no
,	no	no
CompactionManager	no	yes
.	no	no
instance	no	yes
.	no	no
getPendingTasks	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
int	no	no
pendingLargeMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getLargeMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingLargeMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
int	no	no
pendingSmallMessages	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
n	no	yes
:	no	no
MessagingService	no	no
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
getSmallMessagePendingTasks	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pendingSmallMessages	no	yes
+=	no	no
n	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
pendingLargeMessages	no	yes
+	no	no
+	no	no
pendingSmallMessages	no	yes
)	no	no
)	no	no
;	no	no
AutoSavingCache	no	yes
<	no	no
KeyCacheKey	no	yes
,	no	no
RowIndexEntry	no	yes
>	no	no
keyCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
keyCache	no	yes
;	no	no
AutoSavingCache	no	yes
<	no	no
RowCacheKey	no	yes
,	no	no
IRowCacheEntry	no	yes
>	no	no
rowCache	no	yes
=	no	no
CacheService	no	yes
.	no	no
instance	no	yes
.	no	no
rowCache	no	yes
;	no	no
int	no	no
keyCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getKeyCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
rowCacheKeysToSave	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getRowCacheKeysToSave	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
keyCache	no	yes
.	no	no
weightedSize	no	yes
(	no	no
)	no	no
,	no	no
keyCache	no	yes
.	no	no
getCapacity	no	yes
(	no	no
)	no	no
,	no	no
keyCacheKeysToSave	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
?	no	no
:	no	no
keyCacheKeysToSave	no	yes
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
,	no	no
rowCache	no	yes
.	no	no
weightedSize	no	yes
(	no	no
)	no	no
,	no	no
rowCache	no	yes
.	no	no
getCapacity	no	yes
(	no	no
)	no	no
,	no	no
rowCacheKeysToSave	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
?	no	no
:	no	no
rowCacheKeysToSave	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
synchronized	no	no
void	no	no
onReleased	no	no
(	no	no
int	no	no
cycle	no	no
,	no	no
File	no	no
file	yes	yes
)	no	no
{	no	no
chronicleStoreFiles	no	yes
.	no	no
offer	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
bytesInStoreFiles	no	yes
+=	no	no
file	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
synchronized	no	no
void	no	no
onReleased	no	no
(	no	no
int	no	no
cycle	no	no
,	no	no
File	no	yes
file	no	yes
)	no	no
{	no	no
chronicleStoreFiles	no	yes
.	no	no
offer	no	yes
(	no	no
file	no	yes
)	no	no
;	no	no
bytesInStoreFiles	yes	yes
+=	no	no
file	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
file	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
file	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
while	no	no
(	no	no
bytesInStoreFiles	yes	yes
>	no	no
maxLogSize	no	no
&	no	no
!	no	no
chronicleStoreFiles	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
File	no	yes
toDelete	yes	yes
=	no	no
chronicleStoreFiles	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
toDeleteLength	yes	yes
=	no	no
toDelete	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
toDelete	yes	yes
.	no	no
delete	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
onReleased	no	no
(	no	no
int	no	no
cycle	no	no
,	no	no
File	no	no
file	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
archiveExisting	no	no
(	no	no
Path	no	no
path	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
path	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
for	no	no
(	no	no
File	no	no
f	yes	no
:	no	no
path	no	yes
.	no	no
toFile	no	no
(	no	no
)	no	no
.	no	no
listFiles	no	no
(	no	no
(	no	no
f	yes	no
)	no	no
->	no	no
f	yes	no
.	no	no
isFile	no	no
(	no	no
)	no	no
&&	no	no
f	yes	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
SingleChronicleQueue	no	no
.	no	no
SUFFIX	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no

private	no	no
void	no	no
archiveFile	no	no
(	no	no
File	no	no
f	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
cmd	yes	yes
=	no	no
PATH	no	yes
.	no	no
matcher	no	yes
(	no	no
archiveCommand	no	yes
)	no	no
.	no	no
replaceAll	no	yes
(	no	no
Matcher	no	yes
.	no	no
quoteReplacement	no	yes
(	no	no
f	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
fail	no	no
(	no	no
String	no	no
message	yes	no
,	no	no
Object	no	no
...	no	no
params	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
fail	no	no
(	no	no
String	no	no
message	yes	no
,	no	no
Throwable	no	no
t	yes	no
,	no	no
Object	no	no
...	no	no
params	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
failinfo	no	no
(	no	no
String	no	no
message	yes	no
,	no	no
Object	no	no
...	no	no
params	yes	no
)	no	no
{	no	no

private	no	no
String	no	yes
mkCasInsertQuery	no	no
(	no	no
Function	no	no
<	no	no
AtomicInteger	no	no
,	no	no
Integer	no	no
>	no	no
pkFunc	no	yes
,	no	no
int	no	no
ck	no	yes
,	no	no
int	no	no
v	no	yes
)	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
KEYSPACE	no	yes
,	no	no
pkFunc	no	yes
.	no	no
apply	no	yes
(	no	no
pkGen	no	yes
)	no	no
,	no	no
ck	no	yes
,	no	no
v	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
testLargeColumns	no	no
(	no	no
int	no	no
nodes	no	no
,	no	no
int	no	no
columnSize	no	no
,	no	no
int	no	no
rowCount	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
Random	no	yes
random	no	yes
=	no	no
new	no	no
Random	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
seed	yes	yes
=	no	no
ThreadLocalRandom	no	yes
.	no	no
current	no	yes
(	no	no
)	no	no
.	no	no
nextLong	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testBigInt	no	no
(	no	no
)	no	no
{	no	no
int	no	no
size	no	yes
=	no	no
10	no	no
*	no	no
1000	no	no
*	no	no
1000	no	no
;	no	no
IFilter	no	yes
bf	no	yes
=	no	no
getFilter	no	yes
(	no	no
size	no	yes
,	no	no
FilterTestHelper	no	yes
.	no	no
spec	no	yes
.	no	no
bucketsPerElement	no	yes
)	no	no
;	no	no
double	no	no
fp	yes	yes
=	no	no
testFalsePositives	no	yes
(	no	no
bf	no	yes
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
IntGenerator	no	yes
(	no	no
size	no	yes
)	no	no
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
IntGenerator	no	yes
(	no	no
size	no	yes
,	no	no
size	no	yes
*	no	no
2	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testBigRandom	no	no
(	no	no
)	no	no
{	no	no
int	no	no
size	no	yes
=	no	no
10	no	no
*	no	no
1000	no	no
*	no	no
1000	no	no
;	no	no
IFilter	no	yes
bf	no	yes
=	no	no
getFilter	no	yes
(	no	no
size	no	yes
,	no	no
FilterTestHelper	no	yes
.	no	no
spec	no	yes
.	no	no
bucketsPerElement	no	yes
)	no	no
;	no	no
double	no	no
fp	yes	yes
=	no	no
testFalsePositives	no	yes
(	no	no
bf	no	yes
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
RandomStringGenerator	no	yes
(	no	no
new	no	no
Random	no	yes
(	no	no
)	no	no
.	no	no
nextInt	no	yes
(	no	no
)	no	no
,	no	no
size	no	yes
)	no	no
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
RandomStringGenerator	no	yes
(	no	no
new	no	no
Random	no	yes
(	no	no
)	no	no
.	no	no
nextInt	no	yes
(	no	no
)	no	no
,	no	no
size	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testConstrained	no	no
(	no	no
)	no	no
{	no	no
int	no	no
size	no	yes
=	no	no
10	no	no
*	no	no
1000	no	no
*	no	no
1000	no	no
;	no	no
try	no	no
(	no	no
IFilter	no	no
bf	no	yes
=	no	no
getFilter	no	no
(	no	no
size	no	yes
,	no	no
0.01	no	no
)	no	no
)	no	no
{	no	no
double	no	no
fp	yes	yes
=	no	no
testFalsePositives	no	yes
(	no	no
bf	no	yes
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
IntGenerator	no	yes
(	no	no
size	no	yes
)	no	no
,	no	no
new	no	no
KeyGenerator	no	yes
.	no	no
IntGenerator	no	yes
(	no	no
size	no	yes
,	no	no
size	no	yes
*	no	no
2	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	yes
summary	no	yes
:	no	no
summaries	no	yes
)	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
summary	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
groups	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
groups	no	yes
.	no	no
add	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
groups	no	yes
.	no	no
add	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
groups	no	yes
.	no	no
add	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
fullRows	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
workload	no	yes
:	no	no
Iterables	no	yes
.	no	no
concat	no	yes
(	no	no
groups	no	yes
)	no	no
)	no	no
{	no	no
CompactionSummary	no	yes
cs	no	yes
=	no	no
compactionSummaries	no	yes
.	no	no
get	no	yes
(	no	no
workload	no	yes
)	no	no
;	no	no
ReadSummary	no	yes
rs	no	yes
=	no	no
readSummaries	no	yes
.	no	no
get	no	yes
(	no	no
workload	no	yes
)	no	no
;	no	no
fullRows	no	yes
.	no	no
put	no	yes
(	no	no
workload	no	yes
,	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
Iterables	no	yes
.	no	no
concat	no	yes
(	no	no
cs	no	yes
!=	no	no
null	no	no
?	no	no
cs	no	yes
.	no	no
cells	no	yes
(	no	no
)	no	no
:	no	no
CompactionSummary	no	yes
.	no	no
EMPTY	no	yes
,	no	no
rs	no	yes
!=	no	no
null	no	no
?	no	no
rs	no	yes
.	no	no
cells	no	yes
(	no	no
)	no	no
:	no	no
ReadSummary	no	yes
.	no	no
EMPTY	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
header	yes	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
'\t'	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
Iterables	no	yes
.	no	no
concat	no	yes
(	no	no
CompactionSummary	no	yes
.	no	no
HEADERS	no	yes
,	no	no
ReadSummary	no	yes
.	no	no
HEADERS	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
group	no	yes
:	no	no
groups	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
'\t'	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
group	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
allocMeasuring	no	no
(	no	no
)	no	no
{	no	no
long	no	no
size	no	yes
=	no	no
ObjectSizes	no	yes
.	no	no
measure	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
int	no	no
numAlloc	no	yes
=	no	no
1000	no	no
;	no	no
Measurement	no	yes
measurement	yes	yes
=	no	no
createMeasurement	no	yes
(	no	no
)	no	no
;	no	no
measurement	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numAlloc	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
new	no	no
Integer	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
measurement	yes	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
allocMeasuring	no	no
(	no	no
)	no	no
{	no	no
long	no	no
size	yes	yes
=	no	no
ObjectSizes	no	yes
.	no	no
measure	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
int	no	no
numAlloc	yes	yes
=	no	no
1000	no	no
;	no	no
Measurement	no	yes
measurement	no	yes
=	no	no
createMeasurement	no	yes
(	no	no
)	no	no
;	no	no
measurement	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numAlloc	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
new	no	no
Integer	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
measurement	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
measurement	no	yes
.	no	no
prettyBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
PROFILING_READS	no	no
)	no	no
{	no	no
compactionSampler	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PROFILING_COMPACTION	no	no
&&	no	no
!	no	no
workload	yes	no
.	no	no
name	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
AbstractCompactionTask	no	yes
task	no	yes
:	no	no
tasks	no	yes
)	no	no
task	no	yes
.	no	no
execute	no	yes
(	no	no
active	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PROFILING_COMPACTION	no	no
&&	no	no
!	no	no
workload	yes	no
.	no	no
name	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
compactionSampler	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numPartitions	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
estimatedPartitionSize	no	yes
.	no	no
count	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numRows	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
totalRows	no	yes
)	no	no
;	no	no
compactionSummary	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numPartitions	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numRows	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
cpu	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
PROFILING_COMPACTION	no	no
&&	no	no
!	no	no
workload	yes	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
AbstractCompactionTask	no	yes
task	no	yes
:	no	no
tasks	no	yes
)	no	no
task	no	yes
.	no	no
execute	no	yes
(	no	no
active	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PROFILING_COMPACTION	no	no
&&	no	no
!	no	no
workload	yes	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
compactionSampler	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numPartitions	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
estimatedPartitionSize	no	yes
.	no	no
count	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numRows	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
totalRows	no	yes
)	no	no
;	no	no
compactionSummary	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numPartitions	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numRows	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
cpu	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
compactionSummaries	no	yes
.	no	no
put	no	yes
(	no	no
workload	yes	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
CompactionSummary	no	yes
(	no	no
compactionSampler	no	yes
,	no	no
numPartitions	no	yes
,	no	no
numRows	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
cfs	no	yes
.	no	no
truncateBlocking	no	yes
(	no	no
)	no	no
;	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
AbstractCompactionTask	no	yes
task	no	yes
:	no	no
tasks	no	yes
)	no	no
task	no	yes
.	no	no
execute	no	yes
(	no	no
active	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PROFILING_COMPACTION	no	no
&&	no	no
!	no	no
workload	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
}	no	no
compactionSampler	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numPartitions	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
estimatedPartitionSize	no	yes
.	no	no
count	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numRows	no	yes
=	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
Iterables	no	yes
.	no	no
getOnlyElement	no	yes
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSSTableMetadata	no	yes
(	no	no
)	no	no
.	no	no
totalRows	no	yes
)	no	no
;	no	no
compactionSummary	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numPartitions	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
bytes	no	yes
(	no	no
)	no	no
/	no	no
numRows	no	yes
,	no	no
compactionSampler	no	yes
.	no	no
cpu	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
compactionSummaries	no	yes
.	no	no
put	no	yes
(	no	no
workload	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
CompactionSummary	no	yes
(	no	no
compactionSampler	no	yes
,	no	no
numPartitions	no	yes
,	no	no
numRows	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
cfs	no	yes
.	no	no
truncateBlocking	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
flakyTest	no	no
(	no	no
Runnable	no	no
test	no	yes
,	no	no
int	no	no
rerunsOnFailure	no	no
,	no	no
String	no	no
message	yes	no
)	no	no
{	no	no
AssertionError	no	yes
e	yes	yes
=	no	no
runCatchingAssertionError	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
e	yes	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no

public	no	no
static	no	no
void	no	no
flakyTest	no	no
(	no	no
Runnable	no	no
test	no	yes
,	no	no
int	no	no
rerunsOnFailure	yes	no
,	no	no
String	no	no
message	no	yes
)	no	no
{	no	no
AssertionError	no	yes
e	no	yes
=	no	no
runCatchingAssertionError	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
e	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
flakyTest	no	no
(	no	no
Runnable	no	no
test	no	yes
,	no	no
int	no	no
rerunsOnFailure	no	yes
,	no	no
String	no	no
message	no	yes
)	no	no
{	no	no
AssertionError	no	yes
e	no	yes
=	no	no
runCatchingAssertionError	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
e	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
message	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
rerunsOnFailure	no	yes
)	no	no
;	no	no
int	no	no
rerunsFailed	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
rerunsOnFailure	no	yes
;	no	no
++	no	no
i	no	no
)	no	no
{	no	no
AssertionError	no	yes
t	yes	yes
=	no	no
runCatchingAssertionError	no	yes
(	no	no
test	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
t	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
++	no	no
rerunsFailed	yes	yes
;	no	no
e	no	yes
.	no	no
addSuppressed	no	yes
(	no	no
t	yes	yes
)	no	no
;	no	no

DatabaseDescriptor	no	yes
.	no	no
daemonInitialization	no	yes
(	no	no
)	no	no
;	no	no
DatabaseDescriptor	no	yes
.	no	no
setTransientReplicationEnabledUnsafe	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
CommitLog	no	yes
.	no	no
instance	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
cleanupAndLeaveDirs	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
remoteAddrs	no	yes
.	no	no
add	no	yes
(	no	no
InetAddressAndPort	no	yes
.	no	no
getByName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnknownHostException	no	no
e	yes	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
Thread	no	no
.	no	no
setDefaultUncaughtExceptionHandler	no	no
(	no	no
new	no	no
Thread	no	no
.	no	no
UncaughtExceptionHandler	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
uncaughtException	no	no
(	no	no
Thread	no	no
t	yes	no
,	no	no
Throwable	no	no
e	yes	yes
)	no	no
{	no	no

SystemKeyspace	no	yes
.	no	no
finishStartup	no	yes
(	no	no
)	no	no
;	no	no
VirtualKeyspaceRegistry	no	yes
.	no	no
instance	no	yes
.	no	no
register	no	yes
(	no	no
VirtualSchemaKeyspace	no	yes
.	no	no
instance	no	yes
)	no	no
;	no	no
StorageService	no	yes
.	no	no
instance	no	yes
.	no	no
initServer	no	yes
(	no	no
)	no	no
;	no	no
SchemaLoader	no	yes
.	no	no
startGossiper	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
=	no	no
new	no	no
Server	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
.	no	no
withHost	no	yes
(	no	no
nativeAddr	no	yes
)	no	no
.	no	no
withPort	no	yes
(	no	no
nativePort	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
ClientMetrics	no	yes
.	no	no
instance	no	yes
.	no	no
init	no	yes
(	no	no
Collections	no	yes
.	no	no
singleton	no	yes
(	no	no
server	no	yes
)	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ProtocolVersion	no	no
version	yes	yes
:	no	no
PROTOCOL_VERSIONS	no	no
)	no	no
{	no	no
if	no	no
(	no	no
clusters	no	yes
.	no	no
containsKey	no	yes
(	no	no
version	yes	yes
)	no	no
)	no	no
continue	no	no
;	no	no
Cluster	no	yes
.	no	no
Builder	no	yes
builder	no	yes
=	no	no
Cluster	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
.	no	no
withoutJMXReporting	no	yes
(	no	no
)	no	no
.	no	no
addContactPoints	no	yes
(	no	no
nativeAddr	no	yes
)	no	no
.	no	no
withClusterName	no	yes
(	no	no
)	no	no
.	no	no
withPort	no	yes
(	no	no
nativePort	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
version	yes	yes
.	no	no
isBeta	no	yes
(	no	no
)	no	no
)	no	no
builder	no	yes
=	no	no
builder	no	yes
.	no	no
allowBetaProtocolVersion	no	yes
(	no	no
)	no	no
;	no	no
else	no	no
builder	no	yes
=	no	no
builder	no	yes
.	no	no
withProtocolVersion	no	no
(	no	no
com	no	no
.	no	no
datastax	no	no
.	no	no
driver	no	no
.	no	no
core	no	no
.	no	no
ProtocolVersion	no	no
.	no	no
fromInt	no	no
(	no	no
version	yes	yes
.	no	no
asInt	no	no
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Cluster	no	yes
cluster	no	yes
=	no	no
builder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
clusters	no	yes
.	no	no
put	no	yes
(	no	no
version	yes	yes
,	no	no
cluster	no	yes
)	no	no
;	no	no
sessions	no	yes
.	no	no
put	no	yes
(	no	no
version	yes	yes
,	no	no
cluster	no	yes
.	no	no
connect	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	no
String	no	yes
createType	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
{	no	no
String	no	yes
typeName	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
seqNumber	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
KEYSPACE	no	yes
+	no	no
+	no	no
typeName	no	yes
)	no	no
;	no	no
types	no	yes
.	no	no
add	no	yes
(	no	no
typeName	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
createFunctionOverload	no	no
(	no	no
String	no	yes
functionName	no	yes
,	no	no
String	no	yes
argTypes	no	yes
,	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
functionName	no	yes
)	no	no
;	no	no
functions	no	yes
.	no	no
add	no	yes
(	no	no
functionName	no	yes
+	no	no
'('	no	no
+	no	no
argTypes	no	yes
+	no	no
')'	no	no
)	no	no
;	no	no

protected	no	no
void	no	no
createAggregateOverload	no	no
(	no	no
String	no	yes
aggregateName	no	yes
,	no	no
String	no	yes
argTypes	no	yes
,	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
aggregateName	no	yes
)	no	no
;	no	no
aggregates	no	yes
.	no	no
add	no	yes
(	no	no
aggregateName	no	yes
+	no	no
'('	no	no
+	no	no
argTypes	no	yes
+	no	no
')'	no	no
)	no	no
;	no	no

protected	no	no
String	no	yes
createKeyspace	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
{	no	no
String	no	yes
currentKeyspace	no	yes
=	no	no
createKeyspaceName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
currentKeyspace	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
alterKeyspace	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
currentKeyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	no
void	no	no
alterKeyspaceMayThrow	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
currentKeyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

protected	no	no
String	no	yes
createTable	no	no
(	no	no
String	no	yes
keyspace	no	yes
,	no	no
String	no	yes
query	no	yes
)	no	no
{	no	no
String	no	yes
currentTable	no	yes
=	no	no
createTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
formatQuery	no	yes
(	no	no
keyspace	no	yes
,	no	no
query	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
createTableMayThrow	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
currentTable	no	yes
=	no	no
createTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
formatQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
alterTable	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
formatQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
alterTableMayThrow	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
formatQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
dropFormattedTable	no	no
(	no	no
String	no	no
formattedQuery	yes	no
)	no	no
{	no	no

protected	no	no
String	no	no
createFormattedIndex	no	no
(	no	no
String	no	no
formattedQuery	yes	no
)	no	no
{	no	no

protected	no	no
void	no	no
createIndexMayThrow	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
formatQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
dropIndex	no	no
(	no	no
String	no	yes
query	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
String	no	yes
fullQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
query	no	yes
,	no	no
KEYSPACE	no	yes
)	no	no
;	no	no

ByteBuffer	no	yes
actualValue	no	yes
=	no	no
actual	no	yes
.	no	no
getBytes	no	yes
(	no	no
column	no	yes
.	no	no
name	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
expectedByteValue	no	yes
!=	no	no
null	no	no
)	no	no
expectedByteValue	no	yes
=	no	no
expectedByteValue	no	yes
.	no	no
duplicate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
Objects	no	yes
.	no	no
equal	no	yes
(	no	no
expectedByteValue	no	yes
,	no	no
actualValue	no	yes
)	no	no
)	no	no
{	no	no
Object	no	yes
actualValueDecoded	no	yes
=	no	no
actualValue	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
column	no	yes
.	no	no
type	no	yes
.	no	no
getSerializer	no	yes
(	no	no
)	no	no
.	no	no
deserialize	no	yes
(	no	no
actualValue	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
Objects	no	yes
.	no	no
equal	no	yes
(	no	no
expected	no	yes
!=	no	no
null	no	no
?	no	no
expected	no	yes
[	no	no
j	no	yes
]	no	no
:	no	no
null	no	no
,	no	no
actualValueDecoded	no	yes
)	no	no
)	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
i	yes	yes
,	no	no
j	no	yes
,	no	no
column	no	yes
.	no	no
name	no	yes
,	no	no
column	no	yes
.	no	no
type	no	yes
.	no	no
asCQL3Type	no	yes
(	no	no
)	no	no
,	no	no
formatValue	no	yes
(	no	no
expectedByteValue	no	yes
!=	no	no
null	no	no
?	no	no
expectedByteValue	no	yes
.	no	no
duplicate	no	yes
(	no	no
)	no	no
:	no	no
null	no	no
,	no	no
column	no	yes
.	no	no
type	no	yes
)	no	no
,	no	no
formatValue	no	yes
(	no	no
actualValue	no	yes
,	no	no
column	no	yes
.	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
i	yes	yes
++	no	no
;	no	no
}	no	no
if	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
UntypedResultSet	no	yes
.	no	no
Row	no	yes
actual	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
i	yes	yes
++	no	no
;	no	no
StringBuilder	no	yes
str	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
meta	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
ColumnSpecification	no	yes
column	no	yes
=	no	no
meta	no	yes
.	no	no
get	no	yes
(	no	no
j	no	yes
)	no	no
;	no	no
ByteBuffer	no	yes
actualValue	no	yes
=	no	no
actual	no	yes
.	no	no
getBytes	no	yes
(	no	no
column	no	yes
.	no	no
name	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
str	yes	yes
.	no	no
append	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
column	no	yes
.	no	no
name	no	yes
,	no	no
formatValue	no	yes
(	no	no
actualValue	no	yes
,	no	no
column	no	yes
.	no	no
type	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPartitionKeyFilteringUnrestrictedPart	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPartitionKeyFilteringWithSlice	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
10	no	no
,	no	no
1	no	no
,	no	no
2	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
2	no	no
,	no	no
1	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
10	no	no
,	no	no
2	no	no
,	no	no
2	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
1	no	no
,	no	no
3	no	no
,	no	no
1	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
10	no	no
,	no	no
3	no	no
,	no	no
2	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPartitionKeyRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testCompoundPartitionKeyRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testClusteringKeyEQRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testClusteringKeySliceRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testClusteringKeyINRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
2	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testClusteringKeyMultiColumnRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
-	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testClusteringKeyFilteringRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
-	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPartitionKeyAndClusteringKeyFilteringRestrictions	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mvPrimaryKeys	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
mvPrimaryKeys	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
createTable	no	yes
(	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
executeNet	no	yes
(	no	no
protocolVersion	no	yes
,	no	no
+	no	no
keyspace	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
-	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
execute	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0	no	no
)	no	no
;	no	no

@	no	no
BeforeClass	no	no
public	no	no
static	no	no
void	no	no
setUp	no	no
(	no	no
)	no	no
{	no	no
long	no	no
seed	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
expectCurrentCDCState	no	no
(	no	no
CDCState	no	yes
expectedState	yes	no
)	no	no
{	no	no
CDCState	no	yes
currentState	yes	yes
=	no	no
CommitLog	no	yes
.	no	no
instance	no	yes
.	no	no
segmentManager	no	yes
.	no	no
allocatingFrom	no	yes
(	no	no
)	no	no
.	no	no
getCDCState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentState	yes	yes
!=	no	no
expectedState	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
testSSTablesAssignedToCorrectCompactionStrategy	no	no
(	no	no
int	no	no
numSSTables	no	yes
,	no	no
int	no	no
numDisks	yes	yes
)	no	no
{	no	no
MockCFS	no	yes
cfs	no	yes
=	no	no
createJBODMockCFS	no	yes
(	no	no
numDisks	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
numSSTables	no	yes
,	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Integer	no	yes
[	no	no
]	no	no
boundaries	yes	yes
=	no	no
computeBoundaries	no	yes
(	no	no
numSSTables	no	yes
,	no	no
numDisks	yes	yes
)	no	no
;	no	no
MockBoundaryManager	no	yes
mockBoundaryManager	no	yes
=	no	no
new	no	no
MockBoundaryManager	no	yes
(	no	no
cfs	no	yes
,	no	no
boundaries	yes	yes
)	no	no
;	no	no

private	no	no
int	no	no
getSSTableIndex	no	no
(	no	no
Integer	no	yes
[	no	no
]	no	no
boundaries	yes	yes
,	no	no
SSTableReader	no	no
reader	no	yes
)	no	no
{	no	no
int	no	no
index	yes	yes
=	no	no
0	no	no
;	no	no
int	no	no
firstKey	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
new	no	no
String	no	yes
(	no	no
ByteBufferUtil	no	yes
.	no	no
getArray	no	yes
(	no	no
reader	no	yes
.	no	no
first	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
while	no	no
(	no	no
boundaries	yes	yes
[	no	no
index	yes	yes
]	no	no
<=	no	no
firstKey	no	yes
)	no	no
index	yes	yes
++	no	no
;	no	no

@	no	no
BeforeClass	no	no
public	no	no
static	no	no
void	no	no
defineSchema	no	no
(	no	no
)	no	no
throws	no	no
ConfigurationException	no	no
{	no	no
long	no	no
seed	yes	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no

inserted	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
cfs	no	yes
.	no	no
forceBlockingFlush	no	yes
(	no	no
)	no	no
;	no	no
CompactionsTest	no	yes
.	no	no
assertMaxTimestamp	no	yes
(	no	no
cfs	no	yes
,	no	no
maxTimestampExpected	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
inserted	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
inserted	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
Util	no	yes
.	no	no
getAll	no	yes
(	no	no
Util	no	yes
.	no	no
cmd	no	yes
(	no	no
cfs	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
sstables	no	yes
=	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
currentSSTable	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	yes	yes
:	no	no
sstables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
currentSSTable	yes	yes
+	no	no
1	no	no
>	no	no
SSTABLES_TO_CORRUPT	no	yes
)	no	no
break	no	no
;	no	no
RandomAccessFile	no	yes
raf	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
int	no	no
corruptionSize	no	yes
=	no	no
100	no	no
;	no	no
raf	yes	yes
=	no	no
new	no	no
RandomAccessFile	no	yes
(	no	no
sstable	yes	yes
.	no	no
getFilename	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
raf	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
raf	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
corruptionSize	no	yes
)	no	no
;	no	no
long	no	no
pos	yes	yes
=	no	no
random	no	yes
.	no	no
nextInt	no	yes
(	no	no
(	no	no
int	no	no
)	no	no
(	no	no
raf	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
corruptionSize	no	yes
)	no	no
)	no	no
;	no	no

cfs	no	yes
.	no	no
disableAutoCompaction	no	yes
(	no	no
)	no	no
;	no	no
makeSSTables	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
sstables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
cfs	no	yes
.	no	no
getLiveSSTables	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SSTableReader	no	yes
>	no	no
expected	no	yes
=	no	no
sstables	no	yes
.	no	no
subList	no	yes
(	no	no
0	no	no
,	no	no
3	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
Range	no	yes
<	no	no
Token	no	yes
>>	no	no
ranges	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	yes	yes
:	no	no
expected	no	yes
)	no	no
{	no	no
ranges	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
Range	no	yes
<	no	no
>	no	no
(	no	no
sstable	yes	yes
.	no	no
first	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
sstable	yes	yes
.	no	no
last	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
PendingAntiCompaction	no	yes
.	no	no
AcquisitionCallable	no	yes
acquisitionCallable	no	yes
=	no	no
new	no	no
PendingAntiCompaction	no	yes
.	no	no
AcquisitionCallable	no	yes
(	no	no
cfs	no	yes
,	no	no
ranges	no	yes
,	no	no
UUIDGen	no	yes
.	no	no
getTimeUUID	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sstables	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
expected	no	yes
)	no	no
;	no	no
PendingAntiCompaction	no	yes
.	no	no
AcquireResult	no	yes
result	no	yes
=	no	no
acquisitionCallable	no	yes
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
result	no	yes
.	no	no
txn	no	yes
.	no	no
originals	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
3	no	no
,	no	no
result	no	yes
.	no	no
txn	no	yes
.	no	no
originals	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SSTableReader	no	yes
sstable	yes	yes
:	no	no
expected	no	yes
)	no	no
{	no	no

public	no	no
void	no	no
deleteStaleEntry	no	no
(	no	no
DecoratedKey	no	no
indexKey	yes	yes
,	no	no
Clustering	no	no
indexClustering	no	yes
,	no	no
DeletionTime	no	no
deletion	no	yes
,	no	no
WriteContext	no	no
ctx	no	yes
)	no	no
{	no	no
doDelete	no	yes
(	no	no
indexKey	yes	yes
,	no	no
indexClustering	no	yes
,	no	no
deletion	no	yes
,	no	no
ctx	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
insert	no	no
(	no	no
ByteBuffer	no	no
rowKey	no	yes
,	no	no
Clustering	no	no
clustering	no	yes
,	no	no
Cell	no	no
cell	no	yes
,	no	no
LivenessInfo	no	no
info	no	yes
,	no	no
WriteContext	no	no
ctx	no	yes
)	no	no
{	no	no
DecoratedKey	no	yes
valueKey	yes	yes
=	no	no
getIndexKeyFor	no	yes
(	no	no
getIndexedValue	no	yes
(	no	no
rowKey	no	yes
,	no	no
clustering	no	yes
,	no	no
cell	no	yes
)	no	no
)	no	no
;	no	no
Row	no	yes
row	no	yes
=	no	no
BTreeRow	no	yes
.	no	no
noCellLiveRow	no	yes
(	no	no
buildIndexClustering	no	yes
(	no	no
rowKey	no	yes
,	no	no
clustering	no	yes
,	no	no
cell	no	yes
)	no	no
,	no	no
info	no	yes
)	no	no
;	no	no
PartitionUpdate	no	yes
upd	no	yes
=	no	no
partitionUpdate	no	yes
(	no	no
valueKey	yes	yes
,	no	no
row	no	yes
)	no	no
;	no	no
indexCfs	no	yes
.	no	no
getWriteHandler	no	yes
(	no	no
)	no	no
.	no	no
write	no	yes
(	no	no
upd	no	yes
,	no	no
ctx	no	yes
,	no	no
UpdateTransaction	no	yes
.	no	no
NO_OP	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
doDelete	no	no
(	no	no
DecoratedKey	no	no
indexKey	yes	yes
,	no	no
Clustering	no	no
indexClustering	no	yes
,	no	no
DeletionTime	no	no
deletion	no	yes
,	no	no
WriteContext	no	no
ctx	no	yes
)	no	no
{	no	no
Row	no	yes
row	no	yes
=	no	no
BTreeRow	no	yes
.	no	no
emptyDeletedRow	no	yes
(	no	no
indexClustering	no	yes
,	no	no
Row	no	yes
.	no	no
Deletion	no	yes
.	no	no
regular	no	yes
(	no	no
deletion	no	yes
)	no	no
)	no	no
;	no	no
PartitionUpdate	no	yes
upd	no	yes
=	no	no
partitionUpdate	no	yes
(	no	no
indexKey	yes	yes
,	no	no
row	no	yes
)	no	no
;	no	no
indexCfs	no	yes
.	no	no
getWriteHandler	no	yes
(	no	no
)	no	no
.	no	no
write	no	yes
(	no	no
upd	no	yes
,	no	no
ctx	no	yes
,	no	no
UpdateTransaction	no	yes
.	no	no
NO_OP	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testMutateMetadata	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
String	no	no
legacyVersion	yes	no
:	no	no
legacyVersions	no	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testMutateLevel	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
String	no	no
legacyVersion	yes	no
:	no	no
legacyVersions	no	no
)	no	no
{	no	no

private	no	no
void	no	no
doTestLegacyCqlTables	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
String	no	no
legacyVersion	yes	no
:	no	no
legacyVersions	no	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testAutomaticUpgrade	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
String	no	no
legacyVersion	yes	no
:	no	no
legacyVersions	no	no
)	no	no
{	no	no

private	no	no
void	no	no
streamLegacyTables	no	no
(	no	no
String	no	no
legacyVersion	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
truncateLegacyTables	no	no
(	no	no
String	no	no
legacyVersion	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
compactLegacyTables	no	no
(	no	no
String	no	no
legacyVersion	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
loadLegacyTables	no	no
(	no	no
String	no	no
legacyVersion	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
verifyReads	no	no
(	no	no
String	no	yes
legacyVersion	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
ck	yes	yes
=	no	no
0	no	no
;	no	no
ck	yes	yes
<	no	no
50	no	no
;	no	no
ck	yes	yes
++	no	no
)	no	no
{	no	no
String	no	yes
ckValue	no	yes
=	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
ck	yes	yes
)	no	no
+	no	no
longString	no	yes
;	no	no
for	no	no
(	no	no
int	no	no
pk	yes	no
=	no	no
0	no	no
;	no	no
pk	yes	no
<	no	no
5	no	no
;	no	no
pk	yes	no
++	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
readClusteringCounterTable	no	no
(	no	no
String	no	no
legacyVersion	yes	no
,	no	no
String	no	no
ckValue	no	no
,	no	no
String	no	no
pkValue	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
readClusteringTable	no	no
(	no	no
String	no	no
legacyVersion	yes	no
,	no	no
int	no	no
ck	no	no
,	no	no
String	no	no
ckValue	no	no
,	no	no
String	no	no
pkValue	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
readSimpleCounterTable	no	no
(	no	no
String	no	no
legacyVersion	yes	no
,	no	no
String	no	no
pkValue	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
readSimpleTable	no	no
(	no	no
String	no	no
legacyVersion	yes	no
,	no	no
String	no	no
pkValue	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
loadLegacyTable	no	no
(	no	no
String	no	yes
tablePattern	no	yes
,	no	no
String	no	yes
legacyVersion	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
table	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
tablePattern	no	yes
,	no	no
legacyVersion	no	yes
)	no	no
;	no	no

@	no	no
BeforeClass	no	no
public	no	no
static	no	no
void	no	no
setUp	no	no
(	no	no
)	no	no
{	no	no
original	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getCorruptedTombstoneStrategy	no	yes
(	no	no
)	no	no
;	no	no
DatabaseDescriptor	no	yes
.	no	no
setCorruptedTombstoneStrategy	no	yes
(	no	no
Config	no	yes
.	no	no
CorruptedTombstoneStrategy	no	yes
.	no	no
disabled	no	yes
)	no	no
;	no	no
TableMetadata	no	yes
.	no	no
Builder	no	yes
cfm	no	yes
=	no	no
TableMetadata	no	yes
.	no	no
builder	no	yes
(	no	no
keyspace	no	yes
,	no	no
table	no	yes
)	no	no
.	no	no
addPartitionKeyColumn	no	yes
(	no	no
,	no	no
AsciiType	no	yes
.	no	no
instance	no	yes
)	no	no
.	no	no
addClusteringColumn	no	yes
(	no	no
,	no	no
AsciiType	no	yes
.	no	no
instance	no	yes
)	no	no
.	no	no
addClusteringColumn	no	yes
(	no	no
,	no	no
AsciiType	no	yes
.	no	no
instance	no	yes
)	no	no
.	no	no
addRegularColumn	no	yes
(	no	no
,	no	no
BytesType	no	yes
.	no	no
instance	no	yes
)	no	no
.	no	no
addRegularColumn	no	yes
(	no	no
,	no	no
BytesType	no	yes
.	no	no
instance	no	yes
)	no	no
.	no	no
compression	no	yes
(	no	no
CompressionParams	no	yes
.	no	no
noCompression	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SchemaLoader	no	yes
.	no	no
createKeyspace	no	yes
(	no	no
keyspace	no	yes
,	no	no
KeyspaceParams	no	yes
.	no	no
simple	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
cfm	no	yes
)	no	no
;	no	no
cfs	no	yes
=	no	no
Keyspace	no	yes
.	no	no
open	no	yes
(	no	no
keyspace	no	yes
)	no	no
.	no	no
getColumnFamilyStore	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
cfs	no	yes
.	no	no
disableAutoCompaction	no	yes
(	no	no
)	no	no
;	no	no
maxValueSize	no	yes
=	no	no
DatabaseDescriptor	no	yes
.	no	no
getMaxValueSize	no	yes
(	no	no
)	no	no
;	no	no
DatabaseDescriptor	no	yes
.	no	no
setMaxValueSize	no	yes
(	no	no
1024	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
long	no	no
seed	yes	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
ByteBuffer	no	yes
allocateBuffer	no	no
(	no	no
int	no	no
size	no	yes
)	no	no
{	no	no
ByteBuffer	no	yes
ret	no	yes
=	no	no
ByteBuffer	no	yes
.	no	no
allocate	no	yes
(	no	no
Ints	no	yes
.	no	no
checkedCast	no	yes
(	no	no
size	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
seed	yes	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no

int	no	no
[	no	no
]	no	no
dcReplication	no	yes
=	no	no
new	no	no
int	no	no
[	no	no
]	no	no
{	no	no
2	no	no
,	no	no
6	no	no
,	no	no
6	no	no
}	no	no
;	no	no
IEndpointSnitch	no	yes
snitch	no	yes
=	no	no
new	no	no
RackInferringSnitch	no	yes
(	no	no
)	no	no
;	no	no
DatabaseDescriptor	no	yes
.	no	no
setEndpointSnitch	no	yes
(	no	no
snitch	no	yes
)	no	no
;	no	no
TokenMetadata	no	yes
metadata	no	yes
=	no	no
new	no	no
TokenMetadata	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
configOptions	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Multimap	no	yes
<	no	no
InetAddressAndPort	no	yes
,	no	no
Token	no	yes
>	no	no
tokens	no	yes
=	no	no
HashMultimap	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
totalRF	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
dc	no	yes
=	no	no
0	no	no
;	no	no
dc	no	yes
<	no	no
dcRacks	no	no
.	no	no
length	no	no
;	no	no
++	no	no
dc	no	yes
)	no	no
{	no	no
totalRF	no	yes
+=	no	no
dcReplication	no	yes
[	no	no
dc	no	yes
]	no	no
;	no	no
configOptions	no	yes
.	no	no
put	no	yes
(	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
dc	no	yes
)	no	no
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
dcReplication	no	yes
[	no	no
dc	no	yes
]	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
rack	no	yes
=	no	no
0	no	no
;	no	no
rack	no	yes
<	no	no
dcRacks	no	no
[	no	no
dc	no	yes
]	no	no
;	no	no
++	no	no
rack	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
ep	no	yes
=	no	no
1	no	no
;	no	no
ep	no	yes
<=	no	no
dcEndpoints	no	no
[	no	no
dc	no	yes
]	no	no
/	no	no
dcRacks	no	no
[	no	no
dc	no	yes
]	no	no
;	no	no
++	no	no
ep	no	yes
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
ipBytes	no	yes
=	no	no
new	no	no
byte	no	no
[	no	no
]	no	no
{	no	no
10	no	no
,	no	no
(	no	no
byte	no	no
)	no	no
dc	no	yes
,	no	no
(	no	no
byte	no	no
)	no	no
rack	no	yes
,	no	no
(	no	no
byte	no	no
)	no	no
ep	no	yes
}	no	no
;	no	no
InetAddressAndPort	no	yes
address	yes	yes
=	no	no
InetAddressAndPort	no	yes
.	no	no
getByAddress	no	yes
(	no	no
ipBytes	no	yes
)	no	no
;	no	no
StringToken	no	yes
token	yes	yes
=	no	no
new	no	no
StringToken	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
ep	no	yes
,	no	no
rack	no	yes
,	no	no
dc	no	yes
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
rack	no	yes
=	no	no
0	no	no
;	no	no
rack	no	yes
<	no	no
dcRacks	no	no
[	no	no
dc	no	yes
]	no	no
;	no	no
++	no	no
rack	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
ep	no	yes
=	no	no
1	no	no
;	no	no
ep	no	yes
<=	no	no
dcEndpoints	no	no
[	no	no
dc	no	yes
]	no	no
/	no	no
dcRacks	no	no
[	no	no
dc	no	yes
]	no	no
;	no	no
++	no	no
ep	no	yes
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
ipBytes	no	yes
=	no	no
new	no	no
byte	no	no
[	no	no
]	no	no
{	no	no
10	no	no
,	no	no
(	no	no
byte	no	no
)	no	no
dc	no	yes
,	no	no
(	no	no
byte	no	no
)	no	no
rack	no	yes
,	no	no
(	no	no
byte	no	no
)	no	no
ep	no	yes
}	no	no
;	no	no
InetAddressAndPort	no	yes
address	no	yes
=	no	no
InetAddressAndPort	no	yes
.	no	no
getByAddress	no	yes
(	no	no
ipBytes	no	yes
)	no	no
;	no	no
StringToken	no	yes
token	no	yes
=	no	no
new	no	no
StringToken	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
ep	no	yes
,	no	no
rack	no	yes
,	no	no
dc	no	yes
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
address	no	yes
,	no	no
token	no	yes
)	no	no
;	no	no
tokens	no	yes
.	no	no
put	no	yes
(	no	no
address	no	yes
,	no	no
token	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
metadata	no	yes
.	no	no
updateNormalTokens	no	yes
(	no	no
tokens	no	yes
)	no	no
;	no	no
NetworkTopologyStrategy	no	yes
strategy	no	yes
=	no	no
new	no	no
NetworkTopologyStrategy	no	yes
(	no	no
keyspaceName	no	yes
,	no	no
metadata	no	yes
,	no	no
snitch	no	yes
,	no	no
configOptions	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
testToken	yes	yes
:	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
,	no	no
}	no	no
)	no	no
{	no	no
EndpointsForRange	no	yes
replicas	yes	yes
=	no	no
strategy	no	yes
.	no	no
calculateNaturalReplicas	no	yes
(	no	no
new	no	no
StringToken	no	yes
(	no	no
testToken	yes	yes
)	no	no
,	no	no
metadata	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
InetAddressAndPort	no	yes
>	no	no
endpointSet	no	yes
=	no	no
replicas	yes	yes
.	no	no
endpoints	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
totalRF	no	yes
,	no	no
replicas	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
totalRF	no	yes
,	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
replicas	yes	yes
.	no	no
byEndpoint	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
totalRF	no	yes
,	no	no
endpointSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
doTestManual	no	no
(	no	no
Settings	no	no
settings	no	yes
,	no	no
ManualSendTest	no	no
test	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
InetAddressAndPort	no	yes
endpoint	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
InboundConnectionSettings	no	yes
inboundSettings	yes	yes
=	no	no
settings	no	yes
.	no	no
inbound	no	yes
.	no	no
apply	no	yes
(	no	no
new	no	no
InboundConnectionSettings	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
withBindAddress	no	yes
(	no	no
endpoint	no	yes
)	no	no
.	no	no
withSocketFactory	no	yes
(	no	no
factory	no	yes
)	no	no
;	no	no
InboundSockets	no	yes
inbound	no	yes
=	no	no
new	no	no
InboundSockets	no	yes
(	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
inboundSettings	yes	yes
)	no	no
)	no	no
;	no	no
OutboundConnectionSettings	no	yes
outboundTemplate	no	yes
=	no	no
settings	no	yes
.	no	no
outbound	yes	yes
.	no	no
apply	no	yes
(	no	no
new	no	no
OutboundConnectionSettings	no	yes
(	no	no
endpoint	no	yes
)	no	no
)	no	no
.	no	no
withDefaultReserveLimits	no	yes
(	no	no
)	no	no
.	no	no
withSocketFactory	no	yes
(	no	no
factory	no	yes
)	no	no
.	no	no
withDefaults	no	yes
(	no	no
ConnectionCategory	no	yes
.	no	no
MESSAGING	no	yes
)	no	no
;	no	no
ResourceLimits	no	yes
.	no	no
EndpointAndGlobal	no	yes
reserveCapacityInBytes	no	yes
=	no	no
new	no	no
ResourceLimits	no	yes
.	no	no
EndpointAndGlobal	no	yes
(	no	no
new	no	no
ResourceLimits	no	yes
.	no	no
Concurrent	no	yes
(	no	no
outboundTemplate	no	yes
.	no	no
applicationSendQueueReserveEndpointCapacityInBytes	no	yes
)	no	no
,	no	no
outboundTemplate	no	yes
.	no	no
applicationSendQueueReserveGlobalCapacityInBytes	no	yes
)	no	no
;	no	no
OutboundConnection	no	yes
outbound	yes	yes
=	no	no
new	no	no
OutboundConnection	no	yes
(	no	no
settings	no	yes
.	no	no
type	no	yes
,	no	no
outboundTemplate	no	yes
,	no	no
reserveCapacityInBytes	no	yes
)	no	no
;	no	no
try	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPendingOutboundConnectionUpdatesMessageVersionOnReconnectAttempt	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
final	no	no
String	no	yes
storagePortProperty	no	yes
=	no	no
Config	no	yes
.	no	no
PROPERTY_PREFIX	no	yes
+	no	no
;	no	no
final	no	no
String	no	yes
originalStoragePort	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
storagePortProperty	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
final	no	no
Settings	no	yes
settings	no	yes
=	no	no
Settings	no	yes
.	no	no
LARGE	no	yes
;	no	no
final	no	no
InetAddressAndPort	no	yes
endpoint	no	yes
=	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
;	no	no
MessagingService	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
.	no	no
versions	no	yes
.	no	no
set	no	yes
(	no	no
FBUtilities	no	yes
.	no	no
getBroadcastAddressAndPort	no	yes
(	no	no
)	no	no
,	no	no
MessagingService	no	yes
.	no	no
VERSION_40	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
storagePortProperty	no	yes
,	no	no
)	no	no
;	no	no
final	no	no
InetAddressAndPort	no	yes
legacySSLAddrsAndPort	no	yes
=	no	no
endpoint	no	yes
.	no	no
withPort	no	yes
(	no	no
DatabaseDescriptor	no	yes
.	no	no
getSSLStoragePort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
InboundConnectionSettings	no	yes
inboundSettings	yes	yes
=	no	no
settings	no	yes
.	no	no
inbound	no	yes
.	no	no
apply	no	yes
(	no	no
new	no	no
InboundConnectionSettings	no	yes
(	no	no
)	no	no
.	no	no
withEncryption	no	yes
(	no	no
encryptionOptions	no	yes
)	no	no
)	no	no
.	no	no
withBindAddress	no	yes
(	no	no
legacySSLAddrsAndPort	no	yes
)	no	no
.	no	no
withAcceptMessaging	no	yes
(	no	no
new	no	no
AcceptVersions	no	yes
(	no	no
VERSION_30	no	yes
,	no	no
VERSION_3014	no	yes
)	no	no
)	no	no
.	no	no
withSocketFactory	no	yes
(	no	no
factory	no	yes
)	no	no
;	no	no
InboundSockets	no	yes
inbound	no	yes
=	no	no
new	no	no
InboundSockets	no	yes
(	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
inboundSettings	yes	yes
)	no	no
)	no	no
;	no	no
OutboundConnectionSettings	no	yes
outboundTemplate	no	yes
=	no	no
settings	no	yes
.	no	no
outbound	yes	yes
.	no	no
apply	no	yes
(	no	no
new	no	no
OutboundConnectionSettings	no	yes
(	no	no
endpoint	no	yes
)	no	no
.	no	no
withEncryption	no	yes
(	no	no
encryptionOptions	no	yes
)	no	no
)	no	no
.	no	no
withDefaultReserveLimits	no	yes
(	no	no
)	no	no
.	no	no
withSocketFactory	no	yes
(	no	no
factory	no	yes
)	no	no
.	no	no
withDefaults	no	yes
(	no	no
ConnectionCategory	no	yes
.	no	no
MESSAGING	no	yes
)	no	no
;	no	no
ResourceLimits	no	yes
.	no	no
EndpointAndGlobal	no	yes
reserveCapacityInBytes	no	yes
=	no	no
new	no	no
ResourceLimits	no	yes
.	no	no
EndpointAndGlobal	no	yes
(	no	no
new	no	no
ResourceLimits	no	yes
.	no	no
Concurrent	no	yes
(	no	no
outboundTemplate	no	yes
.	no	no
applicationSendQueueReserveEndpointCapacityInBytes	no	yes
)	no	no
,	no	no
outboundTemplate	no	yes
.	no	no
applicationSendQueueReserveGlobalCapacityInBytes	no	yes
)	no	no
;	no	no
OutboundConnection	no	yes
outbound	yes	yes
=	no	no
new	no	no
OutboundConnection	no	yes
(	no	no
settings	no	yes
.	no	no
type	no	yes
,	no	no
outboundTemplate	no	yes
,	no	no
reserveCapacityInBytes	no	yes
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
static	no	no
<	no	no
V	no	no
>	no	no
void	no	no
randomize	no	no
(	no	no
List	no	no
<	no	no
V	no	no
>	no	no
list	no	no
)	no	no
{	no	no
long	no	no
seed	yes	yes
=	no	no
ThreadLocalRandom	no	yes
.	no	no
current	no	yes
(	no	no
)	no	no
.	no	no
nextLong	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
testSomeFrames	no	no
(	no	no
FrameEncoder	no	no
encoder	no	no
,	no	no
FrameDecoder	no	no
decoder	no	no
)	no	no
{	no	no
long	no	no
seed	yes	yes
=	no	no
new	no	no
SecureRandom	no	yes
(	no	no
)	no	no
.	no	no
nextLong	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
burnRandomLegacy	no	no
(	no	no
int	no	no
count	no	no
)	no	no
{	no	no
SecureRandom	no	yes
seed	no	yes
=	no	no
new	no	no
SecureRandom	no	yes
(	no	no
)	no	no
;	no	no
Random	no	yes
random	no	yes
=	no	no
new	no	no
Random	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
count	no	no
;	no	no
++	no	no
i	no	no
)	no	no
{	no	no
long	no	no
innerSeed	yes	yes
=	no	no
seed	no	yes
.	no	no
nextLong	no	yes
(	no	no
)	no	no
;	no	no
float	no	no
ratio	yes	yes
=	no	no
seed	no	yes
.	no	no
nextFloat	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
version	yes	yes
=	no	no
minimum_version	no	yes
+	no	no
random	no	yes
.	no	no
nextInt	no	yes
(	no	no
1	no	no
+	no	no
current_version	no	yes
-	no	no
minimum_version	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
testSomeMessages	no	no
(	no	no
long	no	no
seed	yes	no
,	no	no
int	no	no
count	yes	no
,	no	no
float	no	no
largeRatio	yes	no
,	no	no
int	no	no
messagingVersion	yes	no
,	no	no
FrameDecoder	no	no
decoder	no	no
)	no	no
{	no	no

private	no	no
void	no	no
testSomeMessages	no	no
(	no	no
long	no	no
seed	no	yes
,	no	no
int	no	no
count	no	yes
,	no	no
float	no	no
largeRatio	no	yes
,	no	no
int	no	no
messagingVersion	no	yes
,	no	no
FrameDecoder	no	no
decoder	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
seed	no	yes
,	no	no
count	no	yes
,	no	no
largeRatio	no	yes
,	no	no
messagingVersion	no	yes
,	no	no
decoder	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Random	no	yes
random	no	yes
=	no	no
new	no	no
Random	no	yes
(	no	no
seed	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
count	no	yes
;	no	no
++	no	no
i	yes	no
)	no	no
{	no	no
long	no	no
innerSeed	yes	yes
=	no	no
random	no	yes
.	no	no
nextLong	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
invokeCalculateRangesToFetchWithPreferredEndpoints	no	no
(	no	no
RangesAtEndpoint	no	no
toFetch	no	yes
,	no	no
Pair	no	no
<	no	no
TokenMetadata	no	no
,	no	no
TokenMetadata	no	no
>	no	no
tmds	no	yes
,	no	no
EndpointsByReplica	no	yes
expectedResult	no	no
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setTransientReplicationEnabledUnsafe	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
EndpointsByReplica	no	yes
result	yes	yes
=	no	no
RangeStreamer	no	yes
.	no	no
calculateRangesToFetchWithPreferredEndpoints	no	yes
(	no	no
(	no	no
address	no	yes
,	no	no
replicas	no	yes
)	no	no
->	no	no
replicas	no	yes
.	no	no
sorted	no	yes
(	no	no
(	no	no
a	no	yes
,	no	no
b	no	yes
)	no	no
->	no	no
b	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
.	no	no
compareTo	no	yes
(	no	no
a	no	yes
.	no	no
endpoint	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
,	no	no
simpleStrategy	no	yes
(	no	no
tmds	no	yes
.	no	no
left	no	yes
)	no	no
,	no	no
toFetch	no	yes
,	no	no
true	no	no
,	no	no
tmds	no	yes
.	no	no
left	no	yes
,	no	no
tmds	no	yes
.	no	no
right	no	yes
,	no	no
,	no	no
sourceFilters	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
invokeCalculateRangesToStreamWithPreferredEndpoints	no	no
(	no	no
RangesAtEndpoint	no	no
toStream	no	yes
,	no	no
Pair	no	no
<	no	no
TokenMetadata	no	no
,	no	no
TokenMetadata	no	no
>	no	no
tmds	no	yes
,	no	no
RangesByEndpoint	no	yes
expectedResult	no	no
)	no	no
{	no	no
DatabaseDescriptor	no	yes
.	no	no
setTransientReplicationEnabledUnsafe	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
RangeRelocator	no	yes
relocator	no	yes
=	no	no
new	no	no
RangeRelocator	no	yes
(	no	no
)	no	no
;	no	no
RangesByEndpoint	no	yes
result	yes	yes
=	no	no
relocator	no	yes
.	no	no
calculateRangesToStreamWithEndpoints	no	yes
(	no	no
toStream	no	yes
,	no	no
simpleStrategy	no	yes
(	no	no
tmds	no	yes
.	no	no
left	no	yes
)	no	no
,	no	no
tmds	no	yes
.	no	no
left	no	yes
,	no	no
tmds	no	yes
.	no	no
right	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
boolean	no	no
areDisjunctive	no	no
(	no	no
List	no	no
<	no	no
ILoggingEvent	no	no
>	no	no
firstThreadEvents	no	yes
,	no	no
List	no	no
<	no	no
ILoggingEvent	no	no
>	no	no
secondThreadEvents	no	yes
)	no	no
{	no	no
Range	no	yes
<	no	no
Long	no	yes
>	no	no
firstThreadTimeRange	yes	yes
=	no	no
timestampsRange	no	yes
(	no	no
firstThreadEvents	no	yes
)	no	no
;	no	no
Range	no	yes
<	no	no
Long	no	yes
>	no	no
secondThreadTimeRange	yes	yes
=	no	no
timestampsRange	no	yes
(	no	no
secondThreadEvents	no	yes
)	no	no
;	no	no
boolean	no	no
connected	no	yes
=	no	no
firstThreadTimeRange	yes	yes
.	no	no
isConnected	no	yes
(	no	no
secondThreadTimeRange	yes	yes
)	no	no
;	no	no
boolean	no	no
disjunctive	yes	yes
=	no	no
!	no	no
connected	no	yes
||	no	no
firstThreadTimeRange	yes	yes
.	no	no
intersection	no	yes
(	no	no
secondThreadTimeRange	yes	yes
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
verifyStatusWasPrintedAndBusyEventOccured	no	no
(	no	no
List	no	no
<	no	no
ILoggingEvent	no	no
>	no	no
firstThreadEvents	yes	no
,	no	no
List	no	no
<	no	no
ILoggingEvent	no	no
>	no	no
secondThreadEvents	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
firstThreadEvents	yes	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
&&	no	no
secondThreadEvents	yes	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no

Statement	no	yes
statement	no	yes
=	no	no
query	yes	yes
.	no	no
toStatement	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Session	no	no
session	no	yes
:	no	no
sessions	no	no
)	no	no
{	no	no
maybeSetKeyspace	no	yes
(	no	no
session	no	yes
,	no	no
query	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
logger	no	yes
.	no	no
isDebugEnabled	no	yes
(	no	no
)	no	no
)	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
query	yes	yes
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
ResultSet	no	yes
>	no	no
future	no	yes
=	no	no
session	no	yes
.	no	no
executeAsync	no	yes
(	no	no
statement	no	yes
)	no	no
;	no	no
results	no	yes
.	no	no
add	no	yes
(	no	no
handleErrors	no	yes
(	no	no
future	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
ListenableFuture	no	yes
<	no	no
List	no	yes
<	no	no
ResultHandler	no	yes
.	no	no
ComparableResultSet	no	yes
>>	no	no
resultList	no	yes
=	no	no
Futures	no	yes
.	no	no
allAsList	no	yes
(	no	no
results	no	yes
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	no
(	no	no
resultList	no	yes
,	no	no
new	no	no
FutureCallback	no	no
<	no	no
List	no	yes
<	no	no
ResultHandler	no	yes
.	no	no
ComparableResultSet	no	yes
>>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
void	no	no
onSuccess	no	no
(	no	no
List	no	yes
<	no	no
ResultHandler	no	yes
.	no	no
ComparableResultSet	no	yes
>	no	no
resultSets	no	yes
)	no	no
{	no	no
resultHandler	no	yes
.	no	no
handleResults	no	yes
(	no	no
query	yes	yes
,	no	no
resultSets	no	yes
)	no	no
;	no	no
}	no	no
public	no	no
void	no	no
onFailure	no	no
(	no	no
Throwable	no	no
throwable	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
,	no	no
throwable	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
,	no	no
es	no	no
)	no	no
;	no	no
FBUtilities	no	yes
.	no	no
waitOnFuture	no	yes
(	no	no
resultList	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

