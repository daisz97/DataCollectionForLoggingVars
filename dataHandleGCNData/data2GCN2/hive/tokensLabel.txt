@	no	no
Override	no	no
public	no	no
List	no	yes
<	no	no
Range	no	yes
>	no	no
getIndexRowRanges	no	no
(	no	no
String	no	yes
column	yes	yes
,	no	no
Range	no	yes
indexRange	yes	no
)	no	no
{	no	no
List	no	yes
<	no	no
Range	no	yes
>	no	no
rowIds	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Range	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Scanner	no	yes
scan	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
col	no	yes
=	no	no
this	no	no
.	no	no
colMap	no	yes
.	no	no
get	no	yes
(	no	no
column	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
col	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no

try	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
indexTable	no	yes
+	no	no
+	no	no
column	no	yes
+	no	no
+	no	no
indexRange	no	yes
)	no	no
;	no	no
Connector	no	yes
conn	no	yes
=	no	no
getConnector	no	yes
(	no	no
)	no	no
;	no	no
scan	no	yes
=	no	no
conn	no	yes
.	no	no
createScanner	no	yes
(	no	no
indexTable	no	yes
,	no	no
auths	no	yes
)	no	no
;	no	no
scan	no	yes
.	no	no
setRange	no	yes
(	no	no
indexRange	no	yes
)	no	no
;	no	no
Text	no	yes
cf	no	yes
=	no	no
new	no	no
Text	no	yes
(	no	no
col	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scan	no	yes
.	no	no
fetchColumnFamily	no	yes
(	no	no
cf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Key	no	no
,	no	no
Value	no	no
>	no	no
entry	no	yes
:	no	no
scan	no	yes
)	no	no
{	no	no
rowIds	yes	yes
.	no	no
add	no	yes
(	no	no
new	no	no
Range	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getColumnQualifier	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rowIds	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
maxRowIds	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
rowIds	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

scan	no	yes
=	no	no
conn	no	yes
.	no	no
createScanner	no	yes
(	no	no
indexTable	yes	yes
,	no	no
auths	no	yes
)	no	no
;	no	no
scan	no	yes
.	no	no
setRange	no	yes
(	no	no
indexRange	no	yes
)	no	no
;	no	no
Text	no	yes
cf	no	yes
=	no	no
new	no	no
Text	no	yes
(	no	no
col	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scan	no	yes
.	no	no
fetchColumnFamily	no	yes
(	no	no
cf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Key	no	no
,	no	no
Value	no	no
>	no	no
entry	no	yes
:	no	no
scan	no	yes
)	no	no
{	no	no
rowIds	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
Range	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getColumnQualifier	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rowIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
maxRowIds	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
rowIds	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rowIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
rowIds	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
AccumuloException	no	no
|	no	no
AccumuloSecurityException	no	no
|	no	no
TableNotFoundException	no	no
e	yes	no
)	no	no
{	no	no

throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
AccumuloSerDeParameters	no	yes
.	no	no
ITERATOR_PUSHDOWN_KEY	no	yes
)	no	no
;	no	no
}	no	no
jobProperties	no	yes
.	no	no
put	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
ITERATOR_PUSHDOWN_KEY	no	yes
,	no	no
useIterators	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
storageType	no	yes
=	no	no
props	no	yes
.	no	no
getProperty	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
DEFAULT_STORAGE_TYPE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
storageType	no	yes
)	no	no
{	no	no
jobProperties	no	yes
.	no	no
put	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
DEFAULT_STORAGE_TYPE	no	yes
,	no	no
storageType	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
authValue	no	yes
=	no	no
props	no	yes
.	no	no
getProperty	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
AUTHORIZATIONS_KEY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
authValue	no	yes
)	no	no
{	no	no
jobProperties	no	yes
.	no	no
put	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
AUTHORIZATIONS_KEY	no	yes
,	no	no
authValue	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
jobProperties	no	yes
)	no	no
;	no	no
Configuration	no	yes
conf	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
helper	no	yes
.	no	no
loadDependentJars	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
connectionParams	no	yes
.	no	no
useSasl	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Connector	no	yes
conn	no	yes
=	no	no
connectionParams	no	yes
.	no	no
getConnector	no	yes
(	no	no
)	no	no
;	no	no
Token	no	yes
<	no	no
?	no	no
extends	no	no
TokenIdentifier	no	yes
>	no	no
accumuloToken	yes	yes
=	no	no
helper	no	yes
.	no	no
setConnectorInfoForInputAndOutput	no	yes
(	no	no
connectionParams	no	yes
,	no	no
conn	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
addTokenFromUserToJobConf	no	no
(	no	no
UserGroupInformation	no	no
user	yes	yes
,	no	no
JobConf	no	no
jobConf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
checkNotNull	no	yes
(	no	no
user	yes	yes
,	no	no
)	no	no
;	no	no
checkNotNull	no	yes
(	no	no
jobConf	no	yes
,	no	no
)	no	no
;	no	no
Token	no	yes
<	no	no
?	no	no
>	no	no
accumuloToken	no	yes
=	no	no
getAccumuloToken	no	yes
(	no	no
user	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
accumuloToken	no	yes
)	no	no
{	no	no

}	no	no
getFieldInited	no	yes
(	no	no
)	no	no
[	no	no
id	yes	yes
]	no	no
=	no	no
true	no	no
;	no	no
ColumnMapping	no	yes
columnMapping	yes	yes
=	no	no
columnMappings	no	yes
.	no	no
get	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no
LazyObjectBase	no	yes
field	no	yes
=	no	no
getFields	no	yes
(	no	no
)	no	no
[	no	no
id	yes	yes
]	no	no
;	no	no
if	no	no
(	no	no
columnMapping	yes	yes
instanceof	no	no
HiveAccumuloMapColumnMapping	no	yes
)	no	no
{	no	no
HiveAccumuloMapColumnMapping	no	yes
mapColumnMapping	no	yes
=	no	no
(	no	no
HiveAccumuloMapColumnMapping	no	yes
)	no	no
columnMapping	yes	yes
;	no	no
LazyAccumuloMap	no	yes
map	no	yes
=	no	no
(	no	no
LazyAccumuloMap	no	yes
)	no	no
field	no	yes
;	no	no
map	no	yes
.	no	no
init	no	yes
(	no	no
row	no	yes
,	no	no
mapColumnMapping	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
value	no	yes
;	no	no
if	no	no
(	no	no
columnMapping	yes	yes
instanceof	no	no
HiveAccumuloRowIdColumnMapping	no	no
)	no	no
{	no	no
value	no	yes
=	no	no
row	no	yes
.	no	no
getRowId	no	yes
(	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
columnMapping	yes	yes
instanceof	no	no
HiveAccumuloColumnMapping	no	yes
)	no	no
{	no	no
HiveAccumuloColumnMapping	no	yes
accumuloColumnMapping	no	yes
=	no	no
(	no	no
HiveAccumuloColumnMapping	no	yes
)	no	no
columnMapping	yes	yes
;	no	no
value	no	yes
=	no	no
row	no	yes
.	no	no
getValue	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
accumuloColumnMapping	no	yes
.	no	no
getColumnFamilyBytes	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
new	no	no
Text	no	yes
(	no	no
accumuloColumnMapping	no	yes
.	no	no
getColumnQualifierBytes	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

public	no	no
static	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
parseMapping	no	no
(	no	no
String	no	no
columnSpec	yes	no
)	no	no
throws	no	no
InvalidColumnMappingException	no	no
{	no	no
int	no	no
index	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
if	no	no
(	no	no
index	no	yes
>=	no	no
columnSpec	yes	no
.	no	no
length	no	no
(	no	no
)	no	no
)	no	no
{	no	no

final	no	no
AccumuloConnectionParameters	no	yes
accumuloParams	no	yes
=	no	no
new	no	no
AccumuloConnectionParameters	no	yes
(	no	no
jobConf	no	yes
)	no	no
;	no	no
final	no	no
Instance	no	yes
instance	no	yes
=	no	no
accumuloParams	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ColumnMapper	no	yes
columnMapper	no	yes
;	no	no
try	no	no
{	no	no
columnMapper	no	yes
=	no	no
getColumnMapper	no	yes
(	no	no
jobConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TooManyAccumuloColumnsException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
JobContext	no	yes
context	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
newJobContext	no	yes
(	no	no
Job	no	yes
.	no	no
getInstance	no	yes
(	no	no
jobConf	no	yes
)	no	no
)	no	no
;	no	no
Path	no	yes
[	no	no
]	no	no
tablePaths	no	yes
=	no	no
FileInputFormat	no	yes
.	no	no
getInputPaths	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Connector	no	yes
connector	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
accumuloParams	no	yes
.	no	no
useSasl	no	no
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AuthenticationToken	no	yes
token	yes	yes
=	no	no
ConfiguratorBase	no	yes
.	no	no
getAuthenticationToken	no	yes
(	no	no
AccumuloInputFormat	no	yes
.	no	no
class	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
token	yes	yes
&&	no	no
!	no	no
jobConf	no	yes
.	no	no
getCredentials	no	no
(	no	no
)	no	no
.	no	no
getAllTokens	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
columnMapper	no	yes
=	no	no
getColumnMapper	no	yes
(	no	no
jobConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TooManyAccumuloColumnsException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
JobContext	no	yes
context	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
newJobContext	no	yes
(	no	no
Job	no	yes
.	no	no
getInstance	no	yes
(	no	no
jobConf	no	yes
)	no	no
)	no	no
;	no	no
Path	no	yes
[	no	no
]	no	no
tablePaths	no	yes
=	no	no
FileInputFormat	no	yes
.	no	no
getInputPaths	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Connector	no	yes
connector	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
accumuloParams	no	no
.	no	no
useSasl	no	no
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AuthenticationToken	no	yes
token	no	yes
=	no	no
ConfiguratorBase	no	yes
.	no	no
getAuthenticationToken	no	yes
(	no	no
AccumuloInputFormat	no	yes
.	no	no
class	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
token	no	yes
&&	no	no
!	no	no
jobConf	no	yes
.	no	no
getCredentials	no	yes
(	no	no
)	no	no
.	no	no
getAllTokens	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
token	no	yes
)	no	no
;	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
jobConf	no	yes
.	no	no
getCredentials	no	yes
(	no	no
)	no	no
.	no	no
getAllTokens	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AuthenticationToken	no	yes
unwrappedToken	yes	yes
=	no	no
ConfiguratorBase	no	yes
.	no	no
unwrapAuthenticationToken	no	yes
(	no	no
jobConf	no	yes
,	no	no
token	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
instance	no	yes
instanceof	no	no
MockInstance	no	no
)	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
setInputFormatMockInstance	no	yes
(	no	no
conf	no	yes
,	no	no
instance	no	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
setInputFormatZooKeeperInstance	no	yes
(	no	no
conf	no	yes
,	no	no
instance	no	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
.	no	no
getZooKeepers	no	yes
(	no	no
)	no	no
,	no	no
accumuloParams	no	yes
.	no	no
useSasl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
accumuloParams	no	yes
.	no	no
useSasl	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
updateInputFormatConfWithAccumuloToken	no	yes
(	no	no
conf	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
,	no	no
accumuloParams	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
setInputFormatConnectorInfo	no	yes
(	no	no
conf	no	yes
,	no	no
accumuloParams	no	yes
.	no	no
getAccumuloUserName	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
PasswordToken	no	yes
(	no	no
accumuloParams	no	yes
.	no	no
getAccumuloPassword	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
setInputTableName	no	yes
(	no	no
conf	no	yes
,	no	no
accumuloParams	no	yes
.	no	no
getAccumuloTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Authorizations	no	yes
auths	no	yes
=	no	no
AccumuloSerDeParameters	no	yes
.	no	no
getAuthorizationsFromConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
auths	no	yes
)	no	no
{	no	no
auths	no	yes
=	no	no
connector	no	yes
.	no	no
securityOperations	no	yes
(	no	no
)	no	no
.	no	no
getUserAuthorizations	no	yes
(	no	no
accumuloParams	no	yes
.	no	no
getAccumuloUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
setScanAuthorizations	no	yes
(	no	no
conf	no	yes
,	no	no
auths	no	yes
)	no	no
;	no	no
addIterators	no	yes
(	no	no
conf	no	yes
,	no	no
iterators	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
ranges	yes	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
setOutputFormatZooKeeperInstance	no	yes
(	no	no
job	no	yes
,	no	no
cnxnParams	no	yes
.	no	no
getAccumuloInstanceName	no	yes
(	no	no
)	no	no
,	no	no
cnxnParams	no	yes
.	no	no
getZooKeepers	no	yes
(	no	no
)	no	no
,	no	no
cnxnParams	no	yes
.	no	no
useSasl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
cnxnParams	no	yes
.	no	no
useSasl	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
updateOutputFormatConfWithAccumuloToken	no	yes
(	no	no
job	no	yes
,	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
,	no	no
cnxnParams	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
getHelper	no	yes
(	no	no
)	no	no
.	no	no
setOutputFormatConnectorInfo	no	yes
(	no	no
job	no	yes
,	no	no
cnxnParams	no	yes
.	no	no
getAccumuloUserName	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
PasswordToken	no	yes
(	no	no
cnxnParams	no	yes
.	no	no
getAccumuloPassword	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
setDefaultAccumuloTableName	no	yes
(	no	no
job	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
indexTableName	no	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
AccumuloIndexParameters	no	yes
.	no	no
INDEXTABLE_NAME	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
indexedColumns	no	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
AccumuloIndexParameters	no	yes
.	no	no
INDEXED_COLUMNS	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnTypes	no	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
final	no	no
boolean	no	no
binaryEncoding	no	yes
=	no	no
ColumnEncoding	no	yes
.	no	no
BINARY	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
DEFAULT_STORAGE_TYPE	no	yes
)	no	no
)	no	no
;	no	no
setAccumuloIndexTableName	no	yes
(	no	no
job	no	yes
,	no	no
indexTableName	no	yes
)	no	no
;	no	no
setAccumuloIndexColumns	no	yes
(	no	no
job	no	yes
,	no	no
indexedColumns	no	yes
)	no	no
;	no	no
setAccumuloStringEncoding	no	yes
(	no	no
job	no	yes
,	no	no
!	no	no
binaryEncoding	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AccumuloSecurityException	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
columnMapper	no	yes
.	no	no
hasRowIdMapping	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
TOTAL_RANGE	no	yes
;	no	no
}	no	no
int	no	no
rowIdOffset	no	yes
=	no	no
columnMapper	no	yes
.	no	no
getRowIdOffset	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
hiveColumnNamesArr	no	yes
=	no	no
conf	no	yes
.	no	no
getStrings	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
hiveColumnNamesArr	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
hiveRowIdColumnName	no	yes
=	no	no
hiveColumnNamesArr	no	yes
[	no	no
rowIdOffset	no	yes
]	no	no
;	no	no
ExprNodeDesc	no	yes
root	no	yes
=	no	no
this	no	no
.	no	no
getExpression	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
root	no	yes
)	no	no
{	no	no
return	no	no
TOTAL_RANGE	no	yes
;	no	no
}	no	no
Object	no	yes
result	yes	yes
=	no	no
generateRanges	no	yes
(	no	no
conf	no	yes
,	no	no
columnMapper	no	yes
,	no	no
hiveRowIdColumnName	no	yes
,	no	no
root	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
result	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
TOTAL_RANGE	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
result	yes	yes
instanceof	no	no
Range	no	no
)	no	no
{	no	no

int	no	no
rowIdOffset	no	yes
=	no	no
columnMapper	no	yes
.	no	no
getRowIdOffset	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
hiveColumnNamesArr	no	yes
=	no	no
conf	no	yes
.	no	no
getStrings	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
hiveColumnNamesArr	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
hiveRowIdColumnName	no	yes
=	no	no
hiveColumnNamesArr	no	yes
[	no	no
rowIdOffset	no	yes
]	no	no
;	no	no
ExprNodeDesc	no	yes
root	no	yes
=	no	no
this	no	no
.	no	no
getExpression	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
root	no	yes
)	no	no
{	no	no
return	no	no
TOTAL_RANGE	no	yes
;	no	no
}	no	no
Object	no	yes
result	yes	yes
=	no	no
generateRanges	no	yes
(	no	no
conf	no	yes
,	no	no
columnMapper	no	yes
,	no	no
hiveRowIdColumnName	no	yes
,	no	no
root	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
result	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
TOTAL_RANGE	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
result	yes	yes
instanceof	no	no
Range	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no
return	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
(	no	no
Range	no	yes
)	no	no
result	yes	yes
)	no	no
;	no	no

}	no	no
boolean	no	no
binaryEncodedRow	no	yes
=	no	no
ColumnEncoding	no	yes
.	no	no
BINARY	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
AccumuloSerDeParameters	no	yes
.	no	no
DEFAULT_STORAGE_TYPE	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
rowIdOffset	no	yes
=	no	no
columnMapper	no	yes
.	no	no
getRowIdOffset	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
hiveColumnNamesArr	no	yes
=	no	no
conf	no	yes
.	no	no
getStrings	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
hiveColumnNamesArr	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
hiveRowIdColumnName	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
rowIdOffset	no	yes
>=	no	no
0	no	no
&&	no	no
rowIdOffset	no	yes
<	no	no
hiveColumnNamesArr	no	yes
.	no	no
length	no	no
)	no	no
{	no	no
hiveRowIdColumnName	no	yes
=	no	no
hiveColumnNamesArr	no	yes
[	no	no
rowIdOffset	no	yes
]	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
hiveColumnNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
hiveColumnNamesArr	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
IndexSearchCondition	no	no
sc	no	yes
:	no	no
getSearchConditions	no	no
(	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
col	no	yes
=	no	no
sc	no	yes
.	no	no
getColumnDesc	no	yes
(	no	no
)	no	no
.	no	no
getColumn	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveRowIdColumnName	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
hiveRowIdColumnName	no	yes
.	no	no
equals	no	no
(	no	no
col	no	yes
)	no	no
)	no	no
{	no	no
HiveAccumuloColumnMapping	no	yes
mapping	no	yes
=	no	no
(	no	no
HiveAccumuloColumnMapping	no	yes
)	no	no
columnMapper	no	yes
.	no	no
getColumnMappingForHiveColumn	no	yes
(	no	no
hiveColumnNames	no	yes
,	no	no
col	no	yes
)	no	no
;	no	no
itrs	yes	yes
.	no	no
add	no	yes
(	no	no
toSetting	no	yes
(	no	no
mapping	no	yes
,	no	no
sc	no	yes
,	no	no
binaryEncodedRow	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
Range	no	yes
andRange	no	yes
:	no	no
andRanges	no	yes
)	no	no
{	no	no
Range	no	yes
intersectedRange	no	yes
=	no	no
andRange	no	yes
.	no	no
clip	no	yes
(	no	no
childRange	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
intersectedRange	no	yes
)	no	no
{	no	no
newRanges	no	yes
.	no	no
add	no	yes
(	no	no
intersectedRange	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
andRanges	no	yes
=	no	no
newRanges	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
nodeOutput	yes	yes
instanceof	no	no
List	no	yes
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
List	no	yes
<	no	no
Range	no	yes
>	no	no
childRanges	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
Range	no	yes
>	no	no
)	no	no
nodeOutput	yes	yes
;	no	no
if	no	no
(	no	no
andRanges	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
andRanges	no	yes
.	no	no
addAll	no	yes
(	no	no
childRanges	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
List	no	yes
<	no	no
Range	no	yes
>	no	no
newRanges	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Range	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Range	no	yes
andRange	no	yes
:	no	no
andRanges	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
Range	no	yes
childRange	no	yes
:	no	no
childRanges	no	yes
)	no	no
{	no	no
Range	no	yes
intersectedRange	no	yes
=	no	no
andRange	no	yes
.	no	no
clip	no	yes
(	no	no
childRange	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
intersectedRange	no	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
{	no	no
,	no	no
}	no	no
)	no	no
protected	no	no
AccumuloRowIdFactory	no	no
createRowIdFactory	no	no
(	no	no
Configuration	no	no
job	no	no
,	no	no
Properties	no	no
tbl	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
factoryClassName	yes	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
COMPOSITE_ROWID_FACTORY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
factoryClassName	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

addRow	no	yes
(	no	no
writer	no	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
6	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
true	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
1	no	no
,	no	no
,	no	no
)	no	no
;	no	no
addRow	no	yes
(	no	no
writer	no	yes
,	no	no
false	no	no
,	no	no
,	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
AccumuloConnectionParameters	no	yes
connectionParams	no	yes
=	no	no
Mockito	no	yes
.	no	no
mock	no	yes
(	no	no
AccumuloConnectionParameters	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
AccumuloStorageHandler	no	yes
storageHandler	no	yes
=	no	no
Mockito	no	yes
.	no	no
mock	no	yes
(	no	no
AccumuloStorageHandler	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
Mockito	no	yes
.	no	no
when	no	yes
(	no	no
connectionParams	no	yes
.	no	no
getConnector	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
thenReturn	no	yes
(	no	no
conn	no	yes
)	no	no
;	no	no
handler	no	yes
.	no	no
setConnectParams	no	yes
(	no	no
connectionParams	no	yes
)	no	no
;	no	no
return	no	no
handler	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
AccumuloSecurityException	no	no
|	no	no
AccumuloException	no	no
|	no	no
TableExistsException	no	no
|	no	no
TableNotFoundException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
LazyObjectBase	no	yes
createRowId	no	no
(	no	no
ObjectInspector	no	no
inspector	yes	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
LazyObjectBase	no	yes
lazyObj	yes	yes
=	no	no
LazyFactory	no	yes
.	no	no
createLazyObject	no	yes
(	no	no
inspector	yes	yes
,	no	no
ColumnEncoding	no	yes
.	no	no
BINARY	no	yes
==	no	no
rowIdMapping	no	yes
.	no	no
getEncoding	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
getField	no	no
(	no	no
int	no	no
fieldID	no	no
)	no	no
{	no	no
String	no	yes
bytesAsString	yes	yes
=	no	no
new	no	no
String	no	yes
(	no	no
bytes	yes	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
start	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
getField	no	no
(	no	no
int	no	no
fieldID	no	no
)	no	no
{	no	no
String	yes	yes
bytesAsString	no	yes
=	no	no
new	no	no
String	yes	yes
(	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
start	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
bytesAsString	no	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
char	no	no
separator	no	yes
=	no	no
(	no	no
char	no	no
)	no	no
(	no	no
(	no	no
int	no	no
)	no	no
oi	no	yes
.	no	no
getSeparator	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
getField	no	no
(	no	no
int	no	no
fieldID	no	no
)	no	no
{	no	no
String	no	yes
bytesAsString	no	yes
=	no	no
new	no	no
String	no	yes
(	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
start	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
bytesAsString	no	yes
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
char	no	no
separator	no	yes
=	no	no
(	no	no
char	no	no
)	no	no
(	no	no
(	no	no
int	no	no
)	no	no
oi	no	yes
.	no	no
getSeparator	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
(	no	no
int	no	no
)	no	no
separator	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
fieldBytes	yes	yes
=	no	no
StringUtils	no	yes
.	no	no
split	no	yes
(	no	no
bytesAsString	no	yes
,	no	no
separator	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getSQLKeywords	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getStringFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getNumericFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getSystemFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getStringFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getNumericFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getSystemFunctions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keywords	no	yes
+=	no	no
+	no	no
beeLine	no	yes
.	no	no
getDatabaseConnection	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseMetaData	no	yes
(	no	no
)	no	no
.	no	no
getTimeDateFunctions	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
verifyCMD	no	no
(	no	no
String	no	yes
CMD	no	yes
,	no	no
String	no	yes
keywords	no	no
,	no	no
OutputStream	no	no
os	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
options	no	yes
,	no	no
int	no	no
retCode	no	yes
,	no	no
boolean	no	no
contains	no	no
)	no	no
{	no	no
executeCMD	no	yes
(	no	no
options	no	yes
,	no	no
CMD	no	yes
,	no	no
retCode	no	yes
)	no	no
;	no	no
String	no	yes
output	yes	yes
=	no	no
os	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
inputFileName	no	no
.	no	no
endsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
is	no	yes
=	no	no
new	no	no
GzipCompressorInputStream	no	yes
(	no	no
new	no	no
FileInputStream	no	yes
(	no	no
inputFile	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
is	no	yes
=	no	no
new	no	no
FileInputStream	no	yes
(	no	no
inputFile	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
TarArchiveInputStream	no	yes
debInputStream	no	yes
=	no	no
(	no	no
TarArchiveInputStream	no	yes
)	no	no
new	no	no
ArchiveStreamFactory	no	yes
(	no	no
)	no	no
.	no	no
createArchiveInputStream	no	yes
(	no	no
,	no	no
is	no	yes
)	no	no
;	no	no
TarArchiveEntry	no	yes
entry	no	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
(	no	no
entry	no	yes
=	no	no
(	no	no
TarArchiveEntry	no	yes
)	no	no
debInputStream	no	yes
.	no	no
getNextEntry	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
final	no	no
File	no	yes
outputFile	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
outputDir	no	yes
,	no	no
entry	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	yes	yes
.	no	no
toPath	no	no
(	no	no
)	no	no
.	no	no
toAbsolutePath	no	no
(	no	no
)	no	no
.	no	no
normalize	no	no
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
outputDir	no	yes
.	no	no
toPath	no	no
(	no	no
)	no	no
.	no	no
toAbsolutePath	no	no
(	no	no
)	no	no
.	no	no
normalize	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
entry	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
flatten	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
outputFile	no	yes
.	no	no
toPath	no	no
(	no	no
)	no	no
.	no	no
toAbsolutePath	no	no
(	no	no
)	no	no
.	no	no
normalize	no	no
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
outputDir	no	yes
.	no	no
toPath	no	no
(	no	no
)	no	no
.	no	no
toAbsolutePath	no	no
(	no	no
)	no	no
.	no	no
normalize	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
entry	no	no
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
flatten	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	no	yes
.	no	no
mkdirs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
final	no	no
OutputStream	no	yes
outputFileStream	no	yes
;	no	no
if	no	no
(	no	no
flatten	no	no
)	no	no
{	no	no
File	no	yes
flatOutputFile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
outputDir	no	yes
,	no	no
outputFile	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	yes	yes
.	no	no
format	no	yes
(	no	no
,	no	no
flatOutputFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
flatten	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
outputFile	yes	yes
.	no	no
mkdirs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
final	no	no
OutputStream	no	yes
outputFileStream	no	yes
;	no	no
if	no	no
(	no	no
flatten	no	no
)	no	no
{	no	no
File	no	yes
flatOutputFile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
outputDir	no	yes
,	no	no
outputFile	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
flatOutputFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
outputFileStream	no	yes
=	no	no
new	no	no
FileOutputStream	no	yes
(	no	no
flatOutputFile	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
outputFile	yes	yes
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
outputFile	yes	yes
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
.	no	no
getAbsoluteFile	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
mkdir	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
boolean	no	no
copy	no	no
(	no	no
FileSystem	no	no
srcFS	no	yes
,	no	no
Path	no	no
src	no	yes
,	no	no
FileSystem	no	no
dstFS	no	no
,	no	no
Path	no	no
dst	no	no
,	no	no
boolean	no	no
deleteSource	no	no
,	no	no
boolean	no	no
overwrite	no	no
,	no	no
HiveConf	no	no
conf	yes	no
,	no	no
HadoopShims	no	no
shims	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
boolean	no	no
copied	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
triedDistcp	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
srcFS	no	yes
.	no	no
getUri	no	no
(	no	no
)	no	no
.	no	no
getScheme	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ContentSummary	no	yes
srcContentSummary	yes	yes
=	no	no
srcFS	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
src	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcContentSummary	yes	yes
.	no	no
getFileCount	no	no
(	no	no
)	no	no
>	no	no
conf	yes	no
.	no	no
getLongVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_EXEC_COPYFILE_MAXNUMFILES	no	no
)	no	no
&&	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	no
(	no	no
)	no	no
>	no	no
conf	yes	no
.	no	no
getLongVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_EXEC_COPYFILE_MAXSIZE	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
boolean	no	no
copy	no	no
(	no	no
FileSystem	no	no
srcFS	no	yes
,	no	no
Path	no	no
src	no	yes
,	no	no
FileSystem	no	no
dstFS	no	no
,	no	no
Path	no	no
dst	no	no
,	no	no
boolean	no	no
deleteSource	no	no
,	no	no
boolean	no	no
overwrite	no	no
,	no	no
HiveConf	no	yes
conf	yes	yes
,	no	no
HadoopShims	no	no
shims	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
boolean	no	no
copied	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
triedDistcp	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
srcFS	no	yes
.	no	no
getUri	no	no
(	no	no
)	no	no
.	no	no
getScheme	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ContentSummary	no	yes
srcContentSummary	yes	yes
=	no	no
srcFS	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
src	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcContentSummary	yes	yes
.	no	no
getFileCount	no	no
(	no	no
)	no	no
>	no	no
conf	yes	yes
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXEC_COPYFILE_MAXNUMFILES	no	no
)	no	no
&&	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
>	no	no
conf	yes	yes
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXEC_COPYFILE_MAXSIZE	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
conf	yes	yes
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXEC_COPYFILE_MAXSIZE	no	yes
)	no	no
+	no	no
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
distCp	no	no
(	no	no
FileSystem	no	no
srcFS	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
srcPaths	yes	no
,	no	no
Path	no	no
dst	yes	no
,	no	no
boolean	no	no
deleteSource	no	no
,	no	no
UserGroupInformation	no	no
proxyUser	yes	no
,	no	no
HiveConf	no	no
conf	no	no
,	no	no
HadoopShims	no	no
shims	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	no
,	no	no
Configuration	no	no
conf	no	no
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	yes
,	no	no
Configuration	no	no
conf	no	no
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
boolean	no	no
result	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
purge	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	yes
,	no	no
Path	no	no
f	yes	yes
,	no	no
Configuration	no	no
conf	no	yes
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
boolean	no	no
result	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
purge	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
=	no	no
Trash	no	yes
.	no	no
moveToAppropriateTrash	no	yes
(	no	no
fs	no	yes
,	no	no
f	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
ioe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
result	no	yes
=	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
f	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
result	no	yes
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
rename	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
sourcePath	yes	no
,	no	no
Path	no	no
destPath	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

String	no	yes
[	no	no
]	no	no
localDirs	no	yes
=	no	no
StringUtils	no	yes
.	no	no
getTrimmedStrings	no	yes
(	no	no
localDirList	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
localDirs	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
return	no	no
createFileInTmp	no	yes
(	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
,	no	no
isDirectory	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
path	no	yes
=	no	no
localDirs	no	yes
[	no	no
random	no	yes
.	no	no
nextInt	no	yes
(	no	no
localDirs	no	yes
.	no	no
length	no	yes
)	no	no
]	no	no
;	no	no
if	no	no
(	no	no
path	no	yes
==	no	no
null	no	no
||	no	no
path	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
createFileInTmp	no	yes
(	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
,	no	no
isDirectory	no	yes
)	no	no
;	no	no
}	no	no
File	no	yes
targetDir	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
targetDir	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
targetDir	yes	yes
.	no	no
mkdirs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
createFileInTmp	no	yes
(	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
+	no	no
targetDir	yes	yes
,	no	no
isDirectory	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
File	no	yes
file	no	yes
=	no	no
File	no	yes
.	no	no
createTempFile	no	yes
(	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
targetDir	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
isDirectory	no	yes
&&	no	no
(	no	no
!	no	no
file	no	yes
.	no	no
delete	no	no
(	no	no
)	no	no
||	no	no
!	no	no
file	no	yes
.	no	no
mkdirs	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
createFileInTmp	no	yes
(	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
+	no	no
file	no	yes
+	no	no
,	no	no
isDirectory	no	yes
)	no	no
;	no	no
}	no	no
file	no	yes
.	no	no
deleteOnExit	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
file	no	yes
;	no	no

return	no	no
Collections	no	yes
.	no	no
emptySet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
result	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
paths	no	yes
=	no	no
pathString	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
String	no	yes
path	yes	yes
:	no	no
paths	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getURI	no	yes
(	no	no
path	yes	yes
)	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
p	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fileStatus	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
files	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
p	no	yes
,	no	no
new	no	no
GlobFilter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
file	no	yes
:	no	no
files	no	yes
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
file	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
p	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
FileNotFoundException	no	no
fnfe	no	no
)	no	no
{	no	no

Set	no	yes
<	no	no
String	no	yes
>	no	no
result	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
paths	no	yes
=	no	no
pathString	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
String	no	yes
path	yes	yes
:	no	no
paths	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getURI	no	yes
(	no	no
path	yes	yes
)	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
p	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fileStatus	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
files	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
p	no	yes
,	no	no
new	no	no
GlobFilter	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
file	no	yes
:	no	no
files	no	yes
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
file	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
p	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
FileNotFoundException	no	no
fnfe	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
tenuredGenPool	no	no
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
MemoryPoolMXBean	no	no
pool	no	yes
:	no	no
ManagementFactory	no	no
.	no	no
getMemoryPoolMXBeans	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
long	no	no
memoryThreshold	yes	yes
=	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
floor	no	yes
(	no	no
pool	no	yes
.	no	no
getUsage	no	yes
(	no	no
)	no	no
.	no	no
getMax	no	yes
(	no	no
)	no	no
*	no	no
threshold	no	yes
)	no	no
;	no	no
final	no	no
boolean	no	no
isTenured	no	yes
=	no	no
isTenured	no	yes
(	no	no
pool	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isTenured	no	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
final	no	no
boolean	no	no
isCollectionUsageThresholdSupported	no	yes
=	no	no
pool	no	yes
.	no	no
isCollectionUsageThresholdSupported	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isCollectionUsageThresholdSupported	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
memoryThreshold	yes	yes
)	no	no
;	no	no
pool	no	yes
.	no	no
setCollectionUsageThreshold	no	yes
(	no	no
memoryThreshold	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
final	no	no
boolean	no	no
isUsageThresholdSupported	no	yes
=	no	no
pool	no	yes
.	no	no
isUsageThresholdSupported	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isUsageThresholdSupported	no	yes
)	no	no
{	no	no

public	no	no
static	no	no
int	no	no
getNumBitVectorsForNDVEstimation	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
Exception	no	yes
{	no	no
int	no	no
numBitVectors	no	yes
;	no	no
float	no	no
percentageError	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_STATS_NDV_ERROR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
percentageError	yes	yes
<	no	no
0.0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
2.4	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
3.4	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
4.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
512	no	no
;	no	no

throw	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
2.4	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
3.4	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
4.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
512	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
6.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
256	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
3.4	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
4.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
512	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
6.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
256	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
9.7	no	no
)	no	no
{	no	no

numBitVectors	no	yes
=	no	no
1024	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
4.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
512	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
6.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
256	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
9.7	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
128	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
4.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
512	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
6.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
256	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
9.7	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
128	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
13.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
64	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
6.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
256	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
9.7	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
128	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
13.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
64	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
19.6	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
32	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
9.7	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
128	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
13.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
64	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
19.6	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
32	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
28.2	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
16	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
13.8	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
64	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
19.6	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
32	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
28.2	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
16	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
40.9	no	no
)	no	no
{	no	no

numBitVectors	no	yes
=	no	no
64	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
19.6	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
32	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
28.2	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
16	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
percentageError	yes	yes
<=	no	no
40.9	no	no
)	no	no
{	no	no
numBitVectors	no	yes
=	no	no
8	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
percentageError	yes	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
cleanUpScratchDir	no	no
(	no	no
HiveConf	no	yes
hiveConf	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_START_CLEANUP_SCRATCHDIR	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
hiveScratchDir	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
get	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SCRATCHDIR	no	yes
.	no	no
varname	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Path	no	yes
jobScratchDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
hiveScratchDir	yes	yes
)	no	no
;	no	no

params	no	yes
.	no	no
setKeyStore	no	yes
(	no	no
keyStorePath	no	yes
,	no	no
keyStorePassWord	no	yes
,	no	no
KeyManagerFactory	no	yes
.	no	no
getDefaultAlgorithm	no	yes
(	no	no
)	no	no
,	no	no
KeyStore	no	yes
.	no	no
getDefaultType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
InetSocketAddress	no	yes
serverAddress	no	yes
;	no	no
if	no	no
(	no	no
hiveHost	no	yes
==	no	no
null	no	no
||	no	no
hiveHost	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hiveHost	no	yes
,	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
TServerSocket	no	yes
thriftServerSocket	no	yes
=	no	no
TSSLTransportFactory	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
portNum	no	yes
,	no	no
0	no	no
,	no	no
serverAddress	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
sslVersionBlacklistLocal	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
sslVersion	no	yes
:	no	no
sslVersionBlacklist	no	no
)	no	no
{	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
add	no	yes
(	no	no
sslVersion	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SSLServerSocket	no	yes
sslServerSocket	no	yes
=	no	no
(	no	no
SSLServerSocket	no	yes
)	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
enabledProtocols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
protocol	yes	no
:	no	no
sslServerSocket	no	yes
.	no	no
getEnabledProtocols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
contains	no	no
(	no	no
protocol	yes	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hiveHost	no	yes
,	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
TServerSocket	no	yes
thriftServerSocket	no	yes
=	no	no
TSSLTransportFactory	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
portNum	no	yes
,	no	no
0	no	no
,	no	no
serverAddress	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
sslVersionBlacklistLocal	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
sslVersion	no	yes
:	no	no
sslVersionBlacklist	no	no
)	no	no
{	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
add	no	yes
(	no	no
sslVersion	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SSLServerSocket	no	yes
sslServerSocket	yes	yes
=	no	no
(	no	no
SSLServerSocket	no	yes
)	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
enabledProtocols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
protocol	no	yes
:	no	no
sslServerSocket	yes	yes
.	no	no
getEnabledProtocols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
contains	no	no
(	no	no
protocol	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
protocol	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
enabledProtocols	no	yes
.	no	no
add	no	yes
(	no	no
protocol	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
sslServerSocket	yes	yes
.	no	no
setEnabledProtocols	no	yes
(	no	no
enabledProtocols	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
print	no	no
(	no	no
JSONObject	no	no
inputObject	yes	no
,	no	no
PrintStream	no	no
outputStream	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
line	yes	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
(	no	no
line	yes	yes
=	no	no
in	no	no
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

if	no	no
(	no	no
reporterClasses	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
for	no	no
(	no	no
String	no	no
reporterClass	yes	yes
:	no	no
reporterClasses	no	no
)	no	no
{	no	no
Class	no	yes
name	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
name	no	yes
=	no	no
conf	no	yes
.	no	no
getClassByName	no	yes
(	no	no
reporterClass	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
reporterClass	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Constructor	no	yes
constructor	no	yes
=	no	no
name	no	yes
.	no	no
getConstructor	no	yes
(	no	no
MetricRegistry	no	yes
.	no	no
class	no	no
,	no	no
HiveConf	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
CodahaleReporter	no	yes
reporter	no	yes
=	no	no
(	no	no
CodahaleReporter	no	yes
)	no	no
constructor	no	yes
.	no	no
newInstance	no	yes
(	no	no
metricRegistry	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
reporter	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
reporters	no	yes
.	no	no
add	no	yes
(	no	no
reporter	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchMethodException	no	no
|	no	no
InstantiationException	no	no
|	no	no
IllegalAccessException	no	no
|	no	no
InvocationTargetException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
Path	no	yes
tmpFile	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
json	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
json	no	yes
=	no	no
jsonWriter	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
metricRegistry	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JsonProcessingException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
tmpFile	no	yes
=	no	no
Files	no	yes
.	no	no
createTempFile	no	yes
(	no	no
metricsDir	no	yes
,	no	no
,	no	no
,	no	no
FILE_ATTRS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no

String	no	yes
json	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
json	no	yes
=	no	no
jsonWriter	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
metricRegistry	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JsonProcessingException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
tmpFile	no	yes
=	no	no
Files	no	yes
.	no	no
createTempFile	no	yes
(	no	no
metricsDir	no	yes
,	no	no
,	no	no
,	no	no
FILE_ATTRS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no

LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
tmpFile	yes	yes
=	no	no
Files	no	yes
.	no	no
createTempFile	no	yes
(	no	no
metricsDir	no	yes
,	no	no
,	no	no
,	no	no
FILE_ATTRS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	yes
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	no	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	no	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	no
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no

catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	no
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	no	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no

catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	yes
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Files	no	yes
.	no	no
move	no	yes
(	no	no
tmpFile	yes	yes
,	no	no
path	no	yes
,	no	no
StandardCopyOption	no	yes
.	no	no
ATOMIC_MOVE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
tmpFile	yes	yes
,	no	no
path	no	yes
)	no	no
;	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
confPath	no	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
=	no	no
checkConfigFile	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
confPath	no	yes
,	no	no
name	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
homePath	no	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
nameInConf	no	yes
=	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
name	no	yes
;	no	no
result	no	yes
=	no	no
checkConfigFile	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
homePath	no	yes
,	no	no
nameInConf	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
URL	no	yes
sourceUrl	no	yes
=	no	no
HiveConf	no	yes
.	no	no
class	no	no
.	no	no
getProtectionDomain	no	yes
(	no	no
)	no	no
.	no	no
getCodeSource	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
;	no	no
URI	no	yes
jarUri	no	yes
=	no	no
sourceUrl	no	yes
.	no	no
getProtocol	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
?	no	no
new	no	no
URI	no	yes
(	no	no
sourceUrl	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
sourceUrl	no	yes
.	no	no
toURI	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
parent	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
jarUri	no	yes
)	no	no
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
parent	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
checkConfigFile	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
parent	no	yes
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
,	no	no
nameInConf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
homePath	no	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
nameInConf	no	yes
=	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
name	no	yes
;	no	no
result	yes	yes
=	no	no
checkConfigFile	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
homePath	no	yes
,	no	no
nameInConf	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
URL	no	yes
sourceUrl	no	yes
=	no	no
HiveConf	no	yes
.	no	no
class	no	no
.	no	no
getProtectionDomain	no	yes
(	no	no
)	no	no
.	no	no
getCodeSource	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
;	no	no
URI	no	yes
jarUri	no	yes
=	no	no
sourceUrl	no	yes
.	no	no
getProtocol	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
?	no	no
new	no	no
URI	no	yes
(	no	no
sourceUrl	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
sourceUrl	no	yes
.	no	no
toURI	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
parent	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
jarUri	no	yes
)	no	no
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
parent	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	yes	yes
=	no	no
checkConfigFile	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
parent	no	yes
.	no	no
getParentFile	no	yes
(	no	no
)	no	no
,	no	no
nameInConf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
doLog	no	no
)	no	no
{	no	no

public	no	no
String	no	yes
getLogIdVar	no	no
(	no	no
String	no	yes
defaultValue	yes	no
)	no	no
{	no	no
String	no	yes
retval	no	yes
=	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_LOG_TRACE_ID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
EMPTY	no	no
.	no	no
equals	no	no
(	no	no
retval	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
String	no	yes
getNonMrEngines	no	no
(	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
engines	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
ConfVars	no	yes
.	no	no
HIVE_EXECUTION_ENGINE	no	yes
.	no	no
getValidStringValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
engines	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
validNonMrEngines	yes	yes
=	no	no
String	no	yes
.	no	no
join	no	yes
(	no	no
,	no	no
engines	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
perfLogBegin	no	no
(	no	no
String	no	no
callerName	yes	no
,	no	no
String	no	no
method	yes	yes
)	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
startTimes	no	yes
.	no	no
put	no	yes
(	no	no
method	yes	yes
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
startTime	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Long	no	yes
startTime	no	yes
=	no	no
startTimes	no	yes
.	no	no
get	no	yes
(	no	no
method	no	yes
)	no	no
;	no	no
long	no	no
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
endTimes	no	yes
.	no	no
put	no	yes
(	no	no
method	no	yes
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
endTime	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
duration	no	yes
=	no	no
startTime	no	yes
==	no	no
null	no	no
?	no	no
-	no	no
1	no	no
:	no	no
endTime	no	yes
-	no	no
startTime	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
method	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
startTime	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
startTime	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
endTime	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
startTime	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
duration	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
callerName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
additionalInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
additionalInfo	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
startupShutdownMessage	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
clazz	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
args	no	no
,	no	no
final	no	no
org	no	no
.	no	no
slf4j	no	no
.	no	no
Logger	no	no
LOG	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
hostname	no	yes
=	no	no
getHostname	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
classname	yes	yes
=	no	no
clazz	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
startupShutdownMessage	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
clazz	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
args	no	yes
,	no	no
final	no	no
org	no	no
.	no	no
slf4j	no	no
.	no	no
Logger	no	no
LOG	no	yes
)	no	no
{	no	no
final	no	no
String	no	yes
hostname	yes	yes
=	no	no
getHostname	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
classname	yes	yes
=	no	no
clazz	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
toStartupShutdownString	no	yes
(	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
+	no	no
classname	yes	yes
,	no	no
+	no	no
hostname	yes	yes
,	no	no
+	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
args	no	yes
)	no	no
,	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
,	no	no
+	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
,	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getRevision	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getDate	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
)	no	no
;	no	no
ShutdownHookManager	no	no
.	no	no
addShutdownHook	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no

public	no	no
static	no	no
Process	no	no
runCmdAsync	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
cmd	yes	no
)	no	no
{	no	no
try	no	no
{	no	no

return	no	no
;	no	no
}	no	no
listBeans	no	yes
(	no	no
jg	no	yes
,	no	no
new	no	no
ObjectName	no	yes
(	no	no
splitStrings	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
,	no	no
splitStrings	no	yes
[	no	no
1	no	no
]	no	no
,	no	no
response	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
qry	no	yes
=	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
qry	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
qry	no	yes
=	no	no
;	no	no
}	no	no
listBeans	no	yes
(	no	no
jg	no	yes
,	no	no
new	no	no
ObjectName	no	yes
(	no	no
qry	no	yes
)	no	no
,	no	no
null	no	no
,	no	no
response	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
jg	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
jg	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
writer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_INTERNAL_SERVER_ERROR	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
listBeans	no	no
(	no	no
JsonGenerator	no	no
jg	no	no
,	no	no
ObjectName	no	no
qry	yes	no
,	no	no
String	no	no
attribute	no	no
,	no	no
HttpServletResponse	no	no
response	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

MBeanInfo	no	yes
minfo	no	yes
;	no	no
String	no	yes
code	no	yes
=	no	no
;	no	no
Object	no	yes
attributeinfo	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
minfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getMBeanInfo	no	yes
(	no	no
oname	yes	yes
)	no	no
;	no	no
code	no	yes
=	no	no
minfo	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
prs	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
code	no	yes
)	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
;	no	no
code	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attribute	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	no
)	no	no
{	no	no

Object	no	yes
attributeinfo	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
minfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getMBeanInfo	no	yes
(	no	no
oname	yes	yes
)	no	no
;	no	no
code	no	yes
=	no	no
minfo	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
prs	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
code	no	yes
)	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
;	no	no
code	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attribute	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no

minfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getMBeanInfo	no	yes
(	no	no
oname	yes	yes
)	no	no
;	no	no
code	no	yes
=	no	no
minfo	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
prs	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
code	no	yes
)	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
;	no	no
code	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attribute	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no

String	no	yes
prs	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
code	no	yes
)	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
;	no	no
code	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attribute	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
prs	yes	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ReflectionException	no	no
e	yes	yes
)	no	no
{	no	no

code	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attribute	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
prs	no	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ReflectionException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InstanceNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IntrospectionException	no	no
e	yes	yes
)	no	no
{	no	no

prs	no	yes
=	no	no
attribute	no	yes
;	no	no
attributeinfo	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
prs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ReflectionException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
prs	no	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InstanceNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IntrospectionException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
qry	yes	yes
+	no	no
+	no	no
oname	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no

private	no	no
void	no	no
writeAttribute	no	no
(	no	no
JsonGenerator	no	no
jg	no	no
,	no	no
ObjectName	no	no
oname	yes	yes
,	no	no
MBeanAttributeInfo	no	no
attr	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
attr	no	yes
.	no	no
isReadable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
attName	yes	yes
=	no	no
attr	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
attName	yes	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Object	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
attName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeMBeanException	no	no
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	no
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
UnsupportedOperationException	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
String	no	yes
attName	yes	yes
=	no	no
attr	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
attName	yes	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Object	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
attName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeMBeanException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
UnsupportedOperationException	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeErrorException	no	no
e	yes	yes
)	no	no
{	no	no

if	no	no
(	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
||	no	no
attName	yes	yes
.	no	no
indexOf	no	no
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Object	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
attName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeMBeanException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
UnsupportedOperationException	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeErrorException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no

Object	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
mBeanServer	no	yes
.	no	no
getAttribute	no	yes
(	no	no
oname	yes	yes
,	no	no
attName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeMBeanException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
UnsupportedOperationException	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeErrorException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
RuntimeMBeanException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
UnsupportedOperationException	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeErrorException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AttributeNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MBeanException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
attName	yes	yes
+	no	no
+	no	no
oname	yes	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
void	no	no
configureLogger	no	no
(	no	no
final	no	no
ConfLoggers	no	no
confLoggers	no	no
)	no	no
{	no	no
if	no	no
(	no	no
confLoggers	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ConfLogger	no	no
logger	no	yes
:	no	no
confLoggers	no	no
.	no	no
getLoggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
loggerName	yes	yes
=	no	no
logger	no	yes
.	no	no
getLogger	no	yes
(	no	no
)	no	no
;	no	no
Level	no	yes
logLevel	yes	yes
=	no	no
Level	no	yes
.	no	no
getLevel	no	yes
(	no	no
logger	no	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
logLevel	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
loggerName	yes	yes
,	no	no
logger	no	yes
.	no	no
getLevel	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
LoggerConfig	no	yes
loggerConfig	no	yes
=	no	no
conf	no	yes
.	no	no
getLoggerConfig	no	yes
(	no	no
loggerName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
loggerName	yes	yes
.	no	no
equals	no	no
(	no	no
LogManager	no	no
.	no	no
ROOT_LOGGER_NAME	no	no
)	no	no
&&	no	no
loggerConfig	no	yes
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
LogManager	no	no
.	no	no
ROOT_LOGGER_NAME	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
loggerName	yes	yes
,	no	no
logLevel	yes	yes
)	no	no
;	no	no
}	no	no
conf	no	yes
.	no	no
addLogger	no	yes
(	no	no
loggerName	yes	yes
,	no	no
new	no	no
LoggerConfig	no	yes
(	no	no
loggerName	yes	yes
,	no	no
logLevel	yes	yes
,	no	no
true	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
doGet	no	no
(	no	no
final	no	no
HttpServletRequest	no	no
req	no	yes
,	no	no
final	no	no
HttpServletResponse	no	no
resp	no	no
)	no	no
throws	no	no
ServletException	no	no
,	no	no
IOException	no	no
{	no	no
String	no	yes
absoluteDiskPath	no	yes
=	no	no
getServletContext	no	yes
(	no	no
)	no	no
.	no	no
getRealPath	no	yes
(	no	no
req	no	yes
.	no	no
getPathInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
File	no	yes
requestedFile	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
absoluteDiskPath	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
requestedFile	yes	yes
.	no	no
length	no	no
(	no	no
)	no	no
<	no	no
100	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
logout	no	no
(	no	no
UserIdentity	no	no
user	yes	yes
)	no	no
{	no	no
users	no	yes
.	no	no
remove	no	yes
(	no	no
user	yes	yes
.	no	no
getUserPrincipal	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
jarFileName1	no	yes
=	no	no
tmpDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
;	no	no
String	no	yes
jarFileName2	no	yes
=	no	no
tmpDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
;	no	no
File	no	yes
jarFile1	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
jarFileName1	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
commons	no	yes
.	no	no
io	no	yes
.	no	no
FileUtils	no	yes
.	no	no
touch	no	yes
(	no	no
jarFile1	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
jars	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getJarFilesByPath	no	yes
(	no	no
tmpDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
+	no	no
jarFileName1	no	yes
)	no	no
,	no	no
jars	no	yes
)	no	no
;	no	no
jars	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getJarFilesByPath	no	yes
(	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
jars	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
File	no	yes
jarFile2	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
jarFileName2	no	yes
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
commons	no	yes
.	no	no
io	no	yes
.	no	no
FileUtils	no	yes
.	no	no
touch	no	yes
(	no	no
jarFile2	no	yes
)	no	no
;	no	no
String	no	yes
newPath	no	yes
=	no	no
+	no	no
jarFileName1	no	yes
+	no	no
+	no	no
+	no	no
jarFileName2	no	yes
+	no	no
;	no	no
jars	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getJarFilesByPath	no	yes
(	no	no
newPath	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
+	no	no
jarFileName1	no	yes
,	no	no
+	no	no
jarFileName2	no	yes
)	no	no
,	no	no
jars	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

try	no	no
{	no	no
connection	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
url	no	yes
,	no	no
user	no	yes
,	no	no
pass	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
result	no	yes
.	no	no
set	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
connection	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
PreparedStatement	no	yes
ps	no	yes
=	no	no
connection	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
(	no	no
(	no	no
StringObjectInspector	no	yes
)	no	no
argumentOI	no	yes
[	no	no
3	no	no
]	no	no
)	no	no
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
arguments	no	yes
[	no	no
3	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
4	no	no
;	no	no
i	no	yes
<	no	no
arguments	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
PrimitiveObjectInspector	no	yes
poi	no	yes
=	no	no
(	no	no
(	no	no
PrimitiveObjectInspector	no	yes
)	no	no
argumentOI	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
ps	no	yes
.	no	no
setObject	no	yes
(	no	no
i	no	yes
-	no	no
3	no	no
,	no	no
poi	no	yes
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
arguments	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ps	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
ps	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
set	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

static	no	no
void	no	no
updateKafkaIngestionSpec	no	no
(	no	no
String	no	yes
overlordAddress	no	no
,	no	no
KafkaSupervisorSpec	no	no
spec	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
task	yes	yes
=	no	no
JSON_MAPPER	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
spec	no	yes
)	no	no
;	no	no
CONSOLE	no	yes
.	no	no
printInfo	no	yes
(	no	no
,	no	no
task	yes	yes
)	no	no
;	no	no

static	no	no
void	no	no
updateKafkaIngestionSpec	no	no
(	no	no
String	no	yes
overlordAddress	no	yes
,	no	no
KafkaSupervisorSpec	no	no
spec	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
task	no	yes
=	no	no
JSON_MAPPER	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
spec	no	yes
)	no	no
;	no	no
CONSOLE	no	yes
.	no	no
printInfo	no	yes
(	no	no
,	no	no
task	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
task	no	yes
)	no	no
;	no	no
StringFullResponseHolder	no	yes
response	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getResponseFromCurrentLeader	no	yes
(	no	no
DruidStorageHandler	no	yes
.	no	no
getHttpClient	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
Request	no	yes
(	no	no
HttpMethod	no	yes
.	no	no
POST	no	yes
,	no	no
new	no	no
URL	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
overlordAddress	no	yes
)	no	no
)	no	no
)	no	no
.	no	no
setContent	no	yes
(	no	no
,	no	no
JSON_MAPPER	no	yes
.	no	no
writeValueAsBytes	no	yes
(	no	no
spec	no	yes
)	no	no
)	no	no
,	no	no
new	no	no
StringFullResponseHandler	no	yes
(	no	no
Charset	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
getStatus	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
HttpResponseStatus	no	no
.	no	no
OK	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
spec	no	yes
.	no	no
getDataSchema	no	yes
(	no	no
)	no	no
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
getPartitionKeysSize	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
getSd	no	no
(	no	no
)	no	no
.	no	no
getBucketColsSize	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
dataSourceName	yes	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dataSourceName	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
dataSourceName	yes	yes
=	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
getConnector	no	yes
(	no	no
)	no	no
.	no	no
createSegmentTable	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
existingDataSources	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getAllDataSourceNames	no	yes
(	no	no
getConnector	no	yes
(	no	no
)	no	no
,	no	no
getDruidMetadataStorageTablesConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
DataSegment	no	yes
>	no	no
loadAndCommitDruidSegments	no	no
(	no	no
Table	no	no
table	no	yes
,	no	no
boolean	no	no
overwrite	no	no
,	no	no
List	no	yes
<	no	no
DataSegment	no	yes
>	no	no
segmentsToLoad	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
CallbackFailedException	no	no
{	no	no
final	no	no
String	no	yes
dataSourceName	no	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
segmentDirectory	yes	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
DruidConstants	no	yes
.	no	no
DRUID_SEGMENT_DIRECTORY	no	yes
)	no	no
!=	no	no
null	no	no
?	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
DruidConstants	no	yes
.	no	no
DRUID_SEGMENT_DIRECTORY	no	yes
)	no	no
:	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
DRUID_SEGMENT_DIRECTORY	no	yes
)	no	no
;	no	no
final	no	no
HdfsDataSegmentPusherConfig	no	yes
hdfsSegmentPusherConfig	no	yes
=	no	no
new	no	no
HdfsDataSegmentPusherConfig	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
DataSegment	no	yes
>	no	no
publishedDataSegmentList	no	yes
;	no	no

private	no	no
void	no	no
checkLoadStatus	no	no
(	no	no
List	no	no
<	no	no
DataSegment	no	no
>	no	no
segments	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
coordinatorAddress	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_COORDINATOR_DEFAULT_ADDRESS	no	yes
)	no	no
;	no	no
int	no	no
maxTries	no	yes
=	no	no
getMaxRetryCount	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
Strings	no	no
.	no	no
isNullOrEmpty	no	no
(	no	no
coordinatorResponse	no	no
)	no	no
)	no	no
{	no	no
CONSOLE	no	yes
.	no	no
printInfo	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
CONSOLE	no	yes
.	no	no
printInfo	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
segments	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
long	no	no
passiveWaitTimeMs	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_PASSIVE_WAIT_TIME	no	yes
)	no	no
;	no	no
Set	no	no
<	no	no
URL	no	yes
>	no	no
urlsOfUnloadedSegments	no	no
=	no	no
segments	no	yes
.	no	no
stream	no	no
(	no	no
)	no	no
.	no	no
map	no	no
(	no	no
dataSegment	no	yes
->	no	no
{	no	no
try	no	no
{	no	no
return	no	no
new	no	no
URL	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
coordinatorAddress	no	yes
,	no	no
dataSegment	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
dataSegment	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MalformedURLException	no	no
e	no	yes
)	no	no
{	no	no
Throwables	no	yes
.	no	no
propagate	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
)	no	no
.	no	no
collect	no	no
(	no	no
Collectors	no	no
.	no	no
toSet	no	no
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numRetries	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
numRetries	no	yes
++	no	no
<	no	no
maxTries	no	no
&&	no	no
!	no	no
urlsOfUnloadedSegments	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
urlsOfUnloadedSegments	no	no
=	no	no
ImmutableSet	no	no
.	no	no
copyOf	no	no
(	no	no
Sets	no	no
.	no	no
filter	no	no
(	no	no
urlsOfUnloadedSegments	no	no
,	no	no
input	yes	no
->	no	no
{	no	no
try	no	no
{	no	no

}	no	no
CONSOLE	no	yes
.	no	no
printInfo	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
segments	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
long	no	no
passiveWaitTimeMs	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_PASSIVE_WAIT_TIME	no	yes
)	no	no
;	no	no
Set	no	no
<	no	no
URL	no	yes
>	no	no
urlsOfUnloadedSegments	no	no
=	no	no
segments	no	yes
.	no	no
stream	no	no
(	no	no
)	no	no
.	no	no
map	no	no
(	no	no
dataSegment	no	yes
->	no	no
{	no	no
try	no	no
{	no	no
return	no	no
new	no	no
URL	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
coordinatorAddress	no	yes
,	no	no
dataSegment	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
dataSegment	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MalformedURLException	no	no
e	yes	yes
)	no	no
{	no	no
Throwables	no	yes
.	no	no
propagate	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
)	no	no
.	no	no
collect	no	no
(	no	no
Collectors	no	no
.	no	no
toSet	no	no
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
numRetries	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
numRetries	no	yes
++	no	no
<	no	no
maxTries	no	no
&&	no	no
!	no	no
urlsOfUnloadedSegments	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
urlsOfUnloadedSegments	no	no
=	no	no
ImmutableSet	no	no
.	no	no
copyOf	no	no
(	no	no
Sets	no	no
.	no	no
filter	no	no
(	no	no
urlsOfUnloadedSegments	no	no
,	no	no
input	yes	yes
->	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
result	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getResponseFromCurrentLeader	no	yes
(	no	no
getHttpClient	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
Request	no	yes
(	no	no
HttpMethod	no	yes
.	no	no
GET	no	yes
,	no	no
input	yes	yes
)	no	no
,	no	no
new	no	no
StringFullResponseHandler	no	yes
(	no	no
Charset	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
.	no	no
getContent	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
input	yes	yes
,	no	no
result	no	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
deleteSegment	no	no
(	no	no
DataSegment	no	no
segment	no	yes
)	no	no
throws	no	no
SegmentLoadingException	no	no
{	no	no
final	no	no
Path	no	yes
path	yes	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getPath	no	yes
(	no	no
segment	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
DruidKafkaUtils	no	no
.	no	no
isKafkaStreamingTable	no	no
(	no	no
table	no	yes
)	no	no
)	no	no
{	no	no
final	no	no
String	yes	yes
overlordAddress	no	yes
=	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_OVERLORD_DEFAULT_ADDRESS	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
String	yes	yes
dataSourceName	no	yes
=	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getTableProperty	no	yes
(	no	no
table	no	yes
,	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
stopKafkaIngestion	no	yes
(	no	no
overlordAddress	no	yes
,	no	no
dataSourceName	no	yes
)	no	no
;	no	no
}	no	no
String	yes	yes
dataSourceName	no	yes
=	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
deleteData	no	no
&&	no	no
MetaStoreUtils	no	no
.	no	no
isExternalTablePurge	no	no
(	no	no
table	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSourceName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
DataSegment	no	yes
>	no	no
dataSegmentList	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getDataSegmentList	no	yes
(	no	no
getConnector	no	yes
(	no	no
)	no	no
,	no	no
getDruidMetadataStorageTablesConfig	no	yes
(	no	no
)	no	no
,	no	no
dataSourceName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dataSegmentList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSourceName	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
DataSegment	no	yes
dataSegment	no	yes
:	no	no
dataSegmentList	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
deleteSegment	no	yes
(	no	no
dataSegment	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SegmentLoadingException	no	no
e	yes	no
)	no	no
{	no	no

String	no	yes
dataSourceName	yes	yes
=	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getTableProperty	no	yes
(	no	no
table	no	yes
,	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
stopKafkaIngestion	no	yes
(	no	no
overlordAddress	no	yes
,	no	no
dataSourceName	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
dataSourceName	yes	yes
=	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
DRUID_DATA_SOURCE	no	yes
)	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
deleteData	no	no
&&	no	no
MetaStoreUtils	no	no
.	no	no
isExternalTablePurge	no	no
(	no	no
table	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSourceName	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
DataSegment	no	yes
>	no	no
dataSegmentList	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getDataSegmentList	no	yes
(	no	no
getConnector	no	yes
(	no	no
)	no	no
,	no	no
getDruidMetadataStorageTablesConfig	no	yes
(	no	no
)	no	no
,	no	no
dataSourceName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
dataSegmentList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSourceName	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
DataSegment	no	yes
dataSegment	no	yes
:	no	no
dataSegmentList	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
deleteSegment	no	yes
(	no	no
dataSegment	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SegmentLoadingException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
dataSegment	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
disableDataSource	no	no
(	no	no
getConnector	no	yes
(	no	no
)	no	no
,	no	no
getDruidMetadataStorageTablesConfig	no	yes
(	no	no
)	no	no
,	no	no
dataSourceName	yes	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
commitInsertTable	no	no
(	no	no
Table	no	no
table	yes	no
,	no	no
boolean	no	no
overwrite	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

private	no	no
List	no	no
<	no	no
DataSegment	no	no
>	no	no
fetchSegmentsMetadata	no	no
(	no	no
Path	no	no
segmentDescriptorDir	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
segmentDescriptorDir	yes	no
.	no	no
getFileSystem	no	no
(	no	no
getConf	no	no
(	no	no
)	no	no
)	no	no
.	no	no
exists	no	no
(	no	no
segmentDescriptorDir	yes	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
HttpClient	no	no
makeHttpClient	no	no
(	no	no
Lifecycle	no	no
lifecycle	no	no
)	no	no
{	no	no
final	no	no
int	no	no
numConnection	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
SessionState	no	yes
.	no	no
getSessionConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_NUM_HTTP_CONNECTION	no	yes
)	no	no
;	no	no
final	no	no
Period	no	yes
readTimeout	no	yes
=	no	no
new	no	no
Period	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
SessionState	no	yes
.	no	no
getSessionConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_HTTP_READ_TIMEOUT	no	yes
)	no	no
)	no	no
;	no	no

static	no	no
StringFullResponseHolder	no	yes
getResponseFromCurrentLeader	no	no
(	no	no
HttpClient	no	no
client	no	yes
,	no	no
Request	no	no
request	yes	yes
,	no	no
StringFullResponseHandler	no	no
fullResponseHandler	no	yes
)	no	no
throws	no	no
ExecutionException	no	no
,	no	no
InterruptedException	no	no
{	no	no
StringFullResponseHolder	no	yes
responseHolder	no	yes
=	no	no
client	no	yes
.	no	no
go	no	yes
(	no	no
request	yes	yes
,	no	no
fullResponseHandler	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
HttpResponseStatus	no	no
.	no	no
TEMPORARY_REDIRECT	no	no
.	no	no
equals	no	no
(	no	no
responseHolder	no	yes
.	no	no
getStatus	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
redirectUrlStr	yes	yes
=	no	no
responseHolder	no	yes
.	no	no
getResponse	no	yes
(	no	no
)	no	no
.	no	no
headers	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
columnNames	no	yes
.	no	no
contains	no	no
(	no	no
DruidConstants	no	yes
.	no	no
DEFAULT_TIMESTAMP_COLUMN	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
DruidConstants	no	yes
.	no	no
DEFAULT_TIMESTAMP_COLUMN	no	yes
+	no	no
+	no	no
tableProperties	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
ArrayList	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
columnTypes	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	no	yes
)	no	no
;	no	no
Pair	no	yes
<	no	no
List	no	yes
<	no	no
DimensionSchema	no	yes
>	no	no
,	no	no
AggregatorFactory	no	yes
[	no	no
]	no	no
>	no	no
dimensionsAndAggregates	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getDimensionsAndAggregates	no	yes
(	no	no
columnNames	no	yes
,	no	no
columnTypes	no	yes
)	no	no
;	no	no
final	no	no
InputRowParser	no	yes
inputRowParser	no	yes
=	no	no
new	no	no
MapInputRowParser	no	yes
(	no	no
new	no	no
TimeAndDimsParseSpec	no	yes
(	no	no
new	no	no
TimestampSpec	no	yes
(	no	no
DruidConstants	no	yes
.	no	no
DEFAULT_TIMESTAMP_COLUMN	no	yes
,	no	no
,	no	no
null	no	no
)	no	no
,	no	no
new	no	no
DimensionsSpec	no	yes
(	no	no
dimensionsAndAggregates	no	yes
.	no	no
lhs	no	yes
,	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
Constants	no	yes
.	no	no
DRUID_TIMESTAMP_GRANULARITY_COL_NAME	no	yes
,	no	no
Constants	no	yes
.	no	no
DRUID_SHARD_KEY_COL_NAME	no	yes
)	no	no
,	no	no
null	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Object	no	no
>	no	no
inputParser	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
JSON_MAPPER	no	yes
.	no	no
convertValue	no	no
(	no	no
inputRowParser	no	yes
,	no	no
new	no	no
TypeReference	no	no
<	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Object	no	no
>>	no	no
(	no	no
)	no	no
{	no	no
}	no	no
)	no	no
;	no	no
final	no	no
DataSchema	no	yes
dataSchema	yes	yes
=	no	no
new	no	no
DataSchema	no	yes
(	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
dataSource	no	yes
,	no	no
)	no	no
,	no	no
inputParser	no	yes
,	no	no
dimensionsAndAggregates	no	yes
.	no	no
rhs	no	yes
,	no	no
granularitySpec	no	yes
,	no	no
null	no	no
,	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
JSON_MAPPER	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
workingPath	no	yes
=	no	no
jc	no	yes
.	no	no
get	no	yes
(	no	no
DruidConstants	no	yes
.	no	no
DRUID_JOB_WORKING_DIRECTORY	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
version	no	yes
=	no	no
jc	no	yes
.	no	no
get	no	yes
(	no	no
DruidConstants	no	yes
.	no	no
DRUID_SEGMENT_VERSION	no	yes
)	no	no
;	no	no
String	no	yes
basePersistDirectory	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
jc	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_BASE_PERSIST_DIRECTORY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
Strings	no	no
.	no	no
isNullOrEmpty	no	no
(	no	no
basePersistDirectory	no	yes
)	no	no
)	no	no
{	no	no
basePersistDirectory	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Integer	no	yes
maxRowInMemory	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
jc	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DRUID_MAX_ROW_IN_MEMORY	no	yes
)	no	no
;	no	no
IndexSpec	no	yes
indexSpec	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
getIndexSpec	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
List	no	no
<	no	no
LocatedSegmentDescriptor	no	no
>	no	no
fetchLocatedSegmentDescriptors	no	no
(	no	no
String	no	yes
address	no	yes
,	no	no
BaseQuery	no	no
query	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
final	no	no
String	no	yes
intervals	no	yes
=	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
query	no	yes
.	no	no
getIntervals	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
request	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
address	no	yes
,	no	no
query	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
.	no	no
getNames	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
URLEncoder	no	yes
.	no	no
encode	no	yes
(	no	no
intervals	no	yes
,	no	no
)	no	no
)	no	no
;	no	no

private	no	no
SegmentIdWithShardSpec	no	yes
getSegmentIdentifierAndMaybePush	no	no
(	no	no
long	no	no
truncatedTime	no	yes
)	no	no
{	no	no
DateTime	no	yes
truncatedDateTime	no	yes
=	no	no
segmentGranularity	no	yes
.	no	no
bucketStart	no	yes
(	no	no
DateTimes	no	yes
.	no	no
utc	no	yes
(	no	no
truncatedTime	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
Interval	no	yes
interval	no	yes
=	no	no
new	no	no
Interval	no	yes
(	no	no
truncatedDateTime	no	yes
,	no	no
segmentGranularity	no	yes
.	no	no
increment	no	yes
(	no	no
truncatedDateTime	no	yes
)	no	no
)	no	no
;	no	no
SegmentIdWithShardSpec	no	yes
retVal	yes	yes
;	no	no
if	no	no
(	no	no
currentOpenSegment	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
currentOpenSegment	no	yes
=	no	no
new	no	no
SegmentIdWithShardSpec	no	yes
(	no	no
dataSchema	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
interval	no	yes
,	no	no
tuningConfig	no	yes
.	no	no
getVersioningPolicy	no	yes
(	no	no
)	no	no
.	no	no
getVersion	no	yes
(	no	no
interval	no	yes
)	no	no
,	no	no
new	no	no
LinearShardSpec	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
return	no	no
currentOpenSegment	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
currentOpenSegment	no	yes
.	no	no
getInterval	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
interval	no	yes
)	no	no
)	no	no
{	no	no
retVal	yes	yes
=	no	no
currentOpenSegment	no	yes
;	no	no
int	no	no
rowCount	no	yes
=	no	no
appenderator	no	yes
.	no	no
getRowCount	no	yes
(	no	no
retVal	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
rowCount	no	yes
<	no	no
maxPartitionSize	no	no
)	no	no
{	no	no
return	no	no
retVal	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
retVal	yes	yes
=	no	no
new	no	no
SegmentIdWithShardSpec	no	yes
(	no	no
dataSchema	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
interval	no	yes
,	no	no
tuningConfig	no	yes
.	no	no
getVersioningPolicy	no	yes
(	no	no
)	no	no
.	no	no
getVersion	no	yes
(	no	no
interval	no	yes
)	no	no
,	no	no
new	no	no
LinearShardSpec	no	yes
(	no	no
currentOpenSegment	no	yes
.	no	no
getShardSpec	no	yes
(	no	no
)	no	no
.	no	no
getPartitionNum	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
pushSegments	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
currentOpenSegment	no	yes
)	no	no
)	no	no
;	no	no

return	no	no
currentOpenSegment	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
currentOpenSegment	no	yes
.	no	no
getInterval	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
interval	no	yes
)	no	no
)	no	no
{	no	no
retVal	yes	yes
=	no	no
currentOpenSegment	no	yes
;	no	no
int	no	no
rowCount	no	yes
=	no	no
appenderator	no	yes
.	no	no
getRowCount	no	yes
(	no	no
retVal	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
rowCount	no	yes
<	no	no
maxPartitionSize	no	no
)	no	no
{	no	no
return	no	no
retVal	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
retVal	yes	yes
=	no	no
new	no	no
SegmentIdWithShardSpec	no	yes
(	no	no
dataSchema	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
interval	no	yes
,	no	no
tuningConfig	no	yes
.	no	no
getVersioningPolicy	no	yes
(	no	no
)	no	no
.	no	no
getVersion	no	yes
(	no	no
interval	no	yes
)	no	no
,	no	no
new	no	no
LinearShardSpec	no	yes
(	no	no
currentOpenSegment	no	yes
.	no	no
getShardSpec	no	yes
(	no	no
)	no	no
.	no	no
getPartitionNum	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
pushSegments	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
currentOpenSegment	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
retVal	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
retVal	yes	yes
.	no	no
getShardSpec	no	yes
(	no	no
)	no	no
.	no	no
getPartitionNum	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
currentOpenSegment	no	yes
=	no	no
retVal	yes	yes
;	no	no
return	no	no
retVal	yes	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
retVal	yes	yes
=	no	no
new	no	no
SegmentIdWithShardSpec	no	yes
(	no	no
dataSchema	no	yes
.	no	no
getDataSource	no	yes
(	no	no
)	no	no
,	no	no
interval	no	yes
,	no	no
tuningConfig	no	yes
.	no	no
getVersioningPolicy	no	yes
(	no	no
)	no	no
.	no	no
getVersion	no	yes
(	no	no
interval	no	yes
)	no	no
,	no	no
new	no	no
LinearShardSpec	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
pushSegments	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
currentOpenSegment	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
pushSegments	no	no
(	no	no
List	no	no
<	no	no
SegmentIdWithShardSpec	no	yes
>	no	no
segmentsToPush	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
SegmentsAndMetadata	no	yes
segmentsAndMetadata	no	yes
=	no	no
appenderator	no	yes
.	no	no
push	no	yes
(	no	no
segmentsToPush	no	yes
,	no	no
committerSupplier	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
pushedSegmentIdentifierHashSet	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
DataSegment	no	no
pushedSegment	yes	yes
:	no	no
segmentsAndMetadata	no	yes
.	no	no
getSegments	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pushedSegmentIdentifierHashSet	no	yes
.	no	no
add	no	yes
(	no	no
SegmentIdWithShardSpec	no	yes
.	no	no
fromDataSegment	no	yes
(	no	no
pushedSegment	yes	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Path	no	yes
segmentDescriptorOutputPath	yes	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
makeSegmentDescriptorOutputPath	no	yes
(	no	no
pushedSegment	yes	yes
,	no	no
segmentsDescriptorDir	no	yes
)	no	no
;	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
writeSegmentDescriptor	no	yes
(	no	no
fileSystem	no	yes
,	no	no
pushedSegment	yes	yes
,	no	no
segmentDescriptorOutputPath	yes	yes
)	no	no
;	no	no

SegmentsAndMetadata	no	yes
segmentsAndMetadata	no	yes
=	no	no
appenderator	no	yes
.	no	no
push	no	yes
(	no	no
segmentsToPush	yes	yes
,	no	no
committerSupplier	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
pushedSegmentIdentifierHashSet	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
DataSegment	no	no
pushedSegment	no	yes
:	no	no
segmentsAndMetadata	no	yes
.	no	no
getSegments	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pushedSegmentIdentifierHashSet	no	yes
.	no	no
add	no	yes
(	no	no
SegmentIdWithShardSpec	no	yes
.	no	no
fromDataSegment	no	yes
(	no	no
pushedSegment	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Path	no	yes
segmentDescriptorOutputPath	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
makeSegmentDescriptorOutputPath	no	yes
(	no	no
pushedSegment	no	yes
,	no	no
segmentsDescriptorDir	no	yes
)	no	no
;	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
writeSegmentDescriptor	no	yes
(	no	no
fileSystem	no	yes
,	no	no
pushedSegment	no	yes
,	no	no
segmentDescriptorOutputPath	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
pushedSegment	no	yes
,	no	no
segmentDescriptorOutputPath	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
toPushSegmentsHashSet	no	yes
=	no	no
segmentsToPush	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
SegmentIdWithShardSpec	no	yes
::	no	no
toString	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toCollection	no	yes
(	no	no
HashSet	no	yes
::	no	no
new	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
pushedSegmentIdentifierHashSet	no	yes
.	no	no
equals	no	no
(	no	no
toPushSegmentsHashSet	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
toPushSegmentsHashSet	no	yes
)	no	no
,	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
pushedSegmentIdentifierHashSet	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
SegmentIdWithShardSpec	no	yes
dataSegmentId	no	yes
:	no	no
segmentsToPush	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSegmentId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
appenderator	no	yes
.	no	no
drop	no	yes
(	no	no
dataSegmentId	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
segmentsToPush	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	no
)	no	no
{	no	no

pushedSegmentIdentifierHashSet	no	yes
.	no	no
add	no	yes
(	no	no
SegmentIdWithShardSpec	no	yes
.	no	no
fromDataSegment	no	yes
(	no	no
pushedSegment	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Path	no	yes
segmentDescriptorOutputPath	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
makeSegmentDescriptorOutputPath	no	yes
(	no	no
pushedSegment	no	yes
,	no	no
segmentsDescriptorDir	no	yes
)	no	no
;	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
writeSegmentDescriptor	no	yes
(	no	no
fileSystem	no	yes
,	no	no
pushedSegment	no	yes
,	no	no
segmentDescriptorOutputPath	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
pushedSegment	no	yes
,	no	no
segmentDescriptorOutputPath	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
toPushSegmentsHashSet	no	yes
=	no	no
segmentsToPush	yes	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
SegmentIdWithShardSpec	no	yes
::	no	no
toString	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toCollection	no	yes
(	no	no
HashSet	no	yes
::	no	no
new	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
pushedSegmentIdentifierHashSet	no	yes
.	no	no
equals	no	no
(	no	no
toPushSegmentsHashSet	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
toPushSegmentsHashSet	no	yes
)	no	no
,	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
pushedSegmentIdentifierHashSet	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
SegmentIdWithShardSpec	no	yes
dataSegmentId	no	yes
:	no	no
segmentsToPush	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
dataSegmentId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
appenderator	no	yes
.	no	no
drop	no	yes
(	no	no
dataSegmentId	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
segmentsToPush	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
segmentsToPush	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
|	no	no
ExecutionException	no	no
e	yes	yes
)	no	no
{	no	no

static	no	no
String	no	no
kerberosChallenge	no	no
(	no	no
String	no	no
server	no	yes
)	no	no
throws	no	no
AuthenticationException	no	no
{	no	no
KERBEROS_LOCK	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Oid	no	yes
mechOid	no	yes
=	no	no
KerberosUtil	no	yes
.	no	no
getOidInstance	no	yes
(	no	no
)	no	no
;	no	no
GSSManager	no	yes
manager	no	yes
=	no	no
GSSManager	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
GSSName	no	yes
serverName	yes	yes
=	no	no
manager	no	yes
.	no	no
createName	no	yes
(	no	no
+	no	no
server	no	yes
,	no	no
GSSName	no	yes
.	no	no
NT_HOSTBASED_SERVICE	no	yes
)	no	no
;	no	no
GSSContext	no	yes
gssContext	no	yes
=	no	no
manager	no	yes
.	no	no
createContext	no	yes
(	no	no
serverName	yes	yes
.	no	no
canonicalize	no	yes
(	no	no
mechOid	no	yes
)	no	no
,	no	no
mechOid	no	yes
,	no	no
null	no	no
,	no	no
GSSContext	no	yes
.	no	no
DEFAULT_LIFETIME	no	yes
)	no	no
;	no	no
gssContext	no	yes
.	no	no
requestMutualAuth	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
gssContext	no	yes
.	no	no
requestCredDeleg	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
inToken	no	yes
=	no	no
new	no	no
byte	no	no
[	no	no
0	no	no
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
outToken	no	yes
=	no	no
gssContext	no	yes
.	no	no
initSecContext	no	yes
(	no	no
inToken	no	yes
,	no	no
0	no	no
,	no	no
inToken	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
gssContext	no	yes
.	no	no
dispose	no	yes
(	no	no
)	no	no
;	no	no

final	no	no
String	no	yes
host	no	yes
=	no	no
request	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
getHost	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
URI	no	yes
uri	yes	yes
=	no	no
request	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
cookieMap	no	yes
=	no	no
cookieManager	no	yes
.	no	no
get	no	yes
(	no	no
uri	yes	yes
,	no	no
Collections	no	yes
.	no	no
emptyMap	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
cookieMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
request	no	yes
.	no	no
addHeaderValues	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
boolean	no	no
shouldRetryOnUnauthorizedResponse	no	yes
;	no	no
if	no	no
(	no	no
DruidKerberosUtil	no	yes
.	no	no
needToSendCredentials	no	no
(	no	no
cookieManager	no	yes
.	no	no
getCookieStore	no	yes
(	no	no
)	no	no
,	no	no
uri	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	yes	yes
,	no	no
cookieManager	no	yes
.	no	no
getCookieStore	no	yes
(	no	no
)	no	no
.	no	no
getCookies	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
currentUser	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
currentUser	no	yes
.	no	no
checkTGTAndReloginFromKeytab	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
currentUser	no	yes
)	no	no
;	no	no
String	no	yes
challenge	no	yes
=	no	no
currentUser	no	yes
.	no	no
doAs	no	yes
(	no	no
(	no	no
PrivilegedExceptionAction	no	yes
<	no	no
String	no	yes
>	no	no
)	no	no
(	no	no
)	no	no
->	no	no
DruidKerberosUtil	no	yes
.	no	no
kerberosChallenge	no	yes
(	no	no
host	no	yes
)	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setHeader	no	yes
(	no	no
HttpHeaders	no	yes
.	no	no
Names	no	yes
.	no	no
AUTHORIZATION	no	yes
,	no	no
+	no	no
challenge	no	yes
)	no	no
;	no	no
shouldRetryOnUnauthorizedResponse	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
final	no	no
boolean	no	no
shouldRetryOnUnauthorizedResponse	no	yes
;	no	no
if	no	no
(	no	no
DruidKerberosUtil	no	yes
.	no	no
needToSendCredentials	no	no
(	no	no
cookieManager	no	yes
.	no	no
getCookieStore	no	yes
(	no	no
)	no	no
,	no	no
uri	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
,	no	no
cookieManager	no	yes
.	no	no
getCookieStore	no	yes
(	no	no
)	no	no
.	no	no
getCookies	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
currentUser	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
currentUser	no	yes
.	no	no
checkTGTAndReloginFromKeytab	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
currentUser	no	yes
)	no	no
;	no	no
String	no	yes
challenge	no	yes
=	no	no
currentUser	no	yes
.	no	no
doAs	no	yes
(	no	no
(	no	no
PrivilegedExceptionAction	no	yes
<	no	no
String	no	yes
>	no	no
)	no	no
(	no	no
)	no	no
->	no	no
DruidKerberosUtil	no	yes
.	no	no
kerberosChallenge	no	yes
(	no	no
host	no	yes
)	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setHeader	no	yes
(	no	no
HttpHeaders	no	yes
.	no	no
Names	no	yes
.	no	no
AUTHORIZATION	no	yes
,	no	no
+	no	no
challenge	no	yes
)	no	no
;	no	no
shouldRetryOnUnauthorizedResponse	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uri	no	yes
,	no	no
DruidKerberosUtil	no	yes
.	no	no
getAuthCookie	no	yes
(	no	no
cookieManager	no	yes
.	no	no
getCookieStore	no	yes
(	no	no
)	no	no
,	no	no
uri	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
shouldRetryOnUnauthorizedResponse	no	yes
=	no	no
true	yes	no
;	no	no
}	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
ListenableFuture	no	yes
<	no	no
RetryResponseHolder	no	yes
<	no	no
Final	no	yes
>>	no	no
internalFuture	no	yes
=	no	no
delegate	no	yes
.	no	no
go	no	yes
(	no	no
request	no	yes
,	no	no
new	no	no
RetryIfUnauthorizedResponseHandler	no	yes
<	no	no
Intermediate	no	yes
,	no	no
Final	no	yes
>	no	no
(	no	no
new	no	no
ResponseCookieHandler	no	yes
(	no	no
request	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
,	no	no
cookieManager	no	yes
,	no	no
httpResponseHandler	no	yes
)	no	no
)	no	no
,	no	no
duration	no	yes
)	no	no
;	no	no
RetryResponseHolder	no	yes
<	no	no
Final	no	yes
>	no	no
responseHolder	yes	yes
=	no	no
internalFuture	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
shouldRetryOnUnauthorizedResponse	no	yes
&&	no	no
responseHolder	yes	yes
.	no	no
shouldRetry	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
ClientResponse	no	no
<	no	no
RetryResponseHolder	no	no
<	no	no
Intermediate	no	no
>>	no	no
handleResponse	no	no
(	no	no
HttpResponse	no	no
httpResponse	yes	no
,	no	no
TrafficCop	no	no
trafficCop	no	no
)	no	no
{	no	no

Exception	no	yes
ex	no	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
!	no	no
initialized	no	yes
&&	no	no
currentLocationIndex	no	yes
<	no	no
locations	no	yes
.	no	no
length	no	no
)	no	no
{	no	no
String	no	yes
address	yes	yes
=	no	no
locations	no	yes
[	no	no
currentLocationIndex	no	yes
++	no	no
]	no	no
;	no	no
if	no	no
(	no	no
Strings	no	no
.	no	no
isNullOrEmpty	no	no
(	no	no
address	yes	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RE	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
address	yes	yes
,	no	no
query	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
Request	no	yes
request	no	yes
=	no	no
DruidStorageHandlerUtils	no	yes
.	no	no
createSmileRequest	no	yes
(	no	no
address	yes	yes
,	no	no
query	yes	yes
)	no	no
;	no	no
Future	no	yes
<	no	no
InputStream	no	yes
>	no	no
inputStreamFuture	no	yes
=	no	no
httpClient	no	yes
.	no	no
go	no	yes
(	no	no
request	no	yes
,	no	no
new	no	no
InputStreamResponseHandler	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
iterator	no	yes
=	no	no
new	no	no
JsonParserIterator	no	yes
(	no	no
smileMapper	no	yes
,	no	no
resultsType	no	yes
,	no	no
inputStreamFuture	no	yes
,	no	no
request	no	yes
.	no	no
getUrl	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
query	yes	yes
)	no	no
;	no	no
iterator	no	yes
.	no	no
init	no	yes
(	no	no
)	no	no
;	no	no
initialized	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
iterator	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
CloseQuietly	no	yes
.	no	no
close	no	yes
(	no	no
iterator	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
commitDropTable	no	no
(	no	no
Table	no	no
tbl	no	yes
,	no	no
boolean	no	no
deleteData	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
tableName	yes	yes
=	no	no
getHBaseTableName	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
boolean	no	no
isPurge	no	yes
=	no	no
!	no	no
MetaStoreUtils	no	yes
.	no	no
isExternalTable	no	yes
(	no	no
tbl	no	yes
)	no	no
||	no	no
MetaStoreUtils	no	yes
.	no	no
isExternalTablePurge	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deleteData	no	no
&&	no	no
isPurge	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
Properties	no	no
tbl	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
serdeParams	yes	yes
=	no	no
new	no	no
HBaseSerDeParameters	no	yes
(	no	no
conf	no	yes
,	no	no
tbl	no	yes
,	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
cachedObjectInspector	no	yes
=	no	no
HBaseLazyObjectFactory	no	yes
.	no	no
createLazyHBaseStructInspector	no	yes
(	no	no
serdeParams	yes	yes
,	no	no
tbl	no	yes
)	no	no
;	no	no
cachedHBaseRow	no	yes
=	no	no
new	no	no
LazyHBaseRow	no	yes
(	no	no
(	no	no
LazySimpleStructObjectInspector	no	yes
)	no	no
cachedObjectInspector	no	yes
,	no	no
serdeParams	yes	yes
)	no	no
;	no	no
serializer	no	yes
=	no	no
new	no	no
HBaseRowSerializer	no	yes
(	no	no
serdeParams	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
sb	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
columnsMapping	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ColumnMapping	no	yes
colMap	no	yes
=	no	no
columnsMapping	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colMap	no	yes
.	no	no
hbaseRowKey	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
StringUtils	no	yes
.	no	no
COMMA_STR	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
colMap	no	yes
.	no	no
qualifierPrefix	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
filter	no	yes
(	no	no
colMap	no	yes
.	no	no
familyName	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
filter	no	yes
(	no	no
colMap	no	yes
.	no	no
qualifierPrefix	no	yes
)	no	no
+	no	no
i	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
StringUtils	no	yes
.	no	no
COMMA_STR	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
filter	no	yes
(	no	no
colMap	no	yes
.	no	no
familyName	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
StringUtils	no	yes
.	no	no
COMMA_STR	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
filter	no	yes
(	no	no
colMap	no	yes
.	no	no
familyName	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
filter	no	yes
(	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
StringUtils	no	yes
.	no	no
COMMA_STR	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
trim	no	yes
(	no	no
sb	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
+	no	no
AvroTableProperties	no	yes
.	no	no
SCHEMA_LITERAL	no	yes
.	no	no
getPropName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
serdeConstants	no	yes
.	no	no
SERIALIZATION_CLASS	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
schemaUrl	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
schemaLiteral	no	yes
=	no	no
getSchemaFromFS	no	yes
(	no	no
schemaUrl	no	yes
,	no	no
conf	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
SERIALIZATION_CLASS	no	yes
+	no	no
+	no	no
colMap	no	yes
.	no	no
familyName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
StringBuilder	no	yes
generatedStruct	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
generateColumnStruct	no	yes
(	no	no
serType	no	yes
,	no	no
serClassName	no	yes
,	no	no
schemaLiteral	no	yes
,	no	no
colMap	no	yes
,	no	no
generatedStruct	no	yes
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
MAP_TYPE_NAME	no	yes
+	no	no
+	no	no
serdeConstants	no	yes
.	no	no
STRING_TYPE_NAME	no	yes
+	no	no
+	no	no
generatedStruct	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
qualifierName	no	yes
=	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
;	no	no
if	no	no
(	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
.	no	no
endsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
qualifierName	no	yes
=	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
colMap	no	yes
.	no	no
qualifierName	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
serType	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
colMap	no	yes
.	no	no
familyName	no	yes
+	no	no
+	no	no
qualifierName	no	yes
+	no	no
+	no	no
HBaseSerDe	no	yes
.	no	no
SERIALIZATION_TYPE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
serType	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
HBaseSerDe	no	yes
.	no	no
SERIALIZATION_TYPE	no	yes
+	no	no
+	no	no
colMap	no	yes
.	no	no
familyName	no	yes
+	no	no
+	no	no
qualifierName	no	yes
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
configureJobConf	no	no
(	no	no
TableDesc	no	no
tableDesc	yes	no
,	no	no
JobConf	no	no
jobConf	no	no
)	no	no
{	no	no

byte	no	no
[	no	no
]	no	no
constantVal	no	yes
=	no	no
getConstantVal	no	yes
(	no	no
writable	no	yes
,	no	no
objInspector	no	yes
,	no	no
isBinary	no	yes
)	no	no
;	no	no
String	no	yes
comparisonOp	no	yes
=	no	no
sc	no	yes
.	no	no
getComparisonOp	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
comparisonOp	no	yes
)	no	no
)	no	no
{	no	no
startRow	yes	yes
=	no	no
constantVal	no	yes
;	no	no
stopRow	yes	yes
=	no	no
getNextBA	no	yes
(	no	no
constantVal	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
comparisonOp	no	yes
)	no	no
)	no	no
{	no	no
stopRow	yes	yes
=	no	no
constantVal	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
comparisonOp	no	yes
)	no	no
)	no	no
{	no	no
startRow	yes	yes
=	no	no
constantVal	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
comparisonOp	no	yes
)	no	no
)	no	no
{	no	no
startRow	yes	yes
=	no	no
getNextBA	no	yes
(	no	no
constantVal	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
comparisonOp	no	yes
)	no	no
)	no	no
{	no	no
stopRow	yes	yes
=	no	no
getNextBA	no	yes
(	no	no
constantVal	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
comparisonOp	no	yes
+	no	no
)	no	no
;	no	no

}	no	no
String	no	yes
filterExprSerialized	no	yes
=	no	no
jobConf	no	yes
.	no	no
get	no	yes
(	no	no
TableScanDesc	no	yes
.	no	no
FILTER_EXPR_CONF_STR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filterExprSerialized	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
scan	no	yes
;	no	no
}	no	no
ExprNodeGenericFuncDesc	no	yes
filterExpr	no	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializeExpression	no	yes
(	no	no
filterExprSerialized	no	yes
)	no	no
;	no	no
String	no	yes
keyColName	no	yes
=	no	no
jobConf	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
[	no	no
iKey	no	yes
]	no	no
;	no	no
ArrayList	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
cols	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
jobConf	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
colType	no	yes
=	no	no
cols	no	yes
.	no	no
get	no	yes
(	no	no
iKey	no	yes
)	no	no
.	no	no
getTypeName	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isKeyComparable	no	yes
=	no	no
isKeyBinary	no	yes
||	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
colType	no	yes
)	no	no
;	no	no
String	no	yes
tsColName	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
iTimestamp	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
tsColName	no	yes
=	no	no
jobConf	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
[	no	no
iTimestamp	no	yes
]	no	no
;	no	no
}	no	no
IndexPredicateAnalyzer	no	yes
analyzer	no	yes
=	no	no
newIndexPredicateAnalyzer	no	yes
(	no	no
keyColName	no	yes
,	no	no
isKeyComparable	no	yes
,	no	no
tsColName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
IndexSearchCondition	no	yes
>	no	no
conditions	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
IndexSearchCondition	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
residualPredicate	yes	yes
=	no	no
analyzer	no	yes
.	no	no
analyzePredicate	no	yes
(	no	no
filterExpr	no	yes
,	no	no
conditions	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
residualPredicate	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
}	no	no
for	no	no
(	no	no
FileStatus	no	no
regionFile	no	yes
:	no	no
fs	no	yes
.	no	no
listStatus	no	no
(	no	no
srcDir	no	no
,	no	no
FileUtils	no	no
.	no	no
STAGING_DIR_PATH_FILTER	no	no
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
rename	no	yes
(	no	no
regionFile	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
columnFamilyPath	no	yes
,	no	no
regionFile	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ex	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
private	no	no
void	no	no
writeText	no	no
(	no	no
Text	no	no
text	no	yes
)	no	no
throws	no	no
IOException	no	yes
{	no	no
String	no	yes
s	yes	yes
=	no	no
text	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
fields	no	yes
=	no	no
s	yes	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
fields	no	yes
.	no	no
length	no	yes
<=	no	no
(	no	no
columnMap	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
rowKeyBytes	no	yes
=	no	no
Bytes	no	yes
.	no	no
toBytes	no	yes
(	no	no
fields	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
byte	no	no
[	no	no
]	no	no
,	no	no
Integer	no	no
>	no	no
entry	no	yes
:	no	no
columnMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
columnNameBytes	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
iColumn	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
val	no	yes
;	no	no
if	no	no
(	no	no
iColumn	no	yes
>=	no	no
fields	no	yes
.	no	no
length	no	yes
)	no	no
{	no	no
val	no	yes
=	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
LogInitializationException	no	no
e	no	no
)	no	no
{	no	no
}	no	no
LOG	no	yes
=	no	no
LoggerFactory	no	yes
.	no	no
getLogger	no	yes
(	no	no
HCatCli	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
CliSessionState	no	yes
ss	no	yes
=	no	no
new	no	no
CliSessionState	no	yes
(	no	no
new	no	no
HiveConf	no	yes
(	no	no
SessionState	no	yes
.	no	no
class	no	no
)	no	no
)	no	no
;	no	no
ss	no	yes
.	no	no
in	no	yes
=	no	no
System	no	yes
.	no	no
in	no	yes
;	no	no
try	no	no
{	no	no
ss	no	yes
.	no	no
out	no	yes
=	no	no
new	no	no
SessionStream	no	yes
(	no	no
System	no	yes
.	no	no
out	no	yes
,	no	no
true	no	no
,	no	no
)	no	no
;	no	no
ss	no	yes
.	no	no
err	no	yes
=	no	no
new	no	no
SessionStream	no	yes
(	no	no
System	no	yes
.	no	no
err	no	yes
,	no	no
true	no	no
,	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedEncodingException	no	no
e	no	no
)	no	no
{	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	yes	yes
.	no	no
SEMANTIC_ANALYZER_HOOK	no	yes
,	no	no
HCatSemanticAnalyzer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
engine	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	yes	yes
.	no	no
HIVE_EXECUTION_ENGINE	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
MR_ENGINE	yes	yes
=	no	no
;	no	no
if	no	no
(	no	no
!	no	no
MR_ENGINE	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
engine	no	yes
)	no	no
)	no	no
{	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	yes	yes
.	no	no
HIVE_EXECUTION_ENGINE	no	yes
,	no	no
MR_ENGINE	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
HiveConf	no	yes
getHiveConf	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
HiveConf	no	yes
hiveConf	no	yes
=	no	no
new	no	no
HiveConf	no	yes
(	no	no
conf	no	yes
,	no	no
HCatUtil	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isBlank	no	no
(	no	no
conf	no	yes
.	no	no
get	no	no
(	no	no
HCatConstants	yes	no
.	no	no
HCAT_KEY_HIVE_CONF	no	no
)	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
getHCatKeyHiveConf	no	no
(	no	no
JobConf	no	no
conf	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Properties	no	yes
properties	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
StringUtils	no	no
.	no	no
isBlank	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
HCatConstants	yes	yes
.	no	no
HCAT_KEY_HIVE_CONF	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
properties	yes	yes
=	no	no
(	no	no
Properties	no	yes
)	no	no
HCatUtil	no	yes
.	no	no
deserialize	no	yes
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
HCatConstants	yes	yes
.	no	no
HCAT_KEY_HIVE_CONF	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
createRemovalListener	no	no
(	no	no
)	no	no
{	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
listener	no	no
=	no	no
new	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onRemoval	no	no
(	no	no
RemovalNotification	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
notification	no	yes
)	no	no
{	no	no
ICacheableMetaStoreClient	no	yes
hiveMetaStoreClient	yes	yes
=	no	no
notification	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveMetaStoreClient	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
cleanup	no	no
(	no	no
)	no	no
{	no	no
hiveCache	yes	yes
.	no	no
cleanUp	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
enableStats	no	no
)	no	no
{	no	no

public	no	no
static	no	no
HCatRecordObjectInspector	no	yes
getHCatRecordObjectInspector	no	no
(	no	no
StructTypeInfo	no	no
typeInfo	yes	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
HCatRecordObjectInspector	no	yes
oi	no	yes
=	no	no
cachedHCatRecordObjectInspectors	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
typeInfo	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
oi	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
static	no	no
ObjectInspector	no	yes
getStandardObjectInspectorFromTypeInfo	no	no
(	no	no
TypeInfo	no	no
typeInfo	yes	yes
)	no	no
{	no	no
ObjectInspector	no	yes
oi	no	yes
=	no	no
cachedObjectInspectors	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
typeInfo	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
oi	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
Properties	no	no
tbl	yes	no
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
Properties	no	no
tbl	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tbl	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
columnNameProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
String	no	yes
columnTypeProperty	yes	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
tbl	no	yes
.	no	no
containsKey	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
?	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
:	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
columnNameProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
columnTypeProperty	yes	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnTypes	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnTypes	yes	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
columnNameProperty	no	yes
,	no	no
columnNames	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
initialize	no	no
(	no	no
HCatSchema	no	no
hsch	yes	no
)	no	no
throws	no	no
SerDeException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	yes
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
Properties	no	no
tbl	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
jsonSerde	no	yes
.	no	no
initialize	no	yes
(	no	no
conf	no	yes
,	no	no
tbl	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
StructTypeInfo	no	yes
rowTypeInfo	no	yes
=	no	no
jsonSerde	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
cachedObjectInspector	no	yes
=	no	no
HCatRecordObjectInspectorFactory	no	yes
.	no	no
getHCatRecordObjectInspector	no	yes
(	no	no
rowTypeInfo	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
schema	yes	yes
=	no	no
HCatSchemaUtils	no	yes
.	no	no
getHCatSchema	no	yes
(	no	no
rowTypeInfo	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getStructSubSchema	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	yes
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
Properties	no	no
tbl	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
jsonSerde	no	yes
.	no	no
initialize	no	yes
(	no	no
conf	no	yes
,	no	no
tbl	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
StructTypeInfo	no	yes
rowTypeInfo	no	yes
=	no	no
jsonSerde	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
cachedObjectInspector	no	yes
=	no	no
HCatRecordObjectInspectorFactory	no	yes
.	no	no
getHCatRecordObjectInspector	no	yes
(	no	no
rowTypeInfo	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
schema	yes	yes
=	no	no
HCatSchemaUtils	no	yes
.	no	no
getHCatSchema	no	yes
(	no	no
rowTypeInfo	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getStructSubSchema	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
schema	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
close	no	yes
(	no	no
TaskAttemptContext	no	no
context	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
Reporter	no	yes
reporter	no	yes
=	no	no
InternalUtil	no	yes
.	no	no
createReporter	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
RecordWriter	no	no
<	no	no
?	no	no
super	no	no
WritableComparable	no	no
<	no	no
?	no	no
>	no	no
,	no	no
?	no	no
super	no	no
Writable	no	no
>	no	no
bwriter	no	yes
:	no	no
baseDynamicWriters	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
bwriter	no	yes
.	no	no
close	no	yes
(	no	no
reporter	no	yes
)	no	no
;	no	no
}	no	no
TaskCommitContextRegistry	no	no
.	no	no
getInstance	no	no
(	no	no
)	no	no
.	no	no
register	no	no
(	no	no
context	no	yes
,	no	no
new	no	no
TaskCommitContextRegistry	no	no
.	no	no
TaskCommitterProxy	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
abortTask	no	yes
(	no	no
TaskAttemptContext	no	no
context	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
OutputJobInfo	no	yes
>	no	no
outputJobInfoEntry	no	yes
:	no	no
dynamicOutputJobInfo	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dynKey	no	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
OutputJobInfo	no	yes
outputJobInfo	yes	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outputJobInfo	yes	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
baseDynamicCommitters	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
.	no	no
abortTask	no	yes
(	no	no
dynamicContexts	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
commitTask	no	no
(	no	no
TaskAttemptContext	no	no
context	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
OutputJobInfo	no	yes
>	no	no
outputJobInfoEntry	no	yes
:	no	no
dynamicOutputJobInfo	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dynKey	no	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
OutputJobInfo	no	yes
outputJobInfo	yes	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
abortTask	no	yes
(	no	no
TaskAttemptContext	no	yes
context	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
OutputJobInfo	no	yes
>	no	no
outputJobInfoEntry	no	yes
:	no	no
dynamicOutputJobInfo	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dynKey	no	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
OutputJobInfo	no	yes
outputJobInfo	yes	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outputJobInfo	yes	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
baseDynamicCommitters	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
.	no	no
abortTask	no	yes
(	no	no
dynamicContexts	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
commitTask	no	yes
(	no	no
TaskAttemptContext	no	yes
context	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
OutputJobInfo	no	yes
>	no	no
outputJobInfoEntry	no	yes
:	no	no
dynamicOutputJobInfo	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dynKey	no	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
OutputJobInfo	no	yes
outputJobInfo	yes	yes
=	no	no
outputJobInfoEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outputJobInfo	yes	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TaskAttemptContext	no	yes
dynContext	no	yes
=	no	no
dynamicContexts	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
;	no	no
OutputCommitter	no	yes
dynCommitter	no	yes
=	no	no
baseDynamicCommitters	no	yes
.	no	no
get	no	yes
(	no	no
dynKey	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dynCommitter	no	yes
.	no	no
needsTaskCommit	no	no
(	no	no
dynContext	no	yes
)	no	no
)	no	no
{	no	no
dynCommitter	no	yes
.	no	no
commitTask	no	yes
(	no	no
dynContext	no	yes
)	no	no
;	no	no

else	no	no
if	no	no
(	no	no
dynamicPartitioningUsed	no	no
)	no	no
{	no	no
for	no	no
(	no	no
JobContext	no	no
currContext	no	yes
:	no	no
contextDiscoveredByPath	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
new	no	no
JobConf	no	yes
(	no	no
currContext	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getOutputCommitter	no	yes
(	no	no
)	no	no
.	no	no
abortJob	no	yes
(	no	no
currContext	no	yes
,	no	no
state	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Path	no	yes
src	yes	yes
;	no	no
OutputJobInfo	no	yes
jobInfo	no	yes
=	no	no
HCatOutputFormat	no	yes
.	no	no
getJobInfo	no	yes
(	no	no
jobContext	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
tblPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
jobInfo	no	yes
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
.	no	no
getTableLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dynamicPartitioningUsed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
customDynamicLocationUsed	no	no
)	no	no
{	no	no
src	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getPartitionRootLocation	no	yes
(	no	no
jobInfo	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
jobInfo	no	yes
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getPartitionKeysSize	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
src	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getCustomPartitionRootLocation	no	yes
(	no	no
jobInfo	no	yes
,	no	no
jobContext	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
void	no	no
moveTaskOutputs	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
file	yes	no
,	no	no
Path	no	no
srcDir	yes	no
,	no	no
Path	no	no
destDir	yes	no
,	no	no
final	no	no
boolean	no	no
dryRun	yes	no
,	no	no
boolean	no	no
immutable	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
dynamicPartitioningUsed	no	no
)	no	no
{	no	no
immutable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
if	no	no
(	no	no
file	yes	yes
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TEMP_DIR_NAME	no	no
)	no	no
||	no	no
file	yes	yes
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
LOGS_DIR_NAME	no	no
)	no	no
||	no	no
file	yes	yes
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
SUCCEEDED_FILE_NAME	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
final	no	no
Path	no	yes
finalOutputPath	yes	yes
=	no	no
getFinalPath	no	yes
(	no	no
fs	no	yes
,	no	no
file	yes	yes
,	no	no
srcDir	no	yes
,	no	no
destDir	no	yes
,	no	no
immutable	no	yes
)	no	no
;	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
fileStatus	no	yes
.	no	no
isDir	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
dryRun	no	no
)	no	no
{	no	no
if	no	no
(	no	no
immutable	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
file	yes	yes
+	no	no
+	no	no
finalOutputPath	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
finalOutputPath	yes	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HCatException	no	yes
(	no	no
ErrorType	no	yes
.	no	no
ERROR_MOVE_FAILED	no	yes
,	no	no
+	no	no
finalOutputPath	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
fs	no	yes
.	no	no
rename	no	no
(	no	no
file	yes	yes
,	no	no
finalOutputPath	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HCatException	no	yes
(	no	no
ErrorType	no	yes
.	no	no
ERROR_MOVE_FAILED	no	yes
,	no	no
+	no	no
finalOutputPath	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
children	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
FileStatus	no	yes
firstChild	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
children	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
int	no	no
index	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
index	no	yes
<	no	no
children	no	yes
.	no	no
length	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
children	no	yes
[	no	no
index	no	yes
]	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TEMP_DIR_NAME	no	no
)	no	no
&&	no	no
!	no	no
children	no	yes
[	no	no
index	no	yes
]	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
LOGS_DIR_NAME	no	no
)	no	no
&&	no	no
!	no	no
children	no	yes
[	no	no
index	no	yes
]	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
SUCCEEDED_FILE_NAME	no	no
)	no	no
)	no	no
{	no	no
firstChild	no	yes
=	no	no
children	no	yes
[	no	no
index	no	yes
]	no	no
;	no	no
break	no	no
;	no	no
}	no	no
index	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
firstChild	no	yes
!=	no	no
null	no	no
&&	no	no
firstChild	no	yes
.	no	no
isDir	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
FileStatus	no	yes
child	no	yes
:	no	no
children	no	yes
)	no	no
{	no	no
moveTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
child	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
srcDir	no	yes
,	no	no
destDir	no	yes
,	no	no
dryRun	no	yes
,	no	no
immutable	no	yes
)	no	no
;	no	no

String	no	yes
name	no	yes
=	no	no
relativePath	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
filetype	no	yes
;	no	no
int	no	no
index	no	yes
=	no	no
name	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
'.'	no	no
)	no	no
;	no	no
if	no	no
(	no	no
index	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
filetype	no	yes
=	no	no
name	no	yes
.	no	no
substring	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
name	no	yes
=	no	no
name	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
index	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
filetype	no	yes
=	no	no
;	no	no
}	no	no
int	no	no
counter	no	yes
=	no	no
1	no	no
;	no	no
for	no	no
(	no	no
;	no	no
fs	no	no
.	no	no
exists	no	no
(	no	no
itemDest	yes	yes
)	no	no
&&	no	no
counter	no	yes
<	no	no
maxAppendAttempts	no	no
;	no	no
counter	no	yes
++	no	no
)	no	no
{	no	no
itemDest	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dest	yes	yes
,	no	no
name	no	yes
+	no	no
(	no	no
APPEND_SUFFIX	no	yes
+	no	no
counter	no	yes
)	no	no
+	no	no
filetype	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
counter	no	yes
==	no	no
maxAppendAttempts	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HCatException	no	yes
(	no	no
ErrorType	no	yes
.	no	no
ERROR_MOVE_FAILED	no	yes
,	no	no
+	no	no
file	yes	yes
+	no	no
+	no	no
src	yes	yes
+	no	no
+	no	no
dest	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
counter	no	yes
>	no	no
APPEND_COUNTER_WARN_THRESHOLD	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
counter	no	yes
+	no	no
+	no	no
APPEND_COUNTER_WARN_THRESHOLD	no	yes
+	no	no
+	no	no
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
dynamicPartitioningUsed	no	no
)	no	no
{	no	no
partitionsToAdd	no	yes
.	no	no
add	no	yes
(	no	no
constructPartition	no	yes
(	no	no
context	no	yes
,	no	no
jobInfo	no	yes
,	no	no
tblPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
jobInfo	no	yes
.	no	no
getPartitionValues	no	yes
(	no	no
)	no	no
,	no	no
jobInfo	no	yes
.	no	no
getOutputSchema	no	yes
(	no	no
)	no	no
,	no	no
getStorerParameterMap	no	yes
(	no	no
storer	no	yes
)	no	no
,	no	no
table	yes	yes
,	no	no
fs	no	yes
,	no	no
hiveConf	no	yes
,	no	no
status	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
partitionsDiscoveredByPath	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
partitionsToAdd	no	yes
.	no	no
add	no	yes
(	no	no
constructPartition	no	yes
(	no	no
context	no	yes
,	no	no
jobInfo	no	yes
,	no	no
getPartitionRootLocation	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
jobInfo	no	yes
.	no	no
getOutputSchema	no	yes
(	no	no
)	no	no
,	no	no
getStorerParameterMap	no	yes
(	no	no
storer	no	yes
)	no	no
,	no	no
table	yes	yes
,	no	no
fs	no	yes
,	no	no
hiveConf	no	yes
,	no	no
status	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ArrayList	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
ptnInfos	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	no
ptn	no	yes
:	no	no
partitionsToAdd	no	yes
)	no	no
{	no	no
ptnInfos	yes	yes
.	no	no
add	no	yes
(	no	no
InternalUtil	no	yes
.	no	no
createPtnKeyValueMap	no	yes
(	no	no
new	no	no
Table	no	yes
(	no	no
tableInfo	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
ptn	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
dynamicPartitioningUsed	no	no
&&	no	no
harProcessor	no	no
.	no	no
isEnabled	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
partitionsToAdd	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
customDynamicLocationUsed	no	no
)	no	no
{	no	no
Path	no	yes
src	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
ptnRootLocation	no	yes
)	no	no
;	no	no
moveTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
src	no	yes
,	no	no
src	no	yes
,	no	no
tblPath	no	yes
,	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
moveTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
src	no	yes
,	no	no
src	no	yes
,	no	no
tblPath	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
src	no	yes
.	no	no
equals	no	no
(	no	no
tblPath	no	yes
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
src	no	yes
,	no	no
true	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
dynamicPartitioningUsed	no	no
&&	no	no
harProcessor	no	no
.	no	no
isEnabled	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
partitionsToAdd	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
customDynamicLocationUsed	no	no
)	no	no
{	no	no
Path	no	yes
src	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
ptnRootLocation	no	yes
)	no	no
;	no	no
moveTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
src	no	yes
,	no	no
src	no	yes
,	no	no
tblPath	no	yes
,	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
moveTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
src	no	yes
,	no	no
src	no	yes
,	no	no
tblPath	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
src	no	yes
.	no	no
equals	no	no
(	no	no
tblPath	no	yes
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
src	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
moveCustomLocationTaskOutputs	no	yes
(	no	no
fs	no	yes
,	no	no
table	yes	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
updateTableSchema	no	yes
(	no	no
client	no	yes
,	no	no
table	yes	yes
,	no	no
jobInfo	no	yes
.	no	no
getOutputSchema	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
table	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
ptnInfos	yes	yes
)	no	no
;	no	no
client	no	yes
.	no	no
add_partitions	no	yes
(	no	no
partitionsToAdd	no	yes
)	no	no
;	no	no
partitionsAdded	no	yes
=	no	no
partitionsToAdd	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

private	no	no
void	no	no
cancelDelegationTokens	no	no
(	no	no
JobContext	no	no
context	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreClient	no	yes
client	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
HiveConf	no	yes
hiveConf	no	yes
=	no	no
HCatUtil	no	yes
.	no	no
getHiveConf	no	yes
(	no	no
context	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
client	no	yes
=	no	no
HCatUtil	no	yes
.	no	no
getHiveMetastoreClient	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
String	no	yes
tokenStrForm	no	yes
=	no	no
client	no	yes
.	no	no
getTokenStrForm	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
hCatKeyTokenSignature	yes	yes
=	no	no
context	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_KEY_TOKEN_SIGNATURE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tokenStrForm	no	yes
!=	no	no
null	no	no
&&	no	no
hCatKeyTokenSignature	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

static	no	no
void	no	no
initializeDeserializer	no	no
(	no	no
Deserializer	no	no
deserializer	no	no
,	no	no
Configuration	no	no
conf	no	no
,	no	no
HCatTableInfo	no	no
info	no	yes
,	no	no
HCatSchema	no	no
schema	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
Properties	no	yes
props	yes	yes
=	no	no
getSerdeProperties	no	yes
(	no	no
info	no	yes
,	no	no
schema	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
checkOutputSpecs	no	no
(	no	no
JobContext	no	no
context	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
for	no	no
(	no	no
String	no	no
alias	yes	no
:	no	no
getOutputFormatAliases	no	no
(	no	no
context	no	no
)	no	no
)	no	no
{	no	no

void	no	no
handleSecurity	no	no
(	no	no
Credentials	no	no
credentials	no	yes
,	no	no
OutputJobInfo	no	no
outputJobInfo	no	yes
,	no	no
IMetaStoreClient	no	no
client	no	yes
,	no	no
Configuration	no	no
conf	no	yes
,	no	no
boolean	no	no
harRequested	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
MetaException	no	no
,	no	no
TException	no	no
,	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
UserGroupInformation	no	yes
.	no	no
isSecurityEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
TokenSelector	no	yes
<	no	no
?	no	no
extends	no	no
TokenIdentifier	no	yes
>	no	no
hiveTokenSelector	no	yes
=	no	no
new	no	no
DelegationTokenSelector	no	yes
(	no	no
)	no	no
;	no	no
Token	no	yes
<	no	no
?	no	no
extends	no	no
TokenIdentifier	no	yes
>	no	no
hiveToken	no	yes
=	no	no
hiveTokenSelector	no	yes
.	no	no
selectToken	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getTokens	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
hiveToken	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveToken	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
tokenSignature	yes	yes
=	no	no
getTokenSignature	no	yes
(	no	no
outputJobInfo	no	yes
)	no	no
;	no	no
hiveToken	no	yes
=	no	no
HCatUtil	no	yes
.	no	no
extractThriftToken	no	yes
(	no	no
client	no	yes
.	no	no
getDelegationToken	no	yes
(	no	no
ugi	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
tokenSignature	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
harRequested	no	no
)	no	no
{	no	no
TokenSelector	no	yes
<	no	no
?	no	no
extends	no	no
TokenIdentifier	no	yes
>	no	no
jtTokenSelector	no	yes
=	no	no
new	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapreduce	no	yes
.	no	no
security	no	yes
.	no	no
token	no	yes
.	no	no
delegation	no	yes
.	no	no
DelegationTokenSelector	no	yes
(	no	no
)	no	no
;	no	no
Token	no	yes
jtToken	no	yes
=	no	no
jtTokenSelector	no	yes
.	no	no
selectToken	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
security	no	yes
.	no	no
SecurityUtil	no	yes
.	no	no
buildTokenService	no	yes
(	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
getHCatShim	no	yes
(	no	no
)	no	no
.	no	no
getResourceManagerAddress	no	yes
(	no	no
conf	no	yes
)	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getTokens	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
jtToken	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
credentials	no	yes
.	no	no
addToken	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
)	no	no
,	no	no
HCatUtil	no	yes
.	no	no
getJobTrackerDelegationToken	no	yes
(	no	no
conf	no	yes
,	no	no
ugi	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
credentials	no	yes
.	no	no
addToken	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
ugi	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tokenSignature	yes	yes
)	no	no
,	no	no
hiveToken	no	yes
)	no	no
;	no	no

public	no	no
synchronized	no	no
void	no	no
register	no	no
(	no	no
TaskAttemptContext	no	no
context	no	yes
,	no	no
TaskCommitterProxy	no	no
committer	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
key	yes	yes
=	no	no
generateKey	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no

public	no	no
synchronized	no	no
void	no	no
discardCleanupFor	no	no
(	no	no
TaskAttemptContext	no	no
context	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
key	yes	yes
=	no	no
generateKey	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no

assertTrue	no	yes
(	no	no
e	yes	yes
instanceof	no	no
NoSuchObjectException	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
hcatConf	no	yes
.	no	no
set	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_PERMS	no	yes
,	no	no
)	no	no
;	no	no
hcatConf	no	yes
.	no	no
set	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_GROUP	no	yes
,	no	no
)	no	no
;	no	no
ret	no	yes
=	no	no
callHCatCli	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
}	no	no
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
ret	no	yes
==	no	no
0	no	no
)	no	no
;	no	no
try	no	no
{	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
e	yes	yes
instanceof	no	no
NoSuchObjectException	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
dfsPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
hcatConf	no	yes
)	no	no
.	no	no
getFileStatus	no	yes
(	no	no
dfsPath	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
formattedRun	no	no
(	no	no
IDriver	no	no
driver	no	yes
,	no	no
String	no	yes
name	yes	no
,	no	no
String	no	yes
selectCmd	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
CommandProcessorException	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
selectCmd	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
src_values	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
src_values	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRW	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
HCatRecord	no	yes
r	yes	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRW	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	yes	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRW	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
r2	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
r2	no	yes
)	no	no
)	no	no
;	no	no
Writable	no	yes
s2	yes	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
r2	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
r2	no	yes
)	no	no
)	no	no
;	no	no
Writable	no	yes
s2	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s2	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s	no	yes
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s2	no	yes
)	no	no
)	no	no
;	no	no
LazySimpleSerDe	no	yes
testSD	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
testSD	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
Writable	no	yes
s3	yes	yes
=	no	no
testSD	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Writable	no	yes
s	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
r2	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
r2	no	yes
)	no	no
)	no	no
;	no	no
Writable	no	yes
s2	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s2	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s	no	yes
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s2	no	yes
)	no	no
)	no	no
;	no	no
LazySimpleSerDe	no	yes
testSD	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
testSD	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
Writable	no	yes
s3	no	yes
=	no	no
testSD	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s3	no	yes
)	no	no
;	no	no
Object	no	yes
o3	no	yes
=	no	no
testSD	no	yes
.	no	no
deserialize	no	yes
(	no	no
s3	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertFalse	no	yes
(	no	no
r	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
o3	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
HCatRecord	no	yes
s4	yes	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
o3	no	yes
,	no	no
testSD	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

HCatRecord	no	yes
r2	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
r2	no	yes
)	no	no
)	no	no
;	no	no
Writable	no	yes
s2	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s2	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s	no	yes
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s2	no	yes
)	no	no
)	no	no
;	no	no
LazySimpleSerDe	no	yes
testSD	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
testSD	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
Writable	no	yes
s3	no	yes
=	no	no
testSD	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s3	no	yes
)	no	no
;	no	no
Object	no	yes
o3	no	yes
=	no	no
testSD	no	yes
.	no	no
deserialize	no	yes
(	no	no
s3	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertFalse	no	yes
(	no	no
r	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
o3	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
HCatRecord	no	yes
s4	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
o3	no	yes
,	no	no
testSD	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s4	no	yes
)	no	no
;	no	no
LazyHCatRecord	no	yes
s5	yes	yes
=	no	no
new	no	no
LazyHCatRecord	no	yes
(	no	no
o3	no	yes
,	no	no
testSD	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Writable	no	yes
s2	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s2	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s	no	yes
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
(	no	no
HCatRecord	no	yes
)	no	no
s2	no	yes
)	no	no
)	no	no
;	no	no
LazySimpleSerDe	no	yes
testSD	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
testSD	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
Writable	no	yes
s3	no	yes
=	no	no
testSD	no	yes
.	no	no
serialize	no	yes
(	no	no
s	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s3	no	yes
)	no	no
;	no	no
Object	no	yes
o3	no	yes
=	no	no
testSD	no	yes
.	no	no
deserialize	no	yes
(	no	no
s3	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertFalse	no	yes
(	no	no
r	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
o3	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
HCatRecord	no	yes
s4	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
o3	no	yes
,	no	no
testSD	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s4	no	yes
)	no	no
;	no	no
LazyHCatRecord	no	yes
s5	no	yes
=	no	no
new	no	no
LazyHCatRecord	no	yes
(	no	no
o3	no	yes
,	no	no
testSD	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s5	no	yes
)	no	no
;	no	no
LazyHCatRecord	no	yes
s6	yes	yes
=	no	no
new	no	no
LazyHCatRecord	no	yes
(	no	no
s4	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRW	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Pair	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
first	no	yes
;	no	no
HCatRecord	no	yes
r	yes	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
jsde	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
jsde	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRW	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Pair	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
first	no	yes
;	no	no
HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
jsde	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
jsde	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	yes	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
Pair	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
first	no	yes
;	no	no
HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
jsde	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
jsde	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
o1	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
msg	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isEqual	no	yes
=	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
o1	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
isEqual	no	yes
)	no	no
;	no	no
Writable	no	yes
s2	yes	yes
=	no	no
jsde	no	yes
.	no	no
serialize	no	yes
(	no	no
o1	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
HCatRecordSerDe	no	yes
hrsd	no	yes
=	no	no
new	no	no
HCatRecordSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
hrsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
jsde	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
jsde	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
hrsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
o1	no	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
hrsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
msg	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isEqual	no	yes
=	no	no
HCatDataCheckUtil	no	yes
.	no	no
recordsEqual	no	yes
(	no	no
r	no	yes
,	no	no
o1	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
isEqual	no	yes
)	no	no
;	no	no
Writable	no	yes
s2	no	yes
=	no	no
jsde	no	yes
.	no	no
serialize	no	yes
(	no	no
o1	no	yes
,	no	no
hrsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s2	no	yes
)	no	no
;	no	no
HCatRecord	no	yes
o2	yes	yes
=	no	no
(	no	no
HCatRecord	no	yes
)	no	no
jsde	no	yes
.	no	no
deserialize	no	yes
(	no	no
s2	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
Pair	no	no
<	no	no
Properties	no	yes
,	no	no
HCatRecord	no	yes
>	no	no
e	no	yes
:	no	no
getData	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Properties	no	yes
tblProps	no	yes
=	no	no
e	no	yes
.	no	no
first	no	yes
;	no	no
HCatRecord	no	yes
r	yes	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
Properties	no	yes
internalTblProps	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
pe	no	yes
:	no	no
tblProps	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
serdeConstants	no	no
.	no	no
LIST_COLUMNS	no	no
)	no	no
)	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
getInternalNames	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tblProps	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
internalTblProps	no	yes
)	no	no
;	no	no
JsonSerDe	no	yes
wjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
wjsd	no	yes
,	no	no
conf	no	yes
,	no	no
internalTblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
rjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
rjsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no

HCatRecord	no	yes
r	no	yes
=	no	no
e	no	yes
.	no	no
second	no	yes
;	no	no
Properties	no	yes
internalTblProps	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
pe	no	yes
:	no	no
tblProps	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
serdeConstants	no	no
.	no	no
LIST_COLUMNS	no	no
)	no	no
)	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
getInternalNames	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tblProps	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
internalTblProps	no	yes
)	no	no
;	no	no
JsonSerDe	no	yes
wjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
wjsd	no	yes
,	no	no
conf	no	yes
,	no	no
internalTblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
rjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
rjsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	yes	yes
=	no	no
wjsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
wjsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
pe	no	yes
:	no	no
tblProps	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
serdeConstants	no	no
.	no	no
LIST_COLUMNS	no	no
)	no	no
)	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
getInternalNames	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tblProps	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
internalTblProps	no	yes
)	no	no
;	no	no
JsonSerDe	no	yes
wjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
wjsd	no	yes
,	no	no
conf	no	yes
,	no	no
internalTblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
rjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
rjsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
wjsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
wjsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
Object	no	yes
o1	yes	yes
=	no	no
wjsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no

internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
internalTblProps	no	yes
.	no	no
put	no	yes
(	no	no
pe	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
getInternalNames	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
pe	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tblProps	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
internalTblProps	no	yes
)	no	no
;	no	no
JsonSerDe	no	yes
wjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
wjsd	no	yes
,	no	no
conf	no	yes
,	no	no
internalTblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
JsonSerDe	no	yes
rjsd	no	yes
=	no	no
new	no	no
JsonSerDe	no	yes
(	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
rjsd	no	yes
,	no	no
conf	no	yes
,	no	no
tblProps	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
r	no	yes
)	no	no
;	no	no
Writable	no	yes
s	no	yes
=	no	no
wjsd	no	yes
.	no	no
serialize	no	yes
(	no	no
r	no	yes
,	no	no
wjsd	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
s	no	yes
)	no	no
;	no	no
Object	no	yes
o1	no	yes
=	no	no
wjsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
o1	no	yes
)	no	no
;	no	no
Object	no	yes
o2	yes	yes
=	no	no
rjsd	no	yes
.	no	no
deserialize	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testSimpleOperation	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
typeString	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
TypeInfo	no	yes
ti	yes	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromTypeString	no	yes
(	no	no
typeString	no	yes
)	no	no
;	no	no
HCatSchema	no	yes
hsch	no	yes
=	no	no
HCatSchemaUtils	no	yes
.	no	no
getHCatSchemaFromTypeString	no	yes
(	no	no
typeString	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testSimpleOperation	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
typeString	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
TypeInfo	no	yes
ti	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromTypeString	no	yes
(	no	no
typeString	no	yes
)	no	no
;	no	no
HCatSchema	no	yes
hsch	yes	yes
=	no	no
HCatSchemaUtils	no	yes
.	no	no
getHCatSchemaFromTypeString	no	yes
(	no	no
typeString	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ti	no	yes
.	no	no
getTypeName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
_testHCatDynamicPartitionMaxPartitions	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
HiveConf	no	yes
hc	no	yes
=	no	no
new	no	no
HiveConf	no	yes
(	no	no
this	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
maxParts	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
DYNAMICPARTITIONMAXPARTS	no	yes
)	no	no
;	no	no

hiveConf	no	yes
.	no	no
setIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTORETHRIFTFAILURERETRIES	no	yes
,	no	no
3	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SEMANTIC_ANALYZER_HOOK	no	yes
.	no	no
varname	no	yes
,	no	no
HCatSemanticAnalyzer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PREEXECHOOKS	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
POSTEXECHOOKS	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SUPPORT_CONCURRENCY	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PREEXECHOOKS	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
POSTEXECHOOKS	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTOREWAREHOUSE	no	yes
.	no	no
varname	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
WAREHOUSE	no	yes
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTORECONNECTURLKEY	no	yes
.	no	no
varname	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTOREURIS	no	yes
.	no	no
varname	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
THRIFT_URIS	no	yes
)	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTOREWAREHOUSE	no	yes
.	no	no
varname	no	yes
,	no	no
warehousedir	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
hmsc	no	yes
=	no	no
new	no	no
HiveMetaStoreClient	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
initalizeTables	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
main	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
args	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
int	no	no
count	no	yes
=	no	no
10000	no	no
;	no	no
boolean	no	no
create	no	yes
=	no	no
true	no	no
;	no	no
String	no	yes
usage	yes	yes
=	no	no
+	no	no
+	no	no
;	no	no
if	no	no
(	no	no
args	no	no
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no

int	no	no
count	no	yes
=	no	no
10000	no	no
;	no	no
boolean	no	no
create	no	yes
=	no	no
true	no	no
;	no	no
String	no	yes
usage	yes	yes
=	no	no
+	no	no
+	no	no
;	no	no
if	no	no
(	no	no
args	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
usage	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
args	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
args	no	yes
[	no	no
++	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
file	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
file	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
args	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
args	no	yes
[	no	no
++	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
file	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
file	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
count	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
create	no	yes
)	no	no
;	no	no

protected	no	no
HCatSchema	no	no
convertPigSchemaToHCatSchema	no	no
(	no	no
Schema	no	no
pigSchema	yes	no
,	no	no
HCatSchema	no	no
tableSchema	yes	no
)	no	no
throws	no	no
FrontendException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
HCatFieldSchema	no	no
getHCatFSFromPigFS	no	no
(	no	no
FieldSchema	no	no
fSchema	yes	no
,	no	no
HCatFieldSchema	no	no
hcatFieldSchema	no	no
,	no	no
Schema	no	no
pigSchema	no	no
,	no	no
HCatSchema	no	no
tableSchema	no	no
)	no	no
throws	no	no
FrontendException	no	no
,	no	no
HCatException	no	no
{	no	no
if	no	no
(	no	no
hcatFieldSchema	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
requiredFieldsInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
list	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
requiredFieldsInfo	no	yes
.	no	no
getFields	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RequiredField	no	no
rf	no	yes
:	no	no
requiredFieldsInfo	no	yes
.	no	no
getFields	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
list	no	yes
.	no	no
add	no	yes
(	no	no
rf	no	yes
.	no	no
getIndex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ColumnProjectionUtils	no	yes
.	no	no
setReadColumns	no	yes
(	no	no
job	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
,	no	no
list	no	yes
)	no	no
;	no	no
outputSchema	yes	yes
=	no	no
phutil	no	yes
.	no	no
getHCatSchema	no	yes
(	no	no
requiredFieldsInfo	no	yes
.	no	no
getFields	no	yes
(	no	no
)	no	no
,	no	no
signature	no	yes
,	no	no
this	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatInputFormat	no	yes
.	no	no
setOutputSchema	no	yes
(	no	no
job	no	yes
,	no	no
outputSchema	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
ColumnProjectionUtils	no	yes
.	no	no
setReadAllColumns	no	yes
(	no	no
job	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
HCatUtil	no	no
.	no	no
checkJobContextIfRunningFromBackend	no	no
(	no	no
job	no	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
HCatSchema	no	yes
hcatTableSchema	no	yes
=	no	no
(	no	no
HCatSchema	no	yes
)	no	no
udfProps	no	yes
.	no	no
get	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_TABLE_SCHEMA	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
executeStatementOnDriver	no	no
(	no	no
String	no	no
cmd	yes	no
,	no	no
IDriver	no	no
driver	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

void	no	no
pigValueRangeTest	no	no
(	no	no
String	no	yes
tblName	no	yes
,	no	no
String	no	yes
hiveType	no	yes
,	no	no
String	no	yes
pigType	no	no
,	no	no
HCatBaseStorer	no	no
.	no	no
OOR_VALUE_OPT_VALUES	no	no
goal	no	no
,	no	no
String	no	yes
inputValue	no	yes
,	no	no
String	no	yes
expectedValue	no	no
,	no	no
String	no	yes
format	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
dropTable	no	yes
(	no	no
tblName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
field	no	yes
=	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
createTableDefaultDB	no	yes
(	no	no
tblName	no	yes
,	no	no
field	no	yes
+	no	no
+	no	no
hiveType	no	yes
,	no	no
null	no	no
,	no	no
driver	no	yes
,	no	no
storageFormat	no	yes
)	no	no
;	no	no
HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
INPUT_FILE_NAME	yes	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
inputValue	no	yes
}	no	no
)	no	no
;	no	no

else	no	no
{	no	no
FrontendException	no	yes
fe	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
ON_OOR_VALUE_OPT	no	yes
+	no	no
+	no	no
goal	no	yes
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FrontendException	no	yes
e	yes	yes
)	no	no
{	no	no
fe	no	yes
=	no	no
e	yes	yes
;	no	no
}	no	no
switch	no	no
(	no	no
goal	no	yes
)	no	no
{	no	no
case	no	no
Null	no	no
:	no	no
break	no	no
;	no	no
case	no	no
Throw	no	no
:	no	no
assertTrue	no	no
(	no	no
,	no	no
fe	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
fe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
return	no	no
;	no	no
default	no	no
:	no	no
assertFalse	no	no
(	no	no
+	no	no
goal	no	yes
,	no	no
1	no	no
==	no	no
1	no	no
)	no	no
;	no	no
}	no	no
}	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatLoader	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no

logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
ON_OOR_VALUE_OPT	no	yes
+	no	no
+	no	no
goal	no	yes
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FrontendException	no	no
e	no	yes
)	no	no
{	no	no
fe	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
switch	no	no
(	no	no
goal	no	yes
)	no	no
{	no	no
case	no	no
Null	no	no
:	no	no
break	no	no
;	no	no
case	no	no
Throw	no	no
:	no	no
assertTrue	no	no
(	no	no
,	no	no
fe	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
fe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
return	no	no
;	no	no
default	no	no
:	no	no
assertFalse	no	no
(	no	no
+	no	no
goal	no	yes
,	no	no
1	no	no
==	no	no
1	no	no
)	no	no
;	no	no
}	no	no
}	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatLoader	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getResponseCode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
List	no	yes
l	no	yes
=	no	no
new	no	no
ArrayList	no	yes
(	no	no
)	no	no
;	no	no

AbstractHCatLoaderTest	no	yes
.	no	no
createTableDefaultDB	no	yes
(	no	no
tblName	no	yes
,	no	no
,	no	no
null	no	no
,	no	no
driver	no	yes
,	no	no
storageFormat	no	yes
)	no	no
;	no	no
int	no	no
NUM_ROWS	no	yes
=	no	no
5	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
rows	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
NUM_ROWS	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_ROWS	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
rows	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
i	no	yes
+	no	no
+	no	no
5.2	no	no
;	no	no
}	no	no
HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
INPUT_FILE_NAME	no	yes
,	no	no
rows	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
INPUT_FILE_NAME	no	yes
)	no	no
;	no	no
PigServer	no	yes
server	no	yes
=	no	no
createPigServer	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
int	no	no
queryNumber	no	yes
=	no	no
1	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
INPUT_FILE_NAME	no	yes
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
HCatLoader	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tblName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	yes	no
)	no	no
{	no	no

for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
NUM_ROWS	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
rows	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
i	no	yes
+	no	no
+	no	no
5.2	no	no
;	no	no
}	no	no
HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
INPUT_FILE_NAME	no	yes
,	no	no
rows	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
INPUT_FILE_NAME	no	yes
)	no	no
;	no	no
PigServer	no	yes
server	no	yes
=	no	no
createPigServer	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
int	no	no
queryNumber	no	yes
=	no	no
1	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
INPUT_FILE_NAME	no	yes
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatStorer	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	yes	yes
+	no	no
+	no	no
HCatLoader	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
queryNumber	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getResponseCode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
l	no	yes
=	no	no
new	no	no
ArrayList	no	yes
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
l	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
dumpFile	no	no
(	no	no
String	no	yes
fileName	yes	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
File	no	yes
file	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
fileName	yes	yes
)	no	no
;	no	no
BufferedReader	no	yes
reader	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
FileReader	no	yes
(	no	no
file	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
line	no	yes
=	no	no
null	no	no
;	no	no

static	no	no
void	no	no
dumpFile	no	no
(	no	no
String	no	yes
fileName	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
File	no	yes
file	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
fileName	no	yes
)	no	no
;	no	no
BufferedReader	no	yes
reader	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
FileReader	no	yes
(	no	no
file	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
line	yes	yes
=	no	no
null	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
fileName	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
(	no	no
line	yes	yes
=	no	no
reader	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

server	no	yes
.	no	no
setBatchOn	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
registerQuery	no	yes
(	no	no
+	no	no
tablename	no	yes
+	no	no
+	no	no
pigSchema	no	yes
+	no	no
)	no	no
;	no	no
Schema	no	yes
dumpedASchema	no	yes
=	no	no
server	no	yes
.	no	no
dumpSchema	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
registerQuery	no	yes
(	no	no
+	no	no
tablename	no	yes
+	no	no
+	no	no
(	no	no
provideSchemaToStorer	no	yes
?	no	no
+	no	no
pigSchema	no	yes
+	no	no
:	no	no
)	no	no
+	no	no
)	no	no
;	no	no
ExecJob	no	yes
execJob	no	yes
=	no	no
server	no	yes
.	no	no
executeBatch	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
execJob	no	yes
.	no	no
getStatistics	no	no
(	no	no
)	no	no
.	no	no
isSuccessful	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
execJob	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
server	no	yes
.	no	no
registerQuery	no	yes
(	no	no
+	no	no
tablename	no	yes
+	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
dumpSchema	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Tuple	no	yes
>	no	no
it	no	yes
=	no	no
server	no	yes
.	no	no
openIterator	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Tuple	no	yes
input	no	yes
=	no	no
result	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
++	no	no
)	no	no
;	no	no
Tuple	no	yes
output	yes	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
compareTuples	no	yes
(	no	no
input	no	yes
,	no	no
output	yes	yes
)	no	no
;	no	no

static	no	no
void	no	no
executeStatementOnDriver	no	no
(	no	no
String	no	no
cmd	yes	no
,	no	no
IDriver	no	no
driver	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testReadWrite	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
final	no	no
String	no	yes
tblName	no	yes
=	no	no
;	no	no
final	no	no
String	no	yes
tblName2	no	yes
=	no	no
;	no	no
File	no	yes
dataDir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
TEST_DATA_DIR	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
)	no	no
;	no	no
FileUtil	no	yes
.	no	no
fullyDelete	no	yes
(	no	no
dataDir	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
dataDir	no	yes
.	no	no
mkdir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
INPUT_FILE_NAME	yes	yes
=	no	no
dataDir	no	yes
+	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
dropTable	no	yes
(	no	no
tblName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
INPUT_FILE_NAME	yes	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
+	no	no
dataDir	no	yes
.	no	no
toURI	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
dropTable	no	yes
(	no	no
tblName2	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
createTableDefaultDB	no	yes
(	no	no
tblName2	no	yes
,	no	no
+	no	no
+	no	no
,	no	no
null	no	no
,	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no

AbstractHCatLoaderTest	no	yes
.	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
+	no	no
dataDir	no	yes
.	no	no
toURI	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
dropTable	no	yes
(	no	no
tblName2	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
createTableDefaultDB	no	yes
(	no	no
tblName2	no	yes
,	no	no
+	no	no
+	no	no
,	no	no
null	no	no
,	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
INPUT_FILE_NAME	no	yes
)	no	no
;	no	no
TestHCatStorer	no	yes
.	no	no
dumpFile	no	yes
(	no	no
INPUT_FILE_NAME	no	yes
)	no	no
;	no	no
PigServer	no	yes
server	no	yes
=	no	no
createPigServer	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
queryNumber	no	yes
=	no	no
1	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
,	no	no
queryNumber	no	yes
++	no	no
)	no	no
;	no	no
logAndRegister	no	yes
(	no	no
server	no	yes
,	no	no
+	no	no
tblName2	no	yes
+	no	no
,	no	no
queryNumber	no	yes
)	no	no
;	no	no
AbstractHCatLoaderTest	no	yes
.	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName2	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
ArrayList	no	yes
l	no	yes
=	no	no
new	no	no
ArrayList	no	yes
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
l	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Object	no	no
t	yes	no
:	no	no
l	no	yes
)	no	no
{	no	no

private	no	no
long	no	no
getNextNLId	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
SQLGenerator	no	no
sqlGenerator	no	yes
,	no	no
String	no	yes
sequence	no	yes
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
+	no	no
+	no	no
quoteString	no	yes
(	no	no
sequence	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
addWriteNotificationLog	no	no
(	no	no
NotificationEvent	no	no
event	yes	no
,	no	no
AcidWriteEvent	no	no
acidWriteEvent	no	no
,	no	no
Connection	no	no
dbConn	no	no
,	no	no
SQLGenerator	no	no
sqlGenerator	no	no
,	no	no
AcidWriteMessage	no	no
msg	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
SQLException	no	no
{	no	no

PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
dbName	yes	yes
=	no	no
acidWriteEvent	no	yes
.	no	no
getDatabase	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tblName	yes	yes
=	no	no
acidWriteEvent	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
partition	yes	yes
=	no	no
acidWriteEvent	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tableObj	no	yes
=	no	no
msg	no	yes
.	no	no
getTableObjStr	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
partitionObj	no	yes
=	no	no
msg	no	yes
.	no	no
getPartitionObjStr	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
files	no	yes
=	no	no
ReplChangeManager	no	yes
.	no	no
joinWithSeparator	no	yes
(	no	no
msg	no	yes
.	no	no
getFiles	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sqlGenerator	no	yes
.	no	no
getDbProduct	no	no
(	no	no
)	no	no
==	no	no
MYSQL	no	no
)	no	no
{	no	no
stmt	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
acidWriteEvent	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partition	yes	yes
)	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
rs	no	no
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
nextNLId	yes	yes
=	no	no
getNextNLId	no	yes
(	no	no
stmt	no	yes
,	no	no
sqlGenerator	no	yes
,	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no
int	no	no
currentTime	yes	yes
=	no	no
now	no	yes
(	no	no
)	no	no
;	no	no
pst	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sqlGenerator	no	yes
.	no	no
addEscapeCharacters	no	yes
(	no	no
s	yes	yes
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
nextNLId	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
acidWriteEvent	yes	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
3	no	no
,	no	no
acidWriteEvent	yes	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
dbName	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
6	no	no
,	no	no
partition	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
7	no	no
,	no	no
tableObj	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
8	no	no
,	no	no
partitionObj	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
9	no	no
,	no	no
files	yes	yes
)	no	no
;	no	no

pst	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sqlGenerator	no	yes
.	no	no
addEscapeCharacters	no	yes
(	no	no
s	no	yes
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
nextNLId	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
acidWriteEvent	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setLong	no	yes
(	no	no
3	no	no
,	no	no
acidWriteEvent	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
6	no	no
,	no	no
partition	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
7	no	no
,	no	no
tableObj	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
8	no	no
,	no	no
partitionObj	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
9	no	no
,	no	no
files	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setInt	no	yes
(	no	no
10	no	no
,	no	no
currentTime	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
nextNLId	no	yes
,	no	no
acidWriteEvent	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
,	no	no
acidWriteEvent	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
partition	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tableObj	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
partitionObj	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
files	yes	yes
)	no	no
,	no	no
currentTime	no	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
existingFiles	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
String	no	yes
existingFiles	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
existingFiles	no	yes
.	no	no
contains	no	no
(	no	no
sqlGenerator	no	yes
.	no	no
addEscapeCharacters	no	yes
(	no	no
files	yes	yes
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
files	yes	yes
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
long	no	no
nlId	yes	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
int	no	no
currentTime	yes	yes
=	no	no
now	no	yes
(	no	no
)	no	no
;	no	no
files	yes	yes
=	no	no
ReplChangeManager	no	yes
.	no	no
joinWithSeparator	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
files	yes	yes
,	no	no
existingFiles	no	yes
)	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no
pst	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
sqlGenerator	no	yes
.	no	no
addEscapeCharacters	no	yes
(	no	no
s	yes	yes
)	no	no
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
tableObj	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
partitionObj	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
files	yes	yes
)	no	no
;	no	no
pst	no	yes
.	no	no
setInt	no	yes
(	no	no
4	no	no
,	no	no
currentTime	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
process	no	no
(	no	no
NotificationEvent	no	no
event	yes	yes
,	no	no
ListenerEvent	no	no
listenerEvent	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
event	yes	yes
.	no	no
setMessageFormat	no	yes
(	no	no
msgEncoder	no	yes
.	no	no
getMessageFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
JMSException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Destination	no	yes
topic	no	yes
=	no	no
createTopic	no	yes
(	no	no
topicName	yes	yes
)	no	no
;	no	no
Message	no	yes
msg	no	yes
=	no	no
session	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
createTextMessage	no	yes
(	no	no
hCatEventMessage	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_EVENT	no	yes
,	no	no
hCatEventMessage	yes	yes
.	no	no
getEventType	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_MESSAGE_VERSION	no	yes
,	no	no
messageFactory	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
setStringProperty	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_MESSAGE_FORMAT	no	yes
,	no	no
messageFactory	no	yes
.	no	no
getMessageFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MessageProducer	no	yes
producer	no	yes
=	no	no
createProducer	no	yes
(	no	no
topic	no	yes
)	no	no
;	no	no
producer	no	yes
.	no	no
send	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
session	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
retries	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
retries	no	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
testAndCreateConnection	no	yes
(	no	no
)	no	no
;	no	no
send	no	yes
(	no	no
hCatEventMessage	yes	yes
,	no	no
topicName	yes	yes
,	no	no
retries	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

protected	no	no
Connection	no	yes
createConnection	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Context	no	yes
jndiCntxt	no	yes
;	no	no
Connection	no	yes
jmsConnection	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
jndiCntxt	no	yes
=	no	no
new	no	no
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
connFac	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiCntxt	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
=	no	no
connFac	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
setExceptionListener	no	no
(	no	no
new	no	no
ExceptionListener	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onException	no	no
(	no	no
JMSException	no	no
jmse	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Context	no	yes
jndiCntxt	no	yes
;	no	no
Connection	no	yes
jmsConnection	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
jndiCntxt	no	yes
=	no	no
new	no	no
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
connFac	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiCntxt	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
=	no	no
connFac	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
setExceptionListener	no	no
(	no	no
new	no	no
ExceptionListener	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onException	no	no
(	no	no
JMSException	no	no
jmse	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
jmse	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NamingException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JMSException	no	no
e	yes	yes
)	no	no
{	no	no

Connection	no	yes
jmsConnection	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
jndiCntxt	no	yes
=	no	no
new	no	no
InitialContext	no	yes
(	no	no
)	no	no
;	no	no
ConnectionFactory	no	yes
connFac	no	yes
=	no	no
(	no	no
ConnectionFactory	no	yes
)	no	no
jndiCntxt	no	yes
.	no	no
lookup	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
=	no	no
connFac	no	yes
.	no	no
createConnection	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
jmsConnection	no	yes
.	no	no
setExceptionListener	no	no
(	no	no
new	no	no
ExceptionListener	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onException	no	no
(	no	no
JMSException	no	no
jmse	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
jmse	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NamingException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JMSException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
dropPartitions	no	no
(	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tableName	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
partitionSpec	yes	no
,	no	no
boolean	no	no
ifExists	no	no
,	no	no
boolean	no	no
deleteData	no	no
)	no	no
throws	no	no
HCatException	no	no
{	no	no

HCatClient	no	yes
client	no	yes
=	no	no
HCatClient	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
Configuration	no	yes
(	no	no
hcatConf	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
tableName	no	yes
=	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
true	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
getDatabase	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
exception	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exception	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
,	no	no
exception	yes	yes
instanceof	no	no
ObjectNotFoundException	no	yes
)	no	no
;	no	no
}	no	no
client	no	yes
.	no	no
createDatabase	no	yes
(	no	no
HCatCreateDBDesc	no	yes
.	no	no
create	no	yes
(	no	no
dbName	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	yes	yes
)	no	no
{	no	no

client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
exception	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exception	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
,	no	no
exception	yes	yes
instanceof	no	no
ObjectNotFoundException	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
partitionColumn	no	yes
=	no	no
;	no	no
List	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
columns	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
partitionColumns	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
partitionColumn	no	yes
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
)	no	no
;	no	no
HCatTable	no	yes
table	no	yes
=	no	no
new	no	no
HCatTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
.	no	no
cols	no	yes
(	no	no
columns	no	yes
)	no	no
.	no	no
partCols	no	yes
(	no	no
partitionColumns	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
createTable	no	yes
(	no	no
HCatCreateTableDesc	no	yes
.	no	no
create	no	yes
(	no	no
table	no	yes
,	no	no
false	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatTable	no	yes
createdTable	no	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partitionSpec	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
partitionColumn	no	yes
,	no	no
)	no	no
;	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
getPartition	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
;	no	no

ArrayList	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
partitionColumns	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
partitionColumn	no	yes
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
)	no	no
;	no	no
HCatTable	no	yes
table	no	yes
=	no	no
new	no	no
HCatTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
.	no	no
cols	no	yes
(	no	no
columns	no	yes
)	no	no
.	no	no
partCols	no	yes
(	no	no
partitionColumns	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
createTable	no	yes
(	no	no
HCatCreateTableDesc	no	yes
.	no	no
create	no	yes
(	no	no
table	no	yes
,	no	no
false	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatTable	no	yes
createdTable	no	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partitionSpec	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
partitionColumn	no	yes
,	no	no
)	no	no
;	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
getPartition	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
exception	yes	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
exception	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
,	no	no
exception	yes	yes
instanceof	no	no
ObjectNotFoundException	no	yes
)	no	no
;	no	no
}	no	no
client	no	yes
.	no	no
addPartition	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
HCatPartition	no	yes
(	no	no
createdTable	no	yes
,	no	no
partitionSpec	no	yes
,	no	no
makePartLocation	no	yes
(	no	no
createdTable	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
)	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
client	no	yes
.	no	no
listPartitionsByFilter	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partitionColumn	no	yes
+	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testGetMessageBusTopicName	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
HCatClient	no	yes
client	no	yes
=	no	no
HCatClient	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
Configuration	no	yes
(	no	no
hcatConf	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
tableName	no	yes
=	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
true	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
createDatabase	no	yes
(	no	no
HCatCreateDBDesc	no	yes
.	no	no
create	no	yes
(	no	no
dbName	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
messageBusTopicName	no	yes
=	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
tableProperties	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
tableProperties	no	yes
.	no	no
put	no	yes
(	no	no
HCatConstants	no	yes
.	no	no
HCAT_MSGBUS_TOPIC_NAME	no	yes
,	no	no
messageBusTopicName	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
createTable	no	yes
(	no	no
HCatCreateTableDesc	no	yes
.	no	no
create	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
)	no	no
.	no	no
tblProps	no	yes
(	no	no
tableProperties	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
messageBusTopicName	no	yes
,	no	no
client	no	yes
.	no	no
getMessageBusTopicName	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
true	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	yes	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPartitionSchema	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
HCatClient	no	yes
client	no	yes
=	no	no
HCatClient	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
Configuration	no	yes
(	no	no
hcatConf	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
final	no	no
String	no	yes
tableName	no	yes
=	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
true	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
client	no	yes
.	no	no
createDatabase	no	yes
(	no	no
HCatCreateDBDesc	no	yes
.	no	no
create	no	yes
(	no	no
dbName	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
columnSchema	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
INT	no	yes
,	no	no
)	no	no
,	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
partitionSchema	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
,	no	no
new	no	no
HCatFieldSchema	no	yes
(	no	no
,	no	no
Type	no	yes
.	no	no
STRING	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
createTable	no	yes
(	no	no
HCatCreateTableDesc	no	yes
.	no	no
create	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
columnSchema	no	yes
)	no	no
.	no	no
partCols	no	yes
(	no	no
partitionSchema	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatTable	no	yes
table	no	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
partitionColumns	no	yes
=	no	no
table	no	yes
.	no	no
getPartCols	no	yes
(	no	no
)	no	no
;	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
partitionSchema	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
,	no	no
partitionColumns	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
false	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
addPartition	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
HCatPartition	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
,	no	no
makePartLocation	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
)	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
addPartition	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
HCatPartition	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
,	no	no
makePartLocation	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
)	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partialPartitionSpec	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
partialPartitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatPartition	no	yes
>	no	no
partitions	no	yes
=	no	no
client	no	yes
.	no	no
getPartitions	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partialPartitionSpec	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
3	no	no
,	no	no
partitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
}	no	no
,	no	no
partitions	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
}	no	no
,	no	no
partitions	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
}	no	no
,	no	no
partitions	no	yes
.	no	no
get	no	yes
(	no	no
2	no	no
)	no	no
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
false	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
partitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
addPartition	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
new	no	no
HCatPartition	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
,	no	no
makePartLocation	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
)	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partialPartitionSpec	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
partialPartitionSpec	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
dropPartitions	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partialPartitionSpec	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatPartition	no	yes
>	no	no
partitions	no	yes
=	no	no
client	no	yes
.	no	no
getPartitions	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
partitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
}	no	no
,	no	no
partitions	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatFieldSchema	no	yes
>	no	no
partColumns	no	yes
=	no	no
partitions	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPartColumns	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
partColumns	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
partColumns	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
partColumns	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
dropDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
false	no	no
,	no	no
HCatClient	no	yes
.	no	no
DropDBMode	no	yes
.	no	no
CASCADE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

sourceMetastore	no	yes
.	no	no
addPartition	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
ptn	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sourceMetastore	no	yes
.	no	no
dropPartitions	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName2	no	yes
,	no	no
ptnDesc	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
sourceMetastore	no	yes
.	no	no
dropTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName1	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
sourceMetastore	no	yes
.	no	no
dropTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName2	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
long	no	no
currId	no	yes
=	no	no
sourceMetastore	no	yes
.	no	no
getCurrentNotificationEventId	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
currId	no	yes
+	no	no
+	no	no
baseId	no	yes
+	no	no
,	no	no
currId	no	yes
>	no	no
baseId	no	yes
+	no	no
25	no	no
)	no	no
;	no	no
}	no	no
List	no	no
<	no	no
HCatNotificationEvent	no	no
>	no	no
notifs	no	no
=	no	no
sourceMetastore	no	yes
.	no	no
getNextNotification	no	no
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
new	no	no
IMetaStoreClient	no	no
.	no	no
NotificationFilter	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
boolean	no	no
accept	no	no
(	no	no
NotificationEvent	no	no
event	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HCatNotificationEvent	no	no
n	yes	yes
:	no	no
notifs	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
n	yes	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
n	yes	yes
.	no	no
getEventTime	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
n	yes	yes
.	no	no
getEventType	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
n	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
n	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Iterator	no	yes
<	no	no
ReplicationTask	no	yes
>	no	no
taskIter	no	yes
=	no	no
sourceMetastore	no	yes
.	no	no
getReplicationTasks	no	yes
(	no	no
0	no	no
,	no	no
-	no	no
1	no	no
,	no	no
dbName	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
while	no	no
(	no	no
taskIter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ReplicationTask	no	yes
task	no	yes
=	no	no
taskIter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

e	no	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
s	yes	yes
:	no	no
command	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
s	yes	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
isRetriable	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
isUndoable	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
command	no	yes
.	no	no
isUndoable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
s	yes	yes
:	no	no
command	no	yes
.	no	no
getUndo	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
s	yes	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
locns	no	yes
=	no	no
command	no	yes
.	no	no
cleanupLocationsPerRetry	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
locns	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
s	yes	yes
:	no	no
command	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
s	yes	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
isRetriable	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
command	no	yes
.	no	no
isUndoable	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
command	no	yes
.	no	no
isUndoable	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
s	yes	yes
:	no	no
command	no	yes
.	no	no
getUndo	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
s	yes	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
locns	no	yes
=	no	no
command	no	yes
.	no	no
cleanupLocationsPerRetry	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
locns	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
s	yes	yes
:	no	no
locns	no	yes
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
s	yes	yes
)	no	no
;	no	no

tableParams	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
sourceTable	no	yes
.	no	no
cols	no	yes
(	no	no
newColumnSchema	no	yes
)	no	no
.	no	no
fileFormat	no	yes
(	no	no
)	no	no
.	no	no
tblProps	no	yes
(	no	no
tableParams	no	yes
)	no	no
.	no	no
serdeParam	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
FIELD_DELIM	no	yes
,	no	no
Character	no	yes
.	no	no
toString	no	yes
(	no	no
'\001'	no	no
)	no	no
)	no	no
;	no	no
sourceMetaStore	no	yes
(	no	no
)	no	no
.	no	no
updateTableSchema	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
sourceTable	no	yes
)	no	no
;	no	no
sourceTable	no	yes
=	no	no
sourceMetaStore	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
EnumSet	no	yes
<	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
>	no	no
diff	no	yes
=	no	no
targetTable	no	yes
.	no	no
diff	no	yes
(	no	no
sourceTable	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
COLUMNS	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
INPUT_FORMAT	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
OUTPUT_FORMAT	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
SERDE	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
SERDE_PROPERTIES	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
diff	no	yes
.	no	no
contains	no	yes
(	no	no
HCatTable	no	yes
.	no	no
TableAttribute	no	yes
.	no	no
TABLE_PROPERTIES	no	yes
)	no	no
)	no	no
;	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
updateTableSchema	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
targetTable	no	yes
.	no	no
resolve	no	yes
(	no	no
sourceTable	no	yes
,	no	no
diff	no	yes
)	no	no
)	no	no
;	no	no
targetTable	no	yes
=	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
HCatTable	no	yes
.	no	no
NO_DIFF	no	yes
,	no	no
targetTable	no	yes
.	no	no
diff	no	yes
(	no	no
sourceTable	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

assertEquals	no	yes
(	no	no
,	no	no
2	no	no
,	no	no
sourcePartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HCatAddPartitionDesc	no	yes
>	no	no
addPartitionDescs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
HCatAddPartitionDesc	no	yes
>	no	no
(	no	no
sourcePartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HCatPartition	no	yes
partition	no	yes
:	no	no
sourcePartitions	no	yes
)	no	no
{	no	no
addPartitionDescs	no	yes
.	no	no
add	no	yes
(	no	no
HCatAddPartitionDesc	no	yes
.	no	no
create	no	yes
(	no	no
partition	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
addPartitions	no	yes
(	no	no
addPartitionDescs	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
HCatPartition	no	yes
>	no	no
targetPartitions	no	yes
=	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
getPartitions	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
targetPartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
targetPartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
HCatPartition	no	yes
sourcePartition	no	yes
=	no	no
sourcePartitions	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
targetPartition	no	yes
=	no	no
targetPartitions	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getColumns	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getColumns	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getInputFormat	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getInputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getSerDe	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getSerDe	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getSerdeParams	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getSerdeParams	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

assertEquals	no	yes
(	no	no
,	no	no
sourcePartitionSpec	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
addPartitionSpec	no	yes
(	no	no
targetPartitionSpec	no	yes
)	no	no
)	no	no
;	no	no
targetPartitionSpec	no	yes
=	no	no
targetMetaStore	no	yes
(	no	no
)	no	no
.	no	no
getPartitionSpecs	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartitionSpec	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
targetPartitionSpec	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatPartitionSpec	no	yes
.	no	no
HCatPartitionIterator	no	yes
sourceIterator	no	yes
=	no	no
sourcePartitionSpec	no	yes
.	no	no
getPartitionIterator	no	yes
(	no	no
)	no	no
;	no	no
HCatPartitionSpec	no	yes
.	no	no
HCatPartitionIterator	no	yes
targetIterator	no	yes
=	no	no
targetPartitionSpec	no	yes
.	no	no
getPartitionIterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
targetIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
sourceIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HCatPartition	no	yes
sourcePartition	no	yes
=	no	no
sourceIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
HCatPartition	no	yes
targetPartition	no	yes
=	no	no
targetIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getColumns	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getColumns	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getInputFormat	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getInputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getSerDe	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getSerDe	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getSerdeParams	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getSerdeParams	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
unexpected	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
doBackwardCompatibilityCheck	no	no
(	no	no
long	no	no
testEventIdBefore	yes	no
,	no	no
long	no	no
testEventIdAfter	yes	no
)	no	no
{	no	no
long	no	no
timeBefore	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
NotificationEvent	no	yes
,	no	no
RuntimeException	no	yes
>	no	no
unhandledTasks	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
NotificationEvent	no	yes
,	no	no
RuntimeException	no	yes
>	no	no
incompatibleTasks	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
eventCount	no	yes
=	no	no
0	no	no
;	no	no

HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
tempLocation	no	yes
,	no	no
data	no	yes
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tempLocation	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tableName	no	yes
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tableName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
values	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
values	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
values	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
data	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
data	no	yes
[	no	no
1	no	no
]	no	no
,	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
ExportCommand	no	yes
exportCmd	no	yes
=	no	no
new	no	no
ExportCommand	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
exportLocation	no	yes
,	no	no
false	no	no
,	no	no
evid	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exportCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
exportCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
exportPaths	no	yes
=	no	no
exportCmd	no	yes
.	no	no
cleanupLocationsAfterEvent	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
exportPaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
metadata	yes	yes
=	no	no
getMetadataContents	no	yes
(	no	no
exportPaths	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

HcatTestUtils	no	yes
.	no	no
createTestDataFile	no	yes
(	no	no
tempLocation	no	yes
,	no	no
data	no	yes
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
tempLocation	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tableName	no	yes
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tableName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
values	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
values	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
values	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
data	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
data	no	yes
[	no	no
1	no	no
]	no	no
,	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
ExportCommand	no	yes
exportMdCmd	no	yes
=	no	no
new	no	no
ExportCommand	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
exportLocation	no	yes
,	no	no
true	no	no
,	no	no
evid	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
exportMdCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
exportMdCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
exportPaths	no	yes
=	no	no
exportMdCmd	no	yes
.	no	no
cleanupLocationsAfterEvent	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
exportPaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
metadata	yes	yes
=	no	no
getMetadataContents	no	yes
(	no	no
exportPaths	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testNoopReplEximCommands	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
int	no	no
evid	no	yes
=	no	no
333	no	no
;	no	no
String	no	yes
exportLocation	no	yes
=	no	no
TEST_PATH	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tableName	no	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
ExportCommand	no	yes
noopExportCmd	no	yes
=	no	no
new	no	no
ExportCommand	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
exportLocation	no	yes
,	no	no
false	no	no
,	no	no
evid	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
noopExportCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
noopExportCmd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
exportPaths	no	yes
=	no	no
noopExportCmd	no	yes
.	no	no
cleanupLocationsAfterEvent	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
exportPaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
metadata	yes	yes
=	no	no
getMetadataContents	no	yes
(	no	no
exportPaths	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
logConfigLoadAttempt	no	no
(	no	no
String	no	no
path	yes	no
)	no	no
{	no	no

private	no	no
boolean	no	no
loadOneFileConfig	no	no
(	no	no
String	no	no
dir	no	yes
,	no	no
String	no	no
fname	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
dir	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
File	no	yes
f	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
dir	no	yes
,	no	no
fname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
f	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addResource	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
f	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

private	no	no
boolean	no	no
loadOneClasspathConfig	no	no
(	no	no
String	no	no
fname	no	yes
)	no	no
{	no	no
URL	no	yes
x	yes	yes
=	no	no
getResource	no	yes
(	no	no
fname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
x	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
addResource	no	yes
(	no	no
x	yes	yes
)	no	no
;	no	no

public	no	no
Response	no	no
toResponse	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
try	no	no
{	no	no
doCallback	no	yes
(	no	no
state	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
,	no	no
callback	no	yes
)	no	no
;	no	no
cancelMetastoreToken	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
failed	no	yes
(	no	no
+	no	no
callback	no	yes
+	no	no
+	no	no
id	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
state	no	yes
.	no	no
setNotifiedTime	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
CompleteBean	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
state	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreClient	no	yes
client	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
cancelMetastoreToken	no	yes
)	no	no
{	no	no
String	no	yes
metastoreTokenStrForm	no	yes
=	no	no
DelegationTokenCache	no	yes
.	no	no
getStringFormTokenCache	no	yes
(	no	no
)	no	no
.	no	no
getDelegationToken	no	yes
(	no	no
id	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
metastoreTokenStrForm	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
client	no	yes
=	no	no
HCatUtil	no	yes
.	no	no
getHiveMetastoreClient	no	yes
(	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
CompleteBean	no	no
acceptWithError	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no

private	no	no
ExecBean	no	no
auxRun	no	no
(	no	no
String	no	no
program	no	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
args	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
env	no	no
)	no	no
throws	no	no
NotAuthorizedException	no	no
,	no	no
ExecuteException	no	no
,	no	no
IOException	no	no
{	no	no
DefaultExecutor	no	yes
executor	no	yes
=	no	no
new	no	no
DefaultExecutor	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
setExitValues	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
int	no	no
nbytes	no	yes
=	no	no
appConf	no	yes
.	no	no
getInt	no	yes
(	no	no
AppConfig	no	yes
.	no	no
EXEC_MAX_BYTES_NAME	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
ByteArrayOutputStream	no	yes
outStream	no	yes
=	no	no
new	no	no
MaxByteArrayOutputStream	no	yes
(	no	no
nbytes	no	yes
)	no	no
;	no	no
ByteArrayOutputStream	no	yes
errStream	no	yes
=	no	no
new	no	no
MaxByteArrayOutputStream	no	yes
(	no	no
nbytes	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
setStreamHandler	no	yes
(	no	no
new	no	no
PumpStreamHandler	no	yes
(	no	no
outStream	no	yes
,	no	no
errStream	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
timeout	no	yes
=	no	no
appConf	no	yes
.	no	no
getInt	no	yes
(	no	no
AppConfig	no	yes
.	no	no
EXEC_TIMEOUT_NAME	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
ExecuteWatchdog	no	yes
watchdog	no	yes
=	no	no
new	no	no
ExecuteWatchdog	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
setWatchdog	no	yes
(	no	no
watchdog	no	yes
)	no	no
;	no	no
CommandLine	no	yes
cmd	yes	yes
=	no	no
makeCommandLine	no	yes
(	no	no
program	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no

ByteArrayOutputStream	no	yes
errStream	no	yes
=	no	no
new	no	no
MaxByteArrayOutputStream	no	yes
(	no	no
nbytes	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
setStreamHandler	no	yes
(	no	no
new	no	no
PumpStreamHandler	no	yes
(	no	no
outStream	no	yes
,	no	no
errStream	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
timeout	no	yes
=	no	no
appConf	no	yes
.	no	no
getInt	no	yes
(	no	no
AppConfig	no	yes
.	no	no
EXEC_TIMEOUT_NAME	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
ExecuteWatchdog	no	yes
watchdog	no	yes
=	no	no
new	no	no
ExecuteWatchdog	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
setWatchdog	no	yes
(	no	no
watchdog	no	yes
)	no	no
;	no	no
CommandLine	no	yes
cmd	yes	yes
=	no	no
makeCommandLine	no	yes
(	no	no
program	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
cmd	yes	yes
)	no	no
;	no	no
ExecBean	no	yes
res	yes	yes
=	no	no
new	no	no
ExecBean	no	yes
(	no	no
)	no	no
;	no	no
res	yes	yes
.	no	no
exitcode	no	yes
=	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
cmd	yes	yes
,	no	no
execEnv	no	yes
(	no	no
env	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
enc	no	yes
=	no	no
appConf	no	yes
.	no	no
get	no	yes
(	no	no
AppConfig	no	yes
.	no	no
EXEC_ENCODING_NAME	no	yes
)	no	no
;	no	no
res	yes	yes
.	no	no
stdout	no	yes
=	no	no
outStream	no	yes
.	no	no
toString	no	yes
(	no	no
enc	no	yes
)	no	no
;	no	no
res	yes	yes
.	no	no
stderr	no	yes
=	no	no
errStream	no	yes
.	no	no
toString	no	yes
(	no	no
enc	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
watchdog	no	yes
.	no	no
checkException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
cmd	yes	yes
)	no	no
;	no	no
ExecBean	no	yes
res	yes	yes
=	no	no
new	no	no
ExecBean	no	yes
(	no	no
)	no	no
;	no	no
res	yes	yes
.	no	no
exitcode	no	yes
=	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
cmd	yes	yes
,	no	no
execEnv	no	yes
(	no	no
env	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
enc	no	yes
=	no	no
appConf	no	yes
.	no	no
get	no	yes
(	no	no
AppConfig	no	yes
.	no	no
EXEC_ENCODING_NAME	no	yes
)	no	no
;	no	no
res	yes	yes
.	no	no
stdout	no	yes
=	no	no
outStream	no	yes
.	no	no
toString	no	yes
(	no	no
enc	no	yes
)	no	no
;	no	no
res	yes	yes
.	no	no
stderr	no	yes
=	no	no
errStream	no	yes
.	no	no
toString	no	yes
(	no	no
enc	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
watchdog	no	yes
.	no	no
checkException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
cmd	yes	yes
+	no	no
+	no	no
res	yes	yes
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
watchdog	no	yes
.	no	no
killedProcess	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
timeout	no	yes
+	no	no
+	no	no
AppConfig	no	yes
.	no	no
EXEC_TIMEOUT_NAME	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
cmd	yes	yes
+	no	no
msg	no	yes
+	no	no
+	no	no
res	yes	yes
)	no	no
;	no	no
res	yes	yes
.	no	no
stderr	no	yes
+=	no	no
+	no	no
msg	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
res	yes	yes
.	no	no
exitcode	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no

public	no	no
T	no	no
execute	no	no
(	no	no
JobCallable	no	no
<	no	no
T	no	no
>	no	no
jobExecuteCallable	no	yes
)	no	no
throws	no	no
InterruptedException	no	no
,	no	no
TimeoutException	no	no
,	no	no
TooManyRequestsException	no	no
,	no	no
ExecutionException	no	no
{	no	no
assert	no	yes
(	no	no
jobExecuteCallable	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
this	no	no
.	no	no
jobExecutePool	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
String	no	yes
type	yes	yes
=	no	no
this	no	no
.	no	no
requestType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
retryMessageForConcurrentRequests	no	yes
=	no	no
+	no	no
+	no	no
concurrentRequestsConfigName	no	yes
+	no	no
;	no	no

private	no	no
void	no	no
cancelExecutePoolThread	no	no
(	no	no
Future	no	no
<	no	no
T	no	no
>	no	no
future	no	no
)	no	no
{	no	no
int	no	no
retryCount	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
retryCount	yes	yes
<	no	no
this	no	no
.	no	no
maxTaskCancelRetryCount	no	no
&&	no	no
!	no	no
future	no	no
.	no	no
isDone	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
EnqueueBean	no	no
enqueueJob	no	no
(	no	no
String	no	yes
user	no	yes
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Object	no	no
>	no	no
userArgs	no	no
,	no	no
String	no	yes
callback	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
args	no	yes
,	no	no
TempletonControllerJob	no	no
controllerJob	no	yes
)	no	no
throws	no	no
NotAuthorizedException	no	no
,	no	no
BusyException	no	no
,	no	no
IOException	no	no
,	no	no
QueueException	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
ugi	no	yes
=	no	no
UgiFactory	no	yes
.	no	no
getUgi	no	yes
(	no	no
user	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
id	yes	yes
=	no	no
queueAsUser	no	yes
(	no	no
ugi	no	yes
,	no	no
args	no	yes
,	no	no
controllerJob	no	yes
)	no	no
;	no	no
long	no	no
elapsed	yes	yes
=	no	no
(	no	no
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
)	no	no
/	no	no
(	no	no
(	no	no
int	no	no
)	no	no
1e6	no	no
)	no	no
)	no	no
;	no	no

private	no	no
String	no	no
queueAsUser	no	no
(	no	no
UserGroupInformation	no	no
ugi	no	no
,	no	no
final	no	no
List	no	no
<	no	no
String	no	no
>	no	no
args	yes	no
,	no	no
final	no	no
TempletonControllerJob	no	no
controllerJob	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
boolean	no	no
killTempletonJobWithRetry	no	no
(	no	no
String	no	no
user	no	no
,	no	no
String	no	no
jobId	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
startsWith	no	no
(	no	no
jobId	yes	no
,	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
numRecords	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
if	no	no
(	no	no
currRecord	no	yes
>=	no	no
numRecords	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
jobId	no	no
==	no	no
null	no	no
||	no	no
jobId	no	no
.	no	no
trim	no	no
(	no	no
)	no	no
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
currRecord	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isAscendingOrder	no	no
&&	no	no
job	yes	yes
.	no	no
compareTo	no	no
(	no	no
jobId	no	no
)	no	no
>	no	no
0	no	no
||	no	no
!	no	no
isAscendingOrder	no	no
&&	no	no
job	yes	yes
.	no	no
compareTo	no	no
(	no	no
jobId	no	no
)	no	no
<	no	no
0	no	no
)	no	no
{	no	no
currRecord	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
JobItemBean	no	yes
jobItem	no	yes
=	no	no
new	no	no
JobItemBean	no	yes
(	no	no
)	no	no
;	no	no
jobItem	no	yes
.	no	no
id	no	yes
=	no	no
job	yes	yes
;	no	no
if	no	no
(	no	no
showDetails	no	no
)	no	no
{	no	no
StatusDelegator	no	yes
sd	no	yes
=	no	no
new	no	no
StatusDelegator	no	yes
(	no	no
appConf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
jobItem	no	yes
.	no	no
detail	no	yes
=	no	no
sd	no	yes
.	no	no
run	no	yes
(	no	no
user	no	yes
,	no	no
job	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no

public	no	no
void	no	no
init	no	no
(	no	no
String	no	no
[	no	no
]	no	no
args	no	yes
)	no	no
{	no	no
initLogger	no	yes
(	no	no
)	no	no
;	no	no
conf	yes	yes
=	no	no
loadConfig	no	yes
(	no	no
args	no	yes
)	no	no
;	no	no
conf	yes	yes
.	no	no
startCleanup	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
int	no	no
port	yes	yes
=	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
AppConfig	no	yes
.	no	no
PORT	no	yes
,	no	no
DEFAULT_PORT	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
checkEnv	no	yes
(	no	no
)	no	no
;	no	no
runServer	no	yes
(	no	no
port	yes	yes
)	no	no
;	no	no
port	yes	yes
=	no	no
ArrayUtils	no	yes
.	no	no
isEmpty	no	yes
(	no	no
server	no	yes
.	no	no
getConnectors	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
(	no	no
(	no	no
ServerConnector	no	yes
)	no	no
(	no	no
server	no	yes
.	no	no
getConnectors	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
.	no	no
getLocalPort	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
port	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
checkCurrentDirPermissions	no	no
(	no	no
)	no	no
{	no	no
File	no	yes
pwd	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
pwd	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

static	no	no
void	no	no
processProxyuserConfig	no	no
(	no	no
AppConfig	no	no
conf	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
confEnt	no	yes
:	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
)	no	no
&&	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
CONF_GROUPS_SUFFIX	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
lastIndexOf	no	yes
(	no	no
CONF_GROUPS_SUFFIX	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
groups	no	yes
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
groups	no	yes
=	no	no
WILD_CARD	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
confEnt	no	yes
:	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
)	no	no
&&	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
CONF_GROUPS_SUFFIX	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
lastIndexOf	no	yes
(	no	no
CONF_GROUPS_SUFFIX	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
groups	no	yes
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
groups	no	yes
=	no	no
WILD_CARD	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
groups	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
+	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
groups	no	yes
=	no	no
Collections	no	yes
.	no	no
emptySet	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
groups	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
+	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
groups	no	yes
=	no	no
Collections	no	yes
.	no	no
emptySet	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
proxyUserGroups	no	yes
.	no	no
put	no	yes
(	no	no
proxyUser	yes	yes
,	no	no
groups	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
)	no	no
&&	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
lastIndexOf	no	yes
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
hosts	no	yes
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
hosts	no	yes
=	no	no
WILD_CARD	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

groups	no	yes
=	no	no
Collections	no	yes
.	no	no
emptySet	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
proxyUserGroups	no	yes
.	no	no
put	no	yes
(	no	no
proxyUser	yes	yes
,	no	no
groups	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
)	no	no
&&	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
lastIndexOf	no	yes
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
hosts	no	yes
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
hosts	no	yes
=	no	no
WILD_CARD	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
hostValues	no	yes
=	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
hosts	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
hostname	no	no
:	no	no
hostValues	no	yes
)	no	no
{	no	no

}	no	no
proxyUserGroups	no	yes
.	no	no
put	no	yes
(	no	no
proxyUser	yes	yes
,	no	no
groups	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	no
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
)	no	no
&&	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
substring	no	yes
(	no	no
CONF_PROXYUSER_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
,	no	no
confEnt	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
lastIndexOf	no	yes
(	no	no
CONF_HOSTS_SUFFIX	no	yes
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
hosts	no	yes
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
hosts	no	yes
=	no	no
WILD_CARD	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
hostValues	no	yes
=	no	no
confEnt	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
hosts	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
hostname	no	yes
:	no	no
hostValues	no	yes
)	no	no
{	no	no
String	no	yes
nhn	no	yes
=	no	no
normalizeHostname	no	yes
(	no	no
hostname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nhn	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hosts	no	yes
.	no	no
add	no	yes
(	no	no
nhn	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
validate	no	no
(	no	no
String	no	no
proxyUser	yes	yes
,	no	no
String	no	no
proxyHost	yes	yes
,	no	no
String	no	no
doAsUser	yes	yes
)	no	no
throws	no	no
NotAuthorizedException	no	no
{	no	no
assertNotEmpty	no	yes
(	no	no
proxyUser	yes	yes
,	no	no
,	no	no
+	no	no
CONF_PROXYUSER_PREFIX	no	yes
+	no	no
+	no	no
CONF_HOSTS_SUFFIX	no	yes
+	no	no
+	no	no
CONF_PROXYUSER_PREFIX	no	yes
+	no	no
+	no	no
CONF_GROUPS_SUFFIX	no	yes
+	no	no
)	no	no
;	no	no
assertNotEmpty	no	yes
(	no	no
proxyHost	yes	yes
,	no	no
,	no	no
+	no	no
CONF_PROXYUSER_PREFIX	no	yes
+	no	no
proxyUser	yes	yes
+	no	no
CONF_HOSTS_SUFFIX	no	yes
+	no	no
+	no	no
CONF_PROXYUSER_PREFIX	no	yes
+	no	no
proxyUser	yes	yes
+	no	no
CONF_GROUPS_SUFFIX	no	yes
+	no	no
)	no	no
;	no	no
assertNotEmpty	no	yes
(	no	no
doAsUser	yes	yes
,	no	no
Server	no	yes
.	no	no
DO_AS_PARAM	no	yes
)	no	no
;	no	no

private	no	no
Token	no	no
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
getFSDelegationToken	no	no
(	no	no
String	no	no
user	yes	no
,	no	no
final	no	no
Configuration	no	no
conf	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no

private	no	no
Token	no	no
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
getFSDelegationToken	no	no
(	no	no
String	no	yes
user	no	yes
,	no	no
final	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
user	no	yes
+	no	no
+	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
.	no	no
getUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UgiFactory	no	yes
.	no	no
getUgi	no	yes
(	no	no
user	no	yes
)	no	no
;	no	no
final	no	no
TokenWrapper	no	yes
twrapper	no	yes
=	no	no
new	no	no
TokenWrapper	no	yes
(	no	no
)	no	no
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
Object	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
URISyntaxException	no	no
{	no	no
Credentials	no	yes
creds	no	yes
=	no	no
new	no	no
Credentials	no	yes
(	no	no
)	no	no
;	no	no
collectTokens	no	yes
(	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
,	no	no
twrapper	no	yes
,	no	no
creds	no	yes
,	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
URIs	no	yes
=	no	no
conf	no	yes
.	no	no
getStringCollection	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
uri	yes	no
:	no	no
URIs	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
writeProxyDelegationTokens	no	no
(	no	no
final	no	no
Token	no	no
<	no	no
?	no	no
>	no	no
fsTokens	no	no
[	no	no
]	no	no
,	no	no
final	no	no
Token	no	no
<	no	no
?	no	no
>	no	no
msToken	no	no
,	no	no
final	no	no
Configuration	no	no
conf	no	no
,	no	no
String	no	no
user	yes	no
,	no	no
final	no	no
Path	no	no
tokenPath	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no

private	no	no
String	no	no
buildHcatDelegationToken	no	no
(	no	no
String	no	no
user	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
TException	no	no
{	no	no
final	no	no
HiveConf	no	yes
c	no	yes
=	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
IMetaStoreClient	no	yes
client	no	yes
=	no	no
HCatUtil	no	yes
.	no	no
getHiveMetastoreClient	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no

fs	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
storage_root	no	yes
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
appConf	no	yes
)	no	no
;	no	no
checkFiles	no	yes
(	no	no
fs	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
fs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
fs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
long	no	no
sleepMillis	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
Math	no	yes
.	no	no
random	no	yes
(	no	no
)	no	no
*	no	no
interval	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
new	no	no
Date	no	yes
(	no	no
new	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
getTime	no	yes
(	no	no
)	no	no
+	no	no
sleepMillis	no	yes
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepMillis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
isRunning	no	yes
=	no	no
false	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
String	no	no
getField	no	no
(	no	no
Type	no	no
type	no	yes
,	no	no
String	no	no
id	no	yes
,	no	no
String	no	no
key	no	yes
)	no	no
{	no	no
BufferedReader	no	yes
in	no	yes
=	no	no
null	no	no
;	no	no
Path	no	yes
p	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getPath	no	yes
(	no	no
type	no	yes
)	no	no
+	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	no
.	no	no
exists	no	no
(	no	no
p	yes	yes
)	no	no
)	no	no
{	no	no

BufferedReader	no	yes
in	no	yes
=	no	no
null	no	no
;	no	no
Path	no	yes
p	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
getPath	no	yes
(	no	no
type	no	yes
)	no	no
+	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
key	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
p	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
p	yes	yes
+	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
in	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
fs	no	yes
.	no	no
open	no	yes
(	no	no
p	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
line	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
val	no	yes
=	no	no
;	no	no
while	no	no
(	no	no
(	no	no
line	no	yes
=	no	no
in	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
val	no	yes
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
val	no	yes
+=	no	no
;	no	no
}	no	no
val	no	yes
+=	no	no
line	no	yes
;	no	no
}	no	no
return	no	no
val	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
handleSqoop	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
env	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
TempletonUtils	no	no
.	no	no
isset	no	no
(	no	no
conf	no	no
.	no	no
get	no	no
(	no	no
Sqoop	yes	no
.	no	no
LIB_JARS	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
long	no	no
getTempletonLaunchTime	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
0L	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
launchTimeStr	yes	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
JobSubmissionConstants	no	yes
.	no	no
TEMPLETON_JOB_LAUNCH_TIME_NAME	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
copyLocal	no	no
(	no	no
String	no	yes
var	no	yes
,	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
filenames	no	yes
=	no	no
TempletonUtils	no	yes
.	no	no
decodeArray	no	yes
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
var	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filenames	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
filename	no	yes
:	no	no
filenames	no	yes
)	no	no
{	no	no
Path	no	yes
src	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
filename	no	yes
)	no	no
;	no	no
Path	no	yes
dst	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
src	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
src	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
reconnectToRunningJobEnabledAndSupported	no	no
(	no	no
conf	no	yes
,	no	no
jobType	no	no
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
long	no	no
startTime	no	yes
=	no	no
getTempletonLaunchTime	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
WebHCatJTShim	no	yes
tracker	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
getWebHCatShim	no	yes
(	no	no
conf	no	yes
,	no	no
ugi	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
childJobs	no	yes
=	no	no
tracker	no	yes
.	no	no
getJobs	no	yes
(	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
startTime	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
childJobs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
childJobs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
childJobs	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
String	no	yes
childJobIdString	yes	yes
=	no	no
childJobs	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
JobID	no	yes
childJobId	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
JobID	no	yes
.	no	no
forName	no	yes
(	no	no
childJobIdString	yes	yes
)	no	no
;	no	no

WebHCatJTShim	no	yes
tracker	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
getWebHCatShim	no	yes
(	no	no
conf	no	yes
,	no	no
ugi	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
childJobs	no	yes
=	no	no
tracker	no	yes
.	no	no
getJobs	no	yes
(	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
startTime	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
childJobs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
childJobs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
childJobs	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
String	no	yes
childJobIdString	yes	yes
=	no	no
childJobs	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
JobID	no	yes
childJobId	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
JobID	no	yes
.	no	no
forName	no	yes
(	no	no
childJobIdString	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
childJobIdString	yes	yes
)	no	no
)	no	no
;	no	no
updateJobStatePercentAndChildId	no	yes
(	no	no
conf	no	yes
,	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
childJobIdString	yes	yes
)	no	no
;	no	no
do	no	no
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
JobStatus	no	yes
jobStatus	no	yes
=	no	no
tracker	no	yes
.	no	no
getJobStatus	no	yes
(	no	no
childJobId	no	yes
)	no	no
;	no	no

return	no	no
;	no	no
}	no	no
killLauncherChildJobs	no	yes
(	no	no
conf	no	yes
,	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Process	no	yes
proc	no	yes
=	no	no
startJob	no	yes
(	no	no
context	no	yes
,	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
OVERRIDE_CLASSPATH	no	yes
)	no	no
,	no	no
jobType	no	yes
)	no	no
;	no	no
JobState	no	yes
state	no	yes
=	no	no
new	no	no
JobState	no	yes
(	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
state	no	yes
.	no	no
setJobType	no	yes
(	no	no
jobType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
state	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
Executors	no	yes
.	no	no
newCachedThreadPool	no	yes
(	no	no
)	no	no
;	no	no
executeWatcher	no	yes
(	no	no
pool	no	yes
,	no	no
conf	no	yes
,	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
,	no	no
proc	no	yes
.	no	no
getInputStream	no	yes
(	no	no
)	no	no
,	no	no
statusdir	yes	yes
,	no	no
STDOUT_FNAME	no	yes
)	no	no
;	no	no
executeWatcher	no	yes
(	no	no
pool	no	yes
,	no	no
conf	no	yes
,	no	no
context	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
,	no	no
proc	no	yes
.	no	no
getErrorStream	no	yes
(	no	no
)	no	no
,	no	no
statusdir	yes	yes
,	no	no
STDERR_FNAME	no	yes
)	no	no
;	no	no
KeepAlive	no	yes
keepAlive	no	yes
=	no	no
startCounterKeepAlive	no	yes
(	no	no
pool	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
proc	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
keepAlive	no	yes
.	no	no
sendReport	no	yes
=	no	no
false	no	no
;	no	no
pool	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
pool	no	yes
.	no	no
awaitTermination	no	no
(	no	no
WATCHER_TIMEOUT_SECS	no	no
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
pool	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
updateJobStateToDoneAndWriteExitValue	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	no
statusdir	no	yes
,	no	no
String	no	no
jobId	no	yes
,	no	no
int	no	no
exitCode	yes	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
writeExitValue	no	yes
(	no	no
conf	no	yes
,	no	no
exitCode	yes	yes
,	no	no
statusdir	no	yes
)	no	no
;	no	no
JobState	no	yes
state	no	yes
=	no	no
new	no	no
JobState	no	yes
(	no	no
jobId	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
state	no	yes
.	no	no
setExitValue	no	yes
(	no	no
exitCode	yes	yes
)	no	no
;	no	no
state	no	yes
.	no	no
setCompleteStatus	no	yes
(	no	no
)	no	no
;	no	no
state	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitCode	yes	yes
!=	no	no
0	no	no
)	no	no
{	no	no

private	no	no
void	no	no
writeExitValue	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
int	no	no
exitValue	yes	no
,	no	no
String	no	no
statusdir	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
TempletonUtils	no	no
.	no	no
isset	no	no
(	no	no
statusdir	no	yes
)	no	no
)	no	no
{	no	no
Path	no	yes
p	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
statusdir	no	yes
,	no	no
EXIT_FNAME	no	yes
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
p	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
OutputStream	no	yes
out	no	yes
=	no	no
fs	no	yes
.	no	no
create	no	yes
(	no	no
p	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
run	no	no
(	no	no
String	no	no
[	no	no
]	no	no
args	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
ClassNotFoundException	no	no
,	no	no
TException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

job	no	yes
.	no	no
setMapOutputValueClass	no	yes
(	no	no
Text	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
job	no	yes
.	no	no
setInputFormatClass	no	yes
(	no	no
SingleInputFormat	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
NullOutputFormat	no	yes
<	no	no
NullWritable	no	yes
,	no	no
NullWritable	no	yes
>	no	no
of	no	yes
=	no	no
new	no	no
NullOutputFormat	no	yes
<	no	no
NullWritable	no	yes
,	no	no
NullWritable	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
job	no	yes
.	no	no
setOutputFormatClass	no	yes
(	no	no
of	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
job	no	yes
.	no	no
setNumReduceTasks	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
JobClient	no	yes
jc	no	yes
=	no	no
new	no	no
JobClient	no	yes
(	no	no
new	no	no
JobConf	no	yes
(	no	no
job	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
UserGroupInformation	no	no
.	no	no
isSecurityEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Token	no	yes
<	no	no
DelegationTokenIdentifier	no	yes
>	no	no
mrdt	no	yes
=	no	no
jc	no	yes
.	no	no
getDelegationToken	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
job	no	yes
.	no	no
getCredentials	no	yes
(	no	no
)	no	no
.	no	no
addToken	no	yes
(	no	no
new	no	no
Text	no	yes
(	no	no
)	no	no
,	no	no
mrdt	no	yes
)	no	no
;	no	no
}	no	no
LauncherDelegator	no	yes
.	no	no
JobType	no	yes
jobType	no	yes
=	no	no
LauncherDelegator	no	yes
.	no	no
JobType	no	yes
.	no	no
valueOf	no	yes
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
JOB_TYPE	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
tokenStrForm	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
jobType	no	yes
==	no	no
LauncherDelegator	no	yes
.	no	no
JobType	no	yes
.	no	no
HIVE	no	no
)	no	no
{	no	no
tokenStrForm	no	yes
=	no	no
addToken	no	yes
(	no	no
job	no	yes
,	no	no
user	yes	yes
,	no	no
SecureProxySupport	no	yes
.	no	no
HIVE_SERVICE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
tokenStrForm	no	yes
=	no	no
addToken	no	yes
(	no	no
job	no	yes
,	no	no
user	yes	yes
,	no	no
SecureProxySupport	no	yes
.	no	no
HCAT_SERVICE	no	yes
)	no	no
;	no	no

private	no	no
String	no	no
buildHcatDelegationToken	no	no
(	no	no
String	no	no
user	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
TException	no	no
{	no	no
final	no	no
HiveConf	no	yes
c	no	yes
=	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
String	no	no
buildHS2DelegationToken	no	no
(	no	no
String	no	no
user	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
TException	no	no
{	no	no
final	no	no
HiveConf	no	yes
c	no	yes
=	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
Process	no	no
run	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
cmd	yes	no
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
removeEnv	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
environmentVariables	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
Process	no	no
run	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
cmd	no	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
removeEnv	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
environmentVariables	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
cmd	no	yes
)	no	no
;	no	no
ProcessBuilder	no	yes
pb	no	yes
=	no	no
new	no	no
ProcessBuilder	no	yes
(	no	no
cmd	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
key	yes	no
:	no	no
removeEnv	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pb	no	yes
.	no	no
environment	no	no
(	no	no
)	no	no
.	no	no
containsKey	no	no
(	no	no
key	yes	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
logDebugInfo	no	no
(	no	no
String	no	no
msg	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
props	no	yes
)	no	no
{	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
TempletonUtils	no	yes
.	no	no
dumpPropMap	no	yes
(	no	no
msg	no	yes
,	no	no
props	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
CuratorFramework	no	yes
zk	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
nodes	no	yes
=	no	no
null	no	no
;	no	no
isRunning	no	yes
=	no	no
true	no	no
;	no	no
while	no	no
(	no	no
!	no	no
stop	no	no
)	no	no
{	no	no
try	no	no
{	no	no
try	no	no
{	no	no
zk	no	yes
=	no	no
ZooKeeperStorage	no	yes
.	no	no
zkOpen	no	yes
(	no	no
appConf	no	yes
)	no	no
;	no	no
nodes	no	yes
=	no	no
getChildList	no	yes
(	no	no
zk	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
node	no	yes
:	no	no
nodes	no	yes
)	no	no
{	no	no
boolean	no	no
deleted	no	yes
=	no	no
checkAndDelete	no	yes
(	no	no
node	no	yes
,	no	no
zk	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
deleted	no	yes
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
zk	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

nodes	no	yes
=	no	no
getChildList	no	yes
(	no	no
zk	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
node	no	yes
:	no	no
nodes	no	yes
)	no	no
{	no	no
boolean	no	no
deleted	no	yes
=	no	no
checkAndDelete	no	yes
(	no	no
node	no	yes
,	no	no
zk	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
deleted	no	yes
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
zk	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
zk	no	yes
!=	no	no
null	no	no
)	no	no
zk	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
sleepMillis	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
Math	no	yes
.	no	no
random	no	yes
(	no	no
)	no	no
*	no	no
interval	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
new	no	no
Date	no	yes
(	no	no
new	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
getTime	no	yes
(	no	no
)	no	no
+	no	no
sleepMillis	no	yes
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepMillis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
isRunning	no	yes
=	no	no
false	no	no
;	no	no

JobState	no	yes
state	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
JobStateTracker	no	yes
tracker	no	yes
=	no	no
new	no	no
JobStateTracker	no	yes
(	no	no
node	yes	yes
,	no	no
zk	no	yes
,	no	no
true	no	no
,	no	no
appConf	no	yes
.	no	no
get	no	yes
(	no	no
TempletonStorage	no	yes
.	no	no
STORAGE_ROOT	no	yes
+	no	no
ZooKeeperStorage	no	yes
.	no	no
TRACKINGDIR	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
new	no	no
Date	no	yes
(	no	no
)	no	no
.	no	no
getTime	no	yes
(	no	no
)	no	no
;	no	no
state	no	yes
=	no	no
new	no	no
JobState	no	yes
(	no	no
tracker	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
,	no	no
appConf	no	yes
)	no	no
;	no	no
long	no	no
then	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
state	no	yes
.	no	no
getCreated	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
then	no	yes
=	no	no
state	no	yes
.	no	no
getCreated	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
now	no	yes
-	no	no
then	no	yes
>	no	no
maxage	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tracker	no	yes
.	no	no
getJobID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
state	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
tracker	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
int	no	no
waitForAllThreadsToStart	no	no
(	no	no
JobRunnable	no	no
jobRunnable	no	yes
,	no	no
int	no	no
poolThreadCount	no	no
)	no	no
{	no	no
int	no	no
currentId	yes	yes
=	no	no
jobRunnable	no	yes
.	no	no
threadStartCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
int	no	no
waitForAllThreadsToStart	no	no
(	no	no
JobRunnable	no	no
jobRunnable	no	yes
,	no	no
int	no	no
poolThreadCount	no	no
)	no	no
{	no	no
int	no	no
currentId	yes	yes
=	no	no
jobRunnable	no	yes
.	no	no
threadStartCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
currentId	yes	yes
)	no	no
;	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
if	no	no
(	no	no
currentId	yes	yes
>	no	no
poolThreadCount	no	no
)	no	no
{	no	no

public	no	no
JobRunnable	no	no
ConcurrentJobsStatus	no	no
(	no	no
final	no	no
int	no	no
threadCount	no	yes
,	no	no
AppConfig	no	no
appConfig	no	yes
,	no	no
final	no	no
boolean	no	no
killThreads	no	no
,	no	no
boolean	no	no
interruptThreads	no	no
,	no	no
final	no	no
Answer	no	no
<	no	no
QueueStatusBean	no	no
>	no	no
answer	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
QueueException	no	no
,	no	no
NotAuthorizedException	no	no
,	no	no
BadParam	no	no
,	no	no
BusyException	no	no
{	no	no
StatusDelegator	no	yes
delegator	no	yes
=	no	no
new	no	no
StatusDelegator	no	yes
(	no	no
appConfig	no	yes
)	no	no
;	no	no
final	no	no
StatusDelegator	no	yes
mockDelegator	no	yes
=	no	no
Mockito	no	yes
.	no	no
spy	no	yes
(	no	no
delegator	no	yes
)	no	no
;	no	no
doAnswer	no	yes
(	no	no
answer	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
getJobStatus	no	yes
(	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
)	no	no
;	no	no
JobRunnable	no	no
statusJobRunnable	no	no
=	no	no
new	no	no
JobRunnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
int	no	no
threadId	yes	yes
=	no	no
waitForAllThreadsToStart	no	yes
(	no	no
this	no	no
,	no	no
threadCount	no	yes
)	no	no
;	no	no

public	no	no
JobRunnable	no	no
ConcurrentListJobs	no	no
(	no	no
final	no	no
int	no	no
threadCount	no	yes
,	no	no
AppConfig	no	no
config	no	yes
,	no	no
final	no	no
boolean	no	no
killThreads	no	no
,	no	no
boolean	no	no
interruptThreads	no	no
,	no	no
final	no	no
Answer	no	no
<	no	no
List	no	no
<	no	no
JobItemBean	no	no
>>	no	no
answer	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
QueueException	no	no
,	no	no
NotAuthorizedException	no	no
,	no	no
BadParam	no	no
,	no	no
BusyException	no	no
{	no	no
ListDelegator	no	yes
delegator	no	yes
=	no	no
new	no	no
ListDelegator	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
final	no	no
ListDelegator	no	yes
mockDelegator	no	yes
=	no	no
Mockito	no	yes
.	no	no
spy	no	yes
(	no	no
delegator	no	yes
)	no	no
;	no	no
doAnswer	no	yes
(	no	no
answer	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
listJobs	no	yes
(	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
boolean	no	no
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
int	no	no
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
boolean	no	no
.	no	no
class	no	no
)	no	no
)	no	no
;	no	no
JobRunnable	no	no
listJobRunnable	no	no
=	no	no
new	no	no
JobRunnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
int	no	no
threadId	yes	yes
=	no	no
waitForAllThreadsToStart	no	yes
(	no	no
this	no	no
,	no	no
threadCount	no	yes
)	no	no
;	no	no

public	no	no
JobRunnable	no	no
SubmitConcurrentJobs	no	no
(	no	no
final	no	no
int	no	no
threadCount	no	yes
,	no	no
AppConfig	no	no
config	no	yes
,	no	no
final	no	no
boolean	no	no
killThreads	no	no
,	no	no
boolean	no	no
interruptThreads	no	no
,	no	no
final	no	no
Answer	no	no
<	no	no
Integer	no	no
>	no	no
responseAnswer	no	yes
,	no	no
final	no	no
Answer	no	no
<	no	no
QueueStatusBean	no	no
>	no	no
timeoutResponseAnswer	no	yes
,	no	no
final	no	no
String	no	yes
jobIdResponse	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
,	no	no
QueueException	no	no
,	no	no
NotAuthorizedException	no	no
,	no	no
BusyException	no	no
,	no	no
TimeoutException	no	no
,	no	no
Exception	no	no
{	no	no
LauncherDelegator	no	yes
delegator	no	yes
=	no	no
new	no	no
LauncherDelegator	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
final	no	no
LauncherDelegator	no	yes
mockDelegator	no	yes
=	no	no
Mockito	no	yes
.	no	no
spy	no	yes
(	no	no
delegator	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
listArgs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
TempletonControllerJob	no	yes
mockCtrl	no	yes
=	no	no
Mockito	no	yes
.	no	no
mock	no	yes
(	no	no
TempletonControllerJob	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
doReturn	no	yes
(	no	no
jobIdResponse	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockCtrl	no	yes
)	no	no
.	no	no
getSubmittedId	no	yes
(	no	no
)	no	no
;	no	no
doReturn	no	yes
(	no	no
mockCtrl	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
getTempletonController	no	yes
(	no	no
)	no	no
;	no	no
doAnswer	no	yes
(	no	no
responseAnswer	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
runTempletonControllerJob	no	yes
(	no	no
any	no	yes
(	no	no
TempletonControllerJob	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
List	no	yes
.	no	no
class	no	no
)	no	no
)	no	no
;	no	no
doAnswer	no	yes
(	no	no
timeoutResponseAnswer	no	yes
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
killJob	no	yes
(	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
)	no	no
;	no	no
doNothing	no	yes
(	no	no
)	no	no
.	no	no
when	no	yes
(	no	no
mockDelegator	no	yes
)	no	no
.	no	no
registerJob	no	yes
(	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
any	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
JobRunnable	no	no
submitJobRunnable	no	no
=	no	no
new	no	no
JobRunnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
int	no	no
threadId	yes	yes
=	no	no
waitForAllThreadsToStart	no	yes
(	no	no
this	no	no
,	no	no
threadCount	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
tryCount	no	no
=	no	no
0	no	no
;	no	no
tryCount	no	no
<	no	no
MetaStoreTestUtils	no	yes
.	no	no
RETRY_COUNT	no	no
;	no	no
tryCount	no	no
++	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
tryCount	no	no
==	no	no
MetaStoreTestUtils	no	yes
.	no	no
RETRY_COUNT	no	no
-	no	no
1	no	no
)	no	no
{	no	no
webhcatPort	yes	yes
=	no	no
50111	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
webhcatPort	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
webhcatPort	yes	yes
=	no	no
MetaStoreTestUtils	no	yes
.	no	no
findFreePort	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
templetonBaseUrl	no	yes
=	no	no
templetonBaseUrl	no	yes
.	no	no
replace	no	yes
(	no	no
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
webhcatPort	yes	yes
)	no	no
)	no	no
;	no	no
templetonServer	no	yes
=	no	no
new	no	no
Main	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
+	no	no
AppConfig	no	yes
.	no	no
UNIT_TEST_MODE	no	yes
+	no	no
,	no	no
+	no	no
AppConfig	no	yes
.	no	no
PORT	no	yes
+	no	no
+	no	no
webhcatPort	yes	yes
}	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
webhcatPort	yes	yes
)	no	no
;	no	no
templetonServer	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
webhcatStarted	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ce	no	no
)	no	no
{	no	no

@	no	no
Ignore	no	no
(	no	no
)	no	no
@	no	no
Test	no	no
public	no	no
void	no	no
createTable	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
props	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
col	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
col	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
col	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>>	no	no
colList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
colList	no	yes
.	no	no
add	no	yes
(	no	no
col	no	yes
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
colList	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
format	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
format	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
props	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
format	no	yes
)	no	no
;	no	no
MethodCallRetVal	no	yes
createTbl	yes	yes
=	no	no
doHttpCall	no	yes
(	no	no
templetonBaseUrl	no	yes
+	no	no
,	no	no
HTTP_METHOD_TYPE	no	yes
.	no	no
PUT	no	yes
,	no	no
props	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
createTbl	yes	yes
.	no	no
getAssertMsg	no	yes
(	no	no
)	no	no
,	no	no
HttpStatus	no	yes
.	no	no
OK_200	no	yes
,	no	no
createTbl	yes	yes
.	no	no
httpStatusCode	no	yes
)	no	no
;	no	no

String	no	yes
msgBody	no	yes
=	no	no
JsonBuilder	no	yes
.	no	no
mapToJson	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msgBody	no	yes
)	no	no
;	no	no
StringRequestEntity	no	yes
sre	no	yes
=	no	no
new	no	no
StringRequestEntity	no	yes
(	no	no
msgBody	no	yes
,	no	no
,	no	no
charSet	no	yes
)	no	no
;	no	no
(	no	no
(	no	no
PutMethod	no	yes
)	no	no
method	no	yes
)	no	no
.	no	no
setRequestEntity	no	yes
(	no	no
sre	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	no
(	no	no
+	no	no
type	yes	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
params	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
method	no	yes
.	no	no
setQueryString	no	yes
(	no	no
new	no	no
NameValuePair	no	yes
[	no	no
]	no	no
{	no	no
new	no	no
NameValuePair	no	yes
(	no	no
,	no	no
username	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
NameValuePair	no	yes
[	no	no
]	no	no
newParams	no	yes
=	no	no
new	no	no
NameValuePair	no	yes
[	no	no
params	no	yes
.	no	no
length	no	yes
+	no	no
1	no	no
]	no	no
;	no	no
System	no	yes
.	no	no
arraycopy	no	yes
(	no	no
params	no	yes
,	no	no
0	no	no
,	no	no
newParams	no	yes
,	no	no
1	no	no
,	no	no
params	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
newParams	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
new	no	no
NameValuePair	no	yes
(	no	no
,	no	no
username	no	yes
)	no	no
;	no	no
method	no	yes
.	no	no
setQueryString	no	yes
(	no	no
newParams	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
actualUri	no	yes
=	no	no
;	no	no
try	no	no
{	no	no

try	no	no
{	no	no
final	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
basetblName	no	yes
=	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
tProps	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
buckets	no	yes
=	no	no
32	no	no
;	no	no
String	no	yes
tblName	yes	yes
=	no	no
basetblName	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
TableType	no	yes
.	no	no
EXTERNAL_TABLE	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
buckets	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
properties	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
properties	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
Table	no	yes
tbl2	yes	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testTransformerManagedTable	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
resetHMSClient	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
basetblName	no	yes
=	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
tProps	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
tblName	yes	yes
=	no	no
basetblName	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
TableType	no	yes
.	no	no
MANAGED_TABLE	no	yes
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
Table	no	yes
tbl2	yes	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testTransformerVirtualView	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
final	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
basetblName	no	yes
=	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
tProps	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
tblName	yes	yes
=	no	no
basetblName	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
TableType	no	yes
.	no	no
VIRTUAL_VIEW	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
properties	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
properties	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
Table	no	yes
tbl2	yes	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testTransformerMaterializedView	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
resetHMSClient	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
dbName	no	yes
=	no	no
;	no	no
String	no	yes
basetblName	no	yes
=	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
tProps	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
tblName	yes	yes
=	no	no
basetblName	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
TableType	no	yes
.	no	no
MATERIALIZED_VIEW	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
properties	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
properties	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
Table	no	yes
tbl2	yes	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

StringBuilder	no	yes
table_params	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
capabilities	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
TableType	no	yes
type	no	yes
=	no	no
TableType	no	yes
.	no	no
EXTERNAL_TABLE	no	yes
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
capabilities	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
count	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
setHMSClient	no	yes
(	no	no
,	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
)	no	no
(	no	no
capabilities	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	no	yes
=	no	no
createTables	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
int	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
PROCESSOR_CAPABILITIES	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExtendedTableInfo	no	yes
>	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no

tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
capabilities	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
count	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
setHMSClient	no	yes
(	no	no
,	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
)	no	no
(	no	no
capabilities	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	no	yes
=	no	no
createTables	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
int	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
PROCESSOR_CAPABILITIES	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExtendedTableInfo	no	yes
>	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	yes
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ALL	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no

}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ALL	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
}	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
(	no	no
count	no	yes
-	no	no
3	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ALL	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
}	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
null	no	no
,	no	no
dbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
(	no	no
count	no	yes
-	no	no
3	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
(	no	no
count	no	yes
-	no	no
3	no	no
)	no	no
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<=	no	no
pCount	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
partValues	no	yes
.	no	no
add	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
parts	yes	yes
=	no	no
client	no	yes
.	no	no
getPartitionsByNames	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
partValues	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
pCount	no	yes
,	no	no
parts	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
tblName	no	yes
=	no	no
;	no	no
StringBuilder	no	yes
properties	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
append	no	yes
(	no	no
CAPABILITIES_KEY	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
TableType	no	yes
.	no	no
EXTERNAL_TABLE	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
bucketCount	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
properties	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
parts	yes	yes
=	no	no
client	no	yes
.	no	no
getPartitionsByNames	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
partValues	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no

table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
table_params	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
table	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
me	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
capabilities	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
setHMSClient	no	yes
(	no	no
,	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
)	no	no
(	no	no
capabilities	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
table	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
me	no	no
)	no	no
{	no	no

table_params	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
CAPABILITIES_KEY	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
table_params	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
table	no	yes
=	no	no
createTableWithCapabilities	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
me	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
tblName	yes	yes
=	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
capabilities	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no

catch	no	no
(	no	no
MetaException	no	no
me	no	no
)	no	no
{	no	no
fail	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
}	no	no
resetHMSClient	no	yes
(	no	no
)	no	no
;	no	no
tblName	yes	yes
=	no	no
;	no	no
type	no	yes
=	no	no
TableType	no	yes
.	no	no
MANAGED_TABLE	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
table_params	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
table_params	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no

capabilities	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
catalog	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
sparkDbName	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
type	no	yes
=	no	no
TableType	no	yes
.	no	no
MANAGED_TABLE	no	yes
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
count	no	yes
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
table_params	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
table_params	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setHMSClient	no	yes
(	no	no
,	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
)	no	no
(	no	no
capabilities	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	no	yes
=	no	no
createTables	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
int	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
PROCESSOR_CAPABILITIES	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExtendedTableInfo	no	yes
>	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no

table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
tProps	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
table_params	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setHMSClient	no	yes
(	no	no
,	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
)	no	no
(	no	no
capabilities	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	no	yes
=	no	no
createTables	no	yes
(	no	no
tProps	no	yes
)	no	no
;	no	no
int	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
PROCESSOR_CAPABILITIES	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExtendedTableInfo	no	yes
>	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	yes
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no

int	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
PROCESSOR_CAPABILITIES	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExtendedTableInfo	no	yes
>	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	yes
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	yes
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ACCESS_TYPE	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExtendedTableInfo	no	no
tableInfo	no	yes
:	no	no
extTables	yes	yes
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredReadCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertNull	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getRequiredWriteCapabilities	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
tableInfo	no	yes
.	no	no
getAccessType	no	yes
(	no	no
)	no	no
<=	no	no
0	no	no
)	no	no
;	no	no
}	no	no
requestedFields	yes	yes
=	no	no
(	no	no
new	no	no
GetTablesRequestBuilder	no	yes
(	no	no
)	no	no
.	no	no
with	no	yes
(	no	no
GetTablesExtRequestFields	no	yes
.	no	no
ALL	no	yes
)	no	no
)	no	no
.	no	no
bitValue	no	yes
(	no	no
)	no	no
;	no	no
extTables	yes	yes
=	no	no
client	no	yes
.	no	no
getTablesExt	no	yes
(	no	no
catalog	no	yes
,	no	no
sparkDbName	no	yes
,	no	no
,	no	no
requestedFields	yes	yes
,	no	no
2000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedFields	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
count	no	yes
,	no	no
extTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
[	no	no
]	no	no
propArray	no	yes
=	no	no
properties	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
prop	no	yes
:	no	no
propArray	no	yes
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
keyValue	no	yes
=	no	no
prop	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
put	no	yes
(	no	no
keyValue	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
keyValue	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Catalog	no	yes
cat	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
cat	no	yes
=	no	no
client	no	yes
.	no	no
getCatalog	no	yes
(	no	no
catalog	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
cat	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
cat	no	yes
=	no	no
new	no	no
Catalog	no	yes
(	no	no
)	no	no
;	no	no
cat	no	yes
.	no	no
setName	no	yes
(	no	no
catalog	yes	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setLocationUri	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRootExternal	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
catalog	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
cat	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
cat	no	yes
=	no	no
new	no	no
Catalog	no	yes
(	no	no
)	no	no
;	no	no
cat	no	yes
.	no	no
setName	no	yes
(	no	no
catalog	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setLocationUri	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRootExternal	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
catalog	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setDescription	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
createCatalog	no	yes
(	no	no
cat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
catalog	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ce	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
catalog	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
dropTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testHouseKeepingThreadExistence	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
searchHousekeepingThreads	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Boolean	no	no
>	no	no
entry	yes	no
:	no	no
threadNames	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
entry	yes	no
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testHouseKeepingThreadExistence	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
searchHousekeepingThreads	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Boolean	no	no
>	no	no
entry	yes	no
:	no	no
threadNames	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
entry	yes	no
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testHouseKeepingThreadExistence	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
searchHousekeepingThreads	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Boolean	no	no
>	no	no
entry	yes	no
:	no	no
threadNames	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
entry	yes	no
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no

String	no	yes
[	no	no
]	no	no
propArray	no	yes
=	no	no
properties	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
prop	no	yes
:	no	no
propArray	no	yes
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
keyValue	no	yes
=	no	no
prop	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
table_params	no	yes
.	no	no
put	no	yes
(	no	no
keyValue	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
keyValue	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Catalog	no	yes
cat	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
cat	no	yes
=	no	no
client	no	yes
.	no	no
getCatalog	no	yes
(	no	no
catalog	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
cat	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
cat	no	yes
=	no	no
new	no	no
Catalog	no	yes
(	no	no
)	no	no
;	no	no
cat	no	yes
.	no	no
setName	no	yes
(	no	no
catalog	yes	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setLocationUri	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRootExternal	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
catalog	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
cat	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
cat	no	yes
=	no	no
new	no	no
Catalog	no	yes
(	no	no
)	no	no
;	no	no
cat	no	yes
.	no	no
setName	no	yes
(	no	no
catalog	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setLocationUri	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRootExternal	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
catalog	no	yes
)	no	no
;	no	no
cat	no	yes
.	no	no
setDescription	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
createCatalog	no	yes
(	no	no
cat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
catalog	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ce	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
catalog	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
dropTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
checkTableLocation	no	no
(	no	no
Table	no	no
table	yes	no
,	no	no
Path	no	no
expectedPath	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

static	no	no
void	no	no
checkEventSanity	no	no
(	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
eventsMap	no	no
,	no	no
String	no	yes
replicaDbName	no	yes
)	no	no
{	no	no
replicaDbName	no	yes
=	no	no
replicaDbName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
event	yes	yes
:	no	no
eventsMap	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
dbsForEvent	no	yes
=	no	no
replicatedDbsForEvents	no	yes
.	no	no
get	no	yes
(	no	no
event	yes	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testReplEvents	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
eventsMap	no	yes
=	no	no
prepareBootstrapData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
ReplMetaStoreEventListenerTestImpl	no	yes
.	no	no
checkEventSanity	no	yes
(	no	no
eventsMap	no	yes
,	no	no
replicatedDbName	no	yes
)	no	no
;	no	no
ReplMetaStoreEventListenerTestImpl	no	yes
.	no	no
clearSanityData	no	yes
(	no	no
)	no	no
;	no	no
eventsMap	no	yes
=	no	no
prepareIncData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incre	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
ReplMetaStoreEventListenerTestImpl	no	yes
.	no	no
checkEventSanity	no	yes
(	no	no
eventsMap	no	yes
,	no	no
replicatedDbName	no	yes
)	no	no
;	no	no
ReplMetaStoreEventListenerTestImpl	no	yes
.	no	no
clearSanityData	no	yes
(	no	no
)	no	no
;	no	no
eventsMap	no	yes
=	no	no
prepareInc2Data	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no

private	no	no
Tuple	no	no
replDumpDb	no	no
(	no	no
String	no	yes
dbName	no	yes
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
withClauseOptions	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
withClause	no	yes
=	no	no
getWithClause	no	yes
(	no	no
withClauseOptions	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dumpCmd	yes	yes
=	no	no
+	no	no
dbName	no	yes
+	no	no
withClause	no	yes
;	no	no
run	no	yes
(	no	no
dumpCmd	yes	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
dumpLocation	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
lastReplId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

String	no	yes
unptn_locn	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
TEST_PATH	no	yes
,	no	no
name	no	yes
+	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
ptn_locn_1	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
TEST_PATH	no	yes
,	no	no
name	no	yes
+	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
ptn_locn_2	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
TEST_PATH	no	yes
,	no	no
name	no	yes
+	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
createTestDataFile	no	yes
(	no	no
unptn_locn	no	yes
,	no	no
unptn_data	no	yes
)	no	no
;	no	no
createTestDataFile	no	yes
(	no	no
ptn_locn_1	no	yes
,	no	no
ptn_data_1	no	yes
)	no	no
;	no	no
createTestDataFile	no	yes
(	no	no
ptn_locn_2	no	yes
,	no	no
ptn_data_2	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
unptn_locn	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
unptn_data	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
ptn_locn_1	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
ptn_data_1	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
ptn_locn_2	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
ptn_data_2	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
ptnedTableNuller	no	no
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Nullable	no	no
@	no	no
Override	no	no
public	no	no
Table	no	no
apply	no	no
(	no	no
@	no	no
Nullable	no	no
Table	no	no
table	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
table	no	yes
.	no	no
getTableName	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
else	no	no
{	no	no
nonInjectedPathCalled	no	yes
=	no	no
true	no	no
;	no	no
return	no	no
table	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setGetTableBehaviour	no	yes
(	no	no
ptnedTableNuller	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
ptnedTableNuller	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetGetTableBehaviour	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
replDumpLocn	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDumpId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setGetTableBehaviour	no	yes
(	no	no
ptnedTableNuller	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
ptnedTableNuller	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetGetTableBehaviour	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
replDumpLocn	no	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDumpId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
replDumpLocn	no	yes
,	no	no
replDumpId	yes	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
replDbName	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
unptn_data	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyFail	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyIfTableNotExist	no	yes
(	no	no
replDbName	no	yes
+	no	no
,	no	no
,	no	no
metaStoreClient	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
ptn_data_2	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
BehaviourInjection	no	no
<	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>>	no	no
listPartitionNamesNuller	no	yes
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Nullable	no	no
@	no	no
Override	no	no
public	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
apply	no	no
(	no	no
@	no	no
Nullable	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
partitions	no	no
)	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
return	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setListPartitionNamesBehaviour	no	yes
(	no	no
listPartitionNamesNuller	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
listPartitionNamesNuller	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetListPartitionNamesBehaviour	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
replDumpLocn	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDumpId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

listPartitionNamesNuller	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetListPartitionNamesBehaviour	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
replDumpLocn	no	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDumpId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
replDumpLocn	no	yes
,	no	no
replDumpId	yes	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
replDbName	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
empty	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
empty	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyIfPartitionNotExist	no	yes
(	no	no
replDbName	no	yes
,	no	no
,	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
metaStoreClientMirror	no	yes
)	no	no
;	no	no
verifyIfPartitionNotExist	no	yes
(	no	no
replDbName	no	yes
,	no	no
,	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
metaStoreClientMirror	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
Thread	no	no
t	yes	yes
=	no	no
new	no	no
Thread	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
IDriver	no	yes
driver2	no	yes
=	no	no
DriverFactory	no	yes
.	no	no
newDriver	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
new	no	no
CliSessionState	no	yes
(	no	no
hconf	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
driver2	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
)	no	no
;	no	no
driver2	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

nonInjectedPathCalled	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
Thread	no	no
t	yes	yes
=	no	no
new	no	no
Thread	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
IDriver	no	yes
driver2	no	yes
=	no	no
DriverFactory	no	yes
.	no	no
newDriver	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
new	no	no
CliSessionState	no	yes
(	no	no
hconf	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
driver2	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
unptn_data	no	yes
[	no	no
0	no	no
]	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
Tuple	no	yes
incrementalDump	no	yes
=	no	no
replDumpDb	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
String	no	yes
incrementalDumpLocn	no	yes
=	no	no
incrementalDump	no	yes
.	no	no
dumpLocation	no	yes
;	no	no
Path	no	yes
dumpPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
incrementalDumpLocn	no	yes
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
dumpPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
dirsInLoadPath	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
dumpPath	no	yes
,	no	no
EximUtil	no	yes
.	no	no
getDirectoryFilter	no	yes
(	no	no
fs	no	yes
)	no	no
)	no	no
;	no	no
Arrays	no	yes
.	no	no
sort	no	yes
(	no	no
dirsInLoadPath	no	yes
,	no	no
new	no	no
EventDumpDirComparator	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
nextEventId	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
dir	no	yes
:	no	no
dirsInLoadPath	no	yes
)	no	no
{	no	no
Path	no	yes
srcPath	yes	yes
=	no	no
dir	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nextEventId	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
nextEventId	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
Math	no	yes
.	no	no
pow	no	yes
(	no	no
10.0	no	no
,	no	no
(	no	no
double	no	no
)	no	no
srcPath	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
*	no	no
2	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Path	no	yes
destPath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
srcPath	yes	yes
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
nextEventId	no	yes
)	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
rename	no	yes
(	no	no
srcPath	yes	yes
,	no	no
destPath	yes	yes
)	no	no
;	no	no

verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
ptn_data_2	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
ptn_data_1	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
verifyRun	no	yes
(	no	no
+	no	no
replDbName	no	yes
+	no	no
,	no	no
ptn_data_2	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
unptn_data	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
verifySetup	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
ptn_data_1	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
postDropReplDumpLocn	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
0	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
postDropReplDumpId	yes	yes
=	no	no
getResult	no	yes
(	no	no
0	no	no
,	no	no
1	no	no
,	no	no
true	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRenameTableAcrossDatabases	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
testName	yes	yes
=	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRenamePartitionedTableAcrossDatabases	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
testName	yes	yes
=	no	no
;	no	no

run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
replDbName	no	yes
,	no	no
driverMirror	no	yes
)	no	no
;	no	no
driverMirror	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
warehouse	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
,	no	no
)	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
warehouse	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
hconf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Path	no	yes
path	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
warehouse	yes	yes
,	no	no
replDbName	no	yes
+	no	no
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
+	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
path	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
PathFilter	no	no
filter	no	yes
=	no	no
new	no	no
PathFilter	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
boolean	no	no
accept	no	no
(	no	no
Path	no	yes
path	no	yes
)	no	no
{	no	no
return	no	no
path	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
STAGINGDIR	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
statuses	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
path	no	yes
,	no	no
filter	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
statuses	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testCMConflict	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
testName	no	yes
=	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
createDB	no	yes
(	no	no
testName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDbName	no	yes
=	no	no
dbName	no	yes
+	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
Tuple	no	yes
bootstrapDump	no	yes
=	no	no
replDumpDb	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
advanceDumpDir	no	yes
(	no	no
)	no	no
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
String	no	yes
replDumpLocn	yes	yes
=	no	no
bootstrapDump	no	yes
.	no	no
dumpLocation	no	yes
;	no	no
String	no	yes
replDumpId	yes	yes
=	no	no
bootstrapDump	no	yes
.	no	no
lastReplId	no	yes
;	no	no
run	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
String	no	no
createDB	no	no
(	no	no
String	no	no
name	yes	no
,	no	no
IDriver	no	no
myDriver	no	no
)	no	no
{	no	no

private	no	no
static	no	no
String	no	no
createDBNonRepl	no	no
(	no	no
String	no	no
name	yes	no
,	no	no
IDriver	no	no
myDriver	no	no
)	no	no
{	no	no

private	no	no
void	no	no
verifyResults	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	yes	no
,	no	no
IDriver	no	no
myDriver	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	no	yes
=	no	no
getOutput	no	yes
(	no	no
myDriver	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
verifyResults	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	no	yes
,	no	no
IDriver	no	no
myDriver	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	yes	yes
=	no	no
getOutput	no	yes
(	no	no
myDriver	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
data	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testAcidTablesBootstrap	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
bootstrapDump	no	yes
=	no	no
prepareDataAndDump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyLoadExecution	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
bootstrapDump	no	yes
.	no	no
lastReplicationId	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
prepareIncNonAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
prepareIncAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incDump	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyIncLoad	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
incDump	no	yes
.	no	no
lastReplicationId	no	yes
)	no	no
;	no	no
prepareInc2NonAcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
prepareInc2AcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no

nonInjectedPathCalled	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
Thread	no	no
t	yes	yes
=	no	no
new	no	no
Thread	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
IDriver	no	yes
driver	no	yes
=	no	no
DriverFactory	no	yes
.	no	no
newDriver	no	yes
(	no	no
primaryConf	no	yes
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
new	no	no
CliSessionState	no	yes
(	no	no
primaryConf	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
Thread	no	no
t	yes	yes
=	no	no
new	no	no
Thread	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	yes
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
IDriver	no	yes
driver	no	yes
=	no	no
DriverFactory	no	yes
.	no	no
newDriver	no	yes
(	no	no
primaryConf	no	yes
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
new	no	no
CliSessionState	no	yes
(	no	no
primaryConf	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
+	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testAcidTablesBootstrapDuringIncremental	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
bootstrapDump	no	yes
=	no	no
prepareDataAndDump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithoutAcidClause	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyLoadExecution	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
bootstrapDump	no	yes
.	no	no
lastReplicationId	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
prepareIncAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
prepareIncNonAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testAcidTablesBootstrapDuringIncremental	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
bootstrapDump	no	yes
=	no	no
prepareDataAndDump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithoutAcidClause	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyLoadExecution	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
bootstrapDump	no	yes
.	no	no
lastReplicationId	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
prepareIncAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
prepareIncNonAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incrementalDump	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithAcidBootstrapClause	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyIncLoad	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
incrementalDump	no	yes
.	no	no
lastReplicationId	no	yes
)	no	no
;	no	no
String	no	yes
hiveDumpLocation	no	yes
=	no	no
incrementalDump	no	yes
.	no	no
dumpLocation	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
ReplUtils	no	yes
.	no	no
REPL_HIVE_BASE_DIR	no	yes
;	no	no
replica	no	yes
.	no	no
verifyIfCkptSetForTables	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
acidTableNames	no	yes
,	no	no
hiveDumpLocation	no	yes
)	no	no
;	no	no
prepareInc2AcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
prepareInc2NonAcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testRetryAcidTablesBootstrapFromDifferentDump	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
bootstrapDump	no	yes
=	no	no
prepareDataAndDump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithoutAcidClause	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyLoadExecution	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
bootstrapDump	no	yes
.	no	no
lastReplicationId	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
prepareIncAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
prepareIncNonAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no

verifyLoadExecution	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
bootstrapDump	no	yes
.	no	no
lastReplicationId	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
prepareIncAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
prepareIncNonAcidData	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incDump	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithAcidBootstrapClause	no	yes
)	no	no
;	no	no
BehaviourInjection	no	no
<	no	no
CallerArguments	no	no
,	no	no
Boolean	no	no
>	no	no
callerVerifier	no	yes
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
CallerArguments	no	no
,	no	no
Boolean	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Nullable	no	no
@	no	no
Override	no	no
public	no	no
Boolean	no	no
apply	no	no
(	no	no
@	no	no
Nullable	no	no
CallerArguments	no	no
args	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
args	no	yes
.	no	no
tblName	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
&&	no	no
args	no	yes
.	no	no
dbName	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
replicatedDbName	no	yes
)	no	no
)	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
args	no	yes
.	no	no
dbName	no	yes
+	no	no
+	no	no
args	no	yes
.	no	no
tblName	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setAlterTableModifier	no	yes
(	no	no
callerVerifier	no	yes
)	no	no
;	no	no
try	no	no
{	no	no

LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
args	no	yes
.	no	no
dbName	no	yes
+	no	no
+	no	no
args	no	yes
.	no	no
tblName	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setAlterTableModifier	no	yes
(	no	no
callerVerifier	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
loadFailure	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
callerVerifier	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetAlterTableModifier	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyIncLoad	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
incDump	no	yes
.	no	no
lastReplicationId	no	yes
)	no	no
;	no	no
prepareInc2AcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
prepareInc2NonAcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no

}	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setAlterTableModifier	no	yes
(	no	no
callerVerifier	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
replica	no	yes
.	no	no
loadFailure	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
callerVerifier	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetAlterTableModifier	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
verifyIncLoad	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
incDump	no	yes
.	no	no
lastReplicationId	no	yes
)	no	no
;	no	no
prepareInc2AcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
prepareInc2NonAcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
testName	yes	yes
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
inc2Dump	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithAcidClause	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
injectionPathCalled	no	yes
)	no	no
{	no	no
nonInjectedPathCalled	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
Thread	no	no
t	yes	yes
=	no	no
new	no	no
Thread	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
prepareInc2NonAcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
prepareInc2AcidData	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
primary	no	yes
.	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
Assert	no	yes
.	no	no
assertNull	no	yes
(	no	no
t	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
)	no	no
;	no	no
t	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
t	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
t	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
input	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setGetCurrentNotificationEventIdBehaviour	no	yes
(	no	no
callerInjectedBehavior	no	yes
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incDump	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
incDump	yes	yes
=	no	no
primary	no	yes
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithAcidBootstrapClause	no	yes
)	no	no
;	no	no
callerInjectedBehavior	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no

t	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
t	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
t	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
input	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setGetCurrentNotificationEventIdBehaviour	no	yes
(	no	no
callerInjectedBehavior	no	yes
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
incDump	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
incDump	yes	yes
=	no	no
primary	no	yes
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithAcidBootstrapClause	no	yes
)	no	no
;	no	no
callerInjectedBehavior	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetGetCurrentNotificationEventIdBehaviour	no	yes
(	no	no
)	no	no
;	no	no

return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
;	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
setCallerVerifier	no	yes
(	no	no
callerVerifier	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
withConfigs	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
try	no	no
{	no	no
replica	no	yes
.	no	no
loadFailure	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
,	no	no
withConfigs	no	yes
)	no	no
;	no	no
callerVerifier	no	yes
.	no	no
assertInjectionsPerformed	no	yes
(	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
InjectableBehaviourObjectStore	no	yes
.	no	no
resetCallerVerifier	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
replica	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
replicatedDbName	no	yes
)	no	no
.	no	no
run	no	yes
(	no	no
+	no	no
replicatedDbName	no	yes
)	no	no
.	no	no
verifyResult	no	yes
(	no	no
)	no	no
.	no	no
run	no	yes
(	no	no
+	no	no
replicatedDbName	no	yes
+	no	no
)	no	no
.	no	no
verifyResult	no	yes
(	no	no
replicatedDbName	no	yes
+	no	no
+	no	no
funcName1	no	yes
)	no	no
;	no	no
callerVerifier	no	yes
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
CallerArguments	no	no
,	no	no
Boolean	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Boolean	no	no
apply	no	no
(	no	no
CallerArguments	no	no
args	yes	yes
)	no	no
{	no	no
injectionPathCalled	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
!	no	no
args	yes	yes
.	no	no
dbName	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
replicatedDbName	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
args	yes	yes
.	no	no
dbName	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testExternalTablesIncReplicationWithConcurrentDropTable	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
dumpWithClause	no	yes
=	no	no
ReplicationTestUtils	no	yes
.	no	no
externalTableWithClause	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
true	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
loadWithClause	no	yes
=	no	no
ReplicationTestUtils	no	yes
.	no	no
includeExternalTableClause	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
tupleBootstrap	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithClause	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
,	no	no
loadWithClause	no	yes
)	no	no
;	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
tableNuller	no	no
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Nullable	no	no
@	no	no
Override	no	no
public	no	no
Table	no	no
apply	no	no
(	no	no
@	no	no
Nullable	no	no
Table	no	no
table	yes	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testExternalTablesIncReplicationWithConcurrentDropTable	no	no
(	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
dumpWithClause	no	yes
=	no	no
ReplicationTestUtils	no	yes
.	no	no
includeExternalTableClause	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
loadWithClause	no	yes
=	no	no
ReplicationTestUtils	no	yes
.	no	no
includeExternalTableClause	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
tupleBootstrap	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
,	no	no
dumpWithClause	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
,	no	no
loadWithClause	no	yes
)	no	no
;	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
tableNuller	no	no
=	no	no
new	no	no
BehaviourInjection	no	no
<	no	no
Table	no	no
,	no	no
Table	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Nullable	no	no
@	no	no
Override	no	no
public	no	no
Table	no	no
apply	no	no
(	no	no
@	no	no
Nullable	no	no
Table	no	no
table	yes	no
)	no	no
{	no	no

replicateAndVerify	no	yes
(	no	no
replPolicy	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
replicatedTables	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
ex	yes	yes
instanceof	no	no
ParseException	no	yes
)	no	no
;	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
replPolicy	no	yes
=	no	no
primaryDbName	no	yes
;	no	no
WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
tupleBootstrap	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
String	no	yes
lastReplId	no	yes
=	no	no
tupleBootstrap	no	yes
.	no	no
lastReplicationId	no	yes
;	no	no
for	no	no
(	no	no
String	no	yes
oldReplPolicy	no	yes
:	no	no
invalidReplPolicies	no	no
)	no	no
{	no	no
failed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
replicateAndVerify	no	yes
(	no	no
replPolicy	no	yes
,	no	no
oldReplPolicy	no	yes
,	no	no
lastReplId	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
replicatedTables	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no

WarehouseInstance	no	yes
.	no	no
Tuple	no	yes
tupleBootstrap	no	yes
=	no	no
primary	no	yes
.	no	no
run	no	yes
(	no	no
+	no	no
primaryDbName	no	yes
)	no	no
.	no	no
dump	no	yes
(	no	no
primaryDbName	no	yes
)	no	no
;	no	no
replica	no	yes
.	no	no
load	no	yes
(	no	no
replicatedDbName	no	yes
,	no	no
primaryDbName	no	yes
)	no	no
;	no	no
String	no	yes
lastReplId	no	yes
=	no	no
tupleBootstrap	no	yes
.	no	no
lastReplicationId	no	yes
;	no	no
for	no	no
(	no	no
String	no	yes
oldReplPolicy	no	yes
:	no	no
invalidReplPolicies	no	no
)	no	no
{	no	no
failed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
replicateAndVerify	no	yes
(	no	no
replPolicy	no	yes
,	no	no
oldReplPolicy	no	yes
,	no	no
lastReplId	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
replicatedTables	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
ex	yes	yes
instanceof	no	no
ParseException	no	yes
)	no	no
;	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
oldReplPolicy	no	yes
=	no	no
replPolicy	no	yes
;	no	no
replPolicy	no	yes
=	no	no
primaryDbName	no	yes
+	no	no
;	no	no
failed	no	yes
=	no	no
false	no	no
;	no	no

Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
ex	yes	yes
instanceof	no	no
ParseException	no	yes
)	no	no
;	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
oldReplPolicy	no	yes
=	no	no
replPolicy	no	yes
;	no	no
replPolicy	no	yes
=	no	no
primaryDbName	no	yes
+	no	no
;	no	no
failed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
replicateAndVerify	no	yes
(	no	no
replPolicy	no	yes
,	no	no
oldReplPolicy	no	yes
,	no	no
lastReplId	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
replicatedTables	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ex	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
ex	yes	yes
instanceof	no	no
SemanticException	no	yes
)	no	no
;	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
failed	no	yes
)	no	no
;	no	no
invalidReplPolicies	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
primaryDbName	no	yes
+	no	no
,	no	no
primaryDbName	no	yes
+	no	no
}	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
invalidReplPolicy	no	no
:	no	no
invalidReplPolicies	no	yes
)	no	no
{	no	no

WarehouseInstance	no	no
verifyResults	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	no	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no

WarehouseInstance	no	no
verifyResults	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	yes	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
data	no	yes
,	no	no
)	no	no
)	no	no
;	no	no

WarehouseInstance	no	no
verifyFailure	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	no	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no

WarehouseInstance	no	no
verifyFailure	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
data	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	yes	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
data	no	yes
,	no	no
)	no	no
)	no	no
;	no	no

WarehouseInstance	no	no
verifyResults	no	no
(	no	no
List	no	yes
data	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	no	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no

WarehouseInstance	no	no
verifyResults	no	no
(	no	no
List	no	yes
data	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
results	yes	yes
=	no	no
getOutput	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
data	no	yes
,	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
printOutput	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
String	no	no
s	yes	no
:	no	no
getOutput	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
killAMForQueryId	no	no
(	no	no
String	no	yes
queryId	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
YarnClient	no	yes
yarnClient	no	yes
=	no	no
YarnClient	no	yes
.	no	no
createYarnClient	no	yes
(	no	no
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
init	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ApplicationReport	no	yes
>	no	no
applicationReports	no	yes
=	no	no
yarnClient	no	yes
.	no	no
getApplications	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
diagnosticsMessage	no	yes
=	no	no
;	no	no
for	no	no
(	no	no
ApplicationReport	no	yes
ar	yes	no
:	no	no
applicationReports	no	yes
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateSomeColumnsUsed	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
reset	no	yes
(	no	no
mockedAuthorizer	no	yes
)	no	no
;	no	no
int	no	no
status	no	yes
=	no	no
driver	no	yes
.	no	no
compile	no	yes
(	no	no
+	no	no
acidTableName	no	yes
+	no	no
,	no	no
true	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
status	no	yes
)	no	no
;	no	no
Pair	no	yes
<	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
,	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>>	no	no
io	no	yes
=	no	no
getHivePrivilegeObjectInputs	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
outputs	no	yes
=	no	no
io	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
;	no	no
HivePrivilegeObject	no	yes
tableObj	yes	yes
=	no	no
outputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateSomeColumnsUsedExprInSet	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
reset	no	yes
(	no	no
mockedAuthorizer	no	yes
)	no	no
;	no	no
int	no	no
status	no	yes
=	no	no
driver	no	yes
.	no	no
compile	no	yes
(	no	no
+	no	no
acidTableName	no	yes
+	no	no
,	no	no
true	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
status	no	yes
)	no	no
;	no	no
Pair	no	yes
<	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
,	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>>	no	no
io	no	yes
=	no	no
getHivePrivilegeObjectInputs	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
outputs	no	yes
=	no	no
io	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
;	no	no
HivePrivilegeObject	no	yes
tableObj	yes	yes
=	no	no
outputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

static	no	no
List	no	no
<	no	no
String	no	no
>	no	no
executeStatementOnDriverAndReturnResults	no	no
(	no	no
String	no	no
cmd	yes	no
,	no	no
IDriver	no	no
driver	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testStatsAfterCompactionPartTbl	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
tblName	no	yes
=	no	no
;	no	no
String	no	yes
tblNameStg	no	yes
=	no	no
tblName	no	yes
+	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
colNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
stagingFolder	no	yes
.	no	no
newFolder	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
BASIC_FILE_NAME	no	yes
+	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblNameStg	no	yes
+	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
)	no	no
;	no	no
TxnStore	no	yes
txnHandler	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getTxnStore	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
CompactionInfo	no	yes
ci	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
colNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
stagingFolder	no	yes
.	no	no
newFolder	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
BASIC_FILE_NAME	no	yes
+	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblNameStg	no	yes
+	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
)	no	no
;	no	no
TxnStore	no	yes
txnHandler	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getTxnStore	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
CompactionInfo	no	yes
ci	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
colNames	no	yes
,	no	no
conf	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
su	no	yes
.	no	no
gatherStats	no	yes
(	no	no
)	no	no
;	no	no

executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
stagingFolder	no	yes
.	no	no
newFolder	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
BASIC_FILE_NAME	no	yes
+	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblNameStg	no	yes
+	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
)	no	no
;	no	no
TxnStore	no	yes
txnHandler	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getTxnStore	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
CompactionInfo	no	yes
ci	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
colNames	no	yes
,	no	no
conf	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
su	no	yes
.	no	no
gatherStats	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
CompactionInfo	no	yes
ciPart2	no	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no

executeStatementOnDriver	no	yes
(	no	no
+	no	no
BASIC_FILE_NAME	no	yes
+	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblNameStg	no	yes
+	no	no
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
executeStatementOnDriver	no	yes
(	no	no
+	no	no
tblNameStg	no	yes
+	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
,	no	no
driver	no	yes
)	no	no
;	no	no
execSelectAndDumpData	no	yes
(	no	no
+	no	no
tblName	no	yes
,	no	no
driver	no	yes
,	no	no
+	no	no
tblName	no	yes
+	no	no
)	no	no
;	no	no
TxnStore	no	yes
txnHandler	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getTxnStore	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
CompactionInfo	no	yes
ci	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
colNames	no	yes
,	no	no
conf	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
su	no	yes
.	no	no
gatherStats	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
CompactionInfo	no	yes
ciPart2	no	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
,	no	no
tblName	no	yes
,	no	no
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnHandler	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
su	no	yes
=	no	no
Worker	no	yes
.	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ciPart2	no	yes
,	no	no
colNames	no	yes
,	no	no
conf	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
su	no	yes
.	no	no
gatherStats	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
execSelectAndDumpData	no	no
(	no	no
String	no	yes
selectStmt	no	yes
,	no	no
IDriver	no	no
driver	no	yes
,	no	no
String	no	yes
msg	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
executeStatementOnDriver	no	yes
(	no	no
selectStmt	no	yes
,	no	no
driver	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
valuesReadFromHiveDriver	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
driver	no	yes
.	no	no
getResults	no	yes
(	no	no
valuesReadFromHiveDriver	no	yes
)	no	no
;	no	no
int	no	no
rowIdx	no	yes
=	no	no
0	no	no
;	no	no

static	no	no
void	no	no
executeStatementOnDriver	no	no
(	no	no
String	no	no
cmd	yes	no
,	no	no
IDriver	no	no
driver	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

ByteArrayOutputStream	no	yes
os	no	yes
=	no	no
new	no	no
ByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
PrintStream	no	yes
beelineOutputStream	no	yes
=	no	no
new	no	no
PrintStream	no	yes
(	no	no
os	no	yes
)	no	no
;	no	no
beeLine	no	yes
.	no	no
setOutputStream	no	yes
(	no	no
beelineOutputStream	no	yes
)	no	no
;	no	no
beeLine	no	yes
.	no	no
setErrorStream	no	yes
(	no	no
beelineOutputStream	no	yes
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
args	no	yes
=	no	no
argList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
argList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
if	no	no
(	no	no
prompt	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
inputStream	no	yes
=	no	no
new	no	no
ByteArrayInputStream	no	yes
(	no	no
prompt	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
beeLine	no	yes
.	no	no
begin	no	yes
(	no	no
args	no	yes
,	no	no
inputStream	no	yes
)	no	no
==	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
testMaxColumnWidthOption	no	no
)	no	no
{	no	no
int	no	no
maxColumnWidth	no	yes
=	no	no
beeLine	no	yes
.	no	no
getOpts	no	yes
(	no	no
)	no	no
.	no	no
getMaxColumnWidth	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
+	no	no
expectedMaxColumnWidth	no	yes
+	no	no
+	no	no
maxColumnWidth	no	yes
,	no	no
maxColumnWidth	no	yes
==	no	no
expectedMaxColumnWidth	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hiveConfKey	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
hiveConfValue	no	yes
=	no	no
beeLine	no	yes
.	no	no
getOpts	no	yes
(	no	no
)	no	no
.	no	no
getHiveConfVariables	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
hiveConfKey	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
+	no	no
expectedHiveConfValue	no	yes
+	no	no
+	no	no
hiveConfValue	no	yes
+	no	no
+	no	no
hiveConfKey	no	yes
,	no	no
expectedHiveConfValue	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
hiveConfValue	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
output	yes	yes
=	no	no
os	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

void	no	no
runQueryWithTrigger	no	no
(	no	no
final	no	no
String	no	yes
query	no	no
,	no	no
final	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
setCmds	no	no
,	no	no
final	no	no
String	no	yes
expect	no	no
,	no	no
final	no	no
int	no	no
queryTimeoutSecs	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
testName	yes	yes
=	no	no
getTestName	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

selStmt	no	yes
.	no	no
setQueryTimeout	no	yes
(	no	no
queryTimeoutSecs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
setCmds	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
setCmd	no	yes
:	no	no
setCmds	no	no
)	no	no
{	no	no
selStmt	no	yes
.	no	no
execute	no	yes
(	no	no
setCmd	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
selStmt	no	yes
.	no	no
execute	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	yes
e	no	yes
)	no	no
{	no	no
throwable	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
selStmt	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
expect	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
assertNull	no	yes
(	no	no
,	no	no
throwable	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
assertNotNull	no	yes
(	no	no
,	no	no
throwable	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
SQLException	no	yes
.	no	no
class	no	no
,	no	no
throwable	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
expect	no	yes
+	no	no
+	no	no
throwable	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
throwable	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
expect	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
long	no	no
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
assertEquals	no	yes
(	no	no
count	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
res	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
+	no	no
dataTypeTableName	no	yes
+	no	no
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
res	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
res	no	yes
.	no	no
findColumn	no	yes
(	no	no
)	no	no
;	no	no
res	no	yes
.	no	no
findColumn	no	yes
(	no	no
)	no	no
;	no	no
count	no	yes
++	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
count	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no

stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
sql	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
logs	no	yes
=	no	no
stmt	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
false	no	no
,	no	no
10000	no	no
)	no	no
;	no	no
stmt	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
verifyFetchedLog	no	yes
(	no	no
logs	no	yes
,	no	no
expectedLogs	no	yes
)	no	no
;	no	no
final	no	no
HiveStatement	no	yes
statement	no	yes
=	no	no
(	no	no
HiveStatement	no	yes
)	no	no
con	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
statement	no	yes
)	no	no
;	no	no
statement	no	yes
.	no	no
setFetchSize	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
incrementalLogs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Runnable	no	no
logThread	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
while	no	no
(	no	no
statement	no	yes
.	no	no
hasMoreLogs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
incrementalLogs	no	yes
.	no	no
addAll	no	yes
(	no	no
statement	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

verifyFetchedLog	no	yes
(	no	no
logs	no	yes
,	no	no
expectedLogs	no	yes
)	no	no
;	no	no
final	no	no
HiveStatement	no	yes
statement	no	yes
=	no	no
(	no	no
HiveStatement	no	yes
)	no	no
con	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
statement	no	yes
)	no	no
;	no	no
statement	no	yes
.	no	no
setFetchSize	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
incrementalLogs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Runnable	no	no
logThread	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
while	no	no
(	no	no
statement	no	yes
.	no	no
hasMoreLogs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
incrementalLogs	no	yes
.	no	no
addAll	no	yes
(	no	no
statement	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testKillQueryWithRandomId	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Connection	no	yes
con1	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
miniHS2directUrl1	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
ExceptionHolder	no	yes
tKillHolder	no	yes
=	no	no
new	no	no
ExceptionHolder	no	yes
(	no	no
)	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
con1	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
queryId	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no

private	no	no
int	no	no
execCommand	no	yes
(	no	no
String	no	yes
cmd	yes	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
int	no	no
exitCode	no	yes
;	no	no
try	no	no
{	no	no
String	no	yes
output	yes	yes
=	no	no
Shell	no	yes
.	no	no
execCommand	no	yes
(	no	no
,	no	no
,	no	no
cmd	yes	yes
)	no	no
;	no	no

Assume	no	yes
.	no	no
assumeTrue	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
.	no	no
contains	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SSLTestUtils	no	yes
.	no	no
setSslConfOverlay	no	yes
(	no	no
confOverlay	no	yes
)	no	no
;	no	no
SSLTestUtils	no	yes
.	no	no
setBinaryConfOverlay	no	yes
(	no	no
confOverlay	no	yes
)	no	no
;	no	no
miniHS2	no	yes
.	no	no
start	no	yes
(	no	no
confOverlay	no	yes
)	no	no
;	no	no
hs2Conn	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
miniHS2	no	yes
.	no	no
getJdbcURL	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
dataFileDir	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
TRUST_STORE_NAME	no	yes
+	no	no
+	no	no
KEY_STORE_TRUST_STORE_PASSWORD	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
hs2Conn	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
execCommand	no	yes
(	no	no
+	no	no
miniHS2	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
miniHS2	no	yes
.	no	no
getBinaryPort	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
1	no	no
,	no	no
execCommand	no	yes
(	no	no
+	no	no
miniHS2	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
miniHS2	no	yes
.	no	no
getBinaryPort	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
)	no	no
;	no	no
miniHS2	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
SSLTestUtils	no	yes
.	no	no
setHttpConfOverlay	no	yes
(	no	no
confOverlay	no	yes
)	no	no
;	no	no
miniHS2	no	yes
.	no	no
start	no	yes
(	no	no
confOverlay	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
hs2Conn	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
miniHS2	no	yes
.	no	no
getJdbcURL	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
dataFileDir	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
TRUST_STORE_NAME	no	yes
+	no	no
+	no	no
KEY_STORE_TRUST_STORE_PASSWORD	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
assertEquals	no	yes
(	no	no
count	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
fail	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
res	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
+	no	no
dataTypeTableName	no	yes
+	no	no
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
res	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
res	no	yes
.	no	no
findColumn	no	yes
(	no	no
)	no	no
;	no	no
res	no	yes
.	no	no
findColumn	no	yes
(	no	no
)	no	no
;	no	no
count	no	yes
++	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
count	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no

stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
sql	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
logs	no	yes
=	no	no
stmt	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
false	no	no
,	no	no
10000	no	no
)	no	no
;	no	no
stmt	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
verifyFetchedLog	no	yes
(	no	no
logs	no	yes
,	no	no
expectedLogs	no	yes
)	no	no
;	no	no
final	no	no
HiveStatement	no	yes
statement	no	yes
=	no	no
(	no	no
HiveStatement	no	yes
)	no	no
con	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
statement	no	yes
)	no	no
;	no	no
statement	no	yes
.	no	no
setFetchSize	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
incrementalLogs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Runnable	no	no
logThread	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
while	no	no
(	no	no
statement	no	yes
.	no	no
hasMoreLogs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
incrementalLogs	no	yes
.	no	no
addAll	no	yes
(	no	no
statement	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

verifyFetchedLog	no	yes
(	no	no
logs	no	yes
,	no	no
expectedLogs	no	yes
)	no	no
;	no	no
final	no	no
HiveStatement	no	yes
statement	no	yes
=	no	no
(	no	no
HiveStatement	no	yes
)	no	no
con	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
statement	no	yes
)	no	no
;	no	no
statement	no	yes
.	no	no
setFetchSize	no	yes
(	no	no
10000	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
incrementalLogs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Runnable	no	no
logThread	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
while	no	no
(	no	no
statement	no	yes
.	no	no
hasMoreLogs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
incrementalLogs	no	yes
.	no	no
addAll	no	yes
(	no	no
statement	no	yes
.	no	no
getQueryLog	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
ensureCleanDirectory	no	no
(	no	no
File	no	no
dir	yes	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
dir	yes	no
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
BeforeClass	no	no
public	no	no
void	no	no
beforeClass	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
CoreCliDriver	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
runTest	no	no
(	no	no
String	no	no
testName	no	no
,	no	no
String	no	no
fname	yes	no
,	no	no
String	no	no
fpath	no	no
)	no	no
{	no	no
Stopwatch	no	yes
sw	no	yes
=	no	no
Stopwatch	no	yes
.	no	no
createStarted	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
skipped	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
failed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no

qt	no	yes
.	no	no
failedQuery	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
.	no	no
getResponseCode	no	yes
(	no	no
)	no	no
,	no	no
fname	no	yes
,	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
)	no	no
;	no	no
}	no	no
setupAdditionalPartialMasks	no	yes
(	no	no
)	no	no
;	no	no
QTestProcessExecResult	no	yes
result	no	yes
=	no	no
qt	no	yes
.	no	no
checkCliDriverResults	no	yes
(	no	no
fname	no	yes
)	no	no
;	no	no
resetAdditionalPartialMasks	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
.	no	no
getReturnCode	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
String	no	yes
message	yes	yes
=	no	no
Strings	no	yes
.	no	no
isNullOrEmpty	no	yes
(	no	no
result	no	yes
.	no	no
getCapturedOutput	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
:	no	no
+	no	no
result	no	yes
.	no	no
getCapturedOutput	no	yes
(	no	no
)	no	no
;	no	no
qt	no	yes
.	no	no
failedDiff	no	yes
(	no	no
result	no	yes
.	no	no
getReturnCode	no	yes
(	no	no
)	no	no
,	no	no
fname	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AssumptionViolatedException	no	no
e	no	yes
)	no	no
{	no	no
skipped	no	yes
=	no	no
true	no	no
;	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
failed	no	yes
=	no	no
true	no	no
;	no	no
qt	no	yes
.	no	no
failedWithException	no	yes
(	no	no
e	no	yes
,	no	no
fname	no	yes
,	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
runTest	no	no
(	no	no
String	no	no
name	no	no
,	no	no
String	no	no
fname	yes	no
,	no	no
String	no	no
fpath	no	no
)	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

qt	no	yes
.	no	no
cliInit	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
fpath	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
qt	no	yes
.	no	no
executeClient	no	yes
(	no	no
fname	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CommandProcessorException	no	no
e	no	yes
)	no	no
{	no	no
qt	no	yes
.	no	no
failedQuery	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
.	no	no
getResponseCode	no	yes
(	no	no
)	no	no
,	no	no
fname	no	yes
,	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
)	no	no
;	no	no
}	no	no
QTestProcessExecResult	no	yes
result	no	yes
=	no	no
qt	no	yes
.	no	no
checkCliDriverResults	no	yes
(	no	no
fname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
.	no	no
getReturnCode	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
Strings	no	yes
.	no	no
isNullOrEmpty	no	yes
(	no	no
result	no	yes
.	no	no
getCapturedOutput	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
:	no	no
+	no	no
result	no	yes
.	no	no
getCapturedOutput	no	yes
(	no	no
)	no	no
;	no	no
qt	no	yes
.	no	no
failedDiff	no	yes
(	no	no
result	no	yes
.	no	no
getReturnCode	no	yes
(	no	no
)	no	no
,	no	no
fname	no	yes
,	no	no
message	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
AssumptionViolatedException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
qt	no	yes
.	no	no
failedWithException	no	yes
(	no	no
e	no	yes
,	no	no
fname	no	yes
,	no	no
QTestUtil	no	yes
.	no	no
DEBUG_HINT	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
elapsedTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
;	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
fname	no	yes
+	no	no
+	no	no
elapsedTime	no	yes
/	no	no
1000	no	no
+	no	no
;	no	no

public	no	no
static	no	no
MiniLlapCluster	no	yes
startAndGetMiniLlapCluster	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
MiniZooKeeperCluster	no	no
miniZkCluster	no	no
,	no	no
String	no	no
confDir	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
MiniLlapCluster	no	yes
llapCluster	no	yes
;	no	no

String	no	yes
url	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
url	no	yes
,	no	no
props	no	yes
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
s	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
mdbPath	no	yes
=	no	no
HiveTestEnvSetup	no	yes
.	no	no
HIVE_ROOT	no	yes
+	no	no
;	no	no
BufferedReader	no	yes
br	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
FileReader	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestEnvSetup	no	yes
.	no	no
HIVE_ROOT	no	yes
+	no	no
)	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
command	yes	yes
;	no	no
s	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
s	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
(	no	no
command	yes	yes
=	no	no
br	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
command	yes	yes
.	no	no
endsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
mdbPath	no	yes
=	no	no
HiveTestEnvSetup	no	yes
.	no	no
HIVE_ROOT	no	yes
+	no	no
;	no	no
BufferedReader	no	yes
br	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
FileReader	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestEnvSetup	no	yes
.	no	no
HIVE_ROOT	no	yes
+	no	no
)	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
command	yes	yes
;	no	no
s	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
s	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
(	no	no
command	yes	yes
=	no	no
br	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
command	yes	yes
.	no	no
endsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
PreparedStatement	no	yes
psCommand	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
command	yes	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
command	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
psCommand	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
psCommand	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
br	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
nio	no	yes
.	no	no
file	no	yes
.	no	no
Path	no	yes
tabColStatsCsv	no	yes
=	no	no
FileSystems	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
mdbPath	no	yes
,	no	no
,	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
nio	no	yes
.	no	no
file	no	yes
.	no	no
Path	no	yes
tabParamsCsv	no	yes
=	no	no
FileSystems	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
mdbPath	no	yes
,	no	no
,	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
nio	no	yes
.	no	no
file	no	yes
.	no	no
Path	no	yes
tmpFileLoc1	no	yes
=	no	no
FileSystems	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
tmpBaseDir	no	yes
,	no	no
)	no	no
;	no	no
java	no	yes
.	no	no
nio	no	yes
.	no	no
file	no	yes
.	no	no
Path	no	yes
tmpFileLoc2	no	yes
=	no	no
FileSystems	no	yes
.	no	no
getDefault	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
tmpBaseDir	no	yes
,	no	no
)	no	no
;	no	no
class	no	no
MyComp	no	yes
implements	no	no
Comparator	no	no
<	no	no
String	no	yes
>	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
int	no	no
compare	no	no
(	no	no
String	no	yes
str1	no	yes
,	no	no
String	no	yes
str2	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
str2	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
!=	no	no
str1	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
str2	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
str1	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	no
str1	no	yes
.	no	no
compareTo	no	yes
(	no	no
str2	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
final	no	no
SortedMap	no	yes
<	no	no
String	no	yes
,	no	no
Integer	no	yes
>	no	no
tableNameToID	no	yes
=	no	no
new	no	no
TreeMap	no	yes
<	no	no
String	no	yes
,	no	no
Integer	no	yes
>	no	no
(	no	no
new	no	no
MyComp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
s	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
tblName	yes	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
QTestMetaStoreHandler	no	no
setMetaStoreConfiguration	no	no
(	no	no
HiveConf	no	no
conf	yes	yes
)	no	no
{	no	no
conf	yes	yes
.	no	no
setVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
METASTOREDBTYPE	no	yes
,	no	no
getDbTypeConfString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	yes	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	yes	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
,	no	no
rule	no	yes
.	no	no
getJdbcUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	yes	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	yes	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECTION_DRIVER	no	yes
,	no	no
rule	no	yes
.	no	no
getJdbcDriver	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	yes	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	yes	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECTION_USER_NAME	no	yes
,	no	no
rule	no	yes
.	no	no
getHiveUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	yes	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	yes	yes
.	no	no
ConfVars	no	yes
.	no	no
PWD	no	yes
,	no	no
rule	no	yes
.	no	no
getHivePassword	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	yes	yes
.	no	no
setBoolVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	yes	yes
.	no	no
ConfVars	no	yes
.	no	no
AUTO_CREATE_ALL	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

private	no	no
void	no	no
logClassPath	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
classpath	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
classpathEntries	yes	yes
=	no	no
classpath	no	yes
.	no	no
split	no	yes
(	no	no
File	no	yes
.	no	no
pathSeparator	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
cleanupFromFile	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
File	no	yes
cleanupFile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
cleanupScript	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
cleanupFile	no	yes
.	no	no
isFile	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
cleanupCommands	yes	yes
=	no	no
FileUtils	no	yes
.	no	no
readFileToString	no	yes
(	no	no
cleanupFile	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
failed	no	no
(	no	no
int	no	no
ecode	no	yes
,	no	no
String	no	yes
fname	no	yes
,	no	no
String	no	yes
debugHint	no	yes
)	no	no
{	no	no
String	no	yes
command	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
?	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getLastCommand	no	yes
(	no	no
)	no	no
:	no	no
null	no	no
;	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
ecode	no	yes
+	no	no
(	no	no
command	no	yes
!=	no	no
null	no	no
?	no	no
+	no	no
command	no	yes
:	no	no
)	no	no
+	no	no
+	no	no
fname	no	yes
+	no	no
+	no	no
(	no	no
debugHint	no	yes
!=	no	no
null	no	no
?	no	no
debugHint	no	yes
:	no	no
)	no	no
;	no	no

public	no	no
void	no	no
failedDiff	no	no
(	no	no
int	no	no
ecode	no	yes
,	no	no
String	no	yes
fname	no	yes
,	no	no
String	no	yes
debugHint	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
+	no	no
ecode	no	yes
+	no	no
+	no	no
fname	no	yes
+	no	no
(	no	no
debugHint	no	yes
!=	no	no
null	no	no
?	no	no
(	no	no
+	no	no
debugHint	no	yes
)	no	no
:	no	no
)	no	no
;	no	no

public	no	no
void	no	no
failedQuery	no	no
(	no	no
Throwable	no	no
e	no	yes
,	no	no
int	no	no
ecode	no	yes
,	no	no
String	no	yes
fname	no	yes
,	no	no
String	no	yes
debugHint	no	yes
)	no	no
{	no	no
String	no	yes
command	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
?	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getLastCommand	no	yes
(	no	no
)	no	no
:	no	no
null	no	no
;	no	no
String	no	yes
message	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
ecode	no	yes
,	no	no
command	no	yes
!=	no	no
null	no	no
?	no	no
command	no	yes
:	no	no
,	no	no
fname	no	yes
,	no	no
debugHint	no	yes
!=	no	no
null	no	no
?	no	no
debugHint	no	yes
:	no	no
,	no	no
e	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
util	no	yes
.	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
boolean	no	no
unloadDataset	no	no
(	no	no
String	no	no
table	no	yes
,	no	no
CliDriver	no	no
cliDriver	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
CommandProcessorResponse	no	yes
result	yes	yes
=	no	no
cliDriver	no	yes
.	no	no
processLine	no	yes
(	no	no
+	no	no
table	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
System	no	no
.	no	no
getenv	no	no
(	no	no
QTestUtil	no	no
.	no	no
QTEST_LEAVE_FILES	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
scheduledQueries	no	yes
=	no	no
ScheduledQueryCreationRegistryHook	no	yes
.	no	no
getSchedules	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
name	yes	yes
:	no	no
scheduledQueries	no	yes
)	no	no
{	no	no
ScheduledQueryMaintenanceRequest	no	yes
request	no	yes
=	no	no
new	no	no
ScheduledQueryMaintenanceRequest	no	yes
(	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setType	no	yes
(	no	no
ScheduledQueryMaintenanceRequestType	no	yes
.	no	no
DROP	no	yes
)	no	no
;	no	no
ScheduledQuery	no	yes
schq	no	yes
=	no	no
new	no	no
ScheduledQuery	no	yes
(	no	no
)	no	no
;	no	no
schq	no	yes
.	no	no
setScheduleKey	no	yes
(	no	no
new	no	no
ScheduledQueryKey	no	yes
(	no	no
name	yes	yes
,	no	no
qt	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SCHEDULED_QUERIES_NAMESPACE	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setScheduledQuery	no	yes
(	no	no
schq	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
qt	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Hive	no	yes
db	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
db	no	yes
.	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
scheduledQueryMaintenance	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
db	no	yes
.	no	no
close	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
debugLog	no	no
(	no	no
String	no	no
s	yes	no
)	no	no
{	no	no

splits	yes	yes
[	no	no
0	no	no
]	no	no
=	no	no
new	no	no
JdbcInputSplit	no	yes
(	no	no
FileInputFormat	no	yes
.	no	no
getInputPaths	no	yes
(	no	no
job	no	yes
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
return	no	no
splits	yes	yes
;	no	no
}	no	no
intervals	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
setLeft	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
intervals	no	yes
.	no	no
get	no	yes
(	no	no
intervals	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
.	no	no
setRight	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
splits	yes	yes
=	no	no
new	no	no
InputSplit	no	yes
[	no	no
intervals	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
intervals	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
splits	yes	yes
[	no	no
i	no	yes
]	no	no
=	no	no
new	no	no
JdbcInputSplit	no	yes
(	no	no
partitionColumn	no	yes
,	no	no
intervals	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getLeft	no	yes
(	no	no
)	no	no
,	no	no
intervals	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getRight	no	yes
(	no	no
)	no	no
,	no	no
tablePaths	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
int	no	no
numRecords	no	yes
=	no	no
dbAccessor	no	yes
.	no	no
getTotalNumberOfRecords	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
numRecords	no	yes
<	no	no
numPartitions	no	yes
)	no	no
{	no	no
numPartitions	no	yes
=	no	no
numRecords	no	yes
;	no	no
}	no	no
int	no	no
numRecordsPerSplit	no	yes
=	no	no
numRecords	no	yes
/	no	no
numPartitions	no	yes
;	no	no
int	no	no
numSplitsWithExtraRecords	no	yes
=	no	no
numRecords	no	yes
%	no	no
numPartitions	no	yes
;	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
numRecords	no	yes
)	no	no
;	no	no
splits	yes	yes
=	no	no
new	no	no
InputSplit	no	yes
[	no	no
numPartitions	no	yes
]	no	no
;	no	no

throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hiveColumnTypesList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
numColumns	no	yes
=	no	no
hiveColumnNames	yes	yes
.	no	no
length	no	yes
;	no	no
dbRecordWritable	no	yes
=	no	no
new	no	no
DBRecordWritable	no	yes
(	no	no
numColumns	no	yes
)	no	no
;	no	no
hiveColumnTypes	yes	yes
=	no	no
new	no	no
PrimitiveTypeInfo	no	yes
[	no	no
hiveColumnTypesList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
List	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
fieldInspectors	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
hiveColumnNames	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
hiveColumnNames	yes	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
TypeInfo	no	yes
ti	no	yes
=	no	no
hiveColumnTypesList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ti	no	yes
.	no	no
getCategory	no	no
(	no	no
)	no	no
!=	no	no
Category	no	no
.	no	no
PRIMITIVE	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
hiveColumnTypes	yes	yes
[	no	no
i	no	yes
]	no	no
=	no	no
(	no	no
PrimitiveTypeInfo	no	yes
)	no	no
ti	no	yes
;	no	no
fieldInspectors	no	yes
.	no	no
add	no	yes
(	no	no
PrimitiveObjectInspectorFactory	no	yes
.	no	no
getPrimitiveJavaObjectInspector	no	yes
(	no	no
hiveColumnTypes	yes	yes
[	no	no
i	no	yes
]	no	no
)	no	no
)	no	no
;	no	no
}	no	no
inspector	no	yes
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getStandardStructObjectInspector	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
hiveColumnNames	yes	yes
)	no	no
,	no	no
fieldInspectors	no	yes
)	no	no
;	no	no
row	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
hiveColumnNames	yes	yes
.	no	no
length	no	yes
)	no	no
;	no	no

catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
classesToLoad	no	yes
.	no	no
add	no	yes
(	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
classesToLoad	no	yes
.	no	no
add	no	yes
(	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
classesToLoad	no	yes
.	no	no
add	no	yes
(	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
classesToLoad	no	yes
.	no	no
add	no	yes
(	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
JarUtils	no	yes
.	no	no
addDependencyJars	no	yes
(	no	no
conf	no	yes
,	no	no
classesToLoad	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
resolveMetadata	no	no
(	no	no
Properties	no	no
props	no	yes
)	no	no
throws	no	no
HiveException	no	no
,	no	no
IOException	no	no
{	no	no
DatabaseType	no	yes
dbType	yes	yes
=	no	no
DatabaseType	no	yes
.	no	no
valueOf	no	yes
(	no	no
props	no	yes
.	no	no
getProperty	no	yes
(	no	no
JdbcStorageConfig	no	yes
.	no	no
DATABASE_TYPE	no	yes
.	no	no
getPropertyName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
getColumnNames	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
HiveJdbcDatabaseAccessException	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
ps	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getOrigQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
metadataQuery	yes	yes
=	no	no
getMetaDataQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
query	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getOrigQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
metadataQuery	no	yes
=	no	no
getMetaDataQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
LOGGER	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
metadataQuery	no	yes
)	no	no
;	no	no
conn	no	yes
=	no	no
dbcpDataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
ps	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
metadataQuery	no	yes
)	no	no
;	no	no
rs	no	yes
=	no	no
ps	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
ResultSetMetaData	no	yes
metadata	no	yes
=	no	no
rs	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numColumns	no	yes
=	no	no
metadata	no	yes
.	no	no
getColumnCount	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
columnNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
numColumns	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numColumns	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
columnNames	no	yes
.	no	no
add	no	yes
(	no	no
metadata	no	yes
.	no	no
getColumnName	no	yes
(	no	no
i	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
columnNames	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
getTotalNumberOfRecords	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
HiveJdbcDatabaseAccessException	no	no
{	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
ps	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
sql	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
countQuery	yes	yes
=	no	no
+	no	no
sql	no	yes
+	no	no
;	no	no

initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
sql	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
countQuery	no	yes
=	no	no
+	no	no
sql	no	yes
+	no	no
;	no	no
LOGGER	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
countQuery	no	yes
)	no	no
;	no	no
conn	no	yes
=	no	no
dbcpDataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
ps	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
countQuery	no	yes
)	no	no
;	no	no
rs	no	yes
=	no	no
ps	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
rs	no	yes
.	no	no
getInt	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOGGER	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
countQuery	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveJdbcDatabaseAccessException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveJdbcDatabaseAccessException	no	yes
he	no	yes
)	no	no
{	no	no
throw	no	no
he	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
tableName	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
JDBC_TABLE	no	yes
)	no	no
;	no	no
String	no	yes
sql	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
partitionQuery	no	yes
;	no	no
if	no	no
(	no	no
partitionColumn	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
partitionQuery	no	yes
=	no	no
addBoundaryToQuery	no	yes
(	no	no
tableName	no	yes
,	no	no
sql	no	yes
,	no	no
partitionColumn	no	yes
,	no	no
lowerBound	no	yes
,	no	no
upperBound	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
partitionQuery	no	yes
=	no	no
addLimitAndOffsetToQuery	no	yes
(	no	no
sql	no	yes
,	no	no
limit	no	yes
,	no	no
offset	no	yes
)	no	no
;	no	no
}	no	no
LOGGER	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
partitionQuery	no	yes
)	no	no
;	no	no
conn	no	yes
=	no	no
dbcpDataSource	no	yes
.	no	no
getConnection	no	yes
(	no	no
)	no	no
;	no	no
ps	no	yes
=	no	no
conn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
partitionQuery	no	yes
,	no	no
ResultSet	no	yes
.	no	no
TYPE_FORWARD_ONLY	no	yes
,	no	no
ResultSet	no	yes
.	no	no
CONCUR_READ_ONLY	no	yes
)	no	no
;	no	no
ps	no	yes
.	no	no
setFetchSize	no	yes
(	no	no
getFetchSize	no	yes
(	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
ps	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
new	no	no
JdbcRecordIterator	no	yes
(	no	no
conn	no	yes
,	no	no
ps	no	yes
,	no	no
rs	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
retrieveMin	no	yes
||	no	no
retrieveMax	no	yes
)	no	no
;	no	no
initializeDatabaseConnection	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
sql	no	yes
=	no	no
JdbcStorageConfigManager	no	yes
.	no	no
getOrigQueryToExecute	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
minClause	no	yes
=	no	no
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
partitionColumn	no	yes
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
String	no	yes
maxClause	no	yes
=	no	no
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
partitionColumn	no	yes
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
String	no	yes
countQuery	yes	yes
=	no	no
;	no	no
if	no	no
(	no	no
retrieveMin	no	yes
)	no	no
{	no	no
countQuery	yes	yes
+=	no	no
minClause	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
retrieveMax	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
retrieveMin	no	yes
)	no	no
{	no	no
countQuery	yes	yes
+=	no	no
;	no	no
}	no	no
countQuery	yes	yes
+=	no	no
maxClause	no	yes
;	no	no
}	no	no
countQuery	yes	yes
+=	no	no
+	no	no
sql	no	yes
+	no	no
+	no	no
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
partitionColumn	no	yes
+	no	no
quote	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

try	no	no
{	no	no
FileInputStream	no	yes
input	no	yes
=	no	no
new	no	no
FileInputStream	no	yes
(	no	no
file	no	yes
)	no	no
;	no	no
br	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
input	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
line	no	yes
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
(	no	no
line	no	yes
=	no	no
br	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
||	no	no
line	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
{	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
concat	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
initSqlList	no	yes
=	no	no
getInitSql	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
logZkDiscoveryMessage	no	no
(	no	no
String	no	no
message	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
ZooKeeperHiveClientHelper	no	no
.	no	no
isZkDynamicDiscoveryMode	no	no
(	no	no
sessConfMap	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
isClosed	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SQLException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
emptyResultSet	no	no
||	no	no
(	no	no
maxRows	no	no
>	no	no
0	no	no
&&	no	no
rowsFetched	no	no
>=	no	no
maxRows	no	no
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
(	no	no
statement	no	yes
instanceof	no	no
HiveStatement	no	yes
)	no	no
&&	no	no
(	no	no
operationStatus	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
operationStatus	no	yes
.	no	no
isHasResultSet	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
operationStatus	no	yes
=	no	no
(	no	no
(	no	no
HiveStatement	no	yes
)	no	no
statement	no	yes
)	no	no
.	no	no
waitForOperationToComplete	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
TFetchOrientation	no	yes
orientation	no	yes
=	no	no
TFetchOrientation	no	yes
.	no	no
FETCH_NEXT	no	yes
;	no	no
if	no	no
(	no	no
fetchFirst	no	yes
)	no	no
{	no	no
orientation	no	yes
=	no	no
TFetchOrientation	no	yes
.	no	no
FETCH_FIRST	no	yes
;	no	no
fetchedRows	no	yes
=	no	no
null	no	no
;	no	no
fetchedRowsItr	no	yes
=	no	no
null	no	no
;	no	no
fetchFirst	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
fetchedRows	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
fetchedRowsItr	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
TFetchResultsReq	no	yes
fetchReq	yes	yes
=	no	no
new	no	no
TFetchResultsReq	no	yes
(	no	no
stmtHandle	no	yes
,	no	no
orientation	no	yes
,	no	no
fetchSize	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
runAsyncOnServer	no	no
(	no	no
String	no	yes
sql	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
checkConnection	no	yes
(	no	no
)	no	no
;	no	no
reInitState	no	yes
(	no	no
)	no	no
;	no	no
TExecuteStatementReq	no	yes
execReq	no	yes
=	no	no
new	no	no
TExecuteStatementReq	no	yes
(	no	no
sessHandle	no	yes
,	no	no
sql	no	yes
)	no	no
;	no	no
execReq	no	yes
.	no	no
setRunAsync	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
execReq	no	yes
.	no	no
setConfOverlay	no	yes
(	no	no
sessConf	no	yes
)	no	no
;	no	no
execReq	no	yes
.	no	no
setQueryTimeout	no	yes
(	no	no
queryTimeout	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
TExecuteStatementResp	no	yes
execResp	no	yes
=	no	no
client	no	yes
.	no	no
ExecuteStatement	no	yes
(	no	no
execReq	no	yes
)	no	no
;	no	no
Utils	no	yes
.	no	no
verifySuccessWithInfo	no	yes
(	no	no
execResp	no	yes
.	no	no
getStatus	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
infoMessages	no	yes
=	no	no
execResp	no	yes
.	no	no
getStatus	no	yes
(	no	no
)	no	no
.	no	no
getInfoMessages	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
infoMessages	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
message	yes	no
:	no	no
infoMessages	no	yes
)	no	no
{	no	no

static	no	no
void	no	no
configureConnParamsFromZooKeeper	no	no
(	no	no
JdbcConnectionParams	no	no
connParams	no	yes
)	no	no
throws	no	no
ZooKeeperHiveClientException	no	no
,	no	no
JdbcUriParseException	no	no
{	no	no
ZooKeeperHiveClientHelper	no	yes
.	no	no
configureConnParams	no	yes
(	no	no
connParams	no	yes
)	no	no
;	no	no
String	no	yes
authorityStr	yes	yes
=	no	no
connParams	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
connParams	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

static	no	no
boolean	no	no
updateConnParamsFromZooKeeper	no	no
(	no	no
JdbcConnectionParams	no	no
connParams	yes	yes
)	no	no
{	no	no
connParams	yes	yes
.	no	no
getRejectedHostZnodePaths	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
connParams	yes	yes
.	no	no
getCurrentHostZnodePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
oldServerHost	no	yes
=	no	no
connParams	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
oldServerPort	no	yes
=	no	no
connParams	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ZooKeeperHiveClientHelper	no	yes
.	no	no
configureConnParams	no	yes
(	no	no
connParams	yes	yes
)	no	no
;	no	no
connParams	yes	yes
.	no	no
setJdbcUriString	no	yes
(	no	no
connParams	yes	yes
.	no	no
getJdbcUriString	no	yes
(	no	no
)	no	no
.	no	no
replace	no	yes
(	no	no
oldServerHost	no	yes
+	no	no
+	no	no
oldServerPort	no	yes
,	no	no
connParams	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
connParams	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

private	no	no
static	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
getServerHosts	no	no
(	no	no
final	no	no
JdbcConnectionParams	no	no
connParams	no	yes
,	no	no
final	no	no
CuratorFramework	no	no
zooKeeperClient	no	yes
)	no	no
throws	no	no
ZooKeeperHiveClientException	no	no
{	no	no
final	no	no
String	no	yes
zookeeperNamespace	no	yes
=	no	no
getZooKeeperNamespace	no	yes
(	no	no
connParams	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
zkPath	yes	yes
=	no	no
ZKPaths	no	yes
.	no	no
makePath	no	yes
(	no	no
null	no	no
,	no	no
zookeeperNamespace	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
serverHosts	yes	yes
=	no	no
zooKeeperClient	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
zkPath	yes	yes
)	no	no
;	no	no

registryConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_QUORUM	no	yes
.	no	no
varname	no	yes
,	no	no
connParams	no	yes
.	no	no
getZooKeeperEnsemble	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
registryConf	no	yes
.	no	no
set	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ACTIVE_PASSIVE_HA_REGISTRY_NAMESPACE	no	yes
.	no	no
varname	no	yes
,	no	no
getZooKeeperNamespace	no	yes
(	no	no
connParams	no	yes
)	no	no
)	no	no
;	no	no
HS2ActivePassiveHARegistry	no	yes
haRegistryClient	no	yes
=	no	no
HS2ActivePassiveHARegistryClient	no	yes
.	no	no
getClient	no	yes
(	no	no
registryConf	no	yes
)	no	no
;	no	no
boolean	no	no
foundLeader	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
maxRetriesConf	no	yes
=	no	no
connParams	no	yes
.	no	no
getSessionVars	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
JdbcConnectionParams	no	yes
.	no	no
RETRIES	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
maxRetries	no	yes
=	no	no
StringUtils	no	yes
.	no	no
isEmpty	no	yes
(	no	no
maxRetriesConf	no	yes
)	no	no
?	no	no
5	no	no
:	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
maxRetriesConf	no	yes
)	no	no
;	no	no
int	no	no
retries	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
sleepMs	no	yes
=	no	no
1000	no	no
;	no	no
while	no	no
(	no	no
!	no	no
foundLeader	no	yes
&&	no	no
retries	no	yes
<	no	no
maxRetries	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
HiveServer2Instance	no	no
hiveServer2Instance	yes	yes
:	no	no
haRegistryClient	no	yes
.	no	no
getAll	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hiveServer2Instance	yes	yes
.	no	no
isLeader	no	no
(	no	no
)	no	no
)	no	no
{	no	no
foundLeader	no	yes
=	no	no
true	no	no
;	no	no
connParams	no	yes
.	no	no
setHost	no	yes
(	no	no
hiveServer2Instance	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connParams	no	yes
.	no	no
setPort	no	yes
(	no	no
hiveServer2Instance	yes	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
mode	yes	yes
=	no	no
hiveServer2Instance	yes	yes
.	no	no
getTransportMode	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
?	no	no
+	no	no
hiveServer2Instance	yes	yes
.	no	no
getHttpEndpoint	no	yes
(	no	no
)	no	no
:	no	no
hiveServer2Instance	yes	yes
.	no	no
getTransportMode	no	yes
(	no	no
)	no	no
;	no	no

boolean	no	no
foundLeader	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
maxRetriesConf	no	yes
=	no	no
connParams	no	yes
.	no	no
getSessionVars	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
JdbcConnectionParams	no	yes
.	no	no
RETRIES	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
maxRetries	no	yes
=	no	no
StringUtils	no	yes
.	no	no
isEmpty	no	yes
(	no	no
maxRetriesConf	no	yes
)	no	no
?	no	no
5	no	no
:	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
maxRetriesConf	no	yes
)	no	no
;	no	no
int	no	no
retries	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
sleepMs	no	yes
=	no	no
1000	no	no
;	no	no
while	no	no
(	no	no
!	no	no
foundLeader	no	yes
&&	no	no
retries	no	yes
<	no	no
maxRetries	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
HiveServer2Instance	no	no
hiveServer2Instance	yes	yes
:	no	no
haRegistryClient	no	no
.	no	no
getAll	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hiveServer2Instance	yes	yes
.	no	no
isLeader	no	no
(	no	no
)	no	no
)	no	no
{	no	no
foundLeader	no	yes
=	no	no
true	no	no
;	no	no
connParams	no	yes
.	no	no
setHost	no	yes
(	no	no
hiveServer2Instance	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
connParams	no	yes
.	no	no
setPort	no	yes
(	no	no
hiveServer2Instance	yes	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
mode	no	yes
=	no	no
hiveServer2Instance	yes	yes
.	no	no
getTransportMode	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
?	no	no
+	no	no
hiveServer2Instance	yes	yes
.	no	no
getHttpEndpoint	no	yes
(	no	no
)	no	no
:	no	no
hiveServer2Instance	yes	yes
.	no	no
getTransportMode	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
hiveServer2Instance	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
hiveServer2Instance	yes	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
,	no	no
hiveServer2Instance	yes	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
,	no	no
mode	no	yes
)	no	no
;	no	no
String	no	yes
serverConfStr	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
';'	no	no
)	no	no
.	no	no
withKeyValueSeparator	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
hiveServer2Instance	yes	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

synchronized	no	no
void	no	no
resumeTransaction	no	no
(	no	no
long	no	no
producerId	yes	yes
,	no	no
short	no	no
epoch	yes	yes
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
producerId	yes	yes
>=	no	no
0	no	no
&&	no	no
epoch	yes	yes
>=	no	no
0	no	no
,	no	no
,	no	no
producerId	yes	yes
,	no	no
epoch	yes	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>	no	no
computeSplits	no	no
(	no	no
Configuration	no	no
configuration	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
final	no	no
ExecutorService	no	yes
execService	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadExecutor	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
KafkaConsumer	no	no
consumer	no	yes
=	no	no
new	no	no
KafkaConsumer	no	no
(	no	no
KafkaUtils	no	no
.	no	no
consumerProperties	no	no
(	no	no
configuration	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
topic	no	yes
=	no	no
configuration	no	yes
.	no	no
get	no	yes
(	no	no
KafkaTableProperties	no	yes
.	no	no
HIVE_KAFKA_TOPIC	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
long	no	no
timeoutMs	no	yes
=	no	no
configuration	no	yes
.	no	no
getLong	no	yes
(	no	no
KafkaTableProperties	no	yes
.	no	no
KAFKA_FETCH_METADATA_TIMEOUT	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
final	no	no
int	no	no
maxTries	no	yes
=	no	no
configuration	no	yes
.	no	no
getInt	no	yes
(	no	no
KafkaTableProperties	no	yes
.	no	no
MAX_RETRIES	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
configuration	no	yes
)	no	no
;	no	no
Path	no	yes
[	no	no
]	no	no
tablePaths	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
FileInputFormat	no	yes
.	no	no
getInputPaths	no	yes
(	no	no
jobConf	no	yes
)	no	no
;	no	no
final	no	no
Future	no	yes
<	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>>	no	no
futureFullHouse	no	yes
;	no	no
futureFullHouse	no	yes
=	no	no
execService	no	yes
.	no	no
submit	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
buildFullScanFromKafka	no	yes
(	no	no
topic	no	yes
,	no	no
consumer	no	yes
,	no	no
tablePaths	no	yes
,	no	no
maxTries	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>	no	no
fullHouse	no	yes
;	no	no
try	no	no
{	no	no
fullHouse	no	yes
=	no	no
futureFullHouse	no	yes
.	no	no
get	no	yes
(	no	no
timeoutMs	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
|	no	no
ExecutionException	no	no
e	yes	no
)	no	no
{	no	no
futureFullHouse	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

final	no	no
Future	no	yes
<	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>>	no	no
futureFullHouse	no	yes
;	no	no
futureFullHouse	no	yes
=	no	no
execService	no	yes
.	no	no
submit	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
buildFullScanFromKafka	no	yes
(	no	no
topic	no	yes
,	no	no
consumer	no	yes
,	no	no
tablePaths	no	yes
,	no	no
maxTries	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>	no	no
fullHouse	no	yes
;	no	no
try	no	no
{	no	no
fullHouse	no	yes
=	no	no
futureFullHouse	no	yes
.	no	no
get	no	yes
(	no	no
timeoutMs	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
|	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
futureFullHouse	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
final	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
<	no	no
TopicPartition	no	yes
,	no	no
KafkaInputSplit	no	yes
>	no	no
fullHouseMapBuilder	no	yes
=	no	no
new	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
fullHouse	no	yes
.	no	no
forEach	no	yes
(	no	no
input	no	yes
->	no	no
fullHouseMapBuilder	no	yes
.	no	no
put	no	yes
(	no	no
new	no	no
TopicPartition	no	yes
(	no	no
input	no	yes
.	no	no
getTopic	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
input	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
KafkaScanTrimmer	no	yes
kafkaScanTrimmer	no	yes
=	no	no
new	no	no
KafkaScanTrimmer	no	yes
(	no	no
fullHouseMapBuilder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
consumer	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
filterExprSerialized	no	yes
=	no	no
configuration	no	yes
.	no	no
get	no	yes
(	no	no
TableScanDesc	no	yes
.	no	no
FILTER_EXPR_CONF_STR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filterExprSerialized	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
filterExprSerialized	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ExprNodeGenericFuncDesc	no	yes
filterExpr	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializeExpression	no	yes
(	no	no
filterExprSerialized	no	yes
)	no	no
;	no	no

futureFullHouse	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
final	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
<	no	no
TopicPartition	no	yes
,	no	no
KafkaInputSplit	no	yes
>	no	no
fullHouseMapBuilder	no	yes
=	no	no
new	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
fullHouse	no	yes
.	no	no
forEach	no	yes
(	no	no
input	no	yes
->	no	no
fullHouseMapBuilder	no	yes
.	no	no
put	no	yes
(	no	no
new	no	no
TopicPartition	no	yes
(	no	no
input	no	yes
.	no	no
getTopic	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
input	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
KafkaScanTrimmer	no	yes
kafkaScanTrimmer	no	yes
=	no	no
new	no	no
KafkaScanTrimmer	no	yes
(	no	no
fullHouseMapBuilder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
consumer	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
filterExprSerialized	no	yes
=	no	no
configuration	no	yes
.	no	no
get	no	yes
(	no	no
TableScanDesc	no	yes
.	no	no
FILTER_EXPR_CONF_STR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filterExprSerialized	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
filterExprSerialized	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ExprNodeGenericFuncDesc	no	yes
filterExpr	no	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializeExpression	no	yes
(	no	no
filterExprSerialized	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
filterExpr	no	yes
.	no	no
getExprString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Callable	no	yes
<	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>>	no	no
trimmerWorker	no	yes
=	no	no
(	no	no
)	no	no
->	no	no
kafkaScanTrimmer	no	yes
.	no	no
computeOptimizedScan	no	yes
(	no	no
filterExpr	no	yes
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
::	no	no
getValue	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
List	no	yes
<	no	no
KafkaInputSplit	no	yes
>>	no	no
futureTinyHouse	no	yes
=	no	no
execService	no	yes
.	no	no
submit	no	yes
(	no	no
trimmerWorker	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
return	no	no
futureTinyHouse	no	yes
.	no	no
get	no	yes
(	no	no
timeoutMs	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
split	no	yes
->	no	no
split	no	yes
.	no	no
getStartOffset	no	yes
(	no	no
)	no	no
<	no	no
split	no	yes
.	no	no
getEndOffset	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ExecutionException	no	no
|	no	no
TimeoutException	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
void	no	no
initConsumer	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
consumer	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Properties	no	yes
properties	no	yes
=	no	no
KafkaUtils	no	yes
.	no	no
consumerProperties	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
String	no	yes
brokerString	yes	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
CommonClientConfigs	no	yes
.	no	no
BOOTSTRAP_SERVERS_CONFIG	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
brokerString	yes	yes
,	no	no
)	no	no
;	no	no

private	no	no
synchronized	no	no
void	no	no
initialize	no	no
(	no	no
KafkaInputSplit	no	no
inputSplit	no	yes
,	no	no
Configuration	no	no
jobConf	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
started	no	no
)	no	no
{	no	no
this	no	no
.	no	no
config	no	yes
=	no	no
jobConf	no	yes
;	no	no
long	no	no
startOffset	no	yes
=	no	no
inputSplit	no	yes
.	no	no
getStartOffset	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
endOffset	no	yes
=	no	no
inputSplit	no	yes
.	no	no
getEndOffset	no	yes
(	no	no
)	no	no
;	no	no
TopicPartition	no	yes
topicPartition	no	yes
=	no	no
new	no	no
TopicPartition	no	yes
(	no	no
inputSplit	no	yes
.	no	no
getTopic	no	yes
(	no	no
)	no	no
,	no	no
inputSplit	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
startOffset	no	yes
>=	no	no
0	no	no
&&	no	no
startOffset	no	yes
<=	no	no
endOffset	no	yes
,	no	no
,	no	no
startOffset	no	yes
,	no	no
endOffset	no	yes
)	no	no
;	no	no
totalNumberRecords	no	yes
+=	no	no
endOffset	no	yes
-	no	no
startOffset	no	yes
;	no	no
initConsumer	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
pollTimeout	yes	yes
=	no	no
config	no	yes
.	no	no
getLong	no	yes
(	no	no
KafkaTableProperties	no	yes
.	no	no
KAFKA_POLL_TIMEOUT	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
+	no	no
delegateSerDe	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
delegateDeserializerOI	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
delegateSerDe	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
columnNames	no	yes
.	no	no
addAll	no	yes
(	no	no
delegateDeserializerOI	no	yes
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
StructField	no	yes
::	no	no
getFieldName	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
columnNames	no	yes
.	no	no
addAll	no	yes
(	no	no
MetadataColumn	no	yes
.	no	no
KAFKA_METADATA_COLUMN_NAMES	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
inspectors	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
columnNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
inspectors	no	yes
.	no	no
addAll	no	yes
(	no	no
delegateDeserializerOI	no	yes
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
StructField	no	yes
::	no	no
getFieldObjectInspector	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
inspectors	no	yes
.	no	no
addAll	no	yes
(	no	no
MetadataColumn	no	yes
.	no	no
KAFKA_METADATA_INSPECTORS	no	yes
)	no	no
;	no	no
objectInspector	no	yes
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getStandardStructObjectInspector	no	yes
(	no	no
columnNames	no	yes
,	no	no
inspectors	no	yes
)	no	no
;	no	no
metadataStartIndex	no	yes
=	no	no
columnNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
MetadataColumn	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
;	no	no
if	no	no
(	no	no
delegateSerDe	no	yes
.	no	no
getSerializedClass	no	no
(	no	no
)	no	no
==	no	no
Text	no	no
.	no	no
class	no	no
)	no	no
{	no	no
bytesConverter	no	yes
=	no	no
new	no	no
TextBytesConverter	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
delegateSerDe	no	yes
.	no	no
getSerializedClass	no	no
(	no	no
)	no	no
==	no	no
AvroGenericRecordWritable	no	no
.	no	no
class	no	no
)	no	no
{	no	no
String	no	yes
schemaFromProperty	yes	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
AvroSerdeUtils	no	yes
.	no	no
AvroTableProperties	no	yes
.	no	no
SCHEMA_LITERAL	no	yes
.	no	no
getPropName	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
!	no	no
schemaFromProperty	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
Schema	no	yes
schema	no	yes
=	no	no
AvroSerdeUtils	no	yes
.	no	no
getSchemaFor	no	yes
(	no	no
schemaFromProperty	yes	yes
)	no	no
;	no	no

props	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
props	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
String	no	yes
principalHost	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
configuration	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_KERBEROS_PRINCIPAL	no	yes
)	no	no
;	no	no
String	no	yes
keyTab	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
configuration	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_KERBEROS_KEYTAB	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
principalHost	no	yes
==	no	no
null	no	no
||	no	no
principalHost	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
keyTab	no	yes
==	no	no
null	no	no
||	no	no
keyTab	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
keyTab	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
configuration	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_FS_KERBEROS_KEYTAB_FILE	no	yes
)	no	no
;	no	no
principalHost	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
configuration	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_FS_KERBEROS_PRINCIPAL	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
principal	no	yes
;	no	no
try	no	no
{	no	no
principal	no	yes
=	no	no
SecurityUtil	no	yes
.	no	no
getServerPrincipal	no	yes
(	no	no
principalHost	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
log	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
jaasConf	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
JAAS_TEMPLATE	no	yes
,	no	no
keyTab	no	yes
,	no	no
principal	no	yes
)	no	no
;	no	no
props	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
jaasConf	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
handleKafkaException	no	no
(	no	no
KafkaException	no	no
kafkaException	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
kafkaException	yes	no
instanceof	no	no
TimeoutException	no	no
)	no	no
{	no	no

private	no	no
void	no	no
logHints	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	no
instanceof	no	no
TimeoutException	no	no
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
writerIdTopicId	no	yes
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
producer	yes	yes
.	no	no
close	no	yes
(	no	no
DURATION_0	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
writerIdTopicId	no	yes
)	no	no
;	no	no
producer	yes	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
formattedMsg	no	yes
=	no	no
;	no	no
String	no	yes
flushedOffsetMsg	no	yes
=	no	no
offsets	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
topicPartitionLongEntry	no	yes
->	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
formattedMsg	no	yes
,	no	no
topicPartitionLongEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
topic	yes	yes
(	no	no
)	no	no
,	no	no
topicPartitionLongEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
partition	no	yes
(	no	no
)	no	no
,	no	no
topicPartitionLongEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
writerIdTopicId	no	yes
,	no	no
flushedOffsetMsg	no	yes
)	no	no
;	no	no
checkExceptions	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
optimisticCommit	no	no
)	no	no
{	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
persistTxState	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
checkExceptions	no	yes
(	no	no
)	no	no
;	no	no

try	no	no
{	no	no
if	no	no
(	no	no
Thread	no	no
.	no	no
interrupted	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
readerEvents	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
io	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
ReaderEvent	no	yes
event	no	yes
=	no	no
getReaderEvent	no	yes
(	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
event	no	yes
.	no	no
getEventType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
ERROR	no	no
:	no	no
throw	no	no
new	no	no
IOException	no	no
(	no	no
+	no	no
event	no	yes
.	no	no
getMessage	no	no
(	no	no
)	no	no
,	no	no
io	no	yes
)	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
IOException	no	no
(	no	no
+	no	no
event	no	yes
.	no	no
getEventType	no	no
(	no	no
)	no	no
+	no	no
,	no	no
io	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
io	no	yes
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
err	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
retrySubmission	no	no
(	no	no
)	no	no
{	no	no
attemptNum	yes	yes
++	no	no
;	no	no
long	no	no
retryDelay	yes	yes
=	no	no
determineRetryDelay	no	yes
(	no	no
)	no	no
;	no	no

externalRpcEndpoint	no	yes
=	no	no
getExternalRpcEndpoint	no	yes
(	no	no
)	no	no
;	no	no
daemonZkRecord	no	yes
.	no	no
addExternalEndpoint	no	yes
(	no	no
externalRpcEndpoint	no	yes
)	no	no
;	no	no
}	no	no
populateConfigValues	no	yes
(	no	no
this	no	no
.	no	no
conf	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
capacityValues	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
2	no	no
)	no	no
;	no	no
capacityValues	no	yes
.	no	no
put	no	yes
(	no	no
LlapRegistryService	no	yes
.	no	no
LLAP_DAEMON_NUM_ENABLED_EXECUTORS	no	yes
,	no	no
HiveConf	no	yes
.	no	no
getVarWithoutType	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_NUM_EXECUTORS	no	yes
)	no	no
)	no	no
;	no	no
capacityValues	no	yes
.	no	no
put	no	yes
(	no	no
LlapRegistryService	no	yes
.	no	no
LLAP_DAEMON_TASK_SCHEDULER_ENABLED_WAIT_QUEUE_SIZE	no	yes
,	no	no
HiveConf	no	yes
.	no	no
getVarWithoutType	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_TASK_SCHEDULER_WAIT_QUEUE_SIZE	no	yes
)	no	no
)	no	no
;	no	no
populateConfigValues	no	yes
(	no	no
capacityValues	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
uniqueId	no	yes
=	no	no
UNIQUE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
znodeCreationTimeout	no	yes
=	no	no
120	no	no
;	no	no
initializeWithoutRegisteringInternal	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
slotZnode	no	yes
=	no	no
new	no	no
SlotZnode	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
workersPath	no	yes
,	no	no
SLOT_PREFIX	no	yes
,	no	no
WORKER_PREFIX	no	yes
,	no	no
uniqueId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
slotZnode	no	yes
.	no	no
start	no	no
(	no	no
znodeCreationTimeout	no	yes
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
znodeCreationTimeout	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no

String	no	yes
uniqueId	no	yes
=	no	no
UNIQUE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
znodeCreationTimeout	no	yes
=	no	no
120	no	no
;	no	no
initializeWithoutRegisteringInternal	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
slotZnode	no	yes
=	no	no
new	no	no
SlotZnode	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
workersPath	no	yes
,	no	no
SLOT_PREFIX	no	yes
,	no	no
WORKER_PREFIX	no	yes
,	no	no
uniqueId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
slotZnode	no	yes
.	no	no
start	no	no
(	no	no
znodeCreationTimeout	no	yes
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
znodeCreationTimeout	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
CloseableUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
slotZnode	no	yes
)	no	no
;	no	no
super	no	no
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
(	no	no
e	no	yes
instanceof	no	no
IOException	no	yes
)	no	no
?	no	no
(	no	no
IOException	no	yes
)	no	no
e	no	yes
:	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
registerServiceRecord	no	yes
(	no	no
daemonZkRecord	no	yes
,	no	no
uniqueId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LlapUtil	no	no
.	no	no
isCloudDeployment	no	no
(	no	no
conf	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
rpcEndpoint	yes	yes
,	no	no
externalRpcEndpoint	no	yes
,	no	no
getShuffleEndpoint	no	yes
(	no	no
)	no	no
,	no	no
getServicesEndpoint	no	yes
(	no	no
)	no	no
,	no	no
getMngEndpoint	no	yes
(	no	no
)	no	no
,	no	no
getRegistrationZnodePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
windowEnd	yes	yes
<	no	no
windowStart	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
windowStart	yes	yes
+	no	no
+	no	no
windowEnd	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
lockWindowEnd	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
lockWindowEnd	no	yes
=	no	no
new	no	no
DistributedAtomicLong	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
String	no	yes
.	no	no
join	no	yes
(	no	no
,	no	no
workersPath	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
workersPath	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
'/'	no	no
)	no	no
)	no	no
,	no	no
CONFIG_CHANGE_PATH	no	yes
,	no	no
CONFIG_CHANGE_NODE	no	yes
)	no	no
,	no	no
(	no	no
i	no	yes
,	no	no
j	no	yes
,	no	no
sleeper	no	yes
)	no	no
->	no	no
false	no	no
)	no	no
;	no	no
lockWindowEnd	no	yes
.	no	no
initialize	no	yes
(	no	no
0L	no	no
)	no	no
;	no	no
}	no	no
AtomicValue	no	yes
<	no	no
Long	no	yes
>	no	no
current	yes	yes
=	no	no
lockWindowEnd	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
current	yes	yes
.	no	no
succeeded	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
new	no	no
ConfigChangeLockResult	no	yes
(	no	no
false	no	no
,	no	no
-	no	no
1L	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
current	yes	yes
.	no	no
postValue	no	yes
(	no	no
)	no	no
>	no	no
windowStart	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
windowStart	yes	yes
,	no	no
windowEnd	yes	yes
,	no	no
current	yes	yes
.	no	no
postValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
ConfigChangeLockResult	no	yes
(	no	no
false	no	no
,	no	no
current	yes	yes
.	no	no
postValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
current	yes	yes
=	no	no
lockWindowEnd	no	yes
.	no	no
compareAndSet	no	yes
(	no	no
current	yes	yes
.	no	no
postValue	no	yes
(	no	no
)	no	no
,	no	no
windowEnd	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
current	yes	yes
.	no	no
succeeded	no	no
(	no	no
)	no	no
)	no	no
{	no	no

int	no	no
approxWorkerCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
child	no	yes
:	no	no
allChildNodes	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
child	no	yes
.	no	no
startsWith	no	no
(	no	no
prefix	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
child	no	yes
.	no	no
startsWith	no	no
(	no	no
workerPrefix	no	no
)	no	no
)	no	no
{	no	no
++	no	no
approxWorkerCount	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
slots	no	yes
.	no	no
add	no	yes
(	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
child	no	yes
.	no	no
substring	no	yes
(	no	no
prefix	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Iterator	no	yes
<	no	no
Integer	no	yes
>	no	no
slotIter	no	yes
=	no	no
slots	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
slotToTake	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
slotIter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
int	no	no
nextTaken	no	yes
=	no	no
slotIter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
slotToTake	no	yes
<	no	no
nextTaken	no	yes
)	no	no
break	no	no
;	no	no
slotToTake	no	yes
=	no	no
nextTaken	no	yes
+	no	no
1	no	no
;	no	no
}	no	no
if	no	no
(	no	no
slotToTake	no	yes
!=	no	no
currentSlot	yes	yes
||	no	no
!	no	no
shouldFallBackOnCollision	no	yes
(	no	no
approxWorkerCount	no	yes
)	no	no
)	no	no
break	no	no
;	no	no
++	no	no
fallbackCount	no	yes
;	no	no

private	no	no
void	no	no
startCreateCurrentNode	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
String	no	yes
createPath	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
createPath	yes	yes
=	no	no
getSlotPath	no	yes
(	no	no
currentSlot	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
processWatchedEvent	no	no
(	no	no
WatchedEvent	no	no
event	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
event	yes	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
!=	no	no
EventType	no	yes
.	no	no
NodeDeleted	no	yes
)	no	no
return	no	no
;	no	no
String	no	yes
localPath	no	yes
=	no	no
nodePath	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
localPath	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
if	no	no
(	no	no
!	no	no
localPath	no	yes
.	no	no
equals	no	no
(	no	no
event	yes	yes
.	no	no
getPath	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
processCreateResult	no	no
(	no	no
CuratorFramework	no	no
client	no	no
,	no	no
CuratorEvent	no	no
event	yes	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
boolean	no	no
doesExist	no	yes
=	no	no
event	yes	yes
.	no	no
getResultCode	no	yes
(	no	no
)	no	no
==	no	no
KeeperException	no	yes
.	no	no
Code	no	yes
.	no	no
NODEEXISTS	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
doesExist	no	yes
&&	no	no
event	yes	yes
.	no	no
getResultCode	no	yes
(	no	no
)	no	no
!=	no	no
KeeperException	no	yes
.	no	no
Code	no	yes
.	no	no
OK	no	no
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Token	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
createToken	no	no
(	no	no
String	no	no
appId	no	yes
,	no	no
String	no	no
user	no	yes
,	no	no
boolean	no	no
isSignatureRequired	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
try	no	no
{	no	no
Token	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
token	yes	yes
=	no	no
secretManager	no	yes
.	no	no
createLlapToken	no	yes
(	no	no
appId	no	yes
,	no	no
user	no	yes
,	no	no
isSignatureRequired	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
srv	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
UnsupportedOperationException	no	yes
(	no	no
+	no	no
srv	no	yes
)	no	no
;	no	no
}	no	no
srv	no	yes
=	no	no
new	no	no
ServiceRecord	no	yes
(	no	no
)	no	no
;	no	no
Endpoint	no	yes
rpcEndpoint	yes	yes
=	no	no
RegistryTypeUtils	no	yes
.	no	no
ipcEndpoint	no	yes
(	no	no
IPC_TEZCLIENT	no	yes
,	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hostname	no	yes
,	no	no
amPort	no	yes
)	no	no
)	no	no
;	no	no
srv	no	yes
.	no	no
addInternalEndpoint	no	yes
(	no	no
rpcEndpoint	yes	yes
)	no	no
;	no	no
Endpoint	no	yes
pluginEndpoint	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
pluginPort	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
pluginEndpoint	yes	yes
=	no	no
RegistryTypeUtils	no	yes
.	no	no
ipcEndpoint	no	yes
(	no	no
IPC_PLUGIN	no	yes
,	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hostname	no	yes
,	no	no
pluginPort	no	yes
)	no	no
)	no	no
;	no	no
srv	no	yes
.	no	no
addInternalEndpoint	no	yes
(	no	no
pluginEndpoint	yes	yes
)	no	no
;	no	no
}	no	no
srv	no	yes
.	no	no
set	no	yes
(	no	no
AM_SESSION_ID	no	yes
,	no	no
sessionId	yes	yes
)	no	no
;	no	no
boolean	no	no
hasToken	yes	yes
=	no	no
serializedToken	no	yes
!=	no	no
null	no	no
;	no	no
srv	no	yes
.	no	no
set	no	yes
(	no	no
AM_PLUGIN_TOKEN	no	yes
,	no	no
hasToken	yes	yes
?	no	no
serializedToken	no	yes
:	no	no
)	no	no
;	no	no
srv	no	yes
.	no	no
set	no	yes
(	no	no
AM_PLUGIN_JOBID	no	yes
,	no	no
jobIdForToken	no	yes
!=	no	no
null	no	no
?	no	no
jobIdForToken	no	yes
:	no	no
)	no	no
;	no	no
srv	no	yes
.	no	no
set	no	yes
(	no	no
AM_GUARANTEED_COUNT	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
guaranteedCount	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
uniqueId	no	yes
=	no	no
registerServiceRecord	no	yes
(	no	no
srv	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
znode	no	yes
=	no	no
new	no	no
PersistentNode	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
CreateMode	no	yes
.	no	no
EPHEMERAL_SEQUENTIAL	no	yes
,	no	no
false	no	no
,	no	no
workersPath	no	yes
+	no	no
+	no	no
workerNodePrefix	no	yes
,	no	no
encoder	no	yes
.	no	no
toBytes	no	yes
(	no	no
srv	no	yes
)	no	no
)	no	no
;	no	no
znode	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
znodeCreationTimeout	no	yes
=	no	no
120	no	no
;	no	no
if	no	no
(	no	no
!	no	no
znode	no	yes
.	no	no
waitForInitialCreate	no	no
(	no	no
znodeCreationTimeout	no	yes
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
znodeCreationTimeout	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
znodePath	no	yes
=	no	no
znode	no	yes
.	no	no
getActualPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
doCheckAcls	no	no
)	no	no
{	no	no
try	no	no
{	no	no
checkAndSetAcls	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
ex	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
disableMessage	no	yes
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
zooKeeperClient	no	yes
.	no	no
checkExists	no	no
(	no	no
)	no	no
.	no	no
forPath	no	no
(	no	no
znodePath	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no

protected	no	no
final	no	no
void	no	no
populateCache	no	no
(	no	no
PathChildrenCache	no	no
instancesCache	no	no
,	no	no
boolean	no	no
doInvokeListeners	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ChildData	no	no
childData	yes	yes
:	no	no
instancesCache	no	no
.	no	no
getCurrentData	no	no
(	no	no
)	no	no
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
data	no	yes
=	no	no
getWorkerData	no	yes
(	no	no
childData	yes	yes
,	no	no
workerNodePrefix	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
data	no	yes
==	no	no
null	no	no
)	no	no
continue	no	no
;	no	no
String	no	yes
nodeName	no	yes
=	no	no
extractNodeName	no	yes
(	no	no
childData	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isLlapWorker	no	yes
(	no	no
nodeName	no	yes
,	no	no
workerNodePrefix	no	yes
)	no	no
)	no	no
continue	no	no
;	no	no
int	no	no
ephSeqVersion	no	yes
=	no	no
extractSeqNum	no	yes
(	no	no
nodeName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ServiceRecord	no	yes
srv	no	yes
=	no	no
encoder	no	yes
.	no	no
fromBytes	no	yes
(	no	no
childData	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
data	no	yes
)	no	no
;	no	no
InstanceType	no	yes
instance	no	yes
=	no	no
createServiceInstance	no	yes
(	no	no
srv	no	yes
)	no	no
;	no	no
addToCache	no	yes
(	no	no
childData	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
doInvokeListeners	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ServiceInstanceStateChangeListener	no	no
<	no	no
InstanceType	no	yes
>	no	no
listener	no	yes
:	no	no
stateChangeListeners	no	no
)	no	no
{	no	no
listener	no	yes
.	no	no
onCreate	no	yes
(	no	no
instance	no	yes
,	no	no
ephSeqVersion	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	no
)	no	no
{	no	no

protected	no	no
final	no	no
Set	no	yes
<	no	no
InstanceType	no	yes
>	no	no
getByHostInternal	no	no
(	no	no
String	no	no
host	yes	yes
)	no	no
{	no	no
Set	no	yes
<	no	no
InstanceType	no	yes
>	no	no
byHost	yes	yes
=	no	no
nodeToInstanceCache	no	yes
.	no	no
get	no	yes
(	no	no
host	yes	yes
)	no	no
;	no	no
byHost	yes	yes
=	no	no
(	no	no
byHost	yes	yes
==	no	no
null	no	no
)	no	no
?	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
)	no	no
:	no	no
byHost	yes	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
instancesCache	no	yes
!=	no	no
null	no	no
)	no	no
return	no	no
instancesCache	no	yes
;	no	no
ExecutorService	no	yes
tp	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
1	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
startTimeNs	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
,	no	no
deltaNs	no	yes
=	no	no
clusterReadyTimeoutMs	no	yes
*	no	no
1000000L	no	no
;	no	no
long	no	no
sleepTimeMs	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
16	no	no
,	no	no
clusterReadyTimeoutMs	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
instancesCache	no	yes
=	no	no
new	no	no
PathChildrenCache	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
workersPath	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
instancesCache	no	yes
.	no	no
getListenable	no	yes
(	no	no
)	no	no
.	no	no
addListener	no	yes
(	no	no
new	no	no
InstanceStateChangeListener	no	yes
(	no	no
)	no	no
,	no	no
tp	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
instancesCache	no	yes
.	no	no
start	no	yes
(	no	no
PathChildrenCache	no	yes
.	no	no
StartMode	no	yes
.	no	no
BUILD_INITIAL_CACHE	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
instancesCache	no	yes
=	no	no
instancesCache	no	yes
;	no	no
return	no	no
instancesCache	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
InvalidACLException	no	no
e	yes	no
)	no	no
{	no	no
CloseableUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
instancesCache	no	yes
)	no	no
;	no	no
long	no	no
elapsedNs	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTimeNs	no	yes
;	no	no
if	no	no
(	no	no
deltaNs	no	yes
==	no	no
0	no	no
||	no	no
deltaNs	no	yes
<=	no	no
elapsedNs	no	yes
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
InvalidACLException	no	no
e	yes	yes
)	no	no
{	no	no
CloseableUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
instancesCache	no	yes
)	no	no
;	no	no
long	no	no
elapsedNs	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTimeNs	no	yes
;	no	no
if	no	no
(	no	no
deltaNs	no	yes
==	no	no
0	no	no
||	no	no
deltaNs	no	yes
<=	no	no
elapsedNs	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
sleepTimeMs	no	yes
,	no	no
(	no	no
deltaNs	no	yes
-	no	no
elapsedNs	no	yes
)	no	no
/	no	no
1000000L	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e1	no	yes
)	no	no
;	no	no
}	no	no
sleepTimeMs	no	yes
=	no	no
sleepTimeMs	no	yes
<<	no	no
1	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
CloseableUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
instancesCache	no	yes
)	no	no
;	no	no

final	no	no
CuratorFramework	no	yes
curator	no	yes
=	no	no
newCurator	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
nodeCount	no	yes
)	no	no
;	no	no
final	no	no
CountDownLatch	no	yes
cdlIn	no	yes
=	no	no
new	no	no
CountDownLatch	no	yes
(	no	no
nodeCount	no	yes
)	no	no
,	no	no
cdlOut	no	yes
=	no	no
new	no	no
CountDownLatch	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
FutureTask	no	yes
<	no	no
SlotZnode	no	yes
>	no	no
[	no	no
]	no	no
startTasks	no	yes
=	no	no
new	no	no
FutureTask	no	yes
[	no	no
nodeCount	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
nodeCount	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
isFallback	no	no
)	no	no
{	no	no
curator	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
.	no	no
creatingParentsIfNeeded	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
PATH	no	yes
+	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
int	no	no
ix	yes	yes
=	no	no
i	no	yes
;	no	no
startTasks	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
new	no	no
FutureTask	no	yes
<	no	no
SlotZnode	no	yes
>	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
SlotZnode	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
SlotZnode	no	yes
node	no	yes
=	no	no
createZnode	no	yes
(	no	no
curator	no	yes
)	no	no
;	no	no
public	no	no
SlotZnode	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
syncThreadStart	no	yes
(	no	no
cdlIn	no	yes
,	no	no
cdlOut	no	yes
)	no	no
;	no	no
int	no	no
id	no	yes
=	no	no
System	no	yes
.	no	no
identityHashCode	no	yes
(	no	no
node	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
ix	yes	yes
)	no	no
;	no	no
boolean	no	no
result	yes	yes
=	no	no
node	no	yes
.	no	no
start	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
startTasks	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
startTasks	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
cdlIn	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
cdlOut	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
[	no	no
]	no	no
found	no	yes
=	no	no
new	no	no
boolean	no	no
[	no	no
nodeCount	no	yes
]	no	no
;	no	no
int	no	no
totalFallbackCount	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
startTasks	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
SlotZnode	no	yes
node	no	yes
=	no	no
startTasks	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
node	no	yes
)	no	no
;	no	no
totalFallbackCount	yes	yes
+=	no	no
node	no	yes
.	no	no
getFallbackCount	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
slot	no	yes
=	no	no
node	no	yes
.	no	no
getCurrentSlot	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
slot	no	yes
<	no	no
found	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
assertFalse	no	yes
(	no	no
found	no	yes
[	no	no
slot	no	yes
]	no	no
)	no	no
;	no	no
found	no	yes
[	no	no
slot	no	yes
]	no	no
=	no	no
true	no	no
;	no	no

protected	no	no
final	no	no
ProtocolType	no	no
getProxy	no	no
(	no	no
final	no	no
LlapNodeId	no	no
nodeId	no	yes
,	no	no
final	no	no
Token	no	no
<	no	no
TokenType	no	no
>	no	no
nodeToken	no	no
)	no	no
{	no	no
String	no	yes
hostId	yes	yes
=	no	no
getHostIdentifier	no	yes
(	no	no
nodeId	no	yes
.	no	no
getHostname	no	yes
(	no	no
)	no	no
,	no	no
nodeId	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
ProtocolType	no	no
createProxy	no	no
(	no	no
final	no	no
LlapNodeId	no	no
nodeId	yes	no
,	no	no
Token	no	no
<	no	no
TokenType	no	no
>	no	no
nodeToken	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
nodeToken	no	no
==	no	no
null	no	no
&&	no	no
this	no	no
.	no	no
token	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nodeId	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
createProtocolImpl	no	yes
(	no	no
getConfig	no	yes
(	no	no
)	no	no
,	no	no
nodeId	yes	yes
.	no	no
getHostname	no	yes
(	no	no
)	no	no
,	no	no
nodeId	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
retryPolicy	no	yes
,	no	no
socketFactory	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
this	no	no
.	no	no
token	no	yes
!=	no	no
null	no	no
&&	no	no
this	no	no
.	no	no
tokenUser	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
this	no	no
.	no	no
token	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
tokenUser	no	yes
=	no	no
this	no	no
.	no	no
tokenUser	no	yes
==	no	no
null	no	no
?	no	no
getTokenUser	no	yes
(	no	no
nodeToken	yes	yes
)	no	no
:	no	no
this	no	no
.	no	no
tokenUser	no	yes
;	no	no
if	no	no
(	no	no
tokenUser	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
tokenUser	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
tokenUser	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createRemoteUser	no	yes
(	no	no
tokenUser	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nodeToken	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
nodeToken	yes	yes
=	no	no
new	no	no
Token	no	yes
<	no	no
TokenType	no	yes
>	no	no
(	no	no
token	no	yes
)	no	no
;	no	no
}	no	no
SecurityUtil	no	yes
.	no	no
setTokenService	no	yes
(	no	no
nodeToken	yes	yes
,	no	no
NetUtils	no	yes
.	no	no
createSocketAddrForHost	no	yes
(	no	no
nodeId	yes	yes
.	no	no
getHostname	no	yes
(	no	no
)	no	no
,	no	no
nodeId	yes	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ugi	no	yes
.	no	no
addToken	no	yes
(	no	no
nodeToken	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
String	no	yes
getDaemonLocalDirString	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	yes
workDirsEnvString	no	no
)	no	no
{	no	no
String	no	yes
localDirList	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_WORK_DIRS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
localDirList	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
localDirList	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Token	no	no
<	no	no
LlapTokenIdentifier	no	no
>	no	no
selectToken	no	no
(	no	no
Text	no	no
service	yes	yes
,	no	no
Collection	no	no
<	no	no
Token	no	no
<	no	no
?	no	no
extends	no	no
TokenIdentifier	no	no
>>	no	no
tokens	no	no
)	no	no
{	no	no
if	no	no
(	no	no
service	yes	yes
==	no	no
null	no	no
)	no	no
return	no	no
null	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
startThreads	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
principalUser	yes	yes
=	no	no
LlapUtil	no	yes
.	no	no
getUserNameFromPrincipal	no	yes
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
SecretManager	no	yes
.	no	no
ZK_DTSM_ZK_KERBEROS_PRINCIPAL	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
checkForZKDTSMBug	no	no
(	no	no
)	no	no
{	no	no
long	no	no
expectedRenewTimeSec	yes	yes
=	no	no
conf	no	yes
.	no	no
getLong	no	yes
(	no	no
DelegationTokenManager	no	yes
.	no	no
RENEW_INTERVAL	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no

private	no	no
void	no	no
checkForZKDTSMBug	no	no
(	no	no
)	no	no
{	no	no
long	no	no
expectedRenewTimeSec	no	yes
=	no	no
conf	no	yes
.	no	no
getLong	no	yes
(	no	no
DelegationTokenManager	no	yes
.	no	no
RENEW_INTERVAL	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
expectedRenewTimeSec	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
expectedRenewTimeSec	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
return	no	no
;	no	no
java	no	yes
.	no	no
lang	no	yes
.	no	no
reflect	no	yes
.	no	no
Field	no	yes
f	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
c	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
security	no	yes
.	no	no
token	no	yes
.	no	no
delegation	no	yes
.	no	no
AbstractDelegationTokenSecretManager	no	yes
.	no	no
class	no	no
;	no	no
f	no	yes
=	no	no
c	no	yes
.	no	no
getDeclaredField	no	yes
(	no	no
)	no	no
;	no	no
f	no	yes
.	no	no
setAccessible	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
long	no	no
realValue	yes	yes
=	no	no
f	no	yes
.	no	no
getLong	no	yes
(	no	no
this	no	no
)	no	no
;	no	no
long	no	no
expectedValue	yes	yes
=	no	no
expectedRenewTimeSec	no	yes
*	no	no
1000	no	no
;	no	no

ArrowWrapperWritable	no	yes
batchData	no	yes
=	no	no
(	no	no
ArrowWrapperWritable	no	yes
)	no	no
data	no	yes
;	no	no
if	no	no
(	no	no
(	no	no
batchSize	no	yes
==	no	no
0	no	no
)	no	no
||	no	no
(	no	no
rowIndex	no	yes
==	no	no
batchSize	no	yes
)	no	no
)	no	no
{	no	no
batchSize	no	yes
=	no	no
0	no	no
;	no	no
rowIndex	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
batchSize	no	yes
==	no	no
0	no	no
&&	no	no
(	no	no
hasNext	no	no
=	no	no
reader	no	no
.	no	no
next	no	no
(	no	no
key	no	no
,	no	no
data	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
FieldVector	no	yes
>	no	no
vectors	no	yes
=	no	no
batchData	no	yes
.	no	no
getVectorSchemaRoot	no	yes
(	no	no
)	no	no
.	no	no
getFieldVectors	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
vectors	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
batchSize	no	yes
=	no	no
vectors	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getValueCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hasNext	no	no
)	no	no
{	no	no
try	no	no
{	no	no
ArrowWrapperWritable	no	yes
wrapper	no	yes
=	no	no
new	no	no
ArrowWrapperWritable	no	yes
(	no	no
batchData	no	yes
.	no	no
getVectorSchemaRoot	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
currentBatch	no	yes
=	no	no
(	no	no
Object	no	yes
[	no	no
]	no	no
[	no	no
]	no	no
)	no	no
serde	no	yes
.	no	no
deserialize	no	yes
(	no	no
wrapper	no	yes
)	no	no
;	no	no
StructObjectInspector	no	yes
rowOI	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
serde	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
setRowFromStruct	no	yes
(	no	no
value	no	yes
,	no	no
currentBatch	no	yes
[	no	no
rowIndex	no	yes
]	no	no
,	no	no
rowOI	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
RecordReader	no	no
<	no	no
NullWritable	no	no
,	no	no
V	no	no
>	no	no
getRecordReader	no	no
(	no	no
InputSplit	no	no
split	no	yes
,	no	no
JobConf	no	no
job	no	yes
,	no	no
Reporter	no	no
reporter	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LlapInputSplit	no	yes
llapSplit	no	yes
=	no	no
(	no	no
LlapInputSplit	no	yes
)	no	no
split	no	yes
;	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
job	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_ZK_REGISTRY_USER	no	yes
,	no	no
llapSplit	no	yes
.	no	no
getLlapUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SubmitWorkInfo	no	yes
submitWorkInfo	no	yes
=	no	no
SubmitWorkInfo	no	yes
.	no	no
fromBytes	no	yes
(	no	no
llapSplit	no	yes
.	no	no
getPlanBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
LlapDaemonInfo	no	yes
llapDaemonInfo	yes	yes
=	no	no
llapSplit	no	yes
.	no	no
getLlapDaemonInfos	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
final	no	no
String	no	yes
host	no	yes
=	no	no
llapDaemonInfo	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
outputPort	no	yes
=	no	no
llapDaemonInfo	yes	yes
.	no	no
getOutputFormatPort	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
llapSubmitPort	no	yes
=	no	no
llapDaemonInfo	yes	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
;	no	no

Token	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
llapToken	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
llapTokenBytes	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
DataInputBuffer	no	yes
in	no	yes
=	no	no
new	no	no
DataInputBuffer	no	yes
(	no	no
)	no	no
;	no	no
in	no	yes
.	no	no
reset	no	yes
(	no	no
llapTokenBytes	no	yes
,	no	no
0	no	no
,	no	no
llapTokenBytes	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
llapToken	no	yes
=	no	no
new	no	no
Token	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
llapToken	no	yes
.	no	no
readFields	no	yes
(	no	no
in	no	yes
)	no	no
;	no	no
}	no	no
LlapRecordReaderTaskUmbilicalExternalResponder	no	yes
umbilicalResponder	no	yes
=	no	no
new	no	no
LlapRecordReaderTaskUmbilicalExternalResponder	no	yes
(	no	no
)	no	no
;	no	no
LlapTaskUmbilicalExternalClient	no	yes
llapClient	no	yes
=	no	no
new	no	no
LlapTaskUmbilicalExternalClient	no	yes
(	no	no
job	no	yes
,	no	no
submitWorkInfo	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
,	no	no
submitWorkInfo	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
umbilicalResponder	no	yes
,	no	no
llapToken	no	yes
)	no	no
;	no	no
int	no	no
attemptNum	yes	yes
=	no	no
0	no	no
;	no	no
final	no	no
int	no	no
taskNum	yes	yes
;	no	no
TaskAttemptID	no	yes
taskAttemptId	yes	yes
=	no	no
TaskAttemptID	no	yes
.	no	no
forName	no	yes
(	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
TASK_ATTEMPT_ID	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
taskAttemptId	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
attemptNum	yes	yes
=	no	no
taskAttemptId	yes	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
taskNum	yes	yes
=	no	no
taskAttemptId	yes	yes
.	no	no
getTaskID	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
LlapRecordReaderTaskUmbilicalExternalResponder	no	yes
umbilicalResponder	no	yes
=	no	no
new	no	no
LlapRecordReaderTaskUmbilicalExternalResponder	no	yes
(	no	no
)	no	no
;	no	no
LlapTaskUmbilicalExternalClient	no	yes
llapClient	no	yes
=	no	no
new	no	no
LlapTaskUmbilicalExternalClient	no	yes
(	no	no
job	no	yes
,	no	no
submitWorkInfo	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
,	no	no
submitWorkInfo	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
umbilicalResponder	no	yes
,	no	no
llapToken	no	yes
)	no	no
;	no	no
int	no	no
attemptNum	no	yes
=	no	no
0	no	no
;	no	no
final	no	no
int	no	no
taskNum	no	yes
;	no	no
TaskAttemptID	no	yes
taskAttemptId	no	yes
=	no	no
TaskAttemptID	no	yes
.	no	no
forName	no	yes
(	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
TASK_ATTEMPT_ID	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
taskAttemptId	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
attemptNum	no	yes
=	no	no
taskAttemptId	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
taskNum	no	yes
=	no	no
taskAttemptId	no	yes
.	no	no
getTaskID	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
attemptNum	no	yes
,	no	no
taskNum	no	yes
,	no	no
taskAttemptId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
taskNum	no	yes
=	no	no
llapSplit	no	yes
.	no	no
getSplitNum	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
SubmitWorkRequestProto	no	yes
request	no	yes
=	no	no
constructSubmitWorkRequestProto	no	yes
(	no	no
submitWorkInfo	no	yes
,	no	no
taskNum	no	yes
,	no	no
attemptNum	no	yes
,	no	no
llapClient	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
submitWorkInfo	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
llapSplit	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
SignableVertexSpec	no	yes
vertex	no	yes
=	no	no
SignableVertexSpec	no	yes
.	no	no
parseFrom	no	yes
(	no	no
submitWorkInfo	no	yes
.	no	no
getVertexBinary	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	yes	yes
=	no	no
Converters	no	yes
.	no	no
createTaskAttemptId	no	yes
(	no	no
vertex	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
.	no	no
getVertexIndex	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getFragmentNumber	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAttemptNumber	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

taskNum	no	yes
=	no	no
taskAttemptId	no	yes
.	no	no
getTaskID	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
attemptNum	no	yes
,	no	no
taskNum	no	yes
,	no	no
taskAttemptId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
taskNum	no	yes
=	no	no
llapSplit	no	yes
.	no	no
getSplitNum	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
SubmitWorkRequestProto	no	yes
request	no	yes
=	no	no
constructSubmitWorkRequestProto	no	yes
(	no	no
submitWorkInfo	no	yes
,	no	no
taskNum	no	yes
,	no	no
attemptNum	no	yes
,	no	no
llapClient	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
submitWorkInfo	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
llapSplit	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
SignableVertexSpec	no	yes
vertex	no	yes
=	no	no
SignableVertexSpec	no	yes
.	no	no
parseFrom	no	yes
(	no	no
submitWorkInfo	no	yes
.	no	no
getVertexBinary	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	yes	yes
=	no	no
Converters	no	yes
.	no	no
createTaskAttemptId	no	yes
(	no	no
vertex	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
.	no	no
getVertexIndex	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getFragmentNumber	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAttemptNumber	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fragmentId	yes	yes
,	no	no
host	yes	yes
,	no	no
llapSubmitPort	no	yes
)	no	no
;	no	no
llapClient	no	yes
.	no	no
submitWork	no	yes
(	no	no
request	no	yes
,	no	no
host	yes	yes
,	no	no
llapSubmitPort	no	yes
)	no	no
;	no	no
Socket	no	yes
socket	no	yes
=	no	no
new	no	no
Socket	no	yes
(	no	no
host	yes	yes
,	no	no
outputPort	yes	yes
)	no	no
;	no	no
OutputStream	no	yes
socketStream	no	yes
=	no	no
socket	no	yes
.	no	no
getOutputStream	no	yes
(	no	no
)	no	no
;	no	no
LlapOutputSocketInitMessage	no	yes
.	no	no
Builder	no	yes
builder	no	yes
=	no	no
LlapOutputSocketInitMessage	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
setFragmentId	no	yes
(	no	no
fragmentId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
llapSplit	no	yes
.	no	no
getTokenBytes	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
builder	no	yes
.	no	no
setToken	no	yes
(	no	no
ByteString	no	yes
.	no	no
copyFrom	no	yes
(	no	no
llapSplit	no	yes
.	no	no
getTokenBytes	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
attemptNum	no	yes
,	no	no
taskNum	no	yes
,	no	no
taskAttemptId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
taskNum	no	yes
=	no	no
llapSplit	no	yes
.	no	no
getSplitNum	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
SubmitWorkRequestProto	no	yes
request	no	yes
=	no	no
constructSubmitWorkRequestProto	no	yes
(	no	no
submitWorkInfo	no	yes
,	no	no
taskNum	no	yes
,	no	no
attemptNum	no	yes
,	no	no
llapClient	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
submitWorkInfo	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
,	no	no
llapSplit	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
SignableVertexSpec	no	yes
vertex	no	yes
=	no	no
SignableVertexSpec	no	yes
.	no	no
parseFrom	no	yes
(	no	no
submitWorkInfo	no	yes
.	no	no
getVertexBinary	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	yes	yes
=	no	no
Converters	no	yes
.	no	no
createTaskAttemptId	no	yes
(	no	no
vertex	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
.	no	no
getVertexIndex	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getFragmentNumber	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAttemptNumber	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fragmentId	yes	yes
,	no	no
host	no	yes
,	no	no
llapSubmitPort	no	yes
)	no	no
;	no	no
llapClient	no	yes
.	no	no
submitWork	no	yes
(	no	no
request	no	yes
,	no	no
host	no	yes
,	no	no
llapSubmitPort	no	yes
)	no	no
;	no	no
Socket	no	yes
socket	no	yes
=	no	no
new	no	no
Socket	no	yes
(	no	no
host	no	yes
,	no	no
outputPort	no	yes
)	no	no
;	no	no
OutputStream	no	yes
socketStream	no	yes
=	no	no
socket	no	yes
.	no	no
getOutputStream	no	yes
(	no	no
)	no	no
;	no	no
LlapOutputSocketInitMessage	no	yes
.	no	no
Builder	no	yes
builder	no	yes
=	no	no
LlapOutputSocketInitMessage	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
setFragmentId	no	yes
(	no	no
fragmentId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
llapSplit	no	yes
.	no	no
getTokenBytes	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
builder	no	yes
.	no	no
setToken	no	yes
(	no	no
ByteString	no	yes
.	no	no
copyFrom	no	yes
(	no	no
llapSplit	no	yes
.	no	no
getTokenBytes	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fragmentId	yes	yes
,	no	no
host	no	yes
,	no	no
outputPort	no	yes
)	no	no
;	no	no
builder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
.	no	no
writeDelimitedTo	no	yes
(	no	no
socketStream	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
closeConnections	no	no
(	no	no
String	no	no
handleId	yes	no
,	no	no
List	no	no
<	no	no
Connection	no	no
>	no	no
handleConnections	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
handleConnections	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
SubmitWorkRequestProto	no	no
constructSubmitWorkRequestProto	no	no
(	no	no
SubmitWorkInfo	no	no
submitWorkInfo	no	yes
,	no	no
int	no	no
taskNum	no	no
,	no	no
int	no	no
attemptNum	no	no
,	no	no
InetSocketAddress	no	no
address	no	no
,	no	no
Token	no	no
<	no	no
JobTokenIdentifier	no	no
>	no	no
token	no	no
,	no	no
LlapInputSplit	no	no
llapInputSplit	no	yes
,	no	no
JobConf	no	no
job	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
fragmentBytes	no	yes
=	no	no
llapInputSplit	no	yes
.	no	no
getFragmentBytes	no	yes
(	no	no
)	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
fragmentBytesSignature	no	yes
=	no	no
llapInputSplit	no	yes
.	no	no
getFragmentBytesSignature	no	yes
(	no	no
)	no	no
;	no	no
ApplicationId	no	yes
appId	no	yes
=	no	no
submitWorkInfo	no	yes
.	no	no
getFakeAppId	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
user	yes	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
ApplicationConstants	no	yes
.	no	no
Environment	no	yes
.	no	no
USER	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Void	no	no
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
localizeJarForClass	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
DEFAULT_AUX_CLASSES	no	yes
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
localizeJarForClass	no	yes
(	no	no
conf	no	yes
.	no	no
getStringCollection	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
localizeJarForClass	no	yes
(	no	no
getDbSpecificJdbcJars	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cl	no	no
.	no	no
getIsHBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
localizeJarForClass	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
HBASE_SERDE_CLASS	no	yes
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
Job	no	yes
fakeJob	no	yes
=	no	no
Job	no	yes
.	no	no
getInstance	no	yes
(	no	no
new	no	no
JobConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TableMapReduceUtil	no	yes
.	no	no
addDependencyJars	no	yes
(	no	no
fakeJob	no	yes
)	no	no
;	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
hbaseJars	no	yes
=	no	no
fakeJob	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
.	no	no
getStringCollection	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
jarPath	no	yes
:	no	no
hbaseJars	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
jarPath	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rawFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
jarPath	no	yes
)	no	no
,	no	no
libDir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	no
)	no	no
{	no	no
String	no	yes
err	yes	yes
=	no	no
;	no	no

Job	no	yes
fakeJob	no	yes
=	no	no
Job	no	yes
.	no	no
getInstance	no	yes
(	no	no
new	no	no
JobConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TableMapReduceUtil	no	yes
.	no	no
addDependencyJars	no	yes
(	no	no
fakeJob	no	yes
)	no	no
;	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
hbaseJars	no	yes
=	no	no
fakeJob	no	yes
.	no	no
getConfiguration	no	yes
(	no	no
)	no	no
.	no	no
getStringCollection	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
jarPath	no	yes
:	no	no
hbaseJars	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
jarPath	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rawFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
jarPath	no	yes
)	no	no
,	no	no
libDir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
String	no	yes
err	no	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
err	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
err	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
auxJars	yes	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cl	no	no
.	no	no
getIsHiveAux	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addAuxJarsToSet	no	yes
(	no	no
auxJars	yes	yes
,	no	no
conf	no	yes
.	no	no
getAuxJars	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
addAuxJarsToSet	no	yes
(	no	no
auxJars	yes	yes
,	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no

Class	no	yes
<	no	no
?	no	no
>	no	no
clazz	no	yes
=	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
className	no	yes
)	no	no
;	no	no
jarPath	no	yes
=	no	no
Utilities	no	yes
.	no	no
jarFinderGetJar	no	yes
(	no	no
clazz	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
doThrow	no	no
)	no	no
{	no	no
throw	no	no
(	no	no
t	no	yes
instanceof	no	no
IOException	no	yes
)	no	no
?	no	no
(	no	no
IOException	no	yes
)	no	no
t	no	yes
:	no	no
new	no	no
IOException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
hasException	no	yes
=	no	no
true	no	no
;	no	no
String	no	yes
err	yes	yes
=	no	no
+	no	no
className	no	yes
+	no	no
+	no	no
t	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
err	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
err	yes	yes
.	no	no
println	no	yes
(	no	no
err	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
jarPath	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
rawFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
jarPath	no	yes
)	no	no
,	no	no
libDir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
hasException	no	yes
)	no	no
{	no	no
String	no	yes
err	yes	yes
=	no	no
+	no	no
className	no	yes
+	no	no
;	no	no
if	no	no
(	no	no
doThrow	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
err	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Void	no	no
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
dependencies	no	yes
=	no	no
new	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
{	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
class	no	no
,	no	no
LlapTezUtils	no	yes
.	no	no
class	no	no
,	no	no
LlapInputFormat	no	yes
.	no	no
class	no	no
,	no	no
HiveInputFormat	no	yes
.	no	no
class	no	no
,	no	no
SslContextFactory	no	yes
.	no	no
class	no	no
,	no	no
Rule	no	yes
.	no	no
class	no	no
,	no	no
RegistryUtils	no	yes
.	no	no
ServiceRecordMarshal	no	yes
.	no	no
class	no	no
,	no	no
com	no	yes
.	no	no
lmax	no	yes
.	no	no
disruptor	no	yes
.	no	no
RingBuffer	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
logging	no	yes
.	no	no
log4j	no	yes
.	no	no
Logger	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
logging	no	yes
.	no	no
log4j	no	yes
.	no	no
core	no	yes
.	no	no
Appender	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
logging	no	yes
.	no	no
slf4j	no	yes
.	no	no
Log4jLogger	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
log4j	no	yes
.	no	no
config	no	yes
.	no	no
Log4j1ConfigurationFactory	no	yes
.	no	no
class	no	no
,	no	no
io	no	yes
.	no	no
netty	no	yes
.	no	no
util	no	yes
.	no	no
NetUtil	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
jboss	no	yes
.	no	no
netty	no	yes
.	no	no
util	no	yes
.	no	no
NetUtil	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
arrow	no	yes
.	no	no
vector	no	yes
.	no	no
types	no	yes
.	no	no
pojo	no	yes
.	no	no
ArrowType	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
arrow	no	yes
.	no	no
memory	no	yes
.	no	no
BaseAllocator	no	yes
.	no	no
class	no	no
,	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
arrow	no	yes
.	no	no
flatbuf	no	yes
.	no	no
Schema	no	yes
.	no	no
class	no	no
,	no	no
com	no	yes
.	no	no
google	no	yes
.	no	no
flatbuffers	no	yes
.	no	no
Table	no	yes
.	no	no
class	no	no
,	no	no
com	no	yes
.	no	no
carrotsearch	no	yes
.	no	no
hppc	no	yes
.	no	no
ByteArrayDeque	no	yes
.	no	no
class	no	no
,	no	no
io	no	yes
.	no	no
jsonwebtoken	no	yes
.	no	no
security	no	yes
.	no	no
Keys	no	yes
.	no	no
class	no	no
,	no	no
io	no	yes
.	no	no
jsonwebtoken	no	yes
.	no	no
impl	no	yes
.	no	no
DefaultJws	no	yes
.	no	no
class	no	no
,	no	no
io	no	yes
.	no	no
jsonwebtoken	no	yes
.	no	no
io	no	yes
.	no	no
JacksonSerializer	no	yes
.	no	no
class	no	no
}	no	no
;	no	no
for	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
c	no	yes
:	no	no
dependencies	no	yes
)	no	no
{	no	no
Path	no	yes
jarPath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
Utilities	no	yes
.	no	no
jarFinderGetJar	no	yes
(	no	no
c	no	yes
)	no	no
)	no	no
;	no	no
rawFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
jarPath	yes	yes
,	no	no
libDir	yes	yes
)	no	no
;	no	no

LlapTarComponentGatherer	no	yes
tarComponentGatherer	no	yes
=	no	no
new	no	no
LlapTarComponentGatherer	no	yes
(	no	no
cl	no	yes
,	no	no
conf	no	yes
,	no	no
propsDirectOptions	no	yes
,	no	no
fs	no	yes
,	no	no
rawFs	no	yes
,	no	no
executor	no	yes
,	no	no
tmpDir	no	yes
)	no	no
;	no	no
tarComponentGatherer	no	yes
.	no	no
createDirs	no	yes
(	no	no
)	no	no
;	no	no
tarComponentGatherer	no	yes
.	no	no
submitTarComponentGatherTasks	no	yes
(	no	no
)	no	no
;	no	no
LlapConfigJsonCreator	no	yes
lcjCreator	no	yes
=	no	no
new	no	no
LlapConfigJsonCreator	no	yes
(	no	no
conf	no	yes
,	no	no
rawFs	no	yes
,	no	no
tmpDir	no	yes
,	no	no
cl	no	yes
.	no	no
getCache	no	yes
(	no	no
)	no	no
,	no	no
cl	no	yes
.	no	no
getXmx	no	yes
(	no	no
)	no	no
,	no	no
javaHome	no	yes
)	no	no
;	no	no
lcjCreator	no	yes
.	no	no
createLlapConfigJson	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
t0	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
tarComponentGatherer	no	yes
.	no	no
waitForFinish	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cl	no	yes
.	no	no
isStarting	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rc	yes	yes
=	no	no
startLlap	no	yes
(	no	no
tmpDir	no	yes
,	no	no
scriptParent	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
rc	yes	yes
=	no	no
0	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
executor	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
rawFs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
int	no	no
runPackagePy	no	no
(	no	no
Path	no	yes
tmpDir	no	yes
,	no	no
Path	no	yes
scriptParent	no	yes
,	no	no
String	no	yes
version	no	no
,	no	no
String	no	yes
outputDir	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
Path	no	yes
scriptPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
scriptParent	no	yes
,	no	no
)	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
scriptArgs	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
cl	no	yes
.	no	no
getArgs	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
+	no	no
7	no	no
)	no	no
;	no	no
scriptArgs	yes	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
scriptPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
tmpDir	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
outputDir	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
scriptArgs	yes	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
cl	no	yes
.	no	no
getArgs	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
startCluster	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
String	no	no
name	yes	no
,	no	no
String	no	no
packageName	yes	no
,	no	no
Path	no	no
packageDir	yes	no
,	no	no
String	no	no
queue	yes	no
)	no	no
{	no	no

ServiceClient	no	yes
sc	no	yes
;	no	no
try	no	no
{	no	no
sc	no	yes
=	no	no
LlapSliderUtils	no	yes
.	no	no
createServiceClient	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sc	no	yes
.	no	no
actionStop	no	yes
(	no	no
name	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
ex	yes	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
sc	no	yes
.	no	no
actionDestroy	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no

sc	no	yes
.	no	no
actionDestroy	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
ex	no	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
CoreFileSystem	no	yes
fs	no	yes
=	no	no
new	no	no
CoreFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
llapPackageDir	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_HDFS_PACKAGE_DIR	no	yes
)	no	no
+	no	no
LLAP_RELATIVE_PACKAGE_DIR	no	yes
;	no	no
fs	no	yes
.	no	no
createWithPermissions	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
llapPackageDir	no	yes
)	no	no
,	no	no
FsPermission	no	yes
.	no	no
getDirDefault	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
copyLocalFileToHdfs	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
packageDir	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
packageName	no	yes
)	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
llapPackageDir	no	yes
)	no	no
,	no	no
new	no	no
FsPermission	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
yarnfile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
packageDir	no	yes
,	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Long	no	yes
lifetime	no	yes
=	no	no
null	no	no
;	no	no
sc	no	yes
.	no	no
actionLaunch	no	yes
(	no	no
yarnfile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
,	no	no
name	no	yes
,	no	no
lifetime	no	yes
,	no	no
queue	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
YarnException	no	no
|	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no

void	no	no
waitForFinish	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Future	no	no
<	no	no
Void	no	no
>>	no	no
task	yes	yes
:	no	no
tasks	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
t1	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
task	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
t2	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no

ExitCode	no	yes
ret	no	yes
;	no	no
try	no	no
{	no	no
ret	no	yes
=	no	no
processAppReport	no	yes
(	no	no
appReport	no	yes
,	no	no
appStatusBuilder	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
LlapStatusCliException	no	no
e	no	yes
)	no	no
{	no	no
logError	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
e	no	yes
.	no	no
getExitCode	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ret	no	yes
!=	no	no
ExitCode	no	yes
.	no	no
SUCCESS	no	yes
)	no	no
{	no	no
return	no	no
ret	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
NO_YARN_SERVICE_INFO_STATES	no	no
.	no	no
contains	no	no
(	no	no
appStatusBuilder	yes	yes
.	no	no
getState	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
ExitCode	no	yes
.	no	no
SUCCESS	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
ret	no	yes
=	no	no
populateAppStatusFromServiceStatus	no	yes
(	no	no
appName	no	yes
,	no	no
serviceClient	no	yes
,	no	no
appStatusBuilder	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
LlapStatusCliException	no	no
e	no	yes
)	no	no
{	no	no
logError	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
llapInstance	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
llapInstance	no	yes
.	no	no
setMgmtPort	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getManagementPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setRpcPort	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setShufflePort	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getShufflePort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setWebUrl	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getServicesAddress	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setStatusUrl	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getServicesAddress	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
validatedInstances	no	yes
.	no	no
add	no	yes
(	no	no
llapInstance	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
llapExtraInstances	no	yes
.	no	no
add	no	yes
(	no	no
containerIdString	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
appStatusBuilder	yes	yes
.	no	no
setLiveInstances	no	yes
(	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
appStatusBuilder	yes	yes
.	no	no
setLaunchingInstances	no	yes
(	no	no
llapExtraInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
appStatusBuilder	yes	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>=	no	no
appStatusBuilder	yes	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
)	no	no
{	no	no
appStatusBuilder	yes	yes
.	no	no
setState	no	yes
(	no	no
State	no	yes
.	no	no
RUNNING_ALL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
appStatusBuilder	yes	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no

llapInstance	no	yes
.	no	no
setRpcPort	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setShufflePort	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getShufflePort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setWebUrl	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getServicesAddress	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapInstance	no	yes
.	no	no
setStatusUrl	no	yes
(	no	no
serviceInstance	no	yes
.	no	no
getServicesAddress	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
validatedInstances	no	yes
.	no	no
add	no	yes
(	no	no
llapInstance	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
llapExtraInstances	yes	yes
.	no	no
add	no	yes
(	no	no
containerIdString	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
appStatusBuilder	no	yes
.	no	no
setLiveInstances	no	yes
(	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
appStatusBuilder	no	yes
.	no	no
setLaunchingInstances	no	yes
(	no	no
llapExtraInstances	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
appStatusBuilder	no	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>=	no	no
appStatusBuilder	no	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
)	no	no
{	no	no
appStatusBuilder	no	yes
.	no	no
setState	no	yes
(	no	no
State	no	yes
.	no	no
RUNNING_ALL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
appStatusBuilder	no	yes
.	no	no
getDesiredInstances	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
validatedInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

LlapStatusServiceDriver	no	yes
statusServiceDriver	no	yes
=	no	no
createServiceDriver	no	yes
(	no	no
)	no	no
;	no	no
ExitCode	no	yes
ret	no	yes
=	no	no
ExitCode	no	yes
.	no	no
SUCCESS	no	yes
;	no	no
Clock	no	yes
clock	no	yes
=	no	no
SystemClock	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
lastSummaryLogTime	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
boolean	no	no
firstAttempt	no	yes
=	no	no
true	no	no
;	no	no
final	no	no
long	no	no
refreshInterval	no	yes
=	no	no
cl	no	yes
.	no	no
getRefreshIntervalMs	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
boolean	no	no
watchMode	yes	yes
=	no	no
cl	no	yes
.	no	no
isWatchMode	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
long	no	no
watchTimeout	no	yes
=	no	no
cl	no	yes
.	no	no
getWatchTimeoutMs	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
numAttempts	yes	yes
=	no	no
watchTimeout	no	yes
/	no	no
refreshInterval	no	yes
;	no	no
numAttempts	yes	yes
=	no	no
watchMode	yes	yes
?	no	no
numAttempts	yes	yes
:	no	no
1	no	no
;	no	no
State	no	yes
launchingState	no	yes
=	no	no
null	no	no
;	no	no
State	no	yes
currentState	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
desiredStateAttained	no	yes
=	no	no
false	no	no
;	no	no
final	no	no
float	no	no
runningNodesThreshold	no	yes
=	no	no
cl	no	yes
.	no	no
getRunningNodesThreshold	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
OutputStream	no	no
os	no	no
=	no	no
cl	no	yes
.	no	no
getOutputFile	no	no
(	no	no
)	no	no
==	no	no
null	no	no
?	no	no
System	no	no
.	no	no
out	no	no
:	no	no
new	no	no
FileOutputStream	no	no
(	no	no
cl	no	yes
.	no	no
getOutputFile	no	no
(	no	no
)	no	no
)	no	no
;	no	no
Writer	no	no
w	no	no
=	no	no
new	no	no
OutputStreamWriter	no	no
(	no	no
os	no	no
,	no	no
Charset	no	no
.	no	no
defaultCharset	no	no
(	no	no
)	no	no
)	no	no
;	no	no
PrintWriter	no	no
pw	no	no
=	no	no
new	no	no
PrintWriter	no	no
(	no	no
w	no	no
)	no	no
)	no	no
{	no	no

else	no	no
{	no	no
firstAttempt	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
ret	no	yes
=	no	no
statusServiceDriver	no	yes
.	no	no
run	no	yes
(	no	no
cl	no	yes
,	no	no
watchMode	no	yes
?	no	no
watchTimeout	no	yes
:	no	no
0	no	no
)	no	no
;	no	no
currentState	yes	yes
=	no	no
statusServiceDriver	no	yes
.	no	no
appStatusBuilder	no	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
lastSummaryLogTime	no	yes
=	no	no
LlapStatusServiceDriver	no	yes
.	no	no
maybeLogSummary	no	yes
(	no	no
clock	no	yes
,	no	no
lastSummaryLogTime	no	yes
,	no	no
statusServiceDriver	no	yes
,	no	no
watchMode	no	yes
,	no	no
watchTimeout	no	yes
,	no	no
launchingState	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ret	no	yes
==	no	no
ExitCode	no	no
.	no	no
SUCCESS	no	no
)	no	no
{	no	no
if	no	no
(	no	no
watchMode	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
launchingState	no	yes
==	no	no
null	no	no
&&	no	no
LAUNCHING_STATES	no	no
.	no	no
contains	no	no
(	no	no
currentState	yes	yes
)	no	no
)	no	no
{	no	no
launchingState	no	yes
=	no	no
currentState	yes	yes
;	no	no
}	no	no
if	no	no
(	no	no
currentState	yes	yes
.	no	no
equals	no	no
(	no	no
State	no	no
.	no	no
COMPLETE	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
launchingState	no	yes
!=	no	no
null	no	no
||	no	no
cl	no	yes
.	no	no
isLaunched	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no

numAttempts	no	yes
--	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ret	yes	no
==	no	no
ExitCode	no	no
.	no	no
SERVICE_CLIENT_ERROR_CREATE_FAILED	no	no
&&	no	no
watchMode	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
numAttempts	no	yes
--	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ret	yes	no
==	no	no
ExitCode	no	no
.	no	no
SERVICE_CLIENT_ERROR_OTHER	no	no
&&	no	no
watchMode	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
numAttempts	no	yes
--	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ret	yes	no
==	no	no
ExitCode	no	no
.	no	no
LLAP_REGISTRY_ERROR	no	no
&&	no	no
watchMode	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
numAttempts	no	yes
--	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
break	no	no
;	no	no

private	no	no
static	no	no
void	no	no
logError	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
logFragmentStart	no	no
(	no	no
String	no	no
applicationIdStr	yes	no
,	no	no
String	no	no
containerIdStr	yes	no
,	no	no
String	no	no
hostname	yes	no
,	no	no
String	no	no
queryId	yes	no
,	no	no
int	no	no
dagIdentifier	yes	no
,	no	no
String	no	no
vertexName	yes	no
,	no	no
int	no	no
taskId	yes	no
,	no	no
int	no	no
attemptId	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
logFragmentEnd	no	no
(	no	no
String	no	no
applicationIdStr	yes	no
,	no	no
String	no	no
containerIdStr	yes	no
,	no	no
String	no	no
hostname	yes	no
,	no	no
String	no	no
queryId	yes	no
,	no	no
int	no	no
dagIdentifier	yes	no
,	no	no
String	no	no
vertexName	yes	no
,	no	no
int	no	no
taskId	yes	no
,	no	no
int	no	no
attemptId	yes	no
,	no	no
String	no	no
threadName	yes	no
,	no	no
long	no	no
startTime	yes	no
,	no	no
boolean	no	no
failed	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
queryComplete	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
queryIdentifier	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
knownAppMasters	no	no
)	no	no
{	no	no

public	no	no
void	no	no
queryComplete	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
queryIdentifier	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
knownAppMasters	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
LlapNodeId	no	yes
,	no	no
AMNodeInfo	no	yes
>	no	no
amNodeInfoPerQuery	no	yes
=	no	no
knownAppMasters	no	yes
.	no	no
remove	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
amNodeInfoPerQuery	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
AMNodeInfo	no	yes
amNodeInfo	yes	yes
:	no	no
amNodeInfoPerQuery	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
amNodeInfo	yes	yes
.	no	no
setIsDone	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

Credentials	no	yes
credentials	no	yes
=	no	no
LlapUtil	no	yes
.	no	no
credentialsFromByteArray	no	yes
(	no	no
request	no	yes
.	no	no
getCredentialsBinary	no	yes
(	no	no
)	no	no
.	no	no
toByteArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Token	no	yes
<	no	no
JobTokenIdentifier	no	yes
>	no	no
jobToken	no	yes
=	no	no
TokenCache	no	yes
.	no	no
getSessionToken	no	yes
(	no	no
credentials	no	yes
)	no	no
;	no	no
LlapNodeId	no	yes
amNodeId	no	yes
=	no	no
LlapNodeId	no	yes
.	no	no
getInstance	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueryFragmentInfo	no	yes
fragmentInfo	no	yes
=	no	no
queryTracker	no	yes
.	no	no
registerFragment	no	yes
(	no	no
queryIdentifier	no	yes
,	no	no
qIdProto	no	yes
.	no	no
getApplicationIdString	no	yes
(	no	no
)	no	no
,	no	no
dagId	no	yes
,	no	no
vertex	no	yes
.	no	no
getDagName	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
.	no	no
getHiveQueryId	no	yes
(	no	no
)	no	no
,	no	no
dagIdentifier	no	yes
,	no	no
vertex	no	yes
.	no	no
getVertexName	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getFragmentNumber	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAttemptNumber	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
vertex	no	yes
,	no	no
jobToken	no	yes
,	no	no
fragmentIdString	no	yes
,	no	no
tokenInfo	no	yes
,	no	no
amNodeId	no	yes
,	no	no
ugiPool	no	yes
)	no	no
;	no	no
Supplier	no	yes
<	no	no
Configuration	no	yes
>	no	no
callableConf	no	yes
=	no	no
(	no	no
)	no	no
->	no	no
new	no	no
Configuration	no	yes
(	no	no
getConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
fsTaskUgi	no	yes
=	no	no
fsUgiFactory	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
fsUgiFactory	no	yes
.	no	no
createUgi	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isGuaranteed	no	yes
=	no	no
request	no	yes
.	no	no
hasIsGuaranteed	no	yes
(	no	no
)	no	no
&&	no	no
request	no	yes
.	no	no
getIsGuaranteed	no	yes
(	no	no
)	no	no
;	no	no
ConfVars	no	yes
tezSummary	no	yes
=	no	no
ConfVars	no	yes
.	no	no
TEZ_EXEC_SUMMARY	no	yes
;	no	no
ConfVars	no	yes
llapTasks	no	yes
=	no	no
ConfVars	no	yes
.	no	no
LLAP_TASK_TIME_SUMMARY	no	yes
;	no	no
boolean	no	no
addTaskTimes	no	yes
=	no	no
getConfig	no	yes
(	no	no
)	no	no
.	no	no
getBoolean	no	yes
(	no	no
tezSummary	no	yes
.	no	no
varname	no	yes
,	no	no
tezSummary	no	yes
.	no	no
defaultBoolVal	no	yes
)	no	no
&&	no	no
getConfig	no	yes
(	no	no
)	no	no
.	no	no
getBoolean	no	yes
(	no	no
llapTasks	no	yes
.	no	no
varname	no	yes
,	no	no
llapTasks	no	yes
.	no	no
defaultBoolVal	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
llapHost	yes	yes
;	no	no
if	no	no
(	no	no
UserGroupInformation	no	yes
.	no	no
isSecurityEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
llapHost	yes	yes
=	no	no
localAddress	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getHostName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
execUseFQDN	no	no
)	no	no
{	no	no
llapHost	yes	yes
=	no	no
localAddress	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getHostName	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
verifyJwtForExternalClient	no	no
(	no	no
SubmitWorkRequestProto	no	no
request	no	no
,	no	no
String	no	no
extClientAppIdFromSplit	yes	no
,	no	no
String	no	no
fragmentIdString	no	no
)	no	no
{	no	no

private	no	no
void	no	no
verifyJwtForExternalClient	no	no
(	no	no
SubmitWorkRequestProto	no	no
request	no	no
,	no	no
String	no	no
extClientAppIdFromSplit	yes	yes
,	no	no
String	no	no
fragmentIdString	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
extClientAppIdFromSplit	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
request	no	no
.	no	no
getIsExternalClientRequest	no	no
(	no	no
)	no	no
&&	no	no
LlapUtil	no	no
.	no	no
isCloudDeployment	no	no
(	no	no
getConfig	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
SourceStateUpdatedResponseProto	no	no
sourceStateUpdated	no	no
(	no	no
SourceStateUpdatedRequestProto	no	no
request	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
QueryCompleteResponseProto	no	no
queryComplete	no	no
(	no	no
QueryCompleteRequestProto	no	no
request	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
QueryIdentifier	no	yes
queryIdentifier	yes	yes
=	no	no
new	no	no
QueryIdentifier	no	yes
(	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getApplicationIdString	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getDagIndex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
QueryCompleteResponseProto	no	no
queryComplete	no	yes
(	no	no
QueryCompleteRequestProto	no	no
request	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
QueryIdentifier	no	yes
queryIdentifier	yes	yes
=	no	no
new	no	no
QueryIdentifier	no	yes
(	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getApplicationIdString	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getDagIndex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
queryTracker	no	yes
.	no	no
queryComplete	no	yes
(	no	no
queryIdentifier	yes	yes
,	no	no
request	no	yes
.	no	no
getDeleteDelay	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
QueryFragmentInfo	no	yes
>	no	no
knownFragments	yes	yes
=	no	no
queryInfo	no	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
QueryCompleteResponseProto	no	no
queryComplete	no	yes
(	no	no
QueryCompleteRequestProto	no	no
request	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
QueryIdentifier	no	yes
queryIdentifier	yes	yes
=	no	no
new	no	no
QueryIdentifier	no	yes
(	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getApplicationIdString	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getDagIndex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
queryTracker	no	yes
.	no	no
queryComplete	no	yes
(	no	no
queryIdentifier	yes	yes
,	no	no
request	no	yes
.	no	no
getDeleteDelay	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
QueryFragmentInfo	no	yes
>	no	no
knownFragments	no	yes
=	no	no
queryInfo	no	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
,	no	no
knownFragments	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
QueryFragmentInfo	no	yes
fragmentInfo	yes	no
:	no	no
knownFragments	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
TerminateFragmentResponseProto	no	no
terminateFragment	no	no
(	no	no
TerminateFragmentRequestProto	no	no
request	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
fragmentId	yes	yes
=	no	no
request	no	yes
.	no	no
getFragmentIdentifierString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
UpdateFragmentResponseProto	no	no
updateFragment	no	no
(	no	no
UpdateFragmentRequestProto	no	no
request	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
fragmentId	yes	yes
=	no	no
request	no	yes
.	no	no
getFragmentIdentifierString	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isGuaranteed	no	yes
=	no	no
request	no	yes
.	no	no
hasIsGuaranteed	no	yes
(	no	no
)	no	no
&&	no	no
request	no	yes
.	no	no
getIsGuaranteed	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
queryFailed	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
queryFailed	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
QueryFragmentInfo	no	yes
>	no	no
knownFragments	yes	yes
;	no	no
knownFragments	yes	yes
=	no	no
queryTracker	no	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
queryFailed	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
QueryFragmentInfo	no	yes
>	no	no
knownFragments	no	yes
;	no	no
knownFragments	no	yes
=	no	no
queryTracker	no	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	yes	yes
,	no	no
knownFragments	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
QueryFragmentInfo	no	yes
fragmentInfo	yes	no
:	no	no
knownFragments	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
offerToDequeueInternal	no	no
(	no	no
E	no	no
e	yes	yes
)	no	no
{	no	no
boolean	no	no
result	no	yes
=	no	no
deque	no	yes
.	no	no
offer	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
result	no	yes
)	no	no
{	no	no

}	no	no
LocalizerWork	no	yes
lw	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lw	yes	yes
=	no	no
workQueue	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ex	yes	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
isClosed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isClosed	no	yes
)	no	no
{	no	no
deleteAllLocalResources	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
lw	yes	yes
.	no	no
run	no	yes
(	no	no
this	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ex	yes	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
isClosed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
refreshClassloader	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
recentlyLocalizedJars	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
jars	yes	yes
=	no	no
recentlyLocalizedJars	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
recentlyLocalizedJars	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
ClassLoader	no	yes
updatedCl	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
AddToClassPathAction	no	yes
addAction	no	yes
=	no	no
new	no	no
AddToClassPathAction	no	yes
(	no	no
executorClassloader	no	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
jars	yes	yes
)	no	no
)	no	no
;	no	no
updatedCl	no	yes
=	no	no
AccessController	no	yes
.	no	no
doPrivileged	no	yes
(	no	no
addAction	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
localizeFunctionResources	no	no
(	no	no
String	no	no
fqfn	yes	no
,	no	no
List	no	no
<	no	no
ResourceUri	no	no
>	no	no
resources	yes	no
,	no	no
String	no	no
className	no	no
,	no	no
FnResources	no	no
result	no	no
,	no	no
boolean	no	no
doRefreshClassloader	no	no
)	no	no
throws	no	no
URISyntaxException	no	no
,	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
logFilesUsed	no	no
(	no	no
String	no	yes
what	yes	no
,	no	no
String	no	yes
fqfn	yes	no
,	no	no
URI	no	no
srcUri	yes	no
,	no	no
RefCountedResource	no	no
rcr	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	yes
(	no	no
)	no	no
)	no	no
return	no	no
;	no	no
String	no	yes
desc	yes	yes
=	no	no
(	no	no
rcr	no	yes
.	no	no
resources	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
?	no	no
rcr	no	yes
.	no	no
resources	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
:	no	no
(	no	no
rcr	no	yes
.	no	no
resources	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
printAsciiArt	no	no
(	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
asciiArt	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
serviceStart	no	no
(	no	no
)	no	no
throws	no	no
UnknownHostException	no	no
{	no	no
String	no	yes
localHostName	yes	yes
=	no	no
InetAddress	no	yes
.	no	no
getLocalHost	no	yes
(	no	no
)	no	no
.	no	no
getHostName	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
serviceStart	no	no
(	no	no
)	no	no
throws	no	no
UnknownHostException	no	no
{	no	no
String	no	yes
localHostName	yes	yes
=	no	no
InetAddress	no	yes
.	no	no
getLocalHost	no	yes
(	no	no
)	no	no
.	no	no
getHostName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
localHostName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
hostName	no	no
:	no	no
victimsHostName	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hostName	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
localHostName	yes	yes
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
startProtocolServers	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
BlockingService	no	no
daemonImpl	no	yes
,	no	no
BlockingService	no	no
managementImpl	no	no
)	no	no
{	no	no
LlapDaemonPolicyProvider	no	yes
pp	no	yes
=	no	no
new	no	no
LlapDaemonPolicyProvider	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
=	no	no
LlapUtil	no	yes
.	no	no
startProtocolServer	no	yes
(	no	no
srvPort	no	yes
,	no	no
numHandlers	no	yes
,	no	no
srvAddress	no	yes
,	no	no
conf	no	yes
,	no	no
daemonImpl	no	yes
,	no	no
LlapProtocolBlockingPB	no	yes
.	no	no
class	no	no
,	no	no
secretManager	no	yes
,	no	no
pp	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_SECURITY_ACL	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_SECURITY_ACL_DENY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LlapUtil	no	yes
.	no	no
isCloudDeployment	no	no
(	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
externalClientsRpcServer	yes	yes
=	no	no
LlapUtil	no	yes
.	no	no
startProtocolServer	no	yes
(	no	no
externalClientsRpcPort	no	yes
,	no	no
numHandlers	no	yes
,	no	no
null	no	no
,	no	no
conf	no	yes
,	no	no
daemonImpl	no	yes
,	no	no
LlapProtocolBlockingPB	no	yes
.	no	no
class	no	no
,	no	no
secretManager	no	yes
,	no	no
pp	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_SECURITY_ACL	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_SECURITY_ACL_DENY	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
synchronized	no	no
void	no	no
registerTask	no	no
(	no	no
RuntimeTask	no	no
task	yes	yes
,	no	no
ErrorReporter	no	no
errorReporter	no	no
)	no	no
{	no	no
TezCounters	no	yes
tezCounters	no	yes
=	no	no
task	yes	yes
.	no	no
addAndGetTezCounter	no	yes
(	no	no
fragmentId	yes	yes
)	no	no
;	no	no
FragmentCountersMap	no	yes
.	no	no
registerCountersForFragment	no	yes
(	no	no
fragmentId	yes	yes
,	no	no
tezCounters	no	yes
)	no	no
;	no	no

static	no	no
List	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
getLlapTokens	no	no
(	no	no
UserGroupInformation	no	no
ugi	no	no
,	no	no
String	no	no
clusterId	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
LlapTokenIdentifier	no	yes
>	no	no
tokens	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
TokenIdentifier	no	no
id	yes	yes
:	no	no
ugi	no	no
.	no	no
getTokenIdentifiers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
LlapTokenIdentifier	no	yes
.	no	no
KIND_NAME	no	yes
.	no	no
equals	no	yes
(	no	no
id	yes	yes
.	no	no
getKind	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

QueryFragmentInfo	no	no
registerFragment	no	no
(	no	no
QueryIdentifier	no	no
queryIdentifier	no	yes
,	no	no
String	no	yes
appIdString	no	no
,	no	no
String	no	yes
dagIdString	no	no
,	no	no
String	no	yes
dagName	no	yes
,	no	no
String	no	yes
hiveQueryIdString	no	no
,	no	no
int	no	no
dagIdentifier	no	no
,	no	no
String	no	yes
vertexName	no	yes
,	no	no
int	no	no
fragmentNumber	no	yes
,	no	no
int	no	no
attemptNumber	no	yes
,	no	no
String	no	yes
user	no	no
,	no	no
SignableVertexSpec	no	no
vertex	no	no
,	no	no
Token	no	no
<	no	no
JobTokenIdentifier	no	no
>	no	no
appToken	no	no
,	no	no
String	no	yes
fragmentIdString	no	no
,	no	no
LlapTokenInfo	no	no
tokenInfo	no	no
,	no	no
final	no	no
LlapNodeId	no	no
amNodeId	no	no
,	no	no
ContainerRunnerImpl	no	no
.	no	no
UgiPool	no	no
ugiPool	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
ReadWriteLock	no	yes
dagLock	no	yes
=	no	no
getDagLock	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
dagLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
completedDagMap	no	no
.	no	no
contains	no	no
(	no	no
queryIdentifier	no	yes
)	no	no
)	no	no
{	no	no
dagSpecificLocks	no	yes
.	no	no
remove	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
dagName	no	yes
+	no	no
+	no	no
vertexName	no	yes
+	no	no
+	no	no
fragmentNumber	no	yes
+	no	no
+	no	no
attemptNumber	no	yes
+	no	no
;	no	no

tokenInfo	no	yes
=	no	no
LlapTokenChecker	no	yes
.	no	no
getTokenInfo	no	yes
(	no	no
clusterId	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
isExistingQueryInfo	no	yes
=	no	no
true	no	no
;	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
queryInfoMap	no	yes
.	no	no
get	no	yes
(	no	no
queryIdentifier	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
UserGroupInformation	no	no
.	no	no
isSecurityEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
tokenInfo	no	yes
.	no	no
userName	no	yes
)	no	no
;	no	no
}	no	no
queryInfo	no	yes
=	no	no
new	no	no
QueryInfo	no	yes
(	no	no
queryIdentifier	yes	yes
,	no	no
appIdString	no	yes
,	no	no
dagIdString	no	yes
,	no	no
dagName	no	yes
,	no	no
hiveQueryIdString	no	yes
,	no	no
dagIdentifier	no	yes
,	no	no
user	no	yes
,	no	no
getSourceCompletionMap	no	yes
(	no	no
queryIdentifier	yes	yes
)	no	no
,	no	no
localDirsBase	no	yes
,	no	no
localFs	no	yes
,	no	no
tokenInfo	no	yes
.	no	no
userName	no	yes
,	no	no
tokenInfo	no	yes
.	no	no
appId	no	yes
,	no	no
amNodeId	no	yes
,	no	no
vertex	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
,	no	no
appToken	no	yes
,	no	no
vertex	no	yes
.	no	no
getIsExternalSubmission	no	yes
(	no	no
)	no	no
,	no	no
ugiPool	no	yes
)	no	no
;	no	no
QueryInfo	no	yes
old	no	yes
=	no	no
queryInfoMap	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
queryIdentifier	yes	yes
,	no	no
queryInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
queryInfo	no	yes
=	no	no
old	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
isExistingQueryInfo	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
isExistingQueryInfo	no	yes
)	no	no
{	no	no
LlapTokenChecker	no	yes
.	no	no
checkPermissions	no	yes
(	no	no
tokenInfo	no	yes
,	no	no
queryInfo	no	yes
.	no	no
getTokenUserName	no	yes
(	no	no
)	no	no
,	no	no
queryInfo	no	yes
.	no	no
getTokenAppId	no	yes
(	no	no
)	no	no
,	no	no
queryInfo	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
queryIdentifierToHiveQueryId	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
queryIdentifier	yes	yes
,	no	no
hiveQueryIdString	no	yes
)	no	no
;	no	no

void	no	no
fragmentComplete	no	no
(	no	no
QueryFragmentInfo	no	no
fragmentInfo	no	yes
)	no	no
{	no	no
QueryIdentifier	no	yes
qId	yes	yes
=	no	no
fragmentInfo	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
)	no	no
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
;	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
queryInfoMap	no	yes
.	no	no
get	no	yes
(	no	no
qId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

}	no	no
ReadWriteLock	no	yes
dagLock	no	yes
=	no	no
getDagLock	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
dagLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
QueryInfo	no	yes
queryInfo	yes	yes
=	no	no
isExternalQuery	no	yes
?	no	no
queryInfoMap	no	yes
.	no	no
get	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
:	no	no
checkPermissionsAndGetQuery	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
queryIdentifier	no	yes
,	no	no
isExternalQuery	no	yes
,	no	no
deleteDelay	no	yes
)	no	no
;	no	no
queryInfoMap	no	yes
.	no	no
remove	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isExternalQuery	no	yes
)	no	no
{	no	no
rememberCompletedDag	no	yes
(	no	no
queryIdentifier	no	yes
)	no	no
;	no	no
cleanupLocalDirs	no	yes
(	no	no
queryInfo	yes	yes
,	no	no
deleteDelay	no	yes
)	no	no
;	no	no
handleLogOnQueryCompletion	no	yes
(	no	no
queryInfo	yes	yes
.	no	no
getHiveQueryIdString	no	yes
(	no	no
)	no	no
,	no	no
queryInfo	yes	yes
.	no	no
getDagIdString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
queryInfo	yes	yes
.	no	no
getRegisteredFragments	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

private	no	no
void	no	no
handleLogOnQueryCompletion	no	no
(	no	no
String	no	no
queryIdString	yes	yes
,	no	no
String	no	no
dagIdString	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
routeBasedLoggingEnabled	no	no
)	no	no
{	no	no
MDC	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
dagIdString	yes	yes
)	no	no
;	no	no
MDC	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
queryIdString	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
void	no	no
cleanupDir	no	no
(	no	no
String	no	no
dir	yes	no
,	no	no
long	no	no
deleteDelay	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
handleFragmentCompleteExternalQuery	no	no
(	no	no
QueryInfo	no	no
queryInfo	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
queryInfo	yes	yes
.	no	no
isExternalQuery	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ReadWriteLock	no	yes
dagLock	no	yes
=	no	no
getDagLock	no	yes
(	no	no
queryInfo	yes	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dagLock	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
queryInfo	yes	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
locked	no	yes
=	no	no
dagLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
tryLock	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
locked	no	yes
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
queryInfo	yes	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
queryComplete	no	yes
(	no	no
queryInfo	yes	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
-	no	no
1	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isTraceEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
queryInfo	yes	yes
.	no	no
getHiveQueryIdString	no	yes
(	no	no
)	no	no
,	no	no
queryInfo	yes	yes
.	no	no
getRegisteredFragments	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
newWaitQueueSize	no	yes
>	no	no
configuredWaitingQueueSize	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
newWaitQueueSize	no	yes
+	no	no
+	no	no
configuredWaitingQueueSize	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newNumExecutors	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
+	no	no
newNumExecutors	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newWaitQueueSize	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
+	no	no
newWaitQueueSize	no	yes
)	no	no
;	no	no
}	no	no
numSlotsAvailable	no	yes
.	no	no
addAndGet	no	yes
(	no	no
newNumExecutors	no	yes
-	no	no
maxParallelExecutors	no	yes
)	no	no
;	no	no
maxParallelExecutors	no	yes
=	no	no
newNumExecutors	no	yes
;	no	no
waitQueue	no	yes
.	no	no
setWaitQueueSize	no	yes
(	no	no
newWaitQueueSize	no	yes
)	no	no
;	no	no
metrics	no	yes
.	no	no
setNumExecutors	no	yes
(	no	no
newNumExecutors	no	yes
)	no	no
;	no	no
metrics	no	yes
.	no	no
setWaitQueueSize	no	yes
(	no	no
newWaitQueueSize	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
newNumExecutors	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
TaskWrapper	no	yes
task	yes	yes
=	no	no
waitQueue	no	yes
.	no	no
peek	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
task	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
newWaitQueueSize	yes	yes
<	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
+	no	no
newWaitQueueSize	yes	yes
)	no	no
;	no	no
}	no	no
numSlotsAvailable	no	yes
.	no	no
addAndGet	no	yes
(	no	no
newNumExecutors	yes	yes
-	no	no
maxParallelExecutors	no	yes
)	no	no
;	no	no
maxParallelExecutors	no	yes
=	no	no
newNumExecutors	yes	yes
;	no	no
waitQueue	no	yes
.	no	no
setWaitQueueSize	no	yes
(	no	no
newWaitQueueSize	yes	yes
)	no	no
;	no	no
metrics	no	yes
.	no	no
setNumExecutors	no	yes
(	no	no
newNumExecutors	yes	yes
)	no	no
;	no	no
metrics	no	yes
.	no	no
setWaitQueueSize	no	yes
(	no	no
newWaitQueueSize	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
newNumExecutors	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
TaskWrapper	no	yes
task	no	yes
=	no	no
waitQueue	no	yes
.	no	no
peek	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
task	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
task	no	yes
+	no	no
)	no	no
;	no	no
task	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
waitQueue	no	yes
.	no	no
remove	no	no
(	no	no
task	no	yes
)	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setExecutorNumQueuedRequests	no	yes
(	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

TaskWrapper	no	yes
taskWrapper	no	yes
=	no	no
new	no	no
TaskWrapper	no	yes
(	no	no
task	yes	yes
,	no	no
this	no	no
)	no	no
;	no	no
SubmissionState	no	yes
result	no	yes
;	no	no
TaskWrapper	no	yes
evictedTask	no	yes
;	no	no
boolean	no	no
canFinish	no	yes
;	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
waitQueue	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
canFinish	no	yes
=	no	no
taskWrapper	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
canFinish	no	yes
(	no	no
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
updateCanFinishForPriority	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
evictedTask	no	yes
=	no	no
waitQueue	yes	yes
.	no	no
offer	no	yes
(	no	no
taskWrapper	no	yes
,	no	no
maxParallelExecutors	no	yes
-	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
evictedTask	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
evictedTask	no	yes
.	no	no
equals	no	no
(	no	no
taskWrapper	no	yes
)	no	no
)	no	no
{	no	no
knownTasks	no	yes
.	no	no
put	no	yes
(	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
taskWrapper	no	yes
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
task	yes	yes
.	no	no
setWmCountersQueued	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

boolean	no	no
canFinish	no	yes
;	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
canFinish	no	yes
=	no	no
taskWrapper	yes	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
canFinish	no	yes
(	no	no
)	no	no
;	no	no
taskWrapper	yes	yes
.	no	no
updateCanFinishForPriority	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
evictedTask	yes	yes
=	no	no
waitQueue	no	yes
.	no	no
offer	no	yes
(	no	no
taskWrapper	yes	yes
,	no	no
maxParallelExecutors	no	yes
-	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
evictedTask	yes	yes
==	no	no
null	no	no
||	no	no
!	no	no
evictedTask	yes	yes
.	no	no
equals	no	no
(	no	no
taskWrapper	yes	yes
)	no	no
)	no	no
{	no	no
knownTasks	no	yes
.	no	no
put	no	yes
(	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
taskWrapper	yes	yes
)	no	no
;	no	no
taskWrapper	yes	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
task	no	yes
.	no	no
setWmCountersQueued	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	yes	yes
=	no	no
evictedTask	yes	yes
==	no	no
null	no	no
?	no	no
SubmissionState	no	yes
.	no	no
ACCEPTED	no	yes
:	no	no
SubmissionState	no	yes
.	no	no
EVICTED_OTHER	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
evictedTask	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
waitQueue	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
canFinish	no	yes
=	no	no
taskWrapper	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
canFinish	no	yes
(	no	no
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
updateCanFinishForPriority	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
evictedTask	no	yes
=	no	no
waitQueue	yes	yes
.	no	no
offer	no	yes
(	no	no
taskWrapper	no	yes
,	no	no
maxParallelExecutors	no	yes
-	no	no
runningFragmentCount	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
evictedTask	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
evictedTask	no	yes
.	no	no
equals	no	no
(	no	no
taskWrapper	no	yes
)	no	no
)	no	no
{	no	no
knownTasks	no	yes
.	no	no
put	no	yes
(	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
taskWrapper	no	yes
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
task	yes	yes
.	no	no
setWmCountersQueued	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
task	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
waitQueue	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	no	yes
=	no	no
evictedTask	no	yes
==	no	no
null	no	no
?	no	no
SubmissionState	no	yes
.	no	no
ACCEPTED	no	yes
:	no	no
SubmissionState	no	yes
.	no	no
EVICTED_OTHER	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
evictedTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
,	no	no
result	no	yes
,	no	no
evictedTask	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

evictedTask	no	yes
=	no	no
waitQueue	no	yes
.	no	no
offer	no	yes
(	no	no
taskWrapper	yes	yes
,	no	no
maxParallelExecutors	no	yes
-	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
evictedTask	no	yes
==	no	no
null	no	no
||	no	no
!	no	no
evictedTask	no	yes
.	no	no
equals	no	no
(	no	no
taskWrapper	yes	yes
)	no	no
)	no	no
{	no	no
knownTasks	no	yes
.	no	no
put	no	yes
(	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
taskWrapper	yes	yes
)	no	no
;	no	no
taskWrapper	yes	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
task	no	yes
.	no	no
setWmCountersQueued	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	yes	yes
=	no	no
evictedTask	no	yes
==	no	no
null	no	no
?	no	no
SubmissionState	no	yes
.	no	no
ACCEPTED	no	yes
:	no	no
SubmissionState	no	yes
.	no	no
EVICTED_OTHER	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
evictedTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
,	no	no
result	yes	yes
,	no	no
evictedTask	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
evictedTask	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
=	no	no
SubmissionState	no	yes
.	no	no
REJECTED	no	yes
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	no	yes
=	no	no
evictedTask	no	yes
==	no	no
null	no	no
?	no	no
SubmissionState	no	yes
.	no	no
ACCEPTED	no	yes
:	no	no
SubmissionState	no	yes
.	no	no
EVICTED_OTHER	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
evictedTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
,	no	no
result	no	yes
,	no	no
evictedTask	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
evictedTask	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
=	no	no
SubmissionState	no	yes
.	no	no
REJECTED	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
metrics	no	yes
.	no	no
incrTotalRejectedRequests	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
boolean	no	no
stateChanged	no	yes
=	no	no
!	no	no
taskWrapper	yes	yes
.	no	no
maybeRegisterForFinishedStateNotifications	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
stateChanged	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
evictedTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
,	no	no
result	no	yes
,	no	no
evictedTask	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
waitQueue	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
task	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
evictedTask	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
=	no	no
SubmissionState	no	yes
.	no	no
REJECTED	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
metrics	no	yes
.	no	no
incrTotalRejectedRequests	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
boolean	no	no
stateChanged	no	yes
=	no	no
!	no	no
taskWrapper	no	yes
.	no	no
maybeRegisterForFinishedStateNotifications	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
stateChanged	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
!	no	no
canFinish	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numSlotsAvailable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
runningFragmentCount	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
task	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
evictedTask	yes	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
=	no	no
SubmissionState	no	yes
.	no	no
REJECTED	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
metrics	no	yes
.	no	no
incrTotalRejectedRequests	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
boolean	no	no
stateChanged	no	yes
=	no	no
!	no	no
taskWrapper	no	yes
.	no	no
maybeRegisterForFinishedStateNotifications	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
stateChanged	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	no	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
!	no	no
canFinish	no	yes
)	no	no
;	no	no
}	no	no
finishableStateUpdated	no	yes
(	no	no
taskWrapper	no	yes
,	no	no
!	no	no
canFinish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
metrics	no	yes
.	no	no
incrTotalRejectedRequests	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
boolean	no	no
stateChanged	no	yes
=	no	no
!	no	no
taskWrapper	yes	yes
.	no	no
maybeRegisterForFinishedStateNotifications	no	yes
(	no	no
canFinish	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
stateChanged	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
!	no	no
canFinish	no	yes
)	no	no
;	no	no
}	no	no
finishableStateUpdated	no	yes
(	no	no
taskWrapper	yes	yes
,	no	no
!	no	no
canFinish	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
waitQueue	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
evictedTask	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
evictedTask	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
task	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FragmentRuntimeInfo	no	yes
evictedInfo	yes	yes
=	no	no
evictedTask	yes	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
getFragmentRuntimeInfo	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
updateFragment	no	no
(	no	no
String	no	no
fragmentId	yes	yes
,	no	no
boolean	no	no
isGuaranteed	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
TaskWrapper	no	yes
taskWrapper	no	yes
=	no	no
knownTasks	no	yes
.	no	no
get	no	yes
(	no	no
fragmentId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskWrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
killFragment	no	no
(	no	no
String	no	no
fragmentId	yes	yes
)	no	no
{	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no
TaskWrapper	no	yes
taskWrapper	no	yes
=	no	no
knownTasks	no	yes
.	no	no
remove	no	yes
(	no	no
fragmentId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskWrapper	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
taskWrapper	no	yes
.	no	no
isInWaitQueue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
taskWrapper	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
taskWrapper	no	yes
.	no	no
isInWaitQueue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fragmentId	yes	yes
)	no	no
;	no	no
}	no	no
taskWrapper	no	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
setWmCountersDone	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
waitQueue	no	yes
.	no	no
remove	no	no
(	no	no
taskWrapper	no	yes
)	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setExecutorNumQueuedRequests	no	yes
(	no	no
waitQueue	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
taskWrapper	no	yes
.	no	no
isInPreemptionQueue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fragmentId	yes	yes
)	no	no
;	no	no
}	no	no
removeFromPreemptionQueue	no	yes
(	no	no
taskWrapper	no	yes
)	no	no
;	no	no
}	no	no
taskWrapper	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
setWmCountersDone	no	yes
(	no	no
)	no	no
;	no	no
taskWrapper	no	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
tryScheduleUnderLock	no	no
(	no	no
final	no	no
TaskWrapper	no	no
taskWrapper	yes	no
)	no	no
throws	no	no
RejectedExecutionException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
)	no	no
;	no	no
}	no	no
TaskRunnerCallable	no	yes
task	no	yes
=	no	no
taskWrapper	yes	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
;	no	no
ListenableFuture	no	yes
<	no	no
TaskRunner2Result	no	yes
>	no	no
future	no	yes
=	no	no
executorService	no	yes
.	no	no
submit	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
task	no	yes
.	no	no
setWmCountersRunning	no	yes
(	no	no
)	no	no
;	no	no
runningFragmentCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
taskWrapper	yes	yes
.	no	no
setIsInWaitQueue	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
FutureCallback	no	yes
<	no	no
TaskRunner2Result	no	yes
>	no	no
wrappedCallback	no	yes
=	no	no
createInternalCompletionListener	no	yes
(	no	no
taskWrapper	yes	yes
)	no	no
;	no	no
Futures	no	yes
.	no	no
addCallback	no	yes
(	no	no
future	no	yes
,	no	no
wrappedCallback	no	yes
,	no	no
executionCompletionExecutorService	no	yes
)	no	no
;	no	no
boolean	no	no
canFinish	no	yes
=	no	no
taskWrapper	yes	yes
.	no	no
getTaskRunnerCallable	no	yes
(	no	no
)	no	no
.	no	no
canFinish	no	yes
(	no	no
)	no	no
,	no	no
isGuaranteed	no	yes
=	no	no
taskWrapper	yes	yes
.	no	no
isGuaranteed	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskWrapper	yes	yes
.	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
canFinish	no	yes
,	no	no
isGuaranteed	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
enablePreemption	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
canFinish	no	yes
||	no	no
!	no	no
isGuaranteed	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
finishableStateUpdated	no	no
(	no	no
TaskWrapper	no	no
taskWrapper	yes	no
,	no	no
boolean	no	no
newFinishableState	yes	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
lock	no	no
)	no	no
{	no	no

public	no	no
void	no	no
shutDown	no	no
(	no	no
boolean	no	no
awaitTermination	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isShutdown	no	no
.	no	no
getAndSet	no	no
(	no	no
true	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
awaitTermination	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
executor	no	yes
=	no	no
new	no	no
StatsRecordingThreadPool	no	yes
(	no	no
1	no	no
,	no	no
1	no	no
,	no	no
0L	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
,	no	no
new	no	no
LinkedBlockingQueue	no	yes
<	no	no
Runnable	no	yes
>	no	no
(	no	no
)	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
+	no	no
threadNameSuffix	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
runtimeWatch	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fsTaskUgi	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
fsTaskUgi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createRemoteUser	no	yes
(	no	no
vertex	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
fsTaskUgi	no	yes
.	no	no
addCredentials	no	yes
(	no	no
credentials	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ByteBuffer	no	yes
>	no	no
serviceConsumerMetadata	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
serviceConsumerMetadata	no	yes
.	no	no
put	no	yes
(	no	no
TezConstants	no	yes
.	no	no
TEZ_SHUFFLE_HANDLER_SERVICE_ID	no	yes
,	no	no
TezCommonUtils	no	yes
.	no	no
convertJobTokenToBytes	no	yes
(	no	no
jobToken	no	yes
)	no	no
)	no	no
;	no	no
Multimap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
startedInputsMap	no	yes
=	no	no
createStartedInputMap	no	yes
(	no	no
vertex	no	yes
)	no	no
;	no	no
final	no	no
UserGroupInformation	no	yes
taskOwner	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
vertex	no	yes
.	no	no
getIsExternalSubmission	no	no
(	no	no
)	no	no
)	no	no
{	no	no
taskOwner	yes	yes
=	no	no
fragmentInfo	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
)	no	no
.	no	no
getUmbilicalUgi	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
taskOwner	yes	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createRemoteUser	no	yes
(	no	no
vertex	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskOwner	yes	yes
.	no	no
addToken	no	yes
(	no	no
jobToken	no	yes
)	no	no
;	no	no
final	no	no
InetSocketAddress	no	yes
address	no	yes
=	no	no
NetUtils	no	yes
.	no	no
createSocketAddrForHost	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

taskOwner	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createRemoteUser	no	yes
(	no	no
vertex	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskOwner	no	yes
.	no	no
addToken	no	yes
(	no	no
jobToken	no	yes
)	no	no
;	no	no
final	no	no
InetSocketAddress	no	yes
address	no	yes
=	no	no
NetUtils	no	yes
.	no	no
createSocketAddrForHost	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SecurityUtil	no	yes
.	no	no
setTokenService	no	yes
(	no	no
jobToken	no	yes
,	no	no
address	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
taskOwner	no	yes
.	no	no
hashCode	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
InetSocketAddress	no	yes
address	no	yes
=	no	no
NetUtils	no	yes
.	no	no
createSocketAddrForHost	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
umbilical	no	yes
=	no	no
taskOwner	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
LlapTaskUmbilicalProtocol	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
LlapTaskUmbilicalProtocol	no	yes
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
return	no	no
RPC	no	yes
.	no	no
getProxy	no	yes
(	no	no
LlapTaskUmbilicalProtocol	no	yes
.	no	no
class	no	no
,	no	no
LlapTaskUmbilicalProtocol	no	yes
.	no	no
versionID	no	yes
,	no	no
address	no	yes
,	no	no
taskOwner	no	yes
,	no	no
config	no	yes
,	no	no
socketFactory	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	no	yes
=	no	no
LlapTezUtils	no	yes
.	no	no
stripAttemptPrefix	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskReporter	no	yes
=	no	no
new	no	no
LlapTaskReporter	no	yes
(	no	no
completionListener	no	yes
,	no	no
umbilical	no	yes
,	no	no
confParams	no	yes
.	no	no
amHeartbeatIntervalMsMax	no	yes
,	no	no
confParams	no	yes
.	no	no
amCounterHeartbeatInterval	no	yes
,	no	no
confParams	no	yes
.	no	no
amMaxEventsPerHeartbeat	no	yes
,	no	no
new	no	no
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getContainerIdString	no	yes
(	no	no
)	no	no
,	no	no
fragmentId	no	yes
,	no	no
initialEvent	no	yes
,	no	no
requestId	no	yes
,	no	no
wmCounters	no	yes
)	no	no
;	no	no
String	no	yes
attemptId	no	yes
=	no	no
fragmentInfo	no	yes
.	no	no
getFragmentIdentifierString	no	yes
(	no	no
)	no	no
;	no	no
IOContextMap	no	yes
.	no	no
setThreadAttemptId	no	yes
(	no	no
attemptId	no	yes
)	no	no
;	no	no

return	no	no
RPC	no	yes
.	no	no
getProxy	no	yes
(	no	no
LlapTaskUmbilicalProtocol	no	yes
.	no	no
class	no	no
,	no	no
LlapTaskUmbilicalProtocol	no	yes
.	no	no
versionID	no	yes
,	no	no
address	no	yes
,	no	no
taskOwner	no	yes
,	no	no
config	no	yes
,	no	no
socketFactory	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	no	yes
=	no	no
LlapTezUtils	no	yes
.	no	no
stripAttemptPrefix	no	yes
(	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskReporter	no	yes
=	no	no
new	no	no
LlapTaskReporter	no	yes
(	no	no
completionListener	no	yes
,	no	no
umbilical	no	yes
,	no	no
confParams	no	yes
.	no	no
amHeartbeatIntervalMsMax	no	yes
,	no	no
confParams	no	yes
.	no	no
amCounterHeartbeatInterval	no	yes
,	no	no
confParams	no	yes
.	no	no
amMaxEventsPerHeartbeat	no	yes
,	no	no
new	no	no
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
request	yes	yes
.	no	no
getContainerIdString	no	yes
(	no	no
)	no	no
,	no	no
fragmentId	no	yes
,	no	no
initialEvent	no	yes
,	no	no
requestId	no	yes
,	no	no
wmCounters	no	yes
)	no	no
;	no	no
String	no	yes
attemptId	no	yes
=	no	no
fragmentInfo	no	yes
.	no	no
getFragmentIdentifierString	no	yes
(	no	no
)	no	no
;	no	no
IOContextMap	no	yes
.	no	no
setThreadAttemptId	no	yes
(	no	no
attemptId	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
if	no	no
(	no	no
shouldRunTask	no	no
)	no	no
{	no	no
taskRunner	no	yes
=	no	no
new	no	no
TezTaskRunner2	no	yes
(	no	no
config	no	yes
,	no	no
fsTaskUgi	no	yes
,	no	no
fragmentInfo	no	yes
.	no	no
getLocalDirs	no	yes
(	no	no
)	no	no
,	no	no
taskSpec	no	yes
,	no	no
vertex	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getAppAttemptNumber	no	yes
(	no	no
)	no	no
,	no	no
serviceConsumerMetadata	no	yes
,	no	no
envMap	no	yes
,	no	no
startedInputsMap	no	yes
,	no	no
taskReporter	no	yes
,	no	no
executor	no	yes
,	no	no
objectRegistry	no	yes
,	no	no
pid	no	yes
,	no	no
executionContext	no	yes
,	no	no
memoryAvailable	no	yes
,	no	no
false	no	no
,	no	no
tezHadoopShim	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
taskRunner	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
TaskRunner2Result	no	yes
(	no	no
EndReason	no	yes
.	no	no
KILL_REQUESTED	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
TaskRunner2Result	no	yes
result	no	yes
=	no	no
taskRunner	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
)	no	no
;	no	no
String	no	yes
fragmentId	no	yes
=	no	no
LlapTezUtils	no	yes
.	no	no
stripAttemptPrefix	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskReporter	no	yes
=	no	no
new	no	no
LlapTaskReporter	no	yes
(	no	no
completionListener	no	yes
,	no	no
umbilical	no	yes
,	no	no
confParams	no	yes
.	no	no
amHeartbeatIntervalMsMax	no	yes
,	no	no
confParams	no	yes
.	no	no
amCounterHeartbeatInterval	no	yes
,	no	no
confParams	no	yes
.	no	no
amMaxEventsPerHeartbeat	no	yes
,	no	no
new	no	no
AtomicLong	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getContainerIdString	no	yes
(	no	no
)	no	no
,	no	no
fragmentId	no	yes
,	no	no
initialEvent	no	yes
,	no	no
requestId	no	yes
,	no	no
wmCounters	no	yes
)	no	no
;	no	no
String	no	yes
attemptId	no	yes
=	no	no
fragmentInfo	no	yes
.	no	no
getFragmentIdentifierString	no	yes
(	no	no
)	no	no
;	no	no
IOContextMap	no	yes
.	no	no
setThreadAttemptId	no	yes
(	no	no
attemptId	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
if	no	no
(	no	no
shouldRunTask	no	no
)	no	no
{	no	no
taskRunner	no	yes
=	no	no
new	no	no
TezTaskRunner2	no	yes
(	no	no
config	no	yes
,	no	no
fsTaskUgi	no	yes
,	no	no
fragmentInfo	no	yes
.	no	no
getLocalDirs	no	yes
(	no	no
)	no	no
,	no	no
taskSpec	yes	yes
,	no	no
vertex	no	yes
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
.	no	no
getAppAttemptNumber	no	yes
(	no	no
)	no	no
,	no	no
serviceConsumerMetadata	no	yes
,	no	no
envMap	no	yes
,	no	no
startedInputsMap	no	yes
,	no	no
taskReporter	no	yes
,	no	no
executor	no	yes
,	no	no
objectRegistry	no	yes
,	no	no
pid	no	yes
,	no	no
executionContext	no	yes
,	no	no
memoryAvailable	no	yes
,	no	no
false	no	no
,	no	no
tezHadoopShim	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
taskRunner	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
TaskRunner2Result	no	yes
(	no	no
EndReason	no	yes
.	no	no
KILL_REQUESTED	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
TaskRunner2Result	no	yes
result	no	yes
=	no	no
taskRunner	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
.	no	no
isContainerShutdownRequested	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
killTask	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCompleted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
killInvoked	no	no
.	no	no
getAndSet	no	no
(	no	no
true	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
TezTaskAttemptID	no	yes
ta	yes	yes
=	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
killTask	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCompleted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
killInvoked	no	no
.	no	no
getAndSet	no	no
(	no	no
true	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
TezTaskAttemptID	no	yes
ta	no	yes
=	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	no	yes
,	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
shouldRunTask	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
killtimerWatch	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
killTask	no	yes
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCompleted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
killInvoked	no	no
.	no	no
getAndSet	no	no
(	no	no
true	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
TezTaskAttemptID	no	yes
ta	yes	yes
=	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	yes	yes
,	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
shouldRunTask	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
killtimerWatch	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
killed	no	yes
=	no	no
taskRunner	no	yes
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
killed	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
isCompleted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
killInvoked	no	no
.	no	no
getAndSet	no	no
(	no	no
true	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
this	no	no
)	no	no
{	no	no
TezTaskAttemptID	no	yes
ta	yes	yes
=	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	yes	yes
,	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
shouldRunTask	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
taskRunner	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
killtimerWatch	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskSpec	no	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
killed	no	yes
=	no	no
taskRunner	no	yes
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
killed	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	yes	yes
)	no	no
;	no	no
completionListener	no	yes
.	no	no
fragmentCompleting	no	yes
(	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
SchedulerFragmentCompletingListener	no	yes
.	no	no
State	no	yes
.	no	no
KILLED	no	yes
)	no	no
;	no	no
reportTaskKilled	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

boolean	no	no
killed	no	yes
=	no	no
taskRunner	no	yes
.	no	no
killTask	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
killed	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	no	yes
)	no	no
;	no	no
completionListener	no	yes
.	no	no
fragmentCompleting	no	yes
(	no	no
getRequestId	no	yes
(	no	no
)	no	no
,	no	no
SchedulerFragmentCompletingListener	no	yes
.	no	no
State	no	yes
.	no	no
KILLED	no	yes
)	no	no
;	no	no
reportTaskKilled	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
reportTaskKilled	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isStarted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
fragmentCompletionHanler	no	yes
.	no	no
fragmentComplete	no	yes
(	no	no
fragmentInfo	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
this	no	no
.	no	no
amReporter	no	yes
.	no	no
unregisterTask	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
,	no	no
fragmentInfo	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
)	no	no
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
ta	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
thr	yes	no
)	no	no
{	no	no

reportTaskKilled	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ta	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
getRequestId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
reportTaskKilled	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isStarted	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
fragmentCompletionHanler	no	yes
.	no	no
fragmentComplete	no	yes
(	no	no
fragmentInfo	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
this	no	no
.	no	no
amReporter	no	yes
.	no	no
unregisterTask	no	yes
(	no	no
request	no	yes
.	no	no
getAmHost	no	yes
(	no	no
)	no	no
,	no	no
request	no	yes
.	no	no
getAmPort	no	yes
(	no	no
)	no	no
,	no	no
fragmentInfo	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
)	no	no
.	no	no
getQueryIdentifier	no	yes
(	no	no
)	no	no
,	no	no
ta	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
thr	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
thr	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
update	no	no
(	no	no
String	no	no
key	no	no
,	no	no
LogEvent	no	no
event	no	yes
)	no	no
{	no	no
Marker	no	yes
marker	no	yes
=	no	no
event	no	yes
.	no	no
getMarker	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
marker	no	yes
!=	no	no
null	no	no
&&	no	no
marker	no	yes
.	no	no
getName	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
marker	no	yes
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
Log4jQueryCompleteMarker	yes	no
.	no	no
EOF_MARKER	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
keyComplete	no	no
(	no	no
String	no	no
key	yes	yes
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
key	yes	yes
,	no	no
)	no	no
;	no	no
boolean	no	no
removed	no	yes
=	no	no
knownAppenders	no	yes
.	no	no
remove	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
removed	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOGGER	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
PluginFactory	no	no
public	no	no
static	no	no
PurgePolicy	no	no
createPurgePolicy	no	no
(	no	no
@	no	no
PluginAttribute	no	no
(	no	no
)	no	no
final	no	no
String	no	no
name	yes	yes
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
name	yes	yes
,	no	no
+	no	no
LlapRoutingAppenderPurgePolicy	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LlapRoutingAppenderPurgePolicy	no	yes
llapRoutingAppenderPurgePolicy	no	yes
=	no	no
new	no	no
LlapRoutingAppenderPurgePolicy	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
LlapRoutingAppenderPurgePolicy	no	yes
old	no	yes
=	no	no
INSTANCES	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
name	yes	yes
,	no	no
llapRoutingAppenderPurgePolicy	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
void	no	no
setupAppenderIfRequired	no	no
(	no	no
LogEvent	no	no
event	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
appenderControl	no	no
.	no	no
get	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
node	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
.	no	no
getElementName	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
final	no	no
Node	no	yes
cnode	no	yes
:	no	no
node	no	no
.	no	no
getChildren	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
Node	no	yes
appNode	no	yes
=	no	no
new	no	no
Node	no	yes
(	no	no
cnode	no	yes
)	no	no
;	no	no
config	no	yes
.	no	no
createConfiguration	no	yes
(	no	no
appNode	no	yes
,	no	no
event	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
appNode	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
instanceof	no	no
Appender	no	yes
)	no	no
{	no	no
final	no	no
Appender	no	yes
app	no	yes
=	no	no
appNode	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
app	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
app	no	yes
instanceof	no	no
RandomAccessFileAppender	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
+	no	no
RandomAccessFileAppender	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
app	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
node	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
.	no	no
getElementName	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
final	no	no
Node	no	yes
cnode	no	yes
:	no	no
node	no	no
.	no	no
getChildren	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
Node	no	yes
appNode	no	yes
=	no	no
new	no	no
Node	no	yes
(	no	no
cnode	no	yes
)	no	no
;	no	no
config	no	yes
.	no	no
createConfiguration	no	yes
(	no	no
appNode	no	yes
,	no	no
event	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
appNode	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
instanceof	no	no
Appender	no	yes
)	no	no
{	no	no
final	no	no
Appender	no	yes
app	no	yes
=	no	no
appNode	no	yes
.	no	no
getObject	no	yes
(	no	no
)	no	no
;	no	no
app	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
app	no	yes
instanceof	no	no
RandomAccessFileAppender	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
message	no	yes
=	no	no
+	no	no
RandomAccessFileAppender	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
app	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOGGER	no	yes
.	no	no
error	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
message	no	yes
)	no	no
;	no	no
}	no	no
realAppender	no	yes
.	no	no
set	no	yes
(	no	no
app	no	yes
)	no	no
;	no	no
appenderControl	no	yes
.	no	no
set	no	yes
(	no	no
new	no	no
AppenderControl	no	yes
(	no	no
app	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOGGER	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
RandomAccessFileAppender	no	yes
raf	yes	yes
=	no	no
(	no	no
RandomAccessFileAppender	no	yes
)	no	no
app	no	yes
;	no	no

@	no	no
Override	no	no
public	no	no
KerberosInfo	no	no
getKerberosInfo	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
protocol	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
TokenInfo	no	no
getTokenInfo	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
protocol	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
addJobToken	no	no
(	no	no
String	no	yes
appIdString	no	yes
,	no	no
String	no	yes
user	no	yes
,	no	no
Token	no	no
<	no	no
JobTokenIdentifier	no	no
>	no	no
jobToken	no	yes
)	no	no
{	no	no
String	no	yes
jobIdString	yes	yes
=	no	no
appIdString	no	yes
.	no	no
replace	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
userRsrc	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
jobIdString	yes	yes
,	no	no
user	no	yes
)	no	no
;	no	no
secretManager	no	yes
.	no	no
addTokenForJob	no	yes
(	no	no
jobIdString	yes	yes
,	no	no
jobToken	no	yes
)	no	no
;	no	no

}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
sameTask	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
upTask	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
downTask	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
cdlIn	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
cdlOut	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
upTask	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ExecutionException	no	no
|	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

executor	no	yes
.	no	no
execute	no	yes
(	no	no
sameTask	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
upTask	no	yes
)	no	no
;	no	no
executor	no	yes
.	no	no
execute	no	yes
(	no	no
downTask	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
cdlIn	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
cdlOut	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
upTask	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ExecutionException	no	no
|	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no

}	no	no
cdlOut	no	yes
.	no	no
countDown	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
allocTasks	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Object	no	yes
result	no	yes
=	no	no
allocTasks	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
tt	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
tt	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
t	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
a	no	yes
.	no	no
dumpTestLog	no	yes
(	no	no
)	no	no
;	no	no
t	yes	yes
=	no	no
tt	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
dumpTask	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
defragTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
defragStopped	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
defragTask	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no

catch	no	no
(	no	no
Throwable	no	no
tt	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
tt	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
t	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
a	yes	yes
.	no	no
dumpTestLog	no	yes
(	no	no
)	no	no
;	no	no
t	no	yes
=	no	no
tt	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
dumpTask	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
defragTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
defragStopped	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
defragTask	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
tt	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
t	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
a	yes	yes
.	no	no
dumpTestLog	no	yes
(	no	no
)	no	no
;	no	no
t	no	yes
=	no	no
tt	no	yes
;	no	no

public	no	no
static	no	no
FutureTask	no	no
<	no	no
Void	no	no
>	no	no
createAllocatorDumpTask	no	no
(	no	no
final	no	no
BuddyAllocator	no	no
a	yes	no
)	no	no
{	no	no
return	no	no
new	no	no
FutureTask	no	no
<	no	no
Void	no	no
>	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
Void	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Void	no	no
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
int	no	no
logs	no	yes
=	no	no
40000	no	no
;	no	no
while	no	no
(	no	no
(	no	no
--	no	no
logs	no	yes
)	no	no
>=	no	no
0	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
runCustomDiscard	no	no
(	no	no
BuddyAllocator	no	no
a	yes	yes
,	no	no
int	no	no
[	no	no
]	no	no
sizes	no	yes
,	no	no
int	no	no
[	no	no
]	no	no
dealloc	no	yes
,	no	no
int	no	no
size	no	yes
)	no	no
{	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
prepareCustomFragmentedAllocator	no	yes
(	no	no
a	yes	yes
,	no	no
sizes	no	yes
,	no	no
dealloc	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LlapAllocatorBuffer	no	yes
after	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
1	no	no
,	no	no
size	no	yes
,	no	no
initial	no	yes
.	no	no
length	no	yes
+	no	no
1	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no

private	no	no
static	no	no
void	no	no
runZebraDiscard	no	no
(	no	no
BuddyAllocator	no	no
a	yes	yes
,	no	no
int	no	no
baseSize	no	yes
,	no	no
int	no	no
pairCount	no	yes
,	no	no
int	no	no
allocs	no	yes
)	no	no
{	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
prepareZebraFragmentedAllocator	no	yes
(	no	no
a	yes	yes
,	no	no
baseSize	no	yes
,	no	no
pairCount	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
int	no	no
allocFraction	no	yes
=	no	no
allocs	no	yes
*	no	no
2	no	no
;	no	no
int	no	no
bigAllocSize	no	yes
=	no	no
pairCount	no	yes
*	no	no
2	no	no
*	no	no
baseSize	no	yes
/	no	no
allocFraction	no	yes
;	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
after	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
allocs	no	yes
,	no	no
bigAllocSize	no	yes
,	no	no
1	no	no
+	no	no
initial	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
runSimple1to2Discard	no	no
(	no	no
BuddyAllocator	no	no
a	yes	yes
,	no	no
int	no	no
baseSize	no	yes
)	no	no
{	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
prepareSimpleFragmentedAllocator	no	yes
(	no	no
a	yes	yes
,	no	no
baseSize	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
after	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
1	no	no
,	no	no
baseSize	no	yes
*	no	no
2	no	no
,	no	no
1	no	no
+	no	no
initial	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
prepareSimpleFragmentedAllocator	no	no
(	no	no
BuddyAllocator	no	no
a	yes	yes
,	no	no
int	no	no
baseSize	no	yes
,	no	no
boolean	no	no
doIncRef	no	yes
)	no	no
{	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
4	no	no
,	no	no
baseSize	no	yes
,	no	no
1	no	no
,	no	no
doIncRef	no	yes
)	no	no
;	no	no
checkInitialValues	no	yes
(	no	no
initial	no	yes
,	no	no
0	no	no
,	no	no
2	no	no
)	no	no
;	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
3	no	no
]	no	no
)	no	no
;	no	no

private	no	no
void	no	no
runSmallBlockersDiscard	no	no
(	no	no
BuddyAllocator	no	no
a	yes	yes
,	no	no
int	no	no
baseSize	no	yes
,	no	no
boolean	no	no
deallocOneFirst	no	yes
,	no	no
boolean	no	no
deallocOneSecond	no	yes
)	no	no
{	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
prepareAllocatorWithSmallFragments	no	yes
(	no	no
a	yes	yes
,	no	no
baseSize	no	yes
,	no	no
deallocOneFirst	no	yes
,	no	no
deallocOneSecond	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
int	no	no
bigAllocSize	no	yes
=	no	no
baseSize	no	yes
*	no	no
4	no	no
;	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
after	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
1	no	no
,	no	no
bigAllocSize	no	yes
,	no	no
1	no	no
+	no	no
initial	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no

int	no	no
offset	no	yes
=	no	no
0	no	no
;	no	no
LlapAllocatorBuffer	no	yes
[	no	no
]	no	no
initial	no	yes
=	no	no
new	no	no
LlapAllocatorBuffer	no	yes
[	no	no
6	no	no
]	no	no
;	no	no
initial	no	yes
[	no	no
offset	no	yes
++	no	no
]	no	no
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
1	no	no
,	no	no
baseSize	no	yes
*	no	no
2	no	no
,	no	no
offset	no	yes
+	no	no
1	no	no
,	no	no
doIncRef	no	yes
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
MemoryBuffer	no	yes
[	no	no
]	no	no
tmp	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
2	no	no
,	no	no
baseSize	no	yes
,	no	no
offset	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
arraycopy	no	yes
(	no	no
tmp	no	yes
,	no	no
0	no	no
,	no	no
initial	no	yes
,	no	no
offset	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
offset	no	yes
+=	no	no
2	no	no
;	no	no
initial	no	yes
[	no	no
offset	no	yes
++	no	no
]	no	no
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
1	no	no
,	no	no
baseSize	no	yes
*	no	no
2	no	no
,	no	no
offset	no	yes
+	no	no
1	no	no
,	no	no
doIncRef	no	yes
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
tmp	no	yes
=	no	no
allocate	no	yes
(	no	no
a	yes	yes
,	no	no
2	no	no
,	no	no
baseSize	no	yes
,	no	no
offset	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
arraycopy	no	yes
(	no	no
tmp	no	yes
,	no	no
0	no	no
,	no	no
initial	no	yes
,	no	no
offset	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
deallocOneFirst	no	no
)	no	no
{	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
deallocOneSecond	no	no
)	no	no
{	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
5	no	no
]	no	no
)	no	no
;	no	no
}	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
a	yes	yes
.	no	no
deallocate	no	yes
(	no	no
initial	no	yes
[	no	no
3	no	no
]	no	no
)	no	no
;	no	no

private	no	no
int	no	no
runEstimate	no	no
(	no	no
Object	no	no
obj	no	yes
,	no	no
JavaDataModel	no	no
memModel	no	no
,	no	no
String	no	no
desc	no	no
)	no	no
{	no	no
HashMap	no	yes
<	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
ObjectEstimator	no	yes
>	no	no
map	no	yes
=	no	no
IncrementalObjectSizeEstimator	no	yes
.	no	no
createEstimators	no	yes
(	no	no
obj	no	yes
)	no	no
;	no	no
ObjectEstimator	no	yes
root	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
obj	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
estimate	yes	yes
=	no	no
root	no	yes
.	no	no
estimate	yes	yes
(	no	no
obj	no	yes
,	no	no
map	no	yes
)	no	no
;	no	no

long	no	no
fileId	no	yes
=	no	no
isFirstFile	no	yes
?	no	no
fn1	no	yes
:	no	no
fn2	no	yes
;	no	no
head	no	yes
=	no	no
cache	no	yes
.	no	no
getFileData	no	yes
(	no	no
fileId	no	yes
,	no	no
head	no	yes
,	no	no
0	no	no
,	no	no
testFactory	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
DiskRange	no	yes
[	no	no
]	no	no
results	no	yes
=	no	no
head	no	yes
.	no	no
listToArray	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
startIndex	no	yes
=	no	no
rdm	no	yes
.	no	no
nextInt	no	yes
(	no	no
results	no	yes
.	no	no
length	no	yes
)	no	no
,	no	no
index	no	yes
=	no	no
startIndex	no	yes
;	no	no
LlapDataBuffer	no	yes
victim	no	yes
=	no	no
null	no	no
;	no	no
do	no	no
{	no	no
DiskRange	no	yes
r	no	yes
=	no	no
results	no	yes
[	no	no
index	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
r	no	yes
instanceof	no	no
CacheChunk	no	yes
)	no	no
{	no	no
LlapDataBuffer	no	yes
result	no	yes
=	no	no
(	no	no
LlapDataBuffer	no	yes
)	no	no
(	no	no
(	no	no
CacheChunk	no	yes
)	no	no
r	no	yes
)	no	no
.	no	no
getBuffer	no	yes
(	no	no
)	no	no
;	no	no
cache	no	yes
.	no	no
decRefBuffer	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
victim	no	yes
==	no	no
null	no	no
&&	no	no
result	no	yes
.	no	no
invalidate	no	no
(	no	no
)	no	no
==	no	no
LlapCacheableBuffer	no	no
.	no	no
INVALIDATE_OK	no	no
)	no	no
{	no	no
++	no	no
evictions	yes	yes
;	no	no
victim	no	yes
=	no	no
result	no	yes
;	no	no
}	no	no
}	no	no
++	no	no
index	no	yes
;	no	no
if	no	no
(	no	no
index	no	yes
==	no	no
results	no	yes
.	no	no
length	no	yes
)	no	no
index	no	yes
=	no	no
0	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testPurge	no	no
(	no	no
)	no	no
{	no	no
final	no	no
int	no	no
HEAP_SIZE	no	yes
=	no	no
32	no	no
;	no	no
Configuration	no	yes
conf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setFloat	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_LRFU_LAMBDA	no	yes
.	no	no
varname	no	yes
,	no	no
0.2f	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setInt	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_LRFU_BP_WRAPPER_SIZE	no	yes
.	no	no
varname	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
EvictionTracker	no	yes
et	no	yes
=	no	no
new	no	no
EvictionTracker	no	yes
(	no	no
)	no	no
;	no	no
LowLevelLrfuCachePolicy	no	yes
lrfu	no	yes
=	no	no
new	no	no
LowLevelLrfuCachePolicy	no	yes
(	no	no
1	no	no
,	no	no
HEAP_SIZE	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
MetricsMock	no	yes
m	no	yes
=	no	no
createMetricsMock	no	yes
(	no	no
)	no	no
;	no	no
LowLevelCacheMemoryManager	no	yes
mm	no	yes
=	no	no
new	no	no
LowLevelCacheMemoryManager	no	yes
(	no	no
HEAP_SIZE	no	yes
,	no	no
lrfu	no	yes
,	no	no
m	no	yes
.	no	no
metricsMock	no	yes
)	no	no
;	no	no
lrfu	no	yes
.	no	no
setEvictionListener	no	yes
(	no	no
et	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
lrfu	no	yes
.	no	no
purge	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
testSize	yes	no
=	no	no
1	no	no
;	no	no
testSize	yes	no
<=	no	no
HEAP_SIZE	no	yes
;	no	no
++	no	no
testSize	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
testHeapSize	no	no
(	no	no
int	no	no
heapSize	yes	no
)	no	no
{	no	no

LlapDataBuffer	no	yes
buffer	no	yes
=	no	no
LowLevelCacheImpl	no	yes
.	no	no
allocateFake	no	yes
(	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
cache	no	yes
(	no	no
mm	no	yes
,	no	no
lrfu	no	yes
,	no	no
et	no	yes
,	no	no
buffer	no	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
(	no	no
long	no	no
)	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
i	no	yes
+	no	no
1	no	no
,	no	no
heapSize	no	yes
)	no	no
,	no	no
m	no	yes
.	no	no
cacheUsed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LlapDataBuffer	no	yes
evictedBuf	no	yes
=	no	no
getOneEvictedBuffer	no	yes
(	no	no
et	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
i	no	yes
<	no	no
toEvict	no	no
)	no	no
{	no	no
evicted	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
buffer	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
i	no	yes
>=	no	no
heapSize	no	yes
)	no	no
{	no	no
assertSame	no	yes
(	no	no
evicted	no	yes
[	no	no
i	no	yes
-	no	no
heapSize	no	yes
]	no	no
,	no	no
evictedBuf	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
evictedBuf	no	yes
.	no	no
isInvalid	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
assertNull	no	yes
(	no	no
evictedBuf	no	yes
)	no	no
;	no	no
}	no	no
inserted	yes	yes
.	no	no
add	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dumpInserted	no	yes
(	no	no
inserted	yes	yes
)	no	no
)	no	no
;	no	no
Collections	no	yes
.	no	no
shuffle	no	yes
(	no	no
inserted	yes	yes
,	no	no
rdm	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
serviceInit	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
int	no	no
rpcPort	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
externalClientCloudRpcPort	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
mngPort	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
shufflePort	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
webPort	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
outputFormatServicePort	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
usePortsFromConf	yes	yes
=	no	no
conf	no	yes
.	no	no
getBoolean	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no

shufflePort	no	yes
=	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
ShuffleHandler	no	yes
.	no	no
SHUFFLE_PORT_CONFIG_KEY	no	yes
,	no	no
ShuffleHandler	no	yes
.	no	no
DEFAULT_SHUFFLE_PORT	no	yes
)	no	no
;	no	no
webPort	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_WEB_PORT	no	yes
)	no	no
;	no	no
outputFormatServicePort	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_OUTPUT_SERVICE_PORT	no	yes
)	no	no
;	no	no
}	no	no
HiveConf	no	yes
.	no	no
setIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_OUTPUT_SERVICE_PORT	no	yes
,	no	no
outputFormatServicePort	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ownZkCluster	no	no
)	no	no
{	no	no
miniZooKeeperCluster	no	yes
=	no	no
new	no	no
MiniZooKeeperCluster	no	yes
(	no	no
)	no	no
;	no	no
miniZooKeeperCluster	no	yes
.	no	no
startup	no	yes
(	no	no
zkWorkDir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
}	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
.	no	no
varname	no	yes
,	no	no
+	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_QUORUM	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_CLIENT_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
miniZooKeeperCluster	no	yes
.	no	no
getClientPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
.	no	no
varname	no	yes
,	no	no
+	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_QUORUM	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
setInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_CLIENT_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
miniZooKeeperCluster	no	yes
.	no	no
getClientPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
externalClientCloudSetupEnabled	no	yes
=	no	no
LlapUtil	no	yes
.	no	no
isCloudDeployment	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
ownZkCluster	no	no
)	no	no
{	no	no
miniZooKeeperCluster	no	yes
=	no	no
new	no	no
MiniZooKeeperCluster	no	yes
(	no	no
)	no	no
;	no	no
miniZooKeeperCluster	no	yes
.	no	no
startup	no	yes
(	no	no
zkWorkDir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
}	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
.	no	no
varname	no	yes
,	no	no
+	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_QUORUM	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_CLIENT_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
miniZooKeeperCluster	no	yes
.	no	no
getClientPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
.	no	no
varname	no	yes
,	no	no
+	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_QUORUM	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
clusterSpecificConfiguration	no	yes
.	no	no
setInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_CLIENT_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
miniZooKeeperCluster	no	yes
.	no	no
getClientPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
externalClientCloudSetupEnabled	no	yes
=	no	no
LlapUtil	no	yes
.	no	no
isCloudDeployment	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
numInstances	yes	yes
,	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numInstances	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
llapDaemons	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
new	no	no
LlapDaemon	no	yes
(	no	no
conf	no	yes
,	no	no
numExecutorsPerService	no	yes
,	no	no
execBytesPerService	no	yes
,	no	no
llapIoEnabled	no	yes
,	no	no
ioIsDirect	no	yes
,	no	no
ioBytesPerService	no	yes
,	no	no
localDirs	no	yes
,	no	no
rpcPort	no	yes
,	no	no
externalClientCloudSetupEnabled	no	yes
,	no	no
externalClientCloudRpcPort	no	yes
,	no	no
mngPort	no	yes
,	no	no
shufflePort	no	yes
,	no	no
webPort	no	yes
,	no	no
clusterNameTrimmed	yes	yes
)	no	no
;	no	no
llapDaemons	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
init	no	yes
(	no	no
new	no	no
Configuration	no	yes
(	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
logInfo	no	no
(	no	no
String	no	no
message	yes	no
,	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
launchContainer	no	no
(	no	no
ContainerLaunchRequest	no	no
containerLaunchRequest	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
stopContainer	no	no
(	no	no
ContainerStopRequest	no	no
containerStopRequest	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
super	no	no
.	no	no
initialize	no	yes
(	no	no
)	no	no
;	no	no
Configuration	no	yes
conf	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numThreads	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_COMMUNICATOR_NUM_THREADS	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
communicator	no	yes
=	no	no
createLlapProtocolClientProxy	no	yes
(	no	no
numThreads	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
deleteDelayOnDagComplete	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_FILE_CLEANUP_DELAY_SECONDS	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
startRpcServer	no	no
(	no	no
)	no	no
{	no	no
Configuration	no	yes
conf	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
JobTokenSecretManager	no	yes
jobTokenSecretManager	no	yes
=	no	no
new	no	no
JobTokenSecretManager	no	yes
(	no	no
)	no	no
;	no	no
jobTokenSecretManager	no	yes
.	no	no
addTokenForJob	no	yes
(	no	no
tokenIdentifier	no	yes
,	no	no
sessionToken	no	yes
)	no	no
;	no	no
int	no	no
numHandlers	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_TASK_COMMUNICATOR_LISTENER_THREAD_COUNT	no	yes
)	no	no
;	no	no
int	no	no
umbilicalPort	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_TASK_UMBILICAL_SERVER_PORT	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
umbilicalPort	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
umbilicalPort	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
server	no	yes
=	no	no
new	no	no
RPC	no	yes
.	no	no
Builder	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
setProtocol	no	yes
(	no	no
LlapTaskUmbilicalProtocol	no	yes
.	no	no
class	no	no
)	no	no
.	no	no
setBindAddress	no	yes
(	no	no
)	no	no
.	no	no
setPort	no	yes
(	no	no
umbilicalPort	no	yes
)	no	no
.	no	no
setInstance	no	yes
(	no	no
umbilical	no	yes
)	no	no
.	no	no
setNumHandlers	no	yes
(	no	no
numHandlers	yes	yes
)	no	no
.	no	no
setSecretManager	no	yes
(	no	no
jobTokenSecretManager	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
getBoolean	no	no
(	no	no
CommonConfigurationKeysPublic	no	no
.	no	no
HADOOP_SECURITY_AUTHORIZATION	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
server	no	yes
.	no	no
refreshServiceAcl	no	yes
(	no	no
conf	no	yes
,	no	no
new	no	no
LlapUmbilicalPolicyProvider	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
server	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
this	no	no
.	no	no
address	yes	yes
=	no	no
NetUtils	no	yes
.	no	no
getConnectAddress	no	yes
(	no	no
server	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
amHost	yes	yes
=	no	no
LlapUtil	no	yes
.	no	no
getAmHostNameFromAddress	no	yes
(	no	no
address	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
registerContainerEnd	no	yes
(	no	no
ContainerId	no	no
containerId	yes	yes
,	no	no
ContainerEndReason	no	no
endReason	no	yes
,	no	no
String	no	no
diagnostics	no	yes
)	no	no
{	no	no
super	no	no
.	no	no
registerContainerEnd	no	yes
(	no	no
containerId	yes	yes
,	no	no
endReason	no	yes
,	no	no
diagnostics	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
endReason	no	yes
==	no	no
ContainerEndReason	no	no
.	no	no
INTERNAL_PREEMPTION	no	no
)	no	no
{	no	no

ContainerInfo	no	yes
containerInfo	no	yes
=	no	no
getContainerInfo	no	yes
(	no	no
containerId	yes	yes
)	no	no
;	no	no
String	no	yes
host	no	yes
;	no	no
int	no	no
port	no	yes
;	no	no
if	no	no
(	no	no
containerInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
containerInfo	no	yes
)	no	no
{	no	no
host	no	yes
=	no	no
containerInfo	no	yes
.	no	no
host	no	yes
;	no	no
port	no	yes
=	no	no
containerInfo	no	yes
.	no	no
port	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
containerId	yes	yes
+	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LlapNodeId	no	yes
nodeId	no	yes
=	no	no
LlapNodeId	no	yes
.	no	no
getInstance	no	yes
(	no	no
host	no	yes
,	no	no
port	no	yes
)	no	no
;	no	no
registerKnownNode	no	yes
(	no	no
nodeId	no	yes
)	no	no
;	no	no
entityTracker	no	yes
.	no	no
registerTaskAttempt	no	yes
(	no	no
containerId	yes	yes
,	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
host	no	yes
,	no	no
port	no	yes
)	no	no
;	no	no
nodesForQuery	no	yes
.	no	no
add	no	yes
(	no	no
nodeId	no	yes
)	no	no
;	no	no
sourceStateTracker	no	yes
.	no	no
registerTaskForStateUpdates	no	yes
(	no	no
host	no	yes
,	no	no
port	no	yes
,	no	no
taskSpec	yes	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FragmentRuntimeInfo	no	yes
fragmentRuntimeInfo	no	yes
;	no	no

sourceStateTracker	no	yes
.	no	no
registerTaskForStateUpdates	no	yes
(	no	no
host	no	yes
,	no	no
port	no	yes
,	no	no
taskSpec	yes	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FragmentRuntimeInfo	no	yes
fragmentRuntimeInfo	no	yes
;	no	no
try	no	no
{	no	no
fragmentRuntimeInfo	no	yes
=	no	no
sourceStateTracker	no	yes
.	no	no
getFragmentRuntimeInfo	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getVertexName	no	yes
(	no	no
)	no	no
,	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
.	no	no
getTaskID	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
,	no	no
priority	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
containerId	yes	yes
,	no	no
currentQueryIdentifierProto	no	yes
,	no	no
currentHiveQueryId	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
e	no	yes
instanceof	no	no
RuntimeException	no	yes
)	no	no
{	no	no
throw	no	no
(	no	no
RuntimeException	no	yes
)	no	no
e	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
SubmitWorkRequestProto	no	yes
requestProto	no	yes
;	no	no
try	no	no
{	no	no
requestProto	no	yes
=	no	no
constructSubmitWorkRequest	no	yes
(	no	no
containerId	yes	yes
,	no	no
taskSpec	yes	yes
,	no	no
fragmentRuntimeInfo	no	yes
,	no	no
currentHiveQueryId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no

throw	no	no
(	no	no
RuntimeException	no	yes
)	no	no
e	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
SubmitWorkRequestProto	no	yes
requestProto	no	yes
;	no	no
try	no	no
{	no	no
requestProto	no	yes
=	no	no
constructSubmitWorkRequest	no	yes
(	no	no
containerId	no	yes
,	no	no
taskSpec	yes	yes
,	no	no
fragmentRuntimeInfo	no	yes
,	no	no
currentHiveQueryId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskStartedRemotely	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
containerId	no	yes
)	no	no
;	no	no
communicator	no	no
.	no	no
sendSubmitWork	no	no
(	no	no
requestProto	no	yes
,	no	no
host	no	no
,	no	no
port	no	no
,	no	no
new	no	no
LlapProtocolClientProxy	no	no
.	no	no
ExecuteRequestCallback	no	no
<	no	no
SubmitWorkResponseProto	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
setResponse	no	no
(	no	no
SubmitWorkResponseProto	no	no
response	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
hasSubmissionState	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
ss	no	yes
=	no	no
response	no	yes
.	no	no
getSubmissionState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
.	no	no
equals	no	no
(	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
.	no	no
REJECTED	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
containerId	no	yes
+	no	no
)	no	no
;	no	no

try	no	no
{	no	no
requestProto	no	yes
=	no	no
constructSubmitWorkRequest	no	yes
(	no	no
containerId	yes	yes
,	no	no
taskSpec	yes	yes
,	no	no
fragmentRuntimeInfo	no	yes
,	no	no
currentHiveQueryId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskStartedRemotely	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
containerId	yes	yes
)	no	no
;	no	no
communicator	no	no
.	no	no
sendSubmitWork	no	no
(	no	no
requestProto	no	yes
,	no	no
host	no	no
,	no	no
port	no	no
,	no	no
new	no	no
LlapProtocolClientProxy	no	no
.	no	no
ExecuteRequestCallback	no	no
<	no	no
SubmitWorkResponseProto	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
setResponse	no	no
(	no	no
SubmitWorkResponseProto	no	no
response	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
hasSubmissionState	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
ss	no	yes
=	no	no
response	no	yes
.	no	no
getSubmissionState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
.	no	no
equals	no	no
(	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
.	no	no
REJECTED	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
containerId	yes	yes
+	no	no
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskKilled	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
TaskAttemptEndReason	no	yes
.	no	no
EXECUTOR_BUSY	no	yes
,	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskStartedRemotely	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
containerId	yes	yes
)	no	no
;	no	no
communicator	no	no
.	no	no
sendSubmitWork	no	no
(	no	no
requestProto	no	no
,	no	no
host	no	no
,	no	no
port	no	no
,	no	no
new	no	no
LlapProtocolClientProxy	no	no
.	no	no
ExecuteRequestCallback	no	no
<	no	no
SubmitWorkResponseProto	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
setResponse	no	no
(	no	no
SubmitWorkResponseProto	no	no
response	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
hasSubmissionState	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
ss	no	yes
=	no	no
response	no	yes
.	no	no
getSubmissionState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
.	no	no
equals	no	no
(	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
.	no	no
REJECTED	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
containerId	yes	yes
+	no	no
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskKilled	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
TaskAttemptEndReason	no	yes
.	no	no
EXECUTOR_BUSY	no	yes
,	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
hasUniqueNodeId	no	no
(	no	no
)	no	no
)	no	no
{	no	no
entityTracker	no	yes
.	no	no
registerTaskSubmittedToNode	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
response	no	yes
.	no	no
getUniqueNodeId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scheduler	no	yes
.	no	no
notifyStarted	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
response	no	yes
.	no	no
hasSubmissionState	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
ss	no	yes
=	no	no
response	no	yes
.	no	no
getSubmissionState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
.	no	no
equals	no	no
(	no	no
LlapDaemonProtocolProtos	no	yes
.	no	no
SubmissionStateProto	no	yes
.	no	no
REJECTED	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
containerId	yes	yes
+	no	no
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskKilled	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
TaskAttemptEndReason	no	yes
.	no	no
EXECUTOR_BUSY	no	yes
,	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
hasUniqueNodeId	no	no
(	no	no
)	no	no
)	no	no
{	no	no
entityTracker	no	yes
.	no	no
registerTaskSubmittedToNode	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
,	no	no
response	no	yes
.	no	no
getUniqueNodeId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scheduler	no	yes
.	no	no
notifyStarted	no	yes
(	no	no
taskSpec	yes	yes
.	no	no
getTaskAttemptID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
indicateError	no	no
(	no	no
Throwable	no	yes
t	yes	yes
)	no	no
{	no	no
Throwable	no	yes
originalError	no	yes
=	no	no
t	yes	yes
;	no	no
if	no	no
(	no	no
t	yes	yes
instanceof	no	no
ServiceException	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
unregisterRunningTaskAttempt	no	yes
(	no	no
final	no	no
TezTaskAttemptID	no	no
taskAttemptId	yes	yes
,	no	no
TaskAttemptEndReason	no	no
endReason	no	yes
,	no	no
String	no	no
diagnostics	no	yes
)	no	no
{	no	no
super	no	no
.	no	no
unregisterRunningTaskAttempt	no	yes
(	no	no
taskAttemptId	yes	yes
,	no	no
endReason	no	yes
,	no	no
diagnostics	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
endReason	no	yes
==	no	no
TaskAttemptEndReason	no	no
.	no	no
INTERNAL_PREEMPTION	no	no
)	no	no
{	no	no

private	no	no
void	no	no
sendTaskTerminated	no	no
(	no	no
final	no	no
TezTaskAttemptID	no	no
taskAttemptId	yes	no
,	no	no
boolean	no	no
invokedByContainerEnd	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
dagComplete	no	no
(	no	no
final	no	no
int	no	no
dagIdentifier	yes	yes
)	no	no
{	no	no
QueryIdentifierProto	no	yes
queryIdentifierProto	no	yes
=	no	no
constructQueryIdentifierProto	no	yes
(	no	no
dagIdentifier	yes	yes
)	no	no
;	no	no
QueryCompleteRequestProto	no	yes
request	no	yes
=	no	no
QueryCompleteRequestProto	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
setQueryIdentifier	no	yes
(	no	no
queryIdentifierProto	no	yes
)	no	no
.	no	no
setDeleteDelay	no	yes
(	no	no
deleteDelayOnDagComplete	no	yes
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
LlapNodeId	no	no
llapNodeId	yes	no
:	no	no
nodesForQuery	no	no
)	no	no
{	no	no

public	no	no
void	no	no
registerKnownNode	no	no
(	no	no
LlapNodeId	no	no
nodeId	yes	yes
)	no	no
{	no	no
Long	no	yes
old	no	yes
=	no	no
knownNodeMap	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
nodeId	yes	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
convert	no	yes
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
NANOSECONDS	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
registerPingingNode	no	no
(	no	no
LlapNodeId	no	no
nodeId	yes	yes
,	no	no
String	no	no
uniqueId	yes	no
)	no	no
{	no	no
long	no	no
currentTs	no	yes
=	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
convert	no	yes
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
NANOSECONDS	no	yes
)	no	no
;	no	no
PingingNodeInfo	no	yes
ni	no	yes
=	no	no
new	no	no
PingingNodeInfo	no	yes
(	no	no
currentTs	no	yes
)	no	no
;	no	no
PingingNodeInfo	no	yes
old	no	yes
=	no	no
pingedNodeMap	no	yes
.	no	no
put	no	yes
(	no	no
nodeId	yes	yes
,	no	no
ni	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

synchronized	no	no
(	no	no
biMap	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
tasks	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
boolean	no	no
isGuaranteed	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
guaranteed	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
isGuaranteed	no	yes
=	no	no
(	no	no
(	no	no
BooleanWritable	no	yes
)	no	no
guaranteed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
[	no	no
i	no	yes
]	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TezTaskAttemptID	no	yes
attemptID	no	yes
=	no	no
(	no	no
TezTaskAttemptID	no	yes
)	no	no
tasks	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
[	no	no
i	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
biMap	no	yes
.	no	no
containsValue	no	no
(	no	no
attemptID	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
taskNodeId	no	yes
=	no	no
entityTracker	no	yes
.	no	no
getUniqueNodeId	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskNodeId	no	yes
!=	no	no
null	no	no
&&	no	no
taskNodeId	no	yes
.	no	no
equals	no	no
(	no	no
uniqueId	no	no
)	no	no
)	no	no
{	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskAlive	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
scheduler	no	yes
.	no	no
taskInfoUpdated	no	yes
(	no	no
attemptID	no	yes
,	no	no
isGuaranteed	no	yes
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
containerAlive	no	yes
(	no	no
biMap	no	yes
.	no	no
inverse	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
attemptID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
error	yes	yes
.	no	no
add	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
error	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

boolean	no	no
isGuaranteed	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
guaranteed	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
isGuaranteed	no	yes
=	no	no
(	no	no
(	no	no
BooleanWritable	no	yes
)	no	no
guaranteed	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
[	no	no
i	no	yes
]	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TezTaskAttemptID	no	yes
attemptID	no	yes
=	no	no
(	no	no
TezTaskAttemptID	no	yes
)	no	no
tasks	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
[	no	no
i	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
biMap	no	yes
.	no	no
containsValue	no	no
(	no	no
attemptID	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
taskNodeId	no	yes
=	no	no
entityTracker	no	yes
.	no	no
getUniqueNodeId	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskNodeId	no	yes
!=	no	no
null	no	no
&&	no	no
taskNodeId	no	yes
.	no	no
equals	no	no
(	no	no
uniqueId	no	no
)	no	no
)	no	no
{	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
taskAlive	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
scheduler	no	yes
.	no	no
taskInfoUpdated	no	yes
(	no	no
attemptID	no	yes
,	no	no
isGuaranteed	no	yes
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
containerAlive	no	yes
(	no	no
biMap	no	yes
.	no	no
inverse	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
attemptID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
error	no	yes
.	no	no
add	no	yes
(	no	no
attemptID	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
error	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
error	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
TezTaskAttemptID	no	yes
attempt	yes	no
:	no	no
error	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
resetCurrentDag	no	no
(	no	no
int	no	no
newDagId	yes	yes
,	no	no
String	no	no
hiveQueryId	yes	yes
)	no	no
{	no	no
currentQueryIdentifierProto	no	yes
=	no	no
constructQueryIdentifierProto	no	yes
(	no	no
newDagId	yes	yes
)	no	no
;	no	no
currentHiveQueryId	no	yes
=	no	no
hiveQueryId	yes	yes
;	no	no
sourceStateTracker	no	yes
.	no	no
resetState	no	yes
(	no	no
currentQueryIdentifierProto	no	yes
)	no	no
;	no	no
nodesForQuery	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
updateGuaranteedCount	no	no
(	no	no
int	no	no
newTotalGuaranteed	yes	yes
)	no	no
{	no	no
List	no	yes
<	no	no
TaskInfo	no	yes
>	no	no
toUpdate	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
tgVersionForZk	yes	yes
;	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
delta	yes	yes
=	no	no
newTotalGuaranteed	yes	yes
-	no	no
totalGuaranteed	no	yes
;	no	no
tgVersionForZk	yes	yes
=	no	no
++	no	no
totalGuaranteedVersion	no	yes
;	no	no

long	no	no
tgVersionForZk	no	yes
;	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
delta	no	yes
=	no	no
newTotalGuaranteed	no	yes
-	no	no
totalGuaranteed	no	yes
;	no	no
tgVersionForZk	no	yes
=	no	no
++	no	no
totalGuaranteedVersion	no	yes
;	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
newTotalGuaranteed	no	yes
+	no	no
+	no	no
tgVersionForZk	no	yes
+	no	no
+	no	no
delta	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
delta	no	yes
==	no	no
0	no	no
)	no	no
return	no	no
;	no	no
totalGuaranteed	no	yes
=	no	no
newTotalGuaranteed	no	yes
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmTotalGuaranteed	no	yes
(	no	no
totalGuaranteed	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
delta	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
unusedGuaranteed	no	no
==	no	no
0	no	no
)	no	no
{	no	no
toUpdate	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
totalUpdated	yes	yes
=	no	no
distributeGuaranteed	no	yes
(	no	no
delta	no	yes
,	no	no
null	no	no
,	no	no
toUpdate	no	yes
)	no	no
;	no	no
delta	no	yes
-=	no	no
totalUpdated	yes	yes
;	no	no

if	no	no
(	no	no
unusedGuaranteed	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
toUpdate	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
totalUpdated	no	yes
=	no	no
distributeGuaranteed	no	yes
(	no	no
delta	yes	yes
,	no	no
null	no	no
,	no	no
toUpdate	no	yes
)	no	no
;	no	no
delta	yes	yes
-=	no	no
totalUpdated	no	yes
;	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
totalUpdated	no	yes
)	no	no
;	no	no
}	no	no
int	no	no
result	yes	yes
=	no	no
(	no	no
unusedGuaranteed	no	yes
+=	no	no
delta	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmUnusedGuaranteed	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no
}	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	yes	yes
+	no	no
+	no	no
delta	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
delta	yes	yes
=	no	no
-	no	no
delta	yes	yes
;	no	no
if	no	no
(	no	no
delta	yes	yes
<=	no	no
unusedGuaranteed	no	yes
)	no	no
{	no	no
int	no	no
result	yes	yes
=	no	no
(	no	no
unusedGuaranteed	no	yes
-=	no	no
delta	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmUnusedGuaranteed	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no

}	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
+	no	no
+	no	no
delta	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
delta	yes	yes
=	no	no
-	no	no
delta	yes	yes
;	no	no
if	no	no
(	no	no
delta	yes	yes
<=	no	no
unusedGuaranteed	no	yes
)	no	no
{	no	no
int	no	no
result	no	yes
=	no	no
(	no	no
unusedGuaranteed	no	yes
-=	no	no
delta	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmUnusedGuaranteed	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
+	no	no
+	no	no
delta	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
delta	yes	yes
-=	no	no
unusedGuaranteed	no	yes
;	no	no
unusedGuaranteed	no	yes
=	no	no
0	no	no
;	no	no
toUpdate	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
totalUpdated	yes	yes
=	no	no
revokeGuaranteed	no	yes
(	no	no
delta	yes	yes
,	no	no
null	no	no
,	no	no
toUpdate	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

int	no	no
result	no	yes
=	no	no
(	no	no
unusedGuaranteed	no	yes
-=	no	no
delta	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmUnusedGuaranteed	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
+	no	no
+	no	no
delta	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
delta	no	yes
-=	no	no
unusedGuaranteed	no	yes
;	no	no
unusedGuaranteed	no	yes
=	no	no
0	no	no
;	no	no
toUpdate	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
totalUpdated	no	yes
=	no	no
revokeGuaranteed	no	yes
(	no	no
delta	no	yes
,	no	no
null	no	no
,	no	no
toUpdate	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
metrics	no	yes
.	no	no
setWmUnusedGuaranteed	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
WM_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
totalUpdated	no	yes
+	no	no
+	no	no
delta	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
delta	no	yes
!=	no	no
totalUpdated	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
+	no	no
delta	no	yes
+	no	no
)	no	no
;	no	no

private	no	no
void	no	no
startTimeoutMonitor	no	no
(	no	no
)	no	no
{	no	no
timeoutLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
(	no	no
timeoutFuture	no	yes
==	no	no
null	no	no
||	no	no
(	no	no
timeoutFuture	no	yes
!=	no	no
null	no	no
&&	no	no
timeoutFuture	no	yes
.	no	no
isDone	no	no
(	no	no
)	no	no
)	no	no
)	no	no
&&	no	no
activeInstances	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
timeoutFuture	no	yes
=	no	no
timeoutExecutor	no	yes
.	no	no
schedule	no	yes
(	no	no
timeoutMonitor	no	yes
,	no	no
timeout	yes	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
timeoutFutureRef	no	yes
.	no	no
set	no	yes
(	no	no
timeoutFuture	no	yes
)	no	no
;	no	no

TreeSet	no	yes
<	no	no
TaskInfo	no	yes
>	no	no
set	no	yes
=	no	no
speculativeTasks	no	yes
.	no	no
get	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
set	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
set	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
speculativeTasks	no	yes
.	no	no
put	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
set	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
TaskInfo	no	yes
info	no	yes
:	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
info	no	yes
)	no	no
{	no	no
info	no	yes
.	no	no
isGuaranteed	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
set	no	yes
.	no	no
add	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
guaranteedTasks	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Integer	no	no
,	no	no
TreeSet	no	yes
<	no	no
TaskInfo	no	yes
>>	no	no
entry	no	yes
:	no	no
speculativeTasks	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
runningCount	yes	yes
+=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
totalGuaranteed	no	yes
=	no	no
unusedGuaranteed	no	yes
=	no	no
0	no	no
;	no	no
tgVersionForZk	no	yes
=	no	no
++	no	no
totalGuaranteedVersion	no	yes
;	no	no
if	no	no
(	no	no
metrics	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
allocateTask	no	no
(	no	no
Object	no	no
task	yes	yes
,	no	no
Resource	no	no
capability	yes	yes
,	no	no
String	no	no
[	no	no
]	no	no
hosts	yes	yes
,	no	no
String	no	no
[	no	no
]	no	no
racks	no	yes
,	no	no
Priority	no	no
priority	yes	yes
,	no	no
Object	no	no
containerSignature	no	no
,	no	no
Object	no	no
clientCookie	no	yes
)	no	no
{	no	no
TezTaskAttemptID	no	yes
id	no	yes
=	no	no
getTaskAttemptId	no	yes
(	no	no
task	yes	yes
)	no	no
;	no	no
TaskInfo	no	yes
taskInfo	no	yes
=	no	no
new	no	no
TaskInfo	no	yes
(	no	no
localityDelayConf	no	yes
,	no	no
clock	no	yes
,	no	no
task	yes	yes
,	no	no
clientCookie	no	yes
,	no	no
priority	yes	yes
,	no	no
capability	yes	yes
,	no	no
hosts	yes	yes
,	no	no
racks	no	yes
,	no	no
clock	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
,	no	no
id	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
allocateTask	no	no
(	no	no
Object	no	no
task	yes	yes
,	no	no
Resource	no	no
capability	yes	yes
,	no	no
ContainerId	no	no
containerId	yes	no
,	no	no
Priority	no	no
priority	yes	yes
,	no	no
Object	no	no
containerSignature	no	no
,	no	no
Object	no	no
clientCookie	no	yes
)	no	no
{	no	no
TezTaskAttemptID	no	yes
id	no	yes
=	no	no
getTaskAttemptId	no	yes
(	no	no
task	yes	yes
)	no	no
;	no	no
TaskInfo	no	yes
taskInfo	no	yes
=	no	no
new	no	no
TaskInfo	no	yes
(	no	no
localityDelayConf	no	yes
,	no	no
clock	no	yes
,	no	no
task	yes	yes
,	no	no
clientCookie	no	yes
,	no	no
priority	yes	yes
,	no	no
capability	yes	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
clock	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
,	no	no
id	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
deallocateContainer	no	no
(	no	no
ContainerId	no	no
containerId	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
SelectHostResult	no	no
selectHost	no	no
(	no	no
TaskInfo	no	no
request	yes	yes
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
requestedHosts	no	yes
=	no	no
request	yes	yes
.	no	no
requestedHosts	no	yes
;	no	no
String	no	yes
requestedHostsDebugStr	yes	yes
=	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
requestedHosts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

long	no	no
schedulerAttemptTime	no	yes
=	no	no
clock	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
;	no	no
readLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
boolean	no	no
shouldDelayForLocality	no	yes
=	no	no
request	no	yes
.	no	no
shouldDelayForLocality	no	yes
(	no	no
schedulerAttemptTime	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
shouldDelayForLocality	no	yes
,	no	no
request	no	yes
.	no	no
task	no	yes
,	no	no
requestedHostsDebugStr	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isRequestedHostPresent	no	no
(	no	no
request	no	yes
)	no	no
)	no	no
{	no	no
int	no	no
prefHostCount	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
boolean	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
String	no	no
host	yes	yes
:	no	no
requestedHosts	yes	no
)	no	no
{	no	no
prefHostCount	no	yes
++	no	no
;	no	no
Set	no	yes
<	no	no
LlapServiceInstance	no	yes
>	no	no
instances	no	yes
=	no	no
activeInstances	no	yes
.	no	no
getByHost	no	yes
(	no	no
host	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
instances	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
LlapServiceInstance	no	yes
inst	no	yes
:	no	no
instances	no	yes
)	no	no
{	no	no
NodeInfo	no	yes
nodeInfo	yes	yes
=	no	no
instanceToNodeMap	no	yes
.	no	no
get	no	yes
(	no	no
inst	no	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nodeInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

for	no	no
(	no	no
String	no	no
host	no	yes
:	no	no
requestedHosts	no	yes
)	no	no
{	no	no
prefHostCount	no	yes
++	no	no
;	no	no
Set	no	yes
<	no	no
LlapServiceInstance	no	yes
>	no	no
instances	no	yes
=	no	no
activeInstances	no	yes
.	no	no
getByHost	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
instances	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
LlapServiceInstance	no	yes
inst	no	yes
:	no	no
instances	no	yes
)	no	no
{	no	no
NodeInfo	no	yes
nodeInfo	yes	yes
=	no	no
instanceToNodeMap	no	yes
.	no	no
get	no	yes
(	no	no
inst	no	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nodeInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
nodeInfo	yes	yes
.	no	no
canAcceptTask	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
nodeInfo	yes	yes
.	no	no
toShortString	no	yes
(	no	no
)	no	no
,	no	no
host	no	yes
,	no	no
(	no	no
prefHostCount	no	yes
==	no	no
0	no	no
)	no	no
,	no	no
requestedHosts	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
return	no	no
new	no	no
SelectHostResult	no	yes
(	no	no
nodeInfo	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
shouldDelayForLocality	no	no
)	no	no
{	no	no
if	no	no
(	no	no
request	no	no
.	no	no
shouldForceLocality	no	no
(	no	no
)	no	no
)	no	no
{	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
nodeInfo	no	yes
.	no	no
toShortString	no	yes
(	no	no
)	no	no
,	no	no
host	no	yes
,	no	no
(	no	no
prefHostCount	no	yes
==	no	no
0	no	no
)	no	no
,	no	no
requestedHosts	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
return	no	no
new	no	no
SelectHostResult	no	yes
(	no	no
nodeInfo	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
shouldDelayForLocality	no	no
)	no	no
{	no	no
if	no	no
(	no	no
request	yes	no
.	no	no
shouldForceLocality	no	no
(	no	no
)	no	no
)	no	no
{	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
nodeInfo	no	yes
.	no	no
getEnableTime	no	no
(	no	no
)	no	no
>	no	no
request	yes	no
.	no	no
getLocalityDelayTimeout	no	no
(	no	no
)	no	no
&&	no	no
nodeInfo	no	yes
.	no	no
isDisabled	no	no
(	no	no
)	no	no
&&	no	no
nodeInfo	no	yes
.	no	no
hadCommFailure	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
nodeInfo	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
inst	no	yes
,	no	no
host	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldDelayForLocality	no	no
)	no	no
{	no	no
if	no	no
(	no	no
requestedHostsWillBecomeAvailable	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
shouldDelayForLocality	no	no
)	no	no
{	no	no
if	no	no
(	no	no
request	yes	yes
.	no	no
shouldForceLocality	no	no
(	no	no
)	no	no
)	no	no
{	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
nodeInfo	no	yes
.	no	no
getEnableTime	no	no
(	no	no
)	no	no
>	no	no
request	yes	yes
.	no	no
getLocalityDelayTimeout	no	yes
(	no	no
)	no	no
&&	no	no
nodeInfo	no	yes
.	no	no
isDisabled	no	no
(	no	no
)	no	no
&&	no	no
nodeInfo	no	yes
.	no	no
hadCommFailure	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
nodeInfo	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
requestedHostsWillBecomeAvailable	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
inst	no	yes
,	no	no
host	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldDelayForLocality	no	no
)	no	no
{	no	no
if	no	no
(	no	no
requestedHostsWillBecomeAvailable	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
request	yes	yes
.	no	no
task	no	yes
+	no	no
+	no	no
requestedHostsDebugStr	yes	yes
+	no	no
+	no	no
+	no	no
schedulerAttemptTime	no	yes
+	no	no
+	no	no
request	yes	yes
.	no	no
getLocalityDelayTimeout	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
SELECT_HOST_RESULT_DELAYED_LOCALITY	no	yes
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
request	yes	yes
.	no	no
task	no	yes
+	no	no
+	no	no
requestedHostsDebugStr	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
Collection	no	yes
<	no	no
LlapServiceInstance	no	yes
>	no	no
instances	no	yes
;	no	no
if	no	no
(	no	no
consistentSplits	no	no
)	no	no
{	no	no
instances	no	yes
=	no	no
activeInstances	no	yes
.	no	no
getAllInstancesOrdered	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
instances	no	yes
=	no	no
activeInstances	no	yes
.	no	no
getAll	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
NodeInfo	no	yes
>	no	no
allNodes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
instances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
NodeInfo	no	yes
>	no	no
activeNodesWithFreeSlots	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
LlapServiceInstance	no	yes
inst	no	yes
:	no	no
instances	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
inst	no	yes
instanceof	no	no
InactiveServiceInstance	no	no
)	no	no
{	no	no
allNodes	no	yes
.	no	no
add	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
NodeInfo	no	yes
nodeInfo	no	yes
=	no	no
instanceToNodeMap	no	yes
.	no	no
get	no	yes
(	no	no
inst	no	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nodeInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

NodeInfo	no	yes
nodeInfo	yes	yes
=	no	no
instanceToNodeMap	no	yes
.	no	no
get	no	yes
(	no	no
inst	no	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nodeInfo	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
allNodes	yes	yes
.	no	no
add	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
allNodes	yes	yes
.	no	no
add	no	yes
(	no	no
nodeInfo	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
nodeInfo	yes	yes
.	no	no
canAcceptTask	no	no
(	no	no
)	no	no
)	no	no
{	no	no
activeNodesWithFreeSlots	no	yes
.	no	no
add	no	yes
(	no	no
nodeInfo	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allNodes	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
SELECT_HOST_RESULT_DELAYED_RESOURCES	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
activeNodesWithFreeSlots	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
isClusterCapacityFull	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
request	no	yes
.	no	no
localityDelayTimeout	no	no
>	no	no
0	no	no
&&	no	no
isRequestedHostPresent	no	no
(	no	no
request	no	yes
)	no	no
)	no	no
{	no	no
request	no	yes
.	no	no
resetLocalityDelayInfo	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
isClusterCapacityFull	no	yes
.	no	no
set	no	yes
(	no	no
false	no	no
)	no	no
;	no	no

private	no	no
void	no	no
reenableDisabledNode	no	no
(	no	no
NodeInfo	no	no
nodeInfo	yes	no
)	no	no
{	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
void	no	no
queueNodeForReEnablement	no	no
(	no	no
final	no	no
NodeInfo	no	no
nodeInfo	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
disabledNodesQueue	no	no
.	no	no
remove	no	no
(	no	no
nodeInfo	yes	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
disableNode	no	no
(	no	no
NodeInfo	no	no
nodeInfo	yes	no
,	no	no
boolean	no	no
isCommFailure	no	no
)	no	no
{	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
nodeInfo	yes	no
==	no	no
null	no	no
||	no	no
nodeInfo	yes	no
.	no	no
isDisabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
nodeInfo	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
TaskInfo	no	yes
unregisterTask	no	no
(	no	no
Object	no	no
task	no	yes
)	no	no
{	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
TaskInfo	no	yes
taskInfo	yes	yes
=	no	no
knownTasks	no	yes
.	no	no
remove	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
tasksById	no	yes
.	no	no
remove	no	yes
(	no	no
taskInfo	yes	yes
.	no	no
attemptId	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
constructPendingTaskCountsLogMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Iterator	no	yes
<	no	no
Entry	no	yes
<	no	no
Priority	no	yes
,	no	no
List	no	yes
<	no	no
TaskInfo	no	yes
>>>	no	no
pendingIterator	no	yes
=	no	no
pendingTasks	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
Resource	no	yes
totalResource	no	yes
=	no	no
getTotalResources	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
pendingIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Entry	no	yes
<	no	no
Priority	no	yes
,	no	no
List	no	yes
<	no	no
TaskInfo	no	yes
>>	no	no
entry	no	yes
=	no	no
pendingIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TaskInfo	no	yes
>	no	no
taskListAtPriority	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
TaskInfo	no	yes
>	no	no
taskIter	no	yes
=	no	no
taskListAtPriority	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
scheduledAllAtPriority	no	yes
=	no	no
true	no	no
;	no	no
while	no	no
(	no	no
taskIter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
TaskInfo	no	yes
taskInfo	yes	yes
=	no	no
taskIter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
taskInfo	yes	yes
.	no	no
getNumPreviousAssignAttempts	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
dagStats	no	yes
.	no	no
registerDelayedAllocation	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
taskInfo	yes	yes
.	no	no
triedAssigningTask	no	yes
(	no	no
)	no	no
;	no	no
ScheduleResult	no	yes
scheduleResult	yes	yes
=	no	no
scheduleTask	no	yes
(	no	no
taskInfo	yes	yes
,	no	no
totalResource	no	yes
,	no	no
downgradedTask	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
scheduleResult	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
scheduleResult	no	yes
==	no	no
ScheduleResult	no	no
.	no	no
SCHEDULED	no	no
)	no	no
{	no	no
taskIter	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
scheduleResult	no	yes
==	no	no
ScheduleResult	no	no
.	no	no
INADEQUATE_TOTAL_RESOURCES	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
startTimeoutMonitor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
potentialHosts	yes	yes
;	no	no
if	no	no
(	no	no
scheduleResult	no	yes
==	no	no
ScheduleResult	no	no
.	no	no
DELAYED_LOCALITY	no	no
)	no	no
{	no	no
maybeAddToDelayedTaskQueue	no	yes
(	no	no
taskInfo	yes	yes
)	no	no
;	no	no
potentialHosts	yes	yes
=	no	no
taskInfo	yes	yes
.	no	no
requestedHosts	no	yes
;	no	no
if	no	no
(	no	no
potentialHosts	yes	yes
==	no	no
null	no	no
||	no	no
potentialHosts	yes	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
potentialHosts	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

else	no	no
{	no	no
if	no	no
(	no	no
scheduleResult	no	no
==	no	no
ScheduleResult	no	no
.	no	no
INADEQUATE_TOTAL_RESOURCES	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
startTimeoutMonitor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
potentialHosts	no	yes
;	no	no
if	no	no
(	no	no
scheduleResult	no	no
==	no	no
ScheduleResult	no	no
.	no	no
DELAYED_LOCALITY	no	no
)	no	no
{	no	no
maybeAddToDelayedTaskQueue	no	yes
(	no	no
taskInfo	yes	yes
)	no	no
;	no	no
potentialHosts	no	yes
=	no	no
taskInfo	yes	yes
.	no	no
requestedHosts	no	yes
;	no	no
if	no	no
(	no	no
potentialHosts	no	yes
==	no	no
null	no	no
||	no	no
potentialHosts	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
potentialHosts	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
potentialHosts	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
potentialHosts	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no

}	no	no
String	no	yes
[	no	no
]	no	no
potentialHosts	yes	yes
;	no	no
if	no	no
(	no	no
scheduleResult	no	no
==	no	no
ScheduleResult	no	no
.	no	no
DELAYED_LOCALITY	no	no
)	no	no
{	no	no
maybeAddToDelayedTaskQueue	no	yes
(	no	no
taskInfo	yes	yes
)	no	no
;	no	no
potentialHosts	yes	yes
=	no	no
taskInfo	yes	yes
.	no	no
requestedHosts	no	yes
;	no	no
if	no	no
(	no	no
potentialHosts	yes	yes
==	no	no
null	no	no
||	no	no
potentialHosts	yes	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
potentialHosts	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
potentialHosts	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
potentialHosts	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
shouldPreempt	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
host	no	yes
:	no	no
potentialHosts	yes	yes
)	no	no
{	no	no
MutableInt	no	yes
pendingHostPreemptions	no	yes
=	no	no
pendingPreemptionsPerHost	no	yes
.	no	no
get	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pendingHostPreemptions	no	yes
!=	no	no
null	no	no
&&	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

potentialHosts	yes	yes
=	no	no
taskInfo	yes	yes
.	no	no
requestedHosts	no	yes
;	no	no
if	no	no
(	no	no
potentialHosts	yes	yes
==	no	no
null	no	no
||	no	no
potentialHosts	yes	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
potentialHosts	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
potentialHosts	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
potentialHosts	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
shouldPreempt	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
String	no	no
host	no	yes
:	no	no
potentialHosts	yes	yes
)	no	no
{	no	no
MutableInt	no	yes
pendingHostPreemptions	no	yes
=	no	no
pendingPreemptionsPerHost	no	yes
.	no	no
get	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pendingHostPreemptions	no	yes
!=	no	no
null	no	no
&&	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
shouldPreempt	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
host	no	yes
,	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no

potentialHosts	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
potentialHosts	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
potentialHosts	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
shouldPreempt	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
String	no	no
host	no	yes
:	no	no
potentialHosts	no	yes
)	no	no
{	no	no
MutableInt	no	yes
pendingHostPreemptions	no	yes
=	no	no
pendingPreemptionsPerHost	no	yes
.	no	no
get	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pendingHostPreemptions	no	yes
!=	no	no
null	no	no
&&	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
shouldPreempt	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
host	no	yes
,	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldPreempt	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

else	no	no
{	no	no
potentialHosts	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
potentialHosts	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
shouldPreempt	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
String	no	no
host	no	yes
:	no	no
potentialHosts	no	yes
)	no	no
{	no	no
MutableInt	no	yes
pendingHostPreemptions	no	yes
=	no	no
pendingPreemptionsPerHost	no	yes
.	no	no
get	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pendingHostPreemptions	no	yes
!=	no	no
null	no	no
&&	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
shouldPreempt	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
host	no	yes
,	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldPreempt	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
,	no	no
pendingPreemptions	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
shouldPreempt	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
String	no	no
host	no	yes
:	no	no
potentialHosts	no	yes
)	no	no
{	no	no
MutableInt	no	yes
pendingHostPreemptions	no	yes
=	no	no
pendingPreemptionsPerHost	no	yes
.	no	no
get	no	yes
(	no	no
host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pendingHostPreemptions	no	yes
!=	no	no
null	no	no
&&	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
shouldPreempt	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
host	no	yes
,	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldPreempt	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	yes	yes
.	no	no
task	no	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
,	no	no
pendingPreemptions	yes	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
preemptTasks	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getPriority	no	yes
(	no	no
)	no	no
,	no	no
vertexNum	no	yes
(	no	no
taskInfo	yes	yes
)	no	no
,	no	no
1	no	no
,	no	no
potentialHosts	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

shouldPreempt	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	no	yes
.	no	no
task	no	yes
,	no	no
host	no	yes
,	no	no
pendingHostPreemptions	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
shouldPreempt	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	no	yes
.	no	no
task	no	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
,	no	no
pendingPreemptions	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
preemptTasks	no	yes
(	no	no
entry	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getPriority	no	yes
(	no	no
)	no	no
,	no	no
vertexNum	no	yes
(	no	no
taskInfo	no	yes
)	no	no
,	no	no
1	no	no
,	no	no
potentialHosts	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	no	yes
.	no	no
task	no	yes
,	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	no	yes
.	no	no
task	no	yes
,	no	no
pendingPreemptions	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pendingPreemptions	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
taskInfo	no	yes
.	no	no
task	no	yes
,	no	no
taskInfo	no	yes
.	no	no
priority	no	yes
)	no	no
;	no	no

preemptHosts	no	yes
=	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
;	no	no
}	no	no
Iterator	no	yes
<	no	no
TaskInfo	no	yes
>	no	no
taskInfoIterator	no	yes
=	no	no
entryAtPriority	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
taskInfoIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
&&	no	no
preemptedCount	no	yes
<	no	no
numTasksToPreempt	no	no
)	no	no
{	no	no
TaskInfo	no	yes
taskInfo	yes	yes
=	no	no
taskInfoIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
preemptHosts	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
preemptHosts	no	yes
.	no	no
contains	no	no
(	no	no
taskInfo	yes	yes
.	no	no
assignedNode	no	no
.	no	no
getHost	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
Set	no	yes
<	no	no
Integer	no	yes
>>	no	no
depInfo	no	yes
=	no	no
getDependencyInfo	no	yes
(	no	no
taskInfo	yes	yes
.	no	no
attemptId	no	yes
.	no	no
getTaskID	no	yes
(	no	no
)	no	no
.	no	no
getVertexID	no	yes
(	no	no
)	no	no
.	no	no
getDAGId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
vertexDepInfo	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
depInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
vertexDepInfo	no	yes
=	no	no
depInfo	no	yes
.	no	no
get	no	yes
(	no	no
forVertex	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
depInfo	no	yes
!=	no	no
null	no	no
&&	no	no
vertexDepInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
forVertex	no	yes
+	no	no
+	no	no
depInfo	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
vertexDepInfo	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
vertexDepInfo	no	yes
.	no	no
contains	no	no
(	no	no
vertexNum	no	no
(	no	no
taskInfo	yes	yes
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
preemptedCount	no	yes
++	no	no
;	no	no

vertexDepInfo	no	yes
=	no	no
depInfo	no	yes
.	no	no
get	no	yes
(	no	no
forVertex	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
depInfo	no	yes
!=	no	no
null	no	no
&&	no	no
vertexDepInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
forVertex	no	yes
+	no	no
+	no	no
depInfo	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
vertexDepInfo	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
vertexDepInfo	no	yes
.	no	no
contains	no	no
(	no	no
vertexNum	no	no
(	no	no
taskInfo	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
preemptedCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
taskInfo	no	yes
,	no	no
forPriority	yes	yes
,	no	no
potentialHosts	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
potentialHosts	no	yes
)	no	no
)	no	no
;	no	no
taskInfo	no	yes
.	no	no
setPreemptedInfo	no	yes
(	no	no
clock	no	yes
.	no	no
getTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
preemptedTaskList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
preemptedTaskList	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
dagStats	no	yes
.	no	no
registerTaskPreempted	no	yes
(	no	no
taskInfo	no	yes
.	no	no
assignedNode	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
preemptedTaskList	no	yes
.	no	no
add	no	yes
(	no	no
taskInfo	no	yes
)	no	no
;	no	no
registerPendingPreemption	no	yes
(	no	no
taskInfo	no	yes
.	no	no
assignedNode	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
taskInfoIterator	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
entryAtPriority	yes	no
.	no	no
getValue	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
int	no	no
distributeGuaranteed	no	no
(	no	no
int	no	no
count	yes	no
,	no	no
TaskInfo	no	no
failedUpdate	no	no
,	no	no
List	no	no
<	no	no
TaskInfo	no	no
>	no	no
toUpdate	no	no
)	no	no
{	no	no

private	no	no
int	no	no
revokeGuaranteed	no	no
(	no	no
int	no	no
count	yes	no
,	no	no
TaskInfo	no	no
failedUpdate	no	no
,	no	no
List	no	no
<	no	no
TaskInfo	no	no
>	no	no
toUpdate	no	no
)	no	no
{	no	no

protected	no	no
void	no	no
sendUpdateMessageAsync	no	no
(	no	no
TaskInfo	no	no
ti	yes	no
,	no	no
boolean	no	no
newState	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
KerberosInfo	no	no
getKerberosInfo	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
protocol	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
TokenInfo	no	no
getTokenInfo	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
protocol	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
init	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
LlapRegistryService	no	no
registry	no	yes
,	no	no
LlapManagementProtocolClientImplFactory	no	no
clientFactory	no	yes
)	no	no
{	no	no
this	no	no
.	no	no
registry	no	yes
=	no	no
registry	no	yes
;	no	no
this	no	no
.	no	no
clientFactory	no	yes
=	no	no
clientFactory	no	yes
;	no	no
this	no	no
.	no	no
minServedTasksNumber	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_NODEHEALTHCHECKS_MINTASKS	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
minConfigChangeDelayMs	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_NODEHEALTHCHECKS_MININTERVALDURATION	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
timeThreshold	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_NODEHEALTHCHECKS_TASKTIMERATIO	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
emptyExecutorsThreshold	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_NODEHEALTHCHECKS_EXECUTORRATIO	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
maxBlacklistedNodes	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_NODEHEALTHCHECKS_MAXNODES	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
minServedTasksNumber	yes	yes
>	no	no
0	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
minConfigChangeDelayMs	yes	yes
>	no	no
0	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
timeThreshold	yes	yes
>	no	no
1.0f	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
maxBlacklistedNodes	yes	yes
>	no	no
0	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
registry	no	yes
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
clientFactory	no	yes
,	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
newClusterMetrics	no	no
(	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
LlapMetricsCollector	no	no
.	no	no
LlapMetrics	no	no
>	no	no
newMetrics	no	yes
)	no	no
{	no	no
long	no	no
sumAverageTime	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
sumEmptyExecutors	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxAverageTime	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxAverageTimeEmptyExecutors	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxAverageTimeMaxExecutors	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
workerNum	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
blacklistedNodes	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
maxAverageTimeIdentity	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
workerIdentity	yes	yes
:	no	no
newMetrics	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metrics	no	yes
=	no	no
newMetrics	no	yes
.	no	no
get	no	yes
(	no	no
workerIdentity	yes	yes
)	no	no
.	no	no
getMetrics	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
requestHandled	yes	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorTotalRequestsHandled	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
averageTime	yes	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
AverageResponseTime	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
emptyExecutor	yes	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorNumExecutorsAvailableAverage	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
maxExecutors	yes	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorNumExecutors	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

long	no	no
maxAverageTimeEmptyExecutors	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxAverageTimeMaxExecutors	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
workerNum	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
blacklistedNodes	yes	yes
=	no	no
0	no	no
;	no	no
String	no	yes
maxAverageTimeIdentity	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
workerIdentity	no	yes
:	no	no
newMetrics	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metrics	no	yes
=	no	no
newMetrics	no	yes
.	no	no
get	no	yes
(	no	no
workerIdentity	no	yes
)	no	no
.	no	no
getMetrics	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
requestHandled	no	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorTotalRequestsHandled	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
averageTime	no	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
AverageResponseTime	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
emptyExecutor	no	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorNumExecutorsAvailableAverage	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
maxExecutors	no	yes
=	no	no
metrics	no	yes
.	no	no
get	no	yes
(	no	no
LlapDaemonExecutorInfo	no	yes
.	no	no
ExecutorNumExecutors	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
workerIdentity	no	yes
,	no	no
requestHandled	no	yes
,	no	no
averageTime	no	yes
,	no	no
emptyExecutor	no	yes
,	no	no
maxExecutors	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
maxExecutors	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
blacklistedNodes	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
blacklistedNodes	yes	yes
>=	no	no
this	no	no
.	no	no
maxBlacklistedNodes	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
requestHandled	no	no
>	no	no
this	no	no
.	no	no
minServedTasksNumber	no	no
)	no	no
{	no	no
workerNum	no	yes
++	no	no
;	no	no
sumAverageTime	no	yes
+=	no	no
averageTime	no	yes
;	no	no
if	no	no
(	no	no
averageTime	no	yes
>	no	no
maxAverageTime	no	yes
)	no	no
{	no	no
maxAverageTime	no	yes
=	no	no
averageTime	no	yes
;	no	no
maxAverageTimeEmptyExecutors	no	yes
=	no	no
emptyExecutor	no	yes
;	no	no
maxAverageTimeMaxExecutors	no	yes
=	no	no
maxExecutors	no	yes
;	no	no
maxAverageTimeIdentity	yes	yes
=	no	no
workerIdentity	no	yes
;	no	no
}	no	no
sumEmptyExecutors	no	yes
+=	no	no
emptyExecutor	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
workerNum	no	yes
<	no	no
2	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
sumAverageTime	no	yes
,	no	no
sumEmptyExecutors	no	yes
,	no	no
maxAverageTime	no	yes
,	no	no
maxAverageTimeEmptyExecutors	no	yes
,	no	no
maxAverageTimeMaxExecutors	no	yes
,	no	no
workerNum	no	yes
,	no	no
maxAverageTimeIdentity	yes	yes
,	no	no
blacklistedNodes	no	yes
)	no	no
;	no	no
double	no	no
averageTimeWithoutSlowest	no	yes
=	no	no
(	no	no
double	no	no
)	no	no
(	no	no
sumAverageTime	no	yes
-	no	no
maxAverageTime	no	yes
)	no	no
/	no	no
(	no	no
workerNum	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
averageTimeWithoutSlowest	no	yes
*	no	no
this	no	no
.	no	no
timeThreshold	no	no
<	no	no
maxAverageTime	no	yes
)	no	no
{	no	no
long	no	no
emptyExecutorsWithoutSlowest	no	yes
=	no	no
sumEmptyExecutors	no	yes
-	no	no
maxAverageTimeEmptyExecutors	no	yes
;	no	no

sumAverageTime	no	yes
+=	no	no
averageTime	no	yes
;	no	no
if	no	no
(	no	no
averageTime	no	yes
>	no	no
maxAverageTime	no	yes
)	no	no
{	no	no
maxAverageTime	no	yes
=	no	no
averageTime	no	yes
;	no	no
maxAverageTimeEmptyExecutors	no	yes
=	no	no
emptyExecutor	no	yes
;	no	no
maxAverageTimeMaxExecutors	no	yes
=	no	no
maxExecutors	no	yes
;	no	no
maxAverageTimeIdentity	yes	yes
=	no	no
workerIdentity	no	yes
;	no	no
}	no	no
sumEmptyExecutors	no	yes
+=	no	no
emptyExecutor	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
workerNum	no	yes
<	no	no
2	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
,	no	no
sumAverageTime	no	yes
,	no	no
sumEmptyExecutors	no	yes
,	no	no
maxAverageTime	no	yes
,	no	no
maxAverageTimeEmptyExecutors	no	yes
,	no	no
maxAverageTimeMaxExecutors	no	yes
,	no	no
workerNum	no	yes
,	no	no
maxAverageTimeIdentity	yes	yes
,	no	no
blacklistedNodes	no	yes
)	no	no
;	no	no
double	no	no
averageTimeWithoutSlowest	no	yes
=	no	no
(	no	no
double	no	no
)	no	no
(	no	no
sumAverageTime	no	yes
-	no	no
maxAverageTime	no	yes
)	no	no
/	no	no
(	no	no
workerNum	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
averageTimeWithoutSlowest	no	yes
*	no	no
this	no	no
.	no	no
timeThreshold	no	no
<	no	no
maxAverageTime	no	yes
)	no	no
{	no	no
long	no	no
emptyExecutorsWithoutSlowest	no	yes
=	no	no
sumEmptyExecutors	no	yes
-	no	no
maxAverageTimeEmptyExecutors	no	yes
;	no	no
if	no	no
(	no	no
emptyExecutorsWithoutSlowest	no	yes
>	no	no
maxAverageTimeMaxExecutors	no	yes
*	no	no
this	no	no
.	no	no
emptyExecutorsThreshold	no	no
)	no	no
{	no	no
try	no	no
{	no	no

protected	no	no
void	no	no
setCapacity	no	no
(	no	no
String	no	no
workerIdentity	no	no
,	no	no
int	no	no
newExecutorNum	no	no
,	no	no
int	no	no
newWaitQueueSize	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
ServiceException	no	no
{	no	no
long	no	no
currentTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentTime	no	yes
>	no	no
nextCheckTime	no	no
)	no	no
{	no	no
LlapZookeeperRegistryImpl	no	yes
.	no	no
ConfigChangeLockResult	no	yes
lockResult	yes	yes
=	no	no
registry	no	yes
.	no	no
lockForConfigChange	no	yes
(	no	no
currentTime	no	yes
,	no	no
currentTime	no	yes
+	no	no
this	no	no
.	no	no
minConfigChangeDelayMs	no	yes
)	no	no
;	no	no

protected	no	no
void	no	no
setCapacity	no	no
(	no	no
String	no	no
workerIdentity	yes	no
,	no	no
int	no	no
newExecutorNum	yes	no
,	no	no
int	no	no
newWaitQueueSize	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
ServiceException	no	no
{	no	no
long	no	no
currentTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentTime	no	yes
>	no	no
nextCheckTime	no	no
)	no	no
{	no	no
LlapZookeeperRegistryImpl	no	yes
.	no	no
ConfigChangeLockResult	no	yes
lockResult	no	yes
=	no	no
registry	no	yes
.	no	no
lockForConfigChange	no	yes
(	no	no
currentTime	no	yes
,	no	no
currentTime	no	yes
+	no	no
this	no	no
.	no	no
minConfigChangeDelayMs	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
lockResult	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lockResult	no	yes
.	no	no
isSuccess	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
onFailure	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
t	yes	no
instanceof	no	no
CancellationException	no	no
)	no	no
{	no	no

private	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
createRemovalListener	no	no
(	no	no
)	no	no
{	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
listener	no	no
=	no	no
new	no	no
RemovalListener	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
onRemoval	no	no
(	no	no
RemovalNotification	no	no
<	no	no
HiveClientCacheKey	no	no
,	no	no
ICacheableMetaStoreClient	no	yes
>	no	no
notification	no	yes
)	no	no
{	no	no
ICacheableMetaStoreClient	no	yes
hiveMetaStoreClient	yes	yes
=	no	no
notification	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveMetaStoreClient	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
cleanup	no	no
(	no	no
)	no	no
{	no	no
hiveCache	yes	yes
.	no	no
cleanUp	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
enableStats	no	no
)	no	no
{	no	no

private	no	no
void	no	no
cleanupDir	no	no
(	no	no
Path	no	no
eventsBasePath	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
deleteDirByOwner	no	no
(	no	no
FileSystem	no	no
fs	no	yes
,	no	no
FileStatus	no	no
eventsDir	yes	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
owner	no	yes
=	no	no
eventsDir	yes	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
owner	no	yes
.	no	no
equals	no	no
(	no	no
System	no	no
.	no	no
getProperty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
eventsDir	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
eventsDir	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
owner	no	yes
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	yes	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
owner	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ugi	yes	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
(	no	no
FileSystem	no	no
doAsFs	no	yes
=	no	no
FileSystem	no	no
.	no	no
newInstance	no	no
(	no	no
eventsDir	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toUri	no	no
(	no	no
)	no	no
,	no	no
conf	no	no
)	no	no
)	no	no
{	no	no
doAsFs	no	yes
.	no	no
delete	no	yes
(	no	no
eventsDir	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	yes	no
)	no	no
{	no	no

public	no	no
ParseResult	no	no
parse	no	no
(	no	no
String	no	no
command	yes	no
,	no	no
Configuration	no	no
configuration	no	no
)	no	no
throws	no	no
ParseException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
ASTNode	no	no
parseHint	no	no
(	no	no
String	no	no
command	yes	no
)	no	no
throws	no	no
ParseException	no	no
{	no	no

public	no	no
ParseResult	no	no
parseSelect	no	no
(	no	no
String	no	no
command	yes	no
,	no	no
Configuration	no	no
configuration	no	no
)	no	no
throws	no	no
ParseException	no	no
{	no	no

public	no	no
ASTNode	no	no
parseExpression	no	no
(	no	no
String	no	no
command	yes	no
)	no	no
throws	no	no
ParseException	no	no
{	no	no

public	no	no
static	no	no
void	no	no
unregisterFile	no	no
(	no	no
Path	no	no
cachePath	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
MapWork	no	no
findMapWork	no	no
(	no	no
JobConf	no	no
job	no	yes
)	no	no
{	no	no
String	no	yes
inputName	yes	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
Utilities	no	yes
.	no	no
INPUT_NAME	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
start	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
portFromConf	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_OUTPUT_SERVICE_PORT	no	yes
)	no	no
;	no	no
int	no	no
sendBufferSize	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_OUTPUT_SERVICE_SEND_BUFFER_SIZE	no	yes
)	no	no
;	no	no
eventLoopGroup	no	yes
=	no	no
new	no	no
NioEventLoopGroup	no	yes
(	no	no
)	no	no
;	no	no
serverBootstrap	no	yes
=	no	no
new	no	no
ServerBootstrap	no	yes
(	no	no
)	no	no
;	no	no
serverBootstrap	no	yes
.	no	no
group	no	yes
(	no	no
eventLoopGroup	no	yes
)	no	no
;	no	no
serverBootstrap	no	yes
.	no	no
channel	no	yes
(	no	no
NioServerSocketChannel	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
serverBootstrap	no	yes
.	no	no
childHandler	no	yes
(	no	no
new	no	no
LlapOutputFormatServiceChannelHandler	no	yes
(	no	no
sendBufferSize	yes	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
listeningChannelFuture	no	yes
=	no	no
serverBootstrap	no	yes
.	no	no
bind	no	yes
(	no	no
portFromConf	no	yes
)	no	no
.	no	no
sync	no	yes
(	no	no
)	no	no
;	no	no
this	no	no
.	no	no
port	no	yes
=	no	no
(	no	no
(	no	no
InetSocketAddress	no	yes
)	no	no
listeningChannelFuture	no	yes
.	no	no
channel	no	yes
(	no	no
)	no	no
.	no	no
localAddress	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getPort	no	yes
(	no	no
)	no	no
;	no	no

perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
COMPILE	no	yes
)	no	no
;	no	no
driverState	no	yes
.	no	no
compilingWithLocking	no	yes
(	no	no
)	no	no
;	no	no
VariableSubstitution	no	no
variableSubstitution	no	yes
=	no	no
new	no	no
VariableSubstitution	no	no
(	no	no
new	no	no
HiveVariableSource	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
getHiveVariable	no	no
(	no	no
)	no	no
{	no	no
return	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getHiveVariables	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
String	no	yes
command	no	yes
=	no	no
variableSubstitution	no	yes
.	no	no
substitute	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
rawCommand	no	yes
)	no	no
;	no	no
String	no	yes
queryStr	yes	yes
=	no	no
command	no	yes
;	no	no
try	no	no
{	no	no
queryStr	yes	yes
=	no	no
HookUtils	no	yes
.	no	no
redactLogString	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
checkInterrupted	no	yes
(	no	no
driverState	no	yes
,	no	no
driverContext	yes	yes
,	no	no
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
setCmd	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no
driverContext	yes	yes
.	no	no
getQueryDisplay	no	yes
(	no	no
)	no	no
.	no	no
setQueryStr	no	yes
(	no	no
queryStr	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
setLastReplIdForDump	no	no
(	no	no
HiveConf	no	no
conf	no	yes
)	no	no
throws	no	no
HiveException	no	no
,	no	no
TException	no	no
{	no	no
Hive	no	yes
hiveDb	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
lastReplId	yes	yes
=	no	no
hiveDb	no	yes
.	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
getCurrentNotificationEventId	no	yes
(	no	no
)	no	no
.	no	no
getEventId	no	yes
(	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setLong	no	yes
(	no	no
ReplUtils	yes	yes
.	no	no
LAST_REPL_ID_KEY	no	yes
,	no	no
lastReplId	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
explainOutput	yes	yes
(	no	no
BaseSemanticAnalyzer	no	no
sem	no	yes
,	no	no
QueryPlan	no	no
plan	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_LOG_EXPLAIN_OUTPUT	no	no
)	no	no
||	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SERVER2_WEBUI_EXPLAIN_OUTPUT	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
explainOutput	yes	yes
=	no	no
ExplainTask	no	yes
.	no	no
getExplainOutput	no	yes
(	no	no
sem	no	yes
,	no	no
plan	no	yes
,	no	no
tree	no	yes
,	no	no
driverContext	yes	yes
.	no	no
getQueryState	no	yes
(	no	no
)	no	no
,	no	no
context	no	yes
,	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
explainOutput	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_LOG_EXPLAIN_OUTPUT	no	no
)	no	no
)	no	no
{	no	no

final	no	no
String	no	yes
fileSystem	no	yes
=	no	no
inputPathUri	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
inputPathUri	no	yes
.	no	no
getAuthority	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
FileSystem	no	yes
fs	no	yes
;	no	no
try	no	no
{	no	no
fs	no	yes
=	no	no
inputPath	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
inputPath	yes	yes
+	no	no
+	no	no
e	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
stagingPathName	no	yes
;	no	no
if	no	no
(	no	no
inputPathName	no	yes
.	no	no
indexOf	no	yes
(	no	no
stagingDir	no	yes
)	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
stagingPathName	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
inputPathName	no	yes
,	no	no
stagingDir	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
stagingPathName	no	yes
=	no	no
inputPathName	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
inputPathName	no	yes
.	no	no
indexOf	no	yes
(	no	no
stagingDir	no	yes
)	no	no
+	no	no
stagingDir	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
key	no	yes
=	no	no
fileSystem	no	yes
+	no	no
+	no	no
stagingPathName	no	yes
+	no	no
+	no	no
TaskRunner	no	yes
.	no	no
getTaskRunnerID	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
dir	yes	yes
=	no	no
fsScratchDirs	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dir	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
dir	yes	yes
=	no	no
fs	no	yes
.	no	no
makeQualified	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
stagingPathName	no	yes
+	no	no
+	no	no
this	no	no
.	no	no
executionId	no	yes
+	no	no
+	no	no
TaskRunner	no	yes
.	no	no
getTaskRunnerID	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
removeResultCacheDir	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
this	no	no
.	no	no
fsResultCacheDirs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Path	no	yes
p	yes	yes
=	no	no
this	no	no
.	no	no
fsResultCacheDirs	no	yes
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
p	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
removeMaterializedCTEs	no	no
(	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Table	no	no
materializedTable	yes	yes
:	no	no
cteTables	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
location	yes	yes
=	no	no
materializedTable	yes	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
location	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
boolean	no	no
status	yes	yes
=	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
location	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no

for	no	no
(	no	no
Context	no	no
subContext	no	yes
:	no	no
subContexts	no	no
)	no	no
{	no	no
subContext	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
resDir	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
isInScratchDir	no	no
(	no	no
resDir	no	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
resDir	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
resDir	no	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
resDir	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
resFile	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
isInScratchDir	no	no
(	no	no
resFile	no	yes
.	no	no
getParent	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
resFile	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
resFile	no	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
resFile	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no

public	no	no
void	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
CommandProcessorException	no	no
{	no	no
SessionState	no	yes
.	no	no
getPerfLogger	no	yes
(	no	no
)	no	no
.	no	no
perfLogBegin	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
DRIVER_EXECUTE	no	yes
)	no	no
;	no	no
boolean	no	no
noName	no	yes
=	no	no
Strings	no	yes
.	no	no
isNullOrEmpty	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_NAME	no	yes
)	no	no
)	no	no
;	no	no
checkState	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
executionError	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no

try	no	no
{	no	no
driverContext	yes	yes
.	no	no
getHookRunner	no	yes
(	no	no
)	no	no
.	no	no
runAfterExecutionHook	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getQueryString	no	yes
(	no	no
)	no	no
,	no	no
hookContext	no	yes
,	no	no
executionError	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getHiveHistory	no	yes
(	no	no
)	no	no
.	no	no
endQuery	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
noName	no	no
)	no	no
{	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_NAME	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
double	no	no
duration	yes	yes
=	no	no
SessionState	no	yes
.	no	no
getPerfLogger	no	yes
(	no	no
)	no	no
.	no	no
perfLogEnd	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
DRIVER_EXECUTE	no	yes
)	no	no
/	no	no
1000.00	no	no
;	no	no
ImmutableMap	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
executionHMSTimings	no	yes
=	no	no
Hive	no	yes
.	no	no
dumpMetaCallTimingWithoutEx	no	yes
(	no	no
)	no	no
;	no	no
driverContext	yes	yes
.	no	no
getQueryDisplay	no	yes
(	no	no
)	no	no
.	no	no
setHmsTimings	no	yes
(	no	no
QueryDisplay	no	yes
.	no	no
Phase	no	yes
.	no	no
EXECUTION	no	yes
,	no	no
executionHMSTimings	no	yes
)	no	no
;	no	no
logExecutionResourceUsage	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getSparkSession	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getSparkSession	no	yes
(	no	no
)	no	no
.	no	no
onQueryCompletion	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
driverState	no	yes
.	no	no
executionFinishedWithLocking	no	yes
(	no	no
executionError	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
driverState	no	yes
.	no	no
isAborted	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getHiveHistory	no	yes
(	no	no
)	no	no
.	no	no
endQuery	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
noName	no	no
)	no	no
{	no	no
driverContext	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_NAME	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
double	no	no
duration	yes	yes
=	no	no
SessionState	no	yes
.	no	no
getPerfLogger	no	yes
(	no	no
)	no	no
.	no	no
perfLogEnd	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
DRIVER_EXECUTE	no	yes
)	no	no
/	no	no
1000.00	no	no
;	no	no
ImmutableMap	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
executionHMSTimings	no	yes
=	no	no
Hive	no	yes
.	no	no
dumpMetaCallTimingWithoutEx	no	yes
(	no	no
)	no	no
;	no	no
driverContext	yes	yes
.	no	no
getQueryDisplay	no	yes
(	no	no
)	no	no
.	no	no
setHmsTimings	no	yes
(	no	no
QueryDisplay	no	yes
.	no	no
Phase	no	yes
.	no	no
EXECUTION	no	yes
,	no	no
executionHMSTimings	no	yes
)	no	no
;	no	no
logExecutionResourceUsage	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getSparkSession	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getSparkSession	no	yes
(	no	no
)	no	no
.	no	no
onQueryCompletion	no	yes
(	no	no
driverContext	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
driverState	no	yes
.	no	no
executionFinishedWithLocking	no	yes
(	no	no
executionError	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
driverState	no	yes
.	no	no
isAborted	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
driverContext	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
,	no	no
duration	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

MapRedTask	no	yes
mapredTask	no	yes
=	no	no
(	no	no
MapRedTask	no	yes
)	no	no
runner	no	yes
.	no	no
getTask	no	yes
(	no	no
)	no	no
;	no	no
MapWork	no	yes
mapWork	no	yes
=	no	no
mapredTask	no	yes
.	no	no
getWork	no	yes
(	no	no
)	no	no
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
;	no	no
ReduceWork	no	yes
reduceWork	no	yes
=	no	no
mapredTask	no	yes
.	no	no
getWork	no	yes
(	no	no
)	no	no
.	no	no
getReduceWork	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Operator	no	yes
>	no	no
operators	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Operator	no	yes
>	no	no
(	no	no
mapWork	no	yes
.	no	no
getAliasToWork	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
reduceWork	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
operators	no	yes
.	no	no
add	no	yes
(	no	no
reduceWork	no	yes
.	no	no
getReducer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
statKeys	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
NodeUtils	no	no
.	no	no
iterate	no	no
(	no	no
operators	no	yes
,	no	no
FileSinkOperator	no	no
.	no	no
class	no	no
,	no	no
new	no	no
Function	no	no
<	no	no
FileSinkOperator	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
apply	no	no
(	no	no
FileSinkOperator	no	no
fsOp	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
fsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGatherStats	no	no
(	no	no
)	no	no
)	no	no
{	no	no
statKeys	no	yes
.	no	no
add	no	yes
(	no	no
fsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getStatsAggPrefix	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
statKey	yes	yes
:	no	no
statKeys	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
statsTasks	no	yes
.	no	no
containsKey	no	no
(	no	no
statKey	yes	yes
)	no	no
)	no	no
{	no	no
statsTasks	no	yes
.	no	no
get	no	yes
(	no	no
statKey	yes	yes
)	no	no
.	no	no
getWork	no	yes
(	no	no
)	no	no
.	no	no
setSourceTask	no	yes
(	no	no
mapredTask	no	yes
)	no	no
;	no	no

public	no	no
CacheEntry	no	yes
lookup	no	no
(	no	no
LookupInfo	no	no
request	yes	no
)	no	no
{	no	no
CacheEntry	no	yes
result	no	yes
=	no	no
null	no	no
;	no	no

public	no	no
CacheEntry	no	yes
addToCache	no	no
(	no	no
QueryInfo	no	no
queryInfo	no	yes
,	no	no
ValidTxnWriteIdList	no	no
txnWriteIdList	no	yes
)	no	no
{	no	no
String	no	yes
queryText	yes	yes
=	no	no
queryInfo	no	yes
.	no	no
getLookupInfo	no	yes
(	no	no
)	no	no
.	no	no
getQueryText	no	yes
(	no	no
)	no	no
;	no	no
CacheEntry	no	yes
addedEntry	no	yes
=	no	no
new	no	no
CacheEntry	no	yes
(	no	no
)	no	no
;	no	no
addedEntry	no	yes
.	no	no
queryInfo	no	yes
=	no	no
queryInfo	no	yes
;	no	no
addedEntry	no	yes
.	no	no
txnWriteIdList	no	yes
=	no	no
txnWriteIdList	no	yes
;	no	no
Lock	no	yes
writeLock	no	yes
=	no	no
rwLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
writeLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
notifyTableChanged	no	no
(	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tableName	yes	no
,	no	no
long	no	no
updateTime	yes	no
)	no	no
{	no	no

private	no	no
boolean	no	no
entryMatches	no	no
(	no	no
LookupInfo	no	no
lookupInfo	no	no
,	no	no
CacheEntry	no	no
entry	no	yes
,	no	no
Set	no	no
<	no	no
CacheEntry	no	no
>	no	no
entriesToRemove	no	no
)	no	no
{	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
entry	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ReadEntity	no	no
readEntity	no	yes
:	no	no
queryInfo	no	yes
.	no	no
getInputs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
readEntity	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
Type	no	no
.	no	no
TABLE	no	no
)	no	no
{	no	no
Table	no	yes
tableUsed	yes	yes
=	no	no
readEntity	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Table	no	yes
>	no	no
tempTables	no	yes
=	no	no
SessionHiveMetaStoreClient	no	yes
.	no	no
getTempTablesForDatabase	no	yes
(	no	no
tableUsed	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tableUsed	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tempTables	no	yes
!=	no	no
null	no	no
&&	no	no
tempTables	no	yes
.	no	no
containsKey	no	no
(	no	no
tableUsed	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
tempTables	no	no
!=	no	no
null	no	no
&&	no	no
tempTables	no	no
.	no	no
containsKey	no	no
(	no	no
tableUsed	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tableUsed	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
tableUsed	no	yes
)	no	no
)	no	no
{	no	no
boolean	no	no
writeIdCheckPassed	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
tableName	yes	yes
=	no	no
tableUsed	no	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
;	no	no
ValidTxnWriteIdList	no	yes
currentTxnWriteIdList	no	yes
=	no	no
lookupInfo	no	yes
.	no	no
txnWriteIdListProvider	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentTxnWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
entry	no	yes
.	no	no
txnWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
currentWriteIdForTable	yes	yes
=	no	no
currentTxnWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
tableName	yes	yes
)	no	no
;	no	no
ValidWriteIdList	no	yes
cachedWriteIdForTable	yes	yes
=	no	no
entry	no	yes
.	no	no
txnWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
tableName	yes	yes
)	no	no
;	no	no

boolean	no	no
writeIdCheckPassed	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
tableName	no	yes
=	no	no
tableUsed	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
;	no	no
ValidTxnWriteIdList	no	yes
currentTxnWriteIdList	no	yes
=	no	no
lookupInfo	no	yes
.	no	no
txnWriteIdListProvider	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currentTxnWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
entry	no	yes
.	no	no
txnWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
currentWriteIdForTable	no	yes
=	no	no
currentTxnWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
tableName	no	yes
)	no	no
;	no	no
ValidWriteIdList	no	yes
cachedWriteIdForTable	no	yes
=	no	no
entry	no	yes
.	no	no
txnWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
tableName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableName	no	yes
,	no	no
currentWriteIdForTable	no	yes
,	no	no
cachedWriteIdForTable	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentWriteIdForTable	no	yes
!=	no	no
null	no	no
&&	no	no
cachedWriteIdForTable	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
TxnIdUtils	no	no
.	no	no
checkEquivalentWriteIds	no	no
(	no	no
currentWriteIdForTable	no	yes
,	no	no
cachedWriteIdForTable	no	yes
)	no	no
)	no	no
{	no	no
writeIdCheckPassed	no	yes
=	no	no
true	no	no
;	no	no

private	no	no
boolean	no	no
shouldEntryBeAdded	no	no
(	no	no
CacheEntry	no	no
entry	no	no
,	no	no
long	no	no
size	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
maxEntrySize	yes	no
>=	no	no
0	no	no
&&	no	no
size	yes	no
>	no	no
maxEntrySize	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
cleanupEntry	no	no
(	no	no
final	no	no
CacheEntry	no	no
entry	no	yes
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
entry	no	yes
.	no	no
getStatus	no	yes
(	no	no
)	no	no
==	no	no
CacheEntryStatus	no	yes
.	no	no
INVALID	no	yes
)	no	no
;	no	no
final	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
conf	no	yes
;	no	no
if	no	no
(	no	no
entry	no	yes
.	no	no
cachedResultsPath	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
zeroRowsPath	no	no
.	no	no
equals	no	no
(	no	no
entry	no	yes
.	no	no
cachedResultsPath	no	yes
)	no	no
)	no	no
{	no	no
deletionExecutor	no	no
.	no	no
execute	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
Path	no	yes
path	yes	yes
=	no	no
entry	no	yes
.	no	no
cachedResultsPath	no	yes
;	no	no

public	no	no
static	no	no
boolean	no	no
addIfAbsentByName	no	no
(	no	no
WriteEntity	no	no
newWriteEntity	yes	no
,	no	no
Set	no	no
<	no	no
WriteEntity	no	no
>	no	no
outputs	no	no
)	no	no
{	no	no
for	no	no
(	no	no
WriteEntity	no	no
writeEntity	yes	no
:	no	no
outputs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
writeEntity	yes	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
newWriteEntity	yes	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
validateSerDe	no	no
(	no	no
String	no	no
serdeName	yes	yes
,	no	no
HiveConf	no	no
conf	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
Deserializer	no	yes
d	no	yes
=	no	no
ReflectionUtil	no	yes
.	no	no
newInstance	no	yes
(	no	no
conf	no	yes
.	no	no
getClassByName	no	yes
(	no	no
serdeName	yes	yes
)	no	no
.	no	no
asSubclass	no	yes
(	no	no
Deserializer	no	yes
.	no	no
class	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
d	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
databases	no	yes
=	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getAllDatabases	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
desc	yes	no
.	no	no
getPattern	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

FunctionResource	no	yes
[	no	no
]	no	no
resources	no	yes
=	no	no
FunctionUtils	no	yes
.	no	no
toFunctionResource	no	yes
(	no	no
desc	no	yes
.	no	no
getResources	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FunctionUtils	no	yes
.	no	no
addFunctionResources	no	yes
(	no	no
resources	no	yes
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
udfClass	no	yes
=	no	no
getUdfClass	no	yes
(	no	no
)	no	no
;	no	no
FunctionInfo	no	yes
registered	no	yes
=	no	no
FunctionRegistry	no	yes
.	no	no
registerTemporaryUDF	no	yes
(	no	no
desc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
udfClass	no	yes
,	no	no
resources	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
registered	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
0	no	no
;	no	no
}	no	no
else	no	no
{	no	no
context	no	yes
.	no	no
getConsole	no	yes
(	no	no
)	no	no
.	no	no
printError	no	yes
(	no	no
+	no	no
desc	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
1	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no
context	no	yes
.	no	no
getConsole	no	yes
(	no	no
)	no	no
.	no	no
printError	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
1	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
context	no	yes
.	no	no
getConsole	no	yes
(	no	no
)	no	no
.	no	no
printError	no	yes
(	no	no
+	no	no
desc	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no

private	no	no
boolean	no	no
skipIfNewerThenUpdate	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
functionName	yes	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
desc	no	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dbProps	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getDatabase	no	yes
(	no	no
dbName	yes	yes
)	no	no
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
desc	no	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
.	no	no
allowEventReplacementInto	no	no
(	no	no
dbProps	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
int	no	no
handlePermanentFunctionCreationException	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no
if	no	no
(	no	no
desc	yes	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
e	no	no
.	no	no
getCause	no	no
(	no	no
)	no	no
instanceof	no	no
AlreadyExistsException	no	no
)	no	no
)	no	no
{	no	no

private	no	no
boolean	no	no
skipIfNewerThenUpdate	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
functionName	yes	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
desc	no	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dbProps	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getDatabase	no	yes
(	no	no
dbName	yes	yes
)	no	no
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
desc	no	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
.	no	no
allowEventReplacementInto	no	no
(	no	no
dbProps	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
fetchFunctions	no	no
(	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
funcs	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
desc	yes	yes
.	no	no
getPattern	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
funcs	yes	yes
=	no	no
FunctionRegistry	no	yes
.	no	no
getFunctionNamesByLikePattern	no	yes
(	no	no
desc	yes	yes
.	no	no
getPattern	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
IOException	no	no
,	no	no
TException	no	no
{	no	no
try	no	no
{	no	no
Msck	no	yes
msck	no	yes
=	no	no
new	no	no
Msck	no	yes
(	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
msck	no	yes
.	no	no
init	no	yes
(	no	no
Msck	no	yes
.	no	no
getMsckConf	no	yes
(	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
TableName	no	yes
tableName	no	yes
=	no	no
HiveTableName	no	yes
.	no	no
of	no	yes
(	no	no
desc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
partitionExpirySeconds	yes	yes
=	no	no
-	no	no
1L	no	no
;	no	no
try	no	no
(	no	no
HiveMetaStoreClient	no	no
msc	no	yes
=	no	no
new	no	no
HiveMetaStoreClient	no	no
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
msckEnablePartitionRetention	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSCK_REPAIR_ENABLE_PARTITION_RETENTION	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
msckEnablePartitionRetention	no	yes
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getCurrentCatalog	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
qualifiedTableName	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getCatalogQualifiedTableName	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
partitionExpirySeconds	yes	yes
=	no	no
PartitionManagementTask	no	yes
.	no	no
getRetentionPeriodInSeconds	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
Msck	no	yes
msck	no	yes
=	no	no
new	no	no
Msck	no	yes
(	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
msck	no	yes
.	no	no
init	no	yes
(	no	no
Msck	no	yes
.	no	no
getMsckConf	no	yes
(	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
TableName	no	yes
tableName	no	yes
=	no	no
HiveTableName	no	yes
.	no	no
of	no	yes
(	no	no
desc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
partitionExpirySeconds	no	yes
=	no	no
-	no	no
1L	no	no
;	no	no
try	no	no
(	no	no
HiveMetaStoreClient	no	no
msc	no	yes
=	no	no
new	no	no
HiveMetaStoreClient	no	no
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
msckEnablePartitionRetention	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSCK_REPAIR_ENABLE_PARTITION_RETENTION	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
msckEnablePartitionRetention	no	yes
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getCurrentCatalog	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
qualifiedTableName	no	yes
=	no	no
Warehouse	no	yes
.	no	no
getCatalogQualifiedTableName	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
partitionExpirySeconds	no	yes
=	no	no
PartitionManagementTask	no	yes
.	no	no
getRetentionPeriodInSeconds	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
qualifiedTableName	no	yes
,	no	no
partitionExpirySeconds	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
MsckInfo	no	yes
msckInfo	no	yes
=	no	no
new	no	no
MsckInfo	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getCurrentCatalog	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getFilterExp	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getResFile	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isRepairPartitions	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isAddPartitions	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isDropPartitions	no	yes
(	no	no
)	no	no
,	no	no
partitionExpirySeconds	no	yes
)	no	no
;	no	no
return	no	no
msck	no	yes
.	no	no
repair	no	yes
(	no	no
msckInfo	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	no
)	no	no
{	no	no

TableName	no	yes
tableName	no	yes
=	no	no
HiveTableName	no	yes
.	no	no
of	no	yes
(	no	no
desc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
partitionExpirySeconds	no	yes
=	no	no
-	no	no
1L	no	no
;	no	no
try	no	no
(	no	no
HiveMetaStoreClient	no	no
msc	no	yes
=	no	no
new	no	no
HiveMetaStoreClient	no	no
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
msckEnablePartitionRetention	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSCK_REPAIR_ENABLE_PARTITION_RETENTION	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
msckEnablePartitionRetention	no	yes
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getCurrentCatalog	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
qualifiedTableName	no	yes
=	no	no
Warehouse	no	yes
.	no	no
getCatalogQualifiedTableName	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
partitionExpirySeconds	no	yes
=	no	no
PartitionManagementTask	no	yes
.	no	no
getRetentionPeriodInSeconds	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
qualifiedTableName	no	yes
,	no	no
partitionExpirySeconds	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
MsckInfo	no	yes
msckInfo	no	yes
=	no	no
new	no	no
MsckInfo	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getCurrentCatalog	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getFilterExp	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getResFile	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isRepairPartitions	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isAddPartitions	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isDropPartitions	no	yes
(	no	no
)	no	no
,	no	no
partitionExpirySeconds	no	yes
)	no	no
;	no	no
return	no	no
msck	no	yes
.	no	no
repair	no	yes
(	no	no
msckInfo	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
1	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
AlterTableUtils	no	no
.	no	no
allowOperationInReplicationScope	no	no
(	no	no
context	no	no
.	no	no
getDb	no	no
(	no	no
)	no	no
,	no	no
desc	yes	no
.	no	no
getDbTableName	no	no
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
desc	yes	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
!	no	no
DDLUtils	no	no
.	no	no
allowOperationInReplicationScope	no	no
(	no	no
context	no	no
.	no	no
getDb	no	no
(	no	no
)	no	no
,	no	no
desc	yes	no
.	no	no
getDbTableName	no	no
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
desc	yes	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
!	no	no
DDLUtils	no	no
.	no	no
allowOperationInReplicationScope	no	no
(	no	no
context	no	no
.	no	no
getDb	no	no
(	no	no
)	no	no
,	no	no
desc	yes	no
.	no	no
getDbTableName	no	no
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
desc	yes	no
.	no	no
getReplicationSpec	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

public	no	no
Table	no	yes
toTable	no	no
(	no	no
HiveConf	no	no
conf	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Table	no	yes
tbl	no	yes
=	no	no
new	no	no
Table	no	yes
(	no	no
tableName	yes	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	yes	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
getTblProps	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
putAll	no	yes
(	no	no
getTblProps	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getPartCols	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setPartCols	no	yes
(	no	no
getPartCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setNumBuckets	no	yes
(	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
storageHandler	no	yes
=	no	no
tbl	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serDeClassName	yes	yes
;	no	no
if	no	no
(	no	no
getSerName	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
storageHandler	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
serDeClassName	yes	yes
=	no	no
PlanUtils	no	yes
.	no	no
getDefaultSerDe	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

tbl	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
putAll	no	yes
(	no	no
getTblProps	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getPartCols	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setPartCols	no	yes
(	no	no
getPartCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setNumBuckets	no	yes
(	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
storageHandler	no	yes
=	no	no
tbl	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serDeClassName	yes	yes
;	no	no
if	no	no
(	no	no
getSerName	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
storageHandler	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
serDeClassName	yes	yes
=	no	no
PlanUtils	no	yes
.	no	no
getDefaultSerDe	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
serDeClassName	yes	yes
+	no	no
+	no	no
tableName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
serDeClassName	yes	yes
=	no	no
storageHandler	no	yes
.	no	no
getSerDeClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Table	no	yes
tbl	yes	yes
=	no	no
desc	no	yes
.	no	no
toTable	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getForeignKeys	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getUniqueConstraints	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getNotNullConstraints	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getDefaultConstraints	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
desc	no	yes
.	no	no
getCheckConstraints	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
createTable	no	yes
(	no	no
tbl	no	yes
,	no	no
desc	no	yes
.	no	no
getIfNotExists	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getForeignKeys	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getUniqueConstraints	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getNotNullConstraints	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getDefaultConstraints	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getCheckConstraints	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
createTable	no	yes
(	no	no
tbl	no	yes
,	no	no
desc	no	yes
.	no	no
getIfNotExists	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isCTAS	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
createdTable	no	yes
=	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
DataContainer	no	yes
dc	no	yes
=	no	no
new	no	no
DataContainer	no	yes
(	no	no
createdTable	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getQueryState	no	yes
(	no	no
)	no	no
.	no	no
getLineageState	no	yes
(	no	no
)	no	no
.	no	no
setLineage	no	yes
(	no	no
createdTable	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
dc	no	yes
,	no	no
createdTable	no	yes
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
createdTable	no	yes
.	no	no
isPartitioned	no	no
(	no	no
)	no	no
&&	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
createdTable	no	yes
)	no	no
)	no	no
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
Table	no	yes
tTable	no	yes
=	no	no
createdTable	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
tabLocation	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tTable	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
newFilesList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Hive	no	yes
.	no	no
listFilesInsideAcidDirectory	no	yes
(	no	no
tabLocation	no	yes
,	no	no
tabLocation	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
newFilesList	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
setStorage	no	no
(	no	no
Table	no	no
table	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
table	no	yes
.	no	no
setInputFormatClass	no	yes
(	no	no
desc	yes	yes
.	no	no
getDefaultInputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setOutputFormatClass	no	yes
(	no	no
desc	yes	yes
.	no	no
getDefaultOutputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setInputFormat	no	yes
(	no	no
table	no	yes
.	no	no
getInputFormatClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setOutputFormat	no	yes
(	no	no
table	no	yes
.	no	no
getOutputFormatClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
desc	yes	yes
.	no	no
getDefaultSerName	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no

if	no	no
(	no	no
desc	yes	yes
.	no	no
getValidationRequired	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
isView	no	no
(	no	no
)	no	no
||	no	no
table	no	yes
.	no	no
isMaterializedView	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
desc	yes	yes
.	no	no
isIfExists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
0	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
isView	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
ReplicationSpec	no	yes
replicationSpec	no	yes
=	no	no
desc	yes	yes
.	no	no
getReplicationSpec	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replicationSpec	no	yes
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
replicationSpec	no	yes
.	no	no
allowEventReplacementInto	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
isPartitioned	no	no
(	no	no
)	no	no
)	no	no
{	no	no
PartitionIterable	no	yes
partitions	no	yes
=	no	no
new	no	no
PartitionIterable	no	yes
(	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
,	no	no
null	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BATCH_RETRIEVE_MAX	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	no
p	no	yes
:	no	no
Iterables	no	no
.	no	no
filter	no	no
(	no	no
partitions	no	yes
,	no	no
replicationSpec	no	yes
.	no	no
allowEventReplacementInto	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
dropPartition	no	yes
(	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
p	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
Partition	no	yes
part	no	yes
=	no	no
getPartition	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
dbTableName	yes	yes
=	no	no
desc	no	yes
.	no	no
getDbTableName	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
DataOutputStream	no	no
outStream	no	no
=	no	no
DDLUtils	no	no
.	no	no
getOutputStream	no	no
(	no	no
new	no	no
Path	no	no
(	no	no
desc	no	yes
.	no	no
getResFile	no	no
(	no	no
)	no	no
)	no	no
,	no	no
context	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
FieldSchema	no	yes
>	no	no
cols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
colStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Deserializer	no	yes
deserializer	no	yes
=	no	no
getDeserializer	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
getColumnPath	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
getColumnsNoColumnPath	no	yes
(	no	no
table	no	yes
,	no	no
part	no	yes
,	no	no
cols	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isFormatted	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
getColumnDataColPathSpecified	no	yes
(	no	no
table	no	yes
,	no	no
part	no	yes
,	no	no
cols	no	yes
,	no	no
colStats	no	yes
,	no	no
deserializer	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
cols	no	yes
.	no	no
addAll	no	yes
(	no	no
Hive	no	yes
.	no	no
getFieldsFromDeserializer	no	yes
(	no	no
desc	no	yes
.	no	no
getColumnPath	no	yes
(	no	no
)	no	no
,	no	no
deserializer	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
fixDecimalColumnTypeName	no	yes
(	no	no
cols	no	yes
)	no	no
;	no	no
setConstraintsAndStorageHandlerInfo	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
handleMaterializedView	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
boolean	no	no
isOutputPadded	no	yes
=	no	no
!	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
isHiveServerQuery	no	yes
(	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getFormatter	no	yes
(	no	no
)	no	no
.	no	no
describeTable	no	yes
(	no	no
outStream	no	yes
,	no	no
desc	no	yes
.	no	no
getColumnPath	no	yes
(	no	no
)	no	no
,	no	no
dbTableName	yes	yes
,	no	no
table	no	yes
,	no	no
part	no	yes
,	no	no
cols	no	yes
,	no	no
desc	no	yes
.	no	no
isFormatted	no	yes
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
isExtended	no	yes
(	no	no
)	no	no
,	no	no
isOutputPadded	no	yes
,	no	no
colStats	no	yes
)	no	no
;	no	no

StringBuilder	no	yes
builder	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
propertyName	no	yes
=	no	no
desc	no	yes
.	no	no
getPropertyName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
propertyName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
propertyValue	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
propertyName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
propertyValue	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
errMsg	no	yes
=	no	no
+	no	no
tableName	yes	yes
+	no	no
+	no	no
propertyName	no	yes
;	no	no
builder	no	yes
.	no	no
append	no	yes
(	no	no
errMsg	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
DDLUtils	no	yes
.	no	no
appendNonNull	no	yes
(	no	no
builder	no	yes
,	no	no
propertyName	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
DDLUtils	no	yes
.	no	no
appendNonNull	no	yes
(	no	no
builder	no	yes
,	no	no
propertyValue	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
properties	no	yes
=	no	no
new	no	no
TreeMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
tbl	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
entry	no	yes
:	no	no
properties	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
DDLUtils	no	yes
.	no	no
appendNonNull	no	yes
(	no	no
builder	no	yes
,	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
DDLUtils	no	yes
.	no	no
appendNonNull	no	yes
(	no	no
builder	no	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

truncateWork	no	yes
.	no	no
setListBucketingCtx	no	yes
(	no	no
desc	no	yes
.	no	no
getLbCtx	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
truncateWork	no	yes
.	no	no
setMapperCannotSpanPartns	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
TaskQueue	no	yes
taskQueue	no	yes
=	no	no
new	no	no
TaskQueue	no	yes
(	no	no
)	no	no
;	no	no
ColumnTruncateTask	no	yes
taskExec	no	yes
=	no	no
new	no	no
ColumnTruncateTask	no	yes
(	no	no
)	no	no
;	no	no
taskExec	no	yes
.	no	no
initialize	no	yes
(	no	no
context	no	yes
.	no	no
getQueryState	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
taskQueue	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
taskExec	no	yes
.	no	no
setWork	no	yes
(	no	no
truncateWork	no	yes
)	no	no
;	no	no
taskExec	no	yes
.	no	no
setQueryPlan	no	yes
(	no	no
context	no	yes
.	no	no
getQueryPlan	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
ret	no	yes
=	no	no
taskExec	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
taskExec	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
context	no	yes
.	no	no
getTask	no	yes
(	no	no
)	no	no
.	no	no
setException	no	yes
(	no	no
taskExec	no	yes
.	no	no
getException	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
ret	no	yes
;	no	no
}	no	no
String	no	yes
tableName	yes	yes
=	no	no
desc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
ReplicationSpec	no	yes
replicationSpec	no	yes
=	no	no
desc	no	yes
.	no	no
getReplicationSpec	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
DDLUtils	no	no
.	no	no
allowOperationInReplicationScope	no	no
(	no	no
context	no	yes
.	no	no
getDb	no	no
(	no	no
)	no	no
,	no	no
tableName	yes	yes
,	no	no
partSpec	no	yes
,	no	no
replicationSpec	no	yes
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
partitionSpec	no	yes
:	no	no
partitionSpecs	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
parts	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
allowMany	no	no
)	no	no
{	no	no
try	no	no
{	no	no
parts	no	yes
=	no	no
db	no	yes
.	no	no
getPartitions	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
parts	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Partition	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Partition	no	yes
p	no	yes
=	no	no
db	no	yes
.	no	no
getPartition	no	yes
(	no	no
table	no	yes
,	no	no
partitionSpec	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
parts	no	yes
.	no	no
add	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
tableName	yes	yes
=	no	no
desc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
oldPartSpec	no	yes
=	no	no
desc	no	yes
.	no	no
getOldPartSpec	no	yes
(	no	no
)	no	no
;	no	no
ReplicationSpec	no	yes
replicationSpec	no	yes
=	no	no
desc	no	yes
.	no	no
getReplicationSpec	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
AlterTableUtils	no	no
.	no	no
allowOperationInReplicationScope	no	no
(	no	no
context	no	no
.	no	no
getDb	no	no
(	no	no
)	no	no
,	no	no
tableName	yes	yes
,	no	no
oldPartSpec	no	yes
,	no	no
replicationSpec	no	yes
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
analyzeInternal	no	no
(	no	no
ASTNode	no	yes
root	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
TableName	no	yes
viewName	no	yes
=	no	no
getQualifiedTableName	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
root	yes	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
fqViewName	yes	yes
=	no	no
viewName	no	yes
.	no	no
getNotEmptyDbTable	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
sortColNames	no	yes
)	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
Constants	no	yes
.	no	no
MATERIALIZED_VIEW_SORT_COLUMNS	no	yes
,	no	no
Utilities	no	yes
.	no	no
encodeColumnNames	no	yes
(	no	no
sortColNames	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
distributeColNames	no	yes
)	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
Constants	no	yes
.	no	no
MATERIALIZED_VIEW_DISTRIBUTE_COLUMNS	no	yes
,	no	no
Utilities	no	yes
.	no	no
encodeColumnNames	no	yes
(	no	no
distributeColNames	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getInputFormat	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setInputFormatClass	no	yes
(	no	no
getInputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setOutputFormatClass	no	yes
(	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getLocation	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setDataLocation	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
storageHandler	no	yes
=	no	no
tbl	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serDeClassName	yes	yes
;	no	no
if	no	no
(	no	no
getSerde	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
distributeColNames	no	yes
)	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
Constants	no	yes
.	no	no
MATERIALIZED_VIEW_DISTRIBUTE_COLUMNS	no	yes
,	no	no
Utilities	no	yes
.	no	no
encodeColumnNames	no	yes
(	no	no
distributeColNames	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getInputFormat	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setInputFormatClass	no	yes
(	no	no
getInputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setOutputFormatClass	no	yes
(	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getLocation	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setDataLocation	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tbl	no	yes
.	no	no
setProperty	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
storageHandler	no	yes
=	no	no
tbl	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serDeClassName	yes	yes
;	no	no
if	no	no
(	no	no
getSerde	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
storageHandler	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
serDeClassName	yes	yes
=	no	no
PlanUtils	no	yes
.	no	no
getDefaultSerDe	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isRetrieveAndInclude	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
mvTable	no	yes
=	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
desc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HiveMaterializedViewsRegistry	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
createMaterializedView	no	yes
(	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
mvTable	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isDisableRewrite	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
names	no	yes
=	no	no
desc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
HiveMaterializedViewsRegistry	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
dropMaterializedView	no	yes
(	no	no
names	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
names	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isUpdateCreationMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
mvTable	no	yes
=	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
desc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
CreationMetadata	no	yes
cm	no	yes
=	no	no
new	no	no
CreationMetadata	no	yes
(	no	no
MetaStoreUtils	no	yes
.	no	no
getDefaultCatalog	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
mvTable	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
mvTable	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
ImmutableSet	no	yes
.	no	no
copyOf	no	yes
(	no	no
mvTable	no	yes
.	no	no
getCreationMetadata	no	yes
(	no	no
)	no	no
.	no	no
getTablesUsed	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
cm	no	yes
.	no	no
setValidTxnList	no	yes
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
ValidTxnWriteIdList	no	yes
.	no	no
VALID_TABLES_WRITEIDS_KEY	no	yes
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
updateCreationMetadata	no	yes
(	no	no
mvTable	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
mvTable	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
cm	no	yes
)	no	no
;	no	no
mvTable	no	yes
.	no	no
setCreationMetadata	no	yes
(	no	no
cm	no	yes
)	no	no
;	no	no
HiveMaterializedViewsRegistry	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
createMaterializedView	no	yes
(	no	no
context	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
mvTable	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
int	no	no
handleWMServiceChange	no	no
(	no	no
WorkloadManager	no	no
wm	no	no
,	no	no
boolean	no	no
isActivate	no	no
,	no	no
WMFullResourcePlan	no	no
appliedResourcePlan	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
name	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
isActivate	no	no
)	no	no
{	no	no
name	yes	yes
=	no	no
appliedResourcePlan	yes	yes
.	no	no
getPlan	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
wm	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ListenableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
wm	no	yes
.	no	no
updateResourcePlanAsync	no	yes
(	no	no
appliedResourcePlan	no	yes
)	no	no
;	no	no
boolean	no	no
isOk	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
isOk	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
isActivate	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isOk	no	yes
)	no	no
{	no	no

future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
isOk	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
isActivate	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isOk	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
isActivate	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
TezSessionPoolManager	no	yes
pm	no	yes
=	no	no
TezSessionPoolManager	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
dumpHeap	no	no
(	no	no
String	no	no
fileName	no	yes
,	no	no
boolean	no	no
live	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
hotspotMBean	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
MBeanServer	no	yes
server	no	yes
=	no	no
ManagementFactory	no	yes
.	no	no
getPlatformMBeanServer	no	yes
(	no	no
)	no	no
;	no	no
hotspotMBean	no	yes
=	no	no
ManagementFactory	no	yes
.	no	no
newPlatformMXBeanProxy	no	yes
(	no	no
server	no	yes
,	no	no
HOTSPOT_BEAN_NAME	no	yes
,	no	no
HOTSPOT_MXBEAN_CLASS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
DUMP_HEAP_METHOD	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
DUMP_HEAP_METHOD	no	yes
.	no	no
invoke	no	yes
(	no	no
hotspotMBean	no	yes
,	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
fileName	no	yes
,	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
live	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	yes
re	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
re	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
re	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exp	yes	no
)	no	no
{	no	no

protected	no	no
void	no	no
checkPartitionsMatch	no	no
(	no	no
Path	no	no
inputPath	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
dpPath	no	yes
.	no	no
equals	no	no
(	no	no
inputPath	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
dpPath	no	yes
+	no	no
+	no	no
inputPath	no	yes
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
jobCloseOp	no	no
(	no	no
Configuration	no	no
hconf	no	yes
,	no	no
boolean	no	no
success	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
Path	no	yes
outputDir	yes	yes
=	no	no
conf	no	yes
.	no	no
getOutputPath	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
outputDir	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
Long	no	yes
mmWriteId	no	yes
=	no	no
conf	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
stmtId	no	yes
=	no	no
conf	no	yes
.	no	no
getStmtId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isMmTable	no	no
)	no	no
{	no	no
Path	no	yes
backupPath	no	yes
=	no	no
backupOutputPath	no	yes
(	no	no
fs	no	yes
,	no	no
outputDir	yes	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
mvFileToFinalPath	no	yes
(	no	no
outputDir	yes	yes
,	no	no
hconf	no	yes
,	no	no
success	no	yes
,	no	no
LOG	no	yes
,	no	no
conf	no	yes
.	no	no
getDpCtx	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
reporter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
success	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	yes	yes
,	no	no
int	no	no
tag	no	no
)	no	no
throws	no	no
HiveException	no	yes
{	no	no
if	no	no
(	no	no
hasReachedMaxSize	no	yes
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
ObjectInspector	no	yes
rowInspector	no	yes
=	no	no
inputObjInspectors	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
try	no	no
{	no	no
Writable	no	yes
writableRow	no	yes
=	no	no
serializer	no	yes
.	no	no
serialize	no	yes
(	no	no
row	yes	yes
,	no	no
rowInspector	no	yes
)	no	no
;	no	no
writableRow	no	yes
.	no	no
write	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
buffer	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
>	no	no
MAX_SIZE	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
buffer	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
hasReachedMaxSize	no	yes
=	no	no
true	no	no
;	no	no
buffer	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

int	no	no
sum	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numAliases	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
offsets	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
sum	no	yes
;	no	no
sum	no	yes
+=	no	no
joinValues	no	yes
[	no	no
order	no	yes
[	no	no
i	no	yes
]	no	no
]	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
offsets	no	yes
[	no	no
numAliases	no	yes
]	no	no
=	no	no
sum	no	yes
;	no	no
outputObjInspector	yes	yes
=	no	no
getJoinOutputObjectInspector	no	yes
(	no	no
order	no	yes
,	no	no
joinValuesStandardObjectInspectors	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
condn	no	no
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
condn	no	no
[	no	no
i	no	yes
]	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
JoinDesc	no	no
.	no	no
LEFT_SEMI_JOIN	no	no
)	no	no
{	no	no
hasLeftSemiJoin	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
condn	no	no
[	no	no
i	no	yes
]	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
JoinDesc	no	no
.	no	no
ANTI_JOIN	no	no
)	no	no
{	no	no
hasLeftAntiSemiJoin	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
getResidualFilterExprs	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
residualJoinFilters	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
conf	no	yes
.	no	no
getResidualFilterExprs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
residualJoinFiltersOIs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
conf	no	yes
.	no	no
getResidualFilterExprs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
conf	no	yes
.	no	no
getResidualFilterExprs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no

public	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
getAliasBucketFiles	no	no
(	no	no
String	no	yes
refTableInputFile	yes	yes
,	no	no
String	no	yes
refTableAlias	no	no
,	no	no
String	no	yes
alias	yes	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
pathStr	no	yes
=	no	no
aliasBucketMapping	no	yes
.	no	no
get	no	yes
(	no	no
alias	yes	yes
)	no	no
.	no	no
get	no	yes
(	no	no
refTableInputFile	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
paths	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Path	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pathStr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
p	yes	no
:	no	no
pathStr	no	yes
)	no	no
{	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
childrenDone	no	yes
=	no	no
0	no	no
;	no	no
newChildOperatorsTag	yes	yes
=	no	no
new	no	no
int	no	no
[	no	no
childOperators	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
[	no	no
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
childOperators	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
child	no	yes
=	no	no
childOperators	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
childOperatorTags	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
child	no	yes
instanceof	no	no
MuxOperator	no	no
)	no	no
{	no	no
int	no	no
index	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parent	no	no
:	no	no
child	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
this	no	no
==	no	no
parent	no	no
)	no	no
{	no	no
childOperatorTags	no	yes
.	no	no
add	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
}	no	no
index	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
childOperatorTags	no	yes
.	no	no
add	no	yes
(	no	no
child	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
indexOf	no	yes
(	no	no
this	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
initializeChildren	no	no
(	no	no
Configuration	no	no
hconf	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
state	no	yes
=	no	no
State	no	yes
.	no	no
INIT	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
id	no	yes
+	no	no
+	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
i	yes	yes
+	no	no
+	no	no
childOperatorsArray	no	yes
[	no	no
i	yes	yes
]	no	no
.	no	no
getIdentifier	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
childOperatorsArray	no	yes
[	no	no
i	yes	yes
]	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
childInputObjInspectors	no	yes
[	no	no
i	yes	yes
]	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
childOperatorsArray	no	yes
[	no	no
i	yes	yes
]	no	no
instanceof	no	no
MuxOperator	no	no
)	no	no
{	no	no
ObjectInspector	no	yes
[	no	no
]	no	no
ois	no	yes
=	no	no
childInputObjInspectors	no	yes
[	no	no
i	yes	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
ois	no	yes
.	no	no
length	no	yes
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
ois	no	yes
[	no	no
j	no	yes
]	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
childOperatorsArray	no	yes
[	no	no
i	yes	yes
]	no	no
.	no	no
initialize	no	yes
(	no	no
hconf	no	yes
,	no	no
ois	no	yes
[	no	no
j	no	yes
]	no	no
,	no	no
j	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
reporter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
childOperatorsArray	no	yes
[	no	no
i	yes	yes
]	no	no
.	no	no
setReporter	no	yes
(	no	no
reporter	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	no	no
,	no	no
int	no	no
tag	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
int	no	no
currentChildIndex	yes	yes
=	no	no
newTagToChildIndex	no	yes
[	no	no
tag	yes	yes
]	no	no
;	no	no
endGroupIfNecessary	no	yes
(	no	no
currentChildIndex	yes	yes
)	no	no
;	no	no
int	no	no
oldTag	yes	yes
=	no	no
newTagToOldTag	no	yes
[	no	no
tag	yes	yes
]	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cntrs	no	yes
[	no	no
tag	yes	yes
]	no	no
++	no	no
;	no	no
if	no	no
(	no	no
cntrs	no	yes
[	no	no
tag	yes	yes
]	no	no
==	no	no
nextCntrs	no	no
[	no	no
tag	yes	yes
]	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
closeOp	no	no
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
newTagToOldTag	no	yes
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	no
newTag	yes	yes
=	no	no
i	no	yes
;	no	no
int	no	no
oldTag	yes	yes
=	no	no
newTagToOldTag	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
int	no	no
childIndex	yes	yes
=	no	no
newTagToChildIndex	no	yes
[	no	no
newTag	yes	yes
]	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isAst	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getAstStringTree	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
outputAST	no	yes
(	no	no
work	no	yes
.	no	no
getAstStringTree	no	yes
(	no	no
)	no	no
,	no	no
out	no	yes
,	no	no
work	no	yes
.	no	no
isFormatted	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isUserLevelExplain	no	no
(	no	no
)	no	no
)	no	no
{	no	no
JsonParser	no	yes
jsonParser	no	yes
=	no	no
JsonParserFactory	no	yes
.	no	no
getParser	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getConfig	no	yes
(	no	no
)	no	no
.	no	no
setFormatted	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
JSONObject	no	yes
jsonPlan	yes	yes
=	no	no
getJSONPlan	no	yes
(	no	no
out	no	yes
,	no	no
work	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getCboInfo	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
jsonPlan	yes	yes
.	no	no
put	no	yes
(	no	no
,	no	no
work	no	yes
.	no	no
getCboInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
jsonParser	no	yes
.	no	no
print	no	yes
(	no	no
jsonPlan	yes	yes
,	no	no
out	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getConfig	no	yes
(	no	no
)	no	no
.	no	no
setFormatted	no	yes
(	no	no
false	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
TableExport	no	yes
.	no	no
Paths	no	yes
exportPaths	yes	yes
=	no	no
new	no	no
TableExport	no	yes
.	no	no
Paths	no	yes
(	no	no
work	no	yes
.	no	no
getAstRepresentationForErrorMsg	no	yes
(	no	no
)	no	no
,	no	no
work	no	yes
.	no	no
getExportRootDir	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
Hive	no	yes
db	no	yes
=	no	no
getHive	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
setValidWriteIdList	no	no
(	no	no
String	no	no
writeIdStr	yes	yes
)	no	no
{	no	no
job	no	yes
.	no	no
set	no	yes
(	no	no
ValidWriteIdList	no	yes
.	no	no
VALID_WRITEIDS_KEY	no	yes
,	no	no
writeIdStr	yes	yes
)	no	no
;	no	no

private	no	no
ValidWriteIdList	no	yes
extractValidWriteIdList	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
currDesc	no	no
.	no	no
getTableName	no	no
(	no	no
)	no	no
==	no	no
null	no	no
||	no	no
!	no	no
org	no	no
.	no	no
apache	no	no
.	no	no
commons	no	no
.	no	no
lang3	no	no
.	no	no
StringUtils	no	no
.	no	no
isBlank	no	no
(	no	no
currDesc	no	no
.	no	no
getTableName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
txnString	yes	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
ValidWriteIdList	no	yes
.	no	no
VALID_WRITEIDS_KEY	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
if	no	no
(	no	no
job	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
job	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
source	no	yes
=	no	no
work	no	yes
.	no	no
getSource	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
source	no	yes
instanceof	no	no
TableScanOperator	no	yes
)	no	no
{	no	no
TableScanOperator	no	yes
ts	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
source	no	yes
;	no	no
ColumnProjectionUtils	no	yes
.	no	no
appendReadColumns	no	yes
(	no	no
job	no	yes
,	no	no
ts	no	yes
.	no	no
getNeededColumnIDs	no	yes
(	no	no
)	no	no
,	no	no
ts	no	yes
.	no	no
getNeededColumns	no	yes
(	no	no
)	no	no
,	no	no
ts	no	yes
.	no	no
getNeededNestedColumnPaths	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
HiveInputFormat	no	yes
.	no	no
pushFilters	no	yes
(	no	no
job	no	yes
,	no	no
ts	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
setAcidOperationalProperties	no	yes
(	no	no
job	no	yes
,	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isTranscationalTable	no	yes
(	no	no
)	no	no
,	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getAcidOperationalProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sink	no	yes
=	no	no
work	no	yes
.	no	no
getSink	no	yes
(	no	no
)	no	no
;	no	no
fetch	no	yes
=	no	no
new	no	no
FetchOperator	no	yes
(	no	no
work	no	yes
,	no	no
job	no	yes
,	no	no
source	no	yes
,	no	no
getVirtualColumns	no	yes
(	no	no
source	no	yes
)	no	no
)	no	no
;	no	no
source	no	yes
.	no	no
initialize	no	yes
(	no	no
conf	no	yes
,	no	no
new	no	no
ObjectInspector	no	yes
[	no	no
]	no	no
{	no	no
fetch	no	yes
.	no	no
getOutputObjectInspector	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
totalRows	no	yes
=	no	no
0	no	no
;	no	no
ExecMapper	no	yes
.	no	no
setDone	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
closeOp	no	no
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
row_count	no	yes
.	no	no
set	no	yes
(	no	no
numRows	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
GenericUDAFResolver	no	no
getGenericUDAFResolver	no	no
(	no	no
String	no	no
functionName	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
if	no	no
(	no	no
genericUDF	yes	yes
instanceof	no	no
GenericUDFMacro	no	yes
)	no	no
{	no	no
GenericUDFMacro	no	yes
bridge	no	yes
=	no	no
(	no	no
GenericUDFMacro	no	yes
)	no	no
genericUDF	yes	yes
;	no	no
clonedUDF	no	yes
=	no	no
new	no	no
GenericUDFMacro	no	yes
(	no	no
bridge	no	yes
.	no	no
getMacroName	no	yes
(	no	no
)	no	no
,	no	no
bridge	no	yes
.	no	no
getBody	no	yes
(	no	no
)	no	no
.	no	no
clone	no	yes
(	no	no
)	no	no
,	no	no
bridge	no	yes
.	no	no
getColNames	no	yes
(	no	no
)	no	no
,	no	no
bridge	no	yes
.	no	no
getColTypes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
clonedUDF	no	yes
=	no	no
ReflectionUtils	no	yes
.	no	no
newInstance	no	yes
(	no	no
genericUDF	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
clonedUDF	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
genericUDF	yes	yes
.	no	no
copyToNewInstance	no	yes
(	no	no
clonedUDF	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UDFArgumentException	no	no
err	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
err	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
genericUDF	yes	yes
instanceof	no	no
SettableUDF	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
TypeInfo	no	yes
typeInfo	no	yes
=	no	no
(	no	no
(	no	no
SettableUDF	no	yes
)	no	no
genericUDF	yes	yes
)	no	no
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
typeInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
(	no	no
(	no	no
SettableUDF	no	yes
)	no	no
clonedUDF	no	yes
)	no	no
.	no	no
setTypeInfo	no	yes
(	no	no
typeInfo	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
AggregationBuffer	no	yes
[	no	no
]	no	no
>	no	no
entry	no	yes
:	no	no
hashAggregations	yes	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
forward	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getKeyArray	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
hashAggregations	yes	yes
=	no	no
null	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
int	no	no
oldSize	no	yes
=	no	no
hashAggregations	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
oldSize	no	yes
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
AggregationBuffer	no	yes
[	no	no
]	no	no
>>	no	no
iter	no	yes
=	no	no
hashAggregations	yes	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numDel	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
AggregationBuffer	no	yes
[	no	no
]	no	no
>	no	no
m	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
forward	no	yes
(	no	no
m	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getKeyArray	no	yes
(	no	no
)	no	no
,	no	no
m	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
iter	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
numDel	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
numDel	no	yes
*	no	no
10	no	no
>=	no	no
oldSize	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
flush	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
hashAggregations	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

protected	no	no
void	no	no
flushToFile	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
HiveException	no	no
{	no	no
Path	no	yes
tmpURI	yes	yes
=	no	no
getExecContext	no	yes
(	no	no
)	no	no
.	no	no
getLocalWork	no	yes
(	no	no
)	no	no
.	no	no
getTmpPath	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
configurePartitioner	no	no
(	no	no
JobConf	no	no
conf	yes	no
)	no	no
{	no	no

List	no	yes
<	no	no
Object	no	yes
>	no	no
nr	no	yes
=	no	no
getFilteredValue	no	yes
(	no	no
alias	yes	yes
,	no	no
row	no	yes
)	no	no
;	no	no
addToAliasFilterTags	no	yes
(	no	no
alias	yes	yes
,	no	no
nr	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
handleSkewJoin	no	no
)	no	no
{	no	no
skewJoinKeyContext	no	yes
.	no	no
handleSkew	no	yes
(	no	no
tag	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
long	no	no
sz	yes	yes
=	no	no
storage	no	yes
[	no	no
alias	yes	yes
]	no	no
.	no	no
rowCount	no	yes
(	no	no
)	no	no
;	no	no
StructObjectInspector	no	yes
soi	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
inputObjInspectors	no	yes
[	no	no
tag	no	yes
]	no	no
;	no	no
StructField	no	yes
sf	no	yes
=	no	no
soi	no	yes
.	no	no
getStructFieldRef	no	yes
(	no	no
Utilities	no	yes
.	no	no
ReduceField	no	yes
.	no	no
KEY	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
keyObject	yes	yes
=	no	no
(	no	no
List	no	yes
)	no	no
soi	no	yes
.	no	no
getStructFieldData	no	yes
(	no	no
row	no	yes
,	no	no
sf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
alias	yes	yes
==	no	no
numAliases	no	no
-	no	no
1	no	no
&&	no	no
!	no	no
(	no	no
handleSkewJoin	no	no
&&	no	no
skewJoinKeyContext	no	yes
.	no	no
currBigKeyTag	no	no
>=	no	no
0	no	no
)	no	no
&&	no	no
!	no	no
hasLeftSemiJoin	no	no
&&	no	no
!	no	no
hasLeftAntiSemiJoin	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sz	yes	yes
==	no	no
joinEmitInterval	no	no
&&	no	no
!	no	no
hasFilter	no	no
(	no	no
condn	no	no
[	no	no
alias	yes	yes
-	no	no
1	no	no
]	no	no
.	no	no
getLeft	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
hasFilter	no	no
(	no	no
condn	no	no
[	no	no
alias	yes	yes
-	no	no
1	no	no
]	no	no
.	no	no
getRight	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
checkAndGenObject	no	yes
(	no	no
)	no	no
;	no	no
storage	no	yes
[	no	no
alias	yes	yes
]	no	no
.	no	no
clearRows	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
alias	yes	yes
.	no	no
equals	no	no
(	no	no
lastAlias	no	no
)	no	no
)	no	no
{	no	no
nextSz	no	yes
=	no	no
getNextSize	no	yes
(	no	no
0L	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
sz	yes	yes
==	no	no
nextSz	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
continueProcess	no	no
(	no	no
int	no	no
partitionId	yes	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
IOException	no	no
,	no	no
SerDeException	no	no
,	no	no
ClassNotFoundException	no	no
{	no	no
for	no	no
(	no	no
byte	no	no
pos	no	no
=	no	no
0	no	no
;	no	no
pos	no	no
<	no	no
mapJoinTables	no	no
.	no	no
length	no	no
;	no	no
pos	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	no
!=	no	no
conf	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	no
void	no	no
reloadHashTable	no	no
(	no	no
byte	no	no
pos	no	yes
,	no	no
int	no	no
partitionId	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
HiveException	no	no
,	no	no
SerDeException	no	no
,	no	no
ClassNotFoundException	no	no
{	no	no
HybridHashTableContainer	no	yes
container	no	yes
=	no	no
(	no	no
HybridHashTableContainer	no	yes
)	no	no
mapJoinTables	no	yes
[	no	no
pos	no	yes
]	no	no
;	no	no
HashPartition	no	yes
partition	no	yes
=	no	no
container	no	yes
.	no	no
getHashPartitions	no	yes
(	no	no
)	no	no
[	no	no
partitionId	no	yes
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
KeyValueContainer	no	yes
kvContainer	yes	yes
=	no	no
partition	no	yes
.	no	no
getSidefileKVContainer	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
rowCount	no	yes
=	no	no
kvContainer	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

protected	no	no
void	no	no
reProcessBigTable	no	no
(	no	no
int	no	no
partitionId	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
HashPartition	no	yes
partition	no	yes
=	no	no
firstSmallTable	no	yes
.	no	no
getHashPartitions	no	yes
(	no	no
)	no	no
[	no	no
partitionId	yes	yes
]	no	no
;	no	no
ObjectContainer	no	yes
bigTable	yes	yes
=	no	no
partition	no	yes
.	no	no
getMatchfileObjContainer	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
cleanupGraceHashJoin	no	no
(	no	no
)	no	no
{	no	no
for	no	no
(	no	no
byte	no	no
pos	yes	no
=	no	no
0	no	no
;	no	no
pos	yes	no
<	no	no
mapJoinTables	no	no
.	no	no
length	no	no
;	no	no
pos	yes	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	yes	no
!=	no	no
conf	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
canSkipReload	no	no
(	no	no
mapContext	no	no
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
JoinCondDesc	no	yes
[	no	no
]	no	no
joinConds	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getConds	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
joinConds	no	yes
.	no	no
length	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
JoinCondDesc	no	yes
joinCond	no	no
:	no	no
joinConds	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
joinCond	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
!=	no	no
JoinDesc	no	no
.	no	no
INNER_JOIN	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
boolean	no	no
skipJoinProcessing	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
int	no	no
idx	yes	yes
=	no	no
0	no	no
;	no	no
idx	yes	yes
<	no	no
mapJoinTables	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
idx	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
idx	yes	yes
==	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
MapJoinTableContainer	no	yes
mapJoinTable	no	yes
=	no	no
mapJoinTables	no	yes
[	no	no
idx	yes	yes
]	no	no
;	no	no
if	no	no
(	no	no
mapJoinTable	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	no
void	no	no
setChildren	no	no
(	no	no
Configuration	no	yes
hconf	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
children	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Configuration	no	yes
>	no	no
tableNameToConf	no	yes
=	no	no
cloneConfsForNestedColPruning	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
TableDesc	no	yes
,	no	no
StructObjectInspector	no	yes
>	no	no
convertedOI	no	yes
=	no	no
getConvertedOI	no	yes
(	no	no
tableNameToConf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
conf	no	yes
.	no	no
getPathToAliases	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
onefile	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
aliases	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
PartitionDesc	no	yes
partDesc	no	yes
=	no	no
conf	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
onefile	yes	yes
)	no	no
;	no	no
TableDesc	no	yes
tableDesc	no	yes
=	no	no
partDesc	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
;	no	no
Configuration	no	yes
newConf	no	yes
=	no	no
tableNameToConf	no	yes
.	no	no
get	no	yes
(	no	no
tableDesc	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
alias	yes	yes
:	no	no
aliases	no	yes
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
op	no	yes
=	no	no
conf	no	yes
.	no	no
getAliasToWork	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
alias	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
closeOp	no	yes
(	no	no
boolean	no	no
abort	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
super	no	no
.	no	no
closeOp	no	yes
(	no	no
abort	yes	yes
)	no	no
;	no	no

}	no	no
try	no	no
{	no	no
srcFs	no	yes
=	no	no
sourcePath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
srcFs	no	yes
.	no	no
exists	no	no
(	no	no
sourcePath	no	yes
)	no	no
)	no	no
{	no	no
Path	no	yes
deletePath	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
HiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_INSERT_INTO_MULTILEVEL_DIRS	no	no
)	no	no
)	no	no
{	no	no
deletePath	yes	yes
=	no	no
createTargetPath	no	yes
(	no	no
targetPath	no	yes
,	no	no
tgtFs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
work	no	no
.	no	no
isNeedCleanTarget	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Hive	no	yes
.	no	no
clearDestForSubDirSrc	no	yes
(	no	no
conf	no	yes
,	no	no
targetPath	no	yes
,	no	no
sourcePath	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
Hive	no	yes
.	no	no
moveFile	no	no
(	no	no
conf	no	yes
,	no	no
sourcePath	no	yes
,	no	no
targetPath	no	yes
,	no	no
true	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
deletePath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
tgtFs	no	yes
.	no	no
delete	no	yes
(	no	no
deletePath	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
,	no	no
Partition	no	yes
>	no	no
entry	yes	yes
:	no	no
dp	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
partn	no	yes
=	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tbd	no	yes
.	no	no
isMmTable	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
ti	no	yes
.	no	no
bucketCols	no	yes
!=	no	no
null	no	no
||	no	no
ti	no	yes
.	no	no
sortCols	no	yes
!=	no	no
null	no	no
)	no	no
)	no	no
{	no	no
updatePartitionBucketSortColumns	no	yes
(	no	no
db	no	yes
,	no	no
table	no	yes
,	no	no
partn	no	yes
,	no	no
ti	no	yes
.	no	no
bucketCols	no	yes
,	no	no
ti	no	yes
.	no	no
numBuckets	no	yes
,	no	no
ti	no	yes
.	no	no
sortCols	no	yes
)	no	no
;	no	no
}	no	no
WriteEntity	no	yes
enty	no	yes
=	no	no
new	no	no
WriteEntity	no	yes
(	no	no
partn	no	yes
,	no	no
getWriteType	no	yes
(	no	no
tbd	no	yes
,	no	no
work	no	yes
.	no	no
getLoadTableWork	no	yes
(	no	no
)	no	no
.	no	no
getWriteType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
DDLUtils	no	yes
.	no	no
addIfAbsentByName	no	yes
(	no	no
enty	no	yes
,	no	no
work	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
queryPlan	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
queryPlan	no	yes
.	no	no
setOutputs	no	yes
(	no	no
new	no	no
LinkedHashSet	no	yes
<	no	no
WriteEntity	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
queryPlan	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
enty	no	yes
)	no	no
;	no	no
dc	no	yes
=	no	no
new	no	no
DataContainer	no	yes
(	no	no
table	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
,	no	no
partn	no	yes
.	no	no
getTPartition	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getLoadTableWork	no	yes
(	no	no
)	no	no
.	no	no
getWriteType	no	yes
(	no	no
)	no	no
!=	no	no
AcidUtils	no	no
.	no	no
Operation	no	no
.	no	no
DELETE	no	no
&&	no	no
work	no	yes
.	no	no
getLoadTableWork	no	yes
(	no	no
)	no	no
.	no	no
getWriteType	no	yes
(	no	no
)	no	no
!=	no	no
AcidUtils	no	no
.	no	no
Operation	no	no
.	no	no
UPDATE	no	no
)	no	no
{	no	no
queryState	no	yes
.	no	no
getLineageState	no	yes
(	no	no
)	no	no
.	no	no
setLineage	no	yes
(	no	no
tbd	no	yes
.	no	no
getSourcePath	no	yes
(	no	no
)	no	no
,	no	no
dc	no	yes
,	no	no
table	no	yes
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	no	no
,	no	no
int	no	no
tag	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cntrs	no	yes
[	no	no
tag	yes	yes
]	no	no
++	no	no
;	no	no
if	no	no
(	no	no
cntrs	no	yes
[	no	no
tag	yes	yes
]	no	no
==	no	no
nextCntrs	no	no
[	no	no
tag	yes	yes
]	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
closeOp	no	no
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
numParents	no	no
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no

private	no	no
static	no	no
ObjectCache	no	yes
getLlapObjectCache	no	no
(	no	no
String	no	no
queryId	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
queryId	yes	yes
==	no	no
null	no	no
)	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
ObjectCache	no	yes
result	no	yes
=	no	no
llapQueryCaches	no	yes
.	no	no
get	no	yes
(	no	no
queryId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
!=	no	no
null	no	no
)	no	no
return	no	no
result	no	yes
;	no	no
result	no	yes
=	no	no
new	no	no
LlapObjectCache	no	yes
(	no	no
)	no	no
;	no	no
ObjectCache	no	yes
old	no	yes
=	no	no
llapQueryCaches	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
queryId	yes	yes
,	no	no
result	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
old	no	yes
==	no	no
null	no	no
&&	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
removeLlapQueryCache	no	no
(	no	no
String	no	no
queryId	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
childOperatorsArray	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
childOperators	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
multiChildren	no	yes
=	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
>	no	no
1	no	no
;	no	no
childOperatorsTag	no	yes
=	no	no
new	no	no
int	no	no
[	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
childOperatorsArray	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
parentOperators	no	yes
=	no	no
childOperatorsArray	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
;	no	no
childOperatorsTag	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
parentOperators	no	yes
.	no	no
indexOf	no	yes
(	no	no
this	yes	no
)	no	no
;	no	no
if	no	no
(	no	no
childOperatorsTag	no	yes
[	no	no
i	no	yes
]	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
inputObjInspectors	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
outputObjInspector	no	yes
=	no	no
inputObjInspectors	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
boolean	no	no
isInitOk	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
initializeOp	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
parentOperators	no	yes
=	no	no
childOperatorsArray	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
;	no	no
childOperatorsTag	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
parentOperators	no	yes
.	no	no
indexOf	no	yes
(	no	no
this	yes	no
)	no	no
;	no	no
if	no	no
(	no	no
childOperatorsTag	no	yes
[	no	no
i	no	yes
]	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
inputObjInspectors	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
outputObjInspector	no	yes
=	no	no
inputObjInspectors	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
boolean	no	no
isInitOk	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
initializeOp	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rootInitializeCalled	no	no
||	no	no
childOperatorsArray	no	yes
.	no	no
length	no	no
!=	no	no
childOperators	no	no
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AssertionError	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
this	yes	no
)	no	no
;	no	no
initializeChildren	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
isInitOk	no	yes
=	no	no
true	no	no
;	no	no

closeOp	no	yes
(	no	no
abort	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
!=	no	no
null	no	no
&&	no	no
conf	no	no
.	no	no
getRuntimeStatsTmpDir	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
publishRunTimeStats	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LongWritable	no	yes
runTimeRowsWritable	no	yes
=	no	no
new	no	no
LongWritable	no	yes
(	no	no
runTimeNumRows	no	yes
)	no	no
;	no	no
LongWritable	no	yes
recordCounter	no	yes
=	no	no
new	no	no
LongWritable	no	yes
(	no	no
numRows	no	yes
)	no	no
;	no	no
statsMap	no	yes
.	no	no
put	no	yes
(	no	no
Counter	no	yes
.	no	no
RECORDS_OUT_OPERATOR	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getOperatorId	no	yes
(	no	no
)	no	no
,	no	no
runTimeRowsWritable	no	yes
)	no	no
;	no	no
statsMap	no	yes
.	no	no
put	no	yes
(	no	no
getCounterName	no	yes
(	no	no
Counter	no	yes
.	no	no
RECORDS_OUT_INTERMEDIATE	no	yes
,	no	no
hconf	no	yes
)	no	no
,	no	no
recordCounter	no	yes
)	no	no
;	no	no
this	yes	no
.	no	no
runTimeNumRows	no	yes
=	no	no
0	no	no
;	no	no
reporter	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
logStats	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
childOperators	no	no
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
op	no	yes
:	no	no
childOperators	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
op	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
setOpTraits	no	no
(	no	no
OpTraits	no	no
metaInfo	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
setStatistics	no	no
(	no	no
Statistics	no	no
stats	yes	no
)	no	no
{	no	no

k	yes	yes
=	no	no
(	no	no
OrcFileKeyWrapper	no	yes
)	no	no
(	no	no
(	no	no
CombineHiveKey	no	yes
)	no	no
key	no	yes
)	no	no
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
k	yes	yes
=	no	no
(	no	no
OrcFileKeyWrapper	no	yes
)	no	no
key	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
k	yes	yes
.	no	no
isIncompatFile	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addIncompatibleFile	no	yes
(	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
filePath	no	yes
=	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
FILE_OP_LOGGER	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
filePath	no	yes
)	no	no
;	no	no
fixTmpPath	no	yes
(	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
v	no	yes
=	no	no
(	no	no
OrcFileValueWrapper	no	yes
)	no	no
value	no	yes
;	no	no
if	no	no
(	no	no
prevPath	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
prevPath	no	yes
=	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
;	no	no
reader	no	yes
=	no	no
OrcFile	no	yes
.	no	no
createReader	no	yes
(	no	no
fs	no	yes
,	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
int	no	no
bucketId	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getIsCompactionTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
bucketId	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
parseBucketId	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
filePath	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
outWriters	no	no
.	no	no
get	no	no
(	no	no
bucketId	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
compression	no	yes
=	no	no
k	no	yes
.	no	no
getCompression	no	yes
(	no	no
)	no	no
;	no	no
compressBuffSize	no	yes
=	no	no
k	no	yes
.	no	no
getCompressBufferSize	no	yes
(	no	no
)	no	no
;	no	no
fileVersion	no	yes
=	no	no
k	no	yes
.	no	no
getFileVersion	no	yes
(	no	no
)	no	no
;	no	no
writerVersion	no	yes
=	no	no
k	no	yes
.	no	no
getWriterVersion	no	yes
(	no	no
)	no	no
;	no	no
fileSchema	no	yes
=	no	no
k	no	yes
.	no	no
getFileSchema	no	yes
(	no	no
)	no	no
;	no	no
rowIndexStride	no	yes
=	no	no
k	no	yes
.	no	no
getRowIndexStride	no	yes
(	no	no
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
WriterOptions	no	yes
options	no	yes
=	no	no
OrcFile	no	yes
.	no	no
writerOptions	no	yes
(	no	no
jc	no	yes
)	no	no
.	no	no
compress	no	yes
(	no	no
compression	no	yes
)	no	no
.	no	no
version	no	yes
(	no	no
fileVersion	no	yes
)	no	no
.	no	no
rowIndexStride	no	yes
(	no	no
rowIndexStride	no	yes
)	no	no
.	no	no
inspector	no	yes
(	no	no
reader	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
compression	no	yes
!=	no	no
CompressionKind	no	no
.	no	no
NONE	no	no
)	no	no
{	no	no
options	no	yes
.	no	no
bufferSize	no	yes
(	no	no
compressBuffSize	no	yes
)	no	no
.	no	no
enforceBufferSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
outPath	yes	yes
=	no	no
getOutPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getIsCompactionTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no

fileSchema	no	yes
=	no	no
k	yes	yes
.	no	no
getFileSchema	no	yes
(	no	no
)	no	no
;	no	no
rowIndexStride	no	yes
=	no	no
k	yes	yes
.	no	no
getRowIndexStride	no	yes
(	no	no
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
WriterOptions	no	yes
options	no	yes
=	no	no
OrcFile	no	yes
.	no	no
writerOptions	no	yes
(	no	no
jc	no	yes
)	no	no
.	no	no
compress	no	yes
(	no	no
compression	no	yes
)	no	no
.	no	no
version	no	yes
(	no	no
fileVersion	no	yes
)	no	no
.	no	no
rowIndexStride	no	yes
(	no	no
rowIndexStride	no	yes
)	no	no
.	no	no
inspector	no	yes
(	no	no
reader	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
compression	no	yes
!=	no	no
CompressionKind	no	no
.	no	no
NONE	no	no
)	no	no
{	no	no
options	no	yes
.	no	no
bufferSize	no	yes
(	no	no
compressBuffSize	no	yes
)	no	no
.	no	no
enforceBufferSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
outPath	no	yes
=	no	no
getOutPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getIsCompactionTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
outPath	no	yes
=	no	no
getOutPath	no	yes
(	no	no
bucketId	no	yes
)	no	no
;	no	no
}	no	no
outWriters	no	yes
.	no	no
put	no	yes
(	no	no
bucketId	no	yes
,	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
outPath	no	yes
,	no	no
options	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
outPath	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
checkCompatibility	no	no
(	no	no
k	yes	yes
)	no	no
)	no	no
{	no	no
addIncompatibleFile	no	yes
(	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
k	yes	yes
.	no	no
getInputPath	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
prevPath	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
initializeOp	no	yes
(	no	no
Configuration	no	no
hconf	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
super	no	no
.	no	no
initializeOp	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
numRows	no	yes
=	no	no
0	no	no
;	no	no
cntr	no	yes
=	no	no
1	no	no
;	no	no
logEveryNRows	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOG_N_RECORDS	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
keys	yes	yes
=	no	no
conf	no	yes
.	no	no
getKeyCols	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
initializeOp	no	yes
(	no	no
Configuration	no	no
hconf	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
super	no	no
.	no	no
initializeOp	no	yes
(	no	no
hconf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
numRows	no	yes
=	no	no
0	no	no
;	no	no
cntr	no	yes
=	no	no
1	no	no
;	no	no
logEveryNRows	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOG_N_RECORDS	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
keys	no	yes
=	no	no
conf	no	yes
.	no	no
getKeyCols	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
keys	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
k	yes	no
:	no	no
keys	no	yes
)	no	no
{	no	no

try	no	no
{	no	no
FunctionResource	no	yes
[	no	no
]	no	no
resources	no	yes
=	no	no
function	no	yes
.	no	no
getResources	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FunctionUtils	no	yes
.	no	no
addFunctionResources	no	yes
(	no	no
resources	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
qualifiedName	no	yes
+	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
ClassLoader	no	yes
loader	no	yes
=	no	no
Utilities	no	yes
.	no	no
getSessionSpecifiedClassLoader	no	yes
(	no	no
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
udfClass	no	yes
=	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
function	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
,	no	no
loader	no	yes
)	no	no
;	no	no
ret	no	yes
=	no	no
SessionState	no	yes
.	no	no
getRegistryForWrite	no	yes
(	no	no
)	no	no
.	no	no
registerFunction	no	yes
(	no	no
qualifiedName	no	yes
,	no	no
FunctionType	no	yes
.	no	no
PERSISTENT	no	yes
,	no	no
udfClass	no	yes
,	no	no
resources	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ret	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
function	no	yes
.	no	no
getClassName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
.	no	no
isHiveServerQuery	no	no
(	no	no
)	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
getRegistryForWrite	no	yes
(	no	no
)	no	no
.	no	no
addToUDFLoaders	no	yes
(	no	no
loader	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
List	no	no
<	no	no
ReplChangeManager	no	no
.	no	no
FileInfo	no	no
>	no	no
filesInFileListing	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	yes
dataPath	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
Path	no	yes
fileListing	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dataPath	no	yes
,	no	no
EximUtil	no	yes
.	no	no
FILES_NAME	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
getLoadCopyTask	no	no
(	no	no
ReplicationSpec	no	no
replicationSpec	no	no
,	no	no
Path	no	no
srcPath	yes	no
,	no	no
Path	no	no
dstPath	yes	no
,	no	no
HiveConf	no	no
conf	no	no
,	no	no
boolean	no	no
isAutoPurge	no	no
,	no	no
boolean	no	no
needRecycle	no	no
,	no	no
boolean	no	no
readSourceAsFileList	no	no
,	no	no
boolean	no	no
overWrite	no	no
)	no	no
{	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
copyTask	no	yes
=	no	no
null	no	no
;	no	no

String	no	yes
[	no	no
]	no	no
cmdArgs	no	yes
=	no	no
splitArgs	no	yes
(	no	no
conf	no	yes
.	no	no
getScriptCmd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
prog	no	yes
=	no	no
cmdArgs	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
File	no	yes
currentDir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
)	no	no
.	no	no
getAbsoluteFile	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
new	no	no
File	no	yes
(	no	no
prog	no	yes
)	no	no
.	no	no
isAbsolute	no	no
(	no	no
)	no	no
)	no	no
{	no	no
PathFinder	no	yes
finder	no	yes
=	no	no
new	no	no
PathFinder	no	yes
(	no	no
)	no	no
;	no	no
finder	no	yes
.	no	no
prependPathComponent	no	yes
(	no	no
currentDir	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
HiveConf	no	no
.	no	no
getVar	no	no
(	no	no
hconf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_EXECUTION_ENGINE	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sparkConf	no	yes
=	no	no
SparkEnv	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
conf	no	yes
(	no	no
)	no	no
;	no	no
finder	no	yes
.	no	no
prependPathComponent	no	yes
(	no	no
SparkFiles	no	yes
.	no	no
getRootDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
File	no	yes
f	no	yes
=	no	no
finder	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
prog	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
f	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
cmdArgs	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
f	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
f	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
wrappedCmdArgs	yes	yes
=	no	no
addWrapper	no	yes
(	no	no
cmdArgs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

scriptOutWriter	no	yes
=	no	no
conf	no	yes
.	no	no
getInRecordWriterClass	no	yes
(	no	no
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
scriptOutWriter	no	yes
.	no	no
initialize	no	yes
(	no	no
scriptOut	no	yes
,	no	no
hconf	no	yes
)	no	no
;	no	no
RecordReader	no	yes
scriptOutputReader	no	yes
=	no	no
conf	no	yes
.	no	no
getOutRecordReaderClass	no	yes
(	no	no
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
scriptOutputReader	no	yes
.	no	no
initialize	no	yes
(	no	no
scriptIn	no	yes
,	no	no
hconf	no	yes
,	no	no
conf	no	yes
.	no	no
getScriptOutputInfo	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
outThread	no	yes
=	no	no
new	no	no
StreamThread	no	yes
(	no	no
scriptOutputReader	no	yes
,	no	no
new	no	no
OutputStreamProcessor	no	yes
(	no	no
scriptOutputDeserializer	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
)	no	no
;	no	no
RecordReader	no	yes
scriptErrReader	no	yes
=	no	no
conf	no	yes
.	no	no
getErrRecordReaderClass	no	yes
(	no	no
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
scriptErrReader	no	yes
.	no	no
initialize	no	yes
(	no	no
scriptErr	no	yes
,	no	no
hconf	no	yes
,	no	no
conf	no	yes
.	no	no
getScriptErrInfo	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
errThread	no	yes
=	no	no
new	no	no
StreamThread	no	yes
(	no	no
scriptErrReader	no	yes
,	no	no
new	no	no
ErrorStreamProcessor	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SCRIPTERRORLIMIT	no	yes
)	no	no
)	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVESCRIPTAUTOPROGRESS	no	no
)	no	no
)	no	no
{	no	no
autoProgressor	no	yes
=	no	no
new	no	no
AutoProgressor	no	yes
(	no	no
this	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
reporter	no	yes
,	no	no
Utilities	no	yes
.	no	no
getDefaultNotificationInterval	no	yes
(	no	no
hconf	no	yes
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVES_AUTO_PROGRESS_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
autoProgressor	no	yes
.	no	no
go	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
outThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
errThread	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
SCRIPT_INIT_ERROR	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

}	no	no
}	no	no
if	no	no
(	no	no
scriptError	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
SCRIPT_GENERIC_ERROR	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
,	no	no
scriptError	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Writable	no	yes
res	no	yes
=	no	no
scriptInputSerializer	no	yes
.	no	no
serialize	no	yes
(	no	no
row	no	yes
,	no	no
inputObjInspectors	no	yes
[	no	no
tag	no	yes
]	no	no
)	no	no
;	no	no
scriptOutWriter	no	yes
.	no	no
write	no	yes
(	no	no
res	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SerDeException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
scriptError	no	yes
=	no	no
e	yes	yes
;	no	no
serialize_error_count	no	yes
.	no	no
set	no	yes
(	no	no
serialize_error_count	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
isBrokenPipeException	no	no
(	no	no
e	yes	yes
)	no	no
&&	no	no
allowPartialConsumption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
scriptPid	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
interruptedException	no	no
)	no	no
{	no	no

}	no	no
try	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
scriptOutWriter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
scriptOutWriter	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
isBrokenPipeException	no	no
(	no	no
e	no	yes
)	no	no
&&	no	no
allowPartialConsumption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
isBrokenPipeException	no	no
(	no	no
e	no	yes
)	no	no
)	no	no
{	no	no
displayBrokenPipeInfo	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
}	no	no
int	no	no
exitVal	yes	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
scriptPid	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
exitVal	yes	yes
=	no	no
scriptPid	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
exitVal	yes	yes
!=	no	no
0	no	no
)	no	no
{	no	no

if	no	no
(	no	no
scriptOutWriter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
scriptOutWriter	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
isBrokenPipeException	no	no
(	no	no
e	yes	yes
)	no	no
&&	no	no
allowPartialConsumption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
isBrokenPipeException	no	no
(	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
displayBrokenPipeInfo	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
int	no	no
exitVal	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
scriptPid	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
exitVal	no	yes
=	no	no
scriptPid	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
exitVal	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
exitVal	no	yes
)	no	no
;	no	no
new_abort	no	yes
=	no	no
true	no	no
;	no	no

int	no	no
exitVal	yes	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
scriptPid	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
exitVal	yes	yes
=	no	no
scriptPid	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
exitVal	yes	yes
!=	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
exitVal	yes	yes
)	no	no
;	no	no
new_abort	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
new_abort	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
final	no	no
Thread	no	yes
mythread	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
;	no	no
Timer	no	yes
timer	no	yes
=	no	no
new	no	no
Timer	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
timer	no	yes
.	no	no
schedule	no	no
(	no	no
new	no	no
TimerTask	no	no
(	no	no
)	no	no
{	no	no

private	no	no
static	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
deserializePlan	no	no
(	no	no
Kryo	no	no
kryo	no	no
,	no	no
InputStream	no	no
in	no	no
,	no	no
Class	no	no
<	no	no
T	no	yes
>	no	no
planClass	yes	no
,	no	no
boolean	no	no
cloningPlan	no	no
)	no	no
{	no	no
PerfLogger	no	yes
perfLogger	no	yes
=	no	no
SessionState	no	yes
.	no	no
getPerfLogger	no	yes
(	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
DESERIALIZE_PLAN	no	yes
)	no	no
;	no	no
T	no	yes
plan	no	yes
;	no	no

List	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
skewTableKeyInspectors	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
StructObjectInspector	no	yes
soi	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
joinOp	no	yes
.	no	no
inputObjInspectors	no	yes
[	no	no
alias	no	yes
]	no	no
;	no	no
StructField	no	yes
sf	no	yes
=	no	no
soi	no	yes
.	no	no
getStructFieldRef	no	yes
(	no	no
Utilities	no	yes
.	no	no
ReduceField	no	yes
.	no	no
KEY	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
?	no	no
extends	no	no
StructField	no	yes
>	no	no
keyFields	no	yes
=	no	no
(	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
sf	no	yes
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
keyFieldSize	no	yes
=	no	no
keyFields	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
k	no	yes
=	no	no
0	no	no
;	no	no
k	no	yes
<	no	no
keyFieldSize	no	yes
;	no	no
k	no	yes
++	no	no
)	no	no
{	no	no
skewTableKeyInspectors	no	yes
.	no	no
add	no	yes
(	no	no
keyFields	no	yes
.	no	no
get	no	yes
(	no	no
k	no	yes
)	no	no
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
TableDesc	no	yes
joinKeyDesc	no	yes
=	no	no
desc	no	yes
.	no	no
getKeyTableDesc	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
keyColNames	no	yes
=	no	no
Utilities	no	yes
.	no	no
getColumnNames	no	yes
(	no	no
joinKeyDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StructObjectInspector	no	yes
structTblKeyInpector	no	yes
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getStandardStructObjectInspector	no	yes
(	no	no
keyColNames	no	yes
,	no	no
skewTableKeyInspectors	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
AbstractSerDe	no	yes
serializer	no	yes
=	no	no
(	no	no
AbstractSerDe	no	yes
)	no	no
ReflectionUtils	no	yes
.	no	no
newInstance	no	yes
(	no	no
tblDesc	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
.	no	no
getDeserializerClass	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
SerDeUtils	no	yes
.	no	no
initializeSerDe	no	yes
(	no	no
serializer	no	yes
,	no	no
null	no	no
,	no	no
tblDesc	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
tblSerializers	no	yes
.	no	no
put	no	yes
(	no	no
(	no	no
byte	no	no
)	no	no
i	no	yes
,	no	no
serializer	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SerDeException	no	no
e	yes	no
)	no	no
{	no	no

return	no	no
0	no	no
;	no	no
}	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isAggregating	no	no
(	no	no
)	no	no
&&	no	no
work	no	yes
.	no	no
isFooterScan	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
int	no	no
ret	no	yes
=	no	no
0	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isFooterScan	no	no
(	no	no
)	no	no
)	no	no
{	no	no
work	no	yes
.	no	no
getBasicStatsNoJobWork	no	yes
(	no	no
)	no	no
.	no	no
setPartitions	no	yes
(	no	no
work	no	yes
.	no	no
getPartitions	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Hive	no	yes
db	no	yes
=	no	no
getHive	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
getTable	no	yes
(	no	no
db	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
IStatsProcessor	no	no
task	no	yes
:	no	no
processors	no	no
)	no	no
{	no	no
task	no	yes
.	no	no
setDpPartSpecs	no	yes
(	no	no
dpPartSpecs	no	yes
)	no	no
;	no	no
ret	no	yes
=	no	no
task	no	yes
.	no	no
process	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ret	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
ret	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
ExecutorService	no	yes
newThreadPool	no	no
(	no	no
HiveConf	no	yes
conf	no	yes
)	no	no
{	no	no
int	no	no
numThreads	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_STATS_GATHER_NUM_THREADS	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
numThreads	yes	yes
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isStatsReliable	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
STATSPUBLISHER_CONNECTION_ERROR	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
statsToPublish	yes	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
pspecs	no	yes
:	no	no
stats	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
statsToPublish	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
prefix	no	yes
=	no	no
Utilities	no	yes
.	no	no
join	no	yes
(	no	no
conf	no	yes
.	no	no
getStatsAggPrefix	no	yes
(	no	no
)	no	no
,	no	no
pspecs	no	yes
)	no	no
;	no	no
String	no	yes
key	yes	yes
=	no	no
prefix	no	yes
.	no	no
endsWith	no	yes
(	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
)	no	no
?	no	no
prefix	no	yes
:	no	no
prefix	no	yes
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
;	no	no
for	no	no
(	no	no
String	no	yes
statType	no	yes
:	no	no
stats	no	yes
.	no	no
get	no	yes
(	no	no
pspecs	no	yes
)	no	no
.	no	no
getStoredStats	no	no
(	no	no
)	no	no
)	no	no
{	no	no
statsToPublish	yes	yes
.	no	no
put	no	yes
(	no	no
statType	no	yes
,	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
stats	no	yes
.	no	no
get	no	yes
(	no	no
pspecs	no	yes
)	no	no
.	no	no
getStat	no	yes
(	no	no
statType	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
statsPublisher	no	no
.	no	no
publishStat	no	no
(	no	no
key	yes	yes
,	no	no
statsToPublish	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isStatsReliable	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
STATSPUBLISHER_PUBLISHING_ERROR	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
final	no	no
void	no	no
closeOp	no	no
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
topNKeyFilters	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TopNKeyFilter	no	yes
filter	yes	yes
=	no	no
topNKeyFilters	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

columnTypeResolvers	no	yes
[	no	no
c	no	yes
]	no	no
=	no	no
new	no	no
ReturnObjectInspectorResolver	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
p	yes	yes
=	no	no
0	no	no
;	no	no
p	yes	yes
<	no	no
parents	no	yes
;	no	no
p	yes	yes
++	no	no
)	no	no
{	no	no
assert	no	yes
(	no	no
columns	no	yes
==	no	no
0	no	no
||	no	no
parentFields	no	yes
[	no	no
p	yes	yes
]	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
columns	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
c	no	yes
=	no	no
0	no	no
;	no	no
c	no	yes
<	no	no
columns	no	yes
;	no	no
c	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
columnTypeResolvers	no	yes
[	no	no
c	no	yes
]	no	no
.	no	no
updateForUnionAll	no	no
(	no	no
parentFields	no	yes
[	no	no
p	yes	yes
]	no	no
.	no	no
get	no	yes
(	no	no
c	no	yes
)	no	no
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
ArrayList	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
outputFieldOIs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
(	no	no
columns	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
c	no	yes
=	no	no
0	no	no
;	no	no
c	no	yes
<	no	no
columns	no	yes
;	no	no
c	no	yes
++	no	no
)	no	no
{	no	no
ObjectInspector	no	yes
fieldOI	no	yes
=	no	no
parentFields	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
get	no	yes
(	no	no
c	no	yes
)	no	no
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
outputFieldOIs	no	yes
.	no	no
add	no	yes
(	no	no
columnTypeResolvers	no	yes
[	no	no
c	no	yes
]	no	no
.	no	no
get	no	yes
(	no	no
fieldOI	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
outputObjInspector	yes	yes
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getStandardStructObjectInspector	no	yes
(	no	no
columnNames	no	yes
,	no	no
outputFieldOIs	no	yes
)	no	no
;	no	no
outputRow	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Object	no	yes
>	no	no
(	no	no
columns	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
c	no	yes
=	no	no
0	no	no
;	no	no
c	no	yes
<	no	no
columns	no	yes
;	no	no
c	no	yes
++	no	no
)	no	no
{	no	no
outputRow	no	yes
.	no	no
add	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
needsTransform	no	yes
=	no	no
new	no	no
boolean	no	no
[	no	no
parents	no	yes
]	no	no
;	no	no

private	no	no
static	no	no
BaseWork	no	no
getBaseWork	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	no
name	no	yes
)	no	no
{	no	no
Path	no	yes
path	yes	yes
=	no	no
getPlanPath	no	yes
(	no	no
conf	no	yes
,	no	no
name	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
Path	no	yes
localPath	yes	yes
=	no	no
path	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
localPath	yes	yes
)	no	no
;	no	no
final	no	no
long	no	no
serializedSize	no	yes
;	no	no
final	no	no
String	no	yes
planMode	no	yes
;	no	no
if	no	no
(	no	no
HiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
ConfVars	no	no
.	no	no
HIVE_RPC_QUERY_PLAN	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
planStringPath	no	yes
=	no	no
path	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
planStringPath	no	yes
)	no	no
;	no	no
String	no	yes
planString	no	yes
=	no	no
conf	no	yes
.	no	no
getRaw	no	yes
(	no	no
planStringPath	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
planString	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
serializedSize	no	yes
=	no	no
planString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
;	no	no
planMode	no	yes
=	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
planBytes	no	yes
=	no	no
Base64	no	yes
.	no	no
getDecoder	no	yes
(	no	no
)	no	no
.	no	no
decode	no	yes
(	no	no
planString	no	yes
)	no	no
;	no	no
in	no	yes
=	no	no
new	no	no
ByteArrayInputStream	no	yes
(	no	no
planBytes	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
MAP_PLAN_NAME	no	no
.	no	no
equals	no	no
(	no	no
name	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
ExecMapper	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_MAPPER_CLASS	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
gWork	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializePlan	no	yes
(	no	no
kryo	no	yes
,	no	no
in	no	yes
,	no	no
MapWork	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
MergeFileMapper	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_MAPPER_CLASS	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
gWork	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializePlan	no	yes
(	no	no
kryo	no	yes
,	no	no
in	no	yes
,	no	no
MergeFileWork	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
ColumnTruncateMapper	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_MAPPER_CLASS	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
gWork	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializePlan	no	yes
(	no	no
kryo	no	yes
,	no	no
in	no	yes
,	no	no
ColumnTruncateWork	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
MAPRED_MAPPER_CLASS	no	yes
+	no	no
+	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_MAPPER_CLASS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
REDUCE_PLAN_NAME	no	no
.	no	no
equals	no	no
(	no	no
name	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
ExecReducer	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_REDUCER_CLASS	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
gWork	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
deserializePlan	no	yes
(	no	no
kryo	no	yes
,	no	no
in	no	yes
,	no	no
ReduceWork	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
MAPRED_REDUCER_CLASS	no	yes
+	no	no
+	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MAPRED_REDUCER_CLASS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
name	no	no
.	no	no
contains	no	no
(	no	no
MERGE_PLAN_NAME	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
out	no	yes
=	no	no
fs	no	yes
.	no	no
create	no	yes
(	no	no
planPath	no	yes
)	no	no
;	no	no
SerializationUtilities	no	yes
.	no	no
serializePlan	no	yes
(	no	no
kryo	no	yes
,	no	no
w	yes	yes
,	no	no
out	no	yes
)	no	no
;	no	no
out	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
out	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
fileLen	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
planPath	no	yes
)	no	no
.	no	no
getLen	no	yes
(	no	no
)	no	no
;	no	no
serializedSize	yes	yes
=	no	no
fileLen	no	yes
;	no	no
planMode	yes	yes
=	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
IOUtils	no	yes
.	no	no
closeStream	no	yes
(	no	no
out	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
useCache	no	no
&&	no	no
!	no	no
ShimLoader	no	no
.	no	no
getHadoopShims	no	no
(	no	no
)	no	no
.	no	no
isLocalMode	no	no
(	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
DistributedCache	no	yes
.	no	no
getSymlink	no	no
(	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
DistributedCache	no	yes
.	no	no
createSymlink	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
uriWithLink	no	yes
=	no	no
planPath	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
name	no	yes
;	no	no
DistributedCache	no	yes
.	no	no
addCacheFile	no	yes
(	no	no
new	no	no
URI	no	yes
(	no	no
uriWithLink	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
src	yes	yes
,	no	no
dst	yes	yes
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
createMoveThreadPool	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
Void	no	yes
>>	no	no
futures	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
FileStatus	no	yes
[	no	no
]	no	no
files	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
src	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
file	no	yes
:	no	no
files	no	yes
)	no	no
{	no	no
futures	no	yes
.	no	no
add	no	no
(	no	no
pool	no	yes
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
Void	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Void	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	yes
{	no	no
try	no	no
{	no	no
Utilities	no	yes
.	no	no
moveFile	no	yes
(	no	no
fs	no	yes
,	no	no
file	no	yes
,	no	no
dst	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
}	no	no
shutdownAndCleanup	no	yes
(	no	no
pool	no	yes
,	no	no
futures	no	yes
)	no	no
;	no	no

}	no	no
List	no	yes
<	no	no
FileStatus	no	yes
>	no	no
statusList	no	yes
=	no	no
HiveStatsUtils	no	yes
.	no	no
getFileStatusRecurse	no	yes
(	no	no
tmpPath	no	yes
,	no	no
(	no	no
(	no	no
dpCtx	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
1	no	no
:	no	no
dpCtx	no	yes
.	no	no
getNumDPCols	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
fs	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
statuses	no	yes
=	no	no
statusList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
FileStatus	no	yes
[	no	no
statusList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
if	no	no
(	no	no
statuses	no	yes
!=	no	no
null	no	no
&&	no	no
statuses	no	yes
.	no	no
length	no	no
>	no	no
0	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
FileStatus	no	yes
>	no	no
filesKept	yes	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
emptyBuckets	no	yes
=	no	no
Utilities	no	yes
.	no	no
removeTempOrDuplicateFiles	no	yes
(	no	no
fs	no	yes
,	no	no
statuses	no	yes
,	no	no
dpCtx	no	yes
,	no	no
conf	no	yes
,	no	no
hconf	no	yes
,	no	no
filesKept	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
emptyBuckets	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
createEmptyBuckets	no	yes
(	no	no
hconf	no	yes
,	no	no
emptyBuckets	no	yes
,	no	no
conf	no	yes
.	no	no
getCompressed	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
,	no	no
reporter	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
p	no	yes
:	no	no
emptyBuckets	no	yes
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
items	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
filesKept	yes	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
items	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
Utilities	no	yes
.	no	no
FILE_OP_LOGGER	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
tmpPath	no	yes
,	no	no
specPath	no	yes
)	no	no
;	no	no

Set	no	yes
<	no	no
FileStatus	no	yes
>	no	no
filesKept	yes	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
emptyBuckets	no	yes
=	no	no
Utilities	no	yes
.	no	no
removeTempOrDuplicateFiles	no	yes
(	no	no
fs	no	yes
,	no	no
statuses	no	yes
,	no	no
dpCtx	no	yes
,	no	no
conf	no	yes
,	no	no
hconf	no	yes
,	no	no
filesKept	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
emptyBuckets	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
createEmptyBuckets	no	yes
(	no	no
hconf	no	yes
,	no	no
emptyBuckets	no	yes
,	no	no
conf	no	yes
.	no	no
getCompressed	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
,	no	no
reporter	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
p	no	yes
:	no	no
emptyBuckets	no	yes
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
items	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
filesKept	yes	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
items	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
Utilities	no	yes
.	no	no
FILE_OP_LOGGER	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
tmpPath	no	yes
,	no	no
specPath	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shouldAvoidRename	no	no
(	no	no
conf	no	yes
,	no	no
hconf	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filesKept	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
getFilesToFetch	no	yes
(	no	no
)	no	no
.	no	no
addAll	no	yes
(	no	no
filesKept	yes	yes
)	no	no
;	no	no

perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
createEmptyBuckets	no	yes
(	no	no
hconf	no	yes
,	no	no
emptyBuckets	no	yes
,	no	no
conf	no	yes
.	no	no
getCompressed	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
,	no	no
reporter	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	no
p	no	yes
:	no	no
emptyBuckets	no	yes
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
items	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
filesKept	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
items	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
Utilities	no	yes
.	no	no
FILE_OP_LOGGER	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
tmpPath	yes	yes
,	no	no
specPath	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
shouldAvoidRename	no	no
(	no	no
conf	no	yes
,	no	no
hconf	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filesKept	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
getFilesToFetch	no	yes
(	no	no
)	no	no
.	no	no
addAll	no	yes
(	no	no
filesKept	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	no	yes
!=	no	no
null	no	no
&&	no	no
conf	no	yes
.	no	no
isCTASorCM	no	no
(	no	no
)	no	no
&&	no	no
isBlobStorage	no	no
)	no	no
{	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filesKept	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
moveSpecifiedFilesInParallel	no	yes
(	no	no
hconf	no	yes
,	no	no
fs	no	yes
,	no	no
tmpPath	yes	yes
,	no	no
specPath	yes	yes
,	no	no
filesKept	no	yes
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
moveSpecifiedFilesInParallel	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
srcPath	yes	no
,	no	no
Path	no	no
destPath	yes	no
,	no	no
Set	no	no
<	no	no
FileStatus	no	no
>	no	no
filesToMove	yes	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
IOException	no	no
{	no	no

private	no	no
static	no	no
void	no	no
moveSpecifiedFilesInParallel	no	yes
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
FileSystem	no	no
fs	no	yes
,	no	no
Path	no	no
srcPath	yes	yes
,	no	no
Path	no	no
destPath	yes	yes
,	no	no
Set	no	no
<	no	no
FileStatus	no	no
>	no	no
filesToMove	no	yes
)	no	no
throws	no	no
HiveException	no	no
,	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
filesToMove	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
srcPath	yes	yes
,	no	no
destPath	yes	yes
)	no	no
;	no	no
PerfLogger	no	yes
perfLogger	no	yes
=	no	no
SessionState	no	yes
.	no	no
getPerfLogger	no	yes
(	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
createMoveThreadPool	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
Void	no	yes
>>	no	no
futures	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
moveSpecifiedFilesInParallel	no	yes
(	no	no
fs	no	yes
,	no	no
srcPath	yes	yes
,	no	no
destPath	yes	yes
,	no	no
filesToMove	no	yes
,	no	no
futures	no	yes
,	no	no
pool	no	yes
)	no	no
;	no	no
shutdownAndCleanup	no	yes
(	no	no
pool	no	yes
,	no	no
futures	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
moveSpecifiedFilesInParallel	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
src	no	no
,	no	no
Path	no	no
dst	yes	no
,	no	no
Set	no	no
<	no	no
FileStatus	no	no
>	no	no
filesToMove	no	no
,	no	no
List	no	no
<	no	no
Future	no	no
<	no	no
Void	no	no
>>	no	no
futures	no	no
,	no	no
ExecutorService	no	no
pool	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	no
.	no	no
exists	no	no
(	no	no
dst	yes	no
)	no	no
)	no	no
{	no	no

HiveOutputFormat	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
hiveOutputFormat	no	yes
=	no	no
null	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
extends	no	no
Writable	no	yes
>	no	no
outputClass	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Serializer	no	yes
serializer	no	yes
=	no	no
(	no	no
Serializer	no	yes
)	no	no
tableInfo	no	yes
.	no	no
getDeserializerClass	no	yes
(	no	no
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
serializer	no	yes
.	no	no
initialize	no	yes
(	no	no
hconf	no	yes
,	no	no
tableInfo	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
outputClass	no	yes
=	no	no
serializer	no	yes
.	no	no
getSerializedClass	no	yes
(	no	no
)	no	no
;	no	no
hiveOutputFormat	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getHiveOutputFormat	no	yes
(	no	no
hconf	no	yes
,	no	no
tableInfo	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SerDeException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InstantiationException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalAccessException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Path	no	no
path	yes	yes
:	no	no
paths	no	no
)	no	no
{	no	no
Utilities	no	yes
.	no	no
FILE_OP_LOGGER	no	yes
.	no	no
trace	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no

Path	no	yes
path	no	yes
=	no	no
part	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pool	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
futures	no	no
.	no	no
add	no	no
(	no	no
pool	no	yes
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
items	no	yes
=	no	no
removeEmptyDpDirectory	no	yes
(	no	no
fs	no	yes
,	no	no
path	no	yes
)	no	no
;	no	no
partStatusMap	no	yes
.	no	no
put	no	yes
(	no	no
path	no	yes
,	no	no
items	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
partStatusMap	no	yes
.	no	no
put	no	yes
(	no	no
path	no	yes
,	no	no
removeEmptyDpDirectory	no	yes
(	no	no
fs	no	yes
,	no	no
path	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
pool	no	yes
)	no	no
{	no	no
pool	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
Future	no	no
<	no	no
Void	no	no
>	no	no
future	no	yes
:	no	no
futures	no	no
)	no	no
{	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	no
)	no	no
{	no	no

for	no	no
(	no	no
final	no	no
Path	no	no
path	no	yes
:	no	no
work	no	no
.	no	no
getPathToAliases	no	no
(	no	no
)	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
path	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
filter	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
filter	no	no
.	no	no
accept	no	no
(	no	no
path	no	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
ContentSummary	no	yes
cs	no	yes
=	no	no
ctx	no	yes
.	no	no
getCS	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
summary	no	yes
[	no	no
0	no	no
]	no	no
+=	no	no
cs	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
summary	no	yes
[	no	no
1	no	no
]	no	no
+=	no	no
cs	no	yes
.	no	no
getFileCount	no	yes
(	no	no
)	no	no
;	no	no
summary	no	yes
[	no	no
2	no	no
]	no	no
+=	no	no
cs	no	yes
.	no	no
getDirectoryCount	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
pathNeedProcess	no	yes
.	no	no
add	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
final	no	no
ExecutorService	no	yes
executor	no	yes
;	no	no
int	no	no
numExecutors	yes	yes
=	no	no
getMaxExecutorsForInputListing	no	yes
(	no	no
ctx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
pathNeedProcess	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numExecutors	yes	yes
>	no	no
1	no	no
)	no	no
{	no	no

metaTableStorage	no	yes
=	no	no
partDesc	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
getProperty	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
metaTableStorage	no	yes
=	no	no
partDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
getProperty	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
metaTableStorage	no	yes
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
handler	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
myConf	no	yes
,	no	no
metaTableStorage	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
handler	no	yes
instanceof	no	no
InputEstimator	no	yes
)	no	no
{	no	no
long	no	no
total	no	yes
=	no	no
0	no	no
;	no	no
TableDesc	no	yes
tableDesc	no	yes
=	no	no
partDesc	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
;	no	no
InputEstimator	no	yes
estimator	no	yes
=	no	no
(	no	no
InputEstimator	no	yes
)	no	no
handler	no	yes
;	no	no
for	no	no
(	no	no
String	no	no
alias	no	yes
:	no	no
HiveFileFormatUtils	no	no
.	no	no
doGetAliasesFromPath	no	no
(	no	no
pathToAlias	no	no
,	no	no
path	yes	no
)	no	no
)	no	no
{	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
myJobConf	no	yes
)	no	no
;	no	no
TableScanOperator	no	yes
scanOp	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
aliasToWork	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnNameList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnTypeList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
PlanUtils	no	yes
.	no	no
configureInputJobPropertiesForStorageHandler	no	yes
(	no	no
tableDesc	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
copyTableJobPropertiesToConf	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobConf	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
partDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
metaTableStorage	no	yes
=	no	no
partDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
getProperty	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
META_TABLE_STORAGE	no	yes
,	no	no
metaTableStorage	no	yes
)	no	no
;	no	no
}	no	no
HiveStorageHandler	no	yes
handler	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
myConf	no	yes
,	no	no
metaTableStorage	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
handler	no	yes
instanceof	no	no
InputEstimator	no	yes
)	no	no
{	no	no
long	no	no
total	no	yes
=	no	no
0	no	no
;	no	no
TableDesc	no	yes
tableDesc	no	yes
=	no	no
partDesc	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
;	no	no
InputEstimator	no	yes
estimator	no	yes
=	no	no
(	no	no
InputEstimator	no	yes
)	no	no
handler	no	yes
;	no	no
for	no	no
(	no	no
String	no	no
alias	no	yes
:	no	no
HiveFileFormatUtils	no	no
.	no	no
doGetAliasesFromPath	no	no
(	no	no
pathToAlias	no	no
,	no	no
path	yes	no
)	no	no
)	no	no
{	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
myJobConf	no	yes
)	no	no
;	no	no
TableScanOperator	no	yes
scanOp	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
aliasToWork	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnNameList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnTypeList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
PlanUtils	no	yes
.	no	no
configureInputJobPropertiesForStorageHandler	no	yes
(	no	no
tableDesc	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
copyTableJobPropertiesToConf	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobConf	no	yes
)	no	no
;	no	no
total	no	yes
+=	no	no
estimator	no	yes
.	no	no
estimate	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
.	no	no
getTotalLength	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	no
alias	no	yes
:	no	no
HiveFileFormatUtils	no	no
.	no	no
doGetAliasesFromPath	no	no
(	no	no
pathToAlias	no	no
,	no	no
path	yes	yes
)	no	no
)	no	no
{	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
myJobConf	no	yes
)	no	no
;	no	no
TableScanOperator	no	yes
scanOp	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
aliasToWork	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnNameList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnTypeList	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
PlanUtils	no	yes
.	no	no
configureInputJobPropertiesForStorageHandler	no	yes
(	no	no
tableDesc	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
copyTableJobPropertiesToConf	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobConf	no	yes
)	no	no
;	no	no
total	no	yes
+=	no	no
estimator	no	yes
.	no	no
estimate	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
.	no	no
getTotalLength	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordSummary	no	yes
(	no	no
path	yes	yes
,	no	no
new	no	no
ContentSummary	no	yes
(	no	no
total	no	yes
,	no	no
-	no	no
1	no	no
,	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
path	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
myConf	no	yes
)	no	no
;	no	no
recordSummary	no	yes
(	no	no
path	yes	yes
,	no	no
fs	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
path	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no

total	no	yes
+=	no	no
estimator	no	yes
.	no	no
estimate	no	yes
(	no	no
jobConf	no	yes
,	no	no
scanOp	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
.	no	no
getTotalLength	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordSummary	no	yes
(	no	no
path	no	yes
,	no	no
new	no	no
ContentSummary	no	yes
(	no	no
total	no	yes
,	no	no
-	no	no
1	no	no
,	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
path	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
myConf	no	yes
)	no	no
;	no	no
recordSummary	no	yes
(	no	no
path	no	yes
,	no	no
fs	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
path	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
path	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
private	no	no
void	no	no
recordSummary	no	yes
(	no	no
final	no	no
Path	no	no
p	no	no
,	no	no
final	no	no
ContentSummary	no	yes
cs	no	yes
)	no	no
{	no	no
final	no	no
long	no	no
csLength	no	yes
=	no	no
cs	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
long	no	no
csFileCount	no	yes
=	no	no
cs	no	yes
.	no	no
getFileCount	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
long	no	no
csDirectoryCount	no	yes
=	no	no
cs	no	yes
.	no	no
getDirectoryCount	no	yes
(	no	no
)	no	no
;	no	no
totalLength	no	yes
.	no	no
addAndGet	no	yes
(	no	no
csLength	no	yes
)	no	no
;	no	no
totalFileCount	no	yes
.	no	no
addAndGet	no	yes
(	no	no
csFileCount	no	yes
)	no	no
;	no	no
totalDirectoryCount	no	yes
.	no	no
addAndGet	no	yes
(	no	no
csDirectoryCount	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
isEmptyPath	no	no
(	no	no
JobConf	no	no
job	no	no
,	no	no
Path	no	no
dirPath	yes	yes
,	no	no
Context	no	no
ctx	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
ctx	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ContentSummary	no	yes
cs	yes	yes
=	no	no
ctx	no	yes
.	no	no
getCS	no	yes
(	no	no
dirPath	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
setQueryTimeout	no	no
(	no	no
java	no	no
.	no	no
sql	no	no
.	no	no
Statement	no	no
stmt	no	no
,	no	no
int	no	no
timeout	yes	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
timeout	yes	no
<	no	no
0	no	no
)	no	no
{	no	no

public	no	no
static	no	no
int	no	no
estimateNumberOfReducers	no	no
(	no	no
HiveConf	no	yes
conf	no	yes
,	no	no
ContentSummary	no	no
inputSummary	no	yes
,	no	no
MapWork	no	no
work	no	yes
,	no	no
boolean	no	no
finalMapRed	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
bytesPerReducer	yes	yes
=	no	no
conf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
;	no	no
int	no	no
maxReducers	yes	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAXREDUCERS	no	yes
)	no	no
;	no	no
double	no	no
samplePercentage	no	yes
=	no	no
getHighestSamplePercentage	no	yes
(	no	no
work	no	yes
)	no	no
;	no	no
long	no	no
totalInputFileSize	yes	yes
=	no	no
getTotalInputFileSize	no	yes
(	no	no
inputSummary	no	yes
,	no	no
work	no	yes
,	no	no
samplePercentage	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
totalInputFileSize	yes	yes
!=	no	no
inputSummary	no	yes
.	no	no
getLength	no	no
(	no	no
)	no	no
)	no	no
{	no	no

boolean	no	no
isEmptyTable	no	yes
=	no	no
true	no	no
;	no	no
boolean	no	no
hasLogged	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
e	no	yes
:	no	no
pathToAliases	no	no
)	no	no
{	no	no
if	no	no
(	no	no
driverState	no	no
!=	no	no
null	no	no
&&	no	no
driverState	no	no
.	no	no
isAborted	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
file	yes	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
aliases	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
aliases	no	yes
.	no	no
contains	no	no
(	no	no
alias	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
file	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
isEmptyTable	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
alias	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pathsProcessed	no	no
.	no	no
contains	no	no
(	no	no
file	yes	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no

if	no	no
(	no	no
driverState	no	no
!=	no	no
null	no	no
&&	no	no
driverState	no	no
.	no	no
isAborted	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
file	yes	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
aliases	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
aliases	no	yes
.	no	no
contains	no	no
(	no	no
alias	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
file	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
isEmptyTable	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
alias	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pathsProcessed	no	yes
.	no	no
contains	no	no
(	no	no
file	yes	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
StringInternUtils	no	yes
.	no	no
internUriStringsInPath	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
pathsProcessed	no	yes
.	no	no
add	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
file	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
createDirsWithPermission	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
Path	no	no
mkdirPath	yes	no
,	no	no
FsPermission	no	no
fsPermission	yes	no
,	no	no
boolean	no	no
recursive	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
origUmask	no	yes
=	no	no
null	no	no
;	no	no

private	no	no
static	no	no
void	no	no
tryToLogClassPath	no	no
(	no	no
String	no	no
prefix	yes	no
,	no	no
ClassLoader	no	no
loader	no	no
,	no	no
Logger	no	no
logger	no	no
)	no	no
{	no	no
if	no	no
(	no	no
loader	no	no
instanceof	no	no
URLClassLoader	no	no
)	no	no
{	no	no

URL	no	yes
taskAttemptLogUrl	no	yes
;	no	no
try	no	no
{	no	no
taskAttemptLogUrl	no	yes
=	no	no
new	no	no
URL	no	yes
(	no	no
urlString	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MalformedURLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
BufferedReader	no	yes
in	no	yes
;	no	no
try	no	no
{	no	no
in	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
taskAttemptLogUrl	no	yes
.	no	no
openStream	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
inputLine	no	yes
;	no	no
while	no	no
(	no	no
(	no	no
inputLine	no	yes
=	no	no
in	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ErrorHeuristic	no	no
e	yes	yes
:	no	no
heuristics	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
e	yes	yes
.	no	no
processLogLine	no	yes
(	no	no
inputLine	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
in	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no

job	no	yes
.	no	no
setOutputKeyClass	no	yes
(	no	no
Text	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
job	no	yes
.	no	no
setOutputValueClass	no	yes
(	no	no
Text	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
int	no	no
returnVal	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
noName	no	yes
=	no	no
StringUtils	no	yes
.	no	no
isEmpty	no	yes
(	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_NAME	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
noName	no	yes
)	no	no
{	no	no
job	no	yes
.	no	no
set	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_NAME	no	yes
,	no	no
+	no	no
ThreadLocalRandom	no	yes
.	no	no
current	no	yes
(	no	no
)	no	no
.	no	no
nextInt	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
MapredLocalWork	no	yes
localwork	no	yes
=	no	no
mWork	no	yes
.	no	no
getMapRedLocalWork	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
localwork	no	yes
!=	no	no
null	no	no
&&	no	no
localwork	no	yes
.	no	no
hasStagedAlias	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
ShimLoader	no	no
.	no	no
getHadoopShims	no	no
(	no	no
)	no	no
.	no	no
isLocalMode	no	no
(	no	no
job	no	yes
)	no	no
)	no	no
{	no	no
Path	no	yes
localPath	no	yes
=	no	no
localwork	no	yes
.	no	no
getTmpPath	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
hdfsPath	no	yes
=	no	no
mWork	no	yes
.	no	no
getTmpHDFSPath	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
hdfs	no	yes
=	no	no
hdfsPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
FileSystem	no	yes
localFS	no	yes
=	no	no
localPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
hashtableFiles	yes	yes
=	no	no
localFS	no	yes
.	no	no
listStatus	no	yes
(	no	no
localPath	no	yes
)	no	no
;	no	no

}	no	no
while	no	no
(	no	no
values	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
BytesWritable	no	yes
valueWritable	no	yes
=	no	no
(	no	no
BytesWritable	no	yes
)	no	no
values	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
valueObject	no	yes
[	no	no
tag	no	yes
]	no	no
=	no	no
inputValueDeserializer	no	yes
[	no	no
tag	no	yes
]	no	no
.	no	no
deserialize	no	yes
(	no	no
valueWritable	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SerDeException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
tag	no	yes
+	no	no
+	no	no
Utilities	no	yes
.	no	no
formatBinaryString	no	yes
(	no	no
valueWritable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
valueWritable	no	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
valueTableDesc	no	yes
[	no	no
tag	no	yes
]	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
row	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
row	no	yes
.	no	no
add	no	yes
(	no	no
keyObject	no	yes
)	no	no
;	no	no
row	no	yes
.	no	no
add	no	yes
(	no	no
valueObject	no	yes
[	no	no
tag	no	yes
]	no	no
)	no	no
;	no	no
try	no	no
{	no	no
reducer	no	yes
.	no	no
process	no	yes
(	no	no
row	no	yes
,	no	no
tag	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
rowString	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
rowString	no	yes
=	no	no
SerDeUtils	no	yes
.	no	no
getJSONString	no	yes
(	no	no
row	no	yes
,	no	no
rowObjectInspector	no	yes
[	no	no
tag	no	yes
]	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
load	no	no
(	no	no
MapJoinTableContainer	no	no
[	no	no
]	no	no
mapJoinTables	no	no
,	no	no
MapJoinTableContainerSerDe	no	no
[	no	no
]	no	no
mapJoinTableSerdes	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
currentInputPath	yes	yes
=	no	no
context	no	yes
.	no	no
getCurrentInputPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
load	no	no
(	no	no
MapJoinTableContainer	no	no
[	no	no
]	no	no
mapJoinTables	no	yes
,	no	no
MapJoinTableContainerSerDe	no	no
[	no	no
]	no	no
mapJoinTableSerdes	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
currentInputPath	no	yes
=	no	no
context	no	yes
.	no	no
getCurrentInputPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
currentInputPath	no	yes
)	no	no
;	no	no
MapredLocalWork	no	yes
localWork	no	yes
=	no	no
context	no	yes
.	no	no
getLocalWork	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
localWork	no	yes
.	no	no
getDirectFetchOp	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
loadDirectly	no	yes
(	no	no
mapJoinTables	no	yes
,	no	no
currentInputPath	no	yes
)	no	no
;	no	no
}	no	no
Path	no	yes
baseDir	no	yes
=	no	no
getBaseDir	no	yes
(	no	no
localWork	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
baseDir	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
fileName	no	yes
=	no	no
localWork	no	yes
.	no	no
getBucketFileName	no	yes
(	no	no
currentInputPath	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
mapJoinTables	no	yes
.	no	no
length	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
desc	no	yes
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
||	no	no
mapJoinTables	no	yes
[	no	no
pos	no	yes
]	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Path	no	yes
path	yes	yes
=	no	no
Utilities	no	yes
.	no	no
generatePath	no	yes
(	no	no
baseDir	no	yes
,	no	no
desc	no	yes
.	no	no
getDumpFilePrefix	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
byte	no	no
)	no	no
pos	no	yes
,	no	no
fileName	no	yes
)	no	no
;	no	no

boolean	no	no
ctxCreated	no	yes
=	no	no
false	no	no
;	no	no
Context	no	yes
ctx	no	yes
=	no	no
context	no	yes
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
ctx	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
ctx	no	yes
=	no	no
new	no	no
Context	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
ctxCreated	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
setNumberOfReducers	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
ctx	no	yes
.	no	no
isLocalOnlyExecutionMode	no	no
(	no	no
)	no	no
&&	no	no
conf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
LOCALMODEAUTO	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
inputSummary	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
inputSummary	no	yes
=	no	no
Utilities	no	yes
.	no	no
getInputSummary	no	yes
(	no	no
ctx	no	yes
,	no	no
work	no	yes
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
double	no	no
samplePercentage	no	yes
=	no	no
Utilities	no	yes
.	no	no
getHighestSamplePercentage	no	yes
(	no	no
work	no	yes
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
totalInputFileSize	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getTotalInputFileSize	no	yes
(	no	no
inputSummary	no	yes
,	no	no
work	no	yes
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
,	no	no
samplePercentage	no	yes
)	no	no
;	no	no
totalInputNumFiles	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getTotalInputNumFiles	no	yes
(	no	no
inputSummary	no	yes
,	no	no
work	no	yes
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
,	no	no
samplePercentage	no	yes
)	no	no
;	no	no
int	no	no
numReducers	yes	yes
=	no	no
work	no	yes
.	no	no
getReduceWork	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
?	no	no
0	no	no
:	no	no
work	no	yes
.	no	no
getReduceWork	no	yes
(	no	no
)	no	no
.	no	no
getNumReduceTasks	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
out	no	yes
=	no	no
FileSystem	no	yes
.	no	no
getLocal	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
create	no	yes
(	no	no
planPath	no	yes
)	no	no
;	no	no
SerializationUtilities	no	yes
.	no	no
serializePlan	no	yes
(	no	no
plan	no	yes
,	no	no
out	no	yes
)	no	no
;	no	no
out	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
out	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
IOUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
out	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
isSilent	no	yes
=	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
:	no	no
;	no	no
String	no	yes
jarCmd	no	yes
=	no	no
hiveJar	no	yes
+	no	no
+	no	no
ExecDriver	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
libJarsOption	no	yes
;	no	no
String	no	yes
cmdLine	yes	yes
=	no	no
hadoopExec	no	yes
+	no	no
+	no	no
jarCmd	no	yes
+	no	no
+	no	no
planPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
isSilent	no	yes
+	no	no
+	no	no
hiveConfArgs	no	yes
;	no	no
String	no	yes
workDir	no	yes
=	no	no
(	no	no
new	no	no
File	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
files	no	yes
=	no	no
super	no	no
.	no	no
getResource	no	yes
(	no	no
conf	no	yes
,	no	no
ResourceType	no	yes
.	no	no
FILE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
files	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cmdLine	yes	yes
=	no	no
cmdLine	yes	yes
+	no	no
+	no	no
files	no	yes
;	no	no
workDir	no	yes
=	no	no
ctx	no	yes
.	no	no
getLocalTmpPath	no	yes
(	no	no
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
int	no	no
executeInChildVM	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
hiveJar	no	yes
=	no	no
conf	no	yes
.	no	no
getJar	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
hadoopExec	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HADOOPBIN	no	yes
)	no	no
;	no	no
conf	no	yes
.	no	no
setVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVEADDEDJARS	no	yes
,	no	no
Utilities	no	yes
.	no	no
getResourceFiles	no	yes
(	no	no
conf	no	yes
,	no	no
SessionState	no	yes
.	no	no
ResourceType	no	yes
.	no	no
JAR	no	yes
)	no	no
)	no	no
;	no	no
Path	no	yes
planPath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
context	no	yes
.	no	no
getLocalTmpPath	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
MapredLocalWork	no	yes
plan	no	yes
=	no	no
getWork	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
initializeOperators	no	no
(	no	no
Map	no	no
<	no	no
FetchOperator	no	no
,	no	no
JobConf	no	no
>	no	no
fetchOpJobConfMap	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>>	no	no
entry	yes	no
:	no	no
work	no	no
.	no	no
getAliasToWork	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
release	no	no
(	no	no
String	no	no
key	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
<	no	no
T	no	no
>	no	no
T	no	no
retrieve	no	no
(	no	no
String	no	no
key	yes	no
,	no	no
Callable	no	no
<	no	no
T	no	no
>	no	no
fn	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
expandAndRehashToTarget	no	no
(	no	no
int	no	no
estimateNewRowCount	no	yes
)	no	no
{	no	no
int	no	no
oldRefsCount	yes	yes
=	no	no
refs	no	yes
.	no	no
length	no	yes
;	no	no
int	no	no
newRefsCount	yes	yes
=	no	no
oldRefsCount	yes	yes
+	no	no
estimateNewRowCount	no	yes
;	no	no
if	no	no
(	no	no
resizeThreshold	no	no
<=	no	no
newRefsCount	yes	yes
)	no	no
{	no	no
newRefsCount	yes	yes
=	no	no
(	no	no
Long	no	yes
.	no	no
bitCount	no	yes
(	no	no
newRefsCount	yes	yes
)	no	no
==	no	no
1	no	no
)	no	no
?	no	no
newRefsCount	yes	yes
:	no	no
nextHighestPowerOfTwo	no	yes
(	no	no
newRefsCount	yes	yes
)	no	no
;	no	no
expandAndRehashImpl	no	yes
(	no	no
newRefsCount	yes	yes
)	no	no
;	no	no

WriteBuffers	no	yes
.	no	no
ByteSegmentRef	no	yes
byteSegmentRef	no	yes
=	no	no
hashMapResult	no	yes
.	no	no
first	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
byteSegmentRef	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
results	no	yes
.	no	no
add	no	yes
(	no	no
hashMapResult	no	yes
.	no	no
byteSegmentRef	no	yes
)	no	no
;	no	no
byteSegmentRef	no	yes
=	no	no
hashMapResult	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
dump	yes	yes
.	no	no
append	no	yes
(	no	no
results	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
results	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
WriteBuffers	no	yes
.	no	no
ByteSegmentRef	no	yes
segment	no	yes
=	no	no
results	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
byteIntervals	no	yes
.	no	no
put	no	yes
(	no	no
segment	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
,	no	no
segment	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
+	no	no
(	no	no
(	no	no
i	no	yes
==	no	no
0	no	no
)	no	no
?	no	no
1	no	no
:	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
examined	no	yes
!=	no	no
keysAssigned	no	no
)	no	no
{	no	no
dump	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
examined	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
currentOffset	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Long	no	no
,	no	no
Integer	no	no
>	no	no
e	no	yes
:	no	no
byteIntervals	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
start	no	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
len	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
start	no	yes
-	no	no
currentOffset	no	yes
>	no	no
4	no	no
)	no	no
{	no	no
dump	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
currentOffset	no	yes
+	no	no
+	no	no
start	no	yes
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
addRow	no	no
(	no	no
List	no	no
<	no	no
Object	no	no
>	no	no
t	yes	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
addRow	no	no
(	no	no
Object	no	no
[	no	no
]	no	no
value	yes	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no

if	no	no
(	no	no
(	no	no
numPartitionsSpilled	no	no
==	no	no
hashPartitions	no	no
.	no	no
length	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
lastPartitionInMem	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
nwayConf	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
int	no	no
biggest	no	yes
=	no	no
biggestPartition	no	yes
(	no	no
)	no	no
;	no	no
spillPartition	no	yes
(	no	no
biggest	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
setSpill	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitionId	no	no
==	no	no
biggest	no	yes
)	no	no
{	no	no
putToSidefile	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
biggest	no	yes
=	no	no
nwayConf	no	yes
.	no	no
getNextSpillPartition	no	yes
(	no	no
)	no	no
;	no	no
memoryThreshold	yes	yes
+=	no	no
nwayConf	no	yes
.	no	no
spill	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
biggest	no	yes
!=	no	no
0	no	no
&&	no	no
partitionId	no	no
==	no	no
biggest	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
inMemRowCount	yes	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
File	no	yes
file	yes	yes
=	no	no
FileUtils	no	yes
.	no	no
createLocalDirsTempFile	no	yes
(	no	no
spillLocalDirs	no	yes
,	no	no
+	no	no
partitionId	yes	yes
+	no	no
,	no	no
null	no	no
,	no	no
false	no	no
)	no	no
;	no	no
OutputStream	no	yes
outputStream	no	yes
=	no	no
new	no	no
FileOutputStream	no	yes
(	no	no
file	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
com	no	yes
.	no	no
esotericsoftware	no	yes
.	no	no
kryo	no	yes
.	no	no
io	no	yes
.	no	no
Output	no	yes
output	no	yes
=	no	no
new	no	no
com	no	yes
.	no	no
esotericsoftware	no	yes
.	no	no
kryo	no	yes
.	no	no
io	no	yes
.	no	no
Output	no	yes
(	no	no
outputStream	no	yes
)	no	no
;	no	no
Kryo	no	yes
kryo	no	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
borrowKryo	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
partitionId	yes	yes
+	no	no
)	no	no
;	no	no
kryo	no	yes
.	no	no
writeObject	no	yes
(	no	no
output	no	yes
,	no	no
partition	no	yes
.	no	no
hashMap	no	yes
)	no	no
;	no	no
output	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
outputStream	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
SerializationUtilities	no	yes
.	no	no
releaseKryo	no	yes
(	no	no
kryo	no	yes
)	no	no
;	no	no
}	no	no
partition	no	yes
.	no	no
hashMapLocalPath	no	yes
=	no	no
file	yes	yes
.	no	no
toPath	no	yes
(	no	no
)	no	no
;	no	no
partition	no	yes
.	no	no
hashMapOnDisk	no	yes
=	no	no
true	no	no
;	no	no

OutputStream	no	yes
outputStream	no	yes
=	no	no
new	no	no
FileOutputStream	no	yes
(	no	no
file	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
com	no	yes
.	no	no
esotericsoftware	no	yes
.	no	no
kryo	no	yes
.	no	no
io	no	yes
.	no	no
Output	no	yes
output	no	yes
=	no	no
new	no	no
com	no	yes
.	no	no
esotericsoftware	no	yes
.	no	no
kryo	no	yes
.	no	no
io	no	yes
.	no	no
Output	no	yes
(	no	no
outputStream	no	yes
)	no	no
;	no	no
Kryo	no	yes
kryo	no	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
borrowKryo	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
partitionId	no	yes
+	no	no
)	no	no
;	no	no
kryo	no	yes
.	no	no
writeObject	no	yes
(	no	no
output	no	yes
,	no	no
partition	no	yes
.	no	no
hashMap	no	yes
)	no	no
;	no	no
output	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
outputStream	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
SerializationUtilities	no	yes
.	no	no
releaseKryo	no	yes
(	no	no
kryo	no	yes
)	no	no
;	no	no
}	no	no
partition	no	yes
.	no	no
hashMapLocalPath	no	yes
=	no	no
file	no	yes
.	no	no
toPath	no	yes
(	no	no
)	no	no
;	no	no
partition	no	yes
.	no	no
hashMapOnDisk	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
partitionId	no	yes
+	no	no
+	no	no
inMemRowCount	no	yes
+	no	no
+	no	no
partition	no	yes
.	no	no
hashMap	no	yes
.	no	no
memorySize	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
file	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
memoryUsed	yes	yes
)	no	no
;	no	no
long	no	no
memFreed	no	yes
=	no	no
partition	no	yes
.	no	no
hashMap	no	yes
.	no	no
memorySize	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
clear	no	no
(	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
hashPartitions	no	yes
.	no	no
length	no	no
;	no	no
i	yes	yes
++	no	no
)	no	no
{	no	no
HashPartition	no	yes
hp	no	yes
=	no	no
hashPartitions	no	yes
[	no	no
i	yes	yes
]	no	no
;	no	no
if	no	no
(	no	no
hp	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

int	no	no
startSplit	no	yes
=	no	no
bI	no	yes
.	no	no
startingSplit	no	yes
;	no	no
int	no	no
endSplit	no	yes
;	no	no
if	no	no
(	no	no
blockNum	no	yes
!=	no	no
blockInfos	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
{	no	no
endSplit	no	yes
=	no	no
blockInfos	no	yes
.	no	no
get	no	yes
(	no	no
blockNum	no	yes
+	no	no
1	no	no
)	no	no
.	no	no
startingSplit	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
endSplit	no	yes
=	no	no
getLastActualSplit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
int	no	no
readIntoOffset	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
startSplit	no	yes
;	no	no
i	no	yes
<=	no	no
endSplit	no	yes
&&	no	no
readIntoOffset	no	yes
<	no	no
getBlockSize	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapred	no	yes
.	no	no
RecordReader	no	yes
rr	no	yes
=	no	no
setReaderAtSplit	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
i	no	yes
==	no	no
startSplit	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
PTFSequenceFileRecordReader	no	yes
)	no	no
rr	no	yes
)	no	no
.	no	no
seek	no	yes
(	no	no
bI	no	yes
.	no	no
startOffset	no	yes
)	no	no
;	no	no
}	no	no
nextBlock	no	yes
(	no	no
readIntoOffset	no	yes
)	no	no
;	no	no
readIntoOffset	no	yes
=	no	no
getCurrentReadBlockSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
rr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Object	no	yes
key	no	yes
=	no	no
rr	no	yes
.	no	no
createKey	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
i	no	yes
<	no	no
this	no	no
.	no	no
currentReadBlock	no	yes
.	no	no
length	no	no
&&	no	no
rr	no	yes
.	no	no
next	no	no
(	no	no
key	no	yes
,	no	no
val	no	yes
)	no	no
)	no	no
{	no	no
nextSplit	no	yes
=	no	no
false	no	no
;	no	no
this	no	no
.	no	no
currentReadBlock	no	yes
[	no	no
i	no	yes
++	no	no
]	no	no
=	no	no
(	no	no
ROW	no	yes
)	no	no
ObjectInspectorUtils	no	yes
.	no	no
copyToStandardObject	no	yes
(	no	no
serde	no	yes
.	no	no
deserialize	no	yes
(	no	no
val	no	yes
)	no	no
,	no	no
serde	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
,	no	no
ObjectInspectorCopyOption	no	yes
.	no	no
WRITABLE	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
nextSplit	no	yes
&&	no	no
this	no	no
.	no	no
currentSplitPointer	no	yes
<	no	no
this	no	no
.	no	no
actualSplitNum	no	no
)	no	no
{	no	no
JobConf	no	yes
localJc	no	yes
=	no	no
getLocalFSJobConfClone	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no
rr	no	yes
=	no	no
inputFormat	no	yes
.	no	no
getRecordReader	no	yes
(	no	no
inputSplits	no	yes
[	no	no
currentSplitPointer	no	yes
]	no	no
,	no	no
jobCloneUsingLocalFs	no	yes
,	no	no
reporter	no	yes
)	no	no
;	no	no
currentSplitPointer	no	yes
++	no	no
;	no	no
return	no	no
nextBlock	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
this	no	no
.	no	no
readBlockSize	no	yes
=	no	no
i	no	yes
;	no	no
return	no	no
this	no	no
.	no	no
readBlockSize	no	yes
>	no	no
0	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no

numFlushedBlocks	no	yes
=	no	no
0	no	no
;	no	no
this	no	no
.	no	no
readBlockSize	no	yes
=	no	no
0	no	no
;	no	no
this	no	no
.	no	no
actualSplitNum	no	yes
=	no	no
0	no	no
;	no	no
this	no	no
.	no	no
currentSplitPointer	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
this	no	no
.	no	no
firstCalled	no	yes
=	no	no
false	no	no
;	no	no
this	no	no
.	no	no
inputSplits	no	yes
=	no	no
null	no	no
;	no	no
tempOutPath	no	yes
=	no	no
null	no	no
;	no	no
addCursor	no	yes
=	no	no
0	no	no
;	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
rw	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
rw	no	yes
.	no	no
close	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
rr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
rr	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
this	no	no
.	no	no
keyObject	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
keyObjectStr	no	yes
=	no	no
this	no	no
.	no	no
keyObject	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
md5Str	no	yes
=	no	no
DigestUtils	no	yes
.	no	no
md5Hex	no	yes
(	no	no
keyObjectStr	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
md5Str	no	yes
+	no	no
+	no	no
keyObjectStr	no	yes
)	no	no
;	no	no
suffix	no	yes
=	no	no
+	no	no
md5Str	no	yes
+	no	no
suffix	no	yes
;	no	no
}	no	no
parentDir	no	yes
=	no	no
FileUtils	no	yes
.	no	no
createLocalDirsTempFile	no	yes
(	no	no
spillFileDirs	no	yes
,	no	no
,	no	no
,	no	no
true	no	no
)	no	no
;	no	no
tmpFile	no	yes
=	no	no
File	no	yes
.	no	no
createTempFile	no	yes
(	no	no
,	no	no
suffix	no	yes
,	no	no
parentDir	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tmpFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
parentDir	no	yes
.	no	no
deleteOnExit	no	yes
(	no	no
)	no	no
;	no	no
tmpFile	no	yes
.	no	no
deleteOnExit	no	yes
(	no	no
)	no	no
;	no	no
HiveOutputFormat	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
hiveOutputFormat	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getHiveOutputFormat	no	yes
(	no	no
jc	no	yes
,	no	no
tblDesc	no	yes
)	no	no
;	no	no
tempOutPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tmpFile	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
JobConf	no	yes
localJc	no	yes
=	no	no
getLocalFSJobConfClone	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no
rw	no	yes
=	no	no
hiveOutputFormat	no	yes
.	no	no
getHiveRecordWriter	no	yes
(	no	no
localJc	no	yes
,	no	no
tempOutPath	no	yes
,	no	no
serde	no	yes
.	no	no
getSerializedClass	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
,	no	no
tblDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
,	no	no
reporter	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Path	no	yes
ackPath	yes	yes
=	no	no
work	no	yes
.	no	no
getAckFilePath	no	yes
(	no	no
)	no	no
;	no	no
Utils	no	yes
.	no	no
create	no	yes
(	no	no
ackPath	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
AtlasReplInfo	no	yes
atlasReplInfo	yes	yes
=	no	no
createAtlasReplInfo	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
AtlasReplInfo	no	yes
atlasReplInfo	no	yes
=	no	no
createAtlasReplInfo	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getTgtDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AtlasDumpLogger	no	yes
replLogger	no	yes
=	no	no
new	no	no
AtlasDumpLogger	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
atlasRestClient	no	yes
=	no	no
new	no	no
AtlasRestClientBuilder	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getAtlasEndpoint	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getClient	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AtlasRequestBuilder	no	yes
atlasRequestBuilder	no	yes
=	no	no
new	no	no
AtlasRequestBuilder	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
entityGuid	no	yes
=	no	no
checkHiveEntityGuid	no	yes
(	no	no
atlasRequestBuilder	no	yes
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcCluster	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
currentModifiedTime	no	yes
=	no	no
getCurrentTimestamp	no	yes
(	no	no
atlasReplInfo	no	yes
,	no	no
entityGuid	no	yes
)	no	no
;	no	no
long	no	no
numBytesWritten	yes	yes
=	no	no
dumpAtlasMetaData	no	yes
(	no	no
atlasRequestBuilder	no	yes
,	no	no
atlasReplInfo	no	yes
)	no	no
;	no	no

replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
atlasRestClient	no	yes
=	no	no
new	no	no
AtlasRestClientBuilder	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getAtlasEndpoint	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getClient	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AtlasRequestBuilder	no	yes
atlasRequestBuilder	no	yes
=	no	no
new	no	no
AtlasRequestBuilder	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
entityGuid	no	yes
=	no	no
checkHiveEntityGuid	no	yes
(	no	no
atlasRequestBuilder	no	yes
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcCluster	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
currentModifiedTime	no	yes
=	no	no
getCurrentTimestamp	no	yes
(	no	no
atlasReplInfo	no	yes
,	no	no
entityGuid	no	yes
)	no	no
;	no	no
long	no	no
numBytesWritten	no	yes
=	no	no
dumpAtlasMetaData	no	yes
(	no	no
atlasRequestBuilder	no	yes
,	no	no
atlasReplInfo	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
numBytesWritten	no	yes
)	no	no
;	no	no
createDumpMetadata	no	yes
(	no	no
atlasReplInfo	no	yes
,	no	no
currentModifiedTime	no	yes
)	no	no
;	no	no
replLogger	no	yes
.	no	no
endLog	no	yes
(	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
SUCCESS	no	yes
)	no	no
;	no	no
return	no	no
0	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

replLogger	no	yes
.	no	no
endLog	no	yes
(	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
SUCCESS	no	yes
)	no	no
;	no	no
return	no	no
0	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
setException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
int	no	no
errorCode	no	yes
=	no	no
ErrorMsg	no	yes
.	no	no
getErrorMsg	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getErrorCode	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
errorCode	no	yes
>	no	no
40000	no	no
)	no	no
{	no	no
Path	no	yes
nonRecoverableMarker	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
ReplAck	no	yes
.	no	no
NON_RECOVERABLE_MARKER	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Utils	no	yes
.	no	no
writeStackTrace	no	yes
(	no	no
e	no	yes
,	no	no
nonRecoverableMarker	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
FAILED_ADMIN	no	yes
,	no	no
nonRecoverableMarker	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
FAILED	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	yes	no
)	no	no
{	no	no

private	no	no
long	no	no
getCurrentTimestamp	no	no
(	no	no
AtlasReplInfo	no	no
atlasReplInfo	no	yes
,	no	no
String	no	no
entityGuid	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
AtlasServer	no	yes
atlasServer	no	yes
=	no	no
atlasRestClient	no	yes
.	no	no
getServer	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getSrcCluster	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
ret	yes	yes
=	no	no
(	no	no
atlasServer	no	yes
==	no	no
null	no	no
||	no	no
atlasServer	no	yes
.	no	no
getAdditionalInfoRepl	no	yes
(	no	no
entityGuid	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
?	no	no
0L	no	no
:	no	no
(	no	no
long	no	no
)	no	no
atlasServer	no	yes
.	no	no
getAdditionalInfoRepl	no	yes
(	no	no
entityGuid	no	yes
)	no	no
;	no	no

void	no	no
createDumpMetadata	no	no
(	no	no
AtlasReplInfo	no	no
atlasReplInfo	no	yes
,	no	no
long	no	no
lastModifiedTime	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Path	no	yes
dumpFile	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
,	no	no
EximUtil	no	yes
.	no	no
METADATA_NAME	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
listValues	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
listValues	no	yes
.	no	no
add	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getSrcFsUri	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
lastModifiedTime	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
Utils	no	yes
.	no	no
writeOutput	no	yes
(	no	no
listValues	no	yes
,	no	no
dumpFile	yes	yes
,	no	no
conf	no	yes
,	no	no
true	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
AtlasReplInfo	no	yes
atlasReplInfo	yes	yes
=	no	no
createAtlasReplInfo	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
int	no	no
execute	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
AtlasReplInfo	no	yes
atlasReplInfo	no	yes
=	no	no
createAtlasReplInfo	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getTgtDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AtlasLoadLogger	no	yes
replLogger	no	yes
=	no	no
new	no	no
AtlasLoadLogger	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getTgtDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
importCount	yes	yes
=	no	no
importAtlasMetadata	no	yes
(	no	no
atlasReplInfo	no	yes
)	no	no
;	no	no
replLogger	no	yes
.	no	no
endLog	no	yes
(	no	no
importCount	yes	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageProgress	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
importCount	yes	yes
)	no	no
;	no	no

SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
AtlasReplInfo	no	yes
atlasReplInfo	no	yes
=	no	no
createAtlasReplInfo	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
0L	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getTgtDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AtlasLoadLogger	no	yes
replLogger	no	yes
=	no	no
new	no	no
AtlasLoadLogger	no	yes
(	no	no
atlasReplInfo	no	yes
.	no	no
getSrcDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getTgtDB	no	yes
(	no	no
)	no	no
,	no	no
atlasReplInfo	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
importCount	no	yes
=	no	no
importAtlasMetadata	no	yes
(	no	no
atlasReplInfo	no	yes
)	no	no
;	no	no
replLogger	no	yes
.	no	no
endLog	no	yes
(	no	no
importCount	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageProgress	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
ENTITIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
importCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
importCount	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
SUCCESS	no	yes
)	no	no
;	no	no
return	no	no
0	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
importCount	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
SUCCESS	no	yes
)	no	no
;	no	no
return	no	no
0	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
setException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
int	no	no
errorCode	no	yes
=	no	no
ErrorMsg	no	yes
.	no	no
getErrorMsg	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getErrorCode	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
errorCode	no	yes
>	no	no
40000	no	no
)	no	no
{	no	no
Path	no	yes
nonRecoverableMarker	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
getStagingDir	no	yes
(	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
ReplAck	no	yes
.	no	no
NON_RECOVERABLE_MARKER	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Utils	no	yes
.	no	no
writeStackTrace	no	yes
(	no	no
e	no	yes
,	no	no
nonRecoverableMarker	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
FAILED_ADMIN	no	yes
,	no	no
nonRecoverableMarker	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageEnd	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
Status	no	yes
.	no	no
FAILED	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
rangerRestClient	no	yes
.	no	no
checkConnection	no	no
(	no	no
rangerEndpoint	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_EXTERNAL_SERVICE_CONNECTION_ERROR	no	yes
.	no	no
format	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_SERVICE	no	yes
,	no	no
+	no	no
rangerEndpoint	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangerExportPolicyList	no	yes
rangerExportPolicyList	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
exportRangerPolicies	no	yes
(	no	no
rangerEndpoint	no	yes
,	no	no
work	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
rangerHiveServiceName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
rangerPolicies	no	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rangerPolicies	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
rangerExportPolicyList	no	yes
=	no	no
new	no	no
RangerExportPolicyList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
rangerPolicies	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
removeMultiResourcePolicies	no	yes
(	no	no
rangerPolicies	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerPolicies	no	yes
)	no	no
)	no	no
{	no	no
rangerExportPolicyList	no	yes
.	no	no
setPolicies	no	yes
(	no	no
rangerPolicies	no	yes
)	no	no
;	no	no
filePath	yes	yes
=	no	no
rangerRestClient	no	yes
.	no	no
saveRangerPoliciesToFile	no	yes
(	no	no
rangerExportPolicyList	no	yes
,	no	no
work	no	yes
.	no	no
getCurrentDumpPath	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
HIVE_RANGER_POLICIES_FILE_NAME	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filePath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
exportCount	no	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getListSize	no	yes
(	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_EXTERNAL_SERVICE_CONNECTION_ERROR	no	yes
.	no	no
format	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_SERVICE	no	yes
,	no	no
+	no	no
rangerEndpoint	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
RangerExportPolicyList	no	yes
rangerExportPolicyList	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
exportRangerPolicies	no	yes
(	no	no
rangerEndpoint	no	yes
,	no	no
work	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
rangerHiveServiceName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
rangerPolicies	no	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rangerPolicies	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
rangerExportPolicyList	no	yes
=	no	no
new	no	no
RangerExportPolicyList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
rangerPolicies	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
removeMultiResourcePolicies	no	yes
(	no	no
rangerPolicies	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerPolicies	no	yes
)	no	no
)	no	no
{	no	no
rangerExportPolicyList	no	yes
.	no	no
setPolicies	no	yes
(	no	no
rangerPolicies	no	yes
)	no	no
;	no	no
filePath	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
saveRangerPoliciesToFile	no	yes
(	no	no
rangerExportPolicyList	no	yes
,	no	no
work	no	yes
.	no	no
getCurrentDumpPath	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
HIVE_RANGER_POLICIES_FILE_NAME	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filePath	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
exportCount	yes	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getListSize	no	yes
(	no	no
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageProgress	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
POLICIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
exportCount	yes	yes
)	no	no
;	no	no

List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
rangerPolicies	no	yes
=	no	no
null	no	no
;	no	no
SecurityUtils	no	yes
.	no	no
reloginExpiringKeytabUser	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rangerRestClient	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
rangerRestClient	no	yes
=	no	no
getRangerRestClient	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
URL	no	yes
url	no	yes
=	no	no
work	yes	yes
.	no	no
getRangerConfigResource	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
url	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_INVALID_CONFIG_FOR_SERVICE	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
ReplUtils	no	yes
.	no	no
RANGER_CONFIGURATION_RESOURCE_NAME	no	yes
,	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_SERVICE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
url	no	yes
)	no	no
;	no	no
String	no	yes
rangerHiveServiceName	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
RANGER_HIVE_SERVICE_NAME	no	yes
)	no	no
;	no	no
String	no	yes
rangerEndpoint	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
RANGER_REST_URL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerEndpoint	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_INVALID_CONFIG_FOR_SERVICE	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
rangerEndpoint	no	yes
,	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_SERVICE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
rangerRestClient	no	yes
.	no	no
checkConnection	no	no
(	no	no
rangerEndpoint	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_EXTERNAL_SERVICE_CONNECTION_ERROR	no	yes
.	no	no
format	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_SERVICE	no	yes
,	no	no
+	no	no
rangerEndpoint	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
work	yes	yes
.	no	no
getCurrentDumpPath	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
POLICIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
long	no	no
)	no	no
expectedPolicyCount	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rangerExportPolicyList	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerExportPolicyList	yes	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
rangerPolicies	no	yes
=	no	no
rangerExportPolicyList	yes	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerPolicies	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
rangerPolicies	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
rangerPoliciesWithDenyPolicy	no	yes
=	no	no
rangerPolicies	no	yes
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
REPL_RANGER_ADD_DENY_POLICY_TARGET	no	no
)	no	no
)	no	no
{	no	no
rangerPoliciesWithDenyPolicy	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
addDenyPolicies	no	yes
(	no	no
rangerPolicies	no	yes
,	no	no
rangerHiveServiceName	no	yes
,	no	no
work	no	yes
.	no	no
getSourceDbName	no	yes
(	no	no
)	no	no
,	no	no
work	no	yes
.	no	no
getTargetDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
updatedRangerPolicies	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
changeDataSet	no	yes
(	no	no
rangerPoliciesWithDenyPolicy	no	yes
,	no	no
work	no	yes
.	no	no
getSourceDbName	no	yes
(	no	no
)	no	no
,	no	no
work	no	yes
.	no	no
getTargetDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
importCount	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
updatedRangerPolicies	no	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
rangerExportPolicyList	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
rangerPolicies	no	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerPolicies	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
rangerPolicies	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
rangerPoliciesWithDenyPolicy	no	yes
=	no	no
rangerPolicies	no	yes
;	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
REPL_RANGER_ADD_DENY_POLICY_TARGET	no	no
)	no	no
)	no	no
{	no	no
rangerPoliciesWithDenyPolicy	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
addDenyPolicies	no	yes
(	no	no
rangerPolicies	no	yes
,	no	no
rangerHiveServiceName	no	yes
,	no	no
work	no	yes
.	no	no
getSourceDbName	no	yes
(	no	no
)	no	no
,	no	no
work	no	yes
.	no	no
getTargetDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
RangerPolicy	no	yes
>	no	no
updatedRangerPolicies	no	yes
=	no	no
rangerRestClient	no	yes
.	no	no
changeDataSet	no	yes
(	no	no
rangerPoliciesWithDenyPolicy	no	yes
,	no	no
work	no	yes
.	no	no
getSourceDbName	no	yes
(	no	no
)	no	no
,	no	no
work	no	yes
.	no	no
getTargetDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
importCount	yes	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
!	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
updatedRangerPolicies	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
rangerExportPolicyList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
rangerExportPolicyList	no	yes
=	no	no
new	no	no
RangerExportPolicyList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
rangerExportPolicyList	no	yes
.	no	no
setPolicies	no	yes
(	no	no
updatedRangerPolicies	no	yes
)	no	no
;	no	no
rangerRestClient	no	yes
.	no	no
importRangerPolicies	no	yes
(	no	no
rangerExportPolicyList	no	yes
,	no	no
work	no	yes
.	no	no
getTargetDbName	no	yes
(	no	no
)	no	no
,	no	no
rangerEndpoint	no	yes
,	no	no
rangerHiveServiceName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

}	no	no
Path	no	yes
previousValidHiveDumpPath	no	yes
=	no	no
getPreviousValidDumpMetadataPath	no	yes
(	no	no
dumpRoot	no	yes
)	no	no
;	no	no
boolean	no	no
isBootstrap	no	yes
=	no	no
(	no	no
previousValidHiveDumpPath	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
shouldDump	no	no
(	no	no
previousValidHiveDumpPath	no	yes
)	no	no
)	no	no
{	no	no
Path	no	yes
currentDumpPath	no	yes
=	no	no
getCurrentDumpPath	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
isBootstrap	no	yes
)	no	no
;	no	no
Path	no	yes
hiveDumpRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
currentDumpPath	no	yes
,	no	no
ReplUtils	no	yes
.	no	no
REPL_HIVE_BASE_DIR	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
setCurrentDumpPath	no	yes
(	no	no
currentDumpPath	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
setMetricCollector	no	yes
(	no	no
initMetricCollection	no	yes
(	no	no
isBootstrap	no	yes
,	no	no
hiveDumpRoot	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
shouldDumpAtlasMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addAtlasDumpTask	no	yes
(	no	no
isBootstrap	no	yes
,	no	no
previousValidHiveDumpPath	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
shouldDumpAuthorizationMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
initiateAuthorizationDumpTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
DumpMetaData	no	yes
dmd	no	yes
=	no	no
new	no	no
DumpMetaData	no	yes
(	no	no
hiveDumpRoot	no	yes
,	no	no
conf	yes	yes
)	no	no
;	no	no
ReplChangeManager	no	yes
.	no	no
getInstance	no	yes
(	no	no
conf	yes	yes
)	no	no
;	no	no
Path	no	yes
cmRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
conf	yes	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPLCMDIR	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
initiateAuthorizationDumpTask	no	no
(	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
RANGER_AUTHORIZER	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
conf	no	no
.	no	no
getVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_AUTHORIZATION_PROVIDER_SERVICE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
rangerDumpRoot	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
getCurrentDumpPath	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_BASE_DIR	no	yes
)	no	no
;	no	no

private	no	no
Path	no	yes
getCurrentDumpPath	no	no
(	no	no
Path	no	yes
dumpRoot	no	yes
,	no	no
boolean	no	no
isBootstrap	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Path	no	yes
lastDumpPath	yes	yes
=	no	no
ReplUtils	no	yes
.	no	no
getLatestDumpPath	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lastDumpPath	yes	yes
!=	no	no
null	no	no
&&	no	no
shouldResumePreviousDump	no	no
(	no	no
lastDumpPath	yes	yes
,	no	no
isBootstrap	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
prepareReturnValues	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
values	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
dumpSchema	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
s	yes	no
:	no	no
values	no	no
)	no	no
{	no	no

private	no	no
Path	no	no
getPreviousValidDumpMetadataPath	no	no
(	no	no
Path	no	no
dumpRoot	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileStatus	no	yes
latestValidStatus	no	yes
=	no	no
null	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
dumpRoot	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
dumpRoot	no	yes
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
statuses	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
dumpRoot	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
status	yes	no
:	no	no
statuses	no	yes
)	no	no
{	no	no

private	no	no
Long	no	yes
incrementalDump	no	no
(	no	no
Path	no	no
dumpRoot	no	no
,	no	no
DumpMetaData	no	no
dmd	no	no
,	no	no
Path	no	no
cmRoot	no	no
,	no	no
Hive	no	no
hiveDb	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Long	no	yes
lastReplId	no	yes
;	no	no
String	no	yes
validTxnList	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
waitUntilTime	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
bootDumpBeginReplId	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tableList	no	yes
=	no	no
work	yes	yes
.	no	no
replScope	no	yes
.	no	no
includeAllTables	no	yes
(	no	no
)	no	no
?	no	no
null	no	no
:	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
needBootstrapAcidTablesDuringIncrementalDump	no	no
(	no	no
)	no	no
)	no	no
{	no	no
bootDumpBeginReplId	no	yes
=	no	no
queryState	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLong	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
LAST_REPL_ID_KEY	no	yes
,	no	no
-	no	no
1L	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
bootDumpBeginReplId	no	yes
>=	no	no
0	no	no
)	no	no
;	no	no

IMetaStoreClient	no	yes
.	no	no
NotificationFilter	no	yes
evFilter	no	yes
=	no	no
new	no	no
AndFilter	no	yes
(	no	no
new	no	no
ReplEventFilter	no	yes
(	no	no
work	yes	yes
.	no	no
replScope	no	yes
)	no	no
,	no	no
new	no	no
EventBoundaryFilter	no	yes
(	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
,	no	no
work	yes	yes
.	no	no
eventTo	no	yes
)	no	no
)	no	no
;	no	no
EventUtils	no	yes
.	no	no
MSClientNotificationFetcher	no	yes
evFetcher	no	yes
=	no	no
new	no	no
EventUtils	no	yes
.	no	no
MSClientNotificationFetcher	no	yes
(	no	no
hiveDb	no	yes
)	no	no
;	no	no
int	no	no
maxEventLimit	no	yes
=	no	no
getMaxEventAllowed	no	yes
(	no	no
work	yes	yes
.	no	no
maxEventLimit	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
EventUtils	no	yes
.	no	no
NotificationEventIterator	no	yes
evIter	no	yes
=	no	no
new	no	no
EventUtils	no	yes
.	no	no
NotificationEventIterator	no	yes
(	no	no
evFetcher	no	yes
,	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
,	no	no
maxEventLimit	no	yes
,	no	no
evFilter	no	yes
)	no	no
;	no	no
lastReplId	no	yes
=	no	no
work	yes	yes
.	no	no
eventTo	no	yes
;	no	no
Path	no	yes
ackFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
ReplAck	no	yes
.	no	no
EVENTS_DUMP	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
resumeFrom	yes	yes
=	no	no
Utils	no	yes
.	no	no
fileExists	no	yes
(	no	no
ackFile	no	yes
,	no	no
conf	no	yes
)	no	no
?	no	no
getResumeFrom	no	yes
(	no	no
ackFile	no	yes
)	no	no
:	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
;	no	no
String	no	yes
dbName	no	yes
=	no	no
(	no	no
null	no	no
!=	no	no
work	yes	yes
.	no	no
dbNameOrPattern	no	yes
&&	no	no
!	no	no
work	yes	yes
.	no	no
dbNameOrPattern	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
work	yes	yes
.	no	no
dbNameOrPattern	no	yes
:	no	no
;	no	no
long	no	no
estimatedNumEvents	no	yes
=	no	no
evFetcher	no	yes
.	no	no
getDbNotificationEventsCount	no	yes
(	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
,	no	no
dbName	no	yes
,	no	no
work	yes	yes
.	no	no
eventTo	no	yes
,	no	no
maxEventLimit	no	yes
)	no	no
;	no	no
replLogger	no	yes
=	no	no
new	no	no
IncrementalDumpLogger	no	yes
(	no	no
dbName	no	yes
,	no	no
dumpRoot	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
estimatedNumEvents	no	yes
,	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
,	no	no
work	yes	yes
.	no	no
eventTo	no	yes
,	no	no
maxEventLimit	no	yes
)	no	no
;	no	no
replLogger	no	yes
.	no	no
startLog	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
EVENTS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
estimatedNumEvents	no	yes
)	no	no
;	no	no
work	yes	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
long	no	no
dumpedCount	yes	yes
=	no	no
resumeFrom	yes	yes
-	no	no
work	yes	yes
.	no	no
eventFrom	no	yes
;	no	no

work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
long	no	no
dumpedCount	no	yes
=	no	no
resumeFrom	no	yes
-	no	no
work	no	yes
.	no	no
eventFrom	no	yes
;	no	no
if	no	no
(	no	no
dumpedCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
work	no	yes
.	no	no
eventFrom	no	yes
,	no	no
resumeFrom	no	yes
,	no	no
dumpedCount	no	yes
)	no	no
;	no	no
}	no	no
cleanFailedEventDirIfExists	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
resumeFrom	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
evIter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
NotificationEvent	no	yes
ev	no	yes
=	no	no
evIter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
lastReplId	no	yes
=	no	no
ev	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ev	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
<=	no	no
resumeFrom	no	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isMaterializedViewsReplEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
tblName	yes	yes
=	no	no
ev	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tblName	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

lastReplId	yes	yes
=	no	no
ev	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ev	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
<=	no	no
resumeFrom	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isMaterializedViewsReplEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
tblName	no	yes
=	no	no
ev	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tblName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
!=	no	no
null	no	no
&&	no	no
TableType	no	no
.	no	no
MATERIALIZED_VIEW	no	no
.	no	no
equals	no	no
(	no	no
table	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tblName	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvalidTableException	no	no
te	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
te	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Path	no	yes
evRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	yes	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
lastReplId	yes	yes
)	no	no
)	no	no
;	no	no
dumpEvent	no	yes
(	no	no
ev	no	yes
,	no	no
evRoot	no	yes
,	no	no
dumpRoot	yes	yes
,	no	no
cmRoot	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no

Long	no	yes
bootStrapDump	no	no
(	no	no
Path	no	yes
dumpRoot	no	yes
,	no	no
DumpMetaData	no	no
dmd	no	no
,	no	no
Path	no	yes
cmRoot	no	no
,	no	no
Hive	no	no
hiveDb	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
Long	no	yes
bootDumpBeginReplId	no	yes
=	no	no
queryState	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLong	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
LAST_REPL_ID_KEY	no	yes
,	no	no
-	no	no
1L	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
bootDumpBeginReplId	no	yes
>=	no	no
0L	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tableList	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
work	no	yes
.	no	no
dbNameOrPattern	no	yes
)	no	no
;	no	no
long	no	no
timeoutInMs	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_BOOTSTRAP_DUMP_OPEN_TXN_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
long	no	no
waitUntilTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
timeoutInMs	no	yes
;	no	no
String	no	yes
validTxnList	no	yes
=	no	no
getValidTxnListForReplDump	no	yes
(	no	no
hiveDb	no	yes
,	no	no
waitUntilTime	no	yes
)	no	no
;	no	no
Path	no	yes
metadataPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
METADATA_PATH_NAME	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shouldResumePreviousDump	no	no
(	no	no
dmd	no	no
)	no	no
)	no	no
{	no	no
metadataPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
delete	no	yes
(	no	no
metadataPath	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
EximUtil	no	yes
.	no	no
DataCopyPath	no	yes
>	no	no
functionsBinaryCopyPaths	no	yes
=	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
cacheSize	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_FILE_LIST_CACHE_SIZE	no	yes
)	no	no
;	no	no
try	no	no
(	no	no
FileList	no	no
managedTblList	no	no
=	no	no
createTableFileList	no	no
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
FILE_LIST	no	no
,	no	no
cacheSize	no	yes
)	no	no
;	no	no
FileList	no	no
extTableFileList	no	no
=	no	no
createTableFileList	no	no
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
FILE_LIST_EXTERNAL	no	no
,	no	no
cacheSize	no	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
dbName	yes	no
:	no	no
Utils	no	no
.	no	no
matchesDb	no	no
(	no	no
hiveDb	no	yes
,	no	no
work	no	yes
.	no	no
dbNameOrPattern	no	yes
)	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
metricMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
TABLES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
long	no	no
)	no	no
estimatedNumTables	no	yes
)	no	no
;	no	no
metricMap	no	yes
.	no	no
put	no	yes
(	no	no
ReplUtils	no	yes
.	no	no
MetricName	no	yes
.	no	no
FUNCTIONS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
long	no	no
)	no	no
estimatedNumFunctions	no	yes
)	no	no
;	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
Path	no	yes
dbRoot	no	yes
=	no	no
dumpDbMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
metadataPath	no	yes
,	no	no
bootDumpBeginReplId	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no
Path	no	yes
dbDataRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
DATA_PATH_NAME	no	yes
)	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
boolean	no	no
dataCopyAtLoad	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_RUN_DATA_COPY_TASKS_ON_TARGET	no	yes
)	no	no
;	no	no
functionsBinaryCopyPaths	no	yes
=	no	no
dumpFunctionMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
dbRoot	no	yes
,	no	no
dbDataRoot	no	yes
,	no	no
hiveDb	no	yes
,	no	no
dataCopyAtLoad	no	yes
)	no	no
;	no	no
String	no	yes
uniqueKey	no	yes
=	no	no
Utils	no	yes
.	no	no
setDbBootstrapDumpState	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no
Exception	no	yes
caught	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
(	no	no
Writer	no	no
writer	no	no
=	no	no
new	no	no
Writer	no	no
(	no	no
dbRoot	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
tblName	yes	yes
:	no	no
Utils	no	yes
.	no	no
matchesTbl	no	no
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
,	no	no
work	no	yes
.	no	no
replScope	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
HiveWrapper	no	yes
.	no	no
Tuple	no	yes
<	no	no
Table	no	yes
>	no	no
tableTuple	no	yes
=	no	no
new	no	no
HiveWrapper	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
.	no	no
table	no	yes
(	no	no
tblName	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportStageStart	no	yes
(	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
metricMap	no	yes
)	no	no
;	no	no
Path	no	yes
dbRoot	yes	yes
=	no	no
dumpDbMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
metadataPath	no	yes
,	no	no
bootDumpBeginReplId	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no
Path	no	yes
dbDataRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
DATA_PATH_NAME	no	yes
)	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
boolean	no	no
dataCopyAtLoad	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_RUN_DATA_COPY_TASKS_ON_TARGET	no	yes
)	no	no
;	no	no
functionsBinaryCopyPaths	no	yes
=	no	no
dumpFunctionMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
dbRoot	yes	yes
,	no	no
dbDataRoot	no	yes
,	no	no
hiveDb	no	yes
,	no	no
dataCopyAtLoad	no	yes
)	no	no
;	no	no
String	no	yes
uniqueKey	no	yes
=	no	no
Utils	no	yes
.	no	no
setDbBootstrapDumpState	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no
Exception	no	yes
caught	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
(	no	no
Writer	no	no
writer	no	no
=	no	no
new	no	no
Writer	no	no
(	no	no
dbRoot	yes	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
tblName	yes	yes
:	no	no
Utils	no	yes
.	no	no
matchesTbl	no	no
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
,	no	no
work	no	yes
.	no	no
replScope	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
HiveWrapper	no	yes
.	no	no
Tuple	no	yes
<	no	no
Table	no	yes
>	no	no
tableTuple	no	yes
=	no	no
new	no	no
HiveWrapper	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
.	no	no
table	no	yes
(	no	no
tblName	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
table	no	yes
=	no	no
tableTuple	no	yes
!=	no	no
null	no	no
?	no	no
tableTuple	no	yes
.	no	no
object	no	yes
:	no	no
null	no	no
;	no	no
if	no	no
(	no	no
tableTuple	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
isMaterializedViewsReplEnabled	no	no
(	no	no
)	no	no
&&	no	no
TableType	no	no
.	no	no
MATERIALIZED_VIEW	no	no
.	no	no
equals	no	no
(	no	no
tableTuple	no	yes
.	no	no
object	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no

Path	no	yes
dbRoot	no	yes
=	no	no
dumpDbMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
metadataPath	no	yes
,	no	no
bootDumpBeginReplId	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no
Path	no	yes
dbDataRoot	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
dumpRoot	no	yes
,	no	no
EximUtil	no	yes
.	no	no
DATA_PATH_NAME	no	yes
)	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
boolean	no	no
dataCopyAtLoad	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_RUN_DATA_COPY_TASKS_ON_TARGET	no	yes
)	no	no
;	no	no
functionsBinaryCopyPaths	no	yes
=	no	no
dumpFunctionMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
dbRoot	no	yes
,	no	no
dbDataRoot	no	yes
,	no	no
hiveDb	no	yes
,	no	no
dataCopyAtLoad	no	yes
)	no	no
;	no	no
String	no	yes
uniqueKey	no	yes
=	no	no
Utils	no	yes
.	no	no
setDbBootstrapDumpState	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no
Exception	no	yes
caught	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
(	no	no
Writer	no	no
writer	no	no
=	no	no
new	no	no
Writer	no	no
(	no	no
dbRoot	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
tblName	yes	yes
:	no	no
Utils	no	yes
.	no	no
matchesTbl	no	no
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
,	no	no
work	no	no
.	no	no
replScope	no	no
)	no	no
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
HiveWrapper	no	yes
.	no	no
Tuple	no	yes
<	no	no
Table	no	yes
>	no	no
tableTuple	no	yes
=	no	no
new	no	no
HiveWrapper	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
)	no	no
.	no	no
table	no	yes
(	no	no
tblName	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
table	no	yes
=	no	no
tableTuple	no	yes
!=	no	no
null	no	no
?	no	no
tableTuple	no	yes
.	no	no
object	no	yes
:	no	no
null	no	no
;	no	no
if	no	no
(	no	no
tableTuple	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
isMaterializedViewsReplEnabled	no	no
(	no	no
)	no	no
&&	no	no
TableType	no	no
.	no	no
MATERIALIZED_VIEW	no	no
.	no	no
equals	no	no
(	no	no
tableTuple	no	yes
.	no	no
object	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
dataLocationDump	no	yes
(	no	no
tableTuple	no	yes
.	no	no
object	no	yes
,	no	no
extTableFileList	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
dumpTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
validTxnList	no	yes
,	no	no
dbRoot	no	yes
,	no	no
dbDataRoot	no	yes
,	no	no
bootDumpBeginReplId	no	yes
,	no	no
hiveDb	no	yes
,	no	no
tableTuple	no	yes
,	no	no
managedTblList	no	yes
,	no	no
dataCopyAtLoad	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InvalidTableException	no	no
te	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
te	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
dumpConstraintMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
dbRoot	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableList	no	yes
!=	no	no
null	no	no
&&	no	no
isTableSatifiesConfig	no	no
(	no	no
table	no	no
)	no	no
)	no	no
{	no	no
tableList	no	yes
.	no	no
add	no	yes
(	no	no
tblName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
dumpTableListToDumpLocation	no	yes
(	no	no
tableList	no	yes
,	no	no
dumpRoot	no	yes
,	no	no
dbName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
caught	no	yes
=	no	no
e	yes	yes
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
Utils	no	yes
.	no	no
resetDbBootstrapDumpState	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
,	no	no
uniqueKey	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
dumpConstraintMetadata	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
dbRoot	no	yes
,	no	no
hiveDb	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableList	no	yes
!=	no	no
null	no	no
&&	no	no
isTableSatifiesConfig	no	no
(	no	no
table	no	no
)	no	no
)	no	no
{	no	no
tableList	no	yes
.	no	no
add	no	yes
(	no	no
tblName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
dumpTableListToDumpLocation	no	yes
(	no	no
tableList	no	yes
,	no	no
dumpRoot	yes	yes
,	no	no
dbName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
caught	no	yes
=	no	no
e	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
Utils	no	yes
.	no	no
resetDbBootstrapDumpState	no	yes
(	no	no
hiveDb	no	yes
,	no	no
dbName	no	yes
,	no	no
uniqueKey	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
caught	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
uniqueKey	no	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
caught	no	yes
;	no	no

void	no	no
dumpTable	no	no
(	no	no
String	no	no
dbName	no	no
,	no	no
String	no	no
tblName	yes	no
,	no	no
String	no	no
validTxnList	no	no
,	no	no
Path	no	no
dbRootMetadata	no	no
,	no	no
Path	no	no
dbRootData	no	no
,	no	no
long	no	no
lastReplId	no	no
,	no	no
Hive	no	no
hiveDb	no	no
,	no	no
HiveWrapper	no	no
.	no	no
Tuple	no	no
<	no	no
Table	no	no
>	no	no
tuple	no	no
,	no	no
FileList	no	no
managedTbleList	no	no
,	no	no
boolean	no	no
dataCopyAtLoad	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

Path	no	yes
commonConstraintsFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
constraintsRoot	no	yes
,	no	no
ConstraintFileType	no	yes
.	no	no
COMMON	no	yes
.	no	no
getPrefix	no	yes
(	no	no
)	no	no
+	no	no
tblName	no	yes
)	no	no
;	no	no
Path	no	yes
fkConstraintsFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
constraintsRoot	no	yes
,	no	no
ConstraintFileType	no	yes
.	no	no
FOREIGNKEY	no	yes
.	no	no
getPrefix	no	yes
(	no	no
)	no	no
+	no	no
tblName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SQLPrimaryKey	no	yes
>	no	no
pks	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getPrimaryKeyList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SQLForeignKey	no	yes
>	no	no
fks	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getForeignKeyList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SQLUniqueConstraint	no	yes
>	no	no
uks	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getUniqueConstraintList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
SQLNotNullConstraint	no	yes
>	no	no
nns	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getNotNullConstraintList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
pks	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
pks	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
||	no	no
(	no	no
uks	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
uks	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
||	no	no
(	no	no
nns	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
nns	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
(	no	no
JsonWriter	no	no
jsonWriter	no	yes
=	no	no
new	no	no
JsonWriter	no	no
(	no	no
commonConstraintsFile	no	yes
.	no	no
getFileSystem	no	no
(	no	no
conf	no	yes
)	no	no
,	no	no
commonConstraintsFile	no	yes
)	no	no
)	no	no
{	no	no
ConstraintsSerializer	no	yes
serializer	no	yes
=	no	no
new	no	no
ConstraintsSerializer	no	yes
(	no	no
pks	no	yes
,	no	no
null	no	no
,	no	no
uks	no	yes
,	no	no
nns	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
serializer	no	yes
.	no	no
writeTo	no	yes
(	no	no
jsonWriter	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
fks	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
fks	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
(	no	no
JsonWriter	no	no
jsonWriter	no	yes
=	no	no
new	no	no
JsonWriter	no	no
(	no	no
fkConstraintsFile	no	yes
.	no	no
getFileSystem	no	no
(	no	no
conf	no	yes
)	no	no
,	no	no
fkConstraintsFile	no	yes
)	no	no
)	no	no
{	no	no
ConstraintsSerializer	no	yes
serializer	no	yes
=	no	no
new	no	no
ConstraintsSerializer	no	yes
(	no	no
null	no	no
,	no	no
fks	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
serializer	no	yes
.	no	no
writeTo	no	yes
(	no	no
jsonWriter	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
List	no	yes
<	no	no
Task	no	yes
<	no	no
?	no	no
>>	no	no
functionsBinariesCopyTasks	no	no
(	no	no
TaskTracker	no	no
tracker	no	yes
,	no	no
HiveConf	no	no
conf	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
Task	no	yes
<	no	no
?	no	no
>>	no	no
tasks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
functionCopyPathIterator	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
while	no	no
(	no	no
functionCopyPathIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
&&	no	no
tracker	no	yes
.	no	no
canAddMoreTasks	no	no
(	no	no
)	no	no
)	no	no
{	no	no
EximUtil	no	yes
.	no	no
DataCopyPath	no	yes
binaryCopyPath	yes	yes
=	no	no
functionCopyPathIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
copyTask	no	yes
=	no	no
ReplCopyTask	no	yes
.	no	no
getLoadCopyTask	no	yes
(	no	no
binaryCopyPath	yes	yes
.	no	no
getReplicationSpec	no	yes
(	no	no
)	no	no
,	no	no
binaryCopyPath	yes	yes
.	no	no
getSrcPath	no	yes
(	no	no
)	no	no
,	no	no
binaryCopyPath	yes	yes
.	no	no
getTargetPath	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
tasks	no	yes
.	no	no
add	no	yes
(	no	no
copyTask	no	yes
)	no	no
;	no	no
tracker	no	yes
.	no	no
addTask	no	yes
(	no	no
copyTask	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
String	no	no
externalTableLocation	no	no
(	no	no
HiveConf	no	no
hiveConf	no	yes
,	no	no
String	no	no
location	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Path	no	yes
basePath	no	yes
=	no	no
getExternalTableBaseDir	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
Path	no	yes
currentPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
Path	no	yes
dataLocation	yes	yes
=	no	no
externalTableDataPath	no	yes
(	no	no
hiveConf	no	yes
,	no	no
basePath	no	yes
,	no	no
currentPath	no	yes
)	no	no
;	no	no

Task	no	yes
<	no	no
?	no	no
>	no	no
rootTask	no	yes
=	no	no
work	no	yes
.	no	no
getRootTask	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rootTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
rootTask	no	yes
.	no	no
setChildTasks	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
work	no	yes
.	no	no
setRootTask	no	yes
(	no	no
this	no	no
)	no	no
;	no	no
this	no	no
.	no	no
parentTasks	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
shouldLoadAtlasMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addAtlasLoadTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
shouldLoadAuthorizationMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
initiateAuthorizationLoadTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_RUN_DATA_COPY_TASKS_ON_TARGET	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isIncrementalLoad	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
executeIncrementalLoad	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
executeBootStrapLoad	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	no
)	no	no
{	no	no

addAtlasLoadTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
shouldLoadAuthorizationMetadata	no	no
(	no	no
)	no	no
)	no	no
{	no	no
initiateAuthorizationLoadTask	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
REPL_RUN_DATA_COPY_TASKS_ON_TARGET	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
isIncrementalLoad	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
executeIncrementalLoad	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
executeBootStrapLoad	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportEnd	no	yes
(	no	no
Status	no	yes
.	no	no
FAILED	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
throw	no	no
e	yes	yes
;	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
.	no	no
reportEnd	no	yes
(	no	no
Status	no	yes
.	no	no
FAILED	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
setException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
int	no	no
errorCode	no	yes
=	no	no
ErrorMsg	no	yes
.	no	no
getErrorMsg	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getErrorCode	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
errorCode	no	yes
>	no	no
40000	no	no
)	no	no
{	no	no
Path	no	yes
nonRecoverableMarker	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
dumpDirectory	no	yes
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
ReplAck	no	yes
.	no	no
NON_RECOVERABLE_MARKER	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Utils	no	yes
.	no	no
writeStackTrace	no	yes
(	no	no
e	no	yes
,	no	no
nonRecoverableMarker	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
initiateAuthorizationLoadTask	no	no
(	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
RANGER_AUTHORIZER	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
conf	no	no
.	no	no
getVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_AUTHORIZATION_PROVIDER_SERVICE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
rangerLoadRoot	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
dumpDirectory	no	yes
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
REPL_RANGER_BASE_DIR	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
addAtlasLoadTask	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Path	no	yes
atlasDumpDir	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
work	no	yes
.	no	no
dumpDirectory	no	yes
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
ReplUtils	no	yes
.	no	no
REPL_ATLAS_BASE_DIR	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
TableType	no	no
.	no	no
VIRTUAL_VIEW	no	no
.	no	no
name	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
tableEvent	no	yes
.	no	no
getMetaData	no	no
(	no	no
)	no	no
.	no	no
getTable	no	no
(	no	no
)	no	no
.	no	no
getTableType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LoadPartitions	no	yes
loadPartitions	no	yes
=	no	no
new	no	no
LoadPartitions	no	yes
(	no	no
loadContext	no	yes
,	no	no
iterator	no	yes
.	no	no
replLogger	no	yes
(	no	no
)	no	no
,	no	no
loadTaskTracker	yes	yes
,	no	no
tableEvent	no	yes
,	no	no
work	no	yes
.	no	no
dbNameToLoadIn	no	yes
,	no	no
tableContext	no	yes
,	no	no
work	no	yes
.	no	no
getMetricCollector	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TaskTracker	no	yes
partitionsTracker	no	yes
=	no	no
loadPartitions	no	yes
.	no	no
tasks	no	yes
(	no	no
)	no	no
;	no	no
partitionsPostProcessing	no	yes
(	no	no
iterator	no	yes
,	no	no
scope	no	yes
,	no	no
loadTaskTracker	yes	yes
,	no	no
tableTracker	no	yes
,	no	no
partitionsTracker	no	yes
)	no	no
;	no	no
tableTracker	no	yes
.	no	no
debugLog	no	yes
(	no	no
)	no	no
;	no	no
partitionsTracker	no	yes
.	no	no
debugLog	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
Partition	no	no
:	no	no
addLoadPartitionTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
iterator	no	yes
,	no	no
scope	no	yes
,	no	no
loadTaskTracker	yes	yes
,	no	no
tableTracker	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
Function	no	no
:	no	no
loadTaskTracker	yes	yes
.	no	no
update	no	no
(	no	no
addLoadFunctionTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
iterator	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
scope	no	yes
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
Constraint	no	no
:	no	no
loadTaskTracker	yes	yes
.	no	no
update	no	no
(	no	no
addLoadConstraintsTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
scope	no	yes
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
loadingConstraint	no	no
&&	no	no
!	no	no
iterator	no	yes
.	no	no
currentDbHasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no

partitionsTracker	no	yes
.	no	no
debugLog	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
Partition	no	no
:	no	no
addLoadPartitionTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
iterator	no	yes
,	no	no
scope	no	yes
,	no	no
loadTaskTracker	no	yes
,	no	no
tableTracker	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
Function	no	no
:	no	no
loadTaskTracker	no	yes
.	no	no
update	no	no
(	no	no
addLoadFunctionTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
iterator	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
scope	no	yes
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
Constraint	no	no
:	no	no
loadTaskTracker	no	yes
.	no	no
update	no	no
(	no	no
addLoadConstraintsTasks	no	no
(	no	no
loadContext	no	yes
,	no	no
next	no	no
,	no	no
dbTracker	no	no
,	no	no
scope	no	yes
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
loadingConstraint	no	no
&&	no	no
!	no	no
iterator	no	yes
.	no	no
currentDbHasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
createEndReplLogTask	no	yes
(	no	no
loadContext	no	yes
,	no	no
scope	no	yes
,	no	no
iterator	no	yes
.	no	no
replLogger	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
boolean	no	no
addAnotherLoadTask	no	yes
=	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
||	no	no
loadTaskTracker	no	yes
.	no	no
hasReplicationState	no	yes
(	no	no
)	no	no
||	no	no
constraintIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
addAnotherLoadTask	no	yes
)	no	no
{	no	no
createBuilderTask	no	yes
(	no	no
scope	no	yes
.	no	no
rootTasks	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
iterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
constraintIterator	no	yes
.	no	no
hasNext	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
work	yes	no
.	no	no
isIncrementalLoad	no	no
(	no	no
)	no	no
)	no	no
{	no	no

addLazyDataCopyTask	no	yes
(	no	no
tracker	no	yes
)	no	no
;	no	no
childTasks	no	yes
.	no	no
add	no	yes
(	no	no
builder	no	yes
.	no	no
build	no	yes
(	no	no
context	no	yes
,	no	no
getHive	no	yes
(	no	no
)	no	no
,	no	no
LOG	no	yes
,	no	no
tracker	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
builder	no	yes
.	no	no
hasMoreWork	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dbName	yes	yes
=	no	no
work	no	yes
.	no	no
dbNameToLoadIn	no	yes
;	no	no
if	no	no
(	no	no
dbName	yes	yes
==	no	no
null	no	no
||	no	no
StringUtils	no	no
.	no	no
isBlank	no	no
(	no	no
dbName	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
currentReplScope	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
replScopeDbName	no	yes
=	no	no
work	no	yes
.	no	no
currentReplScope	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replScopeDbName	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
.	no	no
equals	no	no
(	no	no
replScopeDbName	no	yes
)	no	no
)	no	no
{	no	no
dbName	yes	yes
=	no	no
replScopeDbName	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isNotBlank	no	no
(	no	no
dbName	yes	yes
)	no	no
)	no	no
{	no	no
String	no	yes
lastEventid	yes	yes
=	no	no
builder	no	yes
.	no	no
eventTo	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
mapProp	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
mapProp	no	yes
.	no	no
put	no	yes
(	no	no
ReplicationSpec	no	yes
.	no	no
KEY	no	yes
.	no	no
CURR_STATE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
lastEventid	yes	yes
)	no	no
;	no	no
AlterDatabaseSetPropertiesDesc	no	yes
alterDbDesc	no	yes
=	no	no
new	no	no
AlterDatabaseSetPropertiesDesc	no	yes
(	no	no
dbName	yes	yes
,	no	no
mapProp	no	yes
,	no	no
new	no	no
ReplicationSpec	no	yes
(	no	no
lastEventid	yes	yes
,	no	no
lastEventid	yes	yes
)	no	no
)	no	no
;	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
updateReplIdTask	no	yes
=	no	no
TaskFactory	no	yes
.	no	no
get	no	yes
(	no	no
new	no	no
DDLWork	no	yes
(	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
,	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
,	no	no
alterDbDesc	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no

private	no	no
String	no	yes
getQualifiedName	no	no
(	no	no
String	no	yes
clusterName	no	yes
,	no	no
String	no	yes
srcDb	no	yes
)	no	no
{	no	no
String	no	yes
qualifiedName	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
QUALIFIED_NAME_FORMAT	no	yes
,	no	no
srcDb	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
,	no	no
clusterName	no	yes
)	no	no
;	no	no

public	no	no
AtlasImportRequest	no	yes
createImportRequest	no	no
(	no	no
String	no	no
sourceDataSet	no	yes
,	no	no
String	no	no
targetDataSet	no	yes
,	no	no
String	no	no
sourceClusterName	no	yes
,	no	no
String	no	no
targetClusterName	no	yes
,	no	no
String	no	no
sourceFsEndpoint	no	yes
,	no	no
String	no	no
targetFsEndpoint	no	yes
)	no	no
{	no	no
AtlasImportRequest	no	yes
request	yes	yes
=	no	no
new	no	no
AtlasImportRequest	no	yes
(	no	no
)	no	no
;	no	no
addTransforms	no	yes
(	no	no
request	yes	yes
.	no	no
getOptions	no	yes
(	no	no
)	no	no
,	no	no
sourceClusterName	no	yes
,	no	no
targetClusterName	no	yes
,	no	no
sourceDataSet	no	yes
,	no	no
targetDataSet	no	yes
,	no	no
sourceFsEndpoint	no	yes
,	no	no
targetFsEndpoint	no	yes
)	no	no
;	no	no
addReplicatedFrom	no	yes
(	no	no
request	yes	yes
.	no	no
getOptions	no	yes
(	no	no
)	no	no
,	no	no
sourceClusterName	no	yes
)	no	no
;	no	no

private	no	no
AtlasRestClientBuilder	no	no
setUGInfo	no	no
(	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
try	no	no
{	no	no
this	no	no
.	no	no
userGroupInformation	yes	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
InputStream	no	no
exportData	no	no
(	no	no
AtlasExportRequest	no	no
request	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

private	no	no
void	no	no
getSortedFileList	no	no
(	no	no
Path	no	no
eventPath	no	yes
,	no	no
List	no	no
<	no	no
LocatedFileStatus	no	yes
>	no	no
fileStatuses	no	no
,	no	no
FileSystem	no	no
fileSystem	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
RemoteIterator	no	yes
<	no	no
LocatedFileStatus	no	yes
>	no	no
iteratorNext	no	yes
=	no	no
fileSystem	no	yes
.	no	no
listFiles	no	yes
(	no	no
eventPath	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iteratorNext	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
status	yes	yes
=	no	no
iteratorNext	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
replicationState	no	no
==	no	no
null	no	no
&&	no	no
next	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
while	no	no
(	no	no
remoteIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
next	no	yes
=	no	no
remoteIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
next	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
ReplExternalTables	no	no
.	no	no
FILE_NAME	no	no
)	no	no
||	no	no
next	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
ReplUtils	no	no
.	no	no
REPL_TABLE_LIST_DIR_NAME	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
next	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
endsWith	no	no
(	no	no
EximUtil	no	no
.	no	no
METADATA_NAME	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
replacedString	no	yes
=	no	no
next	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
replace	no	yes
(	no	no
dbLevelPath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
filteredNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
stream	no	yes
(	no	no
replacedString	no	yes
.	no	no
split	no	yes
(	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
)	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
StringUtils	no	yes
::	no	no
isNotBlank	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filteredNames	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no
this	no	no
.	no	no
next	no	yes
=	no	no
next	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
return	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
BootstrapEvent	no	no
postProcessing	no	no
(	no	no
BootstrapEvent	no	no
bootstrapEvent	no	no
)	no	no
{	no	no
previous	yes	yes
=	no	no
next	no	yes
;	no	no
next	no	yes
=	no	no
null	no	no
;	no	no

private	no	no
Task	no	no
<	no	no
?	no	no
>	no	no
tasksForAddPartition	no	no
(	no	no
Table	no	no
table	no	yes
,	no	no
AlterTableAddPartitionDesc	no	yes
addPartitionDesc	no	yes
,	no	no
Task	no	no
<	no	no
?	no	no
>	no	no
ptnRootTask	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
HiveException	no	no
{	no	no
AlterTableAddPartitionDesc	no	yes
.	no	no
PartitionDesc	no	yes
partSpec	yes	yes
=	no	no
addPartitionDesc	no	yes
.	no	no
getPartitions	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Path	no	yes
sourceWarehousePartitionLocation	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
partSpec	yes	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
replicaWarehousePartitionLocation	no	yes
=	no	no
locationOnReplicaWarehouse	no	yes
(	no	no
table	no	yes
,	no	no
partSpec	yes	yes
)	no	no
;	no	no
partSpec	yes	yes
.	no	no
setLocation	no	yes
(	no	no
replicaWarehousePartitionLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
TaskTracker	no	no
forExistingTable	no	no
(	no	no
AlterTableAddPartitionDesc	no	no
lastPartitionReplicated	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
boolean	no	no
encounteredTheLastReplicatedPartition	no	yes
=	no	no
(	no	no
lastPartitionReplicated	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
lastReplicatedPartSpec	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
encounteredTheLastReplicatedPartition	no	yes
)	no	no
{	no	no
lastReplicatedPartSpec	yes	yes
=	no	no
lastPartitionReplicated	no	yes
.	no	no
getPartitions	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no

final	no	no
URI	no	yes
inputPathUri	no	yes
=	no	no
inputPath	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
inputPathName	no	yes
=	no	no
inputPathUri	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
fileSystemAsString	no	yes
=	no	no
inputPathUri	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
inputPathUri	no	yes
.	no	no
getAuthority	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
stagingPathName	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
inputPathName	no	yes
.	no	no
contains	no	no
(	no	no
stagingDir	no	yes
)	no	no
)	no	no
{	no	no
stagingPathName	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
inputPathName	no	yes
,	no	no
stagingDir	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
stagingPathName	no	yes
=	no	no
inputPathName	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
inputPathName	no	yes
.	no	no
indexOf	no	yes
(	no	no
stagingDir	no	yes
)	no	no
+	no	no
stagingDir	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
key	no	yes
=	no	no
fileSystemAsString	no	yes
+	no	no
+	no	no
stagingPathName	no	yes
+	no	no
+	no	no
TaskRunner	no	yes
.	no	no
getTaskRunnerID	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
dir	yes	yes
=	no	no
fsScratchDirs	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
fileSystem	no	yes
=	no	no
inputPath	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dir	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
Path	no	yes
path	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
stagingPathName	no	yes
+	no	no
+	no	no
generateExecutionId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
TaskRunner	no	yes
.	no	no
getTaskRunnerID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dir	yes	yes
=	no	no
fileSystem	no	yes
.	no	no
makeQualified	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
isEventNotReplayed	no	no
(	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
,	no	no
FileStatus	no	no
dir	no	no
,	no	no
DumpType	no	no
dumpType	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
params	no	yes
!=	no	no
null	no	no
&&	no	no
(	no	no
params	no	yes
.	no	no
containsKey	no	no
(	no	no
ReplicationSpec	no	yes
.	no	no
KEY	no	yes
.	no	no
CURR_STATE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
replLastId	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
ReplicationSpec	no	yes
.	no	no
KEY	no	yes
.	no	no
CURR_STATE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
Long	yes	no
.	no	no
parseLong	no	no
(	no	no
replLastId	no	yes
)	no	no
>=	no	no
Long	yes	no
.	no	no
parseLong	no	no
(	no	no
dir	no	no
.	no	no
getPath	no	no
(	no	no
)	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
tableUpdateReplStateTask	no	no
(	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tableName	no	yes
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
,	no	no
String	no	yes
replState	no	yes
,	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
preCursor	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
mapProp	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
mapProp	no	yes
.	no	no
put	no	yes
(	no	no
ReplicationSpec	no	yes
.	no	no
KEY	no	yes
.	no	no
CURR_STATE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
replState	no	yes
)	no	no
;	no	no
TableName	no	yes
tName	no	yes
=	no	no
TableName	no	yes
.	no	no
fromString	no	yes
(	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
AlterTableSetPropertiesDesc	no	yes
alterTblDesc	no	yes
=	no	no
new	no	no
AlterTableSetPropertiesDesc	no	yes
(	no	no
tName	no	yes
,	no	no
partSpec	no	yes
,	no	no
new	no	no
ReplicationSpec	no	yes
(	no	no
replState	no	yes
,	no	no
replState	no	yes
)	no	no
,	no	no
false	no	no
,	no	no
mapProp	no	yes
,	no	no
false	no	no
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
updateReplIdTask	yes	yes
=	no	no
TaskFactory	no	yes
.	no	no
get	no	yes
(	no	no
new	no	no
DDLWork	no	yes
(	no	no
inputs	no	yes
,	no	no
outputs	no	yes
,	no	no
alterTblDesc	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
preCursor	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
preCursor	yes	yes
.	no	no
addDependentTask	no	yes
(	no	no
updateReplIdTask	yes	yes
)	no	no
;	no	no

private	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
dbUpdateReplStateTask	no	no
(	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
replState	no	yes
,	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
preCursor	yes	yes
)	no	no
{	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
mapProp	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
mapProp	no	yes
.	no	no
put	no	yes
(	no	no
ReplicationSpec	no	yes
.	no	no
KEY	no	yes
.	no	no
CURR_STATE_ID	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
replState	no	yes
)	no	no
;	no	no
AlterDatabaseSetPropertiesDesc	no	yes
alterDbDesc	no	yes
=	no	no
new	no	no
AlterDatabaseSetPropertiesDesc	no	yes
(	no	no
dbName	no	yes
,	no	no
mapProp	no	yes
,	no	no
new	no	no
ReplicationSpec	no	yes
(	no	no
replState	no	yes
,	no	no
replState	no	yes
)	no	no
)	no	no
;	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
updateReplIdTask	yes	yes
=	no	no
TaskFactory	no	yes
.	no	no
get	no	yes
(	no	no
new	no	no
DDLWork	no	yes
(	no	no
inputs	no	yes
,	no	no
outputs	no	yes
,	no	no
alterDbDesc	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
preCursor	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
preCursor	yes	yes
.	no	no
addDependentTask	no	yes
(	no	no
updateReplIdTask	yes	yes
)	no	no
;	no	no

public	no	no
RangerExportPolicyList	no	no
exportRangerPolicies	no	no
(	no	no
String	no	no
sourceRangerEndpoint	yes	no
,	no	no
String	no	no
dbName	no	no
,	no	no
String	no	no
rangerHiveServiceName	no	no
,	no	no
HiveConf	no	no
hiveConf	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
RangerExportPolicyList	no	no
exportRangerPoliciesPlain	no	no
(	no	no
String	no	yes
sourceRangerEndpoint	no	yes
,	no	no
String	no	yes
rangerHiveServiceName	no	yes
,	no	no
String	no	yes
dbName	no	yes
)	no	no
throws	no	no
SemanticException	no	no
,	no	no
URISyntaxException	no	no
{	no	no
String	no	yes
finalUrl	yes	yes
=	no	no
getRangerExportUrl	no	yes
(	no	no
sourceRangerEndpoint	no	yes
,	no	no
rangerHiveServiceName	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
RangerExportPolicyList	no	yes
exportRangerPoliciesPlain	no	no
(	no	no
String	no	yes
sourceRangerEndpoint	no	yes
,	no	no
String	no	yes
rangerHiveServiceName	no	yes
,	no	no
String	no	yes
dbName	no	yes
)	no	no
throws	no	no
SemanticException	no	no
,	no	no
URISyntaxException	no	no
{	no	no
String	no	yes
finalUrl	no	yes
=	no	no
getRangerExportUrl	no	yes
(	no	no
sourceRangerEndpoint	no	yes
,	no	no
rangerHiveServiceName	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
finalUrl	no	yes
)	no	no
;	no	no
WebResource	no	yes
.	no	no
Builder	no	yes
builder	no	yes
=	no	no
getRangerResourceBuilder	no	yes
(	no	no
finalUrl	no	yes
)	no	no
;	no	no
RangerExportPolicyList	no	yes
rangerExportPolicyList	no	yes
=	no	no
new	no	no
RangerExportPolicyList	no	yes
(	no	no
)	no	no
;	no	no
ClientResponse	no	yes
clientResp	no	yes
=	no	no
builder	no	yes
.	no	no
get	no	yes
(	no	no
ClientResponse	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
String	no	yes
response	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
clientResp	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
clientResp	no	yes
.	no	no
getStatus	no	no
(	no	no
)	no	no
==	no	no
HttpServletResponse	no	no
.	no	no
SC_OK	no	no
)	no	no
{	no	no
Gson	no	yes
gson	no	yes
=	no	no
new	no	no
GsonBuilder	no	yes
(	no	no
)	no	no
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
response	yes	yes
=	no	no
clientResp	no	yes
.	no	no
getEntity	no	yes
(	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
RangerExportPolicyList	no	no
importRangerPolicies	no	no
(	no	no
RangerExportPolicyList	no	no
rangerExportPolicyList	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
baseUrl	no	yes
,	no	no
String	no	yes
rangerHiveServiceName	no	yes
,	no	no
HiveConf	no	no
hiveConf	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
sourceClusterServiceName	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
serviceMapJsonFileName	no	yes
=	no	no
;	no	no
String	no	yes
rangerPoliciesJsonFileName	no	yes
=	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
sourceClusterServiceName	no	yes
=	no	no
rangerExportPolicyList	no	yes
.	no	no
getPolicies	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getService	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
sourceClusterServiceName	no	yes
)	no	no
)	no	no
{	no	no
sourceClusterServiceName	no	yes
=	no	no
rangerHiveServiceName	no	yes
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
serviceMap	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
sourceClusterServiceName	no	yes
)	no	no
&&	no	no
!	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
rangerHiveServiceName	no	yes
)	no	no
)	no	no
{	no	no
serviceMap	no	yes
.	no	no
put	no	yes
(	no	no
sourceClusterServiceName	no	yes
,	no	no
rangerHiveServiceName	no	yes
)	no	no
;	no	no
}	no	no
Gson	no	yes
gson	no	yes
=	no	no
new	no	no
GsonBuilder	no	yes
(	no	no
)	no	no
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
jsonServiceMap	no	yes
=	no	no
gson	no	yes
.	no	no
toJson	no	yes
(	no	no
serviceMap	no	yes
)	no	no
;	no	no
String	no	yes
jsonRangerExportPolicyList	no	yes
=	no	no
gson	no	yes
.	no	no
toJson	no	yes
(	no	no
rangerExportPolicyList	no	yes
)	no	no
;	no	no
String	no	yes
finalUrl	yes	yes
=	no	no
getRangerImportUrl	no	yes
(	no	no
baseUrl	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
clientResp	no	no
.	no	no
getStatus	no	no
(	no	no
)	no	no
==	no	no
HttpServletResponse	no	no
.	no	no
SC_UNAUTHORIZED	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
filePartPolicies	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
filePartPolicies	no	yes
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
filePartServiceMap	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
filePartServiceMap	no	yes
.	no	no
cleanup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
formDataMultiPart	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
formDataMultiPart	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
multipartEntity	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
multipartEntity	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
synchronized	no	no
void	no	no
initStoreToFile	no	no
(	no	no
int	no	no
cacheSize	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
thresholdHit	no	yes
)	no	no
{	no	no
fileListStreamer	no	yes
.	no	no
setName	no	yes
(	no	no
getNextID	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fileListStreamer	no	yes
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
fileListStreamer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
thresholdHit	no	yes
=	no	no
true	no	no
;	no	no

BufferedWriter	no	yes
lazyInitWriter	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
backingFile	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
BufferedWriter	no	yes
writer	no	yes
=	no	no
new	no	no
BufferedWriter	no	yes
(	no	no
new	no	no
OutputStreamWriter	no	yes
(	no	no
fs	no	yes
.	no	no
create	no	yes
(	no	no
backingFile	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

backingFileWriter	no	yes
=	no	no
lazyInitWriter	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
valid	no	yes
=	no	no
false	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
exThrown	no	yes
=	no	no
false	no	no
;	no	no
while	no	no
(	no	no
!	no	no
exThrown	no	yes
&&	no	no
(	no	no
!	no	no
signalTostop	no	no
||	no	no
!	no	no
cache	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
nextEntry	no	yes
=	no	no
cache	no	yes
.	no	no
poll	no	yes
(	no	no
TIMEOUT_IN_SECS	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nextEntry	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
backingFileWriter	no	yes
.	no	no
write	no	yes
(	no	no
nextEntry	no	yes
)	no	no
;	no	no
backingFileWriter	no	yes
.	no	no
newLine	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
nextEntry	no	yes
,	no	no
backingFile	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
iEx	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
iEx	yes	no
instanceof	no	no
InterruptedException	no	no
)	no	no
)	no	no
{	no	no
valid	no	yes
=	no	no
false	no	no
;	no	no

String	no	yes
nextEntry	no	yes
=	no	no
cache	no	yes
.	no	no
poll	no	yes
(	no	no
TIMEOUT_IN_SECS	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nextEntry	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
backingFileWriter	no	yes
.	no	no
write	no	yes
(	no	no
nextEntry	no	yes
)	no	no
;	no	no
backingFileWriter	no	yes
.	no	no
newLine	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
nextEntry	no	yes
,	no	no
backingFile	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
iEx	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
iEx	no	yes
instanceof	no	no
InterruptedException	no	no
)	no	no
)	no	no
{	no	no
valid	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
backingFile	yes	yes
,	no	no
iEx	no	yes
)	no	no
;	no	no
exThrown	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
try	no	no
{	no	no
closeBackingFile	no	yes
(	no	no
)	no	no
;	no	no
completed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
synchronized	no	no
(	no	no
COMPLETION_LOCK	no	no
)	no	no
{	no	no

public	no	no
static	no	no
Path	no	no
getLatestDumpPath	no	no
(	no	no
Path	no	no
dumpRoot	no	yes
,	no	no
HiveConf	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
dumpRoot	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
dumpRoot	no	yes
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
statuses	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
dumpRoot	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
statuses	no	yes
.	no	no
length	no	no
>	no	no
0	no	no
)	no	no
{	no	no
FileStatus	no	yes
latestValidStatus	no	yes
=	no	no
statuses	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
status	yes	no
:	no	no
statuses	no	yes
)	no	no
{	no	no

public	no	no
void	no	no
debugLog	no	no
(	no	no
String	no	no
forEventType	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
load	no	no
(	no	no
MapJoinTableContainer	no	no
[	no	no
]	no	no
mapJoinTables	no	no
,	no	no
MapJoinTableContainerSerDe	no	no
[	no	no
]	no	no
mapJoinTableSerdes	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
currentInputPath	yes	yes
=	no	no
context	no	yes
.	no	no
getCurrentInputPath	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
context	no	yes
.	no	no
getCurrentInputPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
MapJoinTableContainer	no	no
load	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
path	yes	no
,	no	no
MapJoinTableContainerSerDe	no	no
mapJoinTableSerde	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no

final	no	no
String	no	yes
sessionIdString	no	yes
=	no	no
+	no	no
hiveSessionId	no	yes
+	no	no
;	no	no
if	no	no
(	no	no
appName	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hiveSessionId	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
appName	no	yes
=	no	no
SPARK_DEFAULT_APP_NAME	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
appName	no	yes
=	no	no
SPARK_DEFAULT_APP_NAME	no	yes
+	no	no
sessionIdString	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
appName	no	yes
=	no	no
appName	no	yes
+	no	no
sessionIdString	no	yes
;	no	no
}	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
appNameKey	no	yes
,	no	no
appName	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_SERIALIZER	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_REFERENCE_TRACKING	no	yes
)	no	no
;	no	no
InputStream	no	yes
inputStream	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
inputStream	no	yes
=	no	no
HiveSparkClientFactory	no	yes
.	no	no
class	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResourceAsStream	no	yes
(	no	no
SPARK_DEFAULT_CONF_FILE	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputStream	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
}	no	no
else	no	no
{	no	no
appName	no	yes
=	no	no
appName	no	yes
+	no	no
sessionIdString	no	yes
;	no	no
}	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
appNameKey	no	yes
,	no	no
appName	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_SERIALIZER	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_REFERENCE_TRACKING	no	yes
)	no	no
;	no	no
InputStream	no	yes
inputStream	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
inputStream	no	yes
=	no	no
HiveSparkClientFactory	no	yes
.	no	no
class	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResourceAsStream	no	yes
(	no	no
SPARK_DEFAULT_CONF_FILE	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputStream	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
SPARK_DEFAULT_CONF_FILE	yes	yes
)	no	no
;	no	no
Properties	no	yes
properties	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
load	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
inputStream	no	yes
,	no	no
CharsetNames	no	yes
.	no	no
UTF_8	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
propertyName	yes	yes
:	no	no
properties	no	yes
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
propertyName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
value	yes	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
propertyName	yes	yes
)	no	no
;	no	no

else	no	no
{	no	no
appName	no	yes
=	no	no
appName	no	yes
+	no	no
sessionIdString	no	yes
;	no	no
}	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
appNameKey	no	yes
,	no	no
appName	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_SERIALIZER	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_REFERENCE_TRACKING	no	yes
)	no	no
;	no	no
InputStream	no	yes
inputStream	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
inputStream	no	yes
=	no	no
HiveSparkClientFactory	no	yes
.	no	no
class	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResourceAsStream	no	yes
(	no	no
SPARK_DEFAULT_CONF_FILE	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputStream	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
SPARK_DEFAULT_CONF_FILE	yes	yes
)	no	no
;	no	no
Properties	no	yes
properties	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
load	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
inputStream	no	yes
,	no	no
CharsetNames	no	yes
.	no	no
UTF_8	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
propertyName	no	yes
:	no	no
properties	no	yes
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
propertyName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
value	no	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
propertyName	no	yes
)	no	no
;	no	no

InputStream	no	yes
inputStream	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
inputStream	no	yes
=	no	no
HiveSparkClientFactory	no	yes
.	no	no
class	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResourceAsStream	no	yes
(	no	no
SPARK_DEFAULT_CONF_FILE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputStream	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
SPARK_DEFAULT_CONF_FILE	no	yes
)	no	no
;	no	no
Properties	no	yes
properties	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
properties	no	yes
.	no	no
load	no	yes
(	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
inputStream	no	yes
,	no	no
CharsetNames	no	yes
.	no	no
UTF_8	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
propertyName	no	yes
:	no	no
properties	no	yes
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
propertyName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
value	no	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
propertyName	no	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
propertyName	no	yes
,	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
propertyName	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
SPARK_DEFAULT_CONF_FILE	no	yes
,	no	no
propertyName	no	yes
,	no	no
LogUtils	no	yes
.	no	no
maskIfPassword	no	yes
(	no	no
propertyName	no	yes
,	no	no
value	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
SPARK_DEFAULT_CONF_FILE	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no

if	no	no
(	no	no
sparkMaster	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
sparkMaster	yes	yes
=	no	no
sparkConf	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
sparkMaster	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
deployMode	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
SparkClientUtilities	no	yes
.	no	no
isLocalMaster	no	no
(	no	no
sparkMaster	yes	yes
)	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
hiveConf	no	yes
.	no	no
get	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
sparkConf	no	yes
.	no	no
get	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
SparkClientUtilities	no	yes
.	no	no
getDeployModeFromMaster	no	yes
(	no	no
sparkMaster	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
SPARK_DEFAULT_DEPLOY_MODE	no	yes
;	no	no
}	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
,	no	no
sparkMaster	yes	yes
)	no	no
;	no	no

deployMode	no	yes
=	no	no
sparkConf	no	yes
.	no	no
get	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
SparkClientUtilities	no	yes
.	no	no
getDeployModeFromMaster	no	yes
(	no	no
sparkMaster	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
SPARK_DEFAULT_DEPLOY_MODE	no	yes
;	no	no
}	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
,	no	no
sparkMaster	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SparkClientUtilities	no	yes
.	no	no
isYarnClusterMode	no	no
(	no	no
sparkMaster	no	yes
,	no	no
deployMode	no	yes
)	no	no
)	no	no
{	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
entry	no	yes
:	no	no
hiveConf	no	yes
)	no	no
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
propertyName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
deployMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
deployMode	no	yes
=	no	no
SPARK_DEFAULT_DEPLOY_MODE	no	yes
;	no	no
}	no	no
hiveConf	no	yes
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
,	no	no
sparkMaster	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SparkClientUtilities	no	no
.	no	no
isYarnClusterMode	no	no
(	no	no
sparkMaster	no	yes
,	no	no
deployMode	no	yes
)	no	no
)	no	no
{	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
entry	no	yes
:	no	no
hiveConf	no	yes
)	no	no
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
propertyName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
value	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
get	no	yes
(	no	no
propertyName	yes	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
propertyName	yes	yes
,	no	no
value	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
propertyName	yes	yes
,	no	no
LogUtils	no	yes
.	no	no
maskIfPassword	no	yes
(	no	no
propertyName	yes	yes
,	no	no
value	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
,	no	no
sparkMaster	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deployMode	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
SPARK_DEPLOY_MODE	no	yes
,	no	no
deployMode	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
SparkClientUtilities	no	no
.	no	no
isYarnClusterMode	no	no
(	no	no
sparkMaster	no	yes
,	no	no
deployMode	no	yes
)	no	no
)	no	no
{	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
entry	no	yes
:	no	no
hiveConf	no	yes
)	no	no
{	no	no
String	no	yes
propertyName	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
propertyName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
value	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
get	no	yes
(	no	no
propertyName	yes	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
propertyName	yes	yes
,	no	no
value	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
propertyName	yes	yes
,	no	no
LogUtils	no	yes
.	no	no
maskIfPassword	no	yes
(	no	no
propertyName	yes	yes
,	no	no
value	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
propertyName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
SparkClientUtilities	no	no
.	no	no
isYarnMaster	no	no
(	no	no
sparkMaster	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
value	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
get	no	yes
(	no	no
propertyName	yes	yes
)	no	no
;	no	no
sparkConf	no	yes
.	no	no
put	no	yes
(	no	no
+	no	no
propertyName	yes	yes
,	no	no
value	yes	yes
)	no	no
;	no	no

remoteClient	no	yes
=	no	no
SparkClientFactory	no	yes
.	no	no
createClient	no	yes
(	no	no
conf	no	yes
,	no	no
hiveConf	no	yes
,	no	no
sessionId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_ENABLED	no	no
)	no	no
&&	no	no
(	no	no
SparkClientUtilities	no	no
.	no	no
isYarnMaster	no	no
(	no	no
hiveConf	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
||	no	no
SparkClientUtilities	no	no
.	no	no
isLocalMaster	no	no
(	no	no
hiveConf	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
int	no	no
minExecutors	no	yes
=	no	no
getExecutorsToWarm	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
minExecutors	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
minExecutors	no	yes
)	no	no
;	no	no
int	no	no
curExecutors	yes	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxPrewarmTime	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_SPARK_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
long	no	no
ts	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
do	no	no
{	no	no
try	no	no
{	no	no
curExecutors	yes	yes
=	no	no
getExecutorCount	no	yes
(	no	no
maxPrewarmTime	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
curExecutors	yes	yes
>=	no	no
minExecutors	no	yes
)	no	no
{	no	no

return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
minExecutors	no	yes
)	no	no
;	no	no
int	no	no
curExecutors	yes	yes
=	no	no
0	no	no
;	no	no
long	no	no
maxPrewarmTime	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_SPARK_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
long	no	no
ts	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
do	no	no
{	no	no
try	no	no
{	no	no
curExecutors	yes	yes
=	no	no
getExecutorCount	no	yes
(	no	no
maxPrewarmTime	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
curExecutors	yes	yes
>=	no	no
minExecutors	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
curExecutors	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
500	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
ts	no	yes
<	no	no
maxPrewarmTime	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
initialize	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
String	no	yes
currentQueryId	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEQUERYID	no	yes
.	no	no
varname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
currentQueryId	no	yes
.	no	no
equals	no	no
(	no	no
queryId	yes	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
TABLE_CONTAINER_CACHE	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
TABLE_CONTAINER_CACHE	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
currentQueryId	no	yes
.	no	no
equals	no	no
(	no	no
queryId	yes	no
)	no	no
&&	no	no
TABLE_CONTAINER_CACHE	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
TABLE_CONTAINER_CACHE	no	yes
.	no	no
clear	no	yes
(	no	no
(	no	no
path	no	yes
,	no	no
tableContainer	no	yes
)	no	no
->	no	no
tableContainer	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
processFiles	no	no
(	no	no
MapWork	no	no
work	no	yes
,	no	no
JobConf	no	no
jobConf	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
ObjectInputStream	no	yes
in	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Path	no	yes
baseDir	no	yes
=	no	no
work	no	yes
.	no	no
getTmpPathForPartitionPruning	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
baseDir	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
name	no	yes
:	no	no
sourceInfoMap	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
sourceDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
baseDir	no	yes
,	no	no
name	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	no
fstatus	yes	no
:	no	no
fs	no	yes
.	no	no
listStatus	no	no
(	no	no
sourceDir	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
applyFilterToPartitions	no	no
(	no	no
MapWork	no	no
work	no	yes
,	no	no
ObjectInspectorConverters	no	no
.	no	no
Converter	no	no
converter	no	yes
,	no	no
ExprNodeEvaluator	no	no
eval	no	no
,	no	no
String	no	yes
columnName	no	yes
,	no	no
Set	no	no
<	no	no
Object	no	yes
>	no	no
values	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Object	no	yes
[	no	no
]	no	no
row	no	yes
=	no	no
new	no	no
Object	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
Iterator	no	yes
<	no	no
Path	no	yes
>	no	no
it	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
PartitionDesc	no	yes
desc	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
spec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
spec	no	yes
,	no	no
)	no	no
;	no	no
String	no	yes
partValueString	yes	yes
=	no	no
spec	no	yes
.	no	no
get	no	yes
(	no	no
columnName	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
partValueString	yes	yes
,	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
Object	no	yes
partValue	yes	yes
=	no	no
converter	no	yes
.	no	no
convert	no	yes
(	no	no
partValueString	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Object	no	yes
[	no	no
]	no	no
row	no	yes
=	no	no
new	no	no
Object	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
Iterator	no	yes
<	no	no
Path	no	yes
>	no	no
it	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
PartitionDesc	no	yes
desc	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
spec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
spec	no	yes
,	no	no
)	no	no
;	no	no
String	no	yes
partValueString	no	yes
=	no	no
spec	no	yes
.	no	no
get	no	yes
(	no	no
columnName	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
partValueString	no	yes
,	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
Object	no	yes
partValue	yes	yes
=	no	no
converter	no	yes
.	no	no
convert	no	yes
(	no	no
partValueString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	yes	yes
+	no	no
+	no	no
partValueString	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
row	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
partValue	yes	yes
;	no	no
partValue	yes	yes
=	no	no
eval	no	yes
.	no	no
evaluate	no	yes
(	no	no
row	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
p	yes	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
PartitionDesc	no	yes
desc	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
p	yes	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
spec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
spec	no	yes
,	no	no
)	no	no
;	no	no
String	no	yes
partValueString	no	yes
=	no	no
spec	no	yes
.	no	no
get	no	yes
(	no	no
columnName	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
partValueString	no	yes
,	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
Object	no	yes
partValue	no	yes
=	no	no
converter	no	yes
.	no	no
convert	no	yes
(	no	no
partValueString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	no	yes
+	no	no
+	no	no
partValueString	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
row	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
partValue	no	yes
;	no	no
partValue	no	yes
=	no	no
eval	no	yes
.	no	no
evaluate	no	yes
(	no	no
row	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
values	no	no
.	no	no
contains	no	no
(	no	no
partValue	no	yes
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
jc	no	yes
=	no	no
job	no	yes
;	no	no
execContext	no	yes
=	no	no
new	no	no
ExecMapperContext	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no
MapWork	no	yes
mrwork	no	yes
=	no	no
Utilities	no	yes
.	no	no
getMapWork	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
PartitionDesc	no	no
part	no	yes
:	no	no
mrwork	no	yes
.	no	no
getAliasToPartnInfo	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
TableDesc	no	yes
tableDesc	no	yes
=	no	no
part	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
copyJobSecretToTableProperties	no	yes
(	no	no
tableDesc	no	yes
)	no	no
;	no	no
}	no	no
CompilationOpContext	no	yes
runtimeCtx	no	yes
=	no	no
new	no	no
CompilationOpContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
mrwork	no	yes
.	no	no
getVectorMode	no	no
(	no	no
)	no	no
)	no	no
{	no	no
mo	yes	yes
=	no	no
new	no	no
VectorMapOperator	no	yes
(	no	no
runtimeCtx	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
mo	yes	yes
=	no	no
new	no	no
MapOperator	no	yes
(	no	no
runtimeCtx	no	yes
)	no	no
;	no	no
}	no	no
mo	yes	yes
.	no	no
setConf	no	yes
(	no	no
mrwork	no	yes
)	no	no
;	no	no
mo	yes	yes
.	no	no
initialize	no	yes
(	no	no
jc	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
mo	yes	yes
.	no	no
setChildren	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
processRow	no	no
(	no	no
Object	no	no
key	no	no
,	no	no
Object	no	no
value	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
anyRow	no	yes
)	no	no
{	no	no
OperatorUtils	no	yes
.	no	no
setChildrenCollector	no	yes
(	no	no
mo	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
,	no	no
oc	no	yes
)	no	no
;	no	no
anyRow	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
execContext	no	yes
.	no	no
resetRow	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
mo	no	yes
.	no	no
process	no	yes
(	no	no
(	no	no
Writable	no	yes
)	no	no
value	no	yes
)	no	no
;	no	no
incrementRowNumber	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	yes
)	no	no
{	no	no
abort	no	yes
=	no	no
true	no	no
;	no	no
Utilities	no	yes
.	no	no
setMapWork	no	yes
(	no	no
jc	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
e	yes	yes
instanceof	no	no
OutOfMemoryError	no	yes
)	no	no
{	no	no
throw	no	no
(	no	no
OutOfMemoryError	no	yes
)	no	no
e	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no

LOG	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
abort	no	yes
)	no	no
{	no	no
abort	no	yes
=	no	no
execContext	no	yes
.	no	no
getIoCxt	no	yes
(	no	no
)	no	no
.	no	no
getIOExceptions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
mo	no	yes
.	no	no
close	no	yes
(	no	no
abort	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
localWork	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
dummyOps	no	yes
=	no	no
localWork	no	yes
.	no	no
getDummyParentOp	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
dummyOp	no	yes
:	no	no
dummyOps	no	yes
)	no	no
{	no	no
dummyOp	no	yes
.	no	no
close	no	yes
(	no	no
abort	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
ReportStats	no	yes
rps	no	yes
=	no	no
new	no	no
ReportStats	no	yes
(	no	no
rp	no	yes
,	no	no
jc	no	yes
)	no	no
;	no	no
mo	no	yes
.	no	no
preorderMap	no	yes
(	no	no
rps	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
abort	no	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no

else	no	no
{	no	no
sc	no	yes
.	no	no
setCallSite	no	yes
(	no	no
CallSite	no	yes
.	no	no
apply	no	yes
(	no	no
+	no	no
rdd	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
prevRDD	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
)	no	no
)	no	no
;	no	no
rdd	no	yes
=	no	no
rdd	no	yes
.	no	no
union	no	yes
(	no	no
prevRDD	no	yes
)	no	no
;	no	no
rdd	no	yes
.	no	no
setName	no	yes
(	no	no
+	no	no
rdd	no	yes
.	no	no
getNumPartitions	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
sc	no	yes
.	no	no
setCallSite	no	yes
(	no	no
CallSite	no	yes
.	no	no
apply	no	yes
(	no	no
tran	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
getLongFormCallSite	no	yes
(	no	no
tran	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
rdd	no	yes
=	no	no
tran	no	yes
.	no	no
transform	no	yes
(	no	no
rdd	no	yes
)	no	no
;	no	no
}	no	no
tranToOutputRDDMap	no	yes
.	no	no
put	no	yes
(	no	no
tran	no	yes
,	no	no
rdd	no	yes
)	no	no
;	no	no
}	no	no
JavaPairRDD	no	yes
<	no	no
HiveKey	no	yes
,	no	no
BytesWritable	no	yes
>	no	no
finalRDD	yes	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
SparkTran	no	no
leafTran	no	yes
:	no	no
leafTrans	no	no
)	no	no
{	no	no
JavaPairRDD	no	yes
<	no	no
HiveKey	no	yes
,	no	no
BytesWritable	no	yes
>	no	no
rdd	no	yes
=	no	no
tranToOutputRDDMap	no	yes
.	no	no
get	no	yes
(	no	no
leafTran	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
finalRDD	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
finalRDD	yes	yes
=	no	no
rdd	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
sc	no	yes
.	no	no
setCallSite	no	yes
(	no	no
CallSite	no	yes
.	no	no
apply	no	yes
(	no	no
+	no	no
rdd	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
finalRDD	yes	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
)	no	no
)	no	no
;	no	no
finalRDD	yes	yes
=	no	no
finalRDD	yes	yes
.	no	no
union	no	yes
(	no	no
rdd	no	yes
)	no	no
;	no	no

private	no	no
String	no	yes
getLongFormCallSite	no	no
(	no	no
SparkTran	no	no
tran	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
this	no	no
.	no	no
jobConf	no	yes
.	no	no
getBoolean	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SPARK_LOG_EXPLAIN_WEBUI	no	no
.	no	no
varname	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SPARK_LOG_EXPLAIN_WEBUI	no	no
.	no	no
defaultBoolVal	no	yes
)	no	no
)	no	no
{	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
SPARK_CREATE_EXPLAIN_PLAN	no	yes
+	no	no
tran	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ExplainWork	no	yes
explainWork	no	yes
=	no	no
new	no	no
ExplainWork	no	yes
(	no	no
)	no	no
;	no	no
explainWork	no	yes
.	no	no
setConfig	no	yes
(	no	no
new	no	no
ExplainConfiguration	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ExplainTask	no	yes
explainTask	no	yes
=	no	no
new	no	no
ExplainTask	no	yes
(	no	no
)	no	no
;	no	no
explainTask	no	yes
.	no	no
setWork	no	yes
(	no	no
explainWork	no	yes
)	no	no
;	no	no
String	no	yes
explainOutput	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
ByteArrayOutputStream	no	yes
outputStream	no	yes
=	no	no
new	no	no
ByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
explainTask	no	yes
.	no	no
outputPlan	no	yes
(	no	no
tran	no	yes
.	no	no
getBaseWork	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
PrintStream	no	yes
(	no	no
outputStream	no	yes
)	no	no
,	no	no
false	no	no
,	no	no
false	no	no
,	no	no
0	no	no
,	no	no
null	no	no
,	no	no
this	no	no
.	no	no
jobConf	no	yes
.	no	no
getBoolean	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_IN_TEST	no	yes
.	no	no
varname	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_IN_TEST	no	yes
.	no	no
defaultBoolVal	no	yes
)	no	no
)	no	no
;	no	no
explainOutput	yes	yes
=	no	no
StringUtils	no	yes
.	no	no
abbreviate	no	yes
(	no	no
tran	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
outputStream	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
100000	no	no
)	no	no
;	no	no

private	no	no
void	no	no
logMemoryInfo	no	no
(	no	no
)	no	no
{	no	no
long	no	no
usedMemory	yes	yes
=	no	no
memoryMXBean	no	yes
.	no	no
getHeapMemoryUsage	no	yes
(	no	no
)	no	no
.	no	no
getUsed	no	yes
(	no	no
)	no	no
;	no	no

BytesColumnVector	no	yes
bytesColumnVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
colVector	no	yes
;	no	no
bytesColumnVector	no	yes
.	no	no
initBuffer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
ois	no	yes
.	no	no
add	no	yes
(	no	no
keyObjectInspector	no	yes
)	no	no
;	no	no
ois	no	yes
.	no	no
add	no	yes
(	no	no
valueObjectInspector	no	yes
[	no	no
tag	no	yes
]	no	no
)	no	no
;	no	no
rowObjectInspector	no	yes
[	no	no
tag	no	yes
]	no	no
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getStandardStructObjectInspector	no	yes
(	no	no
Utilities	no	yes
.	no	no
reduceFieldNameList	no	yes
,	no	no
ois	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
ExecMapperContext	no	yes
execContext	no	yes
=	no	no
new	no	no
ExecMapperContext	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
localWork	no	yes
=	no	no
gWork	no	yes
.	no	no
getMapRedLocalWork	no	yes
(	no	no
)	no	no
;	no	no
execContext	no	yes
.	no	no
setJc	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no
execContext	no	yes
.	no	no
setLocalWork	no	yes
(	no	no
localWork	no	yes
)	no	no
;	no	no
reducer	yes	yes
.	no	no
passExecContext	no	yes
(	no	no
execContext	no	yes
)	no	no
;	no	no
reducer	yes	yes
.	no	no
setReporter	no	yes
(	no	no
rp	no	yes
)	no	no
;	no	no
OperatorUtils	no	yes
.	no	no
setChildrenCollector	no	yes
(	no	no
Arrays	no	yes
.	no	no
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
asList	no	yes
(	no	no
reducer	yes	yes
)	no	no
,	no	no
output	no	yes
)	no	no
;	no	no

else	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
reducer	no	yes
.	no	no
endGroup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
keyObject	no	yes
=	no	no
inputKeyDeserializer	no	yes
.	no	no
deserialize	no	yes
(	no	no
keyWritable	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
Utilities	no	yes
.	no	no
formatBinaryString	no	yes
(	no	no
keyWritable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
keyWritable	no	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
keyTableDesc	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
groupKey	no	yes
.	no	no
set	no	yes
(	no	no
keyWritable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
keyWritable	no	yes
.	no	no
getSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
)	no	no
;	no	no
reducer	no	yes
.	no	no
setGroupKeyObject	no	yes
(	no	no
keyObject	no	yes
)	no	no
;	no	no
reducer	no	yes
.	no	no
startGroup	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
processKeyValues	no	yes
(	no	no
values	no	yes
,	no	no
tag	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	yes
)	no	no
{	no	no
abort	no	yes
=	no	no
true	no	no
;	no	no

printConfigInfo	no	yes
(	no	no
)	no	no
;	no	no
sparkSessionManager	no	yes
=	no	no
SparkSessionManagerImpl	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
sparkSession	no	yes
=	no	no
SparkUtilities	no	yes
.	no	no
getSparkSession	no	yes
(	no	no
conf	no	yes
,	no	no
sparkSessionManager	no	yes
)	no	no
;	no	no
SparkWork	no	yes
sparkWork	no	yes
=	no	no
getWork	no	yes
(	no	no
)	no	no
;	no	no
sparkWork	no	yes
.	no	no
setRequiredCounterPrefix	no	yes
(	no	no
getOperatorCounters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogBegin	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
SPARK_SUBMIT_JOB	no	yes
)	no	no
;	no	no
submitTime	no	yes
=	no	no
perfLogger	no	yes
.	no	no
getStartTime	no	yes
(	no	no
PerfLogger	no	yes
.	no	no
SPARK_SUBMIT_JOB	no	yes
)	no	no
;	no	no
jobRef	no	yes
=	no	no
sparkSession	no	yes
.	no	no
submit	no	yes
(	no	no
taskQueue	no	yes
,	no	no
context	no	yes
,	no	no
sparkWork	no	yes
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
SPARK_SUBMIT_JOB	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
taskQueue	no	yes
.	no	no
isShutdown	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
killJob	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
getId	no	yes
(	no	no
)	no	no
,	no	no
sparkWork	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sparkJobHandleId	yes	yes
=	no	no
jobRef	no	yes
.	no	no
getJobId	no	yes
(	no	no
)	no	no
;	no	no
addToHistory	no	yes
(	no	no
Keys	no	yes
.	no	no
SPARK_JOB_HANDLE_ID	no	yes
,	no	no
jobRef	no	yes
.	no	no
getJobId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

sparkJobID	yes	yes
=	no	no
jobRef	no	yes
.	no	no
getSparkJobStatus	no	yes
(	no	no
)	no	no
.	no	no
getJobId	no	yes
(	no	no
)	no	no
;	no	no
addToHistory	no	yes
(	no	no
Keys	no	yes
.	no	no
SPARK_JOB_ID	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
sparkJobID	yes	yes
)	no	no
)	no	no
;	no	no
SparkJobStatus	no	yes
sparkJobStatus	no	yes
=	no	no
jobRef	no	yes
.	no	no
getSparkJobStatus	no	yes
(	no	no
)	no	no
;	no	no
getSparkJobInfo	no	yes
(	no	no
sparkJobStatus	no	yes
)	no	no
;	no	no
setSparkException	no	yes
(	no	no
sparkJobStatus	no	yes
,	no	no
rc	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
sparkStatistics	yes	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getSparkStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	no
.	no	no
get	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounters	no	yes
counters	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
counters	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
counters	no	yes
.	no	no
getCounter	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECOUNTERGROUP	no	yes
)	no	no
,	no	no
FileSinkOperator	no	yes
.	no	no
TOTAL_TABLE_ROWS_WRITTEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
queryState	no	yes
.	no	no
setNumModifiedRows	no	yes
(	no	no
counter	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
printConsoleMetrics	no	yes
(	no	no
)	no	no
;	no	no
printExcessiveGCWarning	no	yes
(	no	no
)	no	no
;	no	no

SparkJobStatus	no	yes
sparkJobStatus	no	yes
=	no	no
jobRef	no	yes
.	no	no
getSparkJobStatus	no	yes
(	no	no
)	no	no
;	no	no
getSparkJobInfo	no	yes
(	no	no
sparkJobStatus	no	yes
)	no	no
;	no	no
setSparkException	no	yes
(	no	no
sparkJobStatus	no	yes
,	no	no
rc	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
sparkStatistics	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getSparkStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	no
.	no	no
get	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounters	no	yes
counters	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
counters	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
counters	no	yes
.	no	no
getCounter	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECOUNTERGROUP	no	yes
)	no	no
,	no	no
FileSinkOperator	no	yes
.	no	no
TOTAL_TABLE_ROWS_WRITTEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
queryState	no	yes
.	no	no
setNumModifiedRows	no	yes
(	no	no
counter	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
printConsoleMetrics	no	yes
(	no	no
)	no	no
;	no	no
printExcessiveGCWarning	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
&&	no	no
sparkStatistics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
sparkStatisticsToString	no	yes
(	no	no
sparkStatistics	no	yes
,	no	no
sparkJobID	yes	yes
)	no	no
)	no	no
;	no	no

setSparkException	no	yes
(	no	no
sparkJobStatus	no	yes
,	no	no
rc	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
sparkStatistics	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getSparkStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	no
.	no	no
get	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounters	no	yes
counters	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
counters	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
counters	no	yes
.	no	no
getCounter	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECOUNTERGROUP	no	yes
)	no	no
,	no	no
FileSinkOperator	no	yes
.	no	no
TOTAL_TABLE_ROWS_WRITTEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
queryState	no	yes
.	no	no
setNumModifiedRows	no	yes
(	no	no
counter	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
printConsoleMetrics	no	yes
(	no	no
)	no	no
;	no	no
printExcessiveGCWarning	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
&&	no	no
sparkStatistics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
sparkStatisticsToString	no	yes
(	no	no
sparkStatistics	no	yes
,	no	no
sparkJobID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sparkJobID	no	yes
+	no	no
+	no	no
jobID	yes	yes
+	no	no
+	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rc	no	yes
==	no	no
2	no	no
)	no	no
{	no	no

if	no	no
(	no	no
SessionState	no	no
.	no	no
get	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounters	no	yes
counters	no	yes
=	no	no
sparkJobStatus	no	yes
.	no	no
getCounter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
counters	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
counters	no	yes
.	no	no
getCounter	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECOUNTERGROUP	no	yes
)	no	no
,	no	no
FileSinkOperator	no	yes
.	no	no
TOTAL_TABLE_ROWS_WRITTEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
queryState	no	yes
.	no	no
setNumModifiedRows	no	yes
(	no	no
counter	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
printConsoleMetrics	no	yes
(	no	no
)	no	no
;	no	no
printExcessiveGCWarning	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
&&	no	no
sparkStatistics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
sparkStatisticsToString	no	yes
(	no	no
sparkStatistics	no	yes
,	no	no
sparkJobID	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sparkJobID	yes	yes
+	no	no
+	no	no
jobID	yes	yes
+	no	no
+	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rc	no	no
==	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sparkJobHandleId	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
Strings	no	yes
.	no	no
isNullOrEmpty	no	yes
(	no	no
jobID	yes	yes
)	no	no
?	no	no
:	no	no
jobID	yes	yes
)	no	no
)	no	no
;	no	no
killJob	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
numExecutors	yes	yes
<=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
Pair	no	yes
.	no	no
of	no	yes
(	no	no
-	no	no
1L	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
int	no	no
executorMemoryInMB	yes	yes
=	no	no
Utils	no	yes
.	no	no
memoryStringToMb	no	yes
(	no	no
sparkConf	no	yes
.	no	no
get	no	yes
(	no	no
,	no	no
)	no	no
)	no	no
;	no	no
double	no	no
memoryFraction	yes	yes
=	no	no
1.0	no	no
-	no	no
sparkConf	no	yes
.	no	no
getDouble	no	yes
(	no	no
,	no	no
0.6	no	no
)	no	no
;	no	no
long	no	no
totalMemory	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
numExecutors	yes	yes
*	no	no
executorMemoryInMB	yes	yes
*	no	no
memoryFraction	yes	yes
*	no	no
1024	no	no
*	no	no
1024	no	no
)	no	no
;	no	no
int	no	no
totalCores	yes	yes
;	no	no
String	no	yes
masterURL	no	yes
=	no	no
sparkConf	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
masterURL	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
||	no	no
masterURL	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
totalCores	yes	yes
=	no	no
sparkConf	no	yes
.	no	no
contains	no	yes
(	no	no
)	no	no
?	no	no
sparkConf	no	yes
.	no	no
getInt	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
:	no	no
hiveSparkClient	no	yes
.	no	no
getDefaultParallelism	no	yes
(	no	no
)	no	no
;	no	no
totalCores	yes	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
totalCores	yes	yes
,	no	no
numExecutors	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
int	no	no
coresPerExecutor	no	yes
=	no	no
sparkConf	no	yes
.	no	no
getInt	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
totalCores	yes	yes
=	no	no
numExecutors	yes	yes
*	no	no
coresPerExecutor	no	yes
;	no	no
}	no	no
totalCores	yes	yes
=	no	no
totalCores	yes	yes
/	no	no
sparkConf	no	yes
.	no	no
getInt	no	yes
(	no	no
,	no	no
1	no	no
)	no	no
;	no	no
long	no	no
memoryPerTaskInBytes	no	yes
=	no	no
totalMemory	no	yes
/	no	no
totalCores	yes	yes
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
close	no	yes
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isOpen	no	no
)	no	no
{	no	no
closeLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
isOpen	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sessionId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hiveSparkClient	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
hiveSparkClient	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
long	no	no
getEstimatedSize	no	no
(	no	no
InputSplit	no	no
inputSplit	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
colProjSize	yes	yes
=	no	no
inputSplit	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
inputSplit	no	yes
instanceof	no	no
ColumnarSplit	no	yes
)	no	no
{	no	no
colProjSize	yes	yes
=	no	no
(	no	no
(	no	no
ColumnarSplit	no	yes
)	no	no
inputSplit	no	yes
)	no	no
.	no	no
getColumnarProjectionSize	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	no
(	no	no
)	no	no
{	no	no
ByteBuffer	no	yes
payload	yes	yes
=	no	no
context	no	yes
.	no	no
getUserPayload	no	yes
(	no	no
)	no	no
.	no	no
getPayload	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
onRootVertexInitialized	no	no
(	no	no
String	no	no
inputName	yes	no
,	no	no
InputDescriptor	no	no
inputDescriptor	no	no
,	no	no
List	no	no
<	no	no
Event	no	no
>	no	no
events	no	no
)	no	no
{	no	no
numInputsSeenSoFar	no	yes
++	no	no
;	no	no

try	no	no
{	no	no
MRInputUserPayloadProto	no	yes
protoPayload	no	yes
=	no	no
MRInputHelpers	no	yes
.	no	no
parseMRInputPayload	no	yes
(	no	no
inputDescriptor	no	yes
.	no	no
getUserPayload	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
conf	no	yes
=	no	no
TezUtils	no	yes
.	no	no
createConfFromByteString	no	yes
(	no	no
protoPayload	no	yes
.	no	no
getConfigurationBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MRInputUserPayloadProto	no	yes
updatedPayload	no	yes
=	no	no
MRInputUserPayloadProto	no	yes
.	no	no
newBuilder	no	yes
(	no	no
protoPayload	no	yes
)	no	no
.	no	no
setGroupingEnabled	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
inputDescriptor	no	yes
.	no	no
setUserPayload	no	yes
(	no	no
UserPayload	no	yes
.	no	no
create	no	yes
(	no	no
updatedPayload	no	yes
.	no	no
toByteString	no	yes
(	no	no
)	no	no
.	no	no
asReadOnlyByteBuffer	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
dataInformationEventSeen	no	yes
=	no	no
false	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
FileSplit	no	yes
>>	no	no
pathFileSplitsMap	no	yes
=	no	no
new	no	no
TreeMap	no	yes
<	no	no
String	no	yes
,	no	no
Set	no	yes
<	no	no
FileSplit	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Event	no	no
event	no	yes
:	no	no
events	no	no
)	no	no
{	no	no
if	no	no
(	no	no
event	no	yes
instanceof	no	no
InputConfigureVertexTasksEvent	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
inputName	yes	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
dataInformationEventSeen	no	yes
==	no	no
false	no	no
)	no	no
;	no	no
InputConfigureVertexTasksEvent	no	yes
cEvent	no	yes
=	no	no
(	no	no
InputConfigureVertexTasksEvent	no	yes
)	no	no
event	no	yes
;	no	no
configureVertexTaskEvent	yes	yes
=	no	no
cEvent	no	yes
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
inputName	yes	yes
+	no	no
+	no	no
configureVertexTaskEvent	no	yes
.	no	no
getNumTasks	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
event	no	yes
instanceof	no	no
InputUpdatePayloadEvent	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
event	no	yes
instanceof	no	no
InputDataInformationEvent	no	yes
)	no	no
{	no	no
dataInformationEventSeen	no	yes
=	no	no
true	no	no
;	no	no
InputDataInformationEvent	no	yes
diEvent	no	yes
=	no	no
(	no	no
InputDataInformationEvent	no	yes
)	no	no
event	no	yes
;	no	no
FileSplit	no	yes
fileSplit	no	yes
;	no	no
try	no	no
{	no	no
fileSplit	no	yes
=	no	no
getFileSplitFromEvent	no	yes
(	no	no
diEvent	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
diEvent	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
FileSplit	no	yes
>	no	no
fsList	no	yes
=	no	no
pathFileSplitsMap	yes	yes
.	no	no
get	no	yes
(	no	no
Utilities	no	yes
.	no	no
getBucketFileNameFromPathSubString	no	yes
(	no	no
fileSplit	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fsList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
fsList	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
FileSplit	no	yes
>	no	no
(	no	no
new	no	no
PathComparatorForSplit	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pathFileSplitsMap	yes	yes
.	no	no
put	no	yes
(	no	no
Utilities	no	yes
.	no	no
getBucketFileNameFromPathSubString	no	yes
(	no	no
fileSplit	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
fsList	no	yes
)	no	no
;	no	no

FileSplit	no	yes
fileSplit	no	yes
;	no	no
try	no	no
{	no	no
fileSplit	no	yes
=	no	no
getFileSplitFromEvent	no	yes
(	no	no
diEvent	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
diEvent	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
FileSplit	no	yes
>	no	no
fsList	no	yes
=	no	no
pathFileSplitsMap	no	yes
.	no	no
get	no	yes
(	no	no
Utilities	no	yes
.	no	no
getBucketFileNameFromPathSubString	no	yes
(	no	no
fileSplit	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fsList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
fsList	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
FileSplit	no	yes
>	no	no
(	no	no
new	no	no
PathComparatorForSplit	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pathFileSplitsMap	no	yes
.	no	no
put	no	yes
(	no	no
Utilities	no	yes
.	no	no
getBucketFileNameFromPathSubString	no	yes
(	no	no
fileSplit	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
fsList	no	yes
)	no	no
;	no	no
}	no	no
fsList	no	yes
.	no	no
add	no	yes
(	no	no
fileSplit	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
inputName	no	yes
+	no	no
+	no	no
pathFileSplitsMap	no	yes
)	no	no
;	no	no
}	no	no
Multimap	no	yes
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
bucketToInitialSplitMap	yes	yes
=	no	no
getBucketSplitMapForPath	no	yes
(	no	no
inputName	no	yes
,	no	no
pathFileSplitsMap	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
int	no	no
totalResource	no	yes
=	no	no
context	no	yes
.	no	no
getTotalAvailableResource	no	yes
(	no	no
)	no	no
.	no	no
getMemory	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
processAllSideEventsSetParallelism	no	no
(	no	no
String	no	no
inputName	yes	no
,	no	no
Multimap	no	no
<	no	no
Integer	no	no
,	no	no
InputSplit	no	no
>	no	no
bucketToGroupedSplitMap	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

private	no	no
void	no	no
processAllSideEventsSetParallelism	no	no
(	no	no
String	no	no
inputName	no	yes
,	no	no
Multimap	no	no
<	no	no
Integer	no	no
,	no	no
InputSplit	no	no
>	no	no
bucketToGroupedSplitMap	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
inputName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputNameInputSpecMap	no	no
.	no	no
get	no	no
(	no	no
mainWorkName	yes	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no

ByteBuffer	no	yes
bs	no	yes
=	no	no
serializedSplit	no	yes
.	no	no
toByteString	no	yes
(	no	no
)	no	no
.	no	no
asReadOnlyByteBuffer	no	yes
(	no	no
)	no	no
;	no	no
bucketToSerializedSplitMap	no	yes
.	no	no
put	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
bs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Integer	no	yes
,	no	no
Collection	no	yes
<	no	no
ByteBuffer	no	yes
>>	no	no
entry	no	yes
:	no	no
bucketToSerializedSplitMap	no	yes
.	no	no
asMap	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
Integer	no	yes
>	no	no
destTasks	no	yes
=	no	no
bucketToTaskMap	no	yes
.	no	no
get	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
destTasks	no	yes
==	no	no
null	no	no
)	no	no
||	no	no
(	no	no
destTasks	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Integer	no	yes
task	no	yes
:	no	no
destTasks	no	yes
)	no	no
{	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
ByteBuffer	no	yes
buf	no	yes
:	no	no
entry	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
++	no	no
;	no	no
InputDataInformationEvent	no	yes
diEvent	no	yes
=	no	no
InputDataInformationEvent	no	yes
.	no	no
createWithSerializedPayload	no	yes
(	no	no
count	no	yes
,	no	no
buf	no	yes
)	no	no
;	no	no
diEvent	no	yes
.	no	no
setTargetIndex	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no
taskEvents	yes	yes
.	no	no
add	no	yes
(	no	no
diEvent	no	yes
)	no	no
;	no	no
}	no	no
numSplitsForTask	no	yes
[	no	no
task	no	yes
]	no	no
=	no	no
count	no	yes
;	no	no
}	no	no
}	no	no
inputNameInputSpecMap	no	yes
.	no	no
put	no	yes
(	no	no
inputName	yes	yes
,	no	no
InputSpecUpdate	no	yes
.	no	no
createPerTaskInputSpecUpdate	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
numSplitsForTask	no	yes
)	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
taskCount	no	yes
+	no	no
+	no	no
inputName	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
InputDataInformationEvent	no	yes
>	no	no
taskEvents	yes	yes
=	no	no
Lists	no	yes
.	no	no
newArrayListWithCapacity	no	yes
(	no	no
totalInputsCount	no	yes
)	no	no
;	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
InputSplit	no	no
inputSplit	no	yes
:	no	no
finalSplits	no	no
)	no	no
{	no	no
if	no	no
(	no	no
secondLevelGroupingDone	no	no
)	no	no
{	no	no
TezGroupedSplit	no	yes
tezGroupedSplit	no	yes
=	no	no
(	no	no
TezGroupedSplit	no	yes
)	no	no
inputSplit	no	yes
;	no	no
for	no	no
(	no	no
InputSplit	no	no
subSplit	no	yes
:	no	no
tezGroupedSplit	no	yes
.	no	no
getGroupedSplits	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
(	no	no
subSplit	no	yes
instanceof	no	no
TezGroupedSplit	no	yes
)	no	no
==	no	no
false	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
subSplit	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
MRSplitProto	no	yes
serializedSplit	no	yes
=	no	no
MRInputHelpers	no	yes
.	no	no
createSplitProto	no	yes
(	no	no
subSplit	no	yes
)	no	no
;	no	no
InputDataInformationEvent	no	yes
diEvent	no	yes
=	no	no
InputDataInformationEvent	no	yes
.	no	no
createWithSerializedPayload	no	yes
(	no	no
count	no	yes
,	no	no
serializedSplit	no	yes
.	no	no
toByteString	no	yes
(	no	no
)	no	no
.	no	no
asReadOnlyByteBuffer	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
diEvent	no	yes
.	no	no
setTargetIndex	no	yes
(	no	no
count	no	yes
)	no	no
;	no	no
taskEvents	yes	yes
.	no	no
add	no	yes
(	no	no
diEvent	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
MRSplitProto	no	yes
serializedSplit	no	yes
=	no	no
MRInputHelpers	no	yes
.	no	no
createSplitProto	no	yes
(	no	no
inputSplit	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
getCredentialsForFileSinks	no	no
(	no	no
BaseWork	no	no
baseWork	yes	yes
,	no	no
DAG	no	no
dag	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
URI	no	yes
>	no	no
fileSinkUris	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
URI	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Node	no	yes
>	no	no
topNodes	yes	yes
=	no	no
getTopNodes	no	yes
(	no	no
baseWork	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
getCredentialsForFileSinks	no	no
(	no	no
BaseWork	no	no
baseWork	yes	yes
,	no	no
DAG	no	no
dag	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
URI	no	yes
>	no	no
fileSinkUris	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
URI	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Node	no	yes
>	no	no
topNodes	no	yes
=	no	no
getTopNodes	no	yes
(	no	no
baseWork	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
baseWork	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
,	no	no
topNodes	no	yes
)	no	no
;	no	no
collectFileSinkUris	no	yes
(	no	no
topNodes	no	yes
,	no	no
fileSinkUris	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
URI	no	yes
fileSinkUri	yes	no
:	no	no
fileSinkUris	no	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
public	no	no
GroupInputEdge	no	no
createEdge	no	no
(	no	no
VertexGroup	no	no
group	yes	no
,	no	no
JobConf	no	no
vConf	no	no
,	no	no
Vertex	no	no
w	yes	no
,	no	no
TezEdgeProperty	no	no
edgeProp	no	no
,	no	no
BaseWork	no	no
work	no	no
,	no	no
TezWork	no	no
tezWork	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Class	no	yes
mergeInputClass	no	yes
;	no	no

private	no	no
LocalResource	no	no
createLocalResource	no	no
(	no	no
FileSystem	no	no
remoteFs	no	yes
,	no	no
Path	no	no
file	yes	yes
,	no	no
LocalResourceType	no	no
type	no	no
,	no	no
LocalResourceVisibility	no	no
visibility	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
final	no	no
FileStatus	no	yes
fstat	no	yes
=	no	no
remoteFs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
URL	no	yes
resourceURL	no	yes
=	no	no
ConverterUtils	no	yes
.	no	no
getYarnUrlFromPath	no	yes
(	no	no
file	yes	yes
)	no	no
;	no	no
long	no	no
resourceSize	no	yes
=	no	no
fstat	no	yes
.	no	no
getLen	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
resourceModificationTime	yes	yes
=	no	no
fstat	no	yes
.	no	no
getModificationTime	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
FileStatus	no	yes
getHiveJarDirectory	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
LoginException	no	no
{	no	no
FileStatus	no	yes
fstatus	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
hdfsDirPathStr	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_JAR_DIRECTORY	no	yes
,	no	no
(	no	no
String	no	yes
)	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hdfsDirPathStr	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

public	no	no
LocalResource	no	no
localizeResource	no	no
(	no	no
Path	no	no
src	no	yes
,	no	no
Path	no	no
dest	yes	yes
,	no	no
LocalResourceType	no	no
type	no	no
,	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileSystem	no	yes
destFS	no	yes
=	no	no
dest	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileSystem	no	yes
srcFs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
getLocal	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
src	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
checkPreExisting	no	no
(	no	no
srcFs	no	yes
,	no	no
src	no	yes
,	no	no
dest	yes	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
srcStr	yes	yes
=	no	no
src	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION	no	yes
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
return	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION	no	yes
)	no	no
;	no	no
}	no	no
float	no	no
tezHeapFraction	no	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_CONTAINER_MAX_JAVA_HEAP_FRACTION	no	yes
)	no	no
;	no	no
float	no	no
tezMinReserveFraction	no	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION_MIN	no	yes
)	no	no
;	no	no
float	no	no
tezMaxReserveFraction	no	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION_MAX	no	yes
)	no	no
;	no	no
Resource	no	yes
resource	no	yes
=	no	no
getContainerResource	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
containerSize	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
resource	no	yes
.	no	no
getMemory	no	yes
(	no	no
)	no	no
*	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
String	no	yes
javaOpts	no	yes
=	no	no
getContainerJavaOpts	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
xmx	no	yes
=	no	no
parseRightmostXmx	no	yes
(	no	no
javaOpts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
xmx	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
xmx	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
tezHeapFraction	no	yes
*	no	no
containerSize	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
actualMemToBeAllocated	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
tezMinReserveFraction	no	yes
*	no	no
xmx	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
actualMemToBeAllocated	no	yes
<	no	no
memoryRequested	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
actualMemToBeAllocated	no	yes
+	no	no
+	no	no
memoryRequested	no	yes
)	no	no
;	no	no
float	no	no
frac	yes	yes
=	no	no
(	no	no
float	no	no
)	no	no
memoryRequested	no	yes
/	no	no
xmx	no	yes
;	no	no

float	no	no
tezMinReserveFraction	no	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION_MIN	no	yes
)	no	no
;	no	no
float	no	no
tezMaxReserveFraction	no	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_TASK_SCALE_MEMORY_RESERVE_FRACTION_MAX	no	yes
)	no	no
;	no	no
Resource	no	yes
resource	no	yes
=	no	no
getContainerResource	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
containerSize	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
resource	no	yes
.	no	no
getMemory	no	yes
(	no	no
)	no	no
*	no	no
1024	no	no
*	no	no
1024	no	no
;	no	no
String	no	yes
javaOpts	no	yes
=	no	no
getContainerJavaOpts	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
xmx	no	yes
=	no	no
parseRightmostXmx	no	yes
(	no	no
javaOpts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
xmx	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
xmx	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
tezHeapFraction	no	yes
*	no	no
containerSize	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
actualMemToBeAllocated	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
tezMinReserveFraction	no	yes
*	no	no
xmx	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
actualMemToBeAllocated	no	yes
<	no	no
memoryRequested	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
actualMemToBeAllocated	no	yes
+	no	no
+	no	no
memoryRequested	no	yes
)	no	no
;	no	no
float	no	no
frac	yes	yes
=	no	no
(	no	no
float	no	no
)	no	no
memoryRequested	no	yes
/	no	no
xmx	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
frac	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
frac	yes	yes
<=	no	no
tezMinReserveFraction	no	yes
)	no	no
{	no	no
return	no	no
tezMinReserveFraction	no	yes
;	no	no

private	no	no
void	no	no
prunePartitions	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
int	no	no
expectedEvents	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
List	no	no
<	no	no
SourceInfo	no	no
>>	no	no
entry	no	yes
:	no	no
this	no	no
.	no	no
sourceInfoMap	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
source	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SourceInfo	no	no
si	yes	no
:	no	no
entry	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
int	no	no
taskNum	yes	yes
=	no	no
context	no	yes
.	no	no
getVertexNumTasks	no	yes
(	no	no
source	yes	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
protected	no	no
void	no	no
prunePartitionSingleSource	no	no
(	no	no
String	no	no
source	yes	no
,	no	no
SourceInfo	no	no
si	yes	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
si	yes	no
.	no	no
skipPruning	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no

while	no	no
(	no	no
it	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
it	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
PartitionDesc	no	yes
desc	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
spec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
spec	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
partValueString	no	yes
=	no	no
spec	no	yes
.	no	no
get	no	yes
(	no	no
columnName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partValueString	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
}	no	no
Object	no	yes
partValue	yes	yes
=	no	no
converter	no	yes
.	no	no
convert	no	yes
(	no	no
partValueString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	yes	yes
+	no	no
+	no	no
partValueString	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
row	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
partValue	yes	yes
;	no	no
partValue	yes	yes
=	no	no
eval	no	yes
.	no	no
evaluate	no	yes
(	no	no
row	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

PartitionDesc	no	yes
desc	no	yes
=	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
p	yes	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
spec	no	yes
=	no	no
desc	no	yes
.	no	no
getPartSpec	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
spec	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
partValueString	no	yes
=	no	no
spec	no	yes
.	no	no
get	no	yes
(	no	no
columnName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partValueString	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
}	no	no
Object	no	yes
partValue	no	yes
=	no	no
converter	no	yes
.	no	no
convert	no	yes
(	no	no
partValueString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	no	yes
+	no	no
+	no	no
partValueString	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
row	no	yes
[	no	no
0	no	no
]	no	no
=	no	no
partValue	no	yes
;	no	no
partValue	no	yes
=	no	no
eval	no	yes
.	no	no
evaluate	no	yes
(	no	no
row	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partValue	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
values	no	no
.	no	no
contains	no	no
(	no	no
partValue	no	yes
)	no	no
&&	no	no
(	no	no
!	no	no
mustKeepOnePartition	no	no
||	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
VisibleForTesting	no	no
protected	no	no
String	no	yes
processPayload	no	no
(	no	no
ByteBuffer	no	no
payload	no	yes
,	no	no
String	no	yes
sourceName	yes	no
)	no	no
throws	no	no
SerDeException	no	no
,	no	no
IOException	no	no
{	no	no
DataInputStream	no	yes
in	no	yes
=	no	no
new	no	no
DataInputStream	no	yes
(	no	no
new	no	no
ByteBufferBackedInputStream	no	yes
(	no	no
payload	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
columnName	no	yes
=	no	no
in	no	yes
.	no	no
readUTF	no	yes
(	no	no
)	no	no
;	no	no

info	no	yes
=	no	no
si	no	yes
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
columnName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
skipPruning	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no
boolean	no	no
skip	no	yes
=	no	no
in	no	yes
.	no	no
readBoolean	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
skip	no	yes
)	no	no
{	no	no
info	no	yes
.	no	no
skipPruning	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
while	no	no
(	no	no
payload	no	no
.	no	no
hasRemaining	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writable	no	yes
.	no	no
readFields	no	yes
(	no	no
in	no	yes
)	no	no
;	no	no
Object	no	yes
row	no	yes
=	no	no
info	no	yes
.	no	no
deserializer	no	yes
.	no	no
deserialize	no	yes
(	no	no
writable	no	yes
)	no	no
;	no	no
Object	no	yes
value	yes	yes
=	no	no
info	no	yes
.	no	no
soi	no	yes
.	no	no
getStructFieldData	no	yes
(	no	no
row	no	yes
,	no	no
info	no	yes
.	no	no
field	no	yes
)	no	no
;	no	no
value	yes	yes
=	no	no
ObjectInspectorUtils	no	yes
.	no	no
copyToStandardObject	no	yes
(	no	no
value	yes	yes
,	no	no
info	no	yes
.	no	no
fieldInspector	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
processVertex	no	no
(	no	no
String	no	no
name	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
init	no	no
(	no	no
RegistryConf	no	no
conf	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
RegistryConfTez	no	yes
rct	no	yes
=	no	no
(	no	no
RegistryConfTez	no	yes
)	no	no
conf	no	yes
;	no	no
for	no	no
(	no	no
String	no	no
inputSourceName	yes	no
:	no	no
rct	no	yes
.	no	no
baseWork	no	no
.	no	no
getInputSourceToRuntimeValuesInfo	no	no
(	no	no
)	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
updateSessionAsync	no	no
(	no	no
final	no	no
WmTezSession	no	no
session	yes	yes
,	no	no
final	no	no
Integer	no	yes
intAlloc	yes	yes
)	no	no
{	no	no
Integer	no	yes
valueToSend	no	yes
=	no	no
session	yes	yes
.	no	no
setSendingGuaranteed	no	yes
(	no	no
intAlloc	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
valueToSend	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
UpdateQueryRequestProto	no	yes
request	no	yes
=	no	no
UpdateQueryRequestProto	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
setGuaranteedTaskCount	no	yes
(	no	no
valueToSend	no	yes
.	no	no
intValue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no

biggest	no	yes
=	no	no
pos	no	yes
;	no	no
}	no	no
}	no	no
tableMemorySizes	no	yes
=	no	no
divideHybridHashTableMemory	no	yes
(	no	no
mapJoinTables	no	yes
,	no	no
desc	no	yes
,	no	no
totalSize	no	yes
,	no	no
totalMapJoinMemory	no	yes
)	no	no
;	no	no
long	no	no
memory	no	yes
=	no	no
tableMemorySizes	no	yes
.	no	no
get	no	yes
(	no	no
biggest	no	yes
)	no	no
;	no	no
int	no	no
numPartitions	no	yes
=	no	no
0	no	no
;	no	no
try	no	no
{	no	no
numPartitions	no	yes
=	no	no
HybridHashTableContainer	no	yes
.	no	no
calcNumPartitions	no	yes
(	no	no
memory	no	yes
,	no	no
maxSize	no	yes
,	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS	no	yes
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEHYBRIDGRACEHASHJOINMINWBSIZE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
nwayConf	no	yes
.	no	no
setNumberOfPartitions	no	yes
(	no	no
numPartitions	no	yes
)	no	no
;	no	no
}	no	no
MemoryMonitorInfo	no	yes
memoryMonitorInfo	yes	yes
=	no	no
desc	no	yes
.	no	no
getMemoryMonitorInfo	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
doMemCheck	no	yes
=	no	no
false	no	no
;	no	no
long	no	no
effectiveThreshold	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
memoryMonitorInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
effectiveThreshold	no	yes
=	no	no
memoryMonitorInfo	yes	yes
.	no	no
getEffectiveThreshold	no	yes
(	no	no
desc	no	yes
.	no	no
getMaxMemoryAvailable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
LlapDaemonInfo	no	no
.	no	no
INSTANCE	no	no
.	no	no
isLlap	no	no
(	no	no
)	no	no
)	no	no
{	no	no

tableMemorySizes	no	yes
=	no	no
divideHybridHashTableMemory	no	yes
(	no	no
mapJoinTables	no	yes
,	no	no
desc	no	yes
,	no	no
totalSize	no	yes
,	no	no
totalMapJoinMemory	no	yes
)	no	no
;	no	no
long	no	no
memory	no	yes
=	no	no
tableMemorySizes	no	yes
.	no	no
get	no	yes
(	no	no
biggest	no	yes
)	no	no
;	no	no
int	no	no
numPartitions	no	yes
=	no	no
0	no	no
;	no	no
try	no	no
{	no	no
numPartitions	no	yes
=	no	no
HybridHashTableContainer	no	yes
.	no	no
calcNumPartitions	no	yes
(	no	no
memory	no	yes
,	no	no
maxSize	no	yes
,	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS	no	yes
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hconf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEHYBRIDGRACEHASHJOINMINWBSIZE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
nwayConf	no	yes
.	no	no
setNumberOfPartitions	no	yes
(	no	no
numPartitions	no	yes
)	no	no
;	no	no
}	no	no
MemoryMonitorInfo	no	yes
memoryMonitorInfo	yes	yes
=	no	no
desc	no	yes
.	no	no
getMemoryMonitorInfo	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
doMemCheck	no	yes
=	no	no
false	no	no
;	no	no
long	no	no
effectiveThreshold	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
memoryMonitorInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
effectiveThreshold	no	yes
=	no	no
memoryMonitorInfo	yes	yes
.	no	no
getEffectiveThreshold	no	yes
(	no	no
desc	no	yes
.	no	no
getMaxMemoryAvailable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
LlapDaemonInfo	no	no
.	no	no
INSTANCE	no	no
.	no	no
isLlap	no	no
(	no	no
)	no	no
)	no	no
{	no	no
memoryMonitorInfo	yes	yes
.	no	no
setLlap	no	yes
(	no	no
false	no	no
)	no	no
;	no	no

}	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
mapJoinTables	no	no
.	no	no
length	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
desc	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
long	no	no
numEntries	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
inputName	no	yes
=	no	no
parentToInput	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
LogicalInput	no	yes
input	no	yes
=	no	no
tezContext	no	yes
.	no	no
getInput	no	yes
(	no	no
inputName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
input	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
tezContext	no	yes
.	no	no
getTezProcessorContext	no	yes
(	no	no
)	no	no
.	no	no
waitForAnyInputReady	no	yes
(	no	no
Collections	no	yes
.	no	no
<	no	no
Input	no	yes
>	no	no
singletonList	no	yes
(	no	no
input	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
KeyValueReader	no	yes
kvReader	no	yes
=	no	no
(	no	no
KeyValueReader	no	yes
)	no	no
input	no	yes
.	no	no
getReader	no	yes
(	no	no
)	no	no
;	no	no
MapJoinObjectSerDeContext	no	yes
keyCtx	no	yes
=	no	no
mapJoinTableSerdes	no	yes
[	no	no
pos	no	yes
]	no	no
.	no	no
getKeyContext	no	yes
(	no	no
)	no	no
,	no	no
valCtx	no	yes
=	no	no
mapJoinTableSerdes	no	yes
[	no	no
pos	no	yes
]	no	no
.	no	no
getValueContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
useOptimizedTables	no	no
)	no	no
{	no	no

MapJoinObjectSerDeContext	no	yes
keyCtx	no	yes
=	no	no
mapJoinTableSerdes	no	yes
[	no	no
pos	yes	yes
]	no	no
.	no	no
getKeyContext	no	yes
(	no	no
)	no	no
,	no	no
valCtx	no	yes
=	no	no
mapJoinTableSerdes	no	yes
[	no	no
pos	yes	yes
]	no	no
.	no	no
getValueContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
useOptimizedTables	no	yes
)	no	no
{	no	no
ObjectInspector	no	yes
keyOi	no	yes
=	no	no
keyCtx	no	yes
.	no	no
getSerDe	no	yes
(	no	no
)	no	no
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
MapJoinBytesTableContainer	no	no
.	no	no
isSupportedKey	no	no
(	no	no
keyOi	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isFirstKey	no	yes
)	no	no
{	no	no
useOptimizedTables	no	yes
=	no	no
false	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
describeOi	no	yes
(	no	no
+	no	no
,	no	no
keyOi	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
describeOi	no	yes
(	no	no
,	no	no
keyOi	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
isFirstKey	no	yes
=	no	no
false	no	no
;	no	no
Long	no	yes
keyCountObj	no	yes
=	no	no
parentKeyCounts	no	yes
.	no	no
get	no	yes
(	no	no
pos	yes	yes
)	no	no
;	no	no
long	no	no
estKeyCount	yes	yes
=	no	no
(	no	no
keyCountObj	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
keyCountObj	no	yes
;	no	no
long	no	no
inputRecords	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
try	no	no
{	no	no
inputRecords	no	yes
=	no	no
(	no	no
(	no	no
AbstractLogicalInput	no	yes
)	no	no
input	no	yes
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getCounters	no	yes
(	no	no
)	no	no
.	no	no
findCounter	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
keyCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
estKeyCount	no	yes
,	no	no
inputRecords	no	yes
)	no	no
;	no	no
long	no	no
memory	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
useHybridGraceHashJoin	no	no
)	no	no
{	no	no
if	no	no
(	no	no
mapJoinTables	no	no
.	no	no
length	no	no
>	no	no
2	no	no
)	no	no
{	no	no
memory	no	yes
=	no	no
tableMemorySizes	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
memory	no	yes
=	no	no
totalMapJoinMemory	no	yes
;	no	no
}	no	no
}	no	no
MapJoinTableContainer	no	yes
tableContainer	yes	yes
;	no	no
if	no	no
(	no	no
useOptimizedTables	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
useHybridGraceHashJoin	no	no
||	no	no
isCrossProduct	no	no
)	no	no
{	no	no
tableContainer	yes	yes
=	no	no
new	no	no
MapJoinBytesTableContainer	no	yes
(	no	no
hconf	no	yes
,	no	no
valCtx	no	yes
,	no	no
keyCount	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
tableContainer	yes	yes
=	no	no
new	no	no
HybridHashTableContainer	no	yes
(	no	no
hconf	no	yes
,	no	no
keyCount	no	yes
,	no	no
memory	no	yes
,	no	no
desc	no	yes
.	no	no
getParentDataSizes	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
,	no	no
nwayConf	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
groupingEnabled	no	no
)	no	no
{	no	no
InputFormat	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
inputFormat	no	yes
=	no	no
(	no	no
InputFormat	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
)	no	no
ReflectionUtils	no	yes
.	no	no
newInstance	no	yes
(	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
realInputFormatName	no	yes
)	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
int	no	no
totalResource	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
taskResource	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
availableSlots	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
getContext	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
availableSlots	no	yes
=	no	no
1	no	no
;	no	no
}	no	no
if	no	no
(	no	no
getContext	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
totalResource	no	yes
=	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getTotalAvailableResource	no	yes
(	no	no
)	no	no
.	no	no
getMemory	no	yes
(	no	no
)	no	no
;	no	no
taskResource	no	yes
=	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getVertexTaskResource	no	yes
(	no	no
)	no	no
.	no	no
getMemory	no	yes
(	no	no
)	no	no
;	no	no
availableSlots	no	yes
=	no	no
totalResource	no	yes
/	no	no
taskResource	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
HiveConf	no	no
.	no	no
getLongVar	no	no
(	no	no
conf	no	yes
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
MAPREDMINSPLITSIZE	no	no
,	no	no
1	no	no
)	no	no
<=	no	no
1	no	no
)	no	no
{	no	no
final	no	no
long	no	no
blockSize	no	yes
=	no	no
conf	no	yes
.	no	no
getLongBytes	no	yes
(	no	no
DFSConfigKeys	no	yes
.	no	no
DFS_BLOCK_SIZE_KEY	no	yes
,	no	no
DFSConfigKeys	no	yes
.	no	no
DFS_BLOCK_SIZE_DEFAULT	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
minGrouping	no	yes
=	no	no
conf	no	yes
.	no	no
getLong	no	yes
(	no	no
TezMapReduceSplitsGrouper	no	yes
.	no	no
TEZ_GROUPING_SPLIT_MIN_SIZE	no	yes
,	no	no
TezMapReduceSplitsGrouper	no	yes
.	no	no
TEZ_GROUPING_SPLIT_MIN_SIZE_DEFAULT	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
preferredSplitSize	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
blockSize	no	yes
/	no	no
2	no	no
,	no	no
minGrouping	no	yes
)	no	no
;	no	no

FileSystem	no	yes
fs	no	yes
=	no	no
paths	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
jobConf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
fileStatuses	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
paths	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fileStatuses	no	yes
.	no	no
length	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
splits	yes	yes
=	no	no
new	no	no
InputSplit	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
paths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
fileStatuses	no	yes
.	no	no
length	no	yes
==	no	no
1	no	no
&&	no	no
mapWork	no	yes
.	no	no
getAliasToPartnInfo	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
1	no	no
,	no	no
+	no	no
+	no	no
paths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
fileStatuses	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
splits	yes	yes
=	no	no
new	no	no
InputSplit	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
fileStatuses	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
BlockLocation	no	yes
[	no	no
]	no	no
locations	no	yes
=	no	no
fs	no	yes
.	no	no
getFileBlockLocations	no	yes
(	no	no
fileStatus	no	yes
,	no	no
0	no	no
,	no	no
fileStatus	no	yes
.	no	no
getLen	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
hostsSet	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
BlockLocation	no	yes
location	no	yes
:	no	no
locations	no	yes
)	no	no
{	no	no
hostsSet	no	yes
.	no	no
addAll	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
location	no	yes
.	no	no
getHosts	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
hosts	no	yes
=	no	no
hostsSet	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
FileSplit	no	yes
fileSplit	no	yes
=	no	no
new	no	no
FileSplit	no	yes
(	no	no
fileStatus	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
,	no	no
fileStatus	no	yes
.	no	no
getLen	no	yes
(	no	no
)	no	no
,	no	no
hosts	no	yes
)	no	no
;	no	no
String	no	yes
alias	no	yes
=	no	no
mapWork	no	yes
.	no	no
getAliases	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

groupName	no	yes
=	no	no
HiveInputCounters	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
vertexName	no	yes
=	no	no
jobConf	no	yes
.	no	no
get	no	yes
(	no	no
Operator	no	yes
.	no	no
CONTEXT_NAME_KEY	no	yes
,	no	no
)	no	no
;	no	no
counterName	no	yes
=	no	no
Utilities	no	yes
.	no	no
getVertexCounterName	no	yes
(	no	no
HiveInputCounters	no	yes
.	no	no
RAW_INPUT_SPLITS	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
vertexName	no	yes
)	no	no
;	no	no
tezCounters	yes	yes
.	no	no
findCounter	no	yes
(	no	no
groupName	no	yes
,	no	no
counterName	no	yes
)	no	no
.	no	no
increment	no	yes
(	no	no
splits	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
paths	no	yes
=	no	no
Utilities	no	yes
.	no	no
getInputPathsTez	no	yes
(	no	no
jobConf	no	yes
,	no	no
work	no	yes
)	no	no
;	no	no
counterName	no	yes
=	no	no
Utilities	no	yes
.	no	no
getVertexCounterName	no	yes
(	no	no
HiveInputCounters	no	yes
.	no	no
INPUT_DIRECTORIES	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
,	no	no
vertexName	no	yes
)	no	no
;	no	no
tezCounters	yes	yes
.	no	no
findCounter	no	yes
(	no	no
groupName	no	yes
,	no	no
counterName	no	yes
)	no	no
.	no	no
increment	no	yes
(	no	no
paths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
files	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
InputSplit	no	no
inputSplit	no	yes
:	no	no
splits	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
inputSplit	no	yes
instanceof	no	no
FileSplit	no	yes
)	no	no
{	no	no
final	no	no
FileSplit	no	yes
fileSplit	no	yes
=	no	no
(	no	no
FileSplit	no	yes
)	no	no
inputSplit	no	yes
;	no	no
final	no	no
Path	no	yes
path	no	yes
=	no	no
fileSplit	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
fileStr	no	yes
=	no	no
path	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
files	no	yes
.	no	no
contains	no	no
(	no	no
fileStr	no	yes
)	no	no
)	no	no
{	no	no
files	no	yes
.	no	no
add	no	yes
(	no	no
fileStr	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
String	no	no
[	no	no
]	no	no
getLocations	no	no
(	no	no
InputSplit	no	no
split	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
split	yes	no
instanceof	no	no
FileSplit	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
static	no	no
int	no	no
determineLocation	no	no
(	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
locations	no	yes
,	no	no
String	no	yes
path	no	yes
,	no	no
long	no	no
start	no	yes
,	no	no
String	no	yes
desc	yes	no
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
bytes	no	yes
=	no	no
getHashInputForSplit	no	yes
(	no	no
path	no	yes
,	no	no
start	no	yes
)	no	no
;	no	no
long	no	no
hash1	no	yes
=	no	no
hash1	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
int	no	no
index	yes	yes
=	no	no
Hashing	no	yes
.	no	no
consistentHash	no	yes
(	no	no
hash1	no	yes
,	no	no
locations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
location	yes	yes
=	no	no
locations	no	yes
.	no	no
get	no	yes
(	no	no
index	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
static	no	no
int	no	no
determineLocation	no	no
(	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
locations	no	yes
,	no	no
String	no	yes
path	no	yes
,	no	no
long	no	no
start	no	yes
,	no	no
String	no	yes
desc	yes	yes
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
bytes	no	yes
=	no	no
getHashInputForSplit	no	yes
(	no	no
path	no	yes
,	no	no
start	no	yes
)	no	no
;	no	no
long	no	no
hash1	no	yes
=	no	no
hash1	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
int	no	no
index	yes	yes
=	no	no
Hashing	no	yes
.	no	no
consistentHash	no	yes
(	no	no
hash1	no	yes
,	no	no
locations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
location	yes	yes
=	no	no
locations	no	yes
.	no	no
get	no	yes
(	no	no
index	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
desc	yes	yes
+	no	no
+	no	no
index	yes	yes
+	no	no
+	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
int	no	no
iter	no	yes
=	no	no
1	no	no
;	no	no
long	no	no
hash2	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
location	yes	yes
==	no	no
null	no	no
&&	no	no
iter	no	yes
<	no	no
locations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
*	no	no
2	no	no
)	no	no
{	no	no
if	no	no
(	no	no
iter	no	yes
==	no	no
1	no	no
)	no	no
{	no	no
hash2	no	yes
=	no	no
hash2	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
}	no	no
index	yes	yes
=	no	no
Hashing	no	yes
.	no	no
consistentHash	no	yes
(	no	no
hash1	no	yes
+	no	no
iter	no	yes
*	no	no
hash2	no	yes
,	no	no
locations	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
location	yes	yes
=	no	no
locations	no	yes
.	no	no
get	no	yes
(	no	no
index	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
final	no	no
void	no	no
addRowAndMaybeCheckAbort	no	no
(	no	no
)	no	no
throws	no	no
InterruptedException	no	no
{	no	no
if	no	no
(	no	no
nRows	no	yes
++	no	no
<	no	no
checkInterruptionAfterRows	yes	yes
)	no	no
return	no	no
;	no	no
long	no	no
time	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
elapsedNs	no	yes
=	no	no
(	no	no
time	no	yes
-	no	no
lastInterruptCheckNs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
elapsedNs	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
double	no	no
diff	no	yes
=	no	no
elapsedNs	no	yes
==	no	no
0	no	no
?	no	no
10	no	no
:	no	no
TARGET_INTERRUPT_CHECK_TIME_NS	no	yes
/	no	no
elapsedNs	no	yes
;	no	no
int	no	no
newRows	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
CHECK_INTERRUPTION_AFTER_ROWS_MAX	no	yes
,	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
CHECK_INTERRUPTION_AFTER_ROWS_MIN	no	yes
,	no	no
(	no	no
int	no	no
)	no	no
(	no	no
diff	no	yes
*	no	no
checkInterruptionAfterRows	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
checkInterruptionAfterRows	yes	yes
!=	no	no
newRows	yes	yes
&&	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getAction	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
KILL_QUERY	no	no
:	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
killFuture	no	yes
=	no	no
wm	no	yes
.	no	no
applyKillSessionAsync	no	no
(	no	no
wmTezSession	yes	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getViolationMsg	no	no
(	no	no
)	no	no
)	no	no
;	no	no
killFutures	no	yes
.	no	no
put	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
killFuture	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MOVE_TO_POOL	no	no
:	no	no
String	no	no
destPoolName	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getAction	no	no
(	no	no
)	no	no
.	no	no
getPoolName	no	no
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
moveFuture	no	yes
=	no	no
wm	no	yes
.	no	no
applyMoveSessionAsync	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
destPoolName	no	yes
)	no	no
;	no	no
moveFutures	no	yes
.	no	no
put	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
moveFuture	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
RuntimeException	no	no
(	no	no
+	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
moveFutures	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no

case	no	no
KILL_QUERY	no	no
:	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
killFuture	no	yes
=	no	no
wm	no	yes
.	no	no
applyKillSessionAsync	no	no
(	no	no
wmTezSession	yes	yes
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getViolationMsg	no	no
(	no	no
)	no	no
)	no	no
;	no	no
killFutures	no	yes
.	no	no
put	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
killFuture	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MOVE_TO_POOL	no	no
:	no	no
String	no	no
destPoolName	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getAction	no	no
(	no	no
)	no	no
.	no	no
getPoolName	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
moveFuture	no	yes
=	no	no
wm	no	yes
.	no	no
applyMoveSessionAsync	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
destPoolName	no	yes
)	no	no
;	no	no
moveFutures	no	yes
.	no	no
put	no	yes
(	no	no
wmTezSession	yes	yes
,	no	no
moveFuture	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
RuntimeException	no	no
(	no	no
+	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
moveFutures	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getPoolName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	no
)	no	no
{	no	no

break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
RuntimeException	no	no
(	no	no
+	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
moveFutures	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getPoolName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
killFutures	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
moveFutures	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getPoolName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
WmTezSession	no	yes
,	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>>	no	no
entry	no	yes
:	no	no
killFutures	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WmTezSession	no	yes
wmTezSession	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
future	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
wmTezSession	yes	yes
.	no	no
getSessionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
retrieve	no	no
(	no	no
String	no	no
key	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
T	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
&&	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
retrieve	no	no
(	no	no
String	no	no
key	yes	yes
,	no	no
Callable	no	no
<	no	no
T	no	yes
>	no	no
fn	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
T	no	yes
value	no	yes
=	no	no
null	no	no
;	no	no
ReentrantLock	no	yes
objectLock	no	yes
=	no	no
null	no	no
;	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
return	no	no
value	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
locks	no	yes
.	no	no
containsKey	no	no
(	no	no
key	yes	yes
)	no	no
)	no	no
{	no	no
objectLock	no	yes
=	no	no
locks	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
objectLock	no	yes
=	no	no
new	no	no
ReentrantLock	no	yes
(	no	no
)	no	no
;	no	no
locks	no	yes
.	no	no
put	no	yes
(	no	no
key	yes	yes
,	no	no
objectLock	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
lock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
objectLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

finally	no	no
{	no	no
lock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
objectLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
lock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
key	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
value	no	yes
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
lock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
fn	no	yes
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
remove	no	no
(	no	no
String	no	no
key	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
setLlapOfFragmentId	no	no
(	no	no
final	no	no
ProcessorContext	no	no
context	no	yes
)	no	no
{	no	no
String	no	yes
attemptId	yes	yes
=	no	no
Converters	no	yes
.	no	no
createTaskAttemptId	no	yes
(	no	no
context	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
mapWork	no	no
.	no	no
getVectorMode	no	no
(	no	no
)	no	no
)	no	no
{	no	no
mapOp	no	yes
=	no	no
new	no	no
VectorMapOperator	no	yes
(	no	no
runtimeCtx	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
mapOp	no	yes
=	no	no
new	no	no
MapOperator	no	yes
(	no	no
runtimeCtx	no	yes
)	no	no
;	no	no
}	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
mapOp	no	yes
.	no	no
clearConnectedOperators	no	yes
(	no	no
)	no	no
;	no	no
mapOp	no	yes
.	no	no
setExecContext	no	yes
(	no	no
execContext	no	yes
)	no	no
;	no	no
boolean	no	no
fromCache	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
mergeWorkList	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
AbstractMapOperator	no	yes
mergeMapOp	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
BaseWork	no	no
mergeWork	no	yes
:	no	no
mergeWorkList	no	no
)	no	no
{	no	no
MapWork	no	yes
mergeMapWork	yes	yes
=	no	no
(	no	no
MapWork	no	yes
)	no	no
mergeWork	no	yes
;	no	no
if	no	no
(	no	no
mergeMapWork	yes	yes
.	no	no
getVectorMode	no	no
(	no	no
)	no	no
)	no	no
{	no	no
mergeMapOp	no	yes
=	no	no
new	no	no
VectorMapOperator	no	yes
(	no	no
runtimeCtx	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

sources	no	yes
=	no	no
new	no	no
MapRecordSource	no	yes
[	no	no
size	no	yes
]	no	no
;	no	no
position	no	yes
=	no	no
mapOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTag	no	yes
(	no	no
)	no	no
;	no	no
sources	no	yes
[	no	no
position	no	yes
]	no	no
=	no	no
new	no	no
MapRecordSource	no	yes
(	no	no
)	no	no
;	no	no
KeyValueReader	no	yes
reader	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
mainWorkMultiMRInput	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
reader	no	yes
=	no	no
getKeyValueReader	no	yes
(	no	no
mainWorkMultiMRInput	no	yes
.	no	no
getKeyValueReaders	no	yes
(	no	no
)	no	no
,	no	no
mapOp	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
reader	no	yes
=	no	no
legacyMRInput	no	yes
.	no	no
getReader	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sources	no	yes
[	no	no
position	no	yes
]	no	no
.	no	no
init	no	yes
(	no	no
jconf	no	yes
,	no	no
mapOp	no	yes
,	no	no
reader	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
AbstractMapOperator	no	no
mapOp	no	yes
:	no	no
mergeMapOpList	no	no
)	no	no
{	no	no
int	no	no
tag	no	yes
=	no	no
mapOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTag	no	yes
(	no	no
)	no	no
;	no	no
sources	no	yes
[	no	no
tag	no	yes
]	no	no
=	no	no
new	no	no
MapRecordSource	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
inputName	yes	yes
=	no	no
mapOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
MultiMRInput	no	yes
multiMRInput	no	yes
=	no	no
multiMRInputMap	no	yes
.	no	no
get	no	yes
(	no	no
inputName	yes	yes
)	no	no
;	no	no
Collection	no	yes
<	no	no
KeyValueReader	no	yes
>	no	no
kvReaders	yes	yes
=	no	no
multiMRInput	no	yes
.	no	no
getKeyValueReaders	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
abort	no	yes
(	no	no
)	no	no
{	no	no
super	no	no
.	no	no
abort	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
mapOp	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
MRInputLegacy	no	no
getMRInput	no	no
(	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
LogicalInput	no	no
>	no	no
inputs	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
release	no	no
(	no	no
String	no	no
key	yes	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
retrieve	no	no
(	no	no
String	no	no
key	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
T	no	yes
value	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
value	yes	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
retrieve	no	no
(	no	no
String	no	no
key	yes	yes
,	no	no
Callable	no	no
<	no	no
T	no	yes
>	no	no
fn	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
T	no	yes
value	no	yes
;	no	no
try	no	no
{	no	no
value	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
registry	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
value	no	yes
=	no	no
fn	no	yes
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
remove	no	no
(	no	no
String	no	no
key	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
ThreadFactory	no	yes
threadFactory	no	yes
=	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
ScheduledExecutorService	no	yes
validatorExecutorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newScheduledThreadPool	no	yes
(	no	no
sessionTriggerProviders	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
threadFactory	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
SessionTriggerProvider	no	no
>	no	no
entry	no	yes
:	no	no
sessionTriggerProviders	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
poolName	yes	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
poolValidators	no	no
.	no	no
containsKey	no	no
(	no	no
poolName	yes	yes
)	no	no
)	no	no
{	no	no

super	no	no
.	no	no
init	no	yes
(	no	no
mrReporter	no	yes
,	no	no
inputs	no	yes
,	no	no
outputs	no	yes
)	no	no
;	no	no
MapredContext	no	yes
.	no	no
init	no	yes
(	no	no
false	no	no
,	no	no
new	no	no
JobConf	no	yes
(	no	no
jconf	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
LogicalInput	no	yes
>	no	no
shuffleInputs	no	yes
=	no	no
getShuffleInputs	no	yes
(	no	no
inputs	no	yes
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
shuffleInputs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
processorContext	no	yes
.	no	no
waitForAllInputsReady	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
Input	no	yes
>	no	no
(	no	no
shuffleInputs	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
connectOps	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
ReduceWork	no	yes
redWork	no	yes
=	no	no
reduceWork	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
reduceWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HashTableDummyOperator	no	yes
>	no	no
workOps	no	yes
=	no	no
reduceWork	no	yes
.	no	no
getDummyOps	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
HashTableDummyOperator	no	yes
>	no	no
dummyOps	no	yes
=	no	no
workOps	no	yes
==	no	no
null	no	no
?	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
:	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
workOps	no	yes
)	no	no
;	no	no
tagToReducerMap	no	yes
.	no	no
put	no	yes
(	no	no
redWork	no	yes
.	no	no
getTag	no	yes
(	no	no
)	no	no
,	no	no
redWork	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
mergeWorkList	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
BaseWork	no	no
mergeWork	yes	no
:	no	no
mergeWorkList	no	no
)	no	no
{	no	no

reducer	no	yes
=	no	no
mergeReduceWork	no	yes
.	no	no
getReducer	no	yes
(	no	no
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
DummyStoreOperator	no	yes
dummyStoreOp	no	yes
=	no	no
getJoinParentOp	no	yes
(	no	no
reducer	no	yes
)	no	no
;	no	no
connectOps	no	yes
.	no	no
put	no	yes
(	no	no
mergeReduceWork	no	yes
.	no	no
getTag	no	yes
(	no	no
)	no	no
,	no	no
dummyStoreOp	no	yes
)	no	no
;	no	no
tagToReducerMap	no	yes
.	no	no
put	no	yes
(	no	no
mergeReduceWork	no	yes
.	no	no
getTag	no	yes
(	no	no
)	no	no
,	no	no
mergeReduceWork	no	yes
)	no	no
;	no	no
}	no	no
(	no	no
(	no	no
TezContext	no	yes
)	no	no
MapredContext	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setDummyOpsMap	no	yes
(	no	no
connectOps	no	yes
)	no	no
;	no	no
}	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
bigTablePosition	no	yes
=	no	no
(	no	no
byte	no	no
)	no	no
reduceWork	no	yes
.	no	no
getTag	no	yes
(	no	no
)	no	no
;	no	no
ObjectInspector	no	yes
[	no	no
]	no	no
mainWorkOIs	no	yes
=	no	no
null	no	no
;	no	no
(	no	no
(	no	no
TezContext	no	yes
)	no	no
MapredContext	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setInputs	no	yes
(	no	no
inputs	no	yes
)	no	no
;	no	no
(	no	no
(	no	no
TezContext	no	yes
)	no	no
MapredContext	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setTezProcessorContext	no	yes
(	no	no
processorContext	no	yes
)	no	no
;	no	no
int	no	no
numTags	no	yes
=	no	no
reduceWork	no	yes
.	no	no
getTagToValueDesc	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
reducer	no	yes
=	no	no
reduceWork	no	yes
.	no	no
getReducer	no	yes
(	no	no
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
memoryAvailableToTask	yes	yes
=	no	no
processorContext	no	yes
.	no	no
getTotalMemoryAvailableToTask	no	yes
(	no	no
)	no	no
;	no	no

mainWorkOIs	no	yes
=	no	no
new	no	no
ObjectInspector	no	yes
[	no	no
numTags	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
:	no	no
tagToReducerMap	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
redWork	no	yes
=	no	no
tagToReducerMap	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
reducer	yes	yes
=	no	no
redWork	no	yes
.	no	no
getReducer	no	yes
(	no	no
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
initializeSourceForTag	no	yes
(	no	no
redWork	no	yes
,	no	no
i	no	yes
,	no	no
mainWorkOIs	no	yes
,	no	no
sources	no	yes
,	no	no
redWork	no	yes
.	no	no
getTagToValueDesc	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
redWork	no	yes
.	no	no
getTagToInput	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
reducer	yes	yes
.	no	no
initializeLocalWork	no	yes
(	no	no
jconf	no	yes
)	no	no
;	no	no
}	no	no
reducer	yes	yes
=	no	no
reduceWork	no	yes
.	no	no
getReducer	no	yes
(	no	no
)	no	no
;	no	no
checkAbortCondition	no	yes
(	no	no
)	no	no
;	no	no
(	no	no
(	no	no
TezContext	no	yes
)	no	no
MapredContext	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
setRecordSources	no	yes
(	no	no
sources	no	yes
)	no	no
;	no	no
reducer	yes	yes
.	no	no
initialize	no	yes
(	no	no
jconf	no	yes
,	no	no
new	no	no
ObjectInspector	no	yes
[	no	no
]	no	no
{	no	no
mainWorkOIs	no	yes
[	no	no
bigTablePosition	no	yes
]	no	no
}	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
:	no	no
tagToReducerMap	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
i	no	yes
==	no	no
bigTablePosition	no	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
redWork	no	yes
=	no	no
tagToReducerMap	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
void	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
LogicalOutput	no	no
>	no	no
outputEntry	yes	no
:	no	no
outputs	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
abort	no	yes
(	no	no
)	no	no
{	no	no
super	no	no
.	no	no
abort	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
reducer	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
void	no	no
runRestartThread	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
TezSessionPoolSession	no	yes
next	yes	yes
=	no	no
restartQueue	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
runExpirationThread	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
TezSessionPoolSession	no	yes
nextToExpire	yes	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
nextToExpire	yes	yes
=	no	no
expirationQueue	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
TezSessionPoolSession	no	yes
nextToExpire	yes	yes
=	no	no
null	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
nextToExpire	yes	yes
=	no	no
expirationQueue	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
nextToExpire	yes	yes
.	no	no
tryExpire	no	yes
(	no	no
false	no	no
)	no	no
)	no	no
break	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
nextToExpire	yes	yes
=	no	no
null	no	no
;	no	no
break	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
nextToExpire	yes	yes
!=	no	no
null	no	no
&&	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
nextToExpire	yes	yes
.	no	no
tryExpire	no	yes
(	no	no
false	no	no
)	no	no
)	no	no
break	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
nextToExpire	yes	yes
=	no	no
null	no	no
;	no	no
break	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
nextToExpire	yes	yes
!=	no	no
null	no	no
&&	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nextToExpire	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
synchronized	no	no
(	no	no
expirationQueue	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
nextToExpire	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
expirationQueue	no	yes
.	no	no
add	no	yes
(	no	no
nextToExpire	yes	yes
)	no	no
;	no	no
}	no	no
nextToExpire	yes	yes
=	no	no
expirationQueue	no	yes
.	no	no
peek	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nextToExpire	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
timeToWaitMs	yes	yes
=	no	no
(	no	no
nextToExpire	yes	yes
.	no	no
getExpirationNs	no	yes
(	no	no
)	no	no
-	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
)	no	no
/	no	no
1000000L	no	no
;	no	no
timeToWaitMs	yes	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
1	no	no
,	no	no
timeToWaitMs	yes	yes
+	no	no
10	no	no
)	no	no
;	no	no

public	no	no
Multimap	no	yes
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
group	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
Multimap	no	yes
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
bucketSplitMultimap	no	yes
,	no	no
int	no	no
availableSlots	no	yes
,	no	no
float	no	no
waves	no	yes
,	no	no
SplitLocationProvider	no	no
splitLocationProvider	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
Integer	no	yes
>	no	no
bucketTaskMap	no	yes
=	no	no
estimateBucketSizes	no	yes
(	no	no
availableSlots	no	yes
,	no	no
waves	no	yes
,	no	no
bucketSplitMultimap	no	yes
.	no	no
asMap	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Multimap	no	yes
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
bucketGroupedSplitMultimap	no	yes
=	no	no
ArrayListMultimap	no	yes
.	no	no
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
bucketId	yes	yes
:	no	no
bucketSplitMultimap	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
InputSplit	no	yes
>	no	no
inputSplitCollection	no	yes
=	no	no
bucketSplitMultimap	no	yes
.	no	no
get	no	yes
(	no	no
bucketId	yes	yes
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
rawSplits	yes	yes
=	no	no
inputSplitCollection	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
InputSplit	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
groupedSplits	yes	yes
=	no	no
tezGrouper	no	yes
.	no	no
getGroupedSplits	no	yes
(	no	no
conf	no	yes
,	no	no
rawSplits	yes	yes
,	no	no
bucketTaskMap	no	yes
.	no	no
get	no	yes
(	no	no
bucketId	yes	yes
)	no	no
,	no	no
HiveInputFormat	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
ColumnarSplitSizeEstimator	no	yes
(	no	no
)	no	no
,	no	no
splitLocationProvider	no	yes
)	no	no
;	no	no

MapWork	no	yes
mapWork	no	yes
=	no	no
populateMapWork	no	yes
(	no	no
jobConf	no	yes
,	no	no
inputName	no	yes
)	no	no
;	no	no
Multimap	no	yes
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
schemaGroupedSplitMultiMap	no	yes
=	no	no
ArrayListMultimap	no	yes
.	no	no
<	no	no
Integer	no	yes
,	no	no
InputSplit	no	yes
>	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
HiveConf	no	no
.	no	no
getVar	no	no
(	no	no
jobConf	no	yes
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
SPLIT_GROUPING_MODE	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
paths	no	yes
=	no	no
Utilities	no	yes
.	no	no
getInputPathsTez	no	yes
(	no	no
jobConf	no	yes
,	no	no
mapWork	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
path	no	yes
:	no	no
paths	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
aliases	no	yes
=	no	no
mapWork	no	yes
.	no	no
getPathToAliases	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
aliases	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
aliases	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
op	no	yes
=	no	no
mapWork	no	yes
.	no	no
getAliasToWork	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
aliases	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
op	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
op	no	yes
instanceof	no	no
TableScanOperator	no	yes
)	no	no
)	no	no
{	no	no
TableScanOperator	no	yes
tableScan	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
op	no	yes
;	no	no
PartitionDesc	no	yes
partitionDesc	no	yes
=	no	no
mapWork	no	yes
.	no	no
getAliasToPartnInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
aliases	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
isMinorCompaction	no	yes
&=	no	no
AcidUtils	no	yes
.	no	no
isCompactionTable	no	yes
(	no	no
partitionDesc	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tableScan	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
isTranscationalTable	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
isMinorCompaction	no	yes
)	no	no
{	no	no
String	no	yes
splitPath	no	yes
=	no	no
getFirstSplitPath	no	yes
(	no	no
splits	no	yes
)	no	no
;	no	no
String	no	yes
errorMessage	yes	yes
=	no	no
+	no	no
splitPath	no	yes
;	no	no

PartitionDesc	no	yes
pd	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getFromPathRecursively	no	yes
(	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
,	no	no
path	yes	yes
,	no	no
cache	no	yes
)	no	no
;	no	no
String	no	yes
currentDeserializerClass	no	yes
=	no	no
pd	no	yes
.	no	no
getDeserializerClassName	no	yes
(	no	no
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
currentInputFormatClass	no	yes
=	no	no
pd	no	yes
.	no	no
getInputFileFormatClass	no	yes
(	no	no
)	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
previousInputFormatClass	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
previousDeserializerClass	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
prevSplit	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Path	no	yes
prevPath	no	yes
=	no	no
(	no	no
(	no	no
FileSplit	no	yes
)	no	no
prevSplit	no	yes
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
groupAcrossFiles	no	no
)	no	no
{	no	no
return	no	no
!	no	no
path	yes	yes
.	no	no
equals	no	yes
(	no	no
prevPath	no	yes
)	no	no
;	no	no
}	no	no
PartitionDesc	no	yes
prevPD	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getFromPathRecursively	no	yes
(	no	no
work	no	yes
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
,	no	no
prevPath	no	yes
,	no	no
cache	no	yes
)	no	no
;	no	no
previousDeserializerClass	no	yes
=	no	no
prevPD	no	yes
.	no	no
getDeserializerClassName	no	yes
(	no	no
)	no	no
;	no	no
previousInputFormatClass	no	yes
=	no	no
prevPD	no	yes
.	no	no
getInputFileFormatClass	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
(	no	no
currentInputFormatClass	no	yes
!=	no	no
previousInputFormatClass	no	yes
)	no	no
||	no	no
(	no	no
!	no	no
currentDeserializerClass	no	yes
.	no	no
equals	no	yes
(	no	no
previousDeserializerClass	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
retval	yes	yes
=	no	no
true	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
TEZ_RUN_PROCESSOR	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
originalThrowable	yes	yes
=	no	no
t	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
originalThrowable	yes	yes
!=	no	no
null	no	no
&&	no	no
(	no	no
originalThrowable	yes	yes
instanceof	no	no
Error	no	no
||	no	no
Throwables	no	no
.	no	no
getRootCause	no	no
(	no	no
originalThrowable	yes	yes
)	no	no
instanceof	no	no
Error	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
originalThrowable	yes	yes
)	no	no
)	no	no
;	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
reportFailure	no	yes
(	no	no
TaskFailureType	no	yes
.	no	no
FATAL	no	yes
,	no	no
originalThrowable	yes	yes
,	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
originalThrowable	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
rproc	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
rproc	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
originalThrowable	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
originalThrowable	yes	yes
=	no	no
t	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
originalThrowable	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

oldSession	yes	yes
.	no	no
close	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
poolLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
pool	no	yes
.	no	no
remove	no	yes
(	no	no
oldSession	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
poolLock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
notifyClosed	no	yes
(	no	no
oldSession	yes	yes
)	no	no
;	no	no
newSession	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
set	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_QUEUE_NAME	no	yes
,	no	no
queueName	no	yes
)	no	no
;	no	no
configureAmRegistry	no	yes
(	no	no
newSession	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
==	no	no
null	no	no
&&	no	no
parentSessionState	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
setCurrentSessionState	no	yes
(	no	no
parentSessionState	no	yes
)	no	no
;	no	no
}	no	no
newSession	yes	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
putSessionBack	no	no
(	no	no
newSession	yes	yes
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

switch	no	no
(	no	no
customQueueAllowed	no	no
)	no	no
{	no	no
case	no	no
FALSE	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	no
(	no	no
+	no	no
TezConfiguration	no	yes
.	no	no
TEZ_QUEUE_NAME	no	yes
+	no	no
)	no	no
;	no	no
case	no	no
IGNORE	no	no
:	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
queueName	no	yes
+	no	no
)	no	no
;	no	no
queueName	no	yes
=	no	no
null	no	no
;	no	no
hasQueue	no	yes
=	no	no
false	no	no
;	no	no
conf	no	yes
.	no	no
unset	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_QUEUE_NAME	no	yes
)	no	no
;	no	no
}	no	no
default	no	no
:	no	no
}	no	no
if	no	no
(	no	no
yarnQueueChecker	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
ss	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
userName	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
userName	yes	yes
=	no	no
ss	no	yes
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
?	no	no
ss	no	yes
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
.	no	no
getUserName	no	yes
(	no	no
)	no	no
:	no	no
ss	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
userName	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
userName	yes	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no

default	no	no
:	no	no
}	no	no
if	no	no
(	no	no
yarnQueueChecker	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionState	no	yes
ss	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
userName	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
userName	no	yes
=	no	no
ss	no	yes
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
?	no	no
ss	no	yes
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
.	no	no
getUserName	no	yes
(	no	no
)	no	no
:	no	no
ss	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
userName	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
userName	no	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	no	yes
)	no	no
;	no	no
}	no	no
yarnQueueChecker	no	yes
.	no	no
checkQueueAccess	no	yes
(	no	no
queueName	yes	yes
,	no	no
userName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
restrictedConfig	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
restrictedConfig	no	yes
.	no	no
validate	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
initConf	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_CACHE_DEFAULT_FS_FILE_ID	no	yes
.	no	no
varname	no	yes
,	no	no
HiveConf	no	yes
.	no	no
getVarWithoutType	no	yes
(	no	no
initConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_CACHE_DEFAULT_FS_FILE_ID	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
nonDefaultUser	yes	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
closeIfNotDefault	no	no
(	no	no
TezSessionState	no	no
tezSessionState	yes	no
,	no	no
boolean	no	no
keepTmpDir	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

return	no	no
false	no	no
;	no	no
}	no	no
try	no	no
{	no	no
String	no	yes
userName	no	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	no	yes
+	no	no
+	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
userName	no	yes
.	no	no
equals	no	no
(	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
==	no	no
false	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	no	yes
+	no	no
+	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
doAsEnabled	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
doAsEnabled	no	yes
!=	no	no
session	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
session	no	yes
.	no	no
isDefault	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
queueName	yes	yes
=	no	no
session	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
confQueueName	yes	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_QUEUE_NAME	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
String	no	yes
userName	no	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	no	yes
+	no	no
+	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
userName	no	yes
.	no	no
equals	no	no
(	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
==	no	no
false	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	no	yes
+	no	no
+	no	no
session	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
doAsEnabled	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
doAsEnabled	no	yes
!=	no	no
session	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
session	no	yes
.	no	no
isDefault	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
queueName	yes	yes
=	no	no
session	no	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
confQueueName	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_QUEUE_NAME	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queueName	yes	yes
+	no	no
+	no	no
confQueueName	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
queueName	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
queueName	no	yes
.	no	no
equals	no	no
(	no	no
confQueueName	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
queueName	no	yes
+	no	no
+	no	no
confQueueName	no	yes
)	no	no
;	no	no
}	no	no
this	no	no
.	no	no
queueName	no	yes
=	no	no
confQueueName	no	yes
;	no	no
this	no	no
.	no	no
doAsEnabled	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
)	no	no
;	no	no
final	no	no
boolean	no	no
llapMode	no	yes
=	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXECUTION_MODE	no	yes
)	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
;	no	no
user	no	yes
=	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sessionId	no	yes
+	no	no
+	no	no
user	no	yes
)	no	no
;	no	no
tezScratchDir	no	yes
=	no	no
createTezDir	no	yes
(	no	no
sessionId	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
resources	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
this	no	no
.	no	no
resources	yes	yes
=	no	no
resources	yes	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
resources	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
this	no	no
.	no	no
resources	yes	yes
=	no	no
new	no	no
HiveResources	no	yes
(	no	no
createTezDir	no	yes
(	no	no
sessionId	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
ensureLocalResources	no	yes
(	no	no
conf	no	yes
,	no	no
additionalFilesNotFromConf	no	yes
)	no	no
;	no	no

setupTezParamsBasedOnMR	no	yes
(	no	no
tezConfig	no	yes
)	no	no
;	no	no
tezConfig	no	yes
.	no	no
set	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_STAGING_DIR	no	yes
,	no	no
tezScratchDir	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
stripHiddenConfigurations	no	yes
(	no	no
tezConfig	no	yes
)	no	no
;	no	no
ServicePluginsDescriptor	no	yes
servicePluginsDescriptor	no	yes
;	no	no
Credentials	no	yes
llapCredentials	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
llapMode	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isKerberosEnabled	no	no
(	no	no
tezConfig	no	yes
)	no	no
)	no	no
{	no	no
llapCredentials	no	yes
=	no	no
new	no	no
Credentials	no	yes
(	no	no
)	no	no
;	no	no
llapCredentials	no	yes
.	no	no
addToken	no	yes
(	no	no
LlapTokenIdentifier	no	yes
.	no	no
KIND_NAME	no	yes
,	no	no
getLlapToken	no	yes
(	no	no
user	no	yes
,	no	no
tezConfig	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
UserPayload	no	yes
servicePluginPayload	no	yes
=	no	no
TezUtils	no	yes
.	no	no
createUserPayloadFromConf	no	yes
(	no	no
tezConfig	no	yes
)	no	no
;	no	no
servicePluginsDescriptor	no	yes
=	no	no
ServicePluginsDescriptor	no	yes
.	no	no
create	no	yes
(	no	no
true	no	no
,	no	no
new	no	no
TaskSchedulerDescriptor	no	yes
[	no	no
]	no	no
{	no	no
TaskSchedulerDescriptor	no	yes
.	no	no
create	no	yes
(	no	no
LLAP_SERVICE	no	yes
,	no	no
LLAP_SCHEDULER	no	yes
)	no	no
.	no	no
setUserPayload	no	yes
(	no	no
servicePluginPayload	no	yes
)	no	no
}	no	no
,	no	no
new	no	no
ContainerLauncherDescriptor	no	yes
[	no	no
]	no	no
{	no	no
ContainerLauncherDescriptor	no	yes
.	no	no
create	no	yes
(	no	no
LLAP_SERVICE	no	yes
,	no	no
LLAP_LAUNCHER	no	yes
)	no	no
}	no	no
,	no	no
new	no	no
TaskCommunicatorDescriptor	no	yes
[	no	no
]	no	no
{	no	no
TaskCommunicatorDescriptor	no	yes
.	no	no
create	no	yes
(	no	no
LLAP_SERVICE	no	yes
,	no	no
LLAP_TASK_COMMUNICATOR	no	yes
)	no	no
.	no	no
setUserPayload	no	yes
(	no	no
servicePluginPayload	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
servicePluginsDescriptor	no	yes
=	no	no
ServicePluginsDescriptor	no	yes
.	no	no
create	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_ENABLED	no	no
)	no	no
)	no	no
{	no	no
int	no	no
n	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_NUM_CONTAINERS	no	yes
)	no	no
;	no	no

private	no	no
TezClient	no	no
startSessionAndContainers	no	no
(	no	no
TezClient	no	no
session	no	yes
,	no	no
HiveConf	no	yes
conf	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
LocalResource	no	no
>	no	no
commonLocalResources	no	no
,	no	no
TezConfiguration	no	no
tezConfig	no	no
,	no	no
boolean	no	no
isOnThread	no	no
)	no	no
throws	no	no
TezException	no	no
,	no	no
IOException	no	no
{	no	no
session	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isSuccessful	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_ENABLED	no	no
)	no	no
)	no	no
{	no	no
int	no	no
n	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PREWARM_NUM_CONTAINERS	no	yes
)	no	no
;	no	no

conf	no	yes
.	no	no
setIfUnset	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_VIEW_ACLS	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_ACL_VIEW_JOB	no	yes
,	no	no
MRJobConfig	no	yes
.	no	no
DEFAULT_JOB_ACL_VIEW_JOB	no	yes
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
setIfUnset	no	yes
(	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_MODIFY_ACLS	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
JOB_ACL_MODIFY_JOB	no	yes
,	no	no
MRJobConfig	no	yes
.	no	no
DEFAULT_JOB_ACL_MODIFY_JOB	no	yes
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
maps	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
(	no	no
2	no	no
)	no	no
;	no	no
maps	no	yes
.	no	no
add	no	yes
(	no	no
DeprecatedKeys	no	yes
.	no	no
getMRToTezRuntimeParamMap	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
maps	no	yes
.	no	no
add	no	yes
(	no	no
DeprecatedKeys	no	yes
.	no	no
getMRToDAGParamMap	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
preferTez	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
map	no	no
:	no	no
maps	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dep	yes	yes
:	no	no
map	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
dep	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
mrValue	yes	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
dep	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
tezValue	yes	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
dep	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
unset	no	yes
(	no	no
dep	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tezValue	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
dep	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
mrValue	yes	yes
,	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
preferTez	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
setupSessionAcls	no	no
(	no	no
Configuration	no	no
tezConf	no	yes
,	no	no
HiveConf	no	yes
hiveConf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
user	no	yes
=	no	no
SessionState	no	yes
.	no	no
getUserFromAuthenticator	no	yes
(	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
loginUserUgi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
loginUser	no	yes
=	no	no
loginUserUgi	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
loginUserUgi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
addHs2User	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVETEZHS2USERACCESS	no	yes
)	no	no
;	no	no
String	no	yes
viewStr	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getAclStringWithHiveModification	no	yes
(	no	no
tezConf	no	yes
,	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_VIEW_ACLS	no	yes
,	no	no
addHs2User	no	yes
,	no	no
user	no	yes
,	no	no
loginUser	no	yes
)	no	no
;	no	no
String	no	yes
modifyStr	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getAclStringWithHiveModification	no	yes
(	no	no
tezConf	no	yes
,	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_MODIFY_ACLS	no	yes
,	no	no
addHs2User	no	yes
,	no	no
user	no	yes
,	no	no
loginUser	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
String	no	yes
getSha	no	no
(	no	no
final	no	no
Path	no	no
localFile	yes	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
IllegalArgumentException	no	no
{	no	no
FileSystem	no	yes
localFs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
getLocal	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
fileStatus	yes	yes
=	no	no
localFs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
localFile	yes	yes
)	no	no
;	no	no
String	no	yes
key	no	yes
=	no	no
getKey	no	yes
(	no	no
fileStatus	yes	yes
)	no	no
;	no	no
String	no	yes
sha256	yes	yes
=	no	no
shaCache	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sha256	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
FSDataInputStream	no	yes
is	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
is	no	yes
=	no	no
localFs	no	yes
.	no	no
open	no	yes
(	no	no
localFile	yes	yes
)	no	no
;	no	no
long	no	no
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
sha256	yes	yes
=	no	no
DigestUtils	no	yes
.	no	no
sha256Hex	no	yes
(	no	no
is	no	yes
)	no	no
;	no	no
long	no	no
end	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
setAccessControlsForCurrentUser	no	no
(	no	no
DAG	no	no
dag	no	no
,	no	no
String	no	yes
queryId	yes	no
,	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
user	no	yes
=	no	no
SessionState	no	yes
.	no	no
getUserFromAuthenticator	no	yes
(	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
loginUserUgi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
loginUser	no	yes
=	no	no
loginUserUgi	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
loginUserUgi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
addHs2User	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVETEZHS2USERACCESS	no	yes
)	no	no
;	no	no
String	no	yes
viewStr	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getAclStringWithHiveModification	no	yes
(	no	no
conf	no	yes
,	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_VIEW_ACLS	no	yes
,	no	no
addHs2User	no	yes
,	no	no
user	no	yes
,	no	no
loginUser	no	yes
)	no	no
;	no	no
String	no	yes
modifyStr	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getAclStringWithHiveModification	no	yes
(	no	no
conf	no	yes
,	no	no
TezConfiguration	no	yes
.	no	no
TEZ_AM_MODIFY_ACLS	no	yes
,	no	no
addHs2User	no	yes
,	no	no
user	no	yes
,	no	no
loginUser	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
configurePartitioner	no	no
(	no	no
JobConf	no	no
conf	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Map	no	yes
<	no	no
TezSessionState	no	yes
,	no	no
Trigger	no	yes
>	no	no
violatedSessions	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
TezSessionState	no	yes
>	no	no
sessions	no	yes
=	no	no
sessionTriggerProvider	no	yes
.	no	no
getSessions	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Trigger	no	yes
>	no	no
triggers	no	yes
=	no	no
sessionTriggerProvider	no	yes
.	no	no
getTriggers	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TezSessionState	no	yes
sessionState	no	yes
:	no	no
sessions	no	yes
)	no	no
{	no	no
WmContext	no	yes
wmContext	no	yes
=	no	no
sessionState	no	yes
.	no	no
getWmContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
wmContext	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
wmContext	no	yes
.	no	no
isQueryCompleted	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
wmContext	no	yes
.	no	no
getSubscribedCounters	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
currentCounters	yes	yes
=	no	no
wmContext	no	yes
.	no	no
getCurrentCounters	no	yes
(	no	no
)	no	no
;	no	no
wmContext	no	yes
.	no	no
updateElapsedTimeCounter	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Trigger	no	yes
currentTrigger	yes	yes
:	no	no
triggers	no	yes
)	no	no
{	no	no
String	no	yes
desiredCounter	no	yes
=	no	no
currentTrigger	yes	yes
.	no	no
getExpression	no	yes
(	no	no
)	no	no
.	no	no
getCounterLimit	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
currentCounters	no	yes
=	no	no
wmContext	no	yes
.	no	no
getCurrentCounters	no	yes
(	no	no
)	no	no
;	no	no
wmContext	no	yes
.	no	no
updateElapsedTimeCounter	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Trigger	no	yes
currentTrigger	no	yes
:	no	no
triggers	no	no
)	no	no
{	no	no
String	no	yes
desiredCounter	no	yes
=	no	no
currentTrigger	no	yes
.	no	no
getExpression	no	yes
(	no	no
)	no	no
.	no	no
getCounterLimit	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
currentTrigger	no	yes
,	no	no
currentCounters	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
currentCounters	no	yes
.	no	no
containsKey	no	no
(	no	no
desiredCounter	no	yes
)	no	no
)	no	no
{	no	no
long	no	no
currentCounterValue	no	yes
=	no	no
currentCounters	no	yes
.	no	no
get	no	yes
(	no	no
desiredCounter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentTrigger	no	yes
.	no	no
apply	no	no
(	no	no
currentCounterValue	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
queryId	yes	yes
=	no	no
sessionState	no	yes
.	no	no
getWmContext	no	yes
(	no	no
)	no	no
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
violatedSessions	no	yes
.	no	no
containsKey	no	no
(	no	no
sessionState	no	yes
)	no	no
)	no	no
{	no	no
Trigger	no	yes
existingTrigger	no	yes
=	no	no
violatedSessions	no	yes
.	no	no
get	no	yes
(	no	no
sessionState	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
existingTrigger	no	yes
.	no	no
getAction	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
Action	no	no
.	no	no
Type	no	no
.	no	no
MOVE_TO_POOL	no	no
)	no	no
&&	no	no
currentTrigger	no	yes
.	no	no
getAction	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
Action	no	no
.	no	no
Type	no	no
.	no	no
KILL_QUERY	no	no
)	no	no
)	no	no
{	no	no
currentTrigger	no	yes
.	no	no
setViolationMsg	no	yes
(	no	no
+	no	no
currentTrigger	no	yes
+	no	no
+	no	no
currentCounterValue	no	yes
)	no	no
;	no	no
violatedSessions	no	yes
.	no	no
put	no	yes
(	no	no
sessionState	no	yes
,	no	no
currentTrigger	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
SplitLocationProvider	no	yes
getSplitLocationProvider	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
boolean	no	no
useCacheAffinity	no	yes
,	no	no
Logger	no	no
LOG	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
boolean	no	no
useCustomLocations	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXECUTION_MODE	no	yes
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
&&	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_CLIENT_CONSISTENT_SPLITS	no	yes
)	no	no
&&	no	no
useCacheAffinity	no	yes
;	no	no
SplitLocationProvider	no	yes
splitLocationProvider	no	yes
;	no	no
final	no	no
String	no	yes
locationProviderClass	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_SPLIT_LOCATION_PROVIDER_CLASS	no	yes
)	no	no
;	no	no
final	no	no
boolean	no	no
customLocationProvider	no	yes
=	no	no
!	no	no
HostAffinitySplitLocationProvider	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
equals	no	yes
(	no	no
locationProviderClass	yes	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
SplitLocationProvider	no	no
getCustomSplitLocationProvider	no	no
(	no	no
LlapRegistryService	no	no
serviceRegistry	yes	no
,	no	no
Logger	no	no
LOG	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
SplitLocationProvider	no	no
getCustomSplitLocationProvider	no	no
(	no	no
LlapRegistryService	no	yes
serviceRegistry	no	yes
,	no	no
Logger	no	no
LOG	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
serviceRegistry	no	yes
.	no	no
getApplicationId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
LlapServiceInstance	no	yes
>	no	no
serviceInstances	no	yes
=	no	no
serviceRegistry	no	yes
.	no	no
getInstances	no	yes
(	no	no
)	no	no
.	no	no
getAllInstancesOrdered	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
!	no	no
serviceInstances	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
locations	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
serviceInstances	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
LlapServiceInstance	no	yes
serviceInstance	yes	yes
:	no	no
serviceInstances	no	yes
)	no	no
{	no	no
String	no	yes
executors	no	yes
=	no	no
serviceInstance	yes	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
LlapRegistryService	no	yes
.	no	no
LLAP_DAEMON_NUM_ENABLED_EXECUTORS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
executors	no	yes
!=	no	no
null	no	no
&&	no	no
Integer	no	no
.	no	no
parseInt	no	no
(	no	no
executors	no	yes
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
locations	no	yes
.	no	no
add	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
endEvent	no	no
(	no	no
final	no	no
WmTezSession	no	no
sessionState	no	yes
)	no	no
{	no	no
this	yes	no
.	no	no
wmTezSessionInfo	no	yes
=	no	no
new	no	no
WmTezSessionInfo	no	yes
(	no	no
sessionState	no	yes
)	no	no
;	no	no
this	yes	no
.	no	no
eventEndTimestamp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
this	yes	no
.	no	no
elapsedTime	no	yes
=	no	no
eventEndTimestamp	no	yes
-	no	no
eventStartTimestamp	no	yes
;	no	no
WmContext	no	yes
wmContext	no	yes
=	no	no
sessionState	no	yes
.	no	no
getWmContext	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
wmContext	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
wmContext	no	yes
.	no	no
addWMEvent	no	yes
(	no	no
this	yes	no
)	no	no
;	no	no

public	no	no
void	no	no
updateAmEndpointInfo	no	no
(	no	no
TezAmInstance	no	no
si	yes	yes
,	no	no
int	no	no
ephSeqVersion	yes	no
)	no	no
{	no	no
AmPluginInfo	no	yes
info	no	yes
=	no	no
si	yes	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
new	no	no
AmPluginInfo	no	yes
(	no	no
si	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
si	yes	yes
.	no	no
getPluginPort	no	yes
(	no	no
)	no	no
,	no	no
si	yes	yes
.	no	no
getPluginToken	no	yes
(	no	no
)	no	no
,	no	no
si	yes	yes
.	no	no
getPluginTokenJobId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
synchronized	no	no
(	no	no
amPluginInfoLock	no	no
)	no	no
{	no	no
if	no	no
(	no	no
(	no	no
amPluginEndpointVersion	no	no
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
(	no	no
amPluginEndpointVersion	no	no
>	no	no
ephSeqVersion	yes	no
)	no	no
||	no	no
(	no	no
amPluginEndpointVersion	no	no
==	no	no
ephSeqVersion	yes	no
&&	no	no
info	no	yes
!=	no	no
null	no	no
)	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
hasChanges	no	yes
=	no	no
false	no	no
;	no	no
currentEvents	no	yes
=	no	no
current	no	yes
;	no	no
current	no	yes
=	no	no
(	no	no
currentEvents	no	yes
==	no	no
one	no	yes
)	no	no
?	no	no
two	no	yes
:	no	no
one	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no
currentLock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
processCurrentEvents	no	yes
(	no	no
currentEvents	no	yes
,	no	no
syncWork	no	yes
)	no	no
;	no	no
scheduleWork	no	yes
(	no	no
syncWork	no	yes
)	no	no
;	no	no
updateSessionTriggerProvidersOnMasterThread	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ex	yes	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no

private	no	no
void	no	no
scheduleWork	no	no
(	no	no
WmThreadSyncWork	no	no
context	no	no
)	no	no
{	no	no
for	no	no
(	no	no
KillQueryContext	no	no
killCtx	no	yes
:	no	no
context	no	no
.	no	no
toKillQuery	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
WmTezSession	no	yes
toKill	yes	yes
=	no	no
killCtx	no	yes
.	no	no
session	no	yes
;	no	no
final	no	no
String	no	yes
reason	no	yes
=	no	no
killCtx	no	yes
.	no	no
reason	no	yes
;	no	no

private	no	no
void	no	no
scheduleWork	no	no
(	no	no
WmThreadSyncWork	no	no
context	no	no
)	no	no
{	no	no
for	no	no
(	no	no
KillQueryContext	no	no
killCtx	no	yes
:	no	no
context	no	no
.	no	no
toKillQuery	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
WmTezSession	no	yes
toKill	no	yes
=	no	no
killCtx	no	yes
.	no	no
session	no	yes
;	no	no
final	no	no
String	no	yes
reason	yes	yes
=	no	no
killCtx	no	yes
.	no	no
reason	yes	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
toKill	no	yes
)	no	no
;	no	no
workPool	no	no
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
queryId	yes	yes
=	no	no
toKill	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no
KillQuery	no	yes
kq	no	yes
=	no	no
toKill	no	yes
.	no	no
getKillQuery	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
kq	no	yes
!=	no	no
null	no	no
&&	no	no
queryId	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
WmEvent	no	yes
wmEvent	no	yes
=	no	no
new	no	no
WmEvent	no	yes
(	no	no
WmEvent	no	yes
.	no	no
EventType	no	yes
.	no	no
KILL	no	yes
)	no	no
;	no	no

String	no	yes
queryId	yes	yes
=	no	no
toKill	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no
KillQuery	no	yes
kq	no	yes
=	no	no
toKill	no	yes
.	no	no
getKillQuery	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
kq	no	yes
!=	no	no
null	no	no
&&	no	no
queryId	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
WmEvent	no	yes
wmEvent	no	yes
=	no	no
new	no	no
WmEvent	no	yes
(	no	no
WmEvent	no	yes
.	no	no
EventType	no	yes
.	no	no
KILL	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
+	no	no
+	no	no
reason	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
SessionState	no	yes
ss	no	yes
=	no	no
new	no	no
SessionState	no	yes
(	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ss	no	yes
.	no	no
setIsHiveServerQuery	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
ss	no	yes
)	no	no
;	no	no
kq	no	yes
.	no	no
killQuery	no	yes
(	no	no
queryId	yes	yes
,	no	no
reason	no	yes
,	no	no
toKill	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addKillQueryResult	no	yes
(	no	no
toKill	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
killCtx	no	yes
.	no	no
killSessionFuture	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toKill	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
kq	no	yes
!=	no	no
null	no	no
&&	no	no
queryId	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
WmEvent	no	yes
wmEvent	no	yes
=	no	no
new	no	no
WmEvent	no	yes
(	no	no
WmEvent	no	yes
.	no	no
EventType	no	yes
.	no	no
KILL	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
+	no	no
+	no	no
reason	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
SessionState	no	yes
ss	no	yes
=	no	no
new	no	no
SessionState	no	yes
(	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ss	no	yes
.	no	no
setIsHiveServerQuery	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
ss	no	yes
)	no	no
;	no	no
kq	no	yes
.	no	no
killQuery	no	yes
(	no	no
queryId	yes	yes
,	no	no
reason	no	yes
,	no	no
toKill	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addKillQueryResult	no	yes
(	no	no
toKill	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
killCtx	no	yes
.	no	no
killSessionFuture	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toKill	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
|	no	no
IOException	no	no
ex	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
+	no	no
+	no	no
reason	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
;	no	no
SessionState	no	yes
ss	no	yes
=	no	no
new	no	no
SessionState	no	yes
(	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
,	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ss	no	yes
.	no	no
setIsHiveServerQuery	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
ss	no	yes
)	no	no
;	no	no
kq	yes	yes
.	no	no
killQuery	no	yes
(	no	no
queryId	yes	yes
,	no	no
reason	no	yes
,	no	no
toKill	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addKillQueryResult	no	yes
(	no	no
toKill	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
killCtx	no	yes
.	no	no
killSessionFuture	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toKill	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
|	no	no
IOException	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
queryId	yes	yes
+	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

addKillQueryResult	no	yes
(	no	no
toKill	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
killCtx	no	yes
.	no	no
killSessionFuture	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toKill	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
queryId	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
|	no	no
IOException	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
queryId	no	yes
+	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
toKill	no	yes
,	no	no
queryId	no	yes
,	no	no
kq	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
toKill	no	yes
.	no	no
setQueryId	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
addKillQueryResult	no	yes
(	no	no
toKill	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
toKillQuery	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
WmTezSession	no	no
toRestart	yes	no
:	no	no
context	no	yes
.	no	no
toRestartInUse	no	no
)	no	no
{	no	no

)	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
toKillQuery	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
WmTezSession	no	no
toRestart	no	yes
:	no	no
context	no	yes
.	no	no
toRestartInUse	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
toRestart	no	yes
)	no	no
;	no	no
toRestart	no	yes
.	no	no
setQueryId	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
workPool	no	no
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
WmEvent	no	yes
wmEvent	no	yes
=	no	no
new	no	no
WmEvent	no	yes
(	no	no
WmEvent	no	yes
.	no	no
EventType	no	yes
.	no	no
RESTART	no	yes
)	no	no
;	no	no
tezAmPool	no	yes
.	no	no
replaceSession	no	yes
(	no	no
toRestart	no	yes
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toRestart	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
toRestartInUse	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
WmTezSession	no	no
toDestroy	no	no
:	no	no
context	no	yes
.	no	no
toDestroyNoRestart	no	no
)	no	no
{	no	no

tezAmPool	no	yes
.	no	no
replaceSession	no	yes
(	no	no
toRestart	no	yes
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toRestart	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
toRestartInUse	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
WmTezSession	no	no
toDestroy	no	yes
:	no	no
context	no	yes
.	no	no
toDestroyNoRestart	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
toDestroy	no	yes
)	no	no
;	no	no
workPool	no	no
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
WmEvent	no	yes
wmEvent	no	yes
=	no	no
new	no	no
WmEvent	no	yes
(	no	no
WmEvent	no	yes
.	no	no
EventType	no	yes
.	no	no
DESTROY	no	yes
)	no	no
;	no	no
toDestroy	no	yes
.	no	no
close	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
wmEvent	no	yes
.	no	no
endEvent	no	yes
(	no	no
toDestroy	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
ex	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
MoveSession	no	no
moveSession	no	yes
:	no	no
e	no	yes
.	no	no
moveSessions	no	yes
)	no	no
{	no	no
handleMoveSessionOnMasterThread	no	yes
(	no	no
moveSession	no	yes
,	no	no
syncWork	no	yes
,	no	no
poolsToRedistribute	no	yes
,	no	no
e	no	yes
.	no	no
toReuse	no	yes
,	no	no
recordMoveEvents	no	yes
)	no	no
;	no	no
}	no	no
e	no	yes
.	no	no
moveSessions	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
GetRequest	no	yes
req	no	yes
;	no	no
while	no	no
(	no	no
(	no	no
req	no	yes
=	no	no
e	no	yes
.	no	no
getRequests	no	no
.	no	no
pollFirst	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
req	no	yes
.	no	no
mappingInput	no	yes
)	no	no
;	no	no
queueGetRequestOnMasterThread	no	yes
(	no	no
req	no	yes
,	no	no
poolsToRedistribute	no	yes
,	no	no
syncWork	no	yes
)	no	no
;	no	no
}	no	no
e	no	yes
.	no	no
toReuse	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
KillQueryContext	no	yes
>	no	no
iter	no	yes
=	no	no
killQueryInProgress	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
KillQueryContext	no	yes
ctx	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
KillQueryResult	no	yes
kr	no	yes
=	no	no
ctx	yes	yes
.	no	no
process	no	yes
(	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
kr	no	yes
)	no	no
{	no	no
case	no	no
IN_PROGRESS	no	no
:	no	no
continue	no	no
;	no	no
case	no	no
OK	no	no
:	no	no
{	no	no

private	no	no
void	no	no
handleMoveSessionOnMasterThread	no	no
(	no	no
final	no	no
MoveSession	no	no
moveSession	yes	yes
,	no	no
final	no	no
WmThreadSyncWork	no	no
syncWork	no	no
,	no	no
final	no	no
HashSet	no	no
<	no	no
String	no	yes
>	no	no
poolsToRedistribute	no	no
,	no	no
final	no	no
Map	no	no
<	no	no
WmTezSession	no	no
,	no	no
GetRequest	no	no
>	no	no
toReuse	no	no
,	no	no
final	no	no
Map	no	no
<	no	no
WmTezSession	no	no
,	no	no
WmEvent	no	no
>	no	no
recordMoveEvents	no	no
)	no	no
{	no	no
String	no	yes
destPoolName	no	yes
=	no	no
moveSession	yes	yes
.	no	no
destPool	no	yes
;	no	no

RemoveSessionResult	no	yes
rr	no	yes
=	no	no
checkAndRemoveSessionFromItsPool	no	yes
(	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
,	no	no
poolsToRedistribute	no	yes
,	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rr	no	yes
==	no	no
RemoveSessionResult	no	yes
.	no	no
OK	no	no
)	no	no
{	no	no
if	no	no
(	no	no
capacityAvailable	no	no
(	no	no
destPoolName	no	yes
)	no	no
)	no	no
{	no	no
Boolean	no	yes
added	no	yes
=	no	no
checkAndAddSessionToAnotherPool	no	yes
(	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
,	no	no
destPoolName	no	yes
,	no	no
poolsToRedistribute	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
added	no	yes
!=	no	no
null	no	no
&&	no	no
added	no	yes
)	no	no
{	no	no
moveSession	yes	yes
.	no	no
future	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
recordMoveEvents	no	yes
.	no	no
put	no	yes
(	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
,	no	no
moveEvent	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
moveSession	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
WmTezSession	no	yes
session	no	yes
=	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
;	no	no
KillQueryContext	no	yes
killQueryContext	no	yes
=	no	no
new	no	no
KillQueryContext	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
destPoolName	no	yes
+	no	no
)	no	no
;	no	no
resetAndQueueKill	no	yes
(	no	no
syncWork	no	yes
.	no	no
toKillQuery	no	yes
,	no	no
killQueryContext	no	yes
,	no	no
toReuse	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

if	no	no
(	no	no
capacityAvailable	no	no
(	no	no
destPoolName	no	yes
)	no	no
)	no	no
{	no	no
Boolean	no	yes
added	no	yes
=	no	no
checkAndAddSessionToAnotherPool	no	yes
(	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
,	no	no
destPoolName	no	yes
,	no	no
poolsToRedistribute	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
added	no	yes
!=	no	no
null	no	no
&&	no	no
added	no	yes
)	no	no
{	no	no
moveSession	yes	yes
.	no	no
future	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
recordMoveEvents	no	yes
.	no	no
put	no	yes
(	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
,	no	no
moveEvent	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
moveSession	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
WmTezSession	no	yes
session	no	yes
=	no	no
moveSession	yes	yes
.	no	no
srcSession	no	yes
;	no	no
KillQueryContext	no	yes
killQueryContext	no	yes
=	no	no
new	no	no
KillQueryContext	no	yes
(	no	no
session	no	yes
,	no	no
+	no	no
destPoolName	no	yes
+	no	no
)	no	no
;	no	no
resetAndQueueKill	no	yes
(	no	no
syncWork	no	yes
.	no	no
toKillQuery	no	yes
,	no	no
killQueryContext	no	yes
,	no	no
toReuse	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
moveSession	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
void	no	no
handleUpdateErrorOnMasterThread	no	no
(	no	no
WmTezSession	no	no
session	no	yes
,	no	no
int	no	no
failedEndpointVersion	no	no
,	no	no
IdentityHashMap	no	no
<	no	no
WmTezSession	no	no
,	no	no
GetRequest	no	no
>	no	no
toReuse	no	no
,	no	no
WmThreadSyncWork	no	no
syncWork	no	no
,	no	no
HashSet	no	no
<	no	no
String	no	no
>	no	no
poolsToRedistribute	no	no
)	no	no
{	no	no
Ref	no	yes
<	no	no
Integer	no	yes
>	no	no
endpointVersion	no	yes
=	no	no
new	no	no
Ref	no	yes
<	no	no
>	no	no
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
AmPluginInfo	no	yes
info	yes	yes
=	no	no
session	no	yes
.	no	no
getAmPluginInfo	no	yes
(	no	no
endpointVersion	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
info	yes	yes
!=	no	no
null	no	no
&&	no	no
endpointVersion	no	yes
.	no	no
value	no	no
>	no	no
failedEndpointVersion	no	no
)	no	no
{	no	no

}	no	no
}	no	no
for	no	no
(	no	no
int	no	no
level	no	yes
=	no	no
0	no	no
;	no	no
level	no	yes
<	no	no
poolsByLevel	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
++	no	no
level	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
WMPool	no	yes
>	no	no
poolsOnLevel	no	yes
=	no	no
poolsByLevel	no	yes
.	no	no
get	no	yes
(	no	no
level	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
WMPool	no	yes
pool	no	yes
:	no	no
poolsOnLevel	no	yes
)	no	no
{	no	no
String	no	yes
fullName	no	yes
=	no	no
pool	no	yes
.	no	no
getPoolPath	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
qp	no	yes
=	no	no
pool	no	yes
.	no	no
getQueryParallelism	no	yes
(	no	no
)	no	no
;	no	no
double	no	no
fraction	no	yes
=	no	no
pool	no	yes
.	no	no
getAllocFraction	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
level	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
parentName	no	yes
=	no	no
fullName	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
fullName	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
POOL_SEPARATOR	no	yes
)	no	no
)	no	no
;	no	no
PoolState	no	yes
parent	no	yes
=	no	no
pools	no	yes
.	no	no
get	no	yes
(	no	no
parentName	no	yes
)	no	no
;	no	no
fraction	no	yes
=	no	no
parent	no	yes
.	no	no
finalFraction	no	yes
*	no	no
fraction	no	yes
;	no	no
parent	no	yes
.	no	no
finalFractionRemaining	no	yes
-=	no	no
fraction	no	yes
;	no	no
}	no	no
PoolState	no	yes
state	yes	yes
=	no	no
oldPools	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
oldPools	no	yes
.	no	no
remove	no	yes
(	no	no
fullName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
state	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
state	yes	yes
=	no	no
new	no	no
PoolState	no	yes
(	no	no
fullName	no	yes
,	no	no
qp	no	yes
,	no	no
fraction	no	yes
,	no	no
pool	no	yes
.	no	no
getSchedulingPolicy	no	yes
(	no	no
)	no	no
,	no	no
metricsSystem	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

state	no	yes
=	no	no
new	no	no
PoolState	no	yes
(	no	no
fullName	no	yes
,	no	no
qp	no	yes
,	no	no
fraction	no	yes
,	no	no
pool	yes	yes
.	no	no
getSchedulingPolicy	no	yes
(	no	no
)	no	no
,	no	no
metricsSystem	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
state	no	yes
.	no	no
update	no	yes
(	no	no
qp	no	yes
,	no	no
fraction	no	yes
,	no	no
syncWork	no	yes
,	no	no
e	no	yes
,	no	no
pool	yes	yes
.	no	no
getSchedulingPolicy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
poolsToRedistribute	no	yes
.	no	no
add	no	yes
(	no	no
fullName	no	yes
)	no	no
;	no	no
}	no	no
state	no	yes
.	no	no
setTriggers	no	yes
(	no	no
new	no	no
LinkedList	no	yes
<	no	no
Trigger	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
state	no	yes
)	no	no
;	no	no
pools	no	yes
.	no	no
put	no	yes
(	no	no
fullName	no	yes
,	no	no
state	no	yes
)	no	no
;	no	no
totalQueryParallelism	no	yes
+=	no	no
qp	no	yes
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
PoolState	no	yes
pool	yes	yes
:	no	no
pools	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pool	yes	yes
.	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pool	yes	yes
.	no	no
metrics	no	yes
.	no	no
setMaxExecutors	no	yes
(	no	no
allocationManager	no	yes
.	no	no
translateAllocationToCpus	no	yes
(	no	no
pool	yes	yes
.	no	no
finalFractionRemaining	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
plan	no	no
!=	no	no
null	no	no
&&	no	no
plan	no	no
.	no	no
isSetTriggers	no	no
(	no	no
)	no	no
&&	no	no
plan	no	no
.	no	no
isSetPoolTriggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Trigger	no	yes
>	no	no
triggers	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
WMTrigger	no	no
trigger	yes	yes
:	no	no
plan	no	no
.	no	no
getTriggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ExecutionTrigger	no	yes
execTrigger	no	yes
=	no	no
ExecutionTrigger	no	yes
.	no	no
fromWMTrigger	no	yes
(	no	no
trigger	yes	yes
)	no	no
;	no	no

}	no	no
state	no	yes
.	no	no
setTriggers	no	yes
(	no	no
new	no	no
LinkedList	no	yes
<	no	no
Trigger	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
state	no	yes
)	no	no
;	no	no
pools	no	yes
.	no	no
put	no	yes
(	no	no
fullName	no	yes
,	no	no
state	no	yes
)	no	no
;	no	no
totalQueryParallelism	yes	yes
+=	no	no
qp	no	yes
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
PoolState	no	yes
pool	no	yes
:	no	no
pools	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pool	no	yes
.	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pool	no	yes
.	no	no
metrics	no	yes
.	no	no
setMaxExecutors	no	yes
(	no	no
allocationManager	no	yes
.	no	no
translateAllocationToCpus	no	yes
(	no	no
pool	no	yes
.	no	no
finalFractionRemaining	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
plan	no	no
!=	no	no
null	no	no
&&	no	no
plan	no	no
.	no	no
isSetTriggers	no	no
(	no	no
)	no	no
&&	no	no
plan	no	no
.	no	no
isSetPoolTriggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Trigger	no	yes
>	no	no
triggers	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
WMTrigger	no	no
trigger	no	yes
:	no	no
plan	no	no
.	no	no
getTriggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ExecutionTrigger	no	yes
execTrigger	no	yes
=	no	no
ExecutionTrigger	no	yes
.	no	no
fromWMTrigger	no	yes
(	no	no
trigger	no	yes
)	no	no
;	no	no
triggers	no	yes
.	no	no
put	no	yes
(	no	no
trigger	no	yes
.	no	no
getTriggerName	no	yes
(	no	no
)	no	no
,	no	no
execTrigger	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
WMPoolTrigger	no	no
poolTrigger	no	yes
:	no	no
plan	no	no
.	no	no
getPoolTriggers	no	no
(	no	no
)	no	no
)	no	no
{	no	no
PoolState	no	yes
pool	no	yes
=	no	no
pools	no	yes
.	no	no
get	no	yes
(	no	no
poolTrigger	no	yes
.	no	no
getPool	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Trigger	no	yes
trigger	no	yes
=	no	no
triggers	no	yes
.	no	no
get	no	yes
(	no	no
poolTrigger	no	yes
.	no	no
getTrigger	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
static	no	no
int	no	no
transferSessionsToDestroy	no	no
(	no	no
Collection	no	no
<	no	no
WmTezSession	no	yes
>	no	no
source	no	yes
,	no	no
List	no	no
<	no	no
WmTezSession	no	yes
>	no	no
toDestroy	no	no
,	no	no
int	no	no
deltaSessions	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
deltaSessions	no	yes
>=	no	no
0	no	no
)	no	no
return	no	no
deltaSessions	no	yes
;	no	no
int	no	no
toTransfer	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
-	no	no
deltaSessions	no	yes
,	no	no
source	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
WmTezSession	no	yes
>	no	no
iter	no	yes
=	no	no
source	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
toTransfer	no	yes
;	no	no
++	no	no
i	no	no
)	no	no
{	no	no
WmTezSession	no	yes
session	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

Future	no	no
<	no	no
Boolean	no	no
>	no	no
applyMoveSessionAsync	no	no
(	no	no
WmTezSession	no	no
srcSession	no	yes
,	no	no
String	no	no
destPoolName	no	yes
)	no	no
{	no	no
currentLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
MoveSession	no	yes
moveSession	yes	yes
;	no	no
try	no	no
{	no	no
moveSession	yes	yes
=	no	no
new	no	no
MoveSession	no	yes
(	no	no
srcSession	no	yes
,	no	no
destPoolName	no	yes
)	no	no
;	no	no
current	no	yes
.	no	no
moveSessions	no	yes
.	no	no
add	no	yes
(	no	no
moveSession	yes	yes
)	no	no
;	no	no

Future	no	no
<	no	no
Boolean	no	no
>	no	no
applyKillSessionAsync	no	no
(	no	no
WmTezSession	no	no
wmTezSession	no	yes
,	no	no
String	no	no
killReason	no	yes
)	no	no
{	no	no
KillQueryContext	no	yes
killQueryContext	yes	yes
;	no	no
currentLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
killQueryContext	yes	yes
=	no	no
new	no	no
KillQueryContext	no	yes
(	no	no
wmTezSession	no	yes
,	no	no
killReason	no	yes
)	no	no
;	no	no
resetAndQueueKill	no	yes
(	no	no
syncWork	no	yes
.	no	no
toKillQuery	no	yes
,	no	no
killQueryContext	yes	yes
,	no	no
current	no	yes
.	no	no
toReuse	no	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
Future	no	no
<	no	no
Boolean	no	yes
>	no	no
addTestEvent	no	no
(	no	no
)	no	no
{	no	no
SettableFuture	no	yes
<	no	no
Boolean	no	yes
>	no	no
testEvent	yes	yes
=	no	no
SettableFuture	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
currentLock	no	yes
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
WmTezSession	no	yes
createSession	no	no
(	no	no
HiveConf	no	no
conf	no	yes
)	no	no
{	no	no
WmTezSession	no	yes
session	yes	yes
=	no	no
createSessionObject	no	yes
(	no	no
TezSessionState	no	yes
.	no	no
makeSessionId	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
session	yes	yes
.	no	no
setQueueName	no	yes
(	no	no
yarnQueue	no	yes
)	no	no
;	no	no
session	yes	yes
.	no	no
setDefault	no	yes
(	no	no
)	no	no
;	no	no

void	no	no
updateTriggers	no	no
(	no	no
final	no	no
WmTezSession	no	no
session	no	yes
)	no	no
{	no	no
WmContext	no	yes
wmContext	yes	yes
=	no	no
session	no	yes
.	no	no
getWmContext	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
poolName	no	yes
=	no	no
session	no	yes
.	no	no
getPoolName	no	yes
(	no	no
)	no	no
;	no	no
PoolState	no	yes
poolState	no	yes
=	no	no
pools	no	yes
.	no	no
get	no	yes
(	no	no
poolName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
wmContext	yes	yes
!=	no	no
null	no	no
&&	no	no
poolState	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
wmContext	yes	yes
.	no	no
addTriggers	no	yes
(	no	no
poolState	no	yes
.	no	no
getTriggers	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

boolean	no	no
isManaged	no	no
(	no	no
MappingInput	no	no
input	yes	yes
)	no	no
{	no	no
UserPoolMapping	no	yes
mapping	no	yes
=	no	no
userPoolMapping	no	yes
;	no	no
if	no	no
(	no	no
mapping	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
mappedPool	yes	yes
=	no	no
mapping	no	yes
.	no	no
mapSessionToPoolName	no	yes
(	no	no
input	yes	yes
,	no	no
allowAnyPool	no	yes
,	no	no
null	no	no
)	no	no
;	no	no

}	no	no
wmContext	no	yes
=	no	no
context	no	yes
.	no	no
getWmContext	no	yes
(	no	no
)	no	no
;	no	no
EnumSet	no	yes
<	no	no
StatusGetOpts	no	yes
>	no	no
opts	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
wmContext	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
desiredCounters	no	yes
=	no	no
wmContext	no	yes
.	no	no
getSubscribedCounters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
desiredCounters	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
desiredCounters	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opts	no	yes
=	no	no
EnumSet	no	yes
.	no	no
of	no	yes
(	no	no
StatusGetOpts	no	yes
.	no	no
GET_COUNTERS	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
status	no	yes
=	no	no
dagClient	no	yes
.	no	no
getDAGStatus	no	yes
(	no	no
opts	no	yes
,	no	no
checkInterval	yes	yes
)	no	no
;	no	no
vertexProgressMap	no	yes
=	no	no
status	no	yes
.	no	no
getVertexProgress	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
vertexNames	no	yes
=	no	no
vertexProgressMap	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
k	no	yes
->	no	no
k	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
wmContext	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
desiredCounters	no	yes
=	no	no
wmContext	no	yes
.	no	no
getSubscribedCounters	no	yes
(	no	no
)	no	no
;	no	no
TezCounters	no	yes
dagCounters	no	yes
=	no	no
status	no	yes
.	no	no
getDAGCounters	no	yes
(	no	no
)	no	no
;	no	no
TezCounters	no	yes
mergedCounters	no	yes
=	no	no
counters	no	yes
==	no	no
null	no	no
?	no	no
dagCounters	no	yes
:	no	no
Utils	no	yes
.	no	no
mergeTezCounters	no	yes
(	no	no
dagCounters	no	yes
,	no	no
counters	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
mergedCounters	no	yes
!=	no	no
null	no	no
&&	no	no
desiredCounters	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
desiredCounters	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
currentCounters	yes	yes
=	no	no
getCounterValues	no	yes
(	no	no
mergedCounters	no	yes
,	no	no
vertexNames	no	yes
,	no	no
vertexProgressMap	no	yes
,	no	no
desiredCounters	no	yes
,	no	no
done	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
firstBatch	no	yes
)	no	no
{	no	no
vectorExtractRow	no	yes
=	no	no
new	no	no
VectorExtractRow	no	yes
(	no	no
)	no	no
;	no	no
vectorExtractRow	no	yes
.	no	no
init	no	yes
(	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
inputObjInspectors	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
vContext	no	yes
.	no	no
getProjectedColumns	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
singleRow	no	yes
=	no	no
new	no	no
Object	no	yes
[	no	no
vectorExtractRow	no	yes
.	no	no
getCount	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
firstBatch	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
ObjectInspector	no	yes
rowInspector	no	yes
=	no	no
inputObjInspectors	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
try	no	no
{	no	no
Writable	no	yes
writableRow	no	yes
;	no	no
if	no	no
(	no	no
batch	no	yes
.	no	no
selectedInUse	no	no
)	no	no
{	no	no
int	no	no
selected	no	yes
[	no	no
]	no	no
=	no	no
batch	no	yes
.	no	no
selected	no	yes
;	no	no
for	no	no
(	no	no
int	no	no
logical	no	yes
=	no	no
0	no	no
;	no	no
logical	no	yes
<	no	no
batch	no	yes
.	no	no
size	no	no
;	no	no
logical	no	yes
++	no	no
)	no	no
{	no	no
int	no	no
batchIndex	no	yes
=	no	no
selected	no	yes
[	no	no
logical	no	yes
]	no	no
;	no	no
vectorExtractRow	no	yes
.	no	no
extractRow	no	yes
(	no	no
batch	no	yes
,	no	no
batchIndex	no	yes
,	no	no
singleRow	no	yes
)	no	no
;	no	no
writableRow	no	yes
=	no	no
serializer	no	yes
.	no	no
serialize	no	yes
(	no	no
singleRow	no	yes
,	no	no
rowInspector	no	yes
)	no	no
;	no	no
writableRow	no	yes
.	no	no
write	no	yes
(	no	no
buffer	yes	yes
)	no	no
;	no	no

int	no	no
selected	no	yes
[	no	no
]	no	no
=	no	no
batch	no	yes
.	no	no
selected	no	yes
;	no	no
for	no	no
(	no	no
int	no	no
logical	no	yes
=	no	no
0	no	no
;	no	no
logical	no	yes
<	no	no
batch	no	yes
.	no	no
size	no	no
;	no	no
logical	no	yes
++	no	no
)	no	no
{	no	no
int	no	no
batchIndex	no	yes
=	no	no
selected	no	yes
[	no	no
logical	no	yes
]	no	no
;	no	no
vectorExtractRow	no	yes
.	no	no
extractRow	no	yes
(	no	no
batch	no	yes
,	no	no
batchIndex	no	yes
,	no	no
singleRow	no	yes
)	no	no
;	no	no
writableRow	no	yes
=	no	no
serializer	no	yes
.	no	no
serialize	no	yes
(	no	no
singleRow	no	yes
,	no	no
rowInspector	no	yes
)	no	no
;	no	no
writableRow	no	yes
.	no	no
write	no	yes
(	no	no
buffer	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
buffer	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
>	no	no
MAX_SIZE	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
buffer	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
hasReachedMaxSize	no	yes
=	no	no
true	no	no
;	no	no
buffer	yes	yes
=	no	no
null	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
int	no	no
batchIndex	no	yes
=	no	no
0	no	no
;	no	no
batchIndex	no	yes
<	no	no
batch	no	yes
.	no	no
size	no	no
;	no	no
batchIndex	no	yes
++	no	no
)	no	no
{	no	no
vectorExtractRow	no	yes
.	no	no
extractRow	no	yes
(	no	no
batch	no	yes
,	no	no
batchIndex	no	yes
,	no	no
singleRow	no	yes
)	no	no
;	no	no
writableRow	no	yes
=	no	no
serializer	no	yes
.	no	no
serialize	no	yes
(	no	no
singleRow	no	yes
,	no	no
rowInspector	no	yes
)	no	no
;	no	no

Class	no	yes
<	no	no
?	no	no
extends	no	no
VectorExpression	no	yes
>	no	no
matchedVe	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
extends	no	no
VectorExpression	no	yes
>	no	no
ve	no	yes
:	no	no
list	no	no
)	no	no
{	no	no
try	no	no
{	no	no
VectorExpression	no	yes
candidateVe	no	yes
=	no	no
ve	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
candidateVe	no	yes
.	no	no
getDescriptor	no	no
(	no	no
)	no	no
.	no	no
matches	no	no
(	no	no
descriptor	yes	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
useCheckedExpressionIfAvailable	no	no
)	no	no
{	no	no
return	no	no
ve	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
candidateVe	no	yes
.	no	no
supportsCheckedExecution	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
ve	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
matchedVe	no	yes
=	no	no
ve	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
ve	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
matchedVe	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
matchedVe	no	yes
;	no	no

VectorExpression	no	yes
candidateVe	no	yes
=	no	no
ve	yes	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
candidateVe	no	yes
.	no	no
getDescriptor	no	no
(	no	no
)	no	no
.	no	no
matches	no	no
(	no	no
descriptor	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
useCheckedExpressionIfAvailable	no	no
)	no	no
{	no	no
return	no	no
ve	yes	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
candidateVe	no	yes
.	no	no
supportsCheckedExecution	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
ve	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
matchedVe	no	yes
=	no	no
ve	yes	yes
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
ve	yes	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
matchedVe	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
matchedVe	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
udf	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
descriptor	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
extends	no	no
VectorExpression	no	yes
>	no	no
ve	yes	yes
:	no	no
list	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
checkTopNFilterEfficiency	no	no
(	no	no
Map	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>	no	no
filters	no	yes
,	no	no
Set	no	no
<	no	no
KeyWrapper	no	yes
>	no	no
disabledPartitions	no	no
,	no	no
float	no	no
efficiencyThreshold	yes	no
,	no	no
Logger	no	no
log	no	no
,	no	no
long	no	no
checkEfficiencyNumRows	no	no
)	no	no
{	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>>	no	no
iterator	no	yes
=	no	no
filters	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>	no	no
each	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
KeyWrapper	no	yes
partitionKey	no	yes
=	no	no
each	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
TopNKeyFilter	no	yes
filter	yes	yes
=	no	no
each	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
checkTopNFilterEfficiency	no	no
(	no	no
Map	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>	no	no
filters	no	yes
,	no	no
Set	no	no
<	no	no
KeyWrapper	no	yes
>	no	no
disabledPartitions	no	no
,	no	no
float	no	no
efficiencyThreshold	no	yes
,	no	no
Logger	no	no
log	no	yes
,	no	no
long	no	no
checkEfficiencyNumRows	no	no
)	no	no
{	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>>	no	no
iterator	no	yes
=	no	no
filters	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
KeyWrapper	no	yes
,	no	no
TopNKeyFilter	no	yes
>	no	no
each	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
KeyWrapper	no	yes
partitionKey	no	yes
=	no	no
each	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
TopNKeyFilter	no	yes
filter	yes	yes
=	no	no
each	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filter	yes	yes
,	no	no
efficiencyThreshold	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
filter	yes	yes
.	no	no
getTotal	no	no
(	no	no
)	no	no
>=	no	no
checkEfficiencyNumRows	no	no
&&	no	no
filter	yes	yes
.	no	no
forwardingRatio	no	no
(	no	no
)	no	no
>=	no	no
efficiencyThreshold	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
closeOp	no	no
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
topNKeyFilters	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TopNKeyFilter	no	yes
filter	yes	yes
=	no	no
topNKeyFilters	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
newChildren	no	yes
.	no	no
addAll	no	yes
(	no	no
childExpr	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
subList	no	yes
(	no	no
1	no	no
,	no	no
childExpr	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
expr	no	yes
.	no	no
setTypeInfo	no	yes
(	no	no
childExpr	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
expr	no	yes
.	no	no
setGenericUDF	no	yes
(	no	no
childExpr	no	yes
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
expr	no	yes
.	no	no
setChildren	no	yes
(	no	no
newChildren	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
childExpressions	no	yes
=	no	no
getChildExpressionsWithImplicitCast	no	yes
(	no	no
expr	no	yes
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
,	no	no
exprDesc	yes	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
,	no	no
exprDesc	yes	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
testVectorAdaptorOverride	no	no
)	no	no
{	no	no
ve	no	yes
=	no	no
getGenericUdfVectorExpression	no	yes
(	no	no
expr	no	yes
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
,	no	no
childExpressions	no	yes
,	no	no
mode	no	yes
,	no	no
exprDesc	yes	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ve	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hiveVectorAdaptorUsageMode	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
switch	no	no
(	no	no
hiveVectorAdaptorUsageMode	no	no
)	no	no
{	no	no
case	no	no
NONE	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
mode	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
case	no	no
CHOSEN	no	no
:	no	no
if	no	no
(	no	no
isNonVectorizedPathUDF	no	no
(	no	no
expr	no	yes
,	no	no
mode	no	yes
)	no	no
)	no	no
{	no	no
ve	no	yes
=	no	no
getCustomUDFExpression	no	yes
(	no	no
expr	no	yes
,	no	no
mode	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
mode	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no

switch	no	no
(	no	no
hiveVectorAdaptorUsageMode	no	no
)	no	no
{	no	no
case	no	no
NONE	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
mode	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
case	no	no
CHOSEN	no	no
:	no	no
if	no	no
(	no	no
isNonVectorizedPathUDF	no	no
(	no	no
expr	no	yes
,	no	no
mode	no	yes
)	no	no
)	no	no
{	no	no
ve	yes	yes
=	no	no
getCustomUDFExpression	no	yes
(	no	no
expr	no	yes
,	no	no
mode	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
mode	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
ALL	no	no
:	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
ve	yes	yes
=	no	no
getCustomUDFExpression	no	yes
(	no	no
expr	no	yes
,	no	no
mode	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
RuntimeException	no	no
(	no	no
+	no	no
hiveVectorAdaptorUsageMode	no	no
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ve	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
mode	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprDesc	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
exprDesc	yes	yes
instanceof	no	no
ExprNodeConstantDesc	no	no
)	no	no
{	no	no

break	no	no
;	no	no
case	no	no
INT	no	no
:	no	no
rawDecimal	no	no
=	no	no
HiveDecimal	no	no
.	no	no
create	no	no
(	no	no
(	no	no
Integer	no	no
)	no	no
scalar	yes	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
LONG	no	no
:	no	no
rawDecimal	no	no
=	no	no
HiveDecimal	no	no
.	no	no
create	no	no
(	no	no
(	no	no
Long	no	no
)	no	no
scalar	yes	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
STRING	no	no
:	no	no
rawDecimal	no	no
=	no	no
HiveDecimal	no	no
.	no	no
create	no	no
(	no	no
(	no	no
String	no	no
)	no	no
scalar	yes	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
CHAR	no	no
:	no	no
rawDecimal	no	no
=	no	no
HiveDecimal	no	no
.	no	no
create	no	no
(	no	no
(	no	no
(	no	no
HiveChar	no	no
)	no	no
scalar	yes	no
)	no	no
.	no	no
getStrippedValue	no	no
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
VARCHAR	no	no
:	no	no
rawDecimal	no	no
=	no	no
HiveDecimal	no	no
.	no	no
create	no	no
(	no	no
(	no	no
(	no	no
HiveVarchar	no	no
)	no	no
scalar	yes	no
)	no	no
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
DECIMAL	no	no
:	no	no
rawDecimal	no	no
=	no	no
(	no	no
HiveDecimal	no	no
)	no	no
scalar	yes	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	no
(	no	no
+	no	no
primitiveCategory	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
rawDecimal	no	no
==	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
finish	no	no
(	no	no
AggregationBuffer	no	no
myagg	no	yes
,	no	no
boolean	no	no
aborted	no	no
)	no	no
{	no	no
VectorUDAFBloomFilterMerge	no	yes
.	no	no
Aggregation	no	yes
agg	yes	yes
=	no	no
(	no	no
VectorUDAFBloomFilterMerge	no	yes
.	no	no
Aggregation	no	yes
)	no	no
myagg	no	yes
;	no	no
if	no	no
(	no	no
agg	yes	yes
.	no	no
numThreads	no	no
>	no	no
0	no	no
)	no	no
{	no	no

private	no	no
void	no	no
initValue	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
bloomFilter	no	no
=	no	no
(	no	no
BloomKFilter	no	no
)	no	no
runtimeCache	no	no
.	no	no
retrieve	no	no
(	no	no
bloomFilterDynamicValue	yes	yes
.	no	no
getId	no	no
(	no	no
)	no	no
,	no	no
new	no	no
Callable	no	no
<	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
InputStream	no	yes
in	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Object	no	yes
val	no	yes
=	no	no
bloomFilterDynamicValue	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
MATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
MATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
joinResult	yes	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
key	no	yes
,	no	no
hashSetResults	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no

haveSaveKey	no	yes
=	no	no
true	no	no
;	no	no
saveKey	no	yes
=	no	no
currentKey	no	yes
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
currentKey	no	yes
<	no	no
min	no	no
||	no	no
currentKey	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
saveJoinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
currentKey	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
saveJoinResult	no	yes
=	no	no
inverseResultForAntiJoin	no	yes
(	no	no
saveJoinResult	no	yes
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	no
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	yes
:	no	no
break	no	no
;	no	no

allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
batch	no	yes
.	no	no
cols	no	no
[	no	no
bigTableKeyColumnMap	no	no
[	no	no
i	no	no
]	no	no
]	no	no
.	no	no
isRepeating	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
keyVectorSerializeWrite	no	yes
.	no	no
setOutput	no	yes
(	no	no
currentKeyOutput	no	yes
)	no	no
;	no	no
keyVectorSerializeWrite	no	yes
.	no	no
serializeWrite	no	yes
(	no	no
batch	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
keyVectorSerializeWrite	no	yes
.	no	no
getHasAnyNulls	no	no
(	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
MATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
currentKeyOutput	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
;	no	no

temp	no	yes
=	no	no
saveKeyOutput	no	yes
;	no	no
saveKeyOutput	no	yes
=	no	no
currentKeyOutput	no	yes
;	no	no
currentKeyOutput	no	yes
=	no	no
temp	no	yes
;	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
saveKeyOutput	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
saveKeyOutput	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
0	no	no
,	no	no
keyLength	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
inverseResultForAntiJoin	no	yes
(	no	no
saveJoinResult	no	yes
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	no
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no

ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
BytesColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
start	no	yes
=	no	no
joinColVector	no	yes
.	no	no
start	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
length	no	yes
=	no	no
joinColVector	no	yes
.	no	no
length	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
MATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
joinResult	yes	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
keyStart	no	yes
,	no	no
keyLength	no	yes
,	no	no
hashSetResults	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no

int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
batchIndex	no	yes
]	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
keyStart	no	yes
,	no	no
keyLength	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
inverseResultForAntiJoin	no	yes
(	no	no
saveJoinResult	no	yes
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no

protected	no	no
void	no	no
setupVOutContext	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
outputColumnNames	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
allocateOverflowBatchColumnVector	no	no
(	no	no
VectorizedRowBatch	no	no
overflowBatch	no	yes
,	no	no
int	no	no
outputColumn	yes	yes
,	no	no
String	no	no
typeName	no	yes
,	no	no
DataTypePhysicalVariation	no	no
dataTypePhysicalVariation	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
overflowBatch	no	yes
.	no	no
cols	no	yes
[	no	no
outputColumn	yes	yes
]	no	no
==	no	no
null	no	no
)	no	no
{	no	no
typeName	no	yes
=	no	no
VectorizationContext	no	yes
.	no	no
mapTypeNameSynonyms	no	yes
(	no	no
typeName	no	yes
)	no	no
;	no	no
TypeInfo	no	yes
typeInfo	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromTypeString	no	yes
(	no	no
typeName	no	yes
)	no	no
;	no	no
overflowBatch	no	yes
.	no	no
cols	no	yes
[	no	no
outputColumn	yes	yes
]	no	no
=	no	no
VectorizedBatchUtil	no	yes
.	no	no
createColumnVector	no	yes
(	no	no
typeInfo	no	yes
,	no	no
dataTypePhysicalVariation	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

protected	no	no
void	no	no
displayBatchColumns	no	no
(	no	no
VectorizedRowBatch	no	no
batch	yes	no
,	no	no
String	no	no
batchName	yes	no
)	no	no
{	no	no

protected	no	no
void	no	no
displayBatchColumns	no	no
(	no	no
VectorizedRowBatch	no	no
batch	no	yes
,	no	no
String	no	no
batchName	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
getLoggingPrefix	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
batchName	yes	yes
+	no	no
+	no	no
batch	no	yes
.	no	no
numCols	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
column	yes	no
=	no	no
0	no	no
;	no	no
column	yes	no
<	no	no
batch	no	yes
.	no	no
numCols	no	yes
;	no	no
column	yes	no
++	no	no
)	no	no
{	no	no

int	no	no
length	no	yes
=	no	no
bigTable	no	yes
.	no	no
currentLength	no	yes
(	no	no
)	no	no
;	no	no
bigTableVectorDeserializeRow	no	yes
.	no	no
setBytes	no	yes
(	no	no
bytes	no	yes
,	no	no
offset	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
bigTableVectorDeserializeRow	no	yes
.	no	no
deserialize	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
bigTableVectorDeserializeRow	no	yes
.	no	no
getDetailedReadPositionString	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
==	no	no
VectorizedRowBatch	no	no
.	no	no
DEFAULT_SIZE	no	no
)	no	no
{	no	no
process	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
posBigTable	no	yes
)	no	no
;	no	no
spillReplayBatch	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
batchCount	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
process	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
posBigTable	no	yes
)	no	no
;	no	no
spillReplayBatch	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
batchCount	no	yes
++	no	no
;	no	no

bigTableVectorDeserializeRow	no	yes
.	no	no
deserialize	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
bigTableVectorDeserializeRow	no	yes
.	no	no
getDetailedReadPositionString	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
==	no	no
VectorizedRowBatch	no	no
.	no	no
DEFAULT_SIZE	no	no
)	no	no
{	no	no
process	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
posBigTable	no	yes
)	no	no
;	no	no
spillReplayBatch	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
batchCount	yes	yes
++	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
spillReplayBatch	no	yes
.	no	no
size	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
process	no	yes
(	no	no
spillReplayBatch	no	yes
,	no	no
posBigTable	no	yes
)	no	no
;	no	no
spillReplayBatch	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
;	no	no
batchCount	yes	yes
++	no	no
;	no	no
}	no	no
bigTable	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
CLASS_NAME	yes	yes
+	no	no
+	no	no
e	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
bigTableKeyExpressions	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
joinResult	no	yes
=	no	no
hashMultiSet	no	yes
.	no	no
contains	no	yes
(	no	no
key	no	yes
,	no	no
hashMultiSetResults	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
CLASS_NAME	yes	yes
+	no	no
+	no	no
batchCounter	yes	yes
+	no	no
+	no	no
joinResult	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
saveJoinResult	no	yes
=	no	no
hashMultiSet	no	yes
.	no	no
contains	no	yes
(	no	no
currentKey	no	yes
,	no	no
hashMultiSetResults	yes	yes
[	no	no
hashMultiSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesValueCounts	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMultiSetResults	yes	yes
[	no	no
hashMultiSetResultCount	yes	yes
]	no	no
.	no	no
count	no	no
(	no	no
)	no	no
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMultiSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
batch	no	yes
.	no	no
cols	no	no
[	no	no
bigTableKeyColumnMap	no	no
[	no	no
i	no	no
]	no	no
]	no	no
.	no	no
isRepeating	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
keyVectorSerializeWrite	no	yes
.	no	no
setOutput	no	yes
(	no	no
currentKeyOutput	no	yes
)	no	no
;	no	no
keyVectorSerializeWrite	no	yes
.	no	no
serializeWrite	no	yes
(	no	no
batch	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
keyVectorSerializeWrite	no	yes
.	no	no
getHasAnyNulls	no	no
(	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

int	no	no
keyLength	no	yes
=	no	no
saveKeyOutput	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
hashMultiSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
0	no	no
,	no	no
keyLength	no	yes
,	no	no
hashMultiSetResults	yes	yes
[	no	no
hashMultiSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesValueCounts	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMultiSetResults	yes	yes
[	no	no
hashMultiSetResultCount	yes	yes
]	no	no
.	no	no
count	no	no
(	no	no
)	no	no
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMultiSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no

ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
int	no	no
numSel	no	yes
=	no	no
0	no	no
;	no	no
BytesColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
start	no	yes
=	no	no
joinColVector	no	yes
.	no	no
start	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
length	no	yes
=	no	no
joinColVector	no	yes
.	no	no
length	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
0	no	no
]	no	no
;	no	no

case	no	no
MATCH	no	no
:	no	no
equalKeySeriesValueCounts	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMultiSetResults	yes	no
[	no	no
hashMultiSetResultCount	yes	yes
]	no	no
.	no	no
count	no	no
(	no	no
)	no	no
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMultiSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
++	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no

if	no	no
(	no	no
bigTableKeyExpressions	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
joinResult	no	yes
=	no	no
hashMap	no	yes
.	no	no
lookup	no	yes
(	no	no
key	no	yes
,	no	no
hashMapResults	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
CLASS_NAME	yes	yes
+	no	no
+	no	no
batchCounter	yes	yes
+	no	no
+	no	no
joinResult	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

saveJoinResult	no	yes
=	no	no
hashMap	no	yes
.	no	no
lookup	no	yes
(	no	no
currentKey	no	yes
,	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesHashMapResultIndices	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesIsSingleValue	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
.	no	no
isSingleRow	no	yes
(	no	no
)	no	no
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
batch	no	yes
.	no	no
cols	no	no
[	no	no
bigTableKeyColumnMap	no	no
[	no	no
i	no	no
]	no	no
]	no	no
.	no	no
isRepeating	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
keyVectorSerializeWrite	no	yes
.	no	no
setOutput	no	yes
(	no	no
currentKeyOutput	no	yes
)	no	no
;	no	no
keyVectorSerializeWrite	no	yes
.	no	no
serializeWrite	no	yes
(	no	no
batch	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
keyVectorSerializeWrite	no	yes
.	no	no
getHasAnyNulls	no	no
(	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesHashMapResultIndices	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesIsSingleValue	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
.	no	no
isSingleRow	no	yes
(	no	no
)	no	no
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
++	no	no
;	no	no

for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
BytesColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
start	no	yes
=	no	no
joinColVector	no	yes
.	no	no
start	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
length	no	yes
=	no	no
joinColVector	no	yes
.	no	no
length	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
0	no	no
]	no	no
;	no	no

equalKeySeriesIsSingleValue	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
.	no	no
isSingleRow	no	yes
(	no	no
)	no	no
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
++	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no

if	no	no
(	no	no
bigTableKeyExpressions	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
LongColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
LongColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
long	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
key	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
key	no	yes
<	no	no
min	no	no
||	no	no
key	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
joinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
joinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
key	no	yes
,	no	no
hashSetResults	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
CLASS_NAME	yes	yes
+	no	no
+	no	no
batchCounter	yes	yes
+	no	no
+	no	no
joinResult	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

else	no	no
{	no	no
haveSaveKey	no	yes
=	no	no
true	no	no
;	no	no
saveKey	no	yes
=	no	no
currentKey	no	yes
;	no	no
if	no	no
(	no	no
useMinMax	no	no
&&	no	no
(	no	no
currentKey	no	yes
<	no	no
min	no	no
||	no	no
currentKey	no	yes
>	no	no
max	no	no
)	no	no
)	no	no
{	no	no
saveJoinResult	no	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
currentKey	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	no
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	yes
:	no	no
break	no	no
;	no	no

if	no	no
(	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
bigTableKeyColumnMap	no	no
.	no	no
length	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
batch	no	yes
.	no	no
cols	no	no
[	no	no
bigTableKeyColumnMap	no	no
[	no	no
i	no	no
]	no	no
]	no	no
.	no	no
isRepeating	no	no
)	no	no
{	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
keyVectorSerializeWrite	no	yes
.	no	no
setOutput	no	yes
(	no	no
currentKeyOutput	no	yes
)	no	no
;	no	no
keyVectorSerializeWrite	no	yes
.	no	no
serializeWrite	no	yes
(	no	no
batch	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
keyVectorSerializeWrite	no	yes
.	no	no
getHasAnyNulls	no	no
(	no	no
)	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

haveSaveKey	no	yes
=	no	no
true	no	no
;	no	no
temp	no	yes
=	no	no
saveKeyOutput	no	yes
;	no	no
saveKeyOutput	no	yes
=	no	no
currentKeyOutput	no	yes
;	no	no
currentKeyOutput	no	yes
=	no	no
temp	no	yes
;	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
saveKeyOutput	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
saveKeyOutput	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
0	no	no
,	no	no
keyLength	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	no
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no

for	no	no
(	no	no
VectorExpression	no	no
ve	no	yes
:	no	no
bigTableKeyExpressions	no	no
)	no	no
{	no	no
ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
BytesColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
start	no	yes
=	no	no
joinColVector	no	yes
.	no	no
start	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
length	no	yes
=	no	no
joinColVector	no	yes
.	no	no
length	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
0	no	no
]	no	no
;	no	no

int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
batchIndex	no	yes
]	no	no
;	no	no
int	no	no
keyLength	no	yes
=	no	no
length	no	yes
[	no	no
batchIndex	no	yes
]	no	no
;	no	no
saveJoinResult	no	yes
=	no	no
hashSet	no	yes
.	no	no
contains	no	yes
(	no	no
keyBytes	no	yes
,	no	no
keyStart	no	yes
,	no	no
keyLength	no	yes
,	no	no
hashSetResults	yes	yes
[	no	no
hashSetResultCount	yes	yes
]	no	no
)	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashSetResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	yes
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
allMatchs	yes	no
[	no	no
allMatchCount	yes	no
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no

int	no	no
noMatchCount	yes	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
spillCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
int	no	no
nonSpillCount	no	yes
=	no	no
subtractFromInputSelected	no	yes
(	no	no
inputSelectedInUse	no	yes
,	no	no
inputLogicalSize	no	yes
,	no	no
spills	no	yes
,	no	no
spillCount	no	yes
,	no	no
nonSpills	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
intArrayToRangesString	no	yes
(	no	no
nonSpills	no	yes
,	no	no
nonSpillCount	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
bigTableValueExpressions	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
doValueExpr	no	yes
(	no	no
batch	no	yes
,	no	no
nonSpills	no	yes
,	no	no
nonSpillCount	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
atLeastOneNonMatch	no	no
)	no	no
{	no	no
noMatchCount	yes	yes
=	no	no
subtract	no	yes
(	no	no
nonSpills	no	yes
,	no	no
nonSpillCount	no	yes
,	no	no
allMatchs	no	yes
,	no	no
allMatchCount	no	yes
,	no	no
noMatchs	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
intArrayToRangesString	no	yes
(	no	no
noMatchs	yes	yes
,	no	no
noMatchCount	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
doValueExprOnInputSelected	no	yes
(	no	no
batch	no	yes
,	no	no
inputSelectedInUse	no	yes
,	no	no
inputLogicalSize	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
atLeastOneNonMatch	no	no
)	no	no
{	no	no
noMatchCount	yes	yes
=	no	no
subtractFromInputSelected	no	yes
(	no	no
inputSelectedInUse	no	yes
,	no	no
inputLogicalSize	no	yes
,	no	no
allMatchs	no	yes
,	no	no
allMatchCount	no	yes
,	no	no
noMatchs	yes	yes
)	no	no
;	no	no

else	no	no
{	no	no
doValueExprOnInputSelected	no	yes
(	no	no
batch	yes	yes
,	no	no
inputSelectedInUse	no	yes
,	no	no
inputLogicalSize	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
atLeastOneNonMatch	no	no
)	no	no
{	no	no
noMatchCount	no	yes
=	no	no
subtractFromInputSelected	no	yes
(	no	no
inputSelectedInUse	no	yes
,	no	no
inputLogicalSize	no	yes
,	no	no
allMatchs	no	yes
,	no	no
allMatchCount	no	yes
,	no	no
noMatchs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
intArrayToRangesString	no	yes
(	no	no
noMatchs	no	yes
,	no	no
noMatchCount	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
allMatchCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
int	no	no
numSel	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
equalKeySeriesCount	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	no
hashMapResultIndex	no	yes
=	no	no
equalKeySeriesHashMapResultIndices	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
VectorMapJoinHashMapResult	no	yes
hashMapResult	no	yes
=	no	no
hashMapResults	no	yes
[	no	no
hashMapResultIndex	no	yes
]	no	no
;	no	no
int	no	no
allMatchesIndex	no	yes
=	no	no
equalKeySeriesAllMatchIndices	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
boolean	no	no
isSingleValue	no	yes
=	no	no
equalKeySeriesIsSingleValue	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
int	no	no
duplicateCount	no	yes
=	no	no
equalKeySeriesDuplicateCounts	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
isSingleValue	no	yes
)	no	no
{	no	no

numSel	no	yes
=	no	no
generateHashMapResultSingleValue	no	yes
(	no	no
batch	yes	yes
,	no	no
hashMapResult	no	yes
,	no	no
allMatchs	no	yes
,	no	no
allMatchesIndex	no	yes
,	no	no
duplicateCount	no	yes
,	no	no
numSel	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
generateHashMapResultMultiValue	no	yes
(	no	no
batch	yes	yes
,	no	no
hashMapResult	no	yes
,	no	no
allMatchs	no	yes
,	no	no
allMatchesIndex	no	yes
,	no	no
duplicateCount	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
batch	yes	yes
.	no	no
size	no	yes
=	no	no
numSel	no	yes
;	no	no
batch	yes	yes
.	no	no
selectedInUse	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
intArrayToRangesString	no	yes
(	no	no
batch	yes	yes
.	no	no
selected	no	yes
,	no	no
batch	yes	yes
.	no	no
size	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
batch	yes	yes
.	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
if	no	no
(	no	no
noMatchCount	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
batch	yes	yes
.	no	no
size	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
generateOuterNulls	no	yes
(	no	no
batch	yes	yes
,	no	no
noMatchs	no	yes
,	no	no
noMatchCount	no	yes
)	no	no
;	no	no
int	no	no
mergeCount	no	yes
=	no	no
sortMerge	no	yes
(	no	no
noMatchs	no	yes
,	no	no
noMatchCount	no	yes
,	no	no
batch	yes	yes
.	no	no
selected	no	yes
,	no	no
batch	yes	yes
.	no	no
size	no	yes
,	no	no
merged	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
intArrayToRangesString	no	yes
(	no	no
merged	no	yes
,	no	no
mergeCount	no	yes
)	no	no
)	no	no
;	no	no

case	no	no
MATCH	no	no
:	no	no
equalKeySeriesHashMapResultIndices	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesIsSingleValue	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
.	no	no
isSingleRow	no	yes
(	no	no
)	no	no
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
atLeastOneNonMatch	yes	no
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
++	no	no
;	no	no

switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesHashMapResultIndices	yes	no
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
equalKeySeriesAllMatchIndices	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
allMatchCount	yes	yes
;	no	no
equalKeySeriesIsSingleValue	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
hashMapResults	yes	yes
[	no	no
hashMapResultCount	yes	yes
]	no	no
.	no	no
isSingleRow	no	yes
(	no	no
)	no	no
;	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
atLeastOneNonMatch	yes	no
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no

ve	no	yes
.	no	no
evaluate	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
BytesColumnVector	no	yes
joinColVector	no	yes
=	no	no
(	no	no
BytesColumnVector	no	yes
)	no	no
batch	no	yes
.	no	no
cols	no	yes
[	no	no
singleJoinColumn	no	yes
]	no	no
;	no	no
byte	no	no
[	no	no
]	no	no
[	no	no
]	no	no
vector	no	yes
=	no	no
joinColVector	no	yes
.	no	no
vector	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
start	no	yes
=	no	no
joinColVector	no	yes
.	no	no
start	no	yes
;	no	no
int	no	no
[	no	no
]	no	no
length	no	yes
=	no	no
joinColVector	no	yes
.	no	no
length	no	yes
;	no	no
boolean	no	no
allKeyInputColumnsRepeating	no	yes
=	no	no
joinColVector	no	yes
.	no	no
isRepeating	no	yes
;	no	no
if	no	no
(	no	no
allKeyInputColumnsRepeating	no	yes
)	no	no
{	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
joinResult	yes	yes
;	no	no
if	no	no
(	no	no
batch	no	yes
.	no	no
size	no	no
==	no	no
0	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
joinColVector	no	yes
.	no	no
noNulls	no	no
&&	no	no
joinColVector	no	yes
.	no	no
isNull	no	no
[	no	no
0	no	no
]	no	no
)	no	no
{	no	no
joinResult	yes	yes
=	no	no
JoinUtil	no	yes
.	no	no
JoinResult	no	yes
.	no	no
NOMATCH	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
keyBytes	no	yes
=	no	no
vector	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
int	no	no
keyStart	no	yes
=	no	no
start	no	yes
[	no	no
0	no	no
]	no	no
;	no	no

equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
=	no	no
1	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
spillHashMapResultIndices	yes	yes
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
hashMapResultCount	yes	yes
;	no	no
spillCount	yes	yes
++	no	no
;	no	no
break	no	no
;	no	no
case	no	no
NOMATCH	no	no
:	no	no
atLeastOneNonMatch	yes	no
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
saveJoinResult	no	no
)	no	no
{	no	no
case	no	no
MATCH	no	no
:	no	no
equalKeySeriesDuplicateCounts	yes	yes
[	no	no
equalKeySeriesCount	yes	yes
]	no	no
++	no	no
;	no	no
allMatchs	yes	yes
[	no	no
allMatchCount	yes	yes
++	no	no
]	no	no
=	no	no
batchIndex	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
SPILL	no	no
:	no	no
spills	yes	no
[	no	no
spillCount	yes	yes
]	no	no
=	no	no
batchIndex	no	yes
;	no	no

boolean	no	no
isNewKey	no	yes
;	no	no
long	no	no
refWord	no	yes
;	no	no
final	no	no
long	no	no
partialHashCode	no	yes
=	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
extractPartialHashCode	no	yes
(	no	no
hashCode	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
refWord	no	yes
=	no	no
slots	no	yes
[	no	no
slot	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
refWord	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
getPartialHashCodeFromRefWord	no	no
(	no	no
refWord	no	yes
)	no	no
==	no	no
partialHashCode	no	yes
&&	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
equalKey	no	no
(	no	no
refWord	no	yes
,	no	no
keyBytes	no	no
,	no	no
keyStart	no	no
,	no	no
keyLength	no	no
,	no	no
writeBuffers	no	no
,	no	no
unsafeReadPos	no	no
)	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
++	no	no
metricPutConflict	no	yes
;	no	no
probeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
slot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
probeSlot	no	yes
&	no	no
logicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
largestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

boolean	no	no
isNewKey	no	yes
;	no	no
long	no	no
refWord	no	yes
;	no	no
final	no	no
long	no	no
partialHashCode	no	yes
=	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
extractPartialHashCode	no	yes
(	no	no
hashCode	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
refWord	no	yes
=	no	no
slots	no	yes
[	no	no
slot	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
refWord	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
getPartialHashCodeFromRefWord	no	no
(	no	no
refWord	no	yes
)	no	no
==	no	no
partialHashCode	no	yes
&&	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
equalKey	no	no
(	no	no
refWord	no	yes
,	no	no
keyBytes	no	no
,	no	no
keyStart	no	no
,	no	no
keyLength	no	no
,	no	no
writeBuffers	no	no
,	no	no
unsafeReadPos	no	no
)	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
++	no	no
metricPutConflict	no	yes
;	no	no
probeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
slot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
probeSlot	no	yes
&	no	no
logicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
largestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

boolean	no	no
isNewKey	no	yes
;	no	no
long	no	no
refWord	no	yes
;	no	no
final	no	no
long	no	no
partialHashCode	no	yes
=	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
extractPartialHashCode	no	yes
(	no	no
hashCode	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
refWord	no	yes
=	no	no
slots	no	yes
[	no	no
slot	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
refWord	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
getPartialHashCodeFromRefWord	no	no
(	no	no
refWord	no	yes
)	no	no
==	no	no
partialHashCode	no	yes
&&	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
equalKey	no	no
(	no	no
refWord	no	yes
,	no	no
keyBytes	no	no
,	no	no
keyStart	no	no
,	no	no
keyLength	no	no
,	no	no
writeBuffers	no	no
,	no	no
unsafeReadPos	no	no
)	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
++	no	no
metricPutConflict	no	yes
;	no	no
probeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
slot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
probeSlot	no	yes
&	no	no
logicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
largestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

for	no	no
(	no	no
int	no	no
slot	no	yes
=	no	no
0	no	no
;	no	no
slot	no	yes
<	no	no
logicalHashBucketCount	no	no
;	no	no
slot	no	yes
++	no	no
)	no	no
{	no	no
final	no	no
long	no	no
refWord	no	yes
=	no	no
slots	no	yes
[	no	no
slot	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
refWord	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
final	no	no
long	no	no
hashCode	no	yes
=	no	no
VectorMapJoinFastBytesHashKeyRef	no	yes
.	no	no
calculateHashCode	no	yes
(	no	no
refWord	no	yes
,	no	no
writeBuffers	no	yes
,	no	no
unsafeReadPos	no	yes
)	no	no
;	no	no
int	no	no
intHashCode	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
hashCode	no	yes
;	no	no
int	no	no
newSlot	no	yes
=	no	no
intHashCode	no	yes
&	no	no
newLogicalHashBucketMask	no	yes
;	no	no
long	no	no
newProbeSlot	no	yes
=	no	no
newSlot	no	yes
;	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
if	no	no
(	no	no
newSlots	no	no
[	no	no
newSlot	no	yes
]	no	no
==	no	no
0	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
++	no	no
newMetricPutConflict	no	yes
;	no	no
newProbeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
newSlot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
newProbeSlot	no	yes
&	no	no
newLogicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newLargestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

Map	no	yes
<	no	no
Integer	no	yes
,	no	no
String	no	yes
>	no	no
parentToInput	no	yes
=	no	no
desc	no	yes
.	no	no
getParentToInput	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
Long	no	yes
>	no	no
parentKeyCounts	no	yes
=	no	no
desc	no	yes
.	no	no
getParentKeyCounts	no	yes
(	no	no
)	no	no
;	no	no
MemoryMonitorInfo	no	yes
memoryMonitorInfo	yes	yes
=	no	no
desc	no	yes
.	no	no
getMemoryMonitorInfo	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
doMemCheck	no	yes
=	no	no
false	no	no
;	no	no
long	no	no
effectiveThreshold	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
memoryMonitorInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
effectiveThreshold	no	yes
=	no	no
memoryMonitorInfo	yes	yes
.	no	no
getEffectiveThreshold	no	yes
(	no	no
desc	no	yes
.	no	no
getMaxMemoryAvailable	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
LlapDaemonInfo	no	no
.	no	no
INSTANCE	no	no
.	no	no
isLlap	no	no
(	no	no
)	no	no
)	no	no
{	no	no
memoryMonitorInfo	yes	yes
.	no	no
setLlap	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
memoryMonitorInfo	yes	yes
.	no	no
doMemoryMonitoring	no	no
(	no	no
)	no	no
)	no	no
{	no	no
doMemCheck	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
memoryMonitorInfo	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
doMemCheck	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
mapJoinTables	no	no
.	no	no
length	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
desc	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
long	no	no
numEntries	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
inputName	no	yes
=	no	no
parentToInput	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
LogicalInput	no	yes
input	no	yes
=	no	no
tezContext	no	yes
.	no	no
getInput	no	yes
(	no	no
inputName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
input	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
tezContext	no	yes
.	no	no
getTezProcessorContext	no	yes
(	no	no
)	no	no
.	no	no
waitForAnyInputReady	no	yes
(	no	no
Collections	no	yes
.	no	no
<	no	no
Input	no	yes
>	no	no
singletonList	no	yes
(	no	no
input	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
KeyValueReader	no	yes
kvReader	no	yes
=	no	no
(	no	no
KeyValueReader	no	yes
)	no	no
input	no	yes
.	no	no
getReader	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
keyCountObj	no	yes
=	no	no
parentKeyCounts	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
long	no	no
estKeyCount	no	yes
=	no	no
(	no	no
keyCountObj	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
keyCountObj	no	yes
;	no	no

if	no	no
(	no	no
pos	yes	yes
==	no	no
desc	no	no
.	no	no
getPosBigTable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
long	no	no
numEntries	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
inputName	yes	yes
=	no	no
parentToInput	no	yes
.	no	no
get	no	yes
(	no	no
pos	yes	yes
)	no	no
;	no	no
LogicalInput	no	yes
input	no	yes
=	no	no
tezContext	no	yes
.	no	no
getInput	no	yes
(	no	no
inputName	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
input	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
tezContext	no	yes
.	no	no
getTezProcessorContext	no	yes
(	no	no
)	no	no
.	no	no
waitForAnyInputReady	no	yes
(	no	no
Collections	no	yes
.	no	no
<	no	no
Input	no	yes
>	no	no
singletonList	no	yes
(	no	no
input	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
KeyValueReader	no	yes
kvReader	no	yes
=	no	no
(	no	no
KeyValueReader	no	yes
)	no	no
input	no	yes
.	no	no
getReader	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
keyCountObj	no	yes
=	no	no
parentKeyCounts	no	yes
.	no	no
get	no	yes
(	no	no
pos	yes	yes
)	no	no
;	no	no
long	no	no
estKeyCount	yes	yes
=	no	no
(	no	no
keyCountObj	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
keyCountObj	no	yes
;	no	no
long	no	no
inputRecords	no	yes
=	no	no
-	no	no
1	no	no
;	no	no

KeyValueReader	no	yes
kvReader	no	yes
=	no	no
(	no	no
KeyValueReader	no	yes
)	no	no
input	no	yes
.	no	no
getReader	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
keyCountObj	no	yes
=	no	no
parentKeyCounts	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
long	no	no
estKeyCount	no	yes
=	no	no
(	no	no
keyCountObj	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
keyCountObj	no	yes
;	no	no
long	no	no
inputRecords	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
try	no	no
{	no	no
inputRecords	no	yes
=	no	no
(	no	no
(	no	no
AbstractLogicalInput	no	yes
)	no	no
input	no	yes
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getCounters	no	yes
(	no	no
)	no	no
.	no	no
findCounter	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
keyCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
estKeyCount	no	yes
,	no	no
inputRecords	no	yes
)	no	no
;	no	no
VectorMapJoinFastTableContainer	no	yes
vectorMapJoinFastTableContainer	no	yes
=	no	no
new	no	no
VectorMapJoinFastTableContainer	no	yes
(	no	no
desc	no	yes
,	no	no
hconf	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
inputName	yes	yes
,	no	no
cacheKey	no	yes
,	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
pos	no	yes
,	no	no
estKeyCount	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
setSerde	no	yes
(	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
kvReader	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
putRow	no	yes
(	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentKey	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
keyCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
estKeyCount	no	yes
,	no	no
inputRecords	no	yes
)	no	no
;	no	no
VectorMapJoinFastTableContainer	no	yes
vectorMapJoinFastTableContainer	yes	yes
=	no	no
new	no	no
VectorMapJoinFastTableContainer	no	yes
(	no	no
desc	no	yes
,	no	no
hconf	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
inputName	yes	yes
,	no	no
cacheKey	yes	yes
,	no	no
vectorMapJoinFastTableContainer	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
pos	no	yes
,	no	no
estKeyCount	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
vectorMapJoinFastTableContainer	yes	yes
.	no	no
setSerde	no	yes
(	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
kvReader	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
vectorMapJoinFastTableContainer	yes	yes
.	no	no
putRow	no	yes
(	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentKey	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
numEntries	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
doMemCheck	no	no
&&	no	no
(	no	no
numEntries	yes	yes
%	no	no
memoryMonitorInfo	no	yes
.	no	no
getMemoryCheckInterval	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
final	no	no
long	no	no
estMemUsage	no	yes
=	no	no
vectorMapJoinFastTableContainer	yes	yes
.	no	no
getEstimatedMemorySize	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
estMemUsage	no	yes
>	no	no
effectiveThreshold	no	yes
)	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
inputName	yes	yes
+	no	no
+	no	no
numEntries	yes	yes
+	no	no
+	no	no
estMemUsage	no	yes
+	no	no
+	no	no
effectiveThreshold	no	yes
+	no	no
+	no	no
memoryMonitorInfo	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
keyCount	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
estKeyCount	no	yes
,	no	no
inputRecords	no	yes
)	no	no
;	no	no
VectorMapJoinFastTableContainer	no	yes
vectorMapJoinFastTableContainer	no	yes
=	no	no
new	no	no
VectorMapJoinFastTableContainer	no	yes
(	no	no
desc	no	yes
,	no	no
hconf	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
inputName	yes	yes
,	no	no
cacheKey	yes	yes
,	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
pos	no	yes
,	no	no
estKeyCount	no	yes
,	no	no
keyCount	no	yes
)	no	no
;	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
setSerde	no	yes
(	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
kvReader	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
putRow	no	yes
(	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentKey	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
BytesWritable	no	yes
)	no	no
kvReader	no	yes
.	no	no
getCurrentValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
numEntries	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
doMemCheck	no	no
&&	no	no
(	no	no
numEntries	yes	yes
%	no	no
memoryMonitorInfo	no	yes
.	no	no
getMemoryCheckInterval	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
final	no	no
long	no	no
estMemUsage	no	yes
=	no	no
vectorMapJoinFastTableContainer	no	yes
.	no	no
getEstimatedMemorySize	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
estMemUsage	no	yes
>	no	no
effectiveThreshold	no	yes
)	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
inputName	yes	yes
+	no	no
+	no	no
numEntries	yes	yes
+	no	no
+	no	no
estMemUsage	no	yes
+	no	no
+	no	no
effectiveThreshold	no	yes
+	no	no
+	no	no
memoryMonitorInfo	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MapJoinMemoryExhaustionError	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no

boolean	no	no
isNewKey	no	yes
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
int	no	no
pairIndex	no	yes
=	no	no
2	no	no
*	no	no
slot	no	yes
;	no	no
long	no	no
valueRef	no	yes
=	no	no
slotPairs	no	yes
[	no	no
pairIndex	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
valueRef	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
long	no	no
tableKey	no	yes
=	no	no
slotPairs	no	yes
[	no	no
pairIndex	no	yes
+	no	no
1	no	no
]	no	no
;	no	no
if	no	no
(	no	no
key	no	no
==	no	no
tableKey	no	yes
)	no	no
{	no	no
isNewKey	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
++	no	no
metricPutConflict	no	yes
;	no	no
probeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
slot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
probeSlot	no	yes
&	no	no
logicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
largestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

long	no	no
hashCode	no	yes
=	no	no
HashCodeUtil	no	yes
.	no	no
calculateLongHashCode	no	yes
(	no	no
tableKey	no	yes
)	no	no
;	no	no
int	no	no
intHashCode	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
hashCode	no	yes
;	no	no
int	no	no
newSlot	no	yes
=	no	no
intHashCode	no	yes
&	no	no
newLogicalHashBucketMask	no	yes
;	no	no
long	no	no
newProbeSlot	no	yes
=	no	no
newSlot	no	yes
;	no	no
int	no	no
newPairIndex	no	yes
;	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
newPairIndex	no	yes
=	no	no
newSlot	no	yes
*	no	no
2	no	no
;	no	no
long	no	no
newValueRef	no	yes
=	no	no
newSlotPairs	no	yes
[	no	no
newPairIndex	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
newValueRef	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
++	no	no
newMetricPutConflict	no	yes
;	no	no
newProbeSlot	no	yes
+=	no	no
(	no	no
++	no	no
i	yes	yes
)	no	no
;	no	no
newSlot	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
newProbeSlot	no	yes
&	no	no
newLogicalHashBucketMask	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newLargestNumberOfSteps	no	no
<	no	no
i	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	no	yes
,	no	no
int	no	no
tag	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
VectorizedRowBatch	no	yes
batch	no	yes
=	no	no
(	no	no
VectorizedRowBatch	no	yes
)	no	no
row	no	yes
;	no	no
batchCounter	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
batch	no	yes
.	no	no
size	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	no	yes
,	no	no
int	no	no
tag	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
VectorizedRowBatch	no	yes
batch	no	yes
=	no	no
(	no	no
VectorizedRowBatch	no	yes
)	no	no
row	no	yes
;	no	no
batchCounter	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
batch	no	yes
.	no	no
size	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
row	no	yes
,	no	no
int	no	no
tag	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no
VectorizedRowBatch	no	yes
batch	no	yes
=	no	no
(	no	no
VectorizedRowBatch	no	yes
)	no	no
row	no	yes
;	no	no
batchCounter	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
batch	no	yes
.	no	no
size	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
setupOutputFileStreams	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
parentDir	no	yes
=	no	no
FileUtils	no	yes
.	no	no
createLocalDirsTempFile	no	yes
(	no	no
spillLocalDirs	no	yes
,	no	no
,	no	no
,	no	no
true	no	no
)	no	no
;	no	no
parentDir	no	yes
.	no	no
deleteOnExit	no	yes
(	no	no
)	no	no
;	no	no
tmpFile	yes	yes
=	no	no
File	no	yes
.	no	no
createTempFile	no	yes
(	no	no
,	no	no
,	no	no
parentDir	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
}	no	no
writer	no	yes
.	no	no
endArray	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
value	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_EXECUTION_ENGINE	no	yes
)	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
value	no	yes
(	no	no
ss	no	yes
.	no	no
getCurrentDatabase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
value	no	yes
(	no	no
getQueryHash	no	yes
(	no	no
queryStr	no	yes
)	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
.	no	no
value	no	yes
(	no	no
queryStr	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Edge	no	yes
>	no	no
edges	no	yes
=	no	no
getEdges	no	yes
(	no	no
plan	no	yes
,	no	no
index	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
Vertex	no	yes
>	no	no
vertices	no	yes
=	no	no
getVertices	no	yes
(	no	no
edges	no	yes
)	no	no
;	no	no
writeEdges	no	yes
(	no	no
writer	no	yes
,	no	no
edges	no	yes
,	no	no
hookContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
writeVertices	no	yes
(	no	no
writer	no	yes
,	no	no
vertices	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
endObject	no	yes
(	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
lineage	yes	yes
=	no	no
out	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
testMode	no	no
)	no	no
{	no	no
log	no	yes
(	no	no
lineage	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

private	no	no
static	no	no
List	no	yes
<	no	no
HdfsFileStatusWithId	no	yes
>	no	no
tryListLocatedHdfsStatus	no	no
(	no	no
Ref	no	no
<	no	no
Boolean	no	yes
>	no	no
useFileIds	no	yes
,	no	no
FileSystem	no	no
fs	no	yes
,	no	no
Path	no	no
directory	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
useFileIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
HdfsFileStatusWithId	no	yes
>	no	no
childrenWithId	no	yes
=	no	no
null	no	no
;	no	no
final	no	no
Boolean	no	yes
val	no	yes
=	no	no
useFileIds	no	yes
.	no	no
value	no	yes
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
||	no	no
val	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
childrenWithId	no	yes
=	no	no
SHIMS	no	yes
.	no	no
listLocatedHdfsStatus	no	yes
(	no	no
fs	no	yes
,	no	no
directory	no	yes
,	no	no
hiddenFileFilter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
useFileIds	no	yes
.	no	no
value	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
uoe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
uoe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
useFileIds	no	yes
.	no	no
value	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
useFileIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
HdfsFileStatusWithId	no	yes
>	no	no
childrenWithId	no	yes
=	no	no
null	no	no
;	no	no
final	no	no
Boolean	no	yes
val	no	yes
=	no	no
useFileIds	no	yes
.	no	no
value	no	yes
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
||	no	no
val	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
childrenWithId	no	yes
=	no	no
SHIMS	no	yes
.	no	no
listLocatedHdfsStatus	no	yes
(	no	no
fs	no	yes
,	no	no
directory	no	yes
,	no	no
hiddenFileFilter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
useFileIds	no	yes
.	no	no
value	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
uoe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
uoe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
useFileIds	no	yes
.	no	no
value	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ioe	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
setValidWriteIdList	no	no
(	no	no
Configuration	no	no
conf	yes	yes
,	no	no
ValidWriteIdList	no	yes
validWriteIds	yes	yes
)	no	no
{	no	no
conf	yes	yes
.	no	no
set	no	yes
(	no	no
ValidWriteIdList	no	yes
.	no	no
VALID_WRITEIDS_KEY	no	yes
,	no	no
validWriteIds	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
dbName	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
dbName	yes	yes
=	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
tblName	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
tblName	yes	yes
=	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
writeId	yes	yes
=	no	no
-	no	no
1	no	no
;	no	no
ValidWriteIdList	no	yes
validWriteIdList	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
HiveTxnManager	no	yes
sessionTxnMgr	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getTxnMgr	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
fullTableName	no	yes
=	no	no
getFullTableName	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sessionTxnMgr	no	yes
!=	no	no
null	no	no
&&	no	no
sessionTxnMgr	no	yes
.	no	no
getCurrentTxnId	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
validWriteIdList	no	yes
=	no	no
getTableValidWriteIdList	no	yes
(	no	no
conf	no	yes
,	no	no
fullTableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isStatsUpdater	no	no
)	no	no
{	no	no
writeId	yes	yes
=	no	no
sessionTxnMgr	no	yes
.	no	no
getAllocatedTableWriteId	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
writeId	yes	yes
<	no	no
1	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
getAcidState	no	yes
(	no	no
fileSystem	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
candidateDirectory	no	yes
,	no	no
conf	no	yes
,	no	no
writeIdList	yes	yes
,	no	no
useFileIds	no	yes
,	no	no
ignoreEmptyFiles	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
initDirCache	no	yes
(	no	no
dirCacheDuration	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
key	yes	yes
=	no	no
writeIdList	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
candidateDirectory	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
DirInfoValue	no	yes
value	yes	yes
=	no	no
dirCache	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
long	no	no
[	no	no
]	no	no
exceptions	no	yes
=	no	no
writeIdList	yes	yes
.	no	no
getInvalidWriteIds	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
recompute	no	yes
=	no	no
(	no	no
exceptions	no	yes
!=	no	no
null	no	no
&&	no	no
exceptions	no	yes
.	no	no
length	no	yes
>	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
recompute	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
key	yes	yes
)	no	no
;	no	no
dirCache	no	yes
.	no	no
invalidate	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
value	yes	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
value	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
value	yes	yes
.	no	no
getTxnString	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
writeIdList	yes	yes
.	no	no
writeToString	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
recompute	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
key	yes	yes
)	no	no
;	no	no
dirCache	no	yes
.	no	no
invalidate	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
value	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
value	no	yes
.	no	no
getTxnString	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
,	no	no
value	no	yes
.	no	no
getTxnString	no	yes
(	no	no
)	no	no
,	no	no
key	yes	yes
)	no	no
;	no	no
}	no	no
recompute	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recompute	no	yes
||	no	no
(	no	no
value	no	yes
==	no	no
null	no	no
)	no	no
)	no	no
{	no	no
Directory	no	yes
dirInfo	no	yes
=	no	no
getAcidState	no	yes
(	no	no
fileSystem	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
candidateDirectory	no	yes
,	no	no
conf	no	yes
,	no	no
writeIdList	no	yes
,	no	no
useFileIds	no	yes
,	no	no
ignoreEmptyFiles	no	yes
)	no	no
;	no	no
value	no	yes
=	no	no
new	no	no
DirInfoValue	no	yes
(	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
,	no	no
dirInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
.	no	no
dirInfo	no	yes
!=	no	no
null	no	no
&&	no	no
value	no	yes
.	no	no
dirInfo	no	yes
.	no	no
getBaseDirectory	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
value	no	yes
.	no	no
dirInfo	no	yes
.	no	no
getCurrentDirectories	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
dirCacheDuration	no	no
>	no	no
0	no	no
)	no	no
{	no	no
populateBaseFiles	no	yes
(	no	no
dirInfo	no	yes
,	no	no
useFileIds	no	yes
,	no	no
fileSystem	no	yes
)	no	no
;	no	no

dirCache	yes	yes
.	no	no
invalidate	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
value	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
value	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
value	no	yes
.	no	no
getTxnString	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
,	no	no
value	no	yes
.	no	no
getTxnString	no	yes
(	no	no
)	no	no
,	no	no
key	yes	yes
)	no	no
;	no	no
}	no	no
recompute	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recompute	no	yes
||	no	no
(	no	no
value	no	yes
==	no	no
null	no	no
)	no	no
)	no	no
{	no	no
Directory	no	yes
dirInfo	no	yes
=	no	no
getAcidState	no	yes
(	no	no
fileSystem	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
candidateDirectory	no	yes
,	no	no
conf	no	yes
,	no	no
writeIdList	no	yes
,	no	no
useFileIds	no	yes
,	no	no
ignoreEmptyFiles	no	yes
)	no	no
;	no	no
value	no	yes
=	no	no
new	no	no
DirInfoValue	no	yes
(	no	no
writeIdList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
,	no	no
dirInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
value	no	yes
.	no	no
dirInfo	no	yes
!=	no	no
null	no	no
&&	no	no
value	no	yes
.	no	no
dirInfo	no	yes
.	no	no
getBaseDirectory	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
value	no	yes
.	no	no
dirInfo	no	yes
.	no	no
getCurrentDirectories	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
dirCacheDuration	no	no
>	no	no
0	no	no
)	no	no
{	no	no
populateBaseFiles	no	yes
(	no	no
dirInfo	no	yes
,	no	no
useFileIds	no	yes
,	no	no
fileSystem	no	yes
)	no	no
;	no	no
dirCache	yes	yes
.	no	no
put	no	yes
(	no	no
key	yes	yes
,	no	no
value	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

protected	no	no
FileStatus	no	yes
[	no	no
]	no	no
listStatus	no	no
(	no	no
JobConf	no	no
job	no	yes
,	no	no
Path	no	no
dir	yes	yes
)	no	no
throws	no	no
IOException	no	yes
{	no	no
ArrayList	no	yes
<	no	no
FileStatus	no	yes
>	no	no
result	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
FileStatus	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
IOException	no	yes
>	no	no
errors	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
IOException	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
dir	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
matches	no	yes
=	no	no
fs	no	yes
.	no	no
globStatus	no	yes
(	no	no
dir	yes	yes
,	no	no
FileUtils	no	yes
.	no	no
HIDDEN_FILES_PATH_FILTER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
matches	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
errors	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
dir	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
matches	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
errors	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
dir	yes	yes
+	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
FileStatus	no	yes
globStat	no	yes
:	no	no
matches	no	yes
)	no	no
{	no	no
FileUtils	no	yes
.	no	no
listStatusRecursively	no	yes
(	no	no
fs	no	yes
,	no	no
globStat	no	yes
,	no	no
result	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
errors	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
InvalidInputException	no	yes
(	no	no
errors	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
dir	yes	yes
+	no	no
+	no	no
result	yes	yes
)	no	no
;	no	no

finalDirs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
dirsWithMmOriginals	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
processPathsForMmRead	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
dir	no	yes
)	no	no
,	no	no
newjob	no	yes
,	no	no
mmIds	no	yes
,	no	no
finalDirs	no	yes
,	no	no
dirsWithMmOriginals	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
finalDirs	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
dirsWithMmOriginals	no	yes
==	no	no
null	no	no
||	no	no
dirsWithMmOriginals	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Path	no	no
finalDir	no	yes
:	no	no
finalDirs	no	yes
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
listStatus	no	yes
=	no	no
listStatus	no	yes
(	no	no
newjob	no	yes
,	no	no
finalDir	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
status	no	yes
:	no	no
listStatus	no	yes
)	no	no
{	no	no
numOrigSplits	yes	yes
=	no	no
addBHISplit	no	yes
(	no	no
status	no	yes
,	no	no
inputFormat	no	yes
,	no	no
inputFormatClass	no	yes
,	no	no
numOrigSplits	yes	yes
,	no	no
newjob	no	yes
,	no	no
result	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
dirsWithMmOriginals	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Path	no	no
originalsDir	no	yes
:	no	no
dirsWithMmOriginals	no	yes
)	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
originalsDir	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
listStatus	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
dir	no	yes
,	no	no
FileUtils	no	yes
.	no	no
HIDDEN_FILES_PATH_FILTER	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
status	no	yes
:	no	no
listStatus	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
status	no	yes
.	no	no
isDirectory	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no

private	no	no
int	no	no
addBHISplit	no	no
(	no	no
FileStatus	no	no
status	yes	no
,	no	no
InputFormat	no	no
inputFormat	no	no
,	no	no
Class	no	no
inputFormatClass	no	no
,	no	no
int	no	no
numOrigSplits	no	no
,	no	no
JobConf	no	no
newjob	no	no
,	no	no
ArrayList	no	no
<	no	no
InputSplit	no	no
>	no	no
result	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

private	no	no
int	no	no
addBHISplit	no	no
(	no	no
FileStatus	no	no
status	yes	yes
,	no	no
InputFormat	no	no
inputFormat	no	no
,	no	no
Class	no	no
inputFormatClass	no	no
,	no	no
int	no	no
numOrigSplits	no	no
,	no	no
JobConf	no	no
newjob	no	no
,	no	no
ArrayList	no	no
<	no	no
InputSplit	no	no
>	no	no
result	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
status	yes	yes
.	no	no
getBlockSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
inputFormatClassName	no	yes
=	no	no
inputFormatClass	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
InputFormat	no	yes
inputFormat	no	yes
=	no	no
getInputFormatFromCache	no	yes
(	no	no
inputFormatClass	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
String	no	yes
deserializerClassName	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
deserializerClassName	no	yes
=	no	no
part	no	yes
.	no	no
getDeserializer	no	yes
(	no	no
job	no	yes
)	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no
}	no	no
FileSystem	no	yes
inpFs	no	yes
=	no	no
path	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputFormat	no	yes
instanceof	no	no
SymlinkTextInputFormat	no	no
)	no	no
{	no	no
splits	no	yes
=	no	no
super	no	no
.	no	no
getSplits	no	yes
(	no	no
job	no	yes
,	no	no
numSplits	no	yes
)	no	no
;	no	no
return	no	no
splits	no	yes
;	no	no
}	no	no
Path	no	yes
filterPath	yes	yes
=	no	no
path	yes	yes
;	no	no
CombineFilter	no	yes
f	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
opList	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
mrwork	no	no
.	no	no
isMapperCannotSpanPartns	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opList	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
doGetWorksFromPath	no	yes
(	no	no
pathToAliases	no	yes
,	no	no
aliasToWork	no	yes
,	no	no
filterPath	yes	yes
)	no	no
;	no	no

deserializerClassName	no	yes
=	no	no
part	no	yes
.	no	no
getDeserializer	no	yes
(	no	no
job	no	yes
)	no	no
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no
}	no	no
FileSystem	no	yes
inpFs	no	yes
=	no	no
path	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
inputFormat	no	no
instanceof	no	no
SymlinkTextInputFormat	no	no
)	no	no
{	no	no
splits	no	yes
=	no	no
super	no	no
.	no	no
getSplits	no	yes
(	no	no
job	no	yes
,	no	no
numSplits	no	yes
)	no	no
;	no	no
return	no	no
splits	no	yes
;	no	no
}	no	no
Path	no	yes
filterPath	yes	yes
=	no	no
path	yes	yes
;	no	no
CombineFilter	no	yes
f	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
opList	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
mrwork	no	no
.	no	no
isMapperCannotSpanPartns	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opList	no	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
doGetWorksFromPath	no	yes
(	no	no
pathToAliases	no	yes
,	no	no
aliasToWork	no	yes
,	no	no
filterPath	yes	yes
)	no	no
;	no	no
CombinePathInputFormat	no	yes
combinePathInputFormat	no	yes
=	no	no
new	no	no
CombinePathInputFormat	no	yes
(	no	no
opList	no	yes
,	no	no
inputFormatClassName	no	yes
,	no	no
deserializerClassName	no	yes
)	no	no
;	no	no
f	no	yes
=	no	no
poolMap	no	yes
.	no	no
get	no	yes
(	no	no
combinePathInputFormat	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
f	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
f	no	yes
=	no	no
new	no	no
CombineFilter	no	yes
(	no	no
filterPath	yes	yes
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
Set	no	no
<	no	no
Integer	no	no
>	no	no
getNonCombinablePathIndices	no	no
(	no	no
JobConf	no	no
job	no	no
,	no	no
Path	no	no
[	no	no
]	no	no
paths	yes	no
,	no	no
int	no	no
numThreads	yes	no
)	no	no
throws	no	no
ExecutionException	no	no
,	no	no
InterruptedException	no	no
{	no	no

init	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
InputSplit	no	yes
>	no	no
result	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
InputSplit	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Path	no	yes
[	no	no
]	no	no
paths	no	yes
=	no	no
getInputPaths	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
nonCombinablePaths	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Path	no	yes
>	no	no
(	no	no
paths	no	yes
.	no	no
length	no	yes
/	no	no
2	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
combinablePaths	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Path	no	yes
>	no	no
(	no	no
paths	no	yes
.	no	no
length	no	yes
/	no	no
2	no	no
)	no	no
;	no	no
int	no	no
numThreads	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
MAX_CHECK_NONCOMBINABLE_THREAD_NUM	no	yes
,	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
paths	no	yes
.	no	no
length	no	yes
/	no	no
DEFAULT_NUM_PATH_PER_THREAD	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numThreads	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
nonCombinablePathIndices	no	yes
=	no	no
getNonCombinablePathIndices	no	yes
(	no	no
job	no	yes
,	no	no
paths	no	yes
,	no	no
numThreads	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
paths	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
nonCombinablePathIndices	no	yes
.	no	no
contains	no	no
(	no	no
i	no	yes
)	no	no
)	no	no
{	no	no
nonCombinablePaths	no	yes
.	no	no
add	no	yes
(	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
combinablePaths	no	yes
.	no	no
add	no	yes
(	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

int	no	no
numThreads	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
MAX_CHECK_NONCOMBINABLE_THREAD_NUM	no	yes
,	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
paths	no	yes
.	no	no
length	no	yes
/	no	no
DEFAULT_NUM_PATH_PER_THREAD	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numThreads	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
nonCombinablePathIndices	no	yes
=	no	no
getNonCombinablePathIndices	no	yes
(	no	no
job	no	yes
,	no	no
paths	no	yes
,	no	no
numThreads	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
paths	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
nonCombinablePathIndices	no	yes
.	no	no
contains	no	no
(	no	no
i	no	yes
)	no	no
)	no	no
{	no	no
nonCombinablePaths	no	yes
.	no	no
add	no	yes
(	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
combinablePaths	no	yes
.	no	no
add	no	yes
(	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
perfLogger	no	yes
.	no	no
perfLogEnd	no	yes
(	no	no
CLASS_NAME	no	yes
,	no	no
PerfLogger	no	yes
.	no	no
GET_SPLITS	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
String	no	yes
oldPaths	yes	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapreduce	no	yes
.	no	no
lib	no	yes
.	no	no
input	no	yes
.	no	no
FileInputFormat	no	yes
.	no	no
INPUT_DIR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
String	no	yes
oldPaths	no	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapreduce	no	yes
.	no	no
lib	no	yes
.	no	no
input	no	yes
.	no	no
FileInputFormat	no	yes
.	no	no
INPUT_DIR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
oldPaths	no	yes
+	no	no
+	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
mapreduce	no	yes
.	no	no
lib	no	yes
.	no	no
input	no	yes
.	no	no
FileInputFormat	no	yes
.	no	no
INPUT_DIR	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
nonCombinablePaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
FileInputFormat	no	yes
.	no	no
setInputPaths	no	yes
(	no	no
job	no	yes
,	no	no
nonCombinablePaths	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
Path	no	yes
[	no	no
nonCombinablePaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
splits	no	yes
=	no	no
super	no	no
.	no	no
getSplits	no	yes
(	no	no
job	no	yes
,	no	no
numSplits	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InputSplit	no	yes
split	no	yes
:	no	no
splits	no	yes
)	no	no
{	no	no
result	yes	yes
.	no	no
add	no	yes
(	no	no
split	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
combinablePaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
FileInputFormat	no	yes
.	no	no
setInputPaths	no	yes
(	no	no
job	no	yes
,	no	no
combinablePaths	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
Path	no	yes
[	no	no
combinablePaths	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
PartitionDesc	no	yes
>	no	no
pathToPartitionInfo	no	yes
=	no	no
this	no	no
.	no	no
pathToPartitionInfo	no	yes
!=	no	no
null	no	no
?	no	no
this	no	no
.	no	no
pathToPartitionInfo	no	yes
:	no	no
Utilities	no	yes
.	no	no
getMapWork	no	yes
(	no	no
job	no	yes
)	no	no
.	no	no
getPathToPartitionInfo	no	yes
(	no	no
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
splits	no	yes
=	no	no
getCombineSplits	no	yes
(	no	no
job	no	yes
,	no	no
numSplits	no	yes
,	no	no
pathToPartitionInfo	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
InputSplit	no	yes
split	no	yes
:	no	no
splits	no	yes
)	no	no
{	no	no
result	yes	yes
.	no	no
add	no	yes
(	no	no
split	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
oldPaths	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
aliasToSplitList	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
split	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
retLists	no	yes
.	no	no
add	no	yes
(	no	no
split	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
ArrayList	no	yes
<	no	no
CombineFileSplit	no	yes
>>	no	no
entry	yes	yes
:	no	no
aliasToSplitList	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ArrayList	no	yes
<	no	no
CombineFileSplit	no	yes
>	no	no
splitList	no	yes
=	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
totalSize	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
CombineFileSplit	no	yes
split	no	yes
:	no	no
splitList	no	yes
)	no	no
{	no	no
totalSize	no	yes
+=	no	no
split	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
SplitSample	no	yes
splitSample	no	yes
=	no	no
nameToSamples	no	yes
.	no	no
get	no	yes
(	no	no
entry	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
targetSize	no	yes
=	no	no
splitSample	no	yes
.	no	no
getTargetSize	no	yes
(	no	no
totalSize	no	yes
)	no	no
;	no	no
int	no	no
startIndex	no	yes
=	no	no
splitSample	no	yes
.	no	no
getSeedNum	no	yes
(	no	no
)	no	no
%	no	no
splitList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
splitList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
CombineFileSplit	no	yes
split	no	yes
=	no	no
splitList	no	yes
.	no	no
get	no	yes
(	no	no
(	no	no
startIndex	no	yes
+	no	no
i	no	yes
)	no	no
%	no	no
splitList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
retLists	no	yes
.	no	no
add	no	yes
(	no	no
split	no	yes
)	no	no
;	no	no

private	no	no
PartitionDesc	no	yes
extractSinglePartSpec	no	no
(	no	no
CombineHiveInputSplit	no	no
hsplit	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
PartitionDesc	no	yes
part	no	yes
=	no	no
null	no	no
;	no	no
Map	no	yes
<	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
PartitionDesc	no	yes
>	no	no
,	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
PartitionDesc	no	yes
>>	no	no
cache	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
path	yes	yes
:	no	no
hsplit	no	no
.	no	no
getPaths	no	no
(	no	no
)	no	no
)	no	no
{	no	no
PartitionDesc	no	yes
otherPart	yes	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getFromPathRecursively	no	yes
(	no	no
pathToPartInfo	yes	yes
,	no	no
path	yes	yes
,	no	no
cache	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
initIOContext	no	no
(	no	no
long	no	no
startPos	no	yes
,	no	no
boolean	no	no
isBlockPointer	no	yes
,	no	no
Path	no	no
inputPath	yes	yes
)	no	no
{	no	no
ioCxtRef	no	yes
=	no	no
this	no	no
.	no	no
getIOContext	no	yes
(	no	no
)	no	no
;	no	no
ioCxtRef	no	yes
.	no	no
setCurrentBlockStart	no	yes
(	no	no
startPos	no	yes
)	no	no
;	no	no
ioCxtRef	no	yes
.	no	no
setBlockPointer	no	yes
(	no	no
isBlockPointer	no	yes
)	no	no
;	no	no
ioCxtRef	no	yes
.	no	no
setInputPath	no	yes
(	no	no
inputPath	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
setGenericUDFClassName	no	no
(	no	no
String	no	no
genericUDFClassName	yes	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
this	no	no
.	no	no
genericUDFClassName	yes	yes
=	no	no
genericUDFClassName	yes	yes
;	no	no
if	no	no
(	no	no
genericUDFClassName	yes	yes
.	no	no
equals	no	no
(	no	no
GenericUDFOPEqual	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
stopComparisons	no	yes
.	no	no
add	no	yes
(	no	no
Comparison	no	yes
.	no	no
GREATER	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
genericUDFClassName	yes	yes
.	no	no
equals	no	no
(	no	no
GenericUDFOPLessThan	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
stopComparisons	no	yes
.	no	no
add	no	yes
(	no	no
Comparison	no	yes
.	no	no
EQUAL	no	yes
)	no	no
;	no	no
stopComparisons	no	yes
.	no	no
add	no	yes
(	no	no
Comparison	no	yes
.	no	no
GREATER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
this	no	no
.	no	no
getIOContext	no	no
(	no	no
)	no	no
.	no	no
isBinarySearching	no	no
(	no	no
)	no	no
)	no	no
{	no	no
beginLinearSearch	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
genericUDFClassName	yes	yes
.	no	no
equals	no	no
(	no	no
GenericUDFOPEqualOrLessThan	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
stopComparisons	no	yes
.	no	no
add	no	yes
(	no	no
Comparison	no	yes
.	no	no
GREATER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
this	no	no
.	no	no
getIOContext	no	no
(	no	no
)	no	no
.	no	no
isBinarySearching	no	no
(	no	no
)	no	no
)	no	no
{	no	no
beginLinearSearch	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
genericUDFClassName	yes	yes
.	no	no
equals	no	no
(	no	no
GenericUDFOPGreaterThan	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
genericUDFClassName	yes	yes
.	no	no
equals	no	no
(	no	no
GenericUDFOPEqualOrGreaterThan	no	no
.	no	no
class	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
private	no	no
static	no	no
boolean	no	no
checkTextInputFormat	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
HiveConf	no	no
conf	no	no
,	no	no
List	no	yes
<	no	no
FileStatus	no	yes
>	no	no
files	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
List	no	yes
<	no	no
FileStatus	no	yes
>	no	no
files2	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
files	no	yes
)	no	no
;	no	no
Iterator	no	yes
<	no	no
FileStatus	no	yes
>	no	no
iter	no	yes
=	no	no
files2	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
file	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
file	yes	yes
==	no	no
null	no	no
)	no	no
continue	no	no
;	no	no
if	no	no
(	no	no
isPipe	no	no
(	no	no
fs	no	no
,	no	no
file	yes	yes
)	no	no
)	no	no
{	no	no

return	no	no
inputFormat	no	yes
;	no	no
}	no	no
String	no	yes
ifName	yes	yes
=	no	no
inputFormat	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isSupported	no	yes
=	no	no
inputFormat	no	yes
instanceof	no	no
LlapWrappableInputFormatInterface	no	yes
;	no	no
boolean	no	no
isCacheOnly	no	yes
=	no	no
inputFormat	no	yes
instanceof	no	no
LlapCacheOnlyInputFormatInterface	no	yes
;	no	no
boolean	no	no
isVectorized	no	yes
=	no	no
Utilities	no	yes
.	no	no
getIsVectorized	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isVectorized	no	yes
)	no	no
{	no	no
isVectorized	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_IO_NONVECTOR_WRAPPER_ENABLED	no	yes
)	no	no
&&	no	no
(	no	no
Utilities	no	yes
.	no	no
getPlanPath	no	yes
(	no	no
conf	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
isSerdeBased	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
isVectorized	no	yes
&&	no	no
!	no	no
isSupported	no	yes
&&	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_IO_ENCODE_ENABLED	no	no
)	no	no
)	no	no
{	no	no
isSupported	no	yes
=	no	no
isSerdeBased	no	yes
=	no	no
checkInputFormatForLlapEncode	no	yes
(	no	no
conf	no	yes
,	no	no
ifName	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
(	no	no
!	no	no
isSupported	no	yes
||	no	no
!	no	no
isVectorized	no	yes
)	no	no
&&	no	no
!	no	no
isCacheOnly	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ifName	yes	yes
+	no	no
+	no	no
isSupported	no	yes
+	no	no
+	no	no
isVectorized	no	yes
+	no	no
+	no	no
isCacheOnly	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
inputFormat	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
checkInputFormatForLlapEncode	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	yes
ifName	yes	no
)	no	no
{	no	no
String	no	yes
formatList	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_IO_ENCODE_FORMATS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
RecordReader	no	no
getRecordReader	no	no
(	no	no
InputSplit	no	yes
split	no	yes
,	no	no
JobConf	no	no
job	no	yes
,	no	no
Reporter	no	no
reporter	no	no
)	no	no
throws	no	no
IOException	no	yes
{	no	no
HiveInputSplit	no	yes
hsplit	yes	yes
=	no	no
(	no	no
HiveInputSplit	no	yes
)	no	no
split	no	yes
;	no	no
InputSplit	no	yes
inputSplit	no	yes
=	no	no
hsplit	yes	yes
.	no	no
getInputSplit	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
inputFormatClassName	no	yes
=	no	no
null	no	no
;	no	no
Class	no	yes
inputFormatClass	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
inputFormatClassName	no	yes
=	no	no
hsplit	yes	yes
.	no	no
inputFormatClassName	no	yes
(	no	no
)	no	no
;	no	no
inputFormatClass	no	yes
=	no	no
job	no	yes
.	no	no
getClassByName	no	yes
(	no	no
inputFormatClassName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
inputFormatClassName	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
this	no	no
.	no	no
mrwork	no	no
==	no	no
null	no	no
||	no	no
pathToPartitionInfo	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
init	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
nonNative	no	yes
=	no	no
false	no	no
;	no	no
PartitionDesc	no	yes
part	yes	yes
=	no	no
HiveFileFormatUtils	no	yes
.	no	no
getFromPathRecursively	no	yes
(	no	no
pathToPartitionInfo	yes	yes
,	no	no
hsplit	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Class	no	yes
<	no	no
?	no	no
extends	no	no
InputFormat	no	yes
>	no	no
inputFormatClass	no	yes
=	no	no
part	no	yes
.	no	no
getInputFileFormatClass	no	yes
(	no	no
)	no	no
;	no	no
TableDesc	no	yes
table	no	yes
=	no	no
part	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
;	no	no
TableScanOperator	no	yes
tableScan	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
aliases	yes	yes
=	no	no
mrwork	yes	yes
.	no	no
getPathToAliases	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
dir	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
aliases	yes	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
aliases	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
{	no	no
Operator	no	yes
op	no	yes
=	no	no
mrwork	yes	yes
.	no	no
getAliasToWork	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
aliases	yes	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
op	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
op	no	yes
instanceof	no	no
TableScanOperator	no	yes
)	no	no
)	no	no
{	no	no
tableScan	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
op	no	yes
;	no	no
readColumnsBuffer	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
readColumnNamesBuffer	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ColumnProjectionUtils	no	yes
.	no	no
appendReadColumns	no	yes
(	no	no
readColumnsBuffer	no	yes
,	no	no
readColumnNamesBuffer	no	yes
,	no	no
tableScan	no	yes
.	no	no
getNeededColumnIDs	no	yes
(	no	no
)	no	no
,	no	no
tableScan	no	yes
.	no	no
getNeededColumns	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pushDownProjection	no	yes
=	no	no
true	no	no
;	no	no
pushFilters	no	yes
(	no	no
newjob	no	yes
,	no	no
tableScan	no	yes
,	no	no
this	no	no
.	no	no
mrwork	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
(	no	no
op	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
op	no	yes
instanceof	no	no
TableScanOperator	no	yes
)	no	no
)	no	no
{	no	no
tableScan	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
op	no	yes
;	no	no
readColumnsBuffer	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
readColumnNamesBuffer	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ColumnProjectionUtils	no	yes
.	no	no
appendReadColumns	no	yes
(	no	no
readColumnsBuffer	no	yes
,	no	no
readColumnNamesBuffer	no	yes
,	no	no
tableScan	no	yes
.	no	no
getNeededColumnIDs	no	yes
(	no	no
)	no	no
,	no	no
tableScan	no	yes
.	no	no
getNeededColumns	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pushDownProjection	no	yes
=	no	no
true	no	no
;	no	no
pushFilters	no	yes
(	no	no
newjob	no	yes
,	no	no
tableScan	no	yes
,	no	no
this	no	no
.	no	no
mrwork	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
aliases	no	yes
,	no	no
mrwork	no	yes
.	no	no
getPathToAliases	no	yes
(	no	no
)	no	no
,	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
currentDirs	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
inputFormatClass	no	no
.	no	no
equals	no	no
(	no	no
currentInputFormatClass	no	no
)	no	no
&&	no	no
table	no	no
.	no	no
equals	no	no
(	no	no
currentTable	no	no
)	no	no
&&	no	no
tableScan	no	yes
==	no	no
currentTableScan	no	no
)	no	no
{	no	no
currentDirs	yes	yes
.	no	no
add	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
currentDirs	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
currentDirs	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
inputFormatClass	no	yes
.	no	no
equals	no	no
(	no	no
currentInputFormatClass	no	yes
)	no	no
&&	no	no
table	no	yes
.	no	no
equals	no	no
(	no	no
currentTable	no	yes
)	no	no
&&	no	no
tableScan	no	yes
==	no	no
currentTableScan	no	yes
)	no	no
{	no	no
currentDirs	no	yes
.	no	no
add	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
currentDirs	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
currentDirs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pushDownProjection	no	no
)	no	no
{	no	no
pushProjection	no	yes
(	no	no
newjob	no	yes
,	no	no
readColumnsBuffer	no	yes
,	no	no
readColumnNamesBuffer	no	yes
)	no	no
;	no	no
}	no	no
addSplitsForGroup	no	yes
(	no	no
currentDirs	no	yes
,	no	no
currentTableScan	no	yes
,	no	no
newjob	no	yes
,	no	no
getInputFormatFromCache	no	yes
(	no	no
currentInputFormatClass	no	yes
,	no	no
job	no	yes
)	no	no
,	no	no
currentInputFormatClass	no	yes
,	no	no
currentDirs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
*	no	no
(	no	no
numSplits	no	yes
/	no	no
dirs	yes	yes
.	no	no
length	no	yes
)	no	no
,	no	no
currentTable	no	yes
,	no	no
result	no	yes
)	no	no
;	no	no
}	no	no
currentDirs	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
currentDirs	no	yes
.	no	no
add	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
currentTableScan	no	yes
=	no	no
tableScan	no	yes
;	no	no
currentTable	no	yes
=	no	no
table	no	yes
;	no	no
currentInputFormatClass	no	yes
=	no	no
inputFormatClass	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
pushDownProjection	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
currentDirs	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
currentDirs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pushDownProjection	no	no
)	no	no
{	no	no
pushProjection	no	yes
(	no	no
newjob	no	yes
,	no	no
readColumnsBuffer	no	yes
,	no	no
readColumnNamesBuffer	no	yes
)	no	no
;	no	no
}	no	no
addSplitsForGroup	no	yes
(	no	no
currentDirs	no	yes
,	no	no
currentTableScan	no	yes
,	no	no
newjob	no	yes
,	no	no
getInputFormatFromCache	no	yes
(	no	no
currentInputFormatClass	no	yes
,	no	no
job	no	yes
)	no	no
,	no	no
currentInputFormatClass	no	yes
,	no	no
currentDirs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
*	no	no
(	no	no
numSplits	no	yes
/	no	no
dirs	no	yes
.	no	no
length	no	yes
)	no	no
,	no	no
currentTable	no	yes
,	no	no
result	yes	yes
)	no	no
;	no	no
}	no	no
currentDirs	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
currentDirs	no	yes
.	no	no
add	no	yes
(	no	no
dir	no	yes
)	no	no
;	no	no
currentTableScan	no	yes
=	no	no
tableScan	no	yes
;	no	no
currentTable	no	yes
=	no	no
table	no	yes
;	no	no
currentInputFormatClass	no	yes
=	no	no
inputFormatClass	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
pushDownProjection	no	no
)	no	no
{	no	no
pushProjection	no	yes
(	no	no
newjob	no	yes
,	no	no
readColumnsBuffer	no	yes
,	no	no
readColumnNamesBuffer	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
dirs	no	yes
.	no	no
length	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
pushProjection	no	no
(	no	no
final	no	no
JobConf	no	no
newjob	no	yes
,	no	no
final	no	no
StringBuilder	no	no
readColumnsBuffer	no	yes
,	no	no
final	no	no
StringBuilder	no	no
readColumnNamesBuffer	no	yes
)	no	no
{	no	no
String	no	yes
readColIds	yes	yes
=	no	no
readColumnsBuffer	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
readColNames	no	yes
=	no	no
readColumnNamesBuffer	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
newjob	no	yes
.	no	no
setBoolean	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_ALL_COLUMNS	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
newjob	no	yes
.	no	no
set	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_COLUMN_IDS_CONF_STR	no	yes
,	no	no
readColIds	yes	yes
)	no	no
;	no	no
newjob	no	yes
.	no	no
set	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_COLUMN_NAMES_CONF_STR	no	yes
,	no	no
readColNames	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
pushProjection	no	no
(	no	no
final	no	no
JobConf	no	no
newjob	no	yes
,	no	no
final	no	no
StringBuilder	no	no
readColumnsBuffer	no	yes
,	no	no
final	no	no
StringBuilder	no	no
readColumnNamesBuffer	no	yes
)	no	no
{	no	no
String	no	yes
readColIds	no	yes
=	no	no
readColumnsBuffer	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
readColNames	yes	yes
=	no	no
readColumnNamesBuffer	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
newjob	no	yes
.	no	no
setBoolean	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_ALL_COLUMNS	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
newjob	no	yes
.	no	no
set	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_COLUMN_IDS_CONF_STR	no	yes
,	no	no
readColIds	no	yes
)	no	no
;	no	no
newjob	no	yes
.	no	no
set	no	yes
(	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_COLUMN_NAMES_CONF_STR	no	yes
,	no	no
readColNames	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
ColumnProjectionUtils	yes	yes
.	no	no
READ_COLUMN_IDS_CONF_STR	no	yes
,	no	no
readColIds	no	yes
)	no	no
;	no	no

return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
mrwork	no	no
!=	no	no
null	no	no
&&	no	no
mrwork	no	no
.	no	no
getAliases	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
mrwork	no	no
.	no	no
getAliases	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
&&	no	no
jobConf	no	yes
.	no	no
get	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_EXECUTION_ENGINE	no	no
.	no	no
varname	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
scanDesc	no	yes
.	no	no
getTableMetadata	no	no
(	no	no
)	no	no
==	no	no
null	no	no
||	no	no
!	no	no
(	no	no
scanDesc	no	yes
.	no	no
getTableMetadata	no	no
(	no	no
)	no	no
.	no	no
getStorageHandler	no	no
(	no	no
)	no	no
instanceof	no	no
HiveStoragePredicateHandler	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
serializedFilterObj	no	yes
=	no	no
scanDesc	no	yes
.	no	no
getSerializedFilterObject	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serializedFilterExpr	yes	yes
=	no	no
scanDesc	no	yes
.	no	no
getSerializedFilterExpr	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
hasObj	no	yes
=	no	no
serializedFilterObj	no	yes
!=	no	no
null	no	no
,	no	no
hasExpr	yes	yes
=	no	no
serializedFilterExpr	yes	yes
!=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
hasObj	no	yes
)	no	no
{	no	no
Serializable	no	yes
filterObject	no	yes
=	no	no
scanDesc	no	yes
.	no	no
getFilterObject	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filterObject	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
serializedFilterObj	no	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
serializeObject	no	yes
(	no	no
filterObject	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
serializedFilterObj	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
jobConf	no	yes
.	no	no
set	no	yes
(	no	no
TableScanDesc	no	yes
.	no	no
FILTER_OBJECT_CONF_STR	no	yes
,	no	no
serializedFilterObj	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
hasExpr	yes	yes
)	no	no
{	no	no
serializedFilterExpr	yes	yes
=	no	no
SerializationUtilities	no	yes
.	no	no
serializeExpression	no	yes
(	no	no
filterExpr	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
filterText	yes	yes
=	no	no
filterExpr	yes	yes
.	no	no
getExprString	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
RecordWriter	no	no
getHiveRecordWriter	no	no
(	no	no
JobConf	no	no
jc	no	yes
,	no	no
Path	no	no
outPath	no	yes
,	no	no
Class	no	no
<	no	no
?	no	no
extends	no	no
Writable	no	no
>	no	no
valueClass	no	no
,	no	no
boolean	no	no
isCompressed	no	yes
,	no	no
Properties	no	no
tableProperties	no	yes
,	no	no
Progressable	no	no
progress	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
outPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
jc	no	yes
)	no	no
;	no	no
final	no	no
OutputStream	no	yes
outStream	no	yes
=	no	no
Utilities	no	yes
.	no	no
createCompressedStream	no	yes
(	no	no
jc	no	yes
,	no	no
fs	no	yes
.	no	no
create	no	yes
(	no	no
outPath	no	yes
,	no	no
progress	no	yes
)	no	no
,	no	no
isCompressed	no	yes
)	no	no
;	no	no
return	no	no
new	no	no
RecordWriter	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
write	no	no
(	no	no
Writable	no	no
r	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
BytesWritable	no	yes
bw	no	yes
=	no	no
(	no	no
BytesWritable	no	yes
)	no	no
r	no	yes
;	no	no
int	no	no
recordLength	no	yes
=	no	no
bw	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
rowLength	yes	yes
=	no	no
tableProperties	no	yes
.	no	no
getProperty	no	yes
(	no	no
TeradataBinaryRecordReader	yes	yes
.	no	no
TD_ROW_LENGTH	no	yes
,	no	no
TeradataBinaryRecordReader	yes	yes
.	no	no
DEFAULT_TD_ROW_LENGTH	no	yes
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no

int	no	no
hasConsumed	yes	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
recordLengthBytes	no	yes
,	no	no
lengthExpected	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
hasConsumed	yes	yes
<	no	no
lengthExpected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	yes	yes
,	no	no
hasConsumed	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordLength	no	yes
=	no	no
EndianUtils	no	yes
.	no	no
readSwappedUnsignedShort	no	yes
(	no	no
recordLengthBytes	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
pos	no	yes
+=	no	no
lengthExpected	yes	yes
;	no	no
lengthExpected	yes	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	yes	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
lengthExpected	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	yes	yes
<	no	no
lengthExpected	yes	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordLength	no	yes
=	no	no
EndianUtils	no	yes
.	no	no
readSwappedUnsignedShort	no	yes
(	no	no
recordLengthBytes	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
pos	yes	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

return	no	no
false	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	yes	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordLength	no	yes
=	no	no
EndianUtils	no	yes
.	no	no
readSwappedUnsignedShort	no	yes
(	no	no
recordLengthBytes	yes	yes
,	no	no
0	no	no
)	no	no
;	no	no
pos	no	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	yes	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
recordLength	no	yes
=	no	no
EndianUtils	no	yes
.	no	no
readSwappedUnsignedShort	no	yes
(	no	no
recordLengthBytes	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
pos	no	yes
+=	no	no
lengthExpected	yes	yes
;	no	no
lengthExpected	yes	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	yes	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
lengthExpected	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	yes	yes
<	no	no
lengthExpected	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	yes	yes
,	no	no
hasConsumed	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	no	yes
)	no	no
+	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
valueByteArray	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
value	no	yes
.	no	no
set	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
0	no	no
,	no	no
recordLength	no	yes
)	no	no
;	no	no
pos	no	yes
+=	no	no
lengthExpected	yes	yes
;	no	no
lengthExpected	yes	yes
=	no	no
endOfRecord	no	yes
.	no	no
length	no	yes
;	no	no
hasConsumed	yes	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
endOfRecord	no	yes
,	no	no
lengthExpected	yes	yes
)	no	no
;	no	no

recordLength	no	yes
=	no	no
EndianUtils	no	yes
.	no	no
readSwappedUnsignedShort	no	yes
(	no	no
recordLengthBytes	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
pos	yes	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	no	yes
)	no	no
+	no	no
Hex	no	yes
.	no	no
encodeHexString	no	yes
(	no	no
valueByteArray	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
value	no	yes
.	no	no
set	no	yes
(	no	no
valueByteArray	no	yes
,	no	no
0	no	no
,	no	no
recordLength	no	yes
)	no	no
;	no	no
pos	yes	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
endOfRecord	no	yes
.	no	no
length	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
endOfRecord	no	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no

pos	no	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
recordLength	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
valueByteArray	yes	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
getFilePosition	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
Hex	yes	yes
.	no	no
encodeHexString	no	yes
(	no	no
recordLengthBytes	yes	yes
)	no	no
+	no	no
Hex	yes	yes
.	no	no
encodeHexString	no	yes
(	no	no
valueByteArray	yes	yes
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
EOFException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
value	no	yes
.	no	no
set	no	yes
(	no	no
valueByteArray	yes	yes
,	no	no
0	no	no
,	no	no
recordLength	no	yes
)	no	no
;	no	no
pos	no	yes
+=	no	no
lengthExpected	no	yes
;	no	no
lengthExpected	no	yes
=	no	no
endOfRecord	yes	yes
.	no	no
length	no	yes
;	no	no
hasConsumed	no	yes
=	no	no
readExpectedBytes	no	yes
(	no	no
endOfRecord	yes	yes
,	no	no
lengthExpected	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hasConsumed	no	yes
<	no	no
lengthExpected	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
format	no	yes
(	no	no
,	no	no
lengthExpected	no	yes
,	no	no
hasConsumed	no	yes
)	no	no
)	no	no
;	no	no

private	no	no
Schema	no	no
getSchema	no	no
(	no	no
JobConf	no	no
job	no	yes
,	no	no
FileSplit	no	no
split	yes	no
)	no	no
throws	no	no
AvroSerdeException	no	no
,	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
AvroSerdeUtils	no	no
.	no	no
insideMRJob	no	no
(	no	no
job	no	yes
)	no	no
)	no	no
{	no	no
MapWork	no	yes
mapWork	no	yes
=	no	no
Utilities	no	yes
.	no	no
getMapWork	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Path	no	yes
,	no	no
PartitionDesc	no	no
>	no	no
pathsAndParts	no	yes
:	no	no
mapWork	no	yes
.	no	no
getPathToPartitionInfo	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
partitionPath	yes	yes
=	no	no
pathsAndParts	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pathIsInPartition	no	no
(	no	no
split	yes	no
.	no	no
getPath	no	no
(	no	no
)	no	no
,	no	no
partitionPath	yes	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
AvroSerdeUtils	no	yes
.	no	no
insideMRJob	no	no
(	no	no
job	no	yes
)	no	no
)	no	no
{	no	no
MapWork	no	yes
mapWork	no	yes
=	no	no
Utilities	no	yes
.	no	no
getMapWork	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Path	no	yes
,	no	no
PartitionDesc	no	no
>	no	no
pathsAndParts	no	yes
:	no	no
mapWork	no	yes
.	no	no
getPathToPartitionInfo	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
partitionPath	no	yes
=	no	no
pathsAndParts	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pathIsInPartition	no	no
(	no	no
split	no	yes
.	no	no
getPath	no	no
(	no	no
)	no	no
,	no	no
partitionPath	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
partitionPath	no	yes
,	no	no
split	no	yes
)	no	no
;	no	no
Properties	no	yes
props	no	yes
=	no	no
pathsAndParts	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
props	no	yes
.	no	no
containsKey	no	no
(	no	no
AvroTableProperties	no	yes
.	no	no
SCHEMA_LITERAL	no	no
.	no	no
getPropName	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
props	no	yes
.	no	no
containsKey	no	no
(	no	no
AvroTableProperties	no	yes
.	no	no
SCHEMA_URL	no	no
.	no	no
getPropName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
AvroSerdeUtils	no	yes
.	no	no
determineSchemaOrThrowException	no	yes
(	no	no
job	no	yes
,	no	no
props	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
split	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
job	no	yes
.	no	no
get	no	yes
(	no	no
AvroTableProperties	no	yes
.	no	no
AVRO_SERDE_SCHEMA	no	yes
.	no	no
getPropName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isNotBlank	no	no
(	no	no
s	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
SplitInfos	no	yes
applySargToMetadata	no	no
(	no	no
SearchArgument	no	no
sarg	no	yes
,	no	no
ByteBuffer	no	no
fileMetadata	no	yes
,	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
OrcTail	no	yes
orcTail	no	yes
=	no	no
ReaderImpl	no	yes
.	no	no
extractFileTail	no	yes
(	no	no
fileMetadata	no	yes
)	no	no
;	no	no
OrcProto	no	yes
.	no	no
Footer	no	yes
footer	no	yes
=	no	no
orcTail	no	yes
.	no	no
getFooter	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
stripeCount	no	yes
=	no	no
footer	no	yes
.	no	no
getStripesCount	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
writerUsedProlepticGregorian	no	yes
=	no	no
footer	no	yes
.	no	no
hasCalendar	no	yes
(	no	no
)	no	no
?	no	no
footer	no	yes
.	no	no
getCalendar	no	yes
(	no	no
)	no	no
==	no	no
OrcProto	no	yes
.	no	no
CalendarKind	no	yes
.	no	no
PROLEPTIC_GREGORIAN	no	yes
:	no	no
OrcConf	no	yes
.	no	no
PROLEPTIC_GREGORIAN_DEFAULT	no	yes
.	no	no
getBoolean	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
boolean	no	no
[	no	no
]	no	no
result	no	yes
=	no	no
OrcInputFormat	no	yes
.	no	no
pickStripesViaTranslatedSarg	no	yes
(	no	no
sarg	no	yes
,	no	no
orcTail	no	yes
.	no	no
getWriterVersion	no	yes
(	no	no
)	no	no
,	no	no
footer	no	yes
.	no	no
getTypesList	no	yes
(	no	no
)	no	no
,	no	no
orcTail	no	yes
.	no	no
getStripeStatistics	no	yes
(	no	no
writerUsedProlepticGregorian	no	yes
,	no	no
true	no	no
)	no	no
,	no	no
stripeCount	no	yes
)	no	no
;	no	no
SplitInfos	no	yes
.	no	no
Builder	no	yes
sb	no	yes
=	no	no
SplitInfos	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
StripeInformation	no	yes
>	no	no
stripes	no	yes
=	no	no
orcTail	no	yes
.	no	no
getStripes	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isEliminated	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
result	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
result	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
result	no	yes
[	no	no
i	yes	yes
]	no	no
)	no	no
continue	no	no
;	no	no
isEliminated	no	yes
=	no	no
false	no	no
;	no	no
StripeInformation	no	yes
si	yes	yes
=	no	no
stripes	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
[	no	no
]	no	no
pickStripesInternal	no	no
(	no	no
SearchArgument	no	no
sarg	no	yes
,	no	no
int	no	no
[	no	no
]	no	no
filterColumns	no	yes
,	no	no
List	no	no
<	no	no
StripeStatistics	no	no
>	no	no
stripeStats	no	yes
,	no	no
int	no	no
stripeCount	no	yes
,	no	no
Path	no	no
filePath	yes	no
,	no	no
final	no	no
SchemaEvolution	no	no
evolution	no	yes
)	no	no
{	no	no
boolean	no	no
[	no	no
]	no	no
includeStripe	no	yes
=	no	no
new	no	no
boolean	no	no
[	no	no
stripeCount	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
includeStripe	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
includeStripe	no	yes
[	no	no
i	yes	yes
]	no	no
=	no	no
(	no	no
i	yes	yes
>=	no	no
stripeStats	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
isStripeSatisfyPredicate	no	yes
(	no	no
stripeStats	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
,	no	no
sarg	no	yes
,	no	no
filterColumns	no	yes
,	no	no
evolution	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
includeStripe	no	yes
[	no	no
i	yes	yes
]	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
PredicateLeaf	no	yes
>	no	no
predLeaves	no	yes
=	no	no
sarg	no	yes
.	no	no
getLeaves	no	yes
(	no	no
)	no	no
;	no	no
TruthValue	no	yes
[	no	no
]	no	no
truthValues	no	yes
=	no	no
new	no	no
TruthValue	no	yes
[	no	no
predLeaves	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pred	no	yes
=	no	no
0	no	no
;	no	no
pred	no	yes
<	no	no
truthValues	no	yes
.	no	no
length	no	no
;	no	no
pred	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
filterColumns	no	yes
[	no	no
pred	no	yes
]	no	no
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
if	no	no
(	no	no
evolution	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
evolution	no	no
.	no	no
isPPDSafeConversion	no	no
(	no	no
filterColumns	no	yes
[	no	no
pred	no	yes
]	no	no
)	no	no
)	no	no
{	no	no
truthValues	no	yes
[	no	no
pred	no	yes
]	no	no
=	no	no
TruthValue	no	yes
.	no	no
YES_NO_NULL	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
ColumnStatistics	no	yes
stats	no	yes
=	no	no
stripeStatistics	no	yes
.	no	no
getColumnStatistics	no	yes
(	no	no
)	no	no
[	no	no
filterColumns	no	yes
[	no	no
pred	no	yes
]	no	no
]	no	no
;	no	no
if	no	no
(	no	no
stats	no	yes
.	no	no
getNumberOfValues	no	no
(	no	no
)	no	no
==	no	no
0	no	no
&&	no	no
!	no	no
stats	no	yes
.	no	no
hasNull	no	no
(	no	no
)	no	no
)	no	no
{	no	no
truthValues	no	yes
[	no	no
pred	no	yes
]	no	no
=	no	no
TruthValue	no	yes
.	no	no
YES_NO_NULL	no	yes
;	no	no
continue	no	no
;	no	no
}	no	no
PredicateLeaf	no	yes
leaf	no	yes
=	no	no
predLeaves	no	yes
.	no	no
get	no	yes
(	no	no
pred	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
truthValues	no	yes
[	no	no
pred	no	yes
]	no	no
=	no	no
RecordReaderImpl	no	yes
.	no	no
evaluatePredicate	no	yes
(	no	no
stats	no	yes
,	no	no
leaf	no	yes
,	no	no
null	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoDynamicValuesException	no	no
dve	yes	no
)	no	no
{	no	no

columnNameProperty	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
IOConstants	no	yes
.	no	no
SCHEMA_EVOLUTION_COLUMNS	no	yes
)	no	no
;	no	no
columnTypeProperty	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
IOConstants	no	yes
.	no	no
SCHEMA_EVOLUTION_COLUMNS_TYPES	no	yes
)	no	no
;	no	no
haveSchemaEvolutionProperties	no	yes
=	no	no
(	no	no
columnNameProperty	no	yes
!=	no	no
null	no	no
&&	no	no
columnTypeProperty	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
haveSchemaEvolutionProperties	no	yes
)	no	no
{	no	no
schemaEvolutionColumnNames	yes	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
schemaEvolutionColumnNames	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
haveSchemaEvolutionProperties	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
schemaEvolutionTypeDescrs	yes	yes
=	no	no
typeDescriptionsFromHiveTypeProperty	no	yes
(	no	no
columnTypeProperty	no	yes
,	no	no
dataColumns	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
schemaEvolutionTypeDescrs	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
Math	no	no
.	no	no
min	no	no
(	no	no
dataColumns	no	yes
,	no	no
schemaEvolutionColumnNames	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
haveSchemaEvolutionProperties	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isAcidRead	yes	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
SCHEMA_REQUIRED_TO_READ_ACID_TABLES	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
haveSchemaEvolutionProperties	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
columnNameProperty	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
columnTypeProperty	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
columnTypeProperty	no	yes
==	no	no
null	no	no
||	no	no
columnNameProperty	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
schemaEvolutionColumnNames	yes	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
schemaEvolutionColumnNames	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
schemaEvolutionTypeDescrs	yes	yes
=	no	no
typeDescriptionsFromHiveTypeProperty	no	yes
(	no	no
columnTypeProperty	no	yes
,	no	no
dataColumns	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
schemaEvolutionTypeDescrs	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
Math	no	no
.	no	no
min	no	no
(	no	no
dataColumns	no	yes
,	no	no
schemaEvolutionColumnNames	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
int	no	no
virtualColumnClipNum	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
int	no	no
columnNum	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
columnName	no	no
:	no	no
schemaEvolutionColumnNames	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
VirtualColumn	no	no
.	no	no
VIRTUAL_COLUMN_NAMES	no	no
.	no	no
contains	no	no
(	no	no
columnName	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
columnNames	no	yes
;	no	no
List	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
columnTypes	no	yes
;	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
props	no	yes
.	no	no
containsKey	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
?	no	no
props	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
:	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
columnNameProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnNames	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
columnTypeProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnTypes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnTypes	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	no	yes
)	no	no
;	no	no
}	no	no
TypeDescription	no	yes
schema	yes	yes
=	no	no
TypeDescription	no	yes
.	no	no
createStruct	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
columnNames	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
schema	yes	yes
.	no	no
addField	no	yes
(	no	no
columnNames	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
OrcInputFormat	no	yes
.	no	no
convertTypeInfo	no	yes
(	no	no
columnTypes	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
ensurePutReader	no	no
(	no	no
ReaderKey	no	no
key	no	yes
,	no	no
ReaderPair	no	yes
deltaPair	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
ReaderPair	no	yes
oldPair	no	yes
=	no	no
readers	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
deltaPair	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
oldPair	no	yes
==	no	no
null	no	no
)	no	no
return	no	no
;	no	no
String	no	yes
error	yes	yes
=	no	no
+	no	no
key	no	yes
+	no	no
+	no	no
deltaPair	no	yes
+	no	no
+	no	no
oldPair	no	yes
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
close	no	yes
(	no	no
boolean	no	no
abort	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
abort	no	no
)	no	no
{	no	no
if	no	no
(	no	no
flushLengths	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
writerClosed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
acidOperationalProperties	no	no
.	no	no
isSplitUpdate	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
.	no	no
inserts	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
writer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
options	no	no
.	no	no
isWritingBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
writerClosed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
acidOperationalProperties	no	no
.	no	no
isSplitUpdate	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
.	no	no
inserts	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
writer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
options	no	no
.	no	no
isWritingBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
path	yes	yes
,	no	no
writerOptions	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
writerClosed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
acidOperationalProperties	no	no
.	no	no
isSplitUpdate	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
.	no	no
inserts	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
writer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
options	no	no
.	no	no
isWritingBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
path	yes	yes
,	no	no
writerOptions	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
indexBuilder	yes	yes
.	no	no
acidStats	no	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
options	no	no
.	no	no
isWritingBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
path	yes	yes
,	no	no
writerOptions	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
initWriter	no	yes
(	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
options	no	no
.	no	no
isWritingBase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
path	yes	yes
,	no	no
writerOptions	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
initWriter	no	yes
(	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
deleteEventWriter	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
deleteEventIndexBuilder	no	no
.	no	no
acidStats	no	no
.	no	no
deletes	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
OrcFile	no	yes
.	no	no
createWriter	no	yes
(	no	no
path	yes	yes
,	no	no
writerOptions	no	yes
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
initWriter	no	yes
(	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
deleteEventWriter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
deleteEventIndexBuilder	no	no
.	no	no
acidStats	no	yes
.	no	no
deletes	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
,	no	no
indexBuilder	no	yes
.	no	no
acidStats	no	yes
)	no	no
;	no	no
}	no	no
deleteEventWriter	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
RecordReader	no	no
rowsOptions	no	no
(	no	no
Options	no	no
options	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

b	no	yes
=	no	no
SearchArgumentFactory	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
;	no	no
b	no	yes
.	no	no
startAnd	no	yes
(	no	no
)	no	no
.	no	no
startNot	no	yes
(	no	no
)	no	no
.	no	no
lessThan	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
ORIGINAL_WRITEID_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
k	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
b	no	yes
.	no	no
startNot	no	yes
(	no	no
)	no	no
.	no	no
lessThan	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
BUCKET_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
minBucketProp	no	yes
)	no	no
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
b	no	yes
.	no	no
startNot	no	yes
(	no	no
)	no	no
.	no	no
lessThan	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
ROW_ID_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
minRowId	no	yes
)	no	no
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
b	no	yes
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
keyInterval	no	yes
.	no	no
getMaxKey	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
RecordIdentifier	no	yes
k	no	yes
=	no	no
keyInterval	no	yes
.	no	no
getMaxKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
b	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
b	no	yes
=	no	no
SearchArgumentFactory	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
b	no	yes
.	no	no
startAnd	no	yes
(	no	no
)	no	no
.	no	no
lessThanEquals	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
ORIGINAL_WRITEID_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
k	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
b	no	yes
.	no	no
lessThanEquals	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
BUCKET_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
maxBucketProp	no	yes
)	no	no
;	no	no
b	no	yes
.	no	no
lessThanEquals	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
ROW_ID_FIELD_NAME	no	yes
,	no	no
PredicateLeaf	no	yes
.	no	no
Type	no	yes
.	no	no
LONG	no	yes
,	no	no
maxRowId	no	yes
)	no	no
;	no	no
b	no	yes
.	no	no
end	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
b	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
deleteEventSarg	yes	yes
=	no	no
b	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no

long	no	no
splitEnd	no	yes
=	no	no
orcSplit	no	yes
.	no	no
getStart	no	yes
(	no	no
)	no	no
+	no	no
orcSplit	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
minRowId	no	yes
=	no	no
syntheticProps	no	yes
.	no	no
getRowIdOffset	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
maxRowId	no	yes
=	no	no
syntheticProps	no	yes
.	no	no
getRowIdOffset	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
StripeInformation	no	no
stripe	no	yes
:	no	no
orcTail	no	no
.	no	no
getStripes	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
splitStart	no	no
>	no	no
stripe	no	yes
.	no	no
getOffset	no	no
(	no	no
)	no	no
)	no	no
{	no	no
minRowId	no	yes
+=	no	no
stripe	no	yes
.	no	no
getNumberOfRows	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
splitEnd	no	yes
>	no	no
stripe	no	yes
.	no	no
getOffset	no	no
(	no	no
)	no	no
)	no	no
{	no	no
maxRowId	no	yes
+=	no	no
stripe	no	yes
.	no	no
getNumberOfRows	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
RecordIdentifier	no	yes
minKey	no	yes
=	no	no
new	no	no
RecordIdentifier	no	yes
(	no	no
syntheticProps	no	yes
.	no	no
getSyntheticWriteId	no	yes
(	no	no
)	no	no
,	no	no
syntheticProps	no	yes
.	no	no
getBucketProperty	no	yes
(	no	no
)	no	no
,	no	no
minRowId	no	yes
)	no	no
;	no	no
RecordIdentifier	no	yes
maxKey	no	yes
=	no	no
new	no	no
RecordIdentifier	no	yes
(	no	no
syntheticProps	no	yes
.	no	no
getSyntheticWriteId	no	yes
(	no	no
)	no	no
,	no	no
syntheticProps	no	yes
.	no	no
getBucketProperty	no	yes
(	no	no
)	no	no
,	no	no
maxRowId	no	yes
>	no	no
0	no	no
?	no	no
maxRowId	no	yes
-	no	no
1	no	no
:	no	no
0	no	no
)	no	no
;	no	no
OrcRawRecordMerger	no	yes
.	no	no
KeyInterval	no	yes
keyIntervalTmp	yes	yes
=	no	no
new	no	no
OrcRawRecordMerger	no	yes
.	no	no
KeyInterval	no	yes
(	no	no
minKey	no	yes
,	no	no
maxKey	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
minRowId	no	yes
>=	no	no
maxRowId	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
DiskRangeList	no	yes
.	no	no
MutateHelper	no	yes
getDataFromCacheAndDisk	no	no
(	no	no
DiskRangeList	no	yes
listToRead	no	yes
,	no	no
long	no	no
stripeOffset	no	no
,	no	no
boolean	no	no
hasFileId	no	no
,	no	no
IdentityHashMap	no	no
<	no	no
ByteBuffer	no	no
,	no	no
Boolean	no	no
>	no	no
toRelease	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
DiskRangeList	no	yes
.	no	no
MutateHelper	no	yes
toRead	yes	yes
=	no	no
new	no	no
DiskRangeList	no	yes
.	no	no
MutateHelper	no	yes
(	no	no
listToRead	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
readIndexStreams	no	no
(	no	no
OrcIndex	no	no
index	no	yes
,	no	no
StripeInformation	no	no
stripe	yes	yes
,	no	no
List	no	no
<	no	no
OrcProto	no	no
.	no	no
Stream	no	no
>	no	no
streams	no	yes
,	no	no
boolean	no	no
[	no	no
]	no	no
physicalFileIncludes	no	yes
,	no	no
boolean	no	no
[	no	no
]	no	no
sargColumns	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
long	no	no
stripeOffset	no	yes
=	no	no
stripe	yes	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
DiskRangeList	no	yes
indexRanges	no	yes
=	no	no
planIndexReading	no	yes
(	no	no
fileSchema	no	yes
,	no	no
streams	no	yes
,	no	no
true	no	no
,	no	no
physicalFileIncludes	no	yes
,	no	no
sargColumns	no	yes
,	no	no
version	no	yes
,	no	no
index	no	yes
.	no	no
getBloomFilterKinds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
indexRanges	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
ColumnStreamData	no	yes
csd	no	yes
=	no	no
POOLS	no	yes
.	no	no
csdPool	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
endCOffset	no	yes
=	no	no
sctx	yes	yes
.	no	no
offset	no	yes
+	no	no
sctx	yes	yes
.	no	no
length	no	yes
;	no	no
DiskRangeList	no	yes
lastCached	no	yes
=	no	no
readEncodedStream	no	yes
(	no	no
stripeOffset	no	yes
,	no	no
iter	no	yes
,	no	no
sctx	yes	yes
.	no	no
offset	no	yes
,	no	no
endCOffset	no	yes
,	no	no
csd	no	yes
,	no	no
endCOffset	no	yes
,	no	no
sctx	yes	yes
.	no	no
offset	no	yes
,	no	no
toRelease	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
lastCached	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
iter	no	yes
=	no	no
lastCached	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
isTracingEnabled	no	no
)	no	no
{	no	no
traceLogBuffersUsedToParse	no	yes
(	no	no
csd	no	yes
)	no	no
;	no	no
}	no	no
CodedInputStream	no	yes
cis	no	yes
=	no	no
CodedInputStream	no	yes
.	no	no
newInstance	no	yes
(	no	no
new	no	no
IndexStream	no	yes
(	no	no
csd	no	yes
.	no	no
getCacheBuffers	no	yes
(	no	no
)	no	no
,	no	no
sctx	yes	yes
.	no	no
length	no	yes
)	no	no
)	no	no
;	no	no
cis	no	yes
.	no	no
setSizeLimit	no	yes
(	no	no
InStream	no	yes
.	no	no
PROTOBUF_MESSAGE_MAX_LIMIT	no	yes
)	no	no
;	no	no
switch	no	no
(	no	no
sctx	yes	yes
.	no	no
kind	no	no
)	no	no
{	no	no
case	no	no
ROW_INDEX	no	no
:	no	no
OrcProto	no	no
.	no	no
RowIndex	no	no
tmp	no	yes
=	no	no
index	no	no
.	no	no
getRowGroupIndex	no	no
(	no	no
)	no	no
[	no	no
colIx	no	no
]	no	no
=	no	no
OrcProto	no	no
.	no	no
RowIndex	no	no
.	no	no
parseFrom	no	no
(	no	no
cis	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isTracingEnabled	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
tmp	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
replace	no	yes
(	no	no
'\n'	no	no
,	no	no
' '	no	no
)	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
BLOOM_FILTER	no	no
:	no	no
case	no	no
BLOOM_FILTER_UTF8	no	no
:	no	no
index	no	no
.	no	no
getBloomFilterIndex	no	no
(	no	no
)	no	no
[	no	no
colIx	no	no
]	no	no
=	no	no
OrcProto	no	no
.	no	no
BloomFilterIndex	no	no
.	no	no
parseFrom	no	no
(	no	no
cis	no	yes
)	no	no
;	no	no

DiskRangeList	no	yes
iter	no	yes
=	no	no
toRead	yes	yes
.	no	no
next	no	yes
;	no	no
boolean	no	no
hasError	no	yes
=	no	no
true	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
int	no	no
colIx	no	yes
=	no	no
0	no	no
;	no	no
colIx	no	yes
<	no	no
colCtxs	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
colIx	no	yes
)	no	no
{	no	no
ReadContext	no	yes
ctx	no	yes
=	no	no
colCtxs	no	yes
[	no	no
colIx	no	yes
]	no	no
;	no	no
if	no	no
(	no	no
ctx	no	yes
==	no	no
null	no	no
)	no	no
continue	no	no
;	no	no
for	no	no
(	no	no
int	no	no
streamIx	no	yes
=	no	no
0	no	no
;	no	no
streamIx	no	yes
<	no	no
ctx	no	yes
.	no	no
streamCount	no	no
;	no	no
++	no	no
streamIx	no	yes
)	no	no
{	no	no
StreamContext	no	yes
sctx	no	yes
=	no	no
ctx	no	yes
.	no	no
streams	no	yes
[	no	no
streamIx	no	yes
]	no	no
;	no	no
DiskRangeList	no	yes
newIter	no	yes
=	no	no
preReadUncompressedStream	no	yes
(	no	no
stripeOffset	yes	yes
,	no	no
iter	no	yes
,	no	no
sctx	no	yes
.	no	no
offset	no	yes
,	no	no
sctx	no	yes
.	no	no
offset	no	yes
+	no	no
sctx	no	yes
.	no	no
length	no	yes
,	no	no
sctx	no	yes
.	no	no
kind	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
newIter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
iter	no	yes
=	no	no
newIter	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
toRelease	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
releaseBuffers	no	yes
(	no	no
toRelease	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
toRelease	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
toRelease	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
releaseBuffers	no	yes
(	no	no
toRelease	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
toRelease	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
fileKey	no	yes
+	no	no
+	no	no
stripeOffset	no	yes
+	no	no
+	no	no
RecordReaderUtils	no	yes
.	no	no
stringifyDiskRanges	no	yes
(	no	no
toRead	no	yes
.	no	no
next	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
iter	no	yes
=	no	no
toRead	no	yes
.	no	no
next	no	yes
;	no	no
hasError	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
hasError	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
releaseInitialRefcounts	no	yes
(	no	no
toRead	no	yes
.	no	no
next	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
toRelease	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
releaseBuffers	no	yes
(	no	no
toRelease	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
toRelease	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
int	no	no
dumpOneLine	no	no
(	no	no
int	no	no
ix	yes	yes
,	no	no
Logger	no	no
logger	no	no
,	no	no
long	no	no
[	no	no
]	no	no
log	yes	yes
)	no	no
{	no	no
int	no	no
event	no	yes
=	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
event	no	yes
)	no	no
{	no	no
case	no	no
TREE_READER_NEXT_VECTOR	no	no
:	no	no
{	no	no

return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
SARG_RESULT	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SARG_RESULT2	no	no
:	no	no
{	no	no
int	no	no
rgsLength	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
int	no	no
elements	no	yes
=	no	no
(	no	no
rgsLength	no	yes
>>	no	no
6	no	no
)	no	no
+	no	no
(	no	no
(	no	no
rgsLength	no	yes
&	no	no
63	no	no
)	no	no
==	no	no
0	no	no
?	no	no
0	no	no
:	no	no
1	no	no
)	no	no
;	no	no
boolean	no	no
[	no	no
]	no	no
rgs	yes	yes
=	no	no
new	no	no
boolean	no	no
[	no	no
rgsLength	no	yes
]	no	no
;	no	no
int	no	no
rgsOffset	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
elements	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
long	no	no
val	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
i	no	yes
+	no	no
2	no	no
]	no	no
;	no	no
int	no	no
bitsInByte	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
rgsLength	no	yes
-	no	no
rgsOffset	no	yes
,	no	no
64	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
rgsOffset	no	yes
;	no	no
++	no	no
j	no	yes
,	no	no
val	no	yes
>>>=	no	no
1	no	no
)	no	no
{	no	no
rgs	yes	yes
[	no	no
rgsOffset	no	yes
+	no	no
j	no	yes
]	no	no
=	no	no
(	no	no
val	no	yes
&	no	no
1	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
rgsOffset	no	yes
+=	no	no
bitsInByte	no	yes
;	no	no

int	no	no
rgsOffset	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
elements	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
long	no	no
val	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
i	no	yes
+	no	no
2	no	no
]	no	no
;	no	no
int	no	no
bitsInByte	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
rgsLength	no	yes
-	no	no
rgsOffset	no	yes
,	no	no
64	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
rgsOffset	no	yes
;	no	no
++	no	no
j	no	yes
,	no	no
val	no	yes
>>>=	no	no
1	no	no
)	no	no
{	no	no
rgs	no	yes
[	no	no
rgsOffset	no	yes
+	no	no
j	no	yes
]	no	no
=	no	no
(	no	no
val	no	yes
&	no	no
1	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
rgsOffset	no	yes
+=	no	no
bitsInByte	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
DebugUtils	no	yes
.	no	no
toString	no	yes
(	no	no
rgs	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
(	no	no
elements	no	yes
+	no	no
2	no	no
)	no	no
;	no	no
}	no	no
case	no	no
RANGES	no	no
:	no	no
{	no	no
int	no	no
val	no	yes
=	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
RangesSrc	no	yes
src	yes	yes
=	no	no
RangesSrc	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
val	no	yes
>>>	no	no
MAX_ELEMENT_BITS	no	yes
]	no	no
;	no	no
int	no	no
rangeCount	no	yes
=	no	no
val	no	yes
&	no	no
(	no	no
(	no	no
1	no	no
<<	no	no
MAX_ELEMENT_BITS	no	yes
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no

long	no	no
val	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
i	no	yes
+	no	no
2	no	no
]	no	no
;	no	no
int	no	no
bitsInByte	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
rgsLength	no	yes
-	no	no
rgsOffset	no	yes
,	no	no
64	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
rgsOffset	no	yes
;	no	no
++	no	no
j	no	yes
,	no	no
val	no	yes
>>>=	no	no
1	no	no
)	no	no
{	no	no
rgs	no	yes
[	no	no
rgsOffset	no	yes
+	no	no
j	no	yes
]	no	no
=	no	no
(	no	no
val	no	yes
&	no	no
1	no	no
)	no	no
==	no	no
1	no	no
;	no	no
}	no	no
rgsOffset	no	yes
+=	no	no
bitsInByte	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
DebugUtils	no	yes
.	no	no
toString	no	yes
(	no	no
rgs	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
(	no	no
elements	no	yes
+	no	no
2	no	no
)	no	no
;	no	no
}	no	no
case	no	no
RANGES	no	no
:	no	no
{	no	no
int	no	no
val	no	yes
=	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
RangesSrc	no	yes
src	no	yes
=	no	no
RangesSrc	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
val	no	yes
>>>	no	no
MAX_ELEMENT_BITS	no	yes
]	no	no
;	no	no
int	no	no
rangeCount	no	yes
=	no	no
val	no	yes
&	no	no
(	no	no
(	no	no
1	no	no
<<	no	no
MAX_ELEMENT_BITS	no	yes
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
rangeCount	no	yes
;	no	no
++	no	no
i	no	yes
,	no	no
currentOffset	no	yes
+=	no	no
3	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
rgsOffset	no	yes
+=	no	no
bitsInByte	no	yes
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
DebugUtils	no	yes
.	no	no
toString	no	yes
(	no	no
rgs	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
(	no	no
elements	no	yes
+	no	no
2	no	no
)	no	no
;	no	no
}	no	no
case	no	no
RANGES	no	no
:	no	no
{	no	no
int	no	no
val	no	yes
=	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
RangesSrc	no	yes
src	no	yes
=	no	no
RangesSrc	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
val	no	yes
>>>	no	no
MAX_ELEMENT_BITS	no	yes
]	no	no
;	no	no
int	no	no
rangeCount	no	yes
=	no	no
val	no	yes
&	no	no
(	no	no
(	no	no
1	no	no
<<	no	no
MAX_ELEMENT_BITS	no	yes
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
rangeCount	no	yes
;	no	no
++	no	no
i	no	no
,	no	no
currentOffset	no	yes
+=	no	no
3	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
+	no	no
+	no	no
src	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
+	no	no
rangeCount	no	yes
*	no	no
3	no	no
;	no	no
}	no	no
case	no	no
COLUMN_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no

return	no	no
ix	yes	yes
+	no	no
(	no	no
elements	no	yes
+	no	no
2	no	no
)	no	no
;	no	no
}	no	no
case	no	no
RANGES	no	no
:	no	no
{	no	no
int	no	no
val	no	yes
=	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
RangesSrc	no	yes
src	no	yes
=	no	no
RangesSrc	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
val	no	yes
>>>	no	no
MAX_ELEMENT_BITS	no	yes
]	no	no
;	no	no
int	no	no
rangeCount	no	yes
=	no	no
val	no	yes
&	no	no
(	no	no
(	no	no
1	no	no
<<	no	no
MAX_ELEMENT_BITS	no	yes
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
rangeCount	no	yes
;	no	no
++	no	no
i	no	no
,	no	no
currentOffset	no	yes
+=	no	no
3	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
+	no	no
+	no	no
src	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
+	no	no
rangeCount	no	yes
*	no	no
3	no	no
;	no	no
}	no	no
case	no	no
COLUMN_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no

int	no	no
val	no	yes
=	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
;	no	no
RangesSrc	no	yes
src	no	yes
=	no	no
RangesSrc	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
val	no	yes
>>>	no	no
MAX_ELEMENT_BITS	no	yes
]	no	no
;	no	no
int	no	no
rangeCount	no	yes
=	no	no
val	no	yes
&	no	no
(	no	no
(	no	no
1	no	no
<<	no	no
MAX_ELEMENT_BITS	no	yes
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
rangeCount	no	yes
;	no	no
++	no	no
i	no	no
,	no	no
currentOffset	no	yes
+=	no	no
3	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
+	no	no
+	no	no
src	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
+	no	no
rangeCount	no	yes
*	no	no
3	no	no
;	no	no
}	no	no
case	no	no
COLUMN_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no

int	no	no
currentOffset	no	yes
=	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
rangeCount	no	yes
;	no	no
++	no	no
i	no	no
,	no	no
currentOffset	no	yes
+=	no	no
3	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
+	no	no
+	no	no
src	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
+	no	no
rangeCount	no	yes
*	no	no
3	no	no
;	no	no
}	no	no
case	no	no
COLUMN_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
ADD_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no

sb	no	yes
.	no	no
append	no	yes
(	no	no
printRange	no	yes
(	no	no
currentOffset	no	yes
,	no	no
log	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
+	no	no
+	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
+	no	no
+	no	no
src	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
+	no	no
rangeCount	no	yes
*	no	no
3	no	no
;	no	no
}	no	no
case	no	no
COLUMN_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
ADD_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
+	no	no
+	no	no
(	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no
}	no	no
case	no	no
START_RG	no	no
:	no	no
{	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
+	no	no
+	no	no
ColumnEncoding	no	yes
.	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
]	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
ADD_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
+	no	no
+	no	no
(	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no
}	no	no
case	no	no
START_RG	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no

case	no	no
SKIP_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
ADD_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
+	no	no
+	no	no
(	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no
}	no	no
case	no	no
START_RG	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STRIPE_STREAM	no	no
:	no	no
{	no	no

}	no	no
case	no	no
ADD_STREAM	no	no
:	no	no
{	no	no
long	no	no
streamOffset	no	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
streamOffset	no	yes
+	no	no
+	no	no
(	no	no
streamOffset	no	yes
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
+	no	no
+	no	no
(	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
3	no	no
]	no	no
)	no	no
==	no	no
1	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no
}	no	no
case	no	no
START_RG	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STRIPE_STREAM	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STREAM	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no

return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no
}	no	no
case	no	no
START_RG	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STRIPE_STREAM	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STREAM	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
int	no	no
unlockLen	no	yes
=	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
;	no	no
String	no	yes
unlockStr	no	yes
=	no	no
(	no	no
unlockLen	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
:	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
unlockLen	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
unlockStr	no	yes
)	no	no
;	no	no

logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STRIPE_STREAM	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STREAM	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
int	no	no
unlockLen	no	yes
=	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
;	no	no
String	no	yes
unlockStr	no	yes
=	no	no
(	no	no
unlockLen	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
:	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
unlockLen	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
unlockStr	no	yes
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
START_READ	no	no
:	no	no
{	no	no

case	no	no
START_COL	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STRIPE_STREAM	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
START_STREAM	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
int	no	no
unlockLen	no	yes
=	no	no
getFirstInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
;	no	no
String	no	yes
unlockStr	no	yes
=	no	no
(	no	no
unlockLen	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
:	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
unlockLen	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
unlockStr	no	yes
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
START_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no

}	no	no
case	no	no
START_STREAM	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
int	no	no
unlockLen	no	yes
=	no	no
getFirstInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
;	no	no
String	no	yes
unlockStr	no	yes
=	no	no
(	no	no
unlockLen	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
:	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
unlockLen	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
unlockStr	no	yes
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
START_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
PARTIAL_UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no

String	no	yes
unlockStr	no	yes
=	no	no
(	no	no
unlockLen	no	yes
==	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
:	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
unlockLen	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Kind	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
[	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
]	no	no
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
2	no	no
]	no	no
)	no	no
)	no	no
+	no	no
+	no	no
unlockStr	no	yes
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
3	no	no
;	no	no
}	no	no
case	no	no
START_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
PARTIAL_UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	yes	yes
=	no	no
log	no	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	yes	yes
+	no	no
+	no	no
(	no	no
offset	yes	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	no	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
VALID_UNCOMPRESSEED_CHUNK	no	no
:	no	no
{	no	no

}	no	no
case	no	no
START_READ	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
PARTIAL_UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
VALID_UNCOMPRESSEED_CHUNK	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
(	no	no
int	no	no
)	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
CACHE_COLLISION	no	no
:	no	no
{	no	no

return	no	no
ix	yes	yes
+	no	no
1	no	no
;	no	no
}	no	no
case	no	no
UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
PARTIAL_UNCOMPRESSED_DATA	no	no
:	no	no
{	no	no
long	no	no
offset	no	yes
=	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
(	no	no
offset	no	yes
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
VALID_UNCOMPRESSEED_CHUNK	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
(	no	no
int	no	no
)	no	no
log	yes	yes
[	no	no
ix	yes	yes
+	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
2	no	no
;	no	no
}	no	no
case	no	no
CACHE_COLLISION	no	no
:	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
ix	yes	yes
+	no	no
+	no	no
printRange	no	yes
(	no	no
ix	yes	yes
+	no	no
1	no	no
,	no	no
log	yes	yes
)	no	no
+	no	no
+	no	no
Integer	no	yes
.	no	no
toHexString	no	yes
(	no	no
getSecondInt	no	yes
(	no	no
log	yes	yes
[	no	no
ix	yes	yes
]	no	no
)	no	no
)	no	no
)	no	no
;	no	no
return	no	no
ix	yes	yes
+	no	no
4	no	no
;	no	no

public	no	no
FilterPredicateLeafBuilder	no	no
getLeafFilterBuilderByType	no	no
(	no	no
PredicateLeaf	no	no
.	no	no
Type	no	no
type	no	no
,	no	no
Type	no	no
parquetType	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
switch	no	no
(	no	no
type	no	no
)	no	no
{	no	no
case	no	no
LONG	no	no
:	no	no
case	no	no
FLOAT	no	no
:	no	no
case	no	no
STRING	no	no
:	no	no
case	no	no
BOOLEAN	no	no
:	no	no
return	no	no
getLeafFilterBuilderByParquetType	no	no
(	no	no
parquetType	no	no
)	no	no
;	no	no
case	no	no
DATE	no	no
:	no	no
case	no	no
DECIMAL	no	no
:	no	no
case	no	no
TIMESTAMP	no	no
:	no	no
default	no	no
:	no	no
String	no	no
msg	yes	no
=	no	no
+	no	no
type	no	no
;	no	no

private	no	no
FilterPredicateLeafBuilder	no	no
getLeafFilterBuilderByParquetType	no	no
(	no	no
Type	no	no
parquetType	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
switch	no	no
(	no	no
parquetType	no	no
.	no	no
asPrimitiveType	no	no
(	no	no
)	no	no
.	no	no
getPrimitiveTypeName	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
INT32	no	no
:	no	no
return	no	no
new	no	no
IntFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
case	no	no
INT64	no	no
:	no	no
return	no	no
new	no	no
LongFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
case	no	no
FLOAT	no	no
:	no	no
return	no	no
new	no	no
FloatFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
case	no	no
DOUBLE	no	no
:	no	no
return	no	no
new	no	no
DoubleFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
case	no	no
BINARY	no	no
:	no	no
return	no	no
new	no	no
BinaryFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
case	no	no
BOOLEAN	no	no
:	no	no
return	no	no
new	no	no
BooleanFilterPredicateLeafBuilder	no	no
(	no	no
)	no	no
;	no	no
default	no	no
:	no	no
String	no	no
msg	yes	no
=	no	no
+	no	no
parquetType	no	no
.	no	no
asPrimitiveType	no	no
(	no	no
)	no	no
.	no	no
getPrimitiveTypeName	no	no
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
readPageV1	no	no
(	no	no
DataPageV1	no	no
page	no	yes
)	no	no
{	no	no
ValuesReader	no	yes
rlReader	no	yes
=	no	no
page	no	yes
.	no	no
getRlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
REPETITION_LEVEL	no	yes
)	no	no
;	no	no
ValuesReader	no	yes
dlReader	no	yes
=	no	no
page	no	yes
.	no	no
getDlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
DEFINITION_LEVEL	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
repetitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
rlReader	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
definitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
dlReader	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
BytesInput	no	yes
bytes	yes	yes
=	no	no
page	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
readPageV1	no	no
(	no	no
DataPageV1	no	no
page	no	yes
)	no	no
{	no	no
ValuesReader	no	yes
rlReader	no	yes
=	no	no
page	no	yes
.	no	no
getRlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
REPETITION_LEVEL	no	yes
)	no	no
;	no	no
ValuesReader	no	yes
dlReader	no	yes
=	no	no
page	no	yes
.	no	no
getDlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
DEFINITION_LEVEL	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
repetitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
rlReader	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
definitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
dlReader	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
BytesInput	no	yes
bytes	no	yes
=	no	no
page	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
bytes	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
pageValueCount	no	yes
+	no	no
)	no	no
;	no	no
ByteBufferInputStream	no	yes
in	yes	yes
=	no	no
bytes	no	yes
.	no	no
toInputStream	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
readPageV1	no	no
(	no	no
DataPageV1	no	no
page	no	yes
)	no	no
{	no	no
ValuesReader	no	yes
rlReader	no	yes
=	no	no
page	no	yes
.	no	no
getRlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
REPETITION_LEVEL	no	yes
)	no	no
;	no	no
ValuesReader	no	yes
dlReader	no	yes
=	no	no
page	no	yes
.	no	no
getDlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
DEFINITION_LEVEL	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
repetitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
rlReader	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
definitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
dlReader	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
BytesInput	no	yes
bytes	no	yes
=	no	no
page	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
bytes	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
pageValueCount	no	yes
+	no	no
)	no	no
;	no	no
ByteBufferInputStream	no	yes
in	yes	yes
=	no	no
bytes	no	yes
.	no	no
toInputStream	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
in	yes	yes
.	no	no
position	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rlReader	no	yes
.	no	no
initFromPage	no	yes
(	no	no
pageValueCount	no	yes
,	no	no
in	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
readPageV1	no	no
(	no	no
DataPageV1	no	no
page	no	yes
)	no	no
{	no	no
ValuesReader	no	yes
rlReader	no	yes
=	no	no
page	no	yes
.	no	no
getRlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
REPETITION_LEVEL	no	yes
)	no	no
;	no	no
ValuesReader	no	yes
dlReader	no	yes
=	no	no
page	no	yes
.	no	no
getDlEncoding	no	yes
(	no	no
)	no	no
.	no	no
getValuesReader	no	yes
(	no	no
descriptor	no	yes
,	no	no
DEFINITION_LEVEL	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
repetitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
rlReader	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
definitionLevelColumn	no	yes
=	no	no
new	no	no
ValuesReaderIntIterator	no	yes
(	no	no
dlReader	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
BytesInput	no	yes
bytes	no	yes
=	no	no
page	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
bytes	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
pageValueCount	no	yes
+	no	no
)	no	no
;	no	no
ByteBufferInputStream	no	yes
in	yes	yes
=	no	no
bytes	no	yes
.	no	no
toInputStream	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
in	yes	yes
.	no	no
position	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rlReader	no	yes
.	no	no
initFromPage	no	yes
(	no	no
pageValueCount	no	yes
,	no	no
in	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
in	yes	yes
.	no	no
position	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dlReader	no	yes
.	no	no
initFromPage	no	yes
(	no	no
pageValueCount	no	yes
,	no	no
in	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
readPageV2	no	no
(	no	no
DataPageV2	no	no
page	no	yes
)	no	no
{	no	no
this	no	no
.	no	no
pageValueCount	yes	yes
=	no	no
page	no	yes
.	no	no
getValueCount	no	yes
(	no	no
)	no	no
;	no	no
this	no	no
.	no	no
repetitionLevelColumn	no	yes
=	no	no
newRLEIterator	no	yes
(	no	no
descriptor	no	yes
.	no	no
getMaxRepetitionLevel	no	yes
(	no	no
)	no	no
,	no	no
page	no	yes
.	no	no
getRepetitionLevels	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
definitionLevelColumn	no	yes
=	no	no
newRLEIterator	no	yes
(	no	no
descriptor	no	yes
.	no	no
getMaxDefinitionLevel	no	yes
(	no	no
)	no	no
,	no	no
page	no	yes
.	no	no
getDefinitionLevels	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
ParquetMetadata	no	no
readSplitFooter	no	no
(	no	no
JobConf	no	no
configuration	no	no
,	no	no
final	no	no
Path	no	no
file	no	no
,	no	no
Object	no	no
cacheKey	yes	yes
,	no	no
MetadataFilter	no	no
filter	no	no
,	no	no
CacheTag	no	no
tag	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
MemoryBufferOrBuffers	no	yes
footerData	no	yes
=	no	no
(	no	no
cacheKey	yes	yes
==	no	no
null	no	no
||	no	no
metadataCache	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
null	no	no
:	no	no
metadataCache	no	yes
.	no	no
getFileMetadata	no	yes
(	no	no
cacheKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
footerData	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
return	no	no
ParquetFileReader	no	yes
.	no	no
readFooter	no	yes
(	no	no
new	no	no
ParquetFooterInputFromCache	no	yes
(	no	no
footerData	no	yes
)	no	no
,	no	no
filter	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
metadataCache	no	yes
.	no	no
decRefBuffer	no	yes
(	no	no
footerData	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throwIfCacheOnlyRead	no	yes
(	no	no
isReadCacheOnly	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
file	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
configuration	no	yes
)	no	no
;	no	no
final	no	no
FileStatus	no	yes
stat	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
file	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cacheKey	yes	no
==	no	no
null	no	no
||	no	no
metadataCache	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
readFooterFromFile	no	yes
(	no	no
file	no	yes
,	no	no
fs	no	yes
,	no	no
stat	no	yes
,	no	no
filter	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
(	no	no
SeekableInputStream	no	no
stream	no	yes
=	no	no
HadoopStreams	no	no
.	no	no
wrap	no	no
(	no	no
fs	no	yes
.	no	no
open	no	no
(	no	no
file	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
long	no	no
footerLengthIndex	no	yes
=	no	no
stat	no	yes
.	no	no
getLen	no	yes
(	no	no
)	no	no
-	no	no
ParquetFooterInputFromCache	no	yes
.	no	no
FOOTER_LENGTH_SIZE	no	yes
-	no	no
ParquetFileWriter	no	yes
.	no	no
MAGIC	no	yes
.	no	no
length	no	yes
;	no	no
stream	no	yes
.	no	no
seek	no	yes
(	no	no
footerLengthIndex	no	yes
)	no	no
;	no	no
int	no	no
footerLength	yes	yes
=	no	no
BytesUtils	no	yes
.	no	no
readIntLittleEndian	no	yes
(	no	no
stream	no	yes
)	no	no
;	no	no
stream	no	yes
.	no	no
seek	no	yes
(	no	no
footerLengthIndex	no	yes
-	no	no
footerLength	yes	yes
)	no	no
;	no	no

job	no	yes
.	no	no
setBoolean	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
MAP_SPECULATIVE	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getMinSplitSize	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
HiveConf	no	yes
.	no	no
setLongVar	no	yes
(	no	no
job	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAPREDMINSPLITSIZE	no	yes
,	no	no
work	no	yes
.	no	no
getMinSplitSize	no	yes
(	no	no
)	no	no
.	no	no
longValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
work	no	yes
.	no	no
getInputformat	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
job	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEINPUTFORMAT	no	yes
,	no	no
work	no	yes
.	no	no
getInputformat	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
inpFormat	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
job	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEINPUTFORMAT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
inpFormat	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
job	no	yes
.	no	no
setInputFormat	no	yes
(	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
inpFormat	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
Path	no	yes
outputPath	yes	yes
=	no	no
this	no	no
.	no	no
work	no	yes
.	no	no
getOutputDir	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
tempOutPath	no	yes
=	no	no
Utilities	no	yes
.	no	no
toTempPath	no	yes
(	no	no
outputPath	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
tempOutPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
job	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
tryAcquire	no	no
(	no	no
long	no	no
timeout	no	no
,	no	no
TimeUnit	no	no
unit	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
underlying	no	no
.	no	no
tryLock	no	no
(	no	no
0	no	no
,	no	no
unit	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
LOCK_ACQUIRED_MSG	no	yes
)	no	no
;	no	no
return	no	no
aquired	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
failedToAquire	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
WAIT_LOCK_ACQUIRE_MSG	no	yes
+	no	no
command	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
timeout	no	no
>	no	no
0	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
underlying	no	no
.	no	no
tryLock	no	no
(	no	no
timeout	no	no
,	no	no
unit	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
failedToAquire	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
WAIT_LOCK_ACQUIRE_MSG	no	yes
+	no	no
command	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
timeout	no	no
>	no	no
0	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
underlying	no	no
.	no	no
tryLock	no	no
(	no	no
timeout	no	no
,	no	no
unit	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
COMPILE_LOCK_TIMED_OUT	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
command	no	yes
)	no	no
;	no	no
return	no	no
failedToAquire	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	yes
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LockState	no	no
lock	no	no
(	no	no
LockRequest	no	no
lock	no	no
,	no	no
String	no	no
queryId	yes	yes
,	no	no
boolean	no	no
isBlocking	no	no
,	no	no
List	no	no
<	no	no
HiveLock	no	no
>	no	no
acquiredLocks	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no
Objects	no	yes
.	no	no
requireNonNull	no	yes
(	no	no
queryId	yes	yes
,	no	no
)	no	no
;	no	no
nextSleep	no	yes
=	no	no
50	no	no
;	no	no
MAX_SLEEP	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
15000	no	no
,	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_SLEEP_BETWEEN_RETRIES	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
maxNumWaits	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_NUMRETRIES	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no

LockState	no	no
lock	yes	no
(	no	no
LockRequest	no	no
lock	yes	no
,	no	no
String	no	no
queryId	no	yes
,	no	no
boolean	no	no
isBlocking	no	no
,	no	no
List	no	no
<	no	no
HiveLock	no	no
>	no	no
acquiredLocks	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no
Objects	no	yes
.	no	no
requireNonNull	no	yes
(	no	no
queryId	no	yes
,	no	no
)	no	no
;	no	no
nextSleep	no	yes
=	no	no
50	no	no
;	no	no
MAX_SLEEP	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
15000	no	no
,	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_SLEEP_BETWEEN_RETRIES	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
maxNumWaits	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_NUMRETRIES	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	no	yes
)	no	no
;	no	no

LockState	no	no
lock	no	yes
(	no	no
LockRequest	no	no
lock	no	yes
,	no	no
String	no	no
queryId	yes	yes
,	no	no
boolean	no	no
isBlocking	no	no
,	no	no
List	no	no
<	no	no
HiveLock	no	no
>	no	no
acquiredLocks	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no
Objects	no	yes
.	no	no
requireNonNull	no	yes
(	no	no
queryId	yes	yes
,	no	no
)	no	no
;	no	no
nextSleep	no	yes
=	no	no
50	no	no
;	no	no
MAX_SLEEP	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
15000	no	no
,	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_SLEEP_BETWEEN_RETRIES	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
maxNumWaits	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_NUMRETRIES	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
lock	no	yes
)	no	no
;	no	no
LockResponse	no	yes
res	yes	yes
=	no	no
txnManager	no	yes
.	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
lock	no	yes
)	no	no
;	no	no

nextSleep	no	yes
=	no	no
50	no	no
;	no	no
MAX_SLEEP	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
15000	no	no
,	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_SLEEP_BETWEEN_RETRIES	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
maxNumWaits	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
0	no	no
,	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_NUMRETRIES	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
lock	no	yes
)	no	no
;	no	no
LockResponse	no	yes
res	yes	yes
=	no	no
txnManager	no	yes
.	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
lock	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
queryId	yes	yes
+	no	no
+	no	no
res	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isBlocking	no	no
)	no	no
{	no	no
if	no	no
(	no	no
res	yes	yes
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
LockState	no	yes
.	no	no
WAITING	no	yes
)	no	no
{	no	no
return	no	no
LockState	no	yes
.	no	no
WAITING	no	yes
;	no	no
}	no	no
}	no	no
int	no	no
numRetries	yes	yes
=	no	no
0	no	no
;	no	no
long	no	no
startRetry	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
res	yes	yes
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
LockState	no	yes
.	no	no
WAITING	no	yes
&&	no	no
numRetries	yes	yes
++	no	no
<	no	no
maxNumWaits	no	yes
)	no	no
{	no	no
backoff	no	yes
(	no	no
)	no	no
;	no	no

res	yes	yes
=	no	no
txnManager	no	yes
.	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
checkLock	no	yes
(	no	no
res	yes	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
long	no	no
retryDuration	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startRetry	no	yes
;	no	no
DbHiveLock	no	yes
hl	no	yes
=	no	no
new	no	no
DbHiveLock	no	yes
(	no	no
res	yes	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
,	no	no
queryId	yes	yes
,	no	no
lock	no	yes
.	no	no
getTxnid	no	yes
(	no	no
)	no	no
,	no	no
lock	no	yes
.	no	no
getComponent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
locks	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
boolean	no	no
logMsg	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
DbHiveLock	no	yes
l	no	no
:	no	no
locks	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
l	no	no
.	no	no
txnId	no	no
!=	no	no
hl	no	yes
.	no	no
txnId	no	no
)	no	no
{	no	no
logMsg	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
l	no	no
.	no	no
txnId	no	no
==	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
l	no	no
.	no	no
queryId	yes	yes
.	no	no
equals	no	no
(	no	no
hl	no	yes
.	no	no
queryId	yes	yes
)	no	no
)	no	no
{	no	no
logMsg	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
logMsg	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
hl	no	yes
+	no	no
+	no	no
locks	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
logMsg	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
hl	no	yes
+	no	no
+	no	no
locks	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
locks	no	yes
.	no	no
add	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
res	no	yes
.	no	no
getState	no	no
(	no	no
)	no	no
!=	no	no
LockState	no	no
.	no	no
ACQUIRED	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
res	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
,	no	no
numRetries	no	yes
,	no	no
retryDuration	no	yes
,	no	no
queryId	no	yes
,	no	no
res	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
res	no	yes
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
LockState	no	no
.	no	no
WAITING	no	no
)	no	no
{	no	no
unlock	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
LockException	no	yes
le	no	yes
=	no	no
new	no	no
LockException	no	yes
(	no	no
null	no	no
,	no	no
ErrorMsg	no	yes
.	no	no
LOCK_ACQUIRE_TIMEDOUT	no	yes
,	no	no
lock	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
retryDuration	no	yes
)	no	no
,	no	no
res	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
TXN_MGR_DUMP_LOCK_STATE_ON_ACQUIRE_TIMEOUT	no	no
)	no	no
)	no	no
{	no	no
showLocksNewFormat	no	yes
(	no	no
le	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
le	no	yes
;	no	no
}	no	no
throw	no	no
new	no	no
LockException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
LOCK_CANNOT_BE_ACQUIRED	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
res	no	yes
)	no	no
;	no	no
}	no	no
acquiredLocks	no	yes
.	no	no
add	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
locks	no	yes
.	no	no
add	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
res	no	yes
.	no	no
getState	no	no
(	no	no
)	no	no
!=	no	no
LockState	no	no
.	no	no
ACQUIRED	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
res	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
,	no	no
numRetries	no	yes
,	no	no
retryDuration	no	yes
,	no	no
queryId	no	yes
,	no	no
res	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
res	no	yes
.	no	no
getState	no	no
(	no	no
)	no	no
==	no	no
LockState	no	no
.	no	no
WAITING	no	no
)	no	no
{	no	no
unlock	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
LockException	no	yes
le	yes	yes
=	no	no
new	no	no
LockException	no	yes
(	no	no
null	no	no
,	no	no
ErrorMsg	no	yes
.	no	no
LOCK_ACQUIRE_TIMEDOUT	no	yes
,	no	no
lock	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
retryDuration	no	yes
)	no	no
,	no	no
res	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
TXN_MGR_DUMP_LOCK_STATE_ON_ACQUIRE_TIMEOUT	no	no
)	no	no
)	no	no
{	no	no
showLocksNewFormat	no	yes
(	no	no
le	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
le	yes	yes
;	no	no
}	no	no
throw	no	no
new	no	no
LockException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
LOCK_CANNOT_BE_ACQUIRED	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
res	no	yes
)	no	no
;	no	no
}	no	no
acquiredLocks	no	yes
.	no	no
add	no	yes
(	no	no
hl	no	yes
)	no	no
;	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
metrics	no	yes
.	no	no
incrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
METASTORE_HIVE_LOCKS	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
showLocksNewFormat	no	no
(	no	no
String	no	no
preamble	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no
ShowLocksResponse	no	yes
rsp	no	yes
=	no	no
getLocks	no	yes
(	no	no
)	no	no
;	no	no
ByteArrayOutputStream	no	yes
baos	yes	yes
=	no	no
new	no	no
ByteArrayOutputStream	no	yes
(	no	no
1024	no	no
*	no	no
2	no	no
)	no	no
;	no	no
DataOutputStream	no	yes
os	no	yes
=	no	no
new	no	no
DataOutputStream	no	yes
(	no	no
baos	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
ShowLocksOperation	no	yes
.	no	no
dumpLockInfo	no	yes
(	no	no
os	no	yes
,	no	no
rsp	no	yes
)	no	no
;	no	no
os	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
unlock	no	no
(	no	no
HiveLock	no	no
hiveLock	yes	yes
)	no	no
throws	no	no
LockException	no	no
{	no	no
long	no	no
lockId	no	yes
=	no	no
(	no	no
(	no	no
DbHiveLock	no	yes
)	no	no
hiveLock	yes	yes
)	no	no
.	no	no
lockId	no	yes
;	no	no
boolean	no	no
removed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no

long	no	no
lockId	yes	yes
=	no	no
(	no	no
(	no	no
DbHiveLock	no	yes
)	no	no
hiveLock	no	yes
)	no	no
.	no	no
lockId	yes	yes
;	no	no
boolean	no	no
removed	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
hiveLock	no	yes
)	no	no
;	no	no
txnManager	no	yes
.	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
unlock	no	yes
(	no	no
lockId	yes	yes
)	no	no
;	no	no
removed	no	yes
=	no	no
locks	no	yes
.	no	no
remove	no	yes
(	no	no
hiveLock	no	yes
)	no	no
;	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
metrics	no	yes
.	no	no
decrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
METASTORE_HIVE_LOCKS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
removed	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchLockException	no	no
e	no	yes
)	no	no
{	no	no
removed	no	yes
=	no	no
locks	no	yes
.	no	no
remove	no	yes
(	no	no
hiveLock	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
metrics	no	yes
.	no	no
decrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
METASTORE_HIVE_LOCKS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
removed	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchLockException	no	no
e	no	yes
)	no	no
{	no	no
removed	no	yes
=	no	no
locks	no	yes
.	no	no
remove	no	yes
(	no	no
hiveLock	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
lockId	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
LockException	no	yes
(	no	no
e	no	yes
,	no	no
ErrorMsg	no	yes
.	no	no
LOCK_NO_SUCH_LOCK	no	yes
,	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
lockId	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TxnOpenException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
lockId	no	yes
)	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
LockException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
METASTORE_COMMUNICATION_FAILED	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
removed	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
releaseLocks	no	no
(	no	no
List	no	no
<	no	no
HiveLock	no	no
>	no	no
hiveLocks	yes	no
)	no	no
{	no	no

getLockManager	no	yes
(	no	no
)	no	no
;	no	no
verifyState	no	yes
(	no	no
plan	no	yes
)	no	no
;	no	no
queryId	yes	yes
=	no	no
plan	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
plan	no	yes
.	no	no
getOperation	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
SET_AUTOCOMMIT	no	no
:	no	no
return	no	no
null	no	no
;	no	no
}	no	no
LockRequestBuilder	no	yes
rqstBuilder	no	yes
=	no	no
new	no	no
LockRequestBuilder	no	yes
(	no	no
queryId	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
txnId	no	yes
)	no	no
+	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
rqstBuilder	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txnId	no	yes
)	no	no
.	no	no
setUser	no	yes
(	no	no
username	no	yes
)	no	no
;	no	no
rqstBuilder	no	yes
.	no	no
setZeroWaitReadEnabled	no	yes
(	no	no
!	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
TXN_OVERWRITE_X_LOCK	no	yes
)	no	no
||	no	no
!	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
TXN_WRITE_X_LOCK	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
plan	no	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
plan	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
LockComponent	no	yes
>	no	no
lockComponents	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
makeLockComponents	no	yes
(	no	no
plan	no	yes
.	no	no
getOutputs	no	yes
(	no	no
)	no	no
,	no	no
plan	no	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
,	no	no
ctx	no	yes
.	no	no
getOperation	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
lockComponents	no	yes
.	no	no
addAll	no	yes
(	no	no
getGlobalLocks	no	yes
(	no	no
ctx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lockComponents	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Collection	no	no
<	no	no
LockComponent	no	yes
>	no	no
getGlobalLocks	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
String	no	yes
lockNames	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
Constants	no	yes
.	no	no
HIVE_QUERY_EXCLUSIVE_LOCK	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
lockNames	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
LockComponent	no	yes
>	no	no
globalLocks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
LockComponent	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
lockName	yes	yes
:	no	no
lockNames	no	yes
.	no	no
split	no	no
(	no	no
)	no	no
)	no	no
{	no	no
lockName	yes	yes
=	no	no
lockName	yes	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
lockName	yes	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LockComponentBuilder	no	yes
compBuilder	no	yes
=	no	no
new	no	no
LockComponentBuilder	no	yes
(	no	no
)	no	no
;	no	no
compBuilder	no	yes
.	no	no
setExclusive	no	yes
(	no	no
)	no	no
;	no	no
compBuilder	no	yes
.	no	no
setOperationType	no	yes
(	no	no
DataOperationType	no	yes
.	no	no
UPDATE	no	yes
)	no	no
;	no	no
compBuilder	no	yes
.	no	no
setDbName	no	yes
(	no	no
GLOBAL_LOCKS	no	yes
)	no	no
;	no	no
compBuilder	no	yes
.	no	no
setTableName	no	yes
(	no	no
lockName	yes	yes
)	no	no
;	no	no
globalLocks	no	yes
.	no	no
add	no	yes
(	no	no
compBuilder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

else	no	no
{	no	no
locks	no	yes
=	no	no
lockMgr	no	yes
.	no	no
getLocks	no	yes
(	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
txnId	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HiveLock	no	no
lock	no	yes
:	no	no
locks	no	yes
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
lock	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isTxnOpen	no	no
(	no	no
)	no	no
&&	no	no
locks	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
HiveLock	no	no
lock	no	yes
:	no	no
locks	no	yes
)	no	no
{	no	no
long	no	no
lockId	yes	yes
=	no	no
(	no	no
(	no	no
DbLockManager	no	yes
.	no	no
DbHiveLock	no	yes
)	no	no
lock	no	yes
)	no	no
.	no	no
lockId	yes	yes
;	no	no
try	no	no
{	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
heartbeat	no	yes
(	no	no
txnId	no	yes
,	no	no
lockId	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
txnId	yes	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HiveLock	no	no
lock	no	yes
:	no	no
locks	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
lock	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isTxnOpen	no	no
(	no	no
)	no	no
&&	no	no
locks	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
for	no	no
(	no	no
HiveLock	no	no
lock	no	yes
:	no	no
locks	no	no
)	no	no
{	no	no
long	no	no
lockId	no	yes
=	no	no
(	no	no
(	no	no
DbLockManager	no	yes
.	no	no
DbHiveLock	no	yes
)	no	no
lock	no	yes
)	no	no
.	no	no
lockId	no	yes
;	no	no
try	no	no
{	no	no
getMS	no	yes
(	no	no
)	no	no
.	no	no
heartbeat	no	yes
(	no	no
txnId	yes	yes
,	no	no
lockId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchLockException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
lockId	no	yes
)	no	no
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	no
)	no	no
{	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
isLockAcquired	no	no
&&	no	no
heartbeatTask	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
heartbeatTask	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
sleepInterval	no	yes
=	no	no
100	no	no
;	no	no
while	no	no
(	no	no
!	no	no
heartbeatTask	no	yes
.	no	no
isCancelled	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
heartbeatTask	no	yes
.	no	no
isDone	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
now	no	yes
-	no	no
startTime	no	yes
>	no	no
30000	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
queryId	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepInterval	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	no
)	no	no
{	no	no
}	no	no
sleepInterval	no	yes
*=	no	no
2	no	no
;	no	no

List	no	yes
<	no	no
HiveLockObj	no	yes
>	no	no
lockObjects	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
HiveLockObj	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ReadEntity	no	no
input	no	yes
:	no	no
plan	no	yes
.	no	no
getInputs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
input	no	yes
.	no	no
needsLock	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
input	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
input	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
ReadEntity	no	no
.	no	no
Type	no	no
.	no	no
DATABASE	no	no
)	no	no
{	no	no
lockObjects	no	yes
.	no	no
addAll	no	yes
(	no	no
getLockObjects	no	yes
(	no	no
plan	no	yes
,	no	no
input	no	yes
.	no	no
getDatabase	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
HiveLockMode	no	yes
.	no	no
SHARED	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
input	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
ReadEntity	no	no
.	no	no
Type	no	no
.	no	no
TABLE	no	no
)	no	no
{	no	no
lockObjects	no	yes
.	no	no
addAll	no	yes
(	no	no
getLockObjects	no	yes
(	no	no
plan	no	yes
,	no	no
null	no	no
,	no	no
input	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
HiveLockMode	no	yes
.	no	no
SHARED	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
lockObjects	no	yes
.	no	no
addAll	no	yes
(	no	no
getLockObjects	no	yes
(	no	no
plan	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
input	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
,	no	no
HiveLockMode	no	yes
.	no	no
SHARED	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
WriteEntity	no	no
output	yes	yes
:	no	no
plan	no	yes
.	no	no
getOutputs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HiveLockMode	no	yes
lockMode	no	yes
=	no	no
getWriteEntityLockMode	no	yes
(	no	no
output	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
lockMode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
HiveLock	no	no
lock	no	no
(	no	no
HiveLockObject	no	no
key	yes	no
,	no	no
HiveLockMode	no	no
mode	yes	no
,	no	no
boolean	no	no
keepAlive	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no

public	no	no
static	no	no
synchronized	no	no
void	no	no
closeAndReleaseInstance	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sharedClient	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sharedClient	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
sharedClient	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
shutdownMsg	yes	yes
=	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
setContext	no	no
(	no	no
HiveLockManagerCtx	no	no
ctx	no	yes
)	no	no
throws	no	no
LockException	no	no
{	no	no
this	no	no
.	no	no
ctx	no	yes
=	no	no
ctx	no	yes
;	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
ctx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
sleepTime	no	yes
=	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_SLEEP_BETWEEN_RETRIES	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
numRetriesForLock	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_LOCK_NUMRETRIES	no	yes
)	no	no
;	no	no
numRetriesForUnLock	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_UNLOCK_NUMRETRIES	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
curatorFramework	no	yes
=	no	no
CuratorFrameworkSingleton	no	yes
.	no	no
getInstance	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
parent	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_NAMESPACE	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
curatorFramework	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
.	no	no
withMode	no	yes
(	no	no
CreateMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
.	no	no
forPath	no	yes
(	no	no
+	no	no
parent	no	yes
,	no	no
new	no	no
byte	no	no
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
e	yes	yes
instanceof	no	no
KeeperException	no	no
)	no	no
||	no	no
(	no	no
(	no	no
KeeperException	no	no
)	no	no
e	yes	yes
)	no	no
.	no	no
code	no	no
(	no	no
)	no	no
!=	no	no
KeeperException	no	no
.	no	no
Code	no	no
.	no	no
NODEEXISTS	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
parent	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
ZooKeeperHiveLock	no	no
lock	no	no
(	no	no
HiveLockObject	no	no
key	yes	no
,	no	no
HiveLockMode	no	no
mode	yes	no
,	no	no
boolean	no	no
keepAlive	no	no
,	no	no
boolean	no	no
parentCreated	no	no
)	no	no
throws	no	no
LockException	no	no
{	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepTime	no	yes
)	no	no
;	no	no
prepareRetry	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ret	no	yes
=	no	no
lockPrimitive	no	yes
(	no	no
key	no	yes
,	no	no
mode	no	yes
,	no	no
keepAlive	no	yes
,	no	no
parentCreated	no	yes
,	no	no
conflictingLocks	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ret	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e1	yes	yes
)	no	no
{	no	no
lastException	no	yes
=	no	no
e1	yes	yes
;	no	no
if	no	no
(	no	no
e1	yes	yes
instanceof	no	no
KeeperException	no	yes
)	no	no
{	no	no
KeeperException	no	yes
e	no	yes
=	no	no
(	no	no
KeeperException	no	yes
)	no	no
e1	yes	yes
;	no	no
switch	no	no
(	no	no
e	no	yes
.	no	no
code	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
CONNECTIONLOSS	no	no
:	no	no
case	no	no
OPERATIONTIMEOUT	no	no
:	no	no
case	no	no
NONODE	no	no
:	no	no
case	no	no
NODEEXISTS	no	no
:	no	no
LOG	no	no
.	no	no
debug	no	no
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
LOG	no	no
.	no	no
error	no	no
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e1	no	yes
)	no	no
{	no	no
lastException	yes	yes
=	no	no
e1	no	yes
;	no	no
if	no	no
(	no	no
e1	no	yes
instanceof	no	no
KeeperException	no	yes
)	no	no
{	no	no
KeeperException	no	yes
e	no	yes
=	no	no
(	no	no
KeeperException	no	yes
)	no	no
e1	no	yes
;	no	no
switch	no	no
(	no	no
e	no	yes
.	no	no
code	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
CONNECTIONLOSS	no	no
:	no	no
case	no	no
OPERATIONTIMEOUT	no	no
:	no	no
case	no	no
NONODE	no	no
:	no	no
case	no	no
NODEEXISTS	no	no
:	no	no
LOG	no	yes
.	no	no
debug	no	no
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e1	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
while	no	no
(	no	no
tryNum	no	yes
<	no	no
numRetriesForLock	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ret	no	no
==	no	no
null	no	no
)	no	no
{	no	no
console	no	yes
.	no	no
printError	no	yes
(	no	no
+	no	no
key	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
getLockMode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
mode	no	yes
+	no	no
+	no	no
key	no	yes
.	no	no
getDisplayName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tryNum	no	yes
+	no	no
)	no	no
;	no	no
printConflictingLocks	no	yes
(	no	no
key	no	yes
,	no	no
mode	no	yes
,	no	no
conflictingLocks	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
printConflictingLocks	no	no
(	no	no
HiveLockObject	no	no
key	yes	yes
,	no	no
HiveLockMode	no	no
mode	yes	no
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
conflictingLocks	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
conflictingLocks	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HiveLockObjectData	no	yes
requestedLock	yes	yes
=	no	no
new	no	no
HiveLockObjectData	no	yes
(	no	no
key	yes	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
printConflictingLocks	no	no
(	no	no
HiveLockObject	no	no
key	yes	yes
,	no	no
HiveLockMode	no	no
mode	no	yes
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
conflictingLocks	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
conflictingLocks	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HiveLockObjectData	no	yes
requestedLock	no	yes
=	no	no
new	no	no
HiveLockObjectData	no	yes
(	no	no
key	yes	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
key	yes	yes
.	no	no
getDisplayName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
requestedLock	no	yes
.	no	no
getLockMode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
mode	no	yes
+	no	no
+	no	no
requestedLock	no	yes
.	no	no
getQueryStr	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
conflictingLock	no	yes
:	no	no
conflictingLocks	no	no
)	no	no
{	no	no
HiveLockObjectData	no	yes
conflictingLockData	yes	yes
=	no	no
new	no	no
HiveLockObjectData	no	yes
(	no	no
conflictingLock	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
curatorFramework	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	no	no
)	no	no
{	no	no
curatorFramework	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
switch	no	no
(	no	no
lMode	no	no
)	no	no
{	no	no
case	no	no
EXCLUSIVE	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_EXCLUSIVELOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SEMI_SHARED	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_SEMISHAREDLOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_SHAREDLOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	no	no
)	no	no
{	no	no
curatorFramework	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
switch	no	no
(	no	no
lMode	no	no
)	no	no
{	no	no
case	no	no
EXCLUSIVE	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_EXCLUSIVELOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SEMI_SHARED	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_SEMISHAREDLOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
metrics	no	yes
.	no	no
decrementCounter	no	no
(	no	no
MetricsConstant	no	no
.	no	no
ZOOKEEPER_HIVE_SHAREDLOCKS	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
KeeperException	no	no
.	no	no
NoNodeException	no	no
nne	no	no
)	no	no
{	no	no

if	no	no
(	no	no
curChild	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
locks	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
recurse	no	no
)	no	no
{	no	no
try	no	no
{	no	no
children	no	yes
=	no	no
curatorFramework	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
forPath	no	yes
(	no	no
curChild	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
child	no	yes
:	no	no
children	no	yes
)	no	no
{	no	no
childn	no	yes
.	no	no
add	no	yes
(	no	no
curChild	yes	yes
+	no	no
+	no	no
child	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
}	no	no
}	no	no
HiveLockMode	no	yes
mode	no	yes
=	no	no
getLockMode	no	yes
(	no	no
curChild	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
mode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
HiveLockObjectData	no	yes
data	no	yes
=	no	no
null	no	no
;	no	no
HiveLockObject	no	yes
obj	no	yes
=	no	no
getLockObject	no	yes
(	no	no
conf	no	yes
,	no	no
curChild	yes	yes
,	no	no
mode	no	yes
,	no	no
data	no	yes
,	no	no
parent	no	yes
,	no	no
verifyTablePartition	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
obj	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no

if	no	no
(	no	no
tab	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
names	no	yes
.	no	no
length	no	no
==	no	no
2	no	no
)	no	no
{	no	no
return	no	no
new	no	no
HiveLockObject	no	yes
(	no	no
tab	no	yes
,	no	no
data	no	yes
)	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
indx	no	yes
=	no	no
2	no	no
;	no	no
indx	no	yes
<	no	no
names	no	yes
.	no	no
length	no	no
;	no	no
indx	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
partVals	no	yes
=	no	no
names	no	yes
[	no	no
indx	no	yes
]	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
partSpec	no	yes
.	no	no
put	no	yes
(	no	no
partVals	no	yes
[	no	no
0	no	no
]	no	no
,	no	no
partVals	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
}	no	no
Partition	no	yes
partn	no	yes
;	no	no
try	no	no
{	no	no
partn	no	yes
=	no	no
db	no	yes
.	no	no
getPartition	no	yes
(	no	no
tab	no	yes
,	no	no
partSpec	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	no
)	no	no
{	no	no
partn	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partn	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
HiveLockObject	no	yes
(	no	no
new	no	no
DummyPartition	no	yes
(	no	no
tab	no	yes
,	no	no
path	no	yes
,	no	no
partSpec	no	yes
)	no	no
,	no	no
data	no	yes
)	no	no
;	no	no

Timestamp	no	yes
fileLowerBound	yes	yes
=	no	no
getTimeStampFromPath	no	yes
(	no	no
fileStatus	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
fileLowerBound	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Timestamp	no	yes
fileUpperBound	yes	yes
=	no	no
Timestamp	no	yes
.	no	no
from	no	yes
(	no	no
fileLowerBound	yes	yes
.	no	no
toInstant	no	yes
(	no	no
)	no	no
.	no	no
plusSeconds	no	yes
(	no	no
timeSliceSeconds	no	yes
)	no	no
)	no	no
;	no	no
Location	no	yes
predLowerLocation	yes	yes
;	no	no
Location	no	yes
predUpperLocation	yes	yes
=	no	no
null	no	no
;	no	no
predLowerLocation	yes	yes
=	no	no
compareToRange	no	yes
(	no	no
predLowerBound	yes	yes
,	no	no
fileLowerBound	yes	yes
,	no	no
fileUpperBound	yes	yes
)	no	no
;	no	no
boolean	no	no
selected	yes	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
predLowerLocation	yes	yes
==	no	no
Location	no	yes
.	no	no
BEFORE	no	no
||	no	no
predLowerLocation	yes	yes
==	no	no
Location	no	yes
.	no	no
MIN	no	no
)	no	no
{	no	no
predUpperLocation	yes	yes
=	no	no
compareToRange	no	yes
(	no	no
predUpperBound	yes	yes
,	no	no
fileLowerBound	yes	yes
,	no	no
fileUpperBound	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
predUpperLocation	yes	yes
==	no	no
Location	no	yes
.	no	no
AFTER	no	no
||	no	no
predUpperLocation	yes	yes
==	no	no
Location	no	yes
.	no	no
MAX	no	no
)	no	no
{	no	no
selectedFiles	no	yes
.	no	no
add	no	yes
(	no	no
fileStatus	yes	yes
)	no	no
;	no	no
selected	yes	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
predUpperLocation	yes	yes
==	no	no
Location	no	yes
.	no	no
BEFORE	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no
selectedFiles	no	yes
.	no	no
add	no	yes
(	no	no
fileStatus	yes	yes
)	no	no
;	no	no

Location	no	yes
predUpperLocation	no	yes
=	no	no
null	no	no
;	no	no
predLowerLocation	no	yes
=	no	no
compareToRange	no	yes
(	no	no
predLowerBound	no	yes
,	no	no
fileLowerBound	no	yes
,	no	no
fileUpperBound	no	yes
)	no	no
;	no	no
boolean	no	no
selected	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
predLowerLocation	no	yes
==	no	no
Location	no	yes
.	no	no
BEFORE	no	no
||	no	no
predLowerLocation	no	yes
==	no	no
Location	no	yes
.	no	no
MIN	no	no
)	no	no
{	no	no
predUpperLocation	no	yes
=	no	no
compareToRange	no	yes
(	no	no
predUpperBound	no	yes
,	no	no
fileLowerBound	no	yes
,	no	no
fileUpperBound	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
predUpperLocation	no	yes
==	no	no
Location	no	yes
.	no	no
AFTER	no	no
||	no	no
predUpperLocation	no	yes
==	no	no
Location	no	yes
.	no	no
MAX	no	no
)	no	no
{	no	no
selectedFiles	yes	yes
.	no	no
add	no	yes
(	no	no
fileStatus	no	yes
)	no	no
;	no	no
selected	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
predUpperLocation	no	yes
==	no	no
Location	no	yes
.	no	no
BEFORE	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no
selectedFiles	yes	yes
.	no	no
add	no	yes
(	no	no
fileStatus	no	yes
)	no	no
;	no	no
selected	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
predLowerLocation	no	yes
==	no	no
Location	no	yes
.	no	no
AFTER	no	no
)	no	no
{	no	no
}	no	no
else	no	no
{	no	no
selectedFiles	yes	yes
.	no	no
add	no	yes
(	no	no
fileStatus	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
RecordReader	no	no
<	no	no
LongWritable	no	no
,	no	no
Text	no	no
>	no	no
getRecordReader	no	no
(	no	no
final	no	no
InputSplit	no	no
genericSplit	no	yes
,	no	no
final	no	no
JobConf	no	no
job	no	no
,	no	no
final	no	no
Reporter	no	no
reporter	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
if	no	no
(	no	no
genericSplit	no	yes
instanceof	no	no
FileSplit	no	yes
)	no	no
{	no	no
final	no	no
Path	no	yes
finalPath	yes	yes
=	no	no
(	no	no
(	no	no
FileSplit	no	yes
)	no	no
genericSplit	no	yes
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
reloadFunctions	no	no
(	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
registryFunctions	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
FunctionRegistry	no	yes
.	no	no
getFunctionNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Function	no	no
function	yes	yes
:	no	no
getAllFunctions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
functionName	yes	yes
=	no	no
function	yes	yes
.	no	no
getFunctionName	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

private	no	no
static	no	no
Hive	no	yes
getInternal	no	no
(	no	no
HiveConf	no	no
c	no	no
,	no	no
boolean	no	no
needsRefresh	yes	no
,	no	no
boolean	no	no
isFastCheck	no	no
,	no	no
boolean	no	no
doRegisterAllFns	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Hive	no	yes
db	yes	yes
=	no	no
hiveDB	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
db	yes	yes
==	no	no
null	no	no
||	no	no
!	no	no
db	yes	yes
.	no	no
isCurrentUserOwner	no	no
(	no	no
)	no	no
||	no	no
needsRefresh	yes	no
||	no	no
(	no	no
c	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
isCompatible	no	no
(	no	no
db	yes	yes
,	no	no
c	no	no
,	no	no
isFastCheck	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
db	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

try	no	no
{	no	no
List	no	yes
<	no	no
RelOptMaterialization	no	yes
>	no	no
result	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RelOptMaterialization	no	yes
materialization	no	yes
:	no	no
materializedViews	no	no
)	no	no
{	no	no
final	no	no
RelNode	no	yes
viewScan	no	yes
=	no	no
materialization	no	yes
.	no	no
tableRel	no	yes
;	no	no
final	no	no
Table	no	yes
materializedViewTable	yes	yes
;	no	no
if	no	no
(	no	no
viewScan	no	yes
instanceof	no	no
Project	no	no
)	no	no
{	no	no
materializedViewTable	yes	yes
=	no	no
(	no	no
(	no	no
RelOptHiveTable	no	yes
)	no	no
viewScan	no	yes
.	no	no
getInput	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getHiveTableMD	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
materializedViewTable	yes	yes
=	no	no
(	no	no
(	no	no
RelOptHiveTable	no	yes
)	no	no
viewScan	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getHiveTableMD	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
final	no	no
Boolean	no	yes
outdated	no	yes
=	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
isOutdatedMaterializedView	no	yes
(	no	no
materializedViewTable	yes	yes
,	no	no
currentTxnWriteIds	no	yes
,	no	no
defaultTimeWindow	no	yes
,	no	no
tablesUsed	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
outdated	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
final	no	no
CreationMetadata	no	yes
creationMetadata	no	yes
=	no	no
materializedViewTable	yes	yes
.	no	no
getCreationMetadata	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
outdated	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
tryIncrementalRewriting	no	no
)	no	no
{	no	no

for	no	no
(	no	no
Table	no	no
materializedViewTable	yes	yes
:	no	no
materializedViewTables	no	no
)	no	no
{	no	no
final	no	no
Boolean	no	yes
outdated	no	yes
=	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
isOutdatedMaterializedView	no	yes
(	no	no
materializedViewTable	yes	yes
,	no	no
currentTxnWriteIds	no	yes
,	no	no
defaultTimeWindow	no	yes
,	no	no
tablesUsed	no	yes
,	no	no
forceMVContentsUpToDate	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
outdated	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
final	no	no
CreationMetadata	no	yes
creationMetadata	no	yes
=	no	no
materializedViewTable	yes	yes
.	no	no
getCreationMetadata	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
outdated	no	yes
)	no	no
{	no	no
boolean	no	no
ignore	no	yes
;	no	no
if	no	no
(	no	no
forceMVContentsUpToDate	no	yes
&&	no	no
!	no	no
tryIncrementalRebuild	no	no
)	no	no
{	no	no
ignore	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
forceMVContentsUpToDate	no	yes
&&	no	no
!	no	no
tryIncrementalRewriting	no	no
)	no	no
{	no	no
ignore	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Materialization	no	yes
invalidationInfo	no	yes
=	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
getMaterializationInvalidationInfo	no	yes
(	no	no
creationMetadata	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
)	no	no
)	no	no
;	no	no
ignore	no	yes
=	no	no
invalidationInfo	no	yes
==	no	no
null	no	no
||	no	no
invalidationInfo	no	yes
.	no	no
isSourceTablesUpdateDeleteModified	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ignore	no	yes
)	no	no
{	no	no

else	no	no
{	no	no
Materialization	no	yes
invalidationInfo	no	yes
=	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
getMaterializationInvalidationInfo	no	yes
(	no	no
creationMetadata	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
)	no	no
)	no	no
;	no	no
ignore	no	yes
=	no	no
invalidationInfo	no	yes
==	no	no
null	no	no
||	no	no
invalidationInfo	no	yes
.	no	no
isSourceTablesUpdateDeleteModified	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ignore	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
RelOptMaterialization	no	yes
materialization	no	yes
=	no	no
HiveMaterializedViewsRegistry	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getRewritingMaterializedView	no	yes
(	no	no
materializedViewTable	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
materializedViewTable	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
materialization	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Table	no	yes
cachedMaterializedViewTable	no	yes
=	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
extractTable	no	yes
(	no	no
materialization	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cachedMaterializedViewTable	no	yes
.	no	no
equals	no	no
(	no	no
materializedViewTable	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
outdated	no	no
)	no	no
{	no	no
materialization	no	yes
=	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
augmentMaterializationWithTimeInformation	no	yes
(	no	no
materialization	no	yes
,	no	no
validTxnsList	no	yes
,	no	no
new	no	no
ValidTxnWriteIdList	no	yes
(	no	no
creationMetadata	no	yes
.	no	no
getValidTxnList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
expandGroupingSets	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
addAll	no	yes
(	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
deriveGroupingSetsMaterializedViews	no	yes
(	no	no
materialization	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

Partition	no	yes
oldPart	no	yes
=	no	no
getPartition	no	yes
(	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
boolean	no	no
isTxnTable	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
newFiles	no	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedList	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
Partition	no	yes
newTPart	no	yes
=	no	no
loadPartitionInternal	no	yes
(	no	no
loadPath	no	yes
,	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
oldPart	no	yes
,	no	no
loadFileType	no	yes
,	no	no
inheritTableSpecs	no	yes
,	no	no
inheritLocation	no	yes
,	no	no
isSkewedStoreAsSubdir	no	yes
,	no	no
isSrcLocal	no	yes
,	no	no
isAcidIUDoperation	no	yes
,	no	no
resetStatistics	no	yes
,	no	no
writeId	no	yes
,	no	no
stmtId	no	yes
,	no	no
isInsertOverwrite	no	yes
,	no	no
isTxnTable	no	yes
,	no	no
newFiles	no	yes
,	no	no
isDirectInsert	no	yes
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
TableSnapshot	no	yes
tableSnapshot	no	yes
=	no	no
isTxnTable	no	yes
?	no	no
getTableSnapshot	no	yes
(	no	no
tbl	no	yes
,	no	no
writeId	no	yes
)	no	no
:	no	no
null	no	no
;	no	no
if	no	no
(	no	no
tableSnapshot	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
newTPart	no	yes
.	no	no
getTPartition	no	yes
(	no	no
)	no	no
.	no	no
setWriteId	no	yes
(	no	no
tableSnapshot	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
oldPart	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
addPartitionToMetastore	no	yes
(	no	no
newTPart	no	yes
,	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
tableSnapshot	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isTxnTable	no	yes
&&	no	no
(	no	no
null	no	no
!=	no	no
newFiles	no	yes
)	no	no
)	no	no
{	no	no
addWriteNotificationLog	no	yes
(	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
newFiles	no	yes
,	no	no
writeId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
setStatsPropAndAlterPartition	no	yes
(	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
newTPart	no	yes
,	no	no
tableSnapshot	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
addPartitionToMetastore	no	no
(	no	no
Partition	no	no
newTPart	yes	no
,	no	no
boolean	no	no
resetStatistics	no	no
,	no	no
Table	no	no
tbl	no	no
,	no	no
TableSnapshot	no	no
tableSnapshot	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
try	no	no
{	no	no

getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
add_partition	no	yes
(	no	no
newTPart	no	yes
.	no	no
getTPartition	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AlreadyExistsException	no	no
aee	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
setStatsPropAndAlterPartition	no	yes
(	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
newTPart	no	yes
,	no	no
tableSnapshot	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
final	no	no
FileSystem	no	yes
newPathFileSystem	no	yes
=	no	no
newTPart	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
this	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
isSkipTrash	no	yes
=	no	no
MetaStoreUtils	no	yes
.	no	no
isSkipTrash	no	yes
(	no	no
tbl	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
FileStatus	no	yes
status	no	yes
=	no	no
newPathFileSystem	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
newTPart	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Hive	no	yes
.	no	no
trashFiles	no	yes
(	no	no
newPathFileSystem	no	yes
,	no	no
new	no	no
FileStatus	no	yes
[	no	no
]	no	no
{	no	no
status	no	yes
}	no	no
,	no	no
this	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
isSkipTrash	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
io	yes	no
)	no	no
{	no	no

catch	no	no
(	no	no
AlreadyExistsException	no	no
aee	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
setStatsPropAndAlterPartition	no	yes
(	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
newTPart	no	yes
,	no	no
tableSnapshot	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
try	no	no
{	no	no
final	no	no
FileSystem	no	yes
newPathFileSystem	no	yes
=	no	no
newTPart	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
this	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
isSkipTrash	no	yes
=	no	no
MetaStoreUtils	no	yes
.	no	no
isSkipTrash	no	yes
(	no	no
tbl	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
FileStatus	no	yes
status	no	yes
=	no	no
newPathFileSystem	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
newTPart	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Hive	no	yes
.	no	no
trashFiles	no	yes
(	no	no
newPathFileSystem	no	yes
,	no	no
new	no	no
FileStatus	no	yes
[	no	no
]	no	no
{	no	no
status	no	yes
}	no	no
,	no	no
this	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
isSkipTrash	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
io	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
io	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
listFilesInsideAcidDirectory	no	no
(	no	no
Path	no	no
acidDir	yes	yes
,	no	no
FileSystem	no	no
srcFs	no	yes
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
newFiles	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
acidFiles	no	yes
;	no	no
acidFiles	no	yes
=	no	no
srcFs	no	yes
.	no	no
listStatus	no	yes
(	no	no
acidDir	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
acidFiles	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

partitionDetailsMap	no	yes
.	no	no
put	no	yes
(	no	no
partPath	no	yes
,	no	no
details	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
PartitionIterable	no	yes
partitionIterable	no	yes
=	no	no
new	no	no
PartitionIterable	no	yes
(	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BATCH_RETRIEVE_MAX	no	yes
.	no	no
getVarname	no	yes
(	no	no
)	no	no
,	no	no
300	no	no
)	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Partition	no	yes
>	no	no
iterator	no	yes
=	no	no
partitionIterable	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
.	no	no
stream	no	no
(	no	no
)	no	no
.	no	no
filter	no	no
(	no	no
entry	yes	yes
->	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
fullSpec	no	no
.	no	no
equals	no	no
(	no	no
partition	no	yes
.	no	no
getSpec	no	no
(	no	no
)	no	no
)	no	no
)	no	no
.	no	no
findAny	no	no
(	no	no
)	no	no
.	no	no
ifPresent	no	no
(	no	no
entry	yes	yes
->	no	no
{	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
partition	no	yes
=	no	no
partition	no	yes
;	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
isTxnTable	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
TableSnapshot	no	yes
tableSnapshot	no	yes
=	no	no
isTxnTable	no	yes
?	no	no
getTableSnapshot	no	yes
(	no	no
tbl	no	yes
,	no	no
writeId	no	yes
)	no	no
:	no	no
null	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Path	no	no
,	no	no
PartitionDetails	no	yes
>	no	no
entry	yes	yes
:	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tasks	no	no
.	no	no
add	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
PartitionDetails	no	yes
partitionDetails	no	yes
=	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no

tasks	no	no
.	no	no
add	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
PartitionDetails	no	yes
partitionDetails	no	yes
=	no	no
entry	yes	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
fullPartSpec	yes	yes
=	no	no
partitionDetails	no	yes
.	no	no
fullSpec	no	yes
;	no	no
try	no	no
{	no	no
SessionState	no	yes
.	no	no
setCurrentSessionState	no	yes
(	no	no
parentSession	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
entry	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
fullPartSpec	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
newFiles	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
Partition	no	yes
oldPartition	no	yes
=	no	no
partitionDetails	no	yes
.	no	no
partition	no	yes
;	no	no
Partition	no	yes
partition	no	yes
=	no	no
loadPartitionInternal	no	yes
(	no	no
entry	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
tbl	yes	yes
,	no	no
fullPartSpec	yes	yes
,	no	no
oldPartition	no	yes
,	no	no
loadFileType	yes	yes
,	no	no
true	no	no
,	no	no
false	no	no
,	no	no
numLB	yes	yes
>	no	no
0	no	no
,	no	no
false	no	no
,	no	no
isAcid	yes	yes
,	no	no
resetStatistics	yes	yes
,	no	no
writeId	no	yes
,	no	no
stmtId	no	yes
,	no	no
isInsertOverwrite	no	yes
,	no	no
isTxnTable	no	yes
,	no	no
newFiles	no	yes
,	no	no
isDirectInsert	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableSnapshot	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
partition	no	yes
.	no	no
getTPartition	no	yes
(	no	no
)	no	no
.	no	no
setWriteId	no	yes
(	no	no
tableSnapshot	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
partitionDetails	no	yes
.	no	no
tableSnapshot	no	yes
=	no	no
tableSnapshot	no	yes
;	no	no
if	no	no
(	no	no
oldPartition	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
partitionDetails	no	yes
.	no	no
newFiles	no	yes
=	no	no
newFiles	no	yes
;	no	no
partitionDetails	no	yes
.	no	no
partition	no	yes
=	no	no
partition	no	yes
;	no	no

}	no	no
}	no	no
return	no	no
partition	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
fullPartSpec	no	yes
+	no	no
+	no	no
+	no	no
loadFileType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
numLB	no	yes
+	no	no
+	no	no
+	no	no
isAcid	no	yes
+	no	no
+	no	no
+	no	no
resetStatistics	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
int	no	no
poolSize	no	yes
=	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_LOAD_DYNAMIC_PARTITIONS_THREAD_COUNT	no	yes
.	no	no
varname	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
poolSize	no	yes
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
Partition	no	yes
>>	no	no
futures	no	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
,	no	no
Partition	no	yes
>	no	no
result	no	yes
=	no	no
Maps	no	yes
.	no	no
newLinkedHashMap	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
futures	no	yes
=	no	no
executor	no	yes
.	no	no
invokeAll	no	yes
(	no	no
tasks	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
futures	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Future	no	yes
<	no	no
Partition	no	yes
>	no	no
future	no	yes
:	no	no
futures	no	yes
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
put	no	yes
(	no	no
partition	no	yes
.	no	no
getSpec	no	yes
(	no	no
)	no	no
,	no	no
partition	no	yes
)	no	no
;	no	no

int	no	no
poolSize	no	yes
=	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_LOAD_DYNAMIC_PARTITIONS_THREAD_COUNT	no	yes
.	no	no
varname	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
poolSize	no	yes
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
Partition	no	yes
>>	no	no
futures	yes	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
,	no	no
Partition	no	yes
>	no	no
result	no	yes
=	no	no
Maps	no	yes
.	no	no
newLinkedHashMap	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
futures	yes	yes
=	no	no
executor	no	yes
.	no	no
invokeAll	no	yes
(	no	no
tasks	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
futures	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Future	no	yes
<	no	no
Partition	no	yes
>	no	no
future	no	yes
:	no	no
futures	yes	yes
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
put	no	yes
(	no	no
partition	no	yes
.	no	no
getSpec	no	yes
(	no	no
)	no	no
,	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
addPartitionsToMetastore	no	yes
(	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
entry	no	yes
->	no	no
!	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
partition	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
entry	no	yes
->	no	no
!	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
tableSnapshot	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Path	no	no
,	no	no
PartitionDetails	no	yes
>	no	no
entry	no	yes
:	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
PartitionDetails	no	yes
partitionDetails	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isTxnTable	no	no
&&	no	no
partitionDetails	no	yes
.	no	no
newFiles	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
addWriteNotificationLog	no	yes
(	no	no
tbl	no	yes
,	no	no
partitionDetails	no	yes
.	no	no
fullSpec	no	yes
,	no	no
partitionDetails	no	yes
.	no	no
newFiles	no	yes
,	no	no
writeId	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
Future	no	no
<	no	no
Partition	no	yes
>	no	no
future	no	yes
:	no	no
futures	no	no
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
put	no	yes
(	no	no
partition	no	yes
.	no	no
getSpec	no	yes
(	no	no
)	no	no
,	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
addPartitionsToMetastore	no	yes
(	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
entry	no	yes
->	no	no
!	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
partition	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
entry	no	yes
->	no	no
!	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
tableSnapshot	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Path	no	no
,	no	no
PartitionDetails	no	yes
>	no	no
entry	no	yes
:	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
PartitionDetails	no	yes
partitionDetails	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isTxnTable	no	no
&&	no	no
partitionDetails	no	yes
.	no	no
newFiles	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
addWriteNotificationLog	no	yes
(	no	no
tbl	no	yes
,	no	no
partitionDetails	no	yes
.	no	no
fullSpec	no	yes
,	no	no
partitionDetails	no	yes
.	no	no
newFiles	no	yes
,	no	no
writeId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
setStatsPropAndAlterPartitions	no	yes
(	no	no
resetStatistics	no	yes
,	no	no
tbl	no	yes
,	no	no
partitionDetailsMap	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
hasOldPartition	no	yes
)	no	no
.	no	no
map	no	yes
(	no	no
entry	no	yes
->	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
partition	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
tableSnapshot	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
validPartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
loadPath	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no

public	no	no
Partition	no	yes
getPartition	no	no
(	no	no
Table	no	no
tbl	no	yes
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
,	no	no
boolean	no	no
forceCreate	no	no
,	no	no
String	no	yes
partPath	no	no
,	no	no
boolean	no	no
inheritTableSpecs	no	no
)	no	no
throws	no	no
HiveException	no	yes
{	no	no
tbl	no	yes
.	no	no
validatePartColumnNames	no	yes
(	no	no
partSpec	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
pvals	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FieldSchema	no	no
field	no	yes
:	no	no
tbl	no	yes
.	no	no
getPartCols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
val	no	yes
=	no	no
partSpec	no	yes
.	no	no
get	no	yes
(	no	no
field	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
&&	no	no
!	no	no
HiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
DYNAMICPARTITIONING	no	no
)	no	no
)	no	no
||	no	no
(	no	no
val	no	yes
!=	no	no
null	no	no
&&	no	no
val	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
field	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
val	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pvals	no	yes
.	no	no
add	no	yes
(	no	no
val	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
Partition	no	yes
tpart	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tpart	no	yes
=	no	no
getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
getPartitionWithAuthInfo	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
pvals	no	yes
,	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
nsoe	no	no
)	no	no
{	no	no
tpart	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
(	no	no
val	no	yes
==	no	no
null	no	no
&&	no	no
!	no	no
HiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
DYNAMICPARTITIONING	no	no
)	no	no
)	no	no
||	no	no
(	no	no
val	no	yes
!=	no	no
null	no	no
&&	no	no
val	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
field	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
val	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pvals	no	yes
.	no	no
add	no	yes
(	no	no
val	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
Partition	no	yes
tpart	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tpart	no	yes
=	no	no
getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
getPartitionWithAuthInfo	no	yes
(	no	no
tbl	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
pvals	no	yes
,	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
nsoe	no	no
)	no	no
{	no	no
tpart	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
forceCreate	no	no
)	no	no
{	no	no
if	no	no
(	no	no
tpart	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

try	no	no
{	no	no
tpart	no	yes
=	no	no
getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
appendPartition	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
pvals	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AlreadyExistsException	no	no
aee	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tpart	no	yes
=	no	no
getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
getPartitionWithAuthInfo	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
pvals	no	yes
,	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
alterPartitionSpec	no	yes
(	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
tpart	no	yes
,	no	no
inheritTableSpecs	no	yes
,	no	no
partPath	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
CheckJDOException	no	no
.	no	no
isJDODataStoreException	no	no
(	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tpart	no	yes
=	no	no
getSynchronizedMSC	no	yes
(	no	no
)	no	no
.	no	no
getPartitionWithAuthInfo	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
pvals	no	yes
,	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tpart	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
alterPartitionSpec	no	yes
(	no	no
tbl	no	yes
,	no	no
partSpec	no	yes
,	no	no
tpart	no	yes
,	no	no
inheritTableSpecs	no	yes
,	no	no
partPath	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
e	yes	yes
;	no	no

private	no	no
void	no	no
alterPartitionSpecInMemory	no	no
(	no	no
Table	no	no
tbl	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
partSpec	yes	no
,	no	no
org	no	no
.	no	no
apache	no	no
.	no	no
hadoop	no	no
.	no	no
hive	no	no
.	no	no
metastore	no	no
.	no	no
api	no	no
.	no	no
Partition	no	no
tpart	no	no
,	no	no
boolean	no	no
inheritTableSpecs	no	no
,	no	no
String	no	no
partPath	no	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
InvalidOperationException	no	no
{	no	no

private	no	no
void	no	no
fireInsertEvent	no	no
(	no	no
Table	no	no
tbl	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
partitionSpec	no	no
,	no	no
boolean	no	no
replace	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
newFiles	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
FIRE_EVENTS_FOR_DML	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tbl	yes	no
.	no	no
isTemporary	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
GetPartitionNamesPsRequest	no	yes
req	no	yes
=	no	no
new	no	no
GetPartitionNamesPsRequest	no	yes
(	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setTblName	no	yes
(	no	no
tblName	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setDbName	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setPartValues	no	yes
(	no	no
pvals	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setMaxParts	no	yes
(	no	no
max	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
t	no	yes
)	no	no
)	no	no
{	no	no
ValidWriteIdList	no	yes
validWriteIdList	no	yes
=	no	no
getValidWriteIdList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setValidWriteIdList	no	yes
(	no	no
validWriteIdList	no	yes
!=	no	no
null	no	no
?	no	no
validWriteIdList	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
:	no	no
null	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setId	no	yes
(	no	no
t	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
GetPartitionNamesPsResponse	no	yes
res	no	yes
=	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
listPartitionNamesRequest	no	yes
(	no	no
req	no	yes
)	no	no
;	no	no
names	no	yes
=	no	no
res	no	yes
.	no	no
getNames	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
nsoe	no	no
)	no	no
{	no	no
return	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

List	no	yes
<	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
Partition	no	yes
>	no	no
tParts	no	yes
;	no	no
try	no	no
{	no	no
GetPartitionsPsWithAuthRequest	no	yes
req	no	yes
=	no	no
new	no	no
GetPartitionsPsWithAuthRequest	no	yes
(	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setTblName	no	yes
(	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setDbName	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setUserName	no	yes
(	no	no
getUserName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setMaxParts	no	yes
(	no	no
(	no	no
short	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setGroupNames	no	yes
(	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
tbl	no	yes
)	no	no
)	no	no
{	no	no
ValidWriteIdList	no	yes
validWriteIdList	no	yes
=	no	no
getValidWriteIdList	no	yes
(	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setValidWriteIdList	no	yes
(	no	no
validWriteIdList	no	yes
!=	no	no
null	no	no
?	no	no
validWriteIdList	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
:	no	no
null	no	no
)	no	no
;	no	no
req	no	yes
.	no	no
setId	no	yes
(	no	no
tbl	no	yes
.	no	no
getTTable	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
GetPartitionsPsWithAuthResponse	no	yes
res	no	yes
=	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
listPartitionsWithAuthInfoRequest	no	yes
(	no	no
req	no	yes
)	no	no
;	no	no
tParts	no	yes
=	no	no
res	no	yes
.	no	no
getPartitions	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
srcf	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
String	no	yes
fullF1	no	yes
=	no	no
getQualifiedPathWithoutSchemeAndAuthority	no	yes
(	no	no
srcf	no	yes
,	no	no
srcFs	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
;	no	no
String	no	yes
fullF2	no	yes
=	no	no
getQualifiedPathWithoutSchemeAndAuthority	no	yes
(	no	no
destf	no	yes
,	no	no
destFs	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
;	no	no
boolean	no	no
isInTest	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
srcFs	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
ConfVars	no	yes
.	no	no
HIVE_IN_TEST	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
fullF1	no	yes
+	no	no
+	no	no
fullF2	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isInTest	no	yes
)	no	no
{	no	no
return	no	no
fullF1	no	yes
.	no	no
startsWith	no	yes
(	no	no
fullF2	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
schemaSrcf	yes	yes
=	no	no
srcf	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getScheme	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
schemaDestf	yes	yes
=	no	no
destf	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getScheme	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
schemaDestf	yes	yes
==	no	no
null	no	no
&&	no	no
isSrcLocal	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
schemaSrcf	yes	yes
!=	no	no
null	no	no
&&	no	no
schemaDestf	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
schemaSrcf	yes	yes
.	no	no
equals	no	no
(	no	no
schemaDestf	yes	yes
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
name	no	yes
=	no	no
getPathName	no	yes
(	no	no
taskId	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
type	no	yes
=	no	no
FilenameUtils	no	yes
.	no	no
getExtension	no	yes
(	no	no
sourcePath	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
destFilePath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
destDirPath	no	yes
,	no	no
taskId	no	yes
==	no	no
-	no	no
1	no	no
?	no	no
fullname	no	yes
:	no	no
name	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
counter	no	yes
=	no	no
1	no	no
;	no	no
destFs	no	yes
.	no	no
exists	no	no
(	no	no
destFilePath	yes	yes
)	no	no
;	no	no
counter	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isOverwrite	no	no
)	no	no
{	no	no
destFs	no	yes
.	no	no
delete	no	yes
(	no	no
destFilePath	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
destFilePath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
destDirPath	no	yes
,	no	no
name	no	yes
+	no	no
(	no	no
Utilities	no	yes
.	no	no
COPY_KEYWORD	no	yes
+	no	no
counter	no	yes
)	no	no
+	no	no
(	no	no
(	no	no
taskId	no	yes
==	no	no
-	no	no
1	no	no
&&	no	no
!	no	no
type	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
+	no	no
type	no	yes
:	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isRenameAllowed	no	no
)	no	no
{	no	no
destFs	no	yes
.	no	no
rename	no	yes
(	no	no
sourcePath	yes	yes
,	no	no
destFilePath	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isSrcLocal	no	no
)	no	no
{	no	no
destFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
sourcePath	yes	yes
,	no	no
destFilePath	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
!	no	no
FileUtils	no	no
.	no	no
copy	no	no
(	no	no
sourceFs	no	no
,	no	no
sourcePath	yes	yes
,	no	no
destFs	no	yes
,	no	no
destFilePath	yes	yes
,	no	no
false	no	no
,	no	no
false	no	no
,	no	no
conf	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
deleteAndRename	no	no
(	no	no
FileSystem	no	no
destFs	no	yes
,	no	no
Path	no	no
destFile	yes	yes
,	no	no
FileStatus	no	no
srcStatus	no	no
,	no	no
Path	no	no
destPath	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
try	no	no
{	no	no
destFs	no	yes
.	no	no
delete	no	yes
(	no	no
destFile	yes	yes
)	no	no
;	no	no

catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
srcFs	no	yes
=	no	no
srcf	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
configuredOwner	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_LOAD_DATA_OWNER	no	yes
)	no	no
;	no	no
boolean	no	no
srcIsSubDirOfDest	no	yes
=	no	no
isSubDir	no	yes
(	no	no
srcf	no	yes
,	no	no
destf	yes	yes
,	no	no
srcFs	no	yes
,	no	no
destFs	no	yes
,	no	no
isSrcLocal	no	yes
)	no	no
,	no	no
destIsSubDirOfSrc	no	yes
=	no	no
isSubDir	no	yes
(	no	no
destf	yes	yes
,	no	no
srcf	no	yes
,	no	no
destFs	no	yes
,	no	no
srcFs	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
srcf	no	yes
+	no	no
+	no	no
destf	yes	yes
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
replace	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
replace	no	no
&&	no	no
!	no	no
srcIsSubDirOfDest	no	yes
)	no	no
{	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
configuredOwner	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_LOAD_DATA_OWNER	no	yes
)	no	no
;	no	no
boolean	no	no
srcIsSubDirOfDest	no	yes
=	no	no
isSubDir	no	yes
(	no	no
srcf	yes	yes
,	no	no
destf	yes	yes
,	no	no
srcFs	no	yes
,	no	no
destFs	no	yes
,	no	no
isSrcLocal	no	yes
)	no	no
,	no	no
destIsSubDirOfSrc	no	yes
=	no	no
isSubDir	no	yes
(	no	no
destf	yes	yes
,	no	no
srcf	yes	yes
,	no	no
destFs	no	yes
,	no	no
srcFs	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
srcf	yes	yes
+	no	no
+	no	no
destf	yes	yes
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
replace	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
replace	no	no
&&	no	no
!	no	no
srcIsSubDirOfDest	no	yes
)	no	no
{	no	no
destFs	no	yes
.	no	no
delete	no	yes
(	no	no
destf	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
destf	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
FileNotFoundException	no	no
ignore	no	no
)	no	no
{	no	no
}	no	no
}	no	no
final	no	no
SessionState	no	yes
parentSession	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isSrcLocal	no	yes
)	no	no
{	no	no
destFs	no	yes
.	no	no
copyFromLocalFile	no	yes
(	no	no
srcf	yes	yes
,	no	no
destf	yes	yes
)	no	no
;	no	no

static	no	no
private	no	no
HiveException	no	yes
handlePoolException	no	no
(	no	no
ExecutorService	no	no
pool	no	no
,	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
HiveException	no	yes
he	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
e	no	yes
instanceof	no	no
HiveException	no	yes
)	no	no
{	no	no
he	yes	yes
=	no	no
(	no	no
HiveException	no	yes
)	no	no
e	no	yes
;	no	no
if	no	no
(	no	no
he	yes	yes
.	no	no
getCanonicalErrorMsg	no	no
(	no	no
)	no	no
!=	no	no
ErrorMsg	no	no
.	no	no
GENERIC_ERROR	no	no
)	no	no
{	no	no
if	no	no
(	no	no
he	yes	yes
.	no	no
getCanonicalErrorMsg	no	no
(	no	no
)	no	no
==	no	no
ErrorMsg	no	no
.	no	no
UNRESOLVED_RT_EXCEPTION	no	no
)	no	no
{	no	no

static	no	no
protected	no	no
void	no	no
copyFiles	no	no
(	no	no
HiveConf	no	no
conf	no	yes
,	no	no
Path	no	no
srcf	yes	yes
,	no	no
Path	no	no
destf	no	yes
,	no	no
FileSystem	no	yes
fs	no	yes
,	no	no
boolean	no	no
isSrcLocal	no	no
,	no	no
boolean	no	no
isAcidIUD	no	no
,	no	no
boolean	no	no
isOverwrite	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
newFiles	no	no
,	no	no
boolean	no	no
isBucketed	no	no
,	no	no
boolean	no	no
isFullAcidTable	no	no
,	no	no
boolean	no	no
isManaged	no	no
,	no	no
boolean	no	no
isCompactionTable	no	no
)	no	no
throws	no	no
HiveException	no	yes
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
destf	no	yes
)	no	no
)	no	no
{	no	no
FileUtils	no	yes
.	no	no
mkdir	no	yes
(	no	no
fs	no	yes
,	no	no
destf	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
FileStatus	no	yes
[	no	no
]	no	no
srcs	no	yes
;	no	no
FileSystem	no	yes
srcFs	no	yes
;	no	no
try	no	no
{	no	no
srcFs	no	yes
=	no	no
srcf	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
srcs	no	yes
=	no	no
srcFs	no	yes
.	no	no
globStatus	no	yes
(	no	no
srcf	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
srcs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
moveAcidFiles	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
FileStatus	no	no
[	no	no
]	no	no
stats	no	no
,	no	no
Path	no	yes
dst	no	no
,	no	no
List	no	no
<	no	no
Path	no	yes
>	no	no
newFiles	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Set	no	yes
<	no	no
Path	no	yes
>	no	no
createdDeltaDirs	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
Path	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	no
stat	no	yes
:	no	no
stats	no	no
)	no	no
{	no	no
Path	no	yes
srcPath	yes	yes
=	no	no
stat	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no

Set	no	yes
<	no	no
Path	no	yes
>	no	no
createdDeltaDirs	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
Path	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
stat	no	yes
:	no	no
stats	no	no
)	no	no
{	no	no
Path	no	yes
srcPath	no	yes
=	no	no
stat	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
srcPath	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
origBucketStats	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
origBucketStats	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
srcPath	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
originalBucketFilter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
origBucketStats	no	yes
==	no	no
null	no	no
||	no	no
origBucketStats	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
unionSubdirs	no	yes
=	no	no
fs	no	yes
.	no	no
globStatus	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
srcPath	no	yes
,	no	no
AbstractFileMergeOperator	no	yes
.	no	no
UNION_SUDBIR_PREFIX	no	yes
+	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
FileStatus	no	yes
>	no	no
buckets	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
unionSubdir	no	yes
:	no	no
unionSubdirs	no	yes
)	no	no
{	no	no
Collections	no	yes
.	no	no
addAll	no	yes
(	no	no
buckets	no	yes
,	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
unionSubdir	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
AcidUtils	no	yes
.	no	no
originalBucketFilter	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
origBucketStats	no	yes
=	no	no
buckets	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
FileStatus	no	yes
[	no	no
buckets	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
srcPath	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
moveAcidFiles	no	no
(	no	no
String	no	no
deltaFileType	yes	no
,	no	no
PathFilter	no	no
pathFilter	no	no
,	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
dst	no	no
,	no	no
Path	no	no
origBucketPath	yes	no
,	no	no
Set	no	no
<	no	no
Path	no	no
>	no	no
createdDeltaDirs	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
newFiles	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
+	no	no
deltaFileType	yes	yes
+	no	no
+	no	no
origBucketPath	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
deltaStats	no	yes
.	no	no
length	no	yes
+	no	no
+	no	no
deltaFileType	yes	yes
+	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	no
deltaStat	no	yes
:	no	no
deltaStats	no	yes
)	no	no
{	no	no
Path	no	yes
deltaPath	no	yes
=	no	no
deltaStat	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
deltaDest	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dst	no	yes
,	no	no
deltaPath	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
createdDeltaDirs	no	yes
.	no	no
contains	no	no
(	no	no
deltaDest	yes	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
mkdirs	no	no
(	no	no
deltaDest	yes	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
fs	no	yes
.	no	no
rename	no	yes
(	no	no
AcidUtils	no	yes
.	no	no
OrcAcidVersion	no	yes
.	no	no
getVersionFilePath	no	yes
(	no	no
deltaStat	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
AcidUtils	no	yes
.	no	no
OrcAcidVersion	no	yes
.	no	no
getVersionFilePath	no	yes
(	no	no
deltaDest	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FileNotFoundException	no	no
fnf	no	no
)	no	no
{	no	no
}	no	no
}	no	no
createdDeltaDirs	no	yes
.	no	no
add	no	yes
(	no	no
deltaDest	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
swallowIt	yes	no
)	no	no
{	no	no

private	no	no
boolean	no	no
logDumpPhase	no	no
(	no	no
String	no	no
phase	yes	no
)	no	no
{	no	no

final	no	no
boolean	no	no
cache	no	yes
=	no	no
!	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_MATERIALIZED_VIEWS_REGISTRY_IMPL	no	yes
.	no	no
varname	no	yes
)	no	no
.	no	no
equals	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
cache	no	yes
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
materializedViewTable	yes	yes
.	no	no
isRewriteEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getCompleteName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
ConcurrentMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
dbMap	no	yes
=	no	no
new	no	no
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
ConcurrentMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
prevDbMap	no	yes
=	no	no
materializedViews	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
materializedViewTable	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
dbMap	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
prevDbMap	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
dbMap	no	yes
=	no	no
prevDbMap	no	yes
;	no	no
}	no	no
RelOptMaterialization	no	yes
materialization	no	yes
=	no	no
createMaterialization	no	yes
(	no	no
conf	no	yes
,	no	no
materializedViewTable	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
materialization	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
dbMap	no	yes
.	no	no
put	no	yes
(	no	no
materializedViewTable	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
materialization	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

ConcurrentMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
dbMap	no	yes
=	no	no
new	no	no
ConcurrentHashMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
ConcurrentMap	no	yes
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
prevDbMap	no	yes
=	no	no
materializedViews	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
materializedViewTable	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
dbMap	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
prevDbMap	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
dbMap	no	yes
=	no	no
prevDbMap	no	yes
;	no	no
}	no	no
final	no	no
RelOptMaterialization	no	yes
newMaterialization	no	yes
=	no	no
createMaterialization	no	yes
(	no	no
conf	no	yes
,	no	no
materializedViewTable	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
newMaterialization	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
dbMap	no	yes
.	no	no
compute	no	no
(	no	no
materializedViewTable	yes	yes
.	no	no
getTableName	no	no
(	no	no
)	no	no
,	no	no
new	no	no
BiFunction	no	no
<	no	no
String	no	yes
,	no	no
RelOptMaterialization	no	yes
,	no	no
RelOptMaterialization	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
RelOptMaterialization	no	yes
apply	no	no
(	no	no
String	no	yes
tableName	no	no
,	no	no
RelOptMaterialization	no	yes
existingMaterialization	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
existingMaterialization	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
newMaterialization	no	yes
;	no	no
}	no	no
Table	no	yes
existingMaterializedViewTable	no	yes
=	no	no
HiveMaterializedViewUtils	no	yes
.	no	no
extractTable	no	yes
(	no	no
existingMaterialization	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
existingMaterializedViewTable	no	yes
.	no	no
equals	no	no
(	no	no
oldMaterializedViewTable	no	no
)	no	no
)	no	no
{	no	no
return	no	no
newMaterialization	no	yes
;	no	no
}	no	no
return	no	no
existingMaterialization	no	yes
;	no	no

private	no	no
static	no	no
String	no	yes
getJar	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
my_class	no	no
)	no	no
{	no	no
String	no	yes
ret	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
hadoopJarFinder	yes	yes
=	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
jarFinder	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no

private	no	no
static	no	no
String	no	yes
getJar	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
my_class	no	no
)	no	no
{	no	no
String	no	yes
ret	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
hadoopJarFinder	yes	yes
=	no	no
;	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
jarFinder	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
hadoopJarFinder	yes	yes
)	no	no
;	no	no
jarFinder	no	yes
=	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
hadoopJarFinder	yes	yes
)	no	no
;	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
err	yes	yes
)	no	no
{	no	no
MetaException	no	yes
metaException	no	yes
=	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
metaException	no	yes
.	no	no
initCause	no	yes
(	no	no
err	yes	yes
)	no	no
;	no	no
throw	no	no
metaException	no	yes
;	no	no
}	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Table	no	yes
>	no	no
tables	no	yes
=	no	no
getTempTablesForDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tables	no	yes
==	no	no
null	no	no
||	no	no
tables	no	yes
.	no	no
remove	no	no
(	no	no
tableName	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
StatsUtils	no	yes
.	no	no
getFullyQualifiedTableName	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
removePartitionedTempTable	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deleteData	no	no
&&	no	no
!	no	no
isExternalTable	no	no
(	no	no
table	no	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
boolean	no	no
ifPurge	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
envContext	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ifPurge	no	yes
=	no	no
Boolean	no	yes
.	no	no
parseBoolean	no	yes
(	no	no
envContext	no	yes
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
deleteDir	no	yes
(	no	no
tablePath	yes	yes
,	no	no
true	no	no
,	no	no
ifPurge	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
err	yes	yes
)	no	no
{	no	no

private	no	no
static	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
Table	no	no
>>	no	no
getTempTables	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no
SessionState	no	yes
ss	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
ColumnStatisticsObj	no	no
>	no	no
getTempTableColumnStatsForTable	no	no
(	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tableName	yes	no
)	no	no
{	no	no
SessionState	no	yes
ss	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
pruneReduceSinkOperator	no	no
(	no	no
boolean	no	no
[	no	no
]	no	no
retainFlags	no	no
,	no	no
ReduceSinkOperator	no	no
reduce	yes	yes
,	no	no
ColumnPrunerProcCtx	no	no
cppCtx	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
ReduceSinkDesc	no	yes
reduceConf	no	yes
=	no	no
reduce	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
oldMap	yes	yes
=	no	no
reduce	yes	yes
.	no	no
getColumnExprMap	no	yes
(	no	no
)	no	no
;	no	no

colInfo	no	yes
=	no	no
oldRS	no	yes
.	no	no
getColumnInfo	no	yes
(	no	no
outputCol	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
colInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ExprNodeDescUtils	no	no
.	no	no
indexOf	no	no
(	no	no
outputColExpr	no	yes
,	no	no
keyExprs	no	no
)	no	no
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
oldMap	yes	yes
.	no	no
remove	no	yes
(	no	no
outputCol	no	yes
)	no	no
;	no	no
signature	no	yes
.	no	no
remove	no	yes
(	no	no
colInfo	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
newValueColNames	no	yes
.	no	no
add	no	yes
(	no	no
outputCol	no	yes
)	no	no
;	no	no
newValueExprs	no	yes
.	no	no
add	no	yes
(	no	no
outputColExpr	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
oldRS	no	yes
.	no	no
setSignature	no	yes
(	no	no
signature	no	yes
)	no	no
;	no	no
reduce	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
setSignature	no	yes
(	no	no
signature	no	yes
)	no	no
;	no	no
reduceConf	no	yes
.	no	no
setOutputValueColumnNames	no	yes
(	no	no
newValueColNames	no	yes
)	no	no
;	no	no
reduceConf	no	yes
.	no	no
setValueCols	no	yes
(	no	no
newValueExprs	no	yes
)	no	no
;	no	no
TableDesc	no	yes
newValueTable	no	yes
=	no	no
PlanUtils	no	yes
.	no	no
getReduceValueTableDesc	no	yes
(	no	no
PlanUtils	no	yes
.	no	no
getFieldSchemasFromColumnList	no	yes
(	no	no
reduceConf	no	yes
.	no	no
getValueCols	no	yes
(	no	no
)	no	no
,	no	no
newValueColNames	no	yes
,	no	no
0	no	no
,	no	no
)	no	no
)	no	no
;	no	no
reduceConf	no	yes
.	no	no
setValueSerializeInfo	no	yes
(	no	no
newValueTable	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
pruneJoinOperator	no	no
(	no	no
NodeProcessorCtx	no	no
ctx	no	yes
,	no	no
CommonJoinOperator	no	no
op	yes	yes
,	no	no
JoinDesc	no	no
conf	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
ExprNodeDesc	no	no
>	no	no
columnExprMap	no	no
,	no	no
Map	no	no
<	no	no
Byte	no	no
,	no	no
List	no	yes
<	no	no
Integer	no	no
>>	no	no
retainMap	no	no
,	no	no
boolean	no	no
mapJoin	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
ColumnPrunerProcCtx	no	yes
cppCtx	no	yes
=	no	no
(	no	no
ColumnPrunerProcCtx	no	yes
)	no	no
ctx	no	yes
;	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
childOperators	no	yes
=	no	no
op	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
;	no	no

List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
valueCols	no	yes
=	no	no
conf	yes	yes
.	no	no
getExprs	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
Byte	no	yes
.	no	no
valueOf	no	yes
(	no	no
(	no	no
byte	no	no
)	no	no
pos	no	yes
)	no	no
)	no	no
;	no	no
StringBuilder	no	yes
keyOrder	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
valueCols	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
keyOrder	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
TableDesc	no	yes
valueTableDesc	no	yes
=	no	no
PlanUtils	no	yes
.	no	no
getMapJoinValueTableDesc	no	yes
(	no	no
PlanUtils	no	yes
.	no	no
getFieldSchemasFromColumnList	no	yes
(	no	no
valueCols	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
valueTableDescs	no	yes
.	no	no
add	no	yes
(	no	no
valueTableDesc	no	yes
)	no	no
;	no	no
}	no	no
(	no	no
(	no	no
MapJoinDesc	no	yes
)	no	no
conf	yes	yes
)	no	no
.	no	no
setValueTblDescs	no	yes
(	no	no
valueTableDescs	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>>	no	no
exprs	no	yes
=	no	no
(	no	no
(	no	no
MapJoinDesc	no	yes
)	no	no
conf	yes	yes
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>>	no	no
iters	no	yes
=	no	no
exprs	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iters	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>	no	no
entry	no	yes
=	no	no
iters	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
lists	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
j	no	yes
=	no	no
0	no	no
;	no	no
j	no	yes
<	no	no
lists	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
j	no	yes
++	no	no
)	no	no
{	no	no
ExprNodeDesc	no	yes
desc	no	yes
=	no	no
lists	no	yes
.	no	no
get	no	yes
(	no	no
j	no	yes
)	no	no
;	no	no
Byte	no	yes
tag	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
op	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
constants	no	yes
;	no	no
}	no	no
List	no	yes
<	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
ExprNodeDesc	no	yes
>>	no	no
parentsToConstant	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
boolean	no	no
areAllParentsContainConstant	no	yes
=	no	no
true	no	no
;	no	no
boolean	no	no
noParentsContainConstant	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
parent	yes	yes
:	no	no
op	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
ColumnInfo	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
constMap	yes	yes
=	no	no
opToConstantExprs	no	yes
.	no	no
get	no	yes
(	no	no
parent	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
constMap	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
parent	yes	yes
.	no	no
getOperatorId	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
areAllParentsContainConstant	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
noParentsContainConstant	no	yes
=	no	no
false	no	no
;	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
map	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
ColumnInfo	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
entry	no	yes
:	no	no
constMap	yes	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
map	no	yes
.	no	no
put	no	yes
(	no	no
parent	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
getPosition	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
.	no	no
getInternalName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
op	yes	yes
instanceof	no	no
JoinOperator	no	yes
)	no	no
{	no	no
JoinOperator	no	yes
joinOp	no	yes
=	no	no
(	no	no
JoinOperator	no	yes
)	no	no
op	yes	yes
;	no	no
Iterator	no	yes
<	no	no
Entry	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>>	no	no
itr	no	yes
=	no	no
joinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getExprs	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
itr	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Entry	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>	no	no
e	no	yes
=	no	no
itr	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
tag	no	yes
=	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
parent	no	yes
=	no	no
op	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
exprs	no	yes
=	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exprs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
expr	no	yes
:	no	no
exprs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
expr	no	yes
instanceof	no	no
ExprNodeColumnDesc	no	yes
)	no	no
{	no	no
String	no	yes
parentColName	no	yes
=	no	no
(	no	no
(	no	no
ExprNodeColumnDesc	no	yes
)	no	no
expr	no	yes
)	no	no
.	no	no
getColumn	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
parentPos	no	yes
=	no	no
parent	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
getPosition	no	yes
(	no	no
parentColName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
parentsToConstant	no	no
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
.	no	no
containsKey	no	no
(	no	no
parentPos	no	yes
)	no	no
)	no	no
{	no	no

return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
ti	yes	yes
instanceof	no	no
PrimitiveTypeInfo	no	yes
)	no	no
||	no	no
!	no	no
(	no	no
desc	yes	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
instanceof	no	no
PrimitiveTypeInfo	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
PrimitiveTypeInfo	no	yes
priti	no	yes
=	no	no
(	no	no
PrimitiveTypeInfo	no	yes
)	no	no
ti	yes	yes
;	no	no
PrimitiveTypeInfo	no	yes
descti	no	yes
=	no	no
(	no	no
PrimitiveTypeInfo	no	yes
)	no	no
desc	yes	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
unSupportedTypes	no	no
.	no	no
contains	no	yes
(	no	no
priti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
unSupportedTypes	no	no
.	no	no
contains	no	yes
(	no	no
descti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
priti	no	yes
+	no	no
+	no	no
descti	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
boolean	no	no
brokenDataTypesCombination	no	yes
=	no	no
unsafeConversionTypes	no	yes
.	no	no
contains	no	yes
(	no	no
priti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
unsafeConversionTypes	no	yes
.	no	no
contains	no	yes
(	no	no
descti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
priti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
==	no	no
PrimitiveCategory	no	yes
.	no	no
TIMESTAMP	no	yes
&&	no	no
descti	no	yes
.	no	no
getPrimitiveCategory	no	yes
(	no	no
)	no	no
==	no	no
PrimitiveCategory	no	yes
.	no	no
DATE	no	yes
;	no	no
if	no	no
(	no	no
performSafeTypeCast	no	no
&&	no	no
brokenDataTypesCombination	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
priti	no	yes
+	no	no
+	no	no
descti	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
desc	yes	yes
instanceof	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
{	no	no
ExprNodeGenericFuncDesc	no	yes
funcDesc	no	yes
=	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
;	no	no
GenericUDF	no	yes
udf	no	yes
=	no	no
funcDesc	no	yes
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
propagateNext	no	yes
=	no	no
propagate	no	yes
&&	no	no
propagatableUdfs	no	yes
.	no	no
contains	no	yes
(	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
newExprs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
childExpr	no	yes
:	no	no
desc	yes	yes
.	no	no
getChildren	no	no
(	no	no
)	no	no
)	no	no
{	no	no
newExprs	no	yes
.	no	no
add	no	yes
(	no	no
foldExpr	no	yes
(	no	no
childExpr	no	yes
,	no	no
constants	no	yes
,	no	no
cppCtx	no	yes
,	no	no
op	no	yes
,	no	no
tag	no	yes
,	no	no
propagateNext	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isConstantFoldableUdf	no	no
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
(	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
)	no	no
.	no	no
setChildren	no	yes
(	no	no
newExprs	no	yes
)	no	no
;	no	no
return	no	no
desc	yes	yes
;	no	no
}	no	no
ExprNodeDesc	no	yes
shortcut	yes	yes
=	no	no
shortcutFunction	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
op	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shortcut	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

ExprNodeGenericFuncDesc	no	yes
funcDesc	no	yes
=	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
;	no	no
GenericUDF	no	yes
udf	no	yes
=	no	no
funcDesc	no	yes
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
propagateNext	no	yes
=	no	no
propagate	no	yes
&&	no	no
propagatableUdfs	no	yes
.	no	no
contains	no	yes
(	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
newExprs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
childExpr	no	yes
:	no	no
desc	yes	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
newExprs	no	yes
.	no	no
add	no	yes
(	no	no
foldExpr	no	yes
(	no	no
childExpr	no	yes
,	no	no
constants	no	yes
,	no	no
cppCtx	no	yes
,	no	no
op	no	yes
,	no	no
tag	no	yes
,	no	no
propagateNext	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isConstantFoldableUdf	no	no
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
(	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
)	no	no
.	no	no
setChildren	no	yes
(	no	no
newExprs	no	yes
)	no	no
;	no	no
return	no	no
desc	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
ExprNodeDesc	no	yes
constant	yes	yes
=	no	no
evaluateFunction	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
desc	yes	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
constant	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
isConstantFoldableUdf	no	no
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
(	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
)	no	no
.	no	no
setChildren	no	yes
(	no	no
newExprs	no	yes
)	no	no
;	no	no
return	no	no
desc	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
ExprNodeDesc	no	yes
constant	no	yes
=	no	no
evaluateFunction	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
desc	yes	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
constant	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
desc	yes	yes
+	no	no
+	no	no
constant	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
constant	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
ExprNodeDesc	no	yes
shortcut	yes	yes
=	no	no
shortcutFunction	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
op	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shortcut	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
return	no	no
constant	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
ExprNodeDesc	no	yes
shortcut	no	yes
=	no	no
shortcutFunction	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
op	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shortcut	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
desc	yes	yes
+	no	no
+	no	no
shortcut	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
shortcut	no	yes
;	no	no
}	no	no
(	no	no
(	no	no
ExprNodeGenericFuncDesc	no	yes
)	no	no
desc	yes	yes
)	no	no
.	no	no
setChildren	no	yes
(	no	no
newExprs	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
propagate	no	yes
)	no	no
{	no	no
propagate	no	yes
(	no	no
udf	no	yes
,	no	no
newExprs	no	yes
,	no	no
op	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
,	no	no
constants	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
desc	yes	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
desc	yes	yes
instanceof	no	no
ExprNodeColumnDesc	no	no
)	no	no
{	no	no
if	no	no
(	no	no
op	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
||	no	no
op	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
desc	yes	yes
;	no	no
}	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
Serializable	no	yes
>	no	no
parent	no	yes
=	no	no
op	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
isConstantFoldableUdf	no	no
(	no	no
GenericUDF	no	no
udf	no	yes
,	no	no
List	no	no
<	no	no
ExprNodeDesc	no	no
>	no	no
children	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
FunctionRegistry	no	no
.	no	no
isConsistentWithinQuery	no	no
(	no	no
udf	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
udf	no	yes
.	no	no
getClass	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GenericUDFUnixTimeStamp	no	no
.	no	no
class	no	no
)	no	no
&&	no	no
children	no	no
!=	no	no
null	no	no
&&	no	no
children	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
String	no	yes
[	no	no
]	no	no
files	no	yes
;	no	no
String	no	yes
[	no	no
]	no	no
jars	no	yes
;	no	no
if	no	no
(	no	no
udf	no	yes
instanceof	no	no
GenericUDFBridge	no	yes
)	no	no
{	no	no
GenericUDFBridge	no	yes
bridge	no	yes
=	no	no
(	no	no
GenericUDFBridge	no	yes
)	no	no
udf	no	yes
;	no	no
String	no	yes
udfClassName	yes	yes
=	no	no
bridge	no	yes
.	no	no
getUdfClassName	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
UDF	no	yes
udfInternal	no	yes
=	no	no
(	no	no
UDF	no	yes
)	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
bridge	no	yes
.	no	no
getUdfClassName	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
,	no	no
Utilities	no	yes
.	no	no
getSessionSpecifiedClassLoader	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
files	no	yes
=	no	no
udfInternal	no	yes
.	no	no
getRequiredFiles	no	yes
(	no	no
)	no	no
;	no	no
jars	no	yes
=	no	no
udfInternal	no	yes
.	no	no
getRequiredJars	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

if	no	no
(	no	no
lOperand	no	yes
instanceof	no	no
ExprNodeColumnDesc	no	yes
)	no	no
{	no	no
c	no	yes
=	no	no
(	no	no
ExprNodeColumnDesc	no	yes
)	no	no
lOperand	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rOperand	no	yes
instanceof	no	no
ExprNodeColumnDesc	no	yes
)	no	no
{	no	no
c	no	yes
=	no	no
(	no	no
ExprNodeColumnDesc	no	yes
)	no	no
rOperand	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
return	no	no
;	no	no
}	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
resolveColumn	no	yes
(	no	no
rs	no	yes
,	no	no
c	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
udf	yes	yes
.	no	no
getDisplayString	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
lOperand	no	yes
.	no	no
getExprString	no	yes
(	no	no
)	no	no
,	no	no
rOperand	no	yes
.	no	no
getExprString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
v	no	yes
.	no	no
getTypeInfo	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
ci	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
v	no	yes
=	no	no
typeCast	no	yes
(	no	no
v	no	yes
,	no	no
ci	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
v	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
constants	no	yes
.	no	no
put	no	yes
(	no	no
ci	no	yes
,	no	no
v	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
udf	yes	yes
instanceof	no	no
GenericUDFOPNull	no	no
)	no	no
{	no	no

private	no	no
static	no	no
ExprNodeDesc	no	no
evaluateColumn	no	no
(	no	no
ExprNodeColumnDesc	no	no
desc	yes	yes
,	no	no
ConstantPropagateProcCtx	no	no
cppCtx	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
Serializable	no	no
>	no	no
parent	no	yes
)	no	no
{	no	no
RowSchema	no	yes
rs	no	yes
=	no	no
parent	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
rs	no	yes
.	no	no
getColumnInfo	no	yes
(	no	no
desc	yes	yes
.	no	no
getColumn	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isErrorEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

else	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
ObjectInspector	no	yes
oi	no	yes
=	no	no
udf	no	yes
.	no	no
initialize	no	yes
(	no	no
argois	no	yes
)	no	no
;	no	no
Object	no	yes
o	no	yes
=	no	no
udf	no	yes
.	no	no
evaluate	no	yes
(	no	no
arguments	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprs	yes	yes
+	no	no
+	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
o	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromObjectInspector	no	yes
(	no	no
oi	no	yes
)	no	no
,	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
clz	no	yes
=	no	no
o	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PrimitiveObjectInspectorUtils	no	no
.	no	no
isPrimitiveWritableClass	no	no
(	no	no
clz	no	yes
)	no	no
)	no	no
{	no	no
PrimitiveObjectInspector	no	yes
poi	no	yes
=	no	no
(	no	no
PrimitiveObjectInspector	no	yes
)	no	no
oi	no	yes
;	no	no
TypeInfo	no	yes
typeInfo	no	yes
=	no	no
poi	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
o	no	yes
=	no	no
poi	no	yes
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
o	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
DECIMAL_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
VARCHAR_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
CHAR_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
TIMESTAMPLOCALTZ_TYPE_NAME	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
udf	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
exprs	yes	yes
+	no	no
+	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
o	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromObjectInspector	no	yes
(	no	no
oi	no	yes
)	no	no
,	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
Class	no	yes
<	no	no
?	no	no
>	no	no
clz	no	yes
=	no	no
o	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
PrimitiveObjectInspectorUtils	no	no
.	no	no
isPrimitiveWritableClass	no	no
(	no	no
clz	no	yes
)	no	no
)	no	no
{	no	no
PrimitiveObjectInspector	no	yes
poi	no	yes
=	no	no
(	no	no
PrimitiveObjectInspector	no	yes
)	no	no
oi	no	yes
;	no	no
TypeInfo	no	yes
typeInfo	no	yes
=	no	no
poi	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
o	no	yes
=	no	no
poi	no	yes
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
o	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
DECIMAL_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
VARCHAR_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
CHAR_TYPE_NAME	no	no
)	no	no
||	no	no
typeInfo	no	yes
.	no	no
getTypeName	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
serdeConstants	no	no
.	no	no
TIMESTAMPLOCALTZ_TYPE_NAME	no	no
)	no	no
)	no	no
{	no	no
return	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
typeInfo	no	yes
,	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
udf	no	yes
instanceof	no	no
GenericUDFStruct	no	no
&&	no	no
oi	no	yes
instanceof	no	no
StandardConstantStructObjectInspector	no	no
)	no	no
{	no	no
ConstantObjectInspector	no	yes
coi	no	yes
=	no	no
(	no	no
ConstantObjectInspector	no	yes
)	no	no
oi	no	yes
;	no	no
TypeInfo	no	yes
structType	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromObjectInspector	no	yes
(	no	no
coi	no	yes
)	no	no
;	no	no
return	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
structType	no	yes
,	no	no
ObjectInspectorUtils	no	yes
.	no	no
copyToStandardJavaObject	no	yes
(	no	no
o	no	yes
,	no	no
coi	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
PrimitiveObjectInspectorUtils	no	no
.	no	no
isPrimitiveJavaClass	no	no
(	no	no
clz	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
foldOperator	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
Serializable	no	no
>	no	no
op	yes	yes
,	no	no
ConstantPropagateProcCtx	no	no
cppCtx	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
RowSchema	no	yes
schema	no	yes
=	no	no
op	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
ColumnInfo	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
constants	no	yes
=	no	no
cppCtx	no	yes
.	no	no
getOpToConstantExprs	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
schema	no	yes
!=	no	no
null	no	no
&&	no	no
schema	no	yes
.	no	no
getSignature	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ColumnInfo	no	yes
col	yes	yes
:	no	no
schema	no	yes
.	no	no
getSignature	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ExprNodeDesc	no	yes
constant	yes	yes
=	no	no
constants	no	yes
.	no	no
get	no	yes
(	no	no
col	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
constant	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

hashMapDataStructure	no	yes
=	no	no
HashMapDataStructureType	no	yes
.	no	no
of	no	yes
(	no	no
joinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TezBucketJoinProcCtx	no	yes
tezBucketJoinProcCtx	no	yes
=	no	no
new	no	no
TezBucketJoinProcCtx	no	yes
(	no	no
context	no	yes
.	no	no
conf	no	yes
)	no	no
;	no	no
boolean	no	no
hiveConvertJoin	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECONVERTJOIN	no	yes
)	no	no
&	no	no
!	no	no
context	no	yes
.	no	no
parseContext	no	yes
.	no	no
getDisableMapJoin	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
hiveConvertJoin	no	yes
)	no	no
{	no	no
Object	no	yes
retval	no	yes
=	no	no
checkAndConvertSMBJoin	no	yes
(	no	no
context	no	yes
,	no	no
joinOp	no	yes
,	no	no
tezBucketJoinProcCtx	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
retval	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
retval	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
fallbackToReduceSideJoin	no	yes
(	no	no
joinOp	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
int	no	no
numBuckets	yes	yes
=	no	no
-	no	no
1	no	no
;	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_CONVERT_JOIN_BUCKET_MAPJOIN_TEZ	no	no
)	no	no
)	no	no
{	no	no
numBuckets	yes	yes
=	no	no
estimateNumBuckets	no	yes
(	no	no
joinOp	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
numBuckets	yes	yes
=	no	no
1	no	no
;	no	no

int	no	no
numExecutorsPerNode	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
if	no	no
(	no	no
llapInfo	no	yes
.	no	no
hasClusterInfo	no	no
(	no	no
)	no	no
)	no	no
{	no	no
numExecutorsPerNode	no	yes
=	no	no
llapInfo	no	yes
.	no	no
getNumExecutorsPerNode	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
numExecutorsPerNode	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
numExecutorsPerNode	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_NUM_EXECUTORS	no	yes
)	no	no
;	no	no
}	no	no
int	no	no
numNodes	no	yes
=	no	no
llapInfo	no	yes
.	no	no
getKnownExecutorCount	no	yes
(	no	no
)	no	no
/	no	no
numExecutorsPerNode	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
numNodes	no	yes
+	no	no
+	no	no
numExecutorsPerNode	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
mapJoinConversionPos	no	yes
=	no	no
mapJoinConversion	no	yes
.	no	no
getBigTablePos	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
totalSize	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
mapJoinConversionPos	no	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOp	no	yes
=	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
totalSize	yes	yes
+=	no	no
computeOnlineDataSize	no	yes
(	no	no
parentOp	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
long	no	no
bigTableSize	yes	yes
=	no	no
computeOnlineDataSize	no	yes
(	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
mapJoinConversionPos	no	yes
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

numExecutorsPerNode	no	yes
=	no	no
llapInfo	no	yes
.	no	no
getNumExecutorsPerNode	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
numExecutorsPerNode	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
numExecutorsPerNode	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_NUM_EXECUTORS	no	yes
)	no	no
;	no	no
}	no	no
int	no	no
numNodes	yes	yes
=	no	no
llapInfo	no	yes
.	no	no
getKnownExecutorCount	no	yes
(	no	no
)	no	no
/	no	no
numExecutorsPerNode	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
numNodes	yes	yes
+	no	no
+	no	no
numExecutorsPerNode	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
mapJoinConversionPos	no	yes
=	no	no
mapJoinConversion	no	yes
.	no	no
getBigTablePos	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
totalSize	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
mapJoinConversionPos	no	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOp	no	yes
=	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
;	no	no
totalSize	yes	yes
+=	no	no
computeOnlineDataSize	no	yes
(	no	no
parentOp	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
long	no	no
bigTableSize	no	yes
=	no	no
computeOnlineDataSize	no	yes
(	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
mapJoinConversionPos	no	yes
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
networkCostDPHJ	no	yes
=	no	no
totalSize	yes	yes
+	no	no
bigTableSize	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
totalSize	yes	yes
+	no	no
+	no	no
bigTableSize	no	yes
+	no	no
+	no	no
networkCostDPHJ	no	yes
)	no	no
;	no	no

executorsPerNode	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_NUM_EXECUTORS	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
final	no	no
int	no	no
numExecutorsPerNodeFromCluster	no	yes
=	no	no
llapInfo	no	yes
.	no	no
getNumExecutorsPerNode	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numExecutorsPerNodeFromCluster	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
executorsPerNode	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_NUM_EXECUTORS	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
executorsPerNode	no	yes
=	no	no
numExecutorsPerNodeFromCluster	no	yes
;	no	no
}	no	no
}	no	no
final	no	no
int	no	no
slotsPerQuery	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
maxSlotsPerQuery	no	yes
,	no	no
executorsPerNode	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
llapMaxSize	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
maxSize	no	yes
+	no	no
(	no	no
maxSize	no	yes
*	no	no
overSubscriptionFactor	no	yes
*	no	no
slotsPerQuery	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
long	no	no
adjustedMaxSize	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
maxSize	no	yes
,	no	no
llapMaxSize	no	yes
)	no	no
;	no	no
memoryMonitorInfo	yes	yes
=	no	no
new	no	no
MemoryMonitorInfo	no	yes
(	no	no
true	no	no
,	no	no
executorsPerNode	no	yes
,	no	no
maxSlotsPerQuery	no	yes
,	no	no
overSubscriptionFactor	no	yes
,	no	no
maxSize	no	yes
,	no	no
adjustedMaxSize	no	yes
,	no	no
memoryCheckInterval	no	yes
,	no	no
inflationFactor	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
memoryMonitorInfo	yes	yes
=	no	no
new	no	no
MemoryMonitorInfo	no	yes
(	no	no
false	no	no
,	no	no
1	no	no
,	no	no
maxSlotsPerQuery	no	yes
,	no	no
overSubscriptionFactor	no	yes
,	no	no
maxSize	no	yes
,	no	no
maxSize	no	yes
,	no	no
memoryCheckInterval	no	yes
,	no	no
inflationFactor	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
ReduceSinkOperator	no	yes
rs	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
bigTablePosition	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
parentColNames	no	yes
=	no	no
rs	no	yes
.	no	no
getOpTraits	no	yes
(	no	no
)	no	no
.	no	no
getBucketColNames	no	yes
(	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOfParent	no	yes
=	no	no
rs	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
grandParentColNames	no	yes
=	no	no
parentOfParent	no	yes
.	no	no
getOpTraits	no	yes
(	no	no
)	no	no
.	no	no
getBucketColNames	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numBuckets	no	yes
=	no	no
parentOfParent	no	yes
.	no	no
getOpTraits	no	yes
(	no	no
)	no	no
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
checkColEquality	no	no
(	no	no
grandParentColNames	no	yes
,	no	no
parentColNames	no	yes
,	no	no
rs	no	yes
.	no	no
getColumnExprMap	no	no
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
boolean	no	no
shouldCheckExternalTables	no	yes
=	no	no
tezBucketJoinProcCtx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_DISABLE_UNSAFE_EXTERNALTABLE_OPERATIONS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shouldCheckExternalTables	no	yes
)	no	no
{	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
parentOp	no	no
:	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hasExternalTableAncestor	no	no
(	no	no
parentOp	no	no
,	no	no
sb	yes	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
isFullOuterEnabled	no	no
)	no	no
{	no	no
isFullOuterEnabledForDynamicPartitionHashJoin	no	yes
=	no	no
MapJoinProcessor	no	yes
.	no	no
isFullOuterEnabledForDynamicPartitionHashJoin	no	yes
(	no	no
context	no	yes
.	no	no
conf	no	yes
,	no	no
joinOp	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
bigTableCandidateSet	no	yes
=	no	no
MapJoinProcessor	no	yes
.	no	no
getBigTableCandidates	no	yes
(	no	no
conds	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bigTableCandidateSet	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
int	no	no
bigTablePosition	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
long	no	no
bigInputCumulativeCardinality	no	yes
=	no	no
-	no	no
1L	no	no
;	no	no
Statistics	no	yes
bigInputStat	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
foundInputNotFittingInMemory	no	yes
=	no	no
false	no	no
;	no	no
long	no	no
totalSize	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
convertDPHJ	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pos	yes	yes
=	no	no
0	no	no
;	no	no
pos	yes	yes
<	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
pos	yes	yes
++	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOp	no	yes
=	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	yes	yes
)	no	no
;	no	no
Statistics	no	yes
currInputStat	yes	yes
=	no	no
parentOp	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currInputStat	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
boolean	no	no
convertJoinDynamicPartitionedHashJoin	no	no
(	no	no
JoinOperator	no	no
joinOp	no	yes
,	no	no
OptimizeTezProcContext	no	no
context	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
int	no	no
numReducers	yes	yes
=	no	no
estimateNumBuckets	no	yes
(	no	no
joinOp	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

private	no	no
boolean	no	no
checkNumberOfEntriesForHashTable	no	no
(	no	no
JoinOperator	no	no
joinOp	no	yes
,	no	no
int	no	no
position	yes	yes
,	no	no
OptimizeTezProcContext	no	no
context	no	yes
)	no	no
{	no	no
long	no	no
max	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
context	no	yes
.	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECONVERTJOINMAXENTRIESHASHTABLE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
max	yes	yes
<	no	no
1	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
ReduceSinkOperator	no	yes
rsOp	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
position	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
keys	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getQualifedReducerKeyNames	no	yes
(	no	no
rsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getOutputKeyColumnNames	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Statistics	no	yes
inputStats	no	yes
=	no	no
rsOp	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
columnStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
key	no	yes
:	no	no
keys	no	yes
)	no	no
{	no	no
ColStatistics	no	yes
cs	no	yes
=	no	no
inputStats	no	yes
.	no	no
getColumnStatisticsFromColName	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
columnStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
numRows	no	yes
=	no	no
inputStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
estimation	yes	yes
=	no	no
estimateNDV	no	yes
(	no	no
numRows	no	yes
,	no	no
columnStats	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
procCtx	no	yes
instanceof	no	no
OptimizeTezProcContext	no	yes
)	no	no
{	no	no
parseContext	no	yes
=	no	no
(	no	no
(	no	no
OptimizeTezProcContext	no	yes
)	no	no
procCtx	no	yes
)	no	no
.	no	no
parseContext	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
procCtx	no	yes
instanceof	no	no
OptimizeSparkProcContext	no	yes
)	no	no
{	no	no
parseContext	no	yes
=	no	no
(	no	no
(	no	no
OptimizeSparkProcContext	no	yes
)	no	no
procCtx	no	yes
)	no	no
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
+	no	no
procCtx	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
FilterOperator	no	yes
filter	no	yes
=	no	no
(	no	no
FilterOperator	no	yes
)	no	no
nd	no	yes
;	no	no
FilterDesc	no	yes
desc	yes	yes
=	no	no
filter	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
TEZ_DYNAMIC_PARTITION_PRUNING	no	no
)	no	no
&&	no	no
!	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isSparkDPPAny	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
TableScanOperator	no	yes
ts	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
instanceof	no	no
TableScanOperator	no	yes
)	no	no
{	no	no
ts	no	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

parseContext	no	yes
=	no	no
(	no	no
(	no	no
OptimizeTezProcContext	no	yes
)	no	no
procCtx	no	yes
)	no	no
.	no	no
parseContext	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
procCtx	no	yes
instanceof	no	no
OptimizeSparkProcContext	no	yes
)	no	no
{	no	no
parseContext	no	yes
=	no	no
(	no	no
(	no	no
OptimizeSparkProcContext	no	yes
)	no	no
procCtx	no	yes
)	no	no
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
+	no	no
procCtx	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
FilterOperator	no	yes
filter	no	yes
=	no	no
(	no	no
FilterOperator	no	yes
)	no	no
nd	no	yes
;	no	no
FilterDesc	no	yes
desc	no	yes
=	no	no
filter	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
TEZ_DYNAMIC_PARTITION_PRUNING	no	no
)	no	no
&&	no	no
!	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isSparkDPPAny	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
TableScanOperator	no	yes
ts	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
instanceof	no	no
TableScanOperator	no	yes
)	no	no
{	no	no
ts	yes	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
filter	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
desc	no	yes
.	no	no
getPredicateString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
HiveConf	no	no
.	no	no
getVar	no	no
(	no	no
parseContext	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_EXECUTION_ENGINE	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
semiJoin	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
newBetweenNodes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
newBloomFilterNodes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
DynamicListContext	no	no
ctx	no	yes
:	no	no
removerContext	no	no
)	no	no
{	no	no
String	no	yes
column	yes	yes
=	no	no
ExprNodeDescUtils	no	yes
.	no	no
extractColName	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
)	no	no
;	no	no
boolean	no	no
semiJoinAttempted	no	yes
=	no	no
false	no	no
;	no	no
ExprNodeDesc	no	yes
constNode	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
column	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
keyBaseAlias	no	yes
=	no	no
;	no	no
Table	no	yes
table	yes	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
nonEquiJoin	no	yes
=	no	no
isNonEquiJoin	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	yes	yes
!=	no	no
null	no	no
&&	no	no
table	yes	yes
.	no	no
isPartitionKey	no	no
(	no	no
column	yes	yes
)	no	no
&&	no	no
!	no	no
nonEquiJoin	no	yes
)	no	no
{	no	no
String	no	yes
columnType	no	yes
=	no	no
table	yes	yes
.	no	no
getPartColByName	no	yes
(	no	no
column	yes	yes
)	no	no
.	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
alias	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getAlias	no	yes
(	no	no
)	no	no
;	no	no

boolean	no	no
semiJoinAttempted	no	yes
=	no	no
false	no	no
;	no	no
ExprNodeDesc	no	yes
constNode	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
column	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
keyBaseAlias	no	yes
=	no	no
;	no	no
Table	no	yes
table	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
nonEquiJoin	no	yes
=	no	no
isNonEquiJoin	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
!=	no	no
null	no	no
&&	no	no
table	no	yes
.	no	no
isPartitionKey	no	no
(	no	no
column	yes	yes
)	no	no
&&	no	no
!	no	no
nonEquiJoin	no	yes
)	no	no
{	no	no
String	no	yes
columnType	no	yes
=	no	no
table	no	yes
.	no	no
getPartColByName	no	yes
(	no	no
column	yes	yes
)	no	no
.	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
alias	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getAlias	no	yes
(	no	no
)	no	no
;	no	no
PrunedPartitionList	no	yes
plist	no	yes
=	no	no
parseContext	no	yes
.	no	no
getPrunedPartitions	no	yes
(	no	no
alias	no	yes
,	no	no
ts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
alias	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
plist	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Partition	no	no
p	no	no
:	no	no
plist	no	yes
.	no	no
getPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
column	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
keyBaseAlias	no	yes
=	no	no
;	no	no
Table	no	yes
table	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
nonEquiJoin	no	yes
=	no	no
isNonEquiJoin	no	yes
(	no	no
ctx	no	yes
.	no	no
parent	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
!=	no	no
null	no	no
&&	no	no
table	no	yes
.	no	no
isPartitionKey	no	no
(	no	no
column	yes	yes
)	no	no
&&	no	no
!	no	no
nonEquiJoin	no	yes
)	no	no
{	no	no
String	no	yes
columnType	no	yes
=	no	no
table	no	yes
.	no	no
getPartColByName	no	yes
(	no	no
column	yes	yes
)	no	no
.	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
alias	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getAlias	no	yes
(	no	no
)	no	no
;	no	no
PrunedPartitionList	no	yes
plist	no	yes
=	no	no
parseContext	no	yes
.	no	no
getPrunedPartitions	no	yes
(	no	no
alias	no	yes
,	no	no
ts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
alias	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
plist	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Partition	no	no
p	no	yes
:	no	no
plist	no	yes
.	no	no
getPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
p	no	yes
.	no	no
getCompleteName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
plist	no	yes
==	no	no
null	no	no
||	no	no
plist	no	yes
.	no	no
getPartitions	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no

private	no	no
void	no	no
generateEventOperatorPlan	no	no
(	no	no
DynamicListContext	no	no
ctx	no	yes
,	no	no
ParseContext	no	no
parseContext	no	no
,	no	no
TableScanOperator	no	no
ts	no	no
,	no	no
String	no	no
column	no	no
,	no	no
String	no	no
columnType	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOfRS	no	yes
=	no	no
ctx	no	yes
.	no	no
generator	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
key	yes	yes
=	no	no
ctx	no	yes
.	no	no
getKeyCol	no	yes
(	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
partKey	no	yes
=	no	no
ctx	no	yes
.	no	no
parent	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
generateEventOperatorPlan	no	no
(	no	no
DynamicListContext	no	no
ctx	no	yes
,	no	no
ParseContext	no	no
parseContext	no	no
,	no	no
TableScanOperator	no	no
ts	no	no
,	no	no
String	no	no
column	no	no
,	no	no
String	no	no
columnType	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parentOfRS	no	yes
=	no	no
ctx	no	yes
.	no	no
generator	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
key	no	yes
=	no	no
ctx	no	yes
.	no	no
getKeyCol	no	yes
(	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
partKey	yes	yes
=	no	no
ctx	no	yes
.	no	no
parent	no	yes
.	no	no
getChildren	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
key	no	yes
)	no	no
;	no	no

ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
gbOutputNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
gbOutputNames	no	yes
.	no	no
add	no	yes
(	no	no
SemanticAnalyzer	no	yes
.	no	no
getColumnInternalName	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
gbOutputNames	no	yes
.	no	no
add	no	yes
(	no	no
SemanticAnalyzer	no	yes
.	no	no
getColumnInternalName	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
gbOutputNames	no	yes
.	no	no
add	no	yes
(	no	no
SemanticAnalyzer	no	yes
.	no	no
getColumnInternalName	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
;	no	no
int	no	no
colPos	no	yes
=	no	no
0	no	no
;	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
rsValueCols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
gbOutputNames	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
-	no	no
1	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
ExprNodeColumnDesc	no	yes
expr	no	yes
=	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
key	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
,	no	no
gbOutputNames	no	yes
.	no	no
get	no	yes
(	no	no
colPos	no	yes
++	no	no
)	no	no
,	no	no
,	no	no
false	no	no
)	no	no
;	no	no
rsValueCols	no	yes
.	no	no
add	no	yes
(	no	no
expr	no	yes
)	no	no
;	no	no
}	no	no
ExprNodeColumnDesc	no	yes
colBFExpr	no	yes
=	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
binaryTypeInfo	no	yes
,	no	no
gbOutputNames	no	yes
.	no	no
get	no	yes
(	no	no
colPos	no	yes
++	no	no
)	no	no
,	no	no
,	no	no
false	no	no
)	no	no
;	no	no
rsValueCols	no	yes
.	no	no
add	no	yes
(	no	no
colBFExpr	no	yes
)	no	no
;	no	no
ReduceSinkDesc	no	yes
rsDescFinal	no	yes
=	no	no
PlanUtils	no	yes
.	no	no
getReduceSinkDesc	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
,	no	no
rsValueCols	no	yes
,	no	no
gbOutputNames	no	yes
,	no	no
false	no	no
,	no	no
-	no	no
1	no	no
,	no	no
0	no	no
,	no	no
1	no	no
,	no	no
Operation	no	yes
.	no	no
NOT_ACID	no	yes
,	no	no
NullOrdering	no	yes
.	no	no
defaultNullOrder	no	yes
(	no	no
parseContext	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ReduceSinkOperator	no	yes
rsOpFinal	yes	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
rsDescFinal	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
gb	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
gb	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
columnExprMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
rsOpFinal	yes	yes
.	no	no
setColumnExprMap	no	yes
(	no	no
columnExprMap	no	yes
)	no	no
;	no	no

LimitDesc	no	yes
tempGlobalLimitDesc	no	yes
=	no	no
tempGlobalLimit	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tab	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
FilterOperator	no	yes
>	no	no
filterOps	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperators	no	yes
(	no	no
ts	no	yes
,	no	no
FilterOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tab	no	yes
.	no	no
isPartitioned	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
filterOps	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Integer	no	yes
tempOffset	no	yes
=	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
globalLimitCtx	yes	yes
.	no	no
enableOpt	no	yes
(	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
tempOffset	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
0	no	no
:	no	no
tempOffset	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
onlyContainsPartnCols	no	no
(	no	no
tab	no	yes
,	no	no
filterOps	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
alias	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
topOps	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
PrunedPartitionList	no	yes
partsList	no	yes
=	no	no
pctx	no	yes
.	no	no
getPrunedPartitions	no	yes
(	no	no
alias	no	yes
,	no	no
ts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
partsList	no	yes
.	no	no
hasUnknownPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Integer	no	yes
tempOffset	no	yes
=	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
globalLimitCtx	yes	yes
.	no	no
enableOpt	no	yes
(	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
tempOffset	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
0	no	no
:	no	no
tempOffset	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
globalLimitCtx	yes	yes
.	no	no
isEnable	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Table	no	yes
tab	no	yes
=	no	no
ts	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableMetadata	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
FilterOperator	no	yes
>	no	no
filterOps	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperators	no	yes
(	no	no
ts	no	yes
,	no	no
FilterOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tab	no	yes
.	no	no
isPartitioned	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
filterOps	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Integer	no	yes
tempOffset	no	yes
=	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
globalLimitCtx	yes	yes
.	no	no
enableOpt	no	yes
(	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
tempOffset	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
0	no	no
:	no	no
tempOffset	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
onlyContainsPartnCols	no	no
(	no	no
tab	no	yes
,	no	no
filterOps	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
alias	no	yes
=	no	no
(	no	no
String	no	yes
)	no	no
topOps	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
PrunedPartitionList	no	yes
partsList	no	yes
=	no	no
pctx	no	yes
.	no	no
getPrunedPartitions	no	yes
(	no	no
alias	no	yes
,	no	no
ts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
partsList	no	yes
.	no	no
hasUnknownPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Integer	no	yes
tempOffset	no	yes
=	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
globalLimitCtx	yes	yes
.	no	no
enableOpt	no	yes
(	no	no
tempGlobalLimitDesc	no	yes
.	no	no
getLimit	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
tempOffset	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
0	no	no
:	no	no
tempOffset	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
globalLimitCtx	yes	yes
.	no	no
isEnable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
globalLimitCtx	yes	yes
.	no	no
getGlobalOffset	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
checkFullOuterMapJoinCompatible	no	no
(	no	no
HiveConf	no	no
hiveConf	no	no
,	no	no
JoinOperator	no	no
joinOp	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
JoinDesc	no	yes
joinDesc	no	yes
=	no	no
joinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Byte	no	no
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>	no	no
mapEntry	no	yes
:	no	no
joinDesc	no	yes
.	no	no
getExprs	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
exprList	no	yes
=	no	no
mapEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
expr	yes	no
:	no	no
exprList	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
expr	yes	no
instanceof	no	no
ExprNodeColumnDesc	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
Entry	no	no
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>	no	no
mapEntry	no	yes
:	no	no
joinDesc	no	yes
.	no	no
getExprs	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
exprList	no	yes
=	no	no
mapEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
expr	no	yes
:	no	no
exprList	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
expr	no	yes
instanceof	no	no
ExprNodeColumnDesc	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
expr	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
}	no	no
Byte	no	yes
[	no	no
]	no	no
order	no	yes
=	no	no
joinDesc	no	yes
.	no	no
getTagOrder	no	yes
(	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
[	no	no
]	no	no
[	no	no
]	no	no
joinKeysArray	no	yes
=	no	no
joinDesc	no	yes
.	no	no
getJoinKeys	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
order	no	yes
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
byte	no	no
pos	no	yes
=	no	no
order	no	yes
[	no	no
i	no	yes
]	no	no
;	no	no
ExprNodeDesc	no	yes
[	no	no
]	no	no
keyExprs	no	yes
=	no	no
joinKeysArray	no	yes
[	no	no
pos	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	yes
keyExpr	no	yes
:	no	no
keyExprs	no	yes
)	no	no
{	no	no
TypeInfo	no	yes
typeInfo	yes	yes
=	no	no
keyExpr	no	yes
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
MapJoinKey	no	no
.	no	no
isSupportedField	no	no
(	no	no
typeInfo	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

final	no	no
String	no	yes
testMapJoinFullOuterOverrideString	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_TEST_MAPJOINFULLOUTER_OVERRIDE	no	yes
)	no	no
;	no	no
EnabledOverride	no	yes
mapJoinFullOuterOverride	no	yes
=	no	no
EnabledOverride	no	yes
.	no	no
nameMap	no	yes
.	no	no
get	no	yes
(	no	no
testMapJoinFullOuterOverrideString	no	yes
)	no	no
;	no	no
final	no	no
boolean	no	no
isEnabled	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEMAPJOINFULLOUTER	no	yes
)	no	no
;	no	no
switch	no	no
(	no	no
mapJoinFullOuterOverride	no	yes
)	no	no
{	no	no
case	no	no
NONE	no	no
:	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isEnabled	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEMAPJOINFULLOUTER	no	yes
.	no	no
varname	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
break	no	no
;	no	no
case	no	no
DISABLE	no	no
:	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_TEST_MAPJOINFULLOUTER_OVERRIDE	no	yes
.	no	no
varname	no	yes
+	no	no
+	no	no
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEMAPJOINFULLOUTER	no	yes
.	no	no
varname	no	yes
+	no	no
+	no	no
isEnabled	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
case	no	no
ENABLE	no	no
:	no	no
HiveConf	no	yes
.	no	no
setBoolVar	no	no
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEMAPJOINFULLOUTER	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
collectFileSinkDescs	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
leaf	no	yes
,	no	no
Set	no	no
<	no	no
FileSinkDesc	no	yes
>	no	no
acidSinks	no	no
)	no	no
{	no	no
if	no	no
(	no	no
leaf	no	yes
instanceof	no	no
FileSinkOperator	no	yes
)	no	no
{	no	no
FileSinkDesc	no	yes
fsd	yes	yes
=	no	no
(	no	no
(	no	no
FileSinkOperator	no	yes
)	no	no
leaf	no	yes
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fsd	yes	yes
.	no	no
getWriteType	no	no
(	no	no
)	no	no
!=	no	no
AcidUtils	no	no
.	no	no
Operation	no	no
.	no	no
NOT_ACID	no	no
)	no	no
{	no	no
if	no	no
(	no	no
acidSinks	no	no
.	no	no
add	no	no
(	no	no
fsd	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

maxKeyCount	no	yes
*=	no	no
cs	no	yes
.	no	no
getCountDistint	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
maxKeyCount	no	yes
>=	no	no
keyCount	yes	yes
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
keyCount	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
maxKeyCount	no	yes
,	no	no
keyCount	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
joinConf	yes	no
.	no	no
isBucketMapJoin	no	no
(	no	no
)	no	no
)	no	no
{	no	no
OpTraits	no	yes
opTraits	no	yes
=	no	no
mapJoinOp	yes	yes
.	no	no
getOpTraits	no	yes
(	no	no
)	no	no
;	no	no
bucketCount	yes	yes
=	no	no
(	no	no
opTraits	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
-	no	no
1	no	no
:	no	no
opTraits	no	yes
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bucketCount	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
keyCount	yes	yes
/=	no	no
bucketCount	yes	yes
;	no	no
tableSize	no	yes
/=	no	no
bucketCount	yes	yes
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
joinConf	yes	no
.	no	no
isDynamicPartitionHashJoin	no	no
(	no	no
)	no	no
)	no	no
{	no	no
bucketCount	yes	yes
=	no	no
parentRS	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getNumReducers	no	yes
(	no	no
)	no	no
;	no	no
keyCount	yes	yes
/=	no	no
bucketCount	yes	yes
;	no	no
tableSize	no	yes
/=	no	no
bucketCount	yes	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
keyCount	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no

if	no	no
(	no	no
mapJoinWork	no	no
==	no	no
null	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
rootOp	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findSingleOperatorUpstreamJoinAccounted	no	yes
(	no	no
mapJoinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
joinConf	no	yes
.	no	no
getPosBigTable	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
ReduceSinkOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rootOp	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
edgeType	no	yes
=	no	no
EdgeType	no	yes
.	no	no
CUSTOM_EDGE	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
edgeType	no	yes
=	no	no
EdgeType	no	yes
.	no	no
CUSTOM_SIMPLE_EDGE	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
rootOp	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findSingleOperatorUpstreamJoinAccounted	no	yes
(	no	no
mapJoinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
joinConf	no	yes
.	no	no
getPosBigTable	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rootOp	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
edgeType	no	yes
=	no	no
EdgeType	no	yes
.	no	no
CUSTOM_EDGE	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
edgeType	no	yes
=	no	no
EdgeType	no	yes
.	no	no
CUSTOM_SIMPLE_EDGE	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
mapJoinOp	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
isDynamicPartitionHashJoin	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
parentRS	yes	no
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
isForwarding	no	no
(	no	no
)	no	no
)	no	no
{	no	no
edgeType	no	yes
=	no	no
EdgeType	no	yes
.	no	no
ONE_TO_ONE_EDGE	no	yes
;	no	no

else	no	no
{	no	no
r	no	yes
=	no	no
parentRS	no	yes
;	no	no
}	no	no
r	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
setOutputName	no	yes
(	no	no
myWork	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
connectedReduceSinks	no	yes
.	no	no
add	no	yes
(	no	no
r	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Map	no	yes
<	no	no
BaseWork	no	yes
,	no	no
TezEdgeProperty	no	yes
>	no	no
linkWorkMap	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
linkOpWithWorkMap	no	yes
.	no	no
containsKey	no	no
(	no	no
mapJoinOp	no	yes
)	no	no
)	no	no
{	no	no
linkWorkMap	no	yes
=	no	no
context	no	yes
.	no	no
linkOpWithWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
mapJoinOp	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
linkWorkMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
BaseWork	no	yes
,	no	no
TezEdgeProperty	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
linkWorkMap	no	yes
.	no	no
put	no	yes
(	no	no
parentWork	no	yes
,	no	no
edgeProp	no	yes
)	no	no
;	no	no
context	no	yes
.	no	no
linkOpWithWorkMap	no	yes
.	no	no
put	no	yes
(	no	no
mapJoinOp	no	yes
,	no	no
linkWorkMap	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
reduceSinks	no	yes
=	no	no
context	no	yes
.	no	no
linkWorkWithReduceSinkMap	no	yes
.	no	no
get	no	yes
(	no	no
parentWork	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
reduceSinks	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
reduceSinks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
reduceSinks	no	yes
.	no	no
add	no	yes
(	no	no
parentRS	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
AddPathReturnStatus	no	no
addPath	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
String	no	no
pathPattern	yes	no
,	no	no
long	no	no
sizeLeft	no	no
,	no	no
int	no	no
fileLimit	no	no
,	no	no
Collection	no	no
<	no	no
Path	no	no
>	no	no
retPathList	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

Arrays	no	yes
.	no	no
sort	no	yes
(	no	no
srcs	no	yes
)	no	no
;	no	no
boolean	no	no
hasFile	no	yes
=	no	no
false	no	no
,	no	no
allFile	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	no
src	yes	yes
:	no	no
srcs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
sizeLeft	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
allFile	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
src	yes	yes
.	no	no
isDir	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
src	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AddPathReturnStatus	no	yes
ret	no	yes
=	no	no
addPath	no	yes
(	no	no
fs	no	yes
,	no	no
src	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
sizeLeft	no	yes
,	no	no
fileLimit	no	yes
,	no	no
retPathList	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ret	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
sizeLeft	no	yes
=	no	no
ret	no	yes
.	no	no
sizeLeft	no	yes
;	no	no
hasFile	no	yes
|=	no	no
ret	no	yes
.	no	no
hasFile	no	yes
;	no	no
allFile	no	yes
&=	no	no
ret	no	yes
.	no	no
allFile	no	yes
;	no	no
}	no	no
else	no	no
{	no	no

List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
desc	no	yes
.	no	no
getKeys	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
groupByOperator	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
getSignature	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
colStats	no	yes
.	no	no
add	no	yes
(	no	no
groupByOperator	yes	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getColumnStatisticsFromColName	no	yes
(	no	no
ci	no	yes
.	no	no
getInternalName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Statistics	no	yes
parentStats	no	yes
=	no	no
groupByOperator	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
ndvProduct	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
computeNDVGroupingColumns	no	yes
(	no	no
colStats	no	yes
,	no	no
parentStats	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
long	no	no
numRows	no	yes
=	no	no
parentStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	no	yes
>	no	no
numRows	no	yes
)	no	no
{	no	no
ndvProduct	no	yes
=	no	no
numRows	no	yes
;	no	no
}	no	no
float	no	no
defaultMinReductionHashAggrFactor	no	yes
=	no	no
desc	no	yes
.	no	no
getMinReductionHashAggr	no	yes
(	no	no
)	no	no
;	no	no
float	no	no
minReductionHashAggrFactor	yes	yes
=	no	no
1f	no	no
-	no	no
(	no	no
(	no	no
float	no	no
)	no	no
ndvProduct	no	yes
/	no	no
numRows	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
minReductionHashAggrFactor	yes	yes
<	no	no
defaultMinReductionHashAggrFactor	no	yes
)	no	no
{	no	no
desc	no	yes
.	no	no
setMinReductionHashAggr	no	yes
(	no	no
minReductionHashAggrFactor	yes	yes
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
procContext	no	yes
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OptimizeTezProcContext	no	yes
context	no	yes
=	no	no
(	no	no
OptimizeTezProcContext	no	yes
)	no	no
procContext	no	yes
;	no	no
ReduceSinkOperator	no	yes
sink	yes	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
nd	no	yes
;	no	no
ReduceSinkDesc	no	yes
desc	no	yes
=	no	no
sink	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
bytesPerReducer	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
;	no	no
int	no	no
maxReducers	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAXREDUCERS	no	yes
)	no	no
;	no	no
int	no	no
constantReducers	no	yes
=	no	no
context	no	yes
.	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HADOOPNUMREDUCERS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
visitedReduceSinks	no	no
.	no	no
contains	no	no
(	no	no
sink	yes	yes
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
visitedReduceSinks	no	yes
.	no	no
add	no	yes
(	no	no
sink	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
getNumReducers	no	no
(	no	no
)	no	no
<=	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
constantReducers	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
constantReducers	no	yes
)	no	no
;	no	no
desc	no	yes
.	no	no
setNumReducers	no	yes
(	no	no
constantReducers	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
numberOfBytes	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
numberOfBytes	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
sibling	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
int	no	no
numReducers	yes	yes
=	no	no
Utilities	no	yes
.	no	no
estimateReducers	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
bytesPerReducer	no	yes
,	no	no
maxReducers	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

else	no	no
{	no	no
long	no	no
numberOfBytes	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	no	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
numberOfBytes	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
sibling	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
int	no	no
numReducers	no	yes
=	no	no
Utilities	no	yes
.	no	no
estimateReducers	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
bytesPerReducer	no	yes
,	no	no
maxReducers	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	no	yes
+	no	no
+	no	no
numReducers	no	yes
)	no	no
;	no	no
desc	yes	yes
.	no	no
setNumReducers	no	yes
(	no	no
numReducers	no	yes
)	no	no
;	no	no
final	no	no
Collection	no	yes
<	no	no
ExprNodeDescEqualityWrapper	no	yes
>	no	no
keyCols	no	yes
=	no	no
ExprNodeDescEqualityWrapper	no	yes
.	no	no
transform	no	yes
(	no	no
desc	yes	yes
.	no	no
getKeyCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Collection	no	yes
<	no	no
ExprNodeDescEqualityWrapper	no	yes
>	no	no
partCols	no	yes
=	no	no
ExprNodeDescEqualityWrapper	no	yes
.	no	no
transform	no	yes
(	no	no
desc	yes	yes
.	no	no
getPartitionCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
keyCols	no	yes
!=	no	no
null	no	no
&&	no	no
keyCols	no	yes
.	no	no
equals	no	no
(	no	no
partCols	no	yes
)	no	no
)	no	no
{	no	no
desc	yes	yes
.	no	no
setReducerTraits	no	yes
(	no	no
EnumSet	no	yes
.	no	no
of	no	yes
(	no	no
UNIFORM	no	yes
,	no	no
AUTOPARALLEL	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

final	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
TableScanOperator	no	yes
>	no	no
topOps	no	yes
=	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
topOps	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
2	no	no
)	no	no
{	no	no
return	no	no
pctx	no	yes
;	no	no
}	no	no
ArrayListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
TableScanOperator	no	yes
>	no	no
tableNameToOps	no	yes
=	no	no
splitTableScanOpsByTable	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
boolean	no	no
tablesReferencedOnlyOnce	no	yes
=	no	no
tableNameToOps	no	yes
.	no	no
asMap	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
noneMatch	no	yes
(	no	no
e	no	yes
->	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tablesReferencedOnlyOnce	no	yes
)	no	no
{	no	no
return	no	no
pctx	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>>	no	no
sortedTables	no	yes
=	no	no
rankTablesByAccumulatedSize	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sortedTables	no	yes
)	no	no
;	no	no
SharedWorkOptimizerCache	no	yes
optimizerCache	no	yes
=	no	no
new	no	no
SharedWorkOptimizerCache	no	yes
(	no	no
)	no	no
;	no	no
gatherDPPTableScanOps	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

ArrayListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
TableScanOperator	no	yes
>	no	no
tableNameToOps	no	yes
=	no	no
splitTableScanOpsByTable	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
boolean	no	no
tablesReferencedOnlyOnce	no	yes
=	no	no
tableNameToOps	no	yes
.	no	no
asMap	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
noneMatch	no	yes
(	no	no
e	no	yes
->	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tablesReferencedOnlyOnce	no	yes
)	no	no
{	no	no
return	no	no
pctx	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>>	no	no
sortedTables	no	yes
=	no	no
rankTablesByAccumulatedSize	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sortedTables	no	yes
)	no	no
;	no	no
SharedWorkOptimizerCache	no	yes
optimizerCache	no	yes
=	no	no
new	no	no
SharedWorkOptimizerCache	no	yes
(	no	no
)	no	no
;	no	no
gatherDPPTableScanOps	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_EXTENDED_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
sharedWorkExtendedOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
Entry	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>>	no	no
sortedTables	no	yes
=	no	no
rankTablesByAccumulatedSize	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sortedTables	no	yes
)	no	no
;	no	no
SharedWorkOptimizerCache	no	yes
optimizerCache	no	yes
=	no	no
new	no	no
SharedWorkOptimizerCache	no	yes
(	no	no
)	no	no
;	no	no
gatherDPPTableScanOps	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_EXTENDED_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
sharedWorkExtendedOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_SEMIJOIN_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
tableNameToOps	no	yes
=	no	no
splitTableScanOpsByTable	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
sortedTables	no	yes
=	no	no
rankTablesByAccumulatedSize	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
boolean	no	no
optimized	no	yes
=	no	no
new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
true	no	no
)	no	no
;	no	no

new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_EXTENDED_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
sharedWorkExtendedOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_SEMIJOIN_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
tableNameToOps	no	yes
=	no	no
splitTableScanOpsByTable	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
sortedTables	no	yes
=	no	no
rankTablesByAccumulatedSize	no	yes
(	no	no
pctx	no	yes
)	no	no
;	no	no
boolean	no	no
optimized	no	yes
=	no	no
new	no	no
SchemaAwareSharedWorkOptimizer	no	yes
(	no	no
)	no	no
.	no	no
sharedWorkOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
tableNameToOps	no	yes
,	no	no
sortedTables	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
optimized	no	yes
&&	no	no
pctx	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SHARED_WORK_EXTENDED_OPTIMIZATION	no	no
)	no	no
)	no	no
{	no	no
sharedWorkExtendedOptimization	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Operator	yes	yes
.	no	no
toString	no	yes
(	no	no
pctx	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

gatherReduceSinkOpsByInput	no	yes
(	no	no
parentToRsOps	no	yes
,	no	no
visited	no	yes
,	no	no
findWorkOperators	no	yes
(	no	no
optimizerCache	no	yes
,	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
removedOps	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
parentToRsOps	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Entry	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Long	no	yes
>>	no	no
sortedRSGroups	no	yes
=	no	no
rankOpsByAccumulatedSize	no	yes
(	no	no
parentToRsOps	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sortedRSGroups	no	yes
)	no	no
;	no	no
Multimap	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
ReduceSinkOperator	no	yes
>	no	no
existingRsOps	no	yes
=	no	no
ArrayListMultimap	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Long	no	yes
>	no	no
rsGroupInfo	no	yes
:	no	no
sortedRSGroups	no	yes
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
rsParent	no	yes
=	no	no
rsGroupInfo	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
discardableRsOp	no	yes
:	no	no
parentToRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	yes
.	no	no
contains	no	no
(	no	no
discardableRsOp	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
otherRsOps	no	yes
=	no	no
existingRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
retainableRsOp	yes	no
:	no	no
otherRsOps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	yes
.	no	no
contains	no	no
(	no	no
retainableRsOp	yes	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
Entry	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Long	no	yes
>>	no	no
sortedRSGroups	no	yes
=	no	no
rankOpsByAccumulatedSize	no	yes
(	no	no
parentToRsOps	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
sortedRSGroups	no	yes
)	no	no
;	no	no
Multimap	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
ReduceSinkOperator	no	yes
>	no	no
existingRsOps	no	yes
=	no	no
ArrayListMultimap	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Long	no	yes
>	no	no
rsGroupInfo	no	yes
:	no	no
sortedRSGroups	no	yes
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
rsParent	no	yes
=	no	no
rsGroupInfo	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
discardableRsOp	yes	yes
:	no	no
parentToRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	no
.	no	no
contains	no	no
(	no	no
discardableRsOp	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
otherRsOps	no	yes
=	no	no
existingRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
retainableRsOp	yes	yes
:	no	no
otherRsOps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	no
.	no	no
contains	no	no
(	no	no
retainableRsOp	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
boolean	no	no
mergeable	no	yes
=	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
&&	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
discardableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

for	no	no
(	no	no
Entry	no	no
<	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Long	no	no
>	no	no
rsGroupInfo	no	yes
:	no	no
sortedRSGroups	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
rsParent	no	yes
=	no	no
rsGroupInfo	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
discardableRsOp	yes	yes
:	no	no
parentToRsOps	no	no
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	no
.	no	no
contains	no	no
(	no	no
discardableRsOp	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
otherRsOps	no	yes
=	no	no
existingRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
retainableRsOp	yes	yes
:	no	no
otherRsOps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	no
.	no	no
contains	no	no
(	no	no
retainableRsOp	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
boolean	no	no
mergeable	no	yes
=	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
&&	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
discardableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
mergeable	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Collection	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
otherRsOps	no	yes
=	no	no
existingRsOps	no	yes
.	no	no
get	no	yes
(	no	no
rsParent	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
retainableRsOp	yes	yes
:	no	no
otherRsOps	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
removedOps	no	no
.	no	no
contains	no	no
(	no	no
retainableRsOp	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
boolean	no	no
mergeable	no	yes
=	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
&&	no	no
compareOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
retainableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
discardableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
mergeable	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
discardableRsOp	yes	yes
,	no	no
retainableRsOp	yes	yes
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
retainableRsOpChild	no	yes
=	no	no
retainableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
discardableRsOpChild	no	yes
=	no	no
discardableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
SharedResult	no	yes
sr	no	yes
=	no	no
extractSharedOptimizationInfo	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
,	no	no
retainableRsOpChild	no	yes
,	no	no
discardableRsOpChild	no	yes
)	no	no
;	no	no

continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
discardableRsOp	yes	yes
,	no	no
retainableRsOp	yes	yes
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
retainableRsOpChild	no	yes
=	no	no
retainableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
discardableRsOpChild	no	yes
=	no	no
discardableRsOp	yes	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
SharedResult	no	yes
sr	no	yes
=	no	no
extractSharedOptimizationInfo	no	yes
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
,	no	no
retainableRsOpChild	no	yes
,	no	no
discardableRsOpChild	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sr	no	yes
.	no	no
retainableOps	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
!	no	no
validPreConditions	no	no
(	no	no
pctx	no	yes
,	no	no
optimizerCache	no	yes
,	no	no
sr	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
retainableRsOp	yes	yes
,	no	no
discardableRsOp	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
deduplicateReduceTraits	no	yes
(	no	no
retainableRsOp	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
discardableRsOp	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
lastRetainableOp	no	yes
=	no	no
sr	no	yes
.	no	no
retainableOps	no	yes
.	no	no
get	no	yes
(	no	no
sr	no	yes
.	no	no
retainableOps	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
lastDiscardableOp	no	yes
=	no	no
sr	no	yes
.	no	no
discardableOps	no	yes
.	no	no
get	no	yes
(	no	no
sr	no	yes
.	no	no
discardableOps	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lastDiscardableOp	no	yes
.	no	no
getNumChild	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
allChildren	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
lastDiscardableOp	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
op	no	yes
:	no	no
allChildren	no	yes
)	no	no
{	no	no
lastDiscardableOp	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
remove	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
op	yes	yes
:	no	no
allChildren	no	no
)	no	no
{	no	no
lastDiscardableOp	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
remove	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
op	yes	yes
.	no	no
replaceParent	no	yes
(	no	no
lastDiscardableOp	no	yes
,	no	no
lastRetainableOp	no	yes
)	no	no
;	no	no
lastRetainableOp	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	no	yes
,	no	no
retainableRsOp	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
op	yes	yes
:	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
)	no	no
{	no	no
OperatorUtils	no	yes
.	no	no
removeOperator	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
removeOp	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
removedOps	no	yes
.	no	no
add	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
op	yes	yes
instanceof	no	no
ReduceSinkOperator	no	yes
)	no	no
{	no	no
SemiJoinBranchInfo	no	yes
sjbi	no	yes
=	no	no
pctx	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjbi	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
op	yes	yes
,	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
tableScanToDPPSource	no	yes
.	no	no
remove	no	yes
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
,	no	no
op	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
op	yes	yes
instanceof	no	no
AppMasterEventOperator	no	no
)	no	no
{	no	no

lastRetainableOp	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
discardableRsOp	yes	yes
,	no	no
retainableRsOp	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
op	no	yes
:	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
)	no	no
{	no	no
OperatorUtils	no	yes
.	no	no
removeOperator	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
removeOp	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
removedOps	no	yes
.	no	no
add	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
ReduceSinkOperator	no	yes
)	no	no
{	no	no
SemiJoinBranchInfo	no	yes
sjbi	no	yes
=	no	no
pctx	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjbi	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
op	no	yes
,	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
tableScanToDPPSource	no	yes
.	no	no
remove	no	yes
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
,	no	no
op	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
AppMasterEventOperator	no	yes
)	no	no
{	no	no
DynamicPruningEventDesc	no	yes
dped	no	yes
=	no	no
(	no	no
DynamicPruningEventDesc	no	yes
)	no	no
op	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
sr	no	no
.	no	no
discardableOps	no	no
.	no	no
contains	no	no
(	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
.	no	no
contains	no	no
(	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
(	no	no
AppMasterEventOperator	no	yes
)	no	no
op	no	yes
,	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

optimizerCache	no	yes
.	no	no
removeOp	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
removedOps	no	yes
.	no	no
add	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
op	yes	yes
instanceof	no	no
ReduceSinkOperator	no	yes
)	no	no
{	no	no
SemiJoinBranchInfo	no	yes
sjbi	no	yes
=	no	no
pctx	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
op	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjbi	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
.	no	no
contains	no	no
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
op	yes	yes
,	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
tableScanToDPPSource	no	yes
.	no	no
remove	no	yes
(	no	no
sjbi	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
,	no	no
op	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
op	yes	yes
instanceof	no	no
AppMasterEventOperator	no	yes
)	no	no
{	no	no
DynamicPruningEventDesc	no	yes
dped	no	yes
=	no	no
(	no	no
DynamicPruningEventDesc	no	yes
)	no	no
op	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
sr	no	no
.	no	no
discardableOps	no	no
.	no	no
contains	no	no
(	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
sr	no	no
.	no	no
discardableInputOps	no	no
.	no	no
contains	no	no
(	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
pctx	no	yes
,	no	no
(	no	no
AppMasterEventOperator	no	yes
)	no	no
op	yes	yes
,	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
tableScanToDPPSource	no	yes
.	no	no
remove	no	yes
(	no	no
dped	no	yes
.	no	no
getTableScan	no	yes
(	no	no
)	no	no
,	no	no
op	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
op	yes	yes
)	no	no
;	no	no
}	no	no
OperatorUtils	no	yes
.	no	no
removeOperator	no	yes
(	no	no
discardableRsOp	no	yes
)	no	no
;	no	no
optimizerCache	no	yes
.	no	no
removeOp	no	yes
(	no	no
discardableRsOp	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
compareAndGatherOps	no	no
(	no	no
ParseContext	no	no
pctx	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
op1	yes	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
op2	yes	no
,	no	no
List	no	no
<	no	no
Operator	no	no
<	no	no
?	no	no
>>	no	no
result	no	no
,	no	no
boolean	no	no
gather	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
compareOperator	no	no
(	no	no
pctx	no	no
,	no	no
op1	yes	no
,	no	no
op2	yes	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
validPreConditions	no	no
(	no	no
ParseContext	no	no
pctx	no	no
,	no	no
SharedWorkOptimizerCache	no	no
optimizerCache	no	no
,	no	no
SharedResult	no	no
sr	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
sr	yes	no
.	no	no
dataSize	no	no
>	no	no
sr	yes	no
.	no	no
maxDataSize	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
procContext	no	yes
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OptimizeSparkProcContext	no	yes
context	no	yes
=	no	no
(	no	no
OptimizeSparkProcContext	no	yes
)	no	no
procContext	no	yes
;	no	no
boolean	no	no
remove	no	yes
=	no	no
false	no	no
;	no	no
SparkPartitionPruningSinkOperator	no	yes
op	no	yes
=	no	no
(	no	no
SparkPartitionPruningSinkOperator	no	yes
)	no	no
nd	no	yes
;	no	no
SparkPartitionPruningSinkDesc	no	yes
desc	yes	yes
=	no	no
op	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isSparkDPPOnlyMapjoin	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
op	no	yes
.	no	no
isWithMapjoin	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Collection	no	no
<	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	no
>>	no	no
verifyAndGetPartColumnStats	no	no
(	no	no
Hive	no	no
hive	no	no
,	no	no
Table	no	no
tbl	no	no
,	no	no
String	no	yes
colName	yes	no
,	no	no
Set	no	no
<	no	no
Partition	no	no
>	no	no
parts	no	yes
)	no	no
throws	no	no
TException	no	no
,	no	no
LockException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	no
part	yes	no
:	no	no
parts	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
StatsUtils	no	no
.	no	no
areColumnStatsUptoDateForQueryAnswering	no	no
(	no	no
part	yes	no
.	no	no
getTable	no	no
(	no	no
)	no	no
,	no	no
part	yes	no
.	no	no
getParameters	no	no
(	no	no
)	no	no
,	no	no
colName	yes	no
)	no	no
)	no	no
{	no	no

}	no	no
keys	no	yes
.	no	no
set	no	yes
(	no	no
pkPos	no	yes
)	no	no
;	no	no
}	no	no
ImmutableBitSet	no	yes
key	no	yes
=	no	no
keys	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
builder	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
nonNullbuilder	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
uniqueKeyInfo	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
uniqueKeyInfo	no	no
.	no	no
getUniqueConstraints	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
List	no	no
<	no	no
UniqueConstraintCol	no	no
>	no	no
ukCols	no	no
:	no	no
uniqueKeyInfo	no	no
.	no	no
getUniqueConstraints	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ImmutableBitSet	no	yes
.	no	no
Builder	no	yes
keys	no	yes
=	no	no
ImmutableBitSet	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isNonNullable	no	yes
=	no	no
true	no	no
;	no	no
for	no	no
(	no	no
UniqueConstraintCol	no	no
ukCol	yes	no
:	no	no
ukCols	no	no
)	no	no
{	no	no
int	no	no
ukPos	no	yes
;	no	no
for	no	no
(	no	no
ukPos	no	yes
=	no	no
0	no	no
;	no	no
ukPos	no	yes
<	no	no
rowType	no	yes
.	no	no
getFieldNames	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
ukPos	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
colName	no	yes
=	no	no
rowType	no	yes
.	no	no
getFieldNames	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
ukPos	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ukCol	yes	no
.	no	no
colName	no	yes
.	no	no
equals	no	no
(	no	no
colName	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
rowType	no	yes
.	no	no
getFieldList	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
ukPos	no	yes
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
.	no	no
isNullable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
isNonNullable	no	yes
=	no	no
false	no	no
;	no	no

if	no	no
(	no	no
foreignKeyInfo	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
foreignKeyInfo	no	no
.	no	no
getForeignKeys	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
List	no	yes
<	no	no
ForeignKeyCol	no	no
>	no	no
fkCols	no	yes
:	no	no
foreignKeyInfo	no	no
.	no	no
getForeignKeys	no	no
(	no	no
)	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
parentDatabaseName	yes	yes
=	no	no
fkCols	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
parentDatabaseName	yes	yes
;	no	no
String	no	yes
parentTableName	yes	yes
=	no	no
fkCols	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
parentTableName	yes	yes
;	no	no
String	no	yes
qualifiedName	no	yes
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
parentTableQualifiedName	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
parentDatabaseName	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
parentDatabaseName	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
parentTableQualifiedName	no	yes
.	no	no
add	no	yes
(	no	no
parentDatabaseName	yes	yes
)	no	no
;	no	no
parentTableQualifiedName	no	yes
.	no	no
add	no	yes
(	no	no
parentTableName	yes	yes
)	no	no
;	no	no
qualifiedName	no	yes
=	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
parentDatabaseName	yes	yes
,	no	no
parentTableName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
parentTableQualifiedName	no	yes
.	no	no
add	no	yes
(	no	no
parentTableName	yes	yes
)	no	no
;	no	no
qualifiedName	no	yes
=	no	no
parentTableName	yes	yes
;	no	no
}	no	no
Table	no	yes
parentTab	no	yes
=	no	no
getTable	no	yes
(	no	no
qualifiedName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
parentTab	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

Table	no	yes
parentTab	no	yes
=	no	no
getTable	no	yes
(	no	no
qualifiedName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
parentTab	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
parentDatabaseName	no	yes
+	no	no
+	no	no
+	no	no
parentTableName	no	yes
)	no	no
;	no	no
return	no	no
ImmutableList	no	yes
.	no	no
of	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ImmutableList	no	yes
.	no	no
Builder	no	yes
<	no	no
IntPair	no	yes
>	no	no
keys	no	yes
=	no	no
ImmutableList	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ForeignKeyCol	no	no
fkCol	yes	no
:	no	no
fkCols	no	no
)	no	no
{	no	no
int	no	no
fkPos	no	yes
;	no	no
for	no	no
(	no	no
fkPos	no	yes
=	no	no
0	no	no
;	no	no
fkPos	no	yes
<	no	no
rowType	no	yes
.	no	no
getFieldNames	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
fkPos	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
fkColName	no	yes
=	no	no
rowType	no	yes
.	no	no
getFieldNames	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
fkPos	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fkColName	no	yes
.	no	no
equals	no	no
(	no	no
fkCol	yes	no
.	no	no
childColName	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
int	no	no
pkPos	no	yes
;	no	no
for	no	no
(	no	no
pkPos	no	yes
=	no	no
0	no	no
;	no	no
pkPos	no	yes
<	no	no
parentTab	no	yes
.	no	no
getAllCols	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
pkPos	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
pkColName	no	yes
=	no	no
parentTab	no	yes
.	no	no
getAllCols	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pkPos	no	yes
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pkColName	no	yes
.	no	no
equals	no	no
(	no	no
fkCol	yes	no
.	no	no
parentColName	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
partColNamesThatRqrStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
partColIndxsThatRqrStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
colNamesFailedStats	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
ColumnInfo	no	yes
tmp	no	yes
;	no	no
for	no	no
(	no	no
Integer	no	yes
pi	no	yes
:	no	no
projIndxLst	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hiveColStatsMap	no	no
.	no	no
get	no	no
(	no	no
pi	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
(	no	no
tmp	no	yes
=	no	no
hiveNonPartitionColsMap	no	no
.	no	no
get	no	no
(	no	no
pi	no	yes
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
nonPartColNamesThatRqrStats	no	yes
.	no	no
add	no	yes
(	no	no
tmp	no	yes
.	no	no
getInternalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
nonPartColIndxsThatRqrStats	no	yes
.	no	no
add	no	yes
(	no	no
pi	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
(	no	no
tmp	no	yes
=	no	no
hivePartitionColsMap	no	no
.	no	no
get	no	no
(	no	no
pi	no	yes
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
partColNamesThatRqrStats	no	yes
.	no	no
add	no	yes
(	no	no
tmp	no	yes
.	no	no
getInternalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partColIndxsThatRqrStats	no	yes
.	no	no
add	no	yes
(	no	no
pi	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
noColsMissingStats	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
logMsg	yes	yes
=	no	no
+	no	no
pi	no	yes
+	no	no
+	no	no
hiveTblMetadata	no	yes
.	no	no
getCompleteName	no	yes
(	no	no
)	no	no
;	no	no

hiveColStats	no	yes
.	no	no
add	no	yes
(	no	no
columnStatsMap	no	yes
.	no	no
get	no	yes
(	no	no
colName	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
logMsg	yes	yes
=	no	no
+	no	no
hiveTblMetadata	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
logMsg	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
logMsg	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
partitionList	no	no
.	no	no
getNotDeniedPartns	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rowCount	no	yes
=	no	no
0	no	no
;	no	no
hiveColStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
nonPartColNamesThatRqrStats	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
hiveColStats	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ColStatistics	no	yes
(	no	no
nonPartColNamesThatRqrStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
hiveNonPartitionColsMap	no	yes
.	no	no
get	no	yes
(	no	no
nonPartColIndxsThatRqrStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
.	no	no
getTypeName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
colNamesFailedStats	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
colStatsCached	no	yes
.	no	no
updateState	no	yes
(	no	no
State	no	yes
.	no	no
COMPLETE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

hiveColStats	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ColStatistics	no	yes
(	no	no
nonPartColNamesThatRqrStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
hiveNonPartitionColsMap	no	yes
.	no	no
get	no	yes
(	no	no
nonPartColIndxsThatRqrStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
.	no	no
getTypeName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
colNamesFailedStats	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
colStatsCached	no	yes
.	no	no
updateState	no	yes
(	no	no
State	no	yes
.	no	no
COMPLETE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Statistics	no	yes
stats	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
collectStatistics	no	yes
(	no	no
hiveConf	no	yes
,	no	no
partitionList	no	yes
,	no	no
hiveTblMetadata	yes	yes
,	no	no
hiveNonPartitionCols	no	yes
,	no	no
nonPartColNamesThatRqrStats	no	yes
,	no	no
colStatsCached	no	yes
,	no	no
nonPartColNamesThatRqrStats	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
rowCount	no	yes
=	no	no
stats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
hiveColStats	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
c	no	yes
:	no	no
nonPartColNamesThatRqrStats	no	yes
)	no	no
{	no	no
ColStatistics	no	yes
cs	no	yes
=	no	no
stats	no	yes
.	no	no
getColumnStatisticsFromColName	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hiveColStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
.	no	no
isEstimated	no	no
(	no	no
)	no	no
)	no	no
{	no	no
colNamesFailedStats	no	yes
.	no	no
add	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
colNamesFailedStats	no	yes
.	no	no
add	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no

hiveColStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
.	no	no
isEstimated	no	no
(	no	no
)	no	no
)	no	no
{	no	no
colNamesFailedStats	no	yes
.	no	no
add	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
colNamesFailedStats	no	yes
.	no	no
add	no	yes
(	no	no
c	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
colStatsCached	no	yes
.	no	no
updateState	no	yes
(	no	no
stats	no	yes
.	no	no
getColumnStatsState	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	no	yes
)	no	no
{	no	no
String	no	yes
logMsg	yes	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
logMsg	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
logMsg	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
hiveColStats	no	yes
!=	no	no
null	no	no
&&	no	no
hiveColStats	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
nonPartColNamesThatRqrStats	no	no
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
hiveColStats	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
hiveColStatsMap	no	yes
.	no	no
put	no	yes
(	no	no
nonPartColIndxsThatRqrStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
hiveColStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
colStatsCached	no	yes
.	no	no
put	no	yes
(	no	no
hiveColStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getColumnName	no	yes
(	no	no
)	no	no
,	no	no
hiveColStats	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
RelNode	no	no
trim	no	no
(	no	no
RelBuilder	no	no
relBuilder	no	no
,	no	no
RelNode	no	no
root	yes	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
root	yes	no
.	no	no
getInputs	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
1	no	no
)	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
JoinedBackFields	no	no
>	no	no
getExpressionLineageOf	no	no
(	no	no
List	no	yes
<	no	no
RexInputRef	no	no
>	no	no
projectExpressions	no	no
,	no	no
RelNode	no	no
projectInput	yes	yes
)	no	no
{	no	no
RelMetadataQuery	no	yes
relMetadataQuery	no	yes
=	no	no
RelMetadataQuery	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
RexTableInputRef	no	yes
.	no	no
RelTableRef	no	yes
,	no	no
JoinedBackFieldsBuilder	no	yes
>	no	no
fieldMappingBuilders	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
RexTableInputRef	no	yes
.	no	no
RelTableRef	no	yes
>	no	no
tablesOrdered	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RexInputRef	no	no
expr	yes	yes
:	no	no
projectExpressions	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
RexNode	no	yes
>	no	no
expressionLineage	no	yes
=	no	no
relMetadataQuery	no	yes
.	no	no
getExpressionLineage	no	yes
(	no	no
projectInput	yes	yes
,	no	no
expr	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
expressionLineage	no	yes
==	no	no
null	no	no
||	no	no
expressionLineage	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
1	no	no
)	no	no
{	no	no

private	no	no
RelNode	no	no
choosePlan	no	no
(	no	no
RelNode	no	no
node	no	yes
,	no	no
RelNode	no	no
optimized	no	yes
)	no	no
{	no	no
JaninoRelMetadataProvider	no	yes
original	no	yes
=	no	no
RelMetadataQuery	no	yes
.	no	no
THREAD_PROVIDERS	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
RelMetadataQuery	no	yes
.	no	no
THREAD_PROVIDERS	no	yes
.	no	no
set	no	yes
(	no	no
HiveTezModelRelMetadataProvider	no	yes
.	no	no
DEFAULT	no	yes
)	no	no
;	no	no
node	no	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
.	no	no
invalidateMetadataQuery	no	yes
(	no	no
)	no	no
;	no	no
RelMetadataQuery	no	yes
metadataQuery	no	yes
=	no	no
RelMetadataQuery	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
;	no	no
RelOptCost	no	yes
optimizedCost	yes	yes
=	no	no
metadataQuery	no	yes
.	no	no
getCumulativeCost	no	yes
(	no	no
optimized	no	yes
)	no	no
;	no	no
RelOptCost	no	yes
originalCost	yes	yes
=	no	no
metadataQuery	no	yes
.	no	no
getCumulativeCost	no	yes
(	no	no
node	no	yes
)	no	no
;	no	no
originalCost	yes	yes
=	no	no
originalCost	yes	yes
.	no	no
multiplyBy	no	yes
(	no	no
factor	no	yes
)	no	no
;	no	no

private	no	no
RelNode	no	no
choosePlan	no	no
(	no	no
RelNode	no	no
node	no	yes
,	no	no
RelNode	no	no
optimized	yes	yes
)	no	no
{	no	no
JaninoRelMetadataProvider	no	yes
original	no	yes
=	no	no
RelMetadataQuery	no	yes
.	no	no
THREAD_PROVIDERS	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
RelMetadataQuery	no	yes
.	no	no
THREAD_PROVIDERS	no	yes
.	no	no
set	no	yes
(	no	no
HiveTezModelRelMetadataProvider	no	yes
.	no	no
DEFAULT	no	yes
)	no	no
;	no	no
node	no	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
.	no	no
invalidateMetadataQuery	no	yes
(	no	no
)	no	no
;	no	no
RelMetadataQuery	no	yes
metadataQuery	no	yes
=	no	no
RelMetadataQuery	no	yes
.	no	no
instance	no	yes
(	no	no
)	no	no
;	no	no
RelOptCost	no	yes
optimizedCost	no	yes
=	no	no
metadataQuery	no	yes
.	no	no
getCumulativeCost	no	yes
(	no	no
optimized	yes	yes
)	no	no
;	no	no
RelOptCost	no	yes
originalCost	no	yes
=	no	no
metadataQuery	no	yes
.	no	no
getCumulativeCost	no	yes
(	no	no
node	no	yes
)	no	no
;	no	no
originalCost	no	yes
=	no	no
originalCost	no	yes
.	no	no
multiplyBy	no	yes
(	no	no
factor	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
originalCost	no	yes
,	no	no
optimizedCost	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
optimizedCost	no	yes
.	no	no
isLt	no	no
(	no	no
originalCost	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

bldr	no	yes
.	no	no
add	no	yes
(	no	no
createFirstGB	no	yes
(	no	no
hiveExcept	no	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
false	no	no
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
HiveRelNode	no	yes
union	no	yes
=	no	no
new	no	no
HiveUnion	no	yes
(	no	no
cluster	no	yes
,	no	no
TraitsUtil	no	yes
.	no	no
getDefaultTraitSet	no	yes
(	no	no
cluster	no	yes
)	no	no
,	no	no
bldr	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
gbChildProjLst	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
groupSetPositions	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
unionColumnSize	no	yes
=	no	no
union	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
cInd	no	yes
=	no	no
0	no	no
;	no	no
cInd	no	yes
<	no	no
unionColumnSize	no	yes
;	no	no
cInd	no	yes
++	no	no
)	no	no
{	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
cInd	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cInd	no	yes
<	no	no
unionColumnSize	no	yes
-	no	no
2	no	no
)	no	no
{	no	no
groupSetPositions	no	yes
.	no	no
add	no	yes
(	no	no
cInd	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
multiply	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
2	no	no
)	no	no
,	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
1	no	no
)	no	no
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no

HiveRelNode	no	yes
union	no	yes
=	no	no
new	no	no
HiveUnion	no	yes
(	no	no
cluster	no	yes
,	no	no
TraitsUtil	no	yes
.	no	no
getDefaultTraitSet	no	yes
(	no	no
cluster	no	yes
)	no	no
,	no	no
bldr	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
gbChildProjLst	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
groupSetPositions	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
unionColumnSize	no	yes
=	no	no
union	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
cInd	no	yes
=	no	no
0	no	no
;	no	no
cInd	no	yes
<	no	no
unionColumnSize	no	yes
;	no	no
cInd	no	yes
++	no	no
)	no	no
{	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
cInd	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cInd	no	yes
<	no	no
unionColumnSize	no	yes
-	no	no
2	no	no
)	no	no
{	no	no
groupSetPositions	no	yes
.	no	no
add	no	yes
(	no	no
cInd	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
multiply	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
2	no	no
)	no	no
,	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
union	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
1	no	no
)	no	no
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
RelNode	no	yes
gbInputRel	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no

throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
RelNode	no	yes
gbInputRel	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
gbInputRel	no	yes
=	no	no
HiveProject	no	yes
.	no	no
create	no	yes
(	no	no
union	no	yes
,	no	no
gbChildProjLst	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
AggregateCall	no	yes
>	no	no
aggregateCalls	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
RelDataType	no	yes
aggFnRetType	no	yes
=	no	no
TypeConverter	no	yes
.	no	no
convert	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
cluster	no	yes
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AggregateCall	no	yes
aggregateCall	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
createSingleArgAggCall	no	yes
(	no	no
,	no	no
cluster	no	yes
,	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
1	no	no
,	no	no
aggFnRetType	no	yes
)	no	no
;	no	no
aggregateCalls	no	yes
.	no	no
add	no	yes
(	no	no
aggregateCall	no	yes
)	no	no
;	no	no
aggregateCall	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
createSingleArgAggCall	no	yes
(	no	no
,	no	no
cluster	no	yes
,	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
unionColumnSize	no	yes
,	no	no
aggFnRetType	no	yes
)	no	no
;	no	no
aggregateCalls	no	yes
.	no	no
add	no	yes
(	no	no
aggregateCall	no	yes
)	no	no
;	no	no
final	no	no
ImmutableBitSet	no	yes
groupSet	no	yes
=	no	no
ImmutableBitSet	no	yes
.	no	no
of	no	yes
(	no	no
groupSetPositions	no	yes
)	no	no
;	no	no
HiveRelNode	no	yes
aggregateRel	no	yes
=	no	no
new	no	no
HiveAggregate	no	yes
(	no	no
cluster	no	yes
,	no	no
cluster	no	yes
.	no	no
traitSetOf	no	yes
(	no	no
HiveRelNode	no	yes
.	no	no
CONVENTION	no	yes
)	no	no
,	no	no
gbInputRel	no	yes
,	no	no
groupSet	no	yes
,	no	no
null	no	no
,	no	no
aggregateCalls	no	yes
)	no	no
;	no	no

throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
AggregateCall	no	yes
>	no	no
aggregateCalls	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
RelDataType	no	yes
aggFnRetType	no	yes
=	no	no
TypeConverter	no	yes
.	no	no
convert	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
cluster	no	yes
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AggregateCall	no	yes
aggregateCall	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
createSingleArgAggCall	no	yes
(	no	no
,	no	no
cluster	no	yes
,	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
unionColumnSize	no	yes
-	no	no
1	no	no
,	no	no
aggFnRetType	no	yes
)	no	no
;	no	no
aggregateCalls	no	yes
.	no	no
add	no	yes
(	no	no
aggregateCall	no	yes
)	no	no
;	no	no
aggregateCall	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
createSingleArgAggCall	no	yes
(	no	no
,	no	no
cluster	no	yes
,	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
unionColumnSize	no	yes
,	no	no
aggFnRetType	no	yes
)	no	no
;	no	no
aggregateCalls	no	yes
.	no	no
add	no	yes
(	no	no
aggregateCall	no	yes
)	no	no
;	no	no
final	no	no
ImmutableBitSet	no	yes
groupSet	no	yes
=	no	no
ImmutableBitSet	no	yes
.	no	no
of	no	yes
(	no	no
groupSetPositions	no	yes
)	no	no
;	no	no
HiveRelNode	no	yes
aggregateRel	no	yes
=	no	no
new	no	no
HiveAggregate	no	yes
(	no	no
cluster	no	yes
,	no	no
cluster	no	yes
.	no	no
traitSetOf	no	yes
(	no	no
HiveRelNode	no	yes
.	no	no
CONVENTION	no	yes
)	no	no
,	no	no
gbInputRel	no	yes
,	no	no
groupSet	no	yes
,	no	no
null	no	no
,	no	no
aggregateCalls	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
hiveExcept	no	no
.	no	no
all	no	no
)	no	no
{	no	no
RelNode	no	yes
filterRel	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
filterRel	no	yes
=	no	no
new	no	no
HiveFilter	no	yes
(	no	no
cluster	no	yes
,	no	no
cluster	no	yes
.	no	no
traitSetOf	no	yes
(	no	no
HiveRelNode	no	yes
.	no	no
CONVENTION	no	yes
)	no	no
,	no	no
aggregateRel	no	yes
,	no	no
makeFilterExprForExceptDistinct	no	yes
(	no	no
aggregateRel	no	yes
,	no	no
unionColumnSize	no	yes
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

RelNode	no	yes
filterRel	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
filterRel	no	yes
=	no	no
new	no	no
HiveFilter	no	yes
(	no	no
cluster	no	yes
,	no	no
cluster	no	yes
.	no	no
traitSetOf	no	yes
(	no	no
HiveRelNode	no	yes
.	no	no
CONVENTION	no	yes
)	no	no
,	no	no
aggregateRel	no	yes
,	no	no
makeFilterExprForExceptDistinct	no	yes
(	no	no
aggregateRel	no	yes
,	no	no
unionColumnSize	no	yes
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
projectOutColumnPositions	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
projectOutColumnPositions	no	yes
.	no	no
add	no	yes
(	no	no
filterRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
2	no	no
)	no	no
;	no	no
projectOutColumnPositions	no	yes
.	no	no
add	no	yes
(	no	no
filterRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
try	no	no
{	no	no
call	no	yes
.	no	no
transformTo	no	yes
(	no	no
HiveCalciteUtil	no	yes
.	no	no
createProjectWithoutColumn	no	yes
(	no	no
filterRel	no	yes
,	no	no
projectOutColumnPositions	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

call	no	yes
.	no	no
transformTo	no	yes
(	no	no
HiveCalciteUtil	no	yes
.	no	no
createProjectWithoutColumn	no	yes
(	no	no
filterRel	no	yes
,	no	no
projectOutColumnPositions	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
originalInputRefs	no	no
=	no	no
Lists	no	no
.	no	no
transform	no	no
(	no	no
aggregateRel	no	yes
.	no	no
getRowType	no	no
(	no	no
)	no	no
.	no	no
getFieldList	no	no
(	no	no
)	no	no
,	no	no
new	no	no
Function	no	no
<	no	no
RelDataTypeField	no	no
,	no	no
RexNode	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
RexNode	no	yes
apply	no	no
(	no	no
RelDataTypeField	no	no
input	no	yes
)	no	no
{	no	no
return	no	no
new	no	no
RexInputRef	no	yes
(	no	no
input	no	yes
.	no	no
getIndex	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
copyInputRefs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
copyInputRefs	no	yes
.	no	no
add	no	yes
(	no	no
makeExprForExceptAll	no	yes
(	no	no
aggregateRel	no	yes
,	no	no
unionColumnSize	no	yes
,	no	no
cluster	no	yes
,	no	no
rexBuilder	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no

final	no	no
RexBuilder	no	yes
rexBuilder	no	yes
=	no	no
cluster	no	yes
.	no	no
getRexBuilder	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numOfBranch	no	yes
=	no	no
hiveIntersect	no	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
Builder	no	yes
<	no	no
RelNode	no	yes
>	no	no
bldr	no	yes
=	no	no
new	no	no
ImmutableList	no	yes
.	no	no
Builder	no	yes
<	no	no
RelNode	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
index	no	yes
=	no	no
0	no	no
;	no	no
index	no	yes
<	no	no
numOfBranch	no	yes
;	no	no
index	no	yes
++	no	no
)	no	no
{	no	no
RelNode	no	yes
input	no	yes
=	no	no
hiveIntersect	no	yes
.	no	no
getInputs	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
gbChildProjLst	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
groupSetPositions	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
cInd	no	yes
=	no	no
0	no	no
;	no	no
cInd	no	yes
<	no	no
input	no	yes
.	no	no
getRowType	no	no
(	no	no
)	no	no
.	no	no
getFieldList	no	no
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
cInd	no	yes
++	no	no
)	no	no
{	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
input	no	yes
,	no	no
cInd	no	yes
)	no	no
)	no	no
;	no	no
groupSetPositions	no	yes
.	no	no
add	no	yes
(	no	no
cInd	no	yes
)	no	no
;	no	no
}	no	no
gbChildProjLst	no	yes
.	no	no
add	no	yes
(	no	no
rexBuilder	no	yes
.	no	no
makeBigintLiteral	no	yes
(	no	no
new	no	no
BigDecimal	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
)	no	no
;	no	no
RelNode	no	yes
gbInputRel	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
gbInputRel	no	yes
=	no	no
HiveProject	no	yes
.	no	no
create	no	yes
(	no	no
input	no	yes
,	no	no
gbChildProjLst	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	no
)	no	no
{	no	no

int	no	no
countInd	no	yes
=	no	no
cInd	no	yes
;	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
childRexNodeLst	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
RexNode	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
RexInputRef	no	yes
ref	no	yes
=	no	no
rexBuilder	no	yes
.	no	no
makeInputRef	no	yes
(	no	no
aggregateRel	no	yes
,	no	no
countInd	no	yes
)	no	no
;	no	no
RexLiteral	no	yes
literal	no	yes
=	no	no
rexBuilder	no	yes
.	no	no
makeBigintLiteral	no	yes
(	no	no
new	no	no
BigDecimal	no	yes
(	no	no
numOfBranch	no	yes
)	no	no
)	no	no
;	no	no
childRexNodeLst	no	yes
.	no	no
add	no	yes
(	no	no
ref	no	yes
)	no	no
;	no	no
childRexNodeLst	no	yes
.	no	no
add	no	yes
(	no	no
literal	no	yes
)	no	no
;	no	no
ImmutableList	no	yes
.	no	no
Builder	no	yes
<	no	no
RelDataType	no	yes
>	no	no
calciteArgTypesBldr	no	yes
=	no	no
new	no	no
ImmutableList	no	yes
.	no	no
Builder	no	yes
<	no	no
RelDataType	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
calciteArgTypesBldr	no	yes
.	no	no
add	no	yes
(	no	no
TypeConverter	no	yes
.	no	no
convert	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
cluster	no	yes
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
calciteArgTypesBldr	no	yes
.	no	no
add	no	yes
(	no	no
TypeConverter	no	yes
.	no	no
convert	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
cluster	no	yes
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
RexNode	no	yes
factoredFilterExpr	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
factoredFilterExpr	no	yes
=	no	no
rexBuilder	no	yes
.	no	no
makeCall	no	yes
(	no	no
SqlFunctionConverter	no	yes
.	no	no
getCalciteFn	no	yes
(	no	no
,	no	no
calciteArgTypesBldr	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
TypeConverter	no	yes
.	no	no
convert	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
longTypeInfo	no	yes
,	no	no
cluster	no	yes
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
,	no	no
childRexNodeLst	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no

Set	no	yes
<	no	no
Integer	no	yes
>	no	no
projectOutColumnPositions	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
projectOutColumnPositions	no	yes
.	no	no
add	no	yes
(	no	no
filterRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
try	no	no
{	no	no
call	no	yes
.	no	no
transformTo	no	yes
(	no	no
HiveCalciteUtil	no	yes
.	no	no
createProjectWithoutColumn	no	yes
(	no	no
filterRel	no	yes
,	no	no
projectOutColumnPositions	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CalciteSemanticException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
originalInputRefs	no	yes
=	no	no
Lists	no	no
.	no	no
transform	no	no
(	no	no
filterRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldList	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
Function	no	no
<	no	no
RelDataTypeField	no	no
,	no	no
RexNode	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
RexNode	no	yes
apply	no	no
(	no	no
RelDataTypeField	no	no
input	no	yes
)	no	no
{	no	no
return	no	no
new	no	no
RexInputRef	no	yes
(	no	no
input	no	yes
.	no	no
getIndex	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
copyInputRefs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
copyInputRefs	no	yes
.	no	no
add	no	yes
(	no	no
originalInputRefs	no	yes
.	no	no
get	no	yes
(	no	no
originalInputRefs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
originalInputRefs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
2	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no

final	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
iRefSet	yes	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
key	no	yes
instanceof	no	no
Project	no	yes
)	no	no
{	no	no
final	no	no
Project	no	yes
project	no	yes
=	no	no
(	no	no
Project	no	yes
)	no	no
key	no	yes
;	no	no
for	no	no
(	no	no
RexNode	no	no
rx	no	yes
:	no	no
project	no	yes
.	no	no
getChildExps	no	no
(	no	no
)	no	no
)	no	no
{	no	no
iRefSet	yes	yes
.	no	no
addAll	no	yes
(	no	no
HiveCalciteUtil	no	yes
.	no	no
getInputRefs	no	yes
(	no	no
rx	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
final	no	no
int	no	no
fieldCount	no	yes
=	no	no
tableAccessRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldCount	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fieldsUsed	no	no
.	no	no
equals	no	no
(	no	no
ImmutableBitSet	no	yes
.	no	no
range	no	yes
(	no	no
fieldCount	no	yes
)	no	no
)	no	no
&&	no	no
extraFields	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
iRefSet	yes	yes
.	no	no
addAll	no	yes
(	no	no
ImmutableBitSet	no	yes
.	no	no
range	no	yes
(	no	no
fieldCount	no	yes
)	no	no
.	no	no
asList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
tableAccessRel	no	yes
instanceof	no	no
HiveTableScan	no	yes
)	no	no
{	no	no
iRefSet	yes	yes
.	no	no
removeAll	no	yes
(	no	no
(	no	no
(	no	no
HiveTableScan	no	yes
)	no	no
tableAccessRel	no	yes
)	no	no
.	no	no
getVirtualCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
iRefSet	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
RelOptTable	no	yes
table	no	yes
=	no	no
tableAccessRel	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
instanceof	no	no
RelOptHiveTable	no	yes
)	no	no
{	no	no
(	no	no
(	no	no
RelOptHiveTable	no	yes
)	no	no
table	no	yes
)	no	no
.	no	no
getColStat	no	yes
(	no	no
iRefSet	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
forceMVContentsUpToDate	no	no
||	no	no
timeWindow	no	no
==	no	no
0L	no	no
||	no	no
creationMetadata	no	yes
.	no	no
getMaterializationTime	no	no
(	no	no
)	no	no
<	no	no
System	no	no
.	no	no
currentTimeMillis	no	no
(	no	no
)	no	no
-	no	no
timeWindow	no	no
)	no	no
{	no	no
if	no	no
(	no	no
currentTxnWriteIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
creationMetadata	no	yes
.	no	no
getValidTxnList	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
||	no	no
creationMetadata	no	yes
.	no	no
getValidTxnList	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
boolean	no	no
ignore	no	yes
=	no	no
false	no	no
;	no	no
ValidTxnWriteIdList	no	yes
mvTxnWriteIds	no	yes
=	no	no
new	no	no
ValidTxnWriteIdList	no	yes
(	no	no
creationMetadata	no	yes
.	no	no
getValidTxnList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
qName	yes	yes
:	no	no
tablesUsed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
creationMetadata	no	yes
.	no	no
getTablesUsed	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
qName	yes	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
tableCurrentWriteIds	no	yes
=	no	no
currentTxnWriteIds	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
qName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableCurrentWriteIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

return	no	no
null	no	no
;	no	no
}	no	no
boolean	no	no
ignore	no	yes
=	no	no
false	no	no
;	no	no
ValidTxnWriteIdList	no	yes
mvTxnWriteIds	no	yes
=	no	no
new	no	no
ValidTxnWriteIdList	no	yes
(	no	no
creationMetadata	no	yes
.	no	no
getValidTxnList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
qName	no	yes
:	no	no
tablesUsed	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
creationMetadata	no	yes
.	no	no
getTablesUsed	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
qName	no	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
tableCurrentWriteIds	no	yes
=	no	no
currentTxnWriteIds	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
qName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableCurrentWriteIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
qName	no	yes
)	no	no
;	no	no
ignore	no	yes
=	no	no
true	no	no
;	no	no
break	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
tableWriteIds	no	yes
=	no	no
mvTxnWriteIds	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
qName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tableWriteIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
materializedViewTable	yes	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
qName	no	yes
+	no	no
+	no	no
mvTxnWriteIds	no	yes
)	no	no
;	no	no
ignore	no	yes
=	no	no
true	no	no
;	no	no

double	no	no
joinSelectivity	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
1.0	no	no
,	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
pkInfo	no	yes
.	no	no
selectivity	no	yes
*	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
ndvScalingFactor	no	yes
)	no	no
;	no	no
double	no	no
residualSelectivity	no	yes
=	no	no
RelMdUtil	no	yes
.	no	no
guessSelectivity	no	yes
(	no	no
constraintBasedResult	no	yes
.	no	no
right	no	yes
)	no	no
;	no	no
double	no	no
rowCount	no	yes
;	no	no
if	no	no
(	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
isPKSideSimple	no	no
)	no	no
{	no	no
rowCount	no	yes
=	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
pkInfo	no	yes
.	no	no
rowCount	no	yes
+	no	no
HIVE_PK_FK_NO_FILTERING_COST_INCREASING_FACTOR	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
rowCount	no	yes
=	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
fkInfo	no	yes
.	no	no
rowCount	no	yes
*	no	no
joinSelectivity	no	yes
*	no	no
residualSelectivity	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
join	yes	yes
)	no	no
,	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
,	no	no
rowCount	no	yes
,	no	no
joinSelectivity	no	yes
,	no	no
residualSelectivity	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
rowCount	no	yes
;	no	no
}	no	no
final	no	no
PKFKRelationInfo	no	yes
pkfk	yes	yes
=	no	no
analyzeJoinForPKFK	no	yes
(	no	no
join	yes	yes
,	no	no
mq	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pkfk	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
double	no	no
selectivity	no	yes
=	no	no
pkfk	yes	yes
.	no	no
pkInfo	no	yes
.	no	no
selectivity	no	yes
*	no	no
pkfk	yes	yes
.	no	no
ndvScalingFactor	no	yes
;	no	no
selectivity	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
1.0	no	no
,	no	no
selectivity	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

rowCount	yes	yes
=	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
pkInfo	no	yes
.	no	no
rowCount	yes	yes
+	no	no
HIVE_PK_FK_NO_FILTERING_COST_INCREASING_FACTOR	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
rowCount	yes	yes
=	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
.	no	no
fkInfo	no	yes
.	no	no
rowCount	yes	yes
*	no	no
joinSelectivity	no	yes
*	no	no
residualSelectivity	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
join	yes	yes
)	no	no
,	no	no
constraintBasedResult	no	yes
.	no	no
left	no	yes
,	no	no
rowCount	yes	yes
,	no	no
joinSelectivity	no	yes
,	no	no
residualSelectivity	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
rowCount	yes	yes
;	no	no
}	no	no
final	no	no
PKFKRelationInfo	no	yes
pkfk	no	yes
=	no	no
analyzeJoinForPKFK	no	yes
(	no	no
join	yes	yes
,	no	no
mq	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pkfk	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
double	no	no
selectivity	no	yes
=	no	no
pkfk	no	yes
.	no	no
pkInfo	no	yes
.	no	no
selectivity	no	yes
*	no	no
pkfk	no	yes
.	no	no
ndvScalingFactor	no	yes
;	no	no
selectivity	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
1.0	no	no
,	no	no
selectivity	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
join	yes	yes
)	no	no
,	no	no
pkfk	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
pkfk	no	yes
.	no	no
fkInfo	no	yes
.	no	no
rowCount	yes	yes
*	no	no
selectivity	no	yes
;	no	no
}	no	no
final	no	no
Double	no	yes
rowCount	yes	yes
=	no	no
join	yes	yes
.	no	no
estimateRowCount	no	yes
(	no	no
mq	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
RelNode	no	yes
convertOpTree	no	no
(	no	no
RelNode	no	yes
rel	no	yes
,	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
resultSchema	no	no
,	no	no
boolean	no	no
alignColumns	no	no
)	no	no
throws	no	no
CalciteSemanticException	no	no
{	no	no
RelNode	no	yes
newTopNode	yes	yes
=	no	no
rel	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
RelNode	no	yes
convertOpTree	no	yes
(	no	no
RelNode	no	yes
rel	no	yes
,	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
resultSchema	no	no
,	no	no
boolean	no	no
alignColumns	no	no
)	no	no
throws	no	no
CalciteSemanticException	no	no
{	no	no
RelNode	no	yes
newTopNode	yes	yes
=	no	no
rel	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Project	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Sort	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Exchange	no	no
)	no	no
)	no	no
{	no	no
newTopNode	yes	yes
=	no	no
introduceDerivedTable	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
convertOpTree	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
(	no	no
RelNode	no	yes
)	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
alignColumns	no	no
)	no	no
{	no	no
HiveRelColumnsAlignment	no	yes
propagator	no	yes
=	no	no
new	no	no
HiveRelColumnsAlignment	no	yes
(	no	no
HiveRelFactories	no	yes
.	no	no
HIVE_BUILDER	no	yes
.	no	no
create	no	yes
(	no	no
newTopNode	yes	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
newTopNode	yes	yes
=	no	no
propagator	no	yes
.	no	no
align	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Project	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Sort	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
newTopNode	yes	yes
instanceof	no	no
Exchange	no	no
)	no	no
)	no	no
{	no	no
newTopNode	yes	yes
=	no	no
introduceDerivedTable	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
convertOpTree	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
(	no	no
RelNode	no	yes
)	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
alignColumns	no	no
)	no	no
{	no	no
HiveRelColumnsAlignment	no	yes
propagator	no	yes
=	no	no
new	no	no
HiveRelColumnsAlignment	no	yes
(	no	no
HiveRelFactories	no	yes
.	no	no
HIVE_BUILDER	no	yes
.	no	no
create	no	yes
(	no	no
newTopNode	yes	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
newTopNode	yes	yes
=	no	no
propagator	no	yes
.	no	no
align	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Pair	no	yes
<	no	no
RelNode	no	yes
,	no	no
RelNode	no	yes
>	no	no
topSelparentPair	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
getTopLevelSelect	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
PlanModifierUtil	no	yes
.	no	no
fixTopOBSchema	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
topSelparentPair	no	yes
,	no	no
resultSchema	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
convertOpTree	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
(	no	no
RelNode	no	yes
)	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
alignColumns	no	no
)	no	no
{	no	no
HiveRelColumnsAlignment	no	yes
propagator	no	yes
=	no	no
new	no	no
HiveRelColumnsAlignment	no	yes
(	no	no
HiveRelFactories	no	yes
.	no	no
HIVE_BUILDER	no	yes
.	no	no
create	no	yes
(	no	no
newTopNode	yes	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
newTopNode	yes	yes
=	no	no
propagator	no	yes
.	no	no
align	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Pair	no	yes
<	no	no
RelNode	no	yes
,	no	no
RelNode	no	yes
>	no	no
topSelparentPair	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
getTopLevelSelect	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
PlanModifierUtil	no	yes
.	no	no
fixTopOBSchema	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
topSelparentPair	no	yes
,	no	no
resultSchema	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
RelOptUtil	no	yes
.	no	no
toString	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
topSelparentPair	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
getTopLevelSelect	no	yes
(	no	no
newTopNode	yes	yes
)	no	no
;	no	no
newTopNode	yes	yes
=	no	no
renameTopLevelSelectInResultSchema	no	yes
(	no	no
newTopNode	yes	yes
,	no	no
topSelparentPair	no	yes
,	no	no
resultSchema	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
RelNode	no	yes
renameTopLevelSelectInResultSchema	no	no
(	no	no
final	no	no
RelNode	no	yes
rootRel	no	no
,	no	no
Pair	no	no
<	no	no
RelNode	no	yes
,	no	no
RelNode	no	yes
>	no	no
topSelparentPair	no	yes
,	no	no
List	no	yes
<	no	no
FieldSchema	no	no
>	no	no
resultSchema	yes	no
)	no	no
throws	no	no
CalciteSemanticException	no	no
{	no	no
RelNode	no	yes
parentOforiginalProjRel	no	yes
=	no	no
topSelparentPair	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
HiveProject	no	yes
originalProjRel	yes	yes
=	no	no
(	no	no
HiveProject	no	yes
)	no	no
topSelparentPair	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
RexNode	no	yes
>	no	no
rootChildExps	no	yes
=	no	no
originalProjRel	yes	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
resultSchema	yes	no
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
rootChildExps	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
(	no	no
topSelparentPair	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
instanceof	no	no
Sort	no	no
)	no	no
||	no	no
!	no	no
HiveCalciteUtil	no	no
.	no	no
orderRelNode	no	no
(	no	no
topSelparentPair	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
HiveSortLimit	no	yes
obRel	no	yes
=	no	no
(	no	no
HiveSortLimit	no	yes
)	no	no
topSelparentPair	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Project	no	yes
obChild	no	yes
=	no	no
(	no	no
Project	no	yes
)	no	no
topSelparentPair	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
obChild	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldCount	no	no
(	no	no
)	no	no
<=	no	no
resultSchema	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
RelDataType	no	yes
rt	no	yes
=	no	no
obChild	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
{	no	no
,	no	no
}	no	no
)	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
collationInputRefs	no	yes
=	no	no
new	no	no
HashSet	no	yes
(	no	no
RelCollations	no	yes
.	no	no
ordinals	no	yes
(	no	no
obRel	no	yes
.	no	no
getCollation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
<	no	no
Integer	no	yes
,	no	no
RexNode	no	yes
>	no	no
inputRefToCallMapBldr	no	yes
=	no	no
ImmutableMap	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
resultSchema	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
<	no	no
rt	no	yes
.	no	no
getFieldCount	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
collationInputRefs	no	yes
.	no	no
contains	no	no
(	no	no
i	no	yes
)	no	no
)	no	no
{	no	no
RexNode	no	yes
obyExpr	yes	yes
=	no	no
obChild	no	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
obyExpr	yes	yes
instanceof	no	no
RexCall	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
obyExpr	yes	yes
)	no	no
;	no	no
obyExpr	yes	yes
=	no	no
adjustOBSchema	no	yes
(	no	no
(	no	no
RexCall	no	yes
)	no	no
obyExpr	yes	yes
,	no	no
obChild	no	yes
,	no	no
resultSchema	no	yes
)	no	no
;	no	no

Project	no	yes
obChild	yes	yes
=	no	no
(	no	no
Project	no	yes
)	no	no
topSelparentPair	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
obChild	yes	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldCount	no	no
(	no	no
)	no	no
<=	no	no
resultSchema	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
RelDataType	no	yes
rt	no	yes
=	no	no
obChild	yes	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
{	no	no
,	no	no
}	no	no
)	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
collationInputRefs	no	yes
=	no	no
new	no	no
HashSet	no	yes
(	no	no
RelCollations	no	yes
.	no	no
ordinals	no	yes
(	no	no
obRel	no	yes
.	no	no
getCollation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ImmutableMap	no	yes
.	no	no
Builder	no	yes
<	no	no
Integer	no	yes
,	no	no
RexNode	no	yes
>	no	no
inputRefToCallMapBldr	no	yes
=	no	no
ImmutableMap	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
resultSchema	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
<	no	no
rt	no	yes
.	no	no
getFieldCount	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
collationInputRefs	no	yes
.	no	no
contains	no	no
(	no	no
i	no	yes
)	no	no
)	no	no
{	no	no
RexNode	no	yes
obyExpr	no	yes
=	no	no
obChild	yes	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
obyExpr	no	yes
instanceof	no	no
RexCall	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
obyExpr	no	yes
)	no	no
;	no	no
obyExpr	no	yes
=	no	no
adjustOBSchema	no	yes
(	no	no
(	no	no
RexCall	no	yes
)	no	no
obyExpr	no	yes
,	no	no
obChild	yes	yes
,	no	no
resultSchema	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
obyExpr	no	yes
)	no	no
;	no	no
}	no	no
inputRefToCallMapBldr	no	yes
.	no	no
put	no	yes
(	no	no
i	no	yes
,	no	no
obyExpr	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
ImmutableMap	no	yes
<	no	no
Integer	no	yes
,	no	no
RexNode	no	yes
>	no	no
inputRefToCallMap	yes	yes
=	no	no
inputRefToCallMapBldr	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
OpAttr	no	yes
visit	no	no
(	no	no
HiveFilter	no	no
filterRel	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OpAttr	no	yes
inputOpAf	no	yes
=	no	no
hiveOpConverter	no	yes
.	no	no
dispatch	no	yes
(	no	no
filterRel	yes	yes
.	no	no
getInput	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
tableAlias	no	yes
==	no	no
null	no	no
||	no	no
tableAlias	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
tableAlias	no	yes
=	no	no
tableName	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
!	no	no
tableName	no	yes
.	no	no
equals	no	no
(	no	no
tableAlias	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
tableAlias	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
ReduceSinkOperator	no	yes
rsOp	no	yes
=	no	no
genReduceSink	no	yes
(	no	no
input	no	yes
,	no	no
tableAlias	no	yes
,	no	no
keys	no	yes
,	no	no
tag	no	yes
,	no	no
partitionCols	no	yes
,	no	no
order	no	yes
,	no	no
nullOrder	no	yes
,	no	no
numReducers	no	yes
,	no	no
acidOperation	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
descriptors	no	yes
=	no	no
buildBacktrackFromReduceSink	no	yes
(	no	no
keepColNames	no	yes
,	no	no
rsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getOutputKeyColumnNames	no	yes
(	no	no
)	no	no
,	no	no
rsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getOutputValueColumnNames	no	yes
(	no	no
)	no	no
,	no	no
rsOp	no	yes
.	no	no
getValueIndex	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
)	no	no
;	no	no
SelectDesc	no	yes
selectDesc	no	yes
=	no	no
new	no	no
SelectDesc	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
descriptors	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
descriptors	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ColumnInfo	no	yes
>	no	no
cinfoLst	no	yes
=	no	no
createColInfosSubset	no	yes
(	no	no
input	no	yes
,	no	no
keepColNames	no	yes
)	no	no
;	no	no
SelectOperator	no	yes
selectOp	yes	yes
=	no	no
(	no	no
SelectOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
selectDesc	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
cinfoLst	no	yes
)	no	no
,	no	no
rsOp	no	yes
)	no	no
;	no	no
selectOp	yes	yes
.	no	no
setColumnExprMap	no	yes
(	no	no
descriptors	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

String	no	yes
error	no	yes
=	no	no
StrictChecks	no	yes
.	no	no
checkCartesian	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
error	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
error	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
ReduceSinkDesc	no	yes
rsDesc	no	yes
;	no	no
if	no	no
(	no	no
order	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rsDesc	no	yes
=	no	no
PlanUtils	no	yes
.	no	no
getReduceSinkDesc	no	yes
(	no	no
reduceKeys	no	yes
,	no	no
reduceValues	no	yes
,	no	no
outputColumnNames	no	yes
,	no	no
false	no	no
,	no	no
tag	no	yes
,	no	no
reduceKeys	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numReducers	no	yes
,	no	no
acidOperation	no	yes
,	no	no
NullOrdering	no	yes
.	no	no
defaultNullOrder	no	yes
(	no	no
hiveConf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
rsDesc	no	yes
=	no	no
PlanUtils	no	yes
.	no	no
getReduceSinkDesc	no	yes
(	no	no
reduceKeys	no	yes
,	no	no
reduceValues	no	yes
,	no	no
outputColumnNames	no	yes
,	no	no
false	no	no
,	no	no
tag	no	yes
,	no	no
partitionCols	no	yes
,	no	no
order	no	yes
,	no	no
nullOrder	no	yes
,	no	no
NullOrdering	no	yes
.	no	no
defaultNullOrder	no	yes
(	no	no
hiveConf	no	yes
)	no	no
,	no	no
numReducers	no	yes
,	no	no
acidOperation	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
ReduceSinkOperator	no	yes
rsOp	yes	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
rsDesc	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
outputColumns	no	yes
)	no	no
,	no	no
input	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
keyColNames	no	yes
=	no	no
rsDesc	no	yes
.	no	no
getOutputKeyColumnNames	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
keyColNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
colExprMap	no	yes
.	no	no
put	no	yes
(	no	no
Utilities	no	yes
.	no	no
ReduceField	no	yes
.	no	no
KEY	no	yes
+	no	no
+	no	no
keyColNames	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
reduceKeys	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
valColNames	no	yes
=	no	no
rsDesc	no	yes
.	no	no
getOutputValueColumnNames	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
valColNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
colExprMap	no	yes
.	no	no
put	no	yes
(	no	no
Utilities	no	yes
.	no	no
ReduceField	no	yes
.	no	no
VALUE	no	yes
+	no	no
+	no	no
valColNames	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
reduceValues	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
OpAttr	no	yes
visit	no	no
(	no	no
HiveProject	no	no
projectRel	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OpAttr	no	yes
inputOpAf	no	yes
=	no	no
hiveOpConverter	no	yes
.	no	no
dispatch	no	yes
(	no	no
projectRel	yes	yes
.	no	no
getInput	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
colExprMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
pos	no	yes
<	no	no
projectRel	no	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
pos	no	yes
++	no	no
)	no	no
{	no	no
ExprNodeConverter	no	yes
converter	no	yes
=	no	no
new	no	no
ExprNodeConverter	no	yes
(	no	no
inputOpAf	no	yes
.	no	no
tabAlias	no	yes
,	no	no
projectRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
.	no	no
getFieldNames	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
,	no	no
projectRel	no	yes
.	no	no
getInput	no	yes
(	no	no
)	no	no
.	no	no
getRowType	no	yes
(	no	no
)	no	no
,	no	no
projectRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
,	no	no
inputOpAf	no	yes
.	no	no
vcolsInCalcite	no	yes
,	no	no
projectRel	no	yes
.	no	no
getCluster	no	yes
(	no	no
)	no	no
.	no	no
getTypeFactory	no	yes
(	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
exprCol	no	yes
=	no	no
projectRel	no	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
.	no	no
accept	no	yes
(	no	no
converter	no	yes
)	no	no
;	no	no
colExprMap	no	yes
.	no	no
put	no	yes
(	no	no
exprNames	no	yes
.	no	no
get	no	yes
(	no	no
pos	no	yes
)	no	no
,	no	no
exprCol	no	yes
)	no	no
;	no	no
exprCols	no	yes
.	no	no
add	no	yes
(	no	no
exprCol	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
converter	no	yes
.	no	no
getWindowFunctionSpec	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
WindowFunctionSpec	no	no
wfs	no	yes
:	no	no
converter	no	yes
.	no	no
getWindowFunctionSpec	no	no
(	no	no
)	no	no
)	no	no
{	no	no
windowingSpec	no	yes
.	no	no
addWindowFunction	no	yes
(	no	no
wfs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
windowingSpec	no	yes
.	no	no
getWindowExpressions	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
windowingSpec	no	yes
.	no	no
getWindowExpressions	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
inputOpAf	no	yes
=	no	no
genPTF	no	yes
(	no	no
inputOpAf	no	yes
,	no	no
windowingSpec	no	yes
)	no	no
;	no	no
}	no	no
SelectDesc	no	yes
sd	no	yes
=	no	no
new	no	no
SelectDesc	no	yes
(	no	no
exprCols	no	yes
,	no	no
exprNames	no	yes
)	no	no
;	no	no
Pair	no	yes
<	no	no
ArrayList	no	yes
<	no	no
ColumnInfo	no	yes
>	no	no
,	no	no
Set	no	yes
<	no	no
Integer	no	yes
>>	no	no
colInfoVColPair	no	yes
=	no	no
createColInfos	no	yes
(	no	no
projectRel	no	yes
.	no	no
getChildExps	no	yes
(	no	no
)	no	no
,	no	no
exprCols	no	yes
,	no	no
exprNames	no	yes
,	no	no
inputOpAf	no	yes
)	no	no
;	no	no
SelectOperator	no	yes
selOp	yes	yes
=	no	no
(	no	no
SelectOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
sd	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
colInfoVColPair	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
inputOpAf	no	yes
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
selOp	yes	yes
.	no	no
setColumnExprMap	no	yes
(	no	no
colExprMap	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
OpAttr	no	yes
visit	no	no
(	no	no
HiveSortLimit	no	no
sortRel	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OpAttr	no	yes
inputOpAf	no	yes
=	no	no
hiveOpConverter	no	yes
.	no	no
dispatch	no	yes
(	no	no
sortRel	yes	yes
.	no	no
getInput	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
OpAttr	no	yes
visit	no	no
(	no	no
HiveSortLimit	no	no
sortRel	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OpAttr	no	yes
inputOpAf	no	yes
=	no	no
hiveOpConverter	no	yes
.	no	no
dispatch	no	yes
(	no	no
sortRel	yes	yes
.	no	no
getInput	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sortRel	yes	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
sortRel	yes	yes
.	no	no
getRelTypeName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
sortRel	yes	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sortRel	yes	yes
.	no	no
getCollation	no	no
(	no	no
)	no	no
==	no	no
RelCollations	no	no
.	no	no
EMPTY	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
OpAttr	no	no
visit	no	no
(	no	no
HiveTableFunctionScan	no	no
scanRel	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
genUDTFPlan	no	no
(	no	no
RexCall	no	no
call	no	no
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
colAliases	yes	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
input	no	no
,	no	no
RowResolver	no	no
rowResolver	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

@	no	no
Override	no	no
OpAttr	no	no
visit	no	no
(	no	no
HiveTableScan	no	no
scanRel	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

colInfo	no	yes
=	no	no
posToPartColInfo	no	yes
.	no	no
get	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
vcolsInCalcite	no	yes
.	no	no
add	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
colInfo	no	yes
=	no	no
posToNonPartColInfo	no	yes
.	no	no
get	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
}	no	no
colInfos	no	yes
.	no	no
add	no	yes
(	no	no
colInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
neededColIndxsFrmReloptHT	no	no
.	no	no
contains	no	no
(	no	no
index	no	yes
)	no	no
)	no	no
{	no	no
neededColumnIDs	no	yes
.	no	no
add	no	yes
(	no	no
index	no	yes
)	no	no
;	no	no
neededColumnNames	no	yes
.	no	no
add	no	yes
(	no	no
colName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
TableScanDesc	no	yes
tsd	no	yes
=	no	no
new	no	no
TableScanDesc	no	yes
(	no	no
tableAlias	no	yes
,	no	no
virtualCols	no	yes
,	no	no
ht	no	yes
.	no	no
getHiveTableMD	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
tsd	no	yes
.	no	no
setPartColumns	no	yes
(	no	no
partColNames	no	yes
)	no	no
;	no	no
tsd	no	yes
.	no	no
setNeededColumnIDs	no	yes
(	no	no
neededColumnIDs	no	yes
)	no	no
;	no	no
tsd	no	yes
.	no	no
setNeededColumns	no	yes
(	no	no
neededColumnNames	no	yes
)	no	no
;	no	no
TableScanOperator	no	yes
ts	yes	yes
=	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
get	no	yes
(	no	no
hiveOpConverter	no	yes
.	no	no
getSemanticAnalyzer	no	yes
(	no	no
)	no	no
.	no	no
getOpContext	no	yes
(	no	no
)	no	no
,	no	no
tsd	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
colInfos	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveOpConverter	no	yes
.	no	no
getTopOps	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
tableAlias	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
tableAlias	no	yes
=	no	no
tableAlias	no	yes
+	no	no
hiveOpConverter	no	yes
.	no	no
getUniqueCounter	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
unionRel	no	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
unionRel	no	yes
.	no	no
getRelTypeName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
unionRel	no	yes
.	no	no
getRowType	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
UnionDesc	no	yes
unionDesc	no	yes
=	no	no
new	no	no
UnionDesc	no	yes
(	no	no
)	no	no
;	no	no
unionDesc	no	yes
.	no	no
setNumInputs	no	yes
(	no	no
inputs	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
String	no	yes
tableAlias	no	yes
=	no	no
hiveOpConverter	no	yes
.	no	no
getHiveDerivedTableAlias	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
ColumnInfo	no	yes
>	no	no
cinfoLst	no	yes
=	no	no
createColInfos	no	yes
(	no	no
inputs	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
tableAlias	no	yes
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
]	no	no
children	no	yes
=	no	no
new	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
[	no	no
inputs	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
children	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
i	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
children	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
op	no	yes
=	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
children	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
genInputSelectForUnion	no	yes
(	no	no
op	no	yes
,	no	no
cinfoLst	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
unionOp	yes	yes
=	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
hiveOpConverter	no	yes
.	no	no
getSemanticAnalyzer	no	yes
(	no	no
)	no	no
.	no	no
getOpContext	no	yes
(	no	no
)	no	no
,	no	no
unionDesc	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
cinfoLst	no	yes
)	no	no
,	no	no
children	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
inputs	no	yes
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
hiveOpConverter	no	yes
.	no	no
dispatch	no	yes
(	no	no
joinRel	yes	yes
.	no	no
getInput	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
children	no	yes
.	no	no
add	no	yes
(	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
baseSrc	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
tabAlias	no	yes
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
tag	no	yes
=	no	no
0	no	no
;	no	no
tag	no	yes
<	no	no
children	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
tag	no	yes
++	no	no
)	no	no
{	no	no
ReduceSinkOperator	no	yes
reduceSinkOp	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
children	no	yes
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
;	no	no
reduceSinkOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
setTag	no	yes
(	no	no
tag	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
newVcolsInCalcite	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
Integer	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
newVcolsInCalcite	no	yes
.	no	no
addAll	no	yes
(	no	no
inputs	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
vcolsInCalcite	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
joinRel	yes	yes
instanceof	no	no
HiveMultiJoin	no	no
||	no	no
!	no	no
(	no	no
(	no	no
joinRel	yes	yes
instanceof	no	no
Join	no	no
)	no	no
&&	no	no
(	no	no
(	no	no
(	no	no
(	no	no
Join	no	no
)	no	no
joinRel	yes	yes
)	no	no
.	no	no
isSemiJoin	no	no
(	no	no
)	no	no
)	no	no
||	no	no
(	no	no
(	no	no
(	no	no
Join	no	no
)	no	no
joinRel	yes	yes
)	no	no
.	no	no
getJoinType	no	no
(	no	no
)	no	no
==	no	no
JoinRelType	no	no
.	no	no
ANTI	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
int	no	no
shift	no	yes
=	no	no
inputs	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
getSignature	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<	no	no
inputs	no	yes
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
newVcolsInCalcite	no	yes
.	no	no
addAll	no	yes
(	no	no
HiveCalciteUtil	no	yes
.	no	no
shiftVColsSet	no	yes
(	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
vcolsInCalcite	no	yes
,	no	no
shift	no	yes
)	no	no
)	no	no
;	no	no
shift	no	yes
+=	no	no
inputs	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
inputs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
getSignature	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
table	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
pCtx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
resultCs	no	yes
=	no	no
fs	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
table	no	yes
.	no	no
getCompleteName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
joinOp	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
joinOp	yes	yes
.	no	no
getIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
resultCs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
isAbleToGuess	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
long	no	no
size	no	yes
=	no	no
resultCs	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
aliasTotalKnownInputSize	no	yes
+=	no	no
size	no	yes
;	no	no
Long	no	yes
es	no	yes
=	no	no
aliasToSize	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
es	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
es	no	yes
=	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
es	no	yes
+=	no	no
size	no	yes
;	no	no
aliasToSize	no	yes
.	no	no
put	no	yes
(	no	no
alias	no	yes
,	no	no
es	no	yes
)	no	no
;	no	no

es	no	yes
+=	no	no
size	no	yes
;	no	no
aliasToSize	no	yes
.	no	no
put	no	yes
(	no	no
alias	no	yes
,	no	no
es	no	yes
)	no	no
;	no	no
}	no	no
posToAliases	no	yes
.	no	no
put	no	yes
(	no	no
pos	no	yes
,	no	no
aliases	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isAbleToGuess	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
joinOp	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
joinOp	yes	yes
.	no	no
getIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
JoinDesc	no	yes
joinDesc	no	yes
=	no	no
joinOp	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Byte	no	yes
[	no	no
]	no	no
order	no	yes
=	no	no
joinDesc	no	yes
.	no	no
getTagOrder	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numAliases	no	yes
=	no	no
order	no	yes
.	no	no
length	no	yes
;	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
bigTableCandidates	no	yes
=	no	no
MapJoinProcessor	no	yes
.	no	no
getBigTableCandidates	no	yes
(	no	no
joinDesc	no	yes
.	no	no
getConds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bigTableCandidates	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
long	no	no
ThresholdOfSmallTblSizeSum	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
pCtx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVESMALLTABLESFILESIZE	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
numAliases	no	yes
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
bigTableCandidates	no	yes
.	no	no
contains	no	no
(	no	no
i	no	no
)	no	no
)	no	no
{	no	no

private	no	no
SemanticNodeProcessor	no	no
getDefaultProc	no	no
(	no	no
)	no	no
{	no	no
return	no	no
new	no	no
SemanticNodeProcessor	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
ctx	no	no
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
op	yes	yes
=	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
)	no	no
nd	no	yes
;	no	no

private	no	no
static	no	no
void	no	no
setRuntimeStatsDir	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
op	yes	yes
,	no	no
ParseContext	no	no
pctx	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
try	no	no
{	no	no
OperatorDesc	no	yes
conf	no	yes
=	no	no
op	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
annotateRuntimeStats	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
op	yes	yes
,	no	no
ParseContext	no	no
pctx	no	yes
)	no	no
{	no	no
Long	no	yes
runTimeNumRows	no	yes
=	no	no
pctx	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
.	no	no
getExplainConfig	no	yes
(	no	no
)	no	no
.	no	no
getOpIdToRuntimeNumRows	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
op	yes	yes
.	no	no
getOperatorId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
op	yes	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
op	yes	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getStatistics	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
runTimeNumRows	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

origWrk	no	yes
=	no	no
wrk	no	yes
;	no	no
wrk	no	yes
=	no	no
(	no	no
(	no	no
MergeJoinWork	no	yes
)	no	no
wrk	no	yes
)	no	no
.	no	no
getMainWork	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
wrk	no	yes
instanceof	no	no
ReduceWork	no	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
ReduceWork	no	yes
rWork	no	yes
=	no	no
(	no	no
ReduceWork	no	yes
)	no	no
wrk	no	yes
;	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
reducer	no	yes
=	no	no
(	no	no
(	no	no
ReduceWork	no	yes
)	no	no
wrk	no	yes
)	no	no
.	no	no
getReducer	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
reducer	no	yes
instanceof	no	no
JoinOperator	no	no
||	no	no
reducer	no	yes
instanceof	no	no
CommonMergeJoinOperator	no	no
)	no	no
{	no	no
boolean	no	no
noOuterJoin	no	yes
=	no	no
(	no	no
(	no	no
JoinDesc	no	yes
)	no	no
reducer	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
isNoOuterJoin	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
ExtractReduceSinkInfo	no	yes
.	no	no
Info	no	yes
>	no	no
rsInfo	no	yes
=	no	no
new	no	no
TreeMap	no	yes
<	no	no
Integer	no	yes
,	no	no
ExtractReduceSinkInfo	no	yes
.	no	no
Info	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Integer	no	yes
,	no	no
String	no	no
>	no	no
e	no	yes
:	no	no
rWork	no	yes
.	no	no
getTagToInput	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
rsInfo	no	yes
.	no	no
putAll	no	yes
(	no	no
getReducerInfo	no	yes
(	no	no
tezWork	no	yes
,	no	no
rWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
checkForCrossProduct	no	no
(	no	no
rWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
reducer	no	yes
,	no	no
rsInfo	no	yes
)	no	no
&&	no	no
cartesianProductEdgeEnabled	no	no
&&	no	no
noOuterJoin	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
BaseWork	no	yes
>	no	no
parents	no	yes
=	no	no
tezWork	no	yes
.	no	no
getParents	no	yes
(	no	no
null	no	no
==	no	no
origWrk	no	yes
?	no	no
wrk	no	yes
:	no	no
origWrk	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
BaseWork	no	yes
p	no	yes
:	no	no
parents	no	yes
)	no	no
{	no	no
TezEdgeProperty	no	yes
prop	yes	yes
=	no	no
tezWork	no	yes
.	no	no
getEdgeProperty	no	yes
(	no	no
p	no	yes
,	no	no
null	no	no
==	no	no
origWrk	no	yes
?	no	no
wrk	no	yes
:	no	no
origWrk	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
LlapClusterStateForCompile	no	no
getClusterInfo	no	no
(	no	no
final	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
final	no	no
String	no	yes
nodes	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getTrimmedVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
userName	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_ZK_REGISTRY_USER	no	yes
,	no	no
LlapRegistryService	no	yes
.	no	no
currentUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Callable	no	no
<	no	no
LlapClusterStateForCompile	no	no
>	no	no
generator	no	no
=	no	no
new	no	no
Callable	no	no
<	no	no
LlapClusterStateForCompile	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
LlapClusterStateForCompile	no	no
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

return	no	no
false	no	no
;	no	no
}	no	no
boolean	no	no
ret	no	yes
=	no	no
validateExprNodeDescNoComplex	no	yes
(	no	no
desc	no	yes
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
ret	no	yes
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
boolean	no	no
hasKeys	no	yes
=	no	no
(	no	no
desc	no	yes
.	no	no
getKeys	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
;	no	no
ProcessingMode	no	yes
processingMode	yes	yes
=	no	no
VectorGroupByDesc	no	yes
.	no	no
groupByDescModeToVectorProcessingMode	no	yes
(	no	no
desc	no	yes
.	no	no
getMode	no	yes
(	no	no
)	no	no
,	no	no
hasKeys	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
&&	no	no
(	no	no
processingMode	yes	yes
!=	no	no
ProcessingMode	no	yes
.	no	no
HASH	no	no
&&	no	no
processingMode	yes	yes
!=	no	no
ProcessingMode	no	yes
.	no	no
STREAMING	no	no
)	no	no
)	no	no
{	no	no
setOperatorIssue	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
boolean	no	no
isGroupingSetsPresent	no	yes
=	no	no
(	no	no
desc	no	yes
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
desc	no	yes
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
validateAggregationDescs	no	no
(	no	no
desc	no	yes
.	no	no
getAggregators	no	no
(	no	no
)	no	no
,	no	no
desc	no	yes
.	no	no
getMode	no	yes
(	no	no
)	no	no
,	no	no
isGroupingSetsPresent	no	yes
,	no	no
hasKeys	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
vectorGroupByDesc	no	yes
.	no	no
setProcessingMode	no	yes
(	no	no
processingMode	yes	yes
)	no	no
;	no	no
vectorGroupByDesc	no	yes
.	no	no
setIsVectorizationComplexTypesEnabled	no	yes
(	no	no
isVectorizationComplexTypesEnabled	no	yes
)	no	no
;	no	no
vectorGroupByDesc	no	yes
.	no	no
setIsVectorizationGroupByComplexTypesEnabled	no	yes
(	no	no
isVectorizationGroupByComplexTypesEnabled	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
isBigTableOnlyResults	no	no
(	no	no
MapJoinDesc	no	no
desc	no	yes
)	no	no
{	no	no
Byte	no	yes
[	no	no
]	no	no
order	no	yes
=	no	no
desc	no	yes
.	no	no
getTagOrder	no	yes
(	no	no
)	no	no
;	no	no
byte	no	no
posBigTable	no	yes
=	no	no
(	no	no
byte	no	no
)	no	no
desc	no	yes
.	no	no
getPosBigTable	no	yes
(	no	no
)	no	no
;	no	no
Byte	no	yes
posSingleVectorMapJoinSmallTable	no	yes
=	no	no
(	no	no
order	no	yes
[	no	no
0	no	no
]	no	no
==	no	no
posBigTable	no	yes
?	no	no
order	no	yes
[	no	no
1	no	no
]	no	no
:	no	no
order	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
int	no	no
[	no	no
]	no	no
smallTableIndices	yes	yes
;	no	no
int	no	no
smallTableIndicesSize	no	yes
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
posSingleVectorMapJoinSmallTable	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
smallTableIndices	yes	yes
=	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
posSingleVectorMapJoinSmallTable	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
isBigTableOnlyResults	no	no
(	no	no
MapJoinDesc	no	no
desc	no	yes
)	no	no
{	no	no
Byte	no	yes
[	no	no
]	no	no
order	no	yes
=	no	no
desc	no	yes
.	no	no
getTagOrder	no	yes
(	no	no
)	no	no
;	no	no
byte	no	no
posBigTable	no	yes
=	no	no
(	no	no
byte	no	no
)	no	no
desc	no	yes
.	no	no
getPosBigTable	no	yes
(	no	no
)	no	no
;	no	no
Byte	no	yes
posSingleVectorMapJoinSmallTable	no	yes
=	no	no
(	no	no
order	no	yes
[	no	no
0	no	no
]	no	no
==	no	no
posBigTable	no	yes
?	no	no
order	no	yes
[	no	no
1	no	no
]	no	no
:	no	no
order	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
int	no	no
[	no	no
]	no	no
smallTableIndices	no	yes
;	no	no
int	no	no
smallTableIndicesSize	no	yes
;	no	no
if	no	no
(	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
posSingleVectorMapJoinSmallTable	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
smallTableIndices	no	yes
=	no	no
desc	no	yes
.	no	no
getValueIndices	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
posSingleVectorMapJoinSmallTable	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
smallTableIndices	no	yes
)	no	no
)	no	no
;	no	no
smallTableIndicesSize	no	yes
=	no	no
smallTableIndices	no	yes
.	no	no
length	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
smallTableIndices	no	yes
=	no	no
null	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
smallTableIndicesSize	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
smallTableRetainList	yes	yes
=	no	no
desc	no	yes
.	no	no
getRetainList	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
posSingleVectorMapJoinSmallTable	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
vectorDesc	no	no
.	no	no
getIsFastHashTableEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
hashTableImplementationType	no	yes
=	no	no
HashTableImplementationType	no	yes
.	no	no
FAST	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
hashTableImplementationType	no	yes
=	no	no
HashTableImplementationType	no	yes
.	no	no
OPTIMIZED	no	yes
;	no	no
}	no	no
int	no	no
joinType	no	yes
=	no	no
desc	no	yes
.	no	no
getConds	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
.	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isInnerBigOnly	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
joinType	no	yes
==	no	no
JoinDesc	no	no
.	no	no
INNER_JOIN	no	no
&&	no	no
isBigTableOnlyResults	no	no
(	no	no
desc	no	yes
)	no	no
)	no	no
{	no	no
isInnerBigOnly	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
hashTableKeyType	no	yes
=	no	no
HashTableKeyType	no	yes
.	no	no
MULTI_KEY	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
HiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
hiveConf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_VECTORIZATION_MAPJOIN_NATIVE_MULTIKEY_ONLY_ENABLED	no	no
)	no	no
)	no	no
{	no	no
byte	no	no
posBigTable	no	yes
=	no	no
(	no	no
byte	no	no
)	no	no
desc	no	yes
.	no	no
getPosBigTable	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Byte	no	yes
,	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>>	no	no
keyExprs	no	yes
=	no	no
desc	no	yes
.	no	no
getKeys	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
bigTableKeyExprs	no	yes
=	no	no
keyExprs	no	yes
.	no	no
get	no	yes
(	no	no
posBigTable	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
bigTableKeyExprs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
TypeInfo	no	yes
typeInfo	yes	yes
=	no	no
bigTableKeyExprs	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no

vectorMapJoinVariation	no	yes
=	no	no
VectorMapJoinVariation	no	yes
.	no	no
INNER	no	yes
;	no	no
hashTableKind	yes	yes
=	no	no
HashTableKind	no	yes
.	no	no
HASH_MAP	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
vectorMapJoinVariation	no	yes
=	no	no
VectorMapJoinVariation	no	yes
.	no	no
INNER_BIG_ONLY	no	yes
;	no	no
hashTableKind	yes	yes
=	no	no
HashTableKind	no	yes
.	no	no
HASH_MULTISET	no	yes
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
JoinDesc	no	no
.	no	no
LEFT_OUTER_JOIN	no	no
:	no	no
case	no	no
JoinDesc	no	no
.	no	no
RIGHT_OUTER_JOIN	no	no
:	no	no
vectorMapJoinVariation	no	yes
=	no	no
VectorMapJoinVariation	no	yes
.	no	no
OUTER	no	no
;	no	no
hashTableKind	yes	yes
=	no	no
HashTableKind	no	yes
.	no	no
HASH_MAP	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
JoinDesc	no	no
.	no	no
FULL_OUTER_JOIN	no	no
:	no	no
vectorMapJoinVariation	no	yes
=	no	no
VectorMapJoinVariation	no	yes
.	no	no
FULL_OUTER	no	no
;	no	no
hashTableKind	yes	yes
=	no	no
HashTableKind	no	yes
.	no	no
HASH_MAP	no	yes
;	no	no
break	no	no
;	no	no
case	no	no
JoinDesc	no	no
.	no	no
LEFT_SEMI_JOIN	no	no
:	no	no
vectorMapJoinVariation	no	yes
=	no	no
VectorMapJoinVariation	no	yes
.	no	no
LEFT_SEMI	no	no
;	no	no
hashTableKind	yes	yes
=	no	no
HashTableKind	no	yes
.	no	no
HASH_SET	no	yes
;	no	no
break	no	no
;	no	no

if	no	no
(	no	no
vectorReduceSinkInfo	no	no
.	no	no
getUseUniformHash	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
vectorDesc	no	no
.	no	no
getIsEmptyKey	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkEmptyKeyOperator	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
reduceSinkKeyType	no	no
)	no	no
{	no	no
case	no	no
LONG	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkLongOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
case	no	no
STRING	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkStringOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MULTI_KEY	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkMultiKeyOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	no
(	no	no
+	no	no
reduceSinkKeyType	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
vectorDesc	no	no
.	no	no
getIsEmptyKey	no	no
(	no	no
)	no	no
&&	no	no
vectorDesc	no	no
.	no	no
getIsEmptyBuckets	no	no
(	no	no
)	no	no
&&	no	no
vectorDesc	no	no
.	no	no
getIsEmptyPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkEmptyKeyOperator	no	yes
.	no	no
class	no	no
;	no	no

switch	no	no
(	no	no
reduceSinkKeyType	no	yes
)	no	no
{	no	no
case	no	no
LONG	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkLongOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
case	no	no
STRING	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkStringOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MULTI_KEY	no	no
:	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkMultiKeyOperator	no	no
.	no	no
class	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
HiveException	no	no
(	no	no
+	no	no
reduceSinkKeyType	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
vectorDesc	no	yes
.	no	no
getIsEmptyKey	no	no
(	no	no
)	no	no
&&	no	no
vectorDesc	no	yes
.	no	no
getIsEmptyBuckets	no	no
(	no	no
)	no	no
&&	no	no
vectorDesc	no	yes
.	no	no
getIsEmptyPartitions	no	no
(	no	no
)	no	no
)	no	no
{	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkEmptyKeyOperator	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
else	no	no
{	no	no
opClass	yes	yes
=	no	no
VectorReduceSinkObjectHashOperator	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
}	no	no
vectorDesc	no	yes
.	no	no
setReduceSinkKeyType	no	yes
(	no	no
reduceSinkKeyType	no	yes
)	no	no
;	no	no
vectorDesc	no	yes
.	no	no
setVectorReduceSinkInfo	no	yes
(	no	no
vectorReduceSinkInfo	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
partColumnNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
PrimitiveTypeInfo	no	yes
>	no	no
partColumnTypeInfos	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
partColumns	no	no
)	no	no
{	no	no
partColumnNames	no	yes
.	no	no
add	no	yes
(	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partColumnTypeInfos	no	yes
.	no	no
add	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
getPrimitiveTypeInfo	no	yes
(	no	no
fs	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ExprNodeGenericFuncDesc	no	yes
expr	no	yes
=	no	no
deserializeExpr	no	yes
(	no	no
exprBytes	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ExprNodeDescUtils	no	yes
.	no	no
replaceEqualDefaultPartition	no	yes
(	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
ex	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
,	no	no
len	yes	yes
=	no	no
partitionNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
result	no	yes
=	no	no
PartitionPruner	no	yes
.	no	no
prunePartitionNames	no	yes
(	no	no
partColumnNames	no	yes
,	no	no
partColumnTypeInfos	no	yes
,	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
,	no	no
partitionNames	no	yes
)	no	no
;	no	no
double	no	no
timeMs	yes	yes
=	no	no
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000000.0	no	no
;	no	no

partColumnNames	no	yes
.	no	no
add	no	yes
(	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partColumnTypeInfos	no	yes
.	no	no
add	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
getPrimitiveTypeInfo	no	yes
(	no	no
fs	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ExprNodeGenericFuncDesc	no	yes
expr	no	yes
=	no	no
deserializeExpr	no	yes
(	no	no
exprBytes	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ExprNodeDescUtils	no	yes
.	no	no
replaceEqualDefaultPartition	no	yes
(	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SemanticException	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
ex	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
,	no	no
len	no	yes
=	no	no
partitionNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
result	no	yes
=	no	no
PartitionPruner	no	yes
.	no	no
prunePartitionNames	no	yes
(	no	no
partColumnNames	no	yes
,	no	no
partColumnTypeInfos	no	yes
,	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
,	no	no
partitionNames	no	yes
)	no	no
;	no	no
double	no	no
timeMs	no	yes
=	no	no
(	no	no
System	no	yes
.	no	no
nanoTime	no	yes
(	no	no
)	no	no
-	no	no
startTime	no	yes
)	no	no
/	no	no
1000000.0	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
len	no	yes
+	no	no
+	no	no
timeMs	no	yes
+	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
ex	yes	yes
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
hasColumnExpr	no	no
(	no	no
prunerExpr	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
error	no	yes
=	no	no
StrictChecks	no	yes
.	no	no
checkNoPartitionFilter	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
error	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
error	no	yes
+	no	no
+	no	no
alias	no	yes
+	no	no
+	no	no
tab	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
prunerExpr	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
getAllPartsFromCacheOrServer	no	yes
(	no	no
tab	no	yes
,	no	no
key	no	yes
,	no	no
false	no	no
,	no	no
prunedPartitionsMap	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
partColsUsedInFilter	no	yes
=	no	no
new	no	no
LinkedHashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
prunerExpr	no	yes
=	no	no
removeNonPartCols	no	yes
(	no	no
prunerExpr	no	yes
,	no	no
extractPartColNames	no	yes
(	no	no
tab	no	yes
)	no	no
,	no	no
partColsUsedInFilter	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
compactExpr	no	yes
=	no	no
compactExpr	no	yes
(	no	no
prunerExpr	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
oldFilter	yes	yes
=	no	no
prunerExpr	no	yes
.	no	no
getExprString	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
compactExpr	no	yes
==	no	no
null	no	no
||	no	no
isBooleanExpr	no	no
(	no	no
compactExpr	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isFalseExpr	no	no
(	no	no
compactExpr	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
new	no	no
PrunedPartitionList	no	yes
(	no	no
tab	no	yes
,	no	no
key	no	yes
+	no	no
compactExpr	no	yes
.	no	no
getExprString	no	yes
(	no	no
true	no	no
)	no	no
,	no	no
Collections	no	yes
.	no	no
emptySet	no	yes
(	no	no
)	no	no
,	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
return	no	no
getAllPartsFromCacheOrServer	no	yes
(	no	no
tab	no	yes
,	no	no
key	no	yes
,	no	no
true	no	no
,	no	no
prunedPartitionsMap	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
compactExprString	yes	yes
=	no	no
compactExpr	no	yes
.	no	no
getExprString	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

convertedValues	no	yes
.	no	no
add	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Object	no	yes
o	no	yes
=	no	no
ObjectInspectorConverters	no	yes
.	no	no
getConverter	no	yes
(	no	no
PrimitiveObjectInspectorFactory	no	yes
.	no	no
javaStringObjectInspector	no	yes
,	no	no
PrimitiveObjectInspectorFactory	no	yes
.	no	no
getPrimitiveJavaObjectInspector	no	yes
(	no	no
typeInfo	no	yes
)	no	no
)	no	no
.	no	no
convert	no	yes
(	no	no
partitionValue	no	yes
)	no	no
;	no	no
convertedValues	no	yes
.	no	no
add	no	yes
(	no	no
o	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Boolean	no	yes
isNeeded	no	yes
=	no	no
(	no	no
Boolean	no	yes
)	no	no
PartExprEvalUtils	no	yes
.	no	no
evaluateExprOnPart	no	yes
(	no	no
handle	no	yes
,	no	no
convertedValues	no	yes
)	no	no
;	no	no
boolean	no	no
isUnknown	yes	yes
=	no	no
(	no	no
isNeeded	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isUnknown	yes	yes
&&	no	no
!	no	no
isNeeded	no	yes
)	no	no
{	no	no
partIter	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isUnknown	yes	yes
&&	no	no
values	no	no
.	no	no
contains	no	no
(	no	no
defaultPartitionName	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partName	yes	yes
)	no	no
;	no	no
}	no	no
partIter	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
hasUnknownPartitions	no	yes
|=	no	no
isUnknown	yes	yes
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
procContext	no	yes
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
OptimizeSparkProcContext	no	yes
context	no	yes
=	no	no
(	no	no
OptimizeSparkProcContext	no	yes
)	no	no
procContext	no	yes
;	no	no
ReduceSinkOperator	no	yes
sink	yes	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
nd	no	yes
;	no	no
ReduceSinkDesc	no	yes
desc	no	yes
=	no	no
sink	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
parentSinks	no	yes
=	no	no
null	no	no
;	no	no
int	no	no
maxReducers	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAXREDUCERS	no	yes
)	no	no
;	no	no
int	no	no
constantReducers	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HADOOPNUMREDUCERS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
useOpStats	no	no
)	no	no
{	no	no
parentSinks	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperatorsUpstream	no	yes
(	no	no
sink	yes	yes
,	no	no
ReduceSinkOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
parentSinks	no	yes
.	no	no
remove	no	yes
(	no	no
sink	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	no
(	no	no
)	no	no
.	no	no
containsAll	no	no
(	no	no
parentSinks	no	yes
)	no	no
)	no	no
{	no	no

Set	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
parentSinks	no	yes
=	no	no
null	no	no
;	no	no
int	no	no
maxReducers	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAXREDUCERS	no	yes
)	no	no
;	no	no
int	no	no
constantReducers	yes	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HADOOPNUMREDUCERS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
useOpStats	no	no
)	no	no
{	no	no
parentSinks	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperatorsUpstream	no	yes
(	no	no
sink	yes	yes
,	no	no
ReduceSinkOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
parentSinks	no	yes
.	no	no
remove	no	yes
(	no	no
sink	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	yes
(	no	no
)	no	no
.	no	no
containsAll	no	no
(	no	no
parentSinks	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	yes
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
sink	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
sink	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
needSetParallelism	no	no
(	no	no
sink	yes	yes
,	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
constantReducers	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no

return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	yes
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
sink	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
context	no	yes
.	no	no
getVisitedReduceSinks	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
sink	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
needSetParallelism	no	no
(	no	no
sink	yes	yes
,	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
constantReducers	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
constantReducers	no	yes
)	no	no
;	no	no
desc	no	yes
.	no	no
setNumReducers	no	yes
(	no	no
constantReducers	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileSinkOperator	no	yes
fso	no	yes
=	no	no
GenSparkUtils	no	yes
.	no	no
getChildOperator	no	yes
(	no	no
sink	yes	yes
,	no	no
FileSinkOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fso	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
bucketCount	no	yes
=	no	no
fso	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
getProperty	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
BUCKET_COUNT	no	yes
)	no	no
;	no	no
int	no	no
numBuckets	yes	yes
=	no	no
bucketCount	no	yes
==	no	no
null	no	no
?	no	no
0	no	no
:	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
bucketCount	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
numBuckets	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	no	yes
+	no	no
+	no	no
constantReducers	no	yes
)	no	no
;	no	no
desc	no	yes
.	no	no
setNumReducers	no	yes
(	no	no
constantReducers	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileSinkOperator	no	yes
fso	no	yes
=	no	no
GenSparkUtils	no	yes
.	no	no
getChildOperator	no	yes
(	no	no
sink	no	yes
,	no	no
FileSinkOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
fso	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
bucketCount	no	yes
=	no	no
fso	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getTableInfo	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
getProperty	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
BUCKET_COUNT	no	yes
)	no	no
;	no	no
int	no	no
numBuckets	no	yes
=	no	no
bucketCount	no	yes
==	no	no
null	no	no
?	no	no
0	no	no
:	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
bucketCount	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
numBuckets	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	no	yes
+	no	no
+	no	no
numBuckets	no	yes
+	no	no
)	no	no
;	no	no
desc	no	yes
.	no	no
setNumReducers	no	yes
(	no	no
numBuckets	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
useOpStats	no	no
||	no	no
parentSinks	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
numberOfBytes	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
useOpStats	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	yes	no
:	no	no
sink	no	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
useOpStats	no	no
||	no	no
parentSinks	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
numberOfBytes	yes	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
useOpStats	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	yes	no
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
numberOfBytes	yes	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
numberOfBytes	yes	yes
,	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sibling	no	yes
+	no	no
+	no	no
sibling	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
sibling	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	yes	no
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
TableScanOperator	no	yes
>	no	no
sources	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperatorsUpstream	no	yes
(	no	no
sibling	no	yes
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TableScanOperator	no	yes
source	no	no
:	no	no
sources	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
source	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
sibling	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
TableScanOperator	no	yes
>	no	no
sources	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperatorsUpstream	no	yes
(	no	no
sibling	no	yes
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TableScanOperator	no	yes
source	no	yes
:	no	no
sources	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
numberOfBytes	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
source	no	yes
+	no	no
+	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
source	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
numberOfBytes	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
bytesPerReducer	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
/	no	no
2	no	no
;	no	no
int	no	no
numReducers	yes	yes
=	no	no
Utilities	no	yes
.	no	no
estimateReducers	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
bytesPerReducer	no	yes
,	no	no
maxReducers	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

else	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
sibling	no	yes
:	no	no
sink	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
TableScanOperator	no	yes
>	no	no
sources	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findOperatorsUpstream	no	yes
(	no	no
sibling	no	yes
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TableScanOperator	no	yes
source	no	yes
:	no	no
sources	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
numberOfBytes	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
source	no	yes
+	no	no
+	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
source	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
numberOfBytes	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
bytesPerReducer	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
/	no	no
2	no	no
;	no	no
int	no	no
numReducers	no	yes
=	no	no
Utilities	no	yes
.	no	no
estimateReducers	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
bytesPerReducer	no	yes
,	no	no
maxReducers	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
getSparkMemoryAndCores	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sparkMemoryAndCores	no	no
!=	no	no
null	no	no
&&	no	no
sparkMemoryAndCores	no	no
.	no	no
getLeft	no	no
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
sparkMemoryAndCores	no	no
.	no	no
getRight	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
source	no	yes
+	no	no
+	no	no
source	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
source	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
numberOfBytes	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
bytesPerReducer	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
/	no	no
2	no	no
;	no	no
int	no	no
numReducers	no	yes
=	no	no
Utilities	no	yes
.	no	no
estimateReducers	no	yes
(	no	no
numberOfBytes	no	yes
,	no	no
bytesPerReducer	no	yes
,	no	no
maxReducers	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
getSparkMemoryAndCores	no	yes
(	no	no
context	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sparkMemoryAndCores	no	yes
!=	no	no
null	no	no
&&	no	no
sparkMemoryAndCores	no	yes
.	no	no
getLeft	no	no
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
sparkMemoryAndCores	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
(	no	no
double	no	no
)	no	no
sparkMemoryAndCores	no	yes
.	no	no
getLeft	no	no
(	no	no
)	no	no
/	no	no
bytesPerReducer	no	yes
<	no	no
0.5	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
numReducers	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
numReducers	no	yes
,	no	no
sparkMemoryAndCores	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
numReducers	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
numReducers	no	yes
,	no	no
maxReducers	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sink	yes	yes
+	no	no
+	no	no
numReducers	no	yes
+	no	no
)	no	no
;	no	no
desc	yes	yes
.	no	no
setNumReducers	no	yes
(	no	no
numReducers	no	yes
)	no	no
;	no	no

}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
joinOp	no	yes
+	no	no
)	no	no
;	no	no
long	no	no
[	no	no
]	no	no
mapJoinInfo	no	yes
=	no	no
getMapJoinConversionInfo	no	yes
(	no	no
joinOp	no	yes
,	no	no
context	no	yes
)	no	no
;	no	no
int	no	no
mapJoinConversionPos	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
mapJoinInfo	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
mapJoinConversionPos	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
int	no	no
numBuckets	yes	yes
=	no	no
-	no	no
1	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
bucketColNames	no	yes
=	no	no
null	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
MapJoinOperator	no	yes
mapJoinOp	no	yes
=	no	no
convertJoinMapJoin	no	yes
(	no	no
joinOp	no	yes
,	no	no
context	no	yes
,	no	no
mapJoinConversionPos	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_VECTORIZATION_MAPJOIN_NATIVE_ENABLED	no	no
)	no	no
&&	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_VECTORIZATION_ENABLED	no	no
)	no	no
)	no	no
{	no	no
mapJoinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeyTblDesc	no	yes
(	no	no
)	no	no
.	no	no
getProperties	no	yes
(	no	no
)	no	no
.	no	no
setProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
SERIALIZATION_LIB	no	yes
,	no	no
BinarySortableSerDe	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVEOPTBUCKETMAPJOIN	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
numBuckets	yes	yes
=	no	no
convertJoinBucketMapJoin	no	yes
(	no	no
joinOp	no	yes
,	no	no
mapJoinOp	no	yes
,	no	no
context	no	yes
,	no	no
mapJoinConversionPos	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
numBuckets	yes	yes
>	no	no
1	no	no
)	no	no
{	no	no

private	no	no
long	no	no
[	no	no
]	no	no
getMapJoinConversionInfo	no	no
(	no	no
JoinOperator	no	no
joinOp	yes	yes
,	no	no
OptimizeSparkProcContext	no	no
context	no	yes
)	no	no
{	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
bigTableCandidateSet	no	yes
=	no	no
MapJoinProcessor	no	yes
.	no	no
getBigTableCandidates	no	yes
(	no	no
joinOp	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getConds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
maxSize	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECONVERTJOINNOCONDITIONALTASKTHRESHOLD	no	yes
)	no	no
;	no	no
int	no	no
bigTablePosition	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
Statistics	no	yes
bigInputStat	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
totalSize	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
bigTableFound	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
useTsStats	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolean	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_USE_TS_STATS_FOR_MAPJOIN	no	yes
.	no	no
varname	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
useTsStats	no	yes
)	no	no
{	no	no

private	no	no
long	no	no
[	no	no
]	no	no
getMapJoinConversionInfo	no	no
(	no	no
JoinOperator	no	no
joinOp	no	yes
,	no	no
OptimizeSparkProcContext	no	no
context	no	yes
)	no	no
{	no	no
Set	no	yes
<	no	no
Integer	no	yes
>	no	no
bigTableCandidateSet	no	yes
=	no	no
MapJoinProcessor	no	yes
.	no	no
getBigTableCandidates	no	yes
(	no	no
joinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getConds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
maxSize	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLongVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECONVERTJOINNOCONDITIONALTASKTHRESHOLD	no	yes
)	no	no
;	no	no
int	no	no
bigTablePosition	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
Statistics	no	yes
bigInputStat	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
totalSize	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
pos	yes	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
bigTableFound	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
useTsStats	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolean	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_USE_TS_STATS_FOR_MAPJOIN	no	yes
.	no	no
varname	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
useTsStats	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
joinOp	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
parentOp	yes	no
:	no	no
joinOp	no	yes
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isBigTableBranch	no	no
(	no	no
parentOp	yes	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
bigTablePosition	no	yes
<	no	no
0	no	no
&&	no	no
bigTableCandidateSet	no	yes
.	no	no
contains	no	no
(	no	no
pos	yes	yes
)	no	no
&&	no	no
!	no	no
containUnionWithoutRS	no	no
(	no	no
parentOp	yes	no
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
)	no	no
)	no	no
{	no	no

Statistics	no	yes
bigInputStat	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
totalSize	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
bigTableFound	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
useTsStats	no	yes
=	no	no
context	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getBoolean	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_USE_TS_STATS_FOR_MAPJOIN	no	yes
.	no	no
varname	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
useTsStats	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
joinOp	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
parentOp	no	yes
:	no	no
joinOp	yes	yes
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isBigTableBranch	no	no
(	no	no
parentOp	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
bigTablePosition	no	yes
<	no	no
0	no	no
&&	no	no
bigTableCandidateSet	no	no
.	no	no
contains	no	no
(	no	no
pos	no	yes
)	no	no
&&	no	no
!	no	no
containUnionWithoutRS	no	no
(	no	no
parentOp	no	yes
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	no
(	no	no
0	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
parentOp	no	yes
,	no	no
pos	no	yes
)	no	no
;	no	no
bigTablePosition	no	yes
=	no	no
pos	no	yes
;	no	no
bigTableFound	no	yes
=	no	no
true	no	no
;	no	no
bigInputStat	no	yes
=	no	no
new	no	no
Statistics	no	yes
(	no	no
0	no	no
,	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
,	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
,	no	no
0	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

if	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
mapJoinParentMap	no	yes
.	no	no
containsKey	no	no
(	no	no
mapJoinOp	no	yes
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
parents	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
(	no	no
mapJoinOp	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
context	no	yes
.	no	no
mapJoinParentMap	no	yes
.	no	no
put	no	yes
(	no	no
mapJoinOp	no	yes
,	no	no
parents	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
BaseWork	no	yes
>	no	no
mapJoinWork	no	yes
;	no	no
mapJoinWork	no	yes
=	no	no
context	no	yes
.	no	no
mapJoinWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
mapJoinOp	no	yes
)	no	no
;	no	no
int	no	no
workMapSize	no	yes
=	no	no
context	no	yes
.	no	no
childToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
parentRS	no	yes
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
workMapSize	no	yes
==	no	no
1	no	no
,	no	no
+	no	no
workMapSize	no	yes
)	no	no
;	no	no
BaseWork	no	yes
parentWork	yes	yes
=	no	no
context	no	yes
.	no	no
childToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
parentRS	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
int	no	no
pos	no	yes
=	no	no
context	no	yes
.	no	no
mapJoinParentMap	no	yes
.	no	no
get	no	yes
(	no	no
mapJoinOp	no	yes
)	no	no
.	no	no
indexOf	no	yes
(	no	no
parentRS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pos	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
mapJoinOp	no	yes
+	no	no
+	no	no
pos	no	yes
+	no	no
+	no	no
parentWork	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mapJoinOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getParentToInput	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
pos	no	yes
,	no	no
parentWork	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SparkEdgeProperty	no	yes
edgeProp	no	yes
=	no	no
new	no	no
SparkEdgeProperty	no	yes
(	no	no
SparkEdgeProperty	no	yes
.	no	no
SHUFFLE_NONE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
mapJoinWork	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

long	no	no
parallelism	yes	yes
=	no	no
1L	no	no
;	no	no
boolean	no	no
interReduction	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
hashAgg	no	yes
=	no	no
false	no	no
;	no	no
long	no	no
inputSize	yes	yes
=	no	no
1L	no	no
;	no	no
boolean	no	no
containsGroupingSet	yes	yes
=	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
sizeOfGroupingSet	yes	yes
=	no	no
containsGroupingSet	yes	yes
?	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
:	no	no
1L	no	no
;	no	no
if	no	no
(	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
MERGEPARTIAL	no	no
)	no	no
&&	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
COMPLETE	no	no
)	no	no
&&	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
FINAL	no	no
)	no	no
)	no	no
{	no	no
interReduction	no	yes
=	no	no
true	no	no
;	no	no
TableScanOperator	no	yes
top	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findSingleOperatorUpstream	no	yes
(	no	no
gop	yes	yes
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
top	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
inputSize	yes	yes
=	no	no
parentStats	no	yes
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
maxSplitSize	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
inputSize	yes	yes
=	no	no
top	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
parallelism	yes	yes
=	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
inputSize	yes	yes
/	no	no
maxSplitSize	yes	yes
)	no	no
;	no	no

boolean	no	no
containsGroupingSet	no	yes
=	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
sizeOfGroupingSet	no	yes
=	no	no
containsGroupingSet	no	yes
?	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
:	no	no
1L	no	no
;	no	no
if	no	no
(	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
MERGEPARTIAL	no	no
)	no	no
&&	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
COMPLETE	no	no
)	no	no
&&	no	no
!	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
FINAL	no	no
)	no	no
)	no	no
{	no	no
interReduction	no	yes
=	no	no
true	no	no
;	no	no
TableScanOperator	no	yes
top	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findSingleOperatorUpstream	no	yes
(	no	no
gop	yes	yes
,	no	no
TableScanOperator	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
top	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
inputSize	no	yes
=	no	no
parentStats	no	yes
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
maxSplitSize	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
BYTESPERREDUCER	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
inputSize	no	yes
=	no	no
top	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
parallelism	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
inputSize	no	yes
/	no	no
maxSplitSize	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
inputSize	no	yes
+	no	no
+	no	no
maxSplitSize	no	yes
+	no	no
+	no	no
parallelism	no	yes
+	no	no
+	no	no
containsGroupingSet	no	yes
+	no	no
+	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
satisfyPrecondition	no	no
(	no	no
parentStats	no	yes
)	no	no
)	no	no
{	no	no
hashAgg	yes	yes
=	no	no
checkMapSideAggregation	no	yes
(	no	no
gop	yes	yes
,	no	no
colStats	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
inputSize	no	yes
=	no	no
top	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
parallelism	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
inputSize	no	yes
/	no	no
maxSplitSize	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
inputSize	no	yes
+	no	no
+	no	no
maxSplitSize	no	yes
+	no	no
+	no	no
parallelism	no	yes
+	no	no
+	no	no
containsGroupingSet	no	yes
+	no	no
+	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
satisfyPrecondition	no	no
(	no	no
parentStats	no	yes
)	no	no
)	no	no
{	no	no
hashAgg	no	yes
=	no	no
checkMapSideAggregation	no	yes
(	no	no
gop	yes	yes
,	no	no
colStats	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
hashAgg	no	yes
)	no	no
;	no	no
}	no	no
stats	no	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
parentNumRows	no	yes
=	no	no
stats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
ndvProduct	yes	yes
=	no	no
StatsUtils	no	yes
.	no	no
computeNDVGroupingColumns	no	yes
(	no	no
colStats	no	yes
,	no	no
parentStats	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no
ndvProduct	yes	yes
=	no	no
parentNumRows	no	yes
/	no	no
2	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
inputSize	no	yes
+	no	no
+	no	no
maxSplitSize	no	yes
+	no	no
+	no	no
parallelism	no	yes
+	no	no
+	no	no
containsGroupingSet	no	yes
+	no	no
+	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
satisfyPrecondition	no	no
(	no	no
parentStats	no	yes
)	no	no
)	no	no
{	no	no
hashAgg	no	yes
=	no	no
checkMapSideAggregation	no	yes
(	no	no
gop	yes	yes
,	no	no
colStats	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
hashAgg	no	yes
)	no	no
;	no	no
}	no	no
stats	no	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
parentNumRows	no	yes
=	no	no
stats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
ndvProduct	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
computeNDVGroupingColumns	no	yes
(	no	no
colStats	no	yes
,	no	no
parentStats	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
ndvProduct	no	yes
=	no	no
parentNumRows	no	yes
/	no	no
2	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
ndvProduct	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
interReduction	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
hashAgg	no	yes
)	no	no
;	no	no
}	no	no
stats	no	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
parentNumRows	no	yes
=	no	no
stats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
ndvProduct	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
computeNDVGroupingColumns	no	yes
(	no	no
colStats	no	yes
,	no	no
parentStats	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
ndvProduct	no	yes
=	no	no
parentNumRows	no	yes
/	no	no
2	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
ndvProduct	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
interReduction	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hashAgg	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no

long	no	no
ndvProduct	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
computeNDVGroupingColumns	no	yes
(	no	no
colStats	no	yes
,	no	no
parentStats	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ndvProduct	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
ndvProduct	no	yes
=	no	no
parentNumRows	no	yes
/	no	no
2	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
ndvProduct	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
interReduction	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hashAgg	no	no
)	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
orgParentNumRows	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
,	no	no
parallelism	no	yes
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
cardinality	yes	yes
,	no	no
orgParentNumRows	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
ndvProduct	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
interReduction	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hashAgg	no	no
)	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
orgParentNumRows	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
,	no	no
parallelism	no	yes
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
cardinality	yes	yes
,	no	no
orgParentNumRows	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no

}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
/	no	no
2	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
parallelism	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
orgParentNumRows	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
,	no	no
parallelism	no	yes
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
cardinality	yes	yes
,	no	no
orgParentNumRows	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no
cardinality	yes	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no

}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	yes
)	no	no
{	no	no
cardinality	yes	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
GroupByOperator	no	yes
mGop	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findMapSideGb	no	yes
(	no	no
gop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
mGop	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
containsGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
containsGroupingSet	no	yes
)	no	no
{	no	no
sizeOfGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
getParentNumRows	no	yes
(	no	no
gop	yes	yes
,	no	no
gop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
GroupByOperator	no	yes
mGop	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findMapSideGb	no	yes
(	no	no
gop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
mGop	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
containsGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
containsGroupingSet	no	yes
)	no	no
{	no	no
sizeOfGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
ndvProduct	no	yes
)	no	no
;	no	no
GroupByOperator	no	yes
gOpStats	no	yes
=	no	no
mGop	no	yes
;	no	no

}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
GroupByOperator	no	yes
mGop	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findMapSideGb	no	yes
(	no	no
gop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
mGop	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
containsGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
containsGroupingSet	no	yes
)	no	no
{	no	no
sizeOfGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
ndvProduct	no	yes
)	no	no
;	no	no
GroupByOperator	no	yes
gOpStats	no	yes
=	no	no
mGop	no	yes
;	no	no
if	no	no
(	no	no
gOpStats	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
gOpStats	no	yes
=	no	no
gop	yes	yes
;	no	no
}	no	no
long	no	no
orgParentNumRows	no	yes
=	no	no
getParentNumRows	no	yes
(	no	no
gOpStats	no	yes
,	no	no
gOpStats	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no

GroupByOperator	no	yes
mGop	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
findMapSideGb	no	yes
(	no	no
gop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
mGop	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
containsGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
isGroupingSetsPresent	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
containsGroupingSet	no	yes
)	no	no
{	no	no
sizeOfGroupingSet	no	yes
=	no	no
mGop	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getListGroupingSets	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
ndvProduct	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
ndvProduct	no	yes
)	no	no
;	no	no
GroupByOperator	no	yes
gOpStats	no	yes
=	no	no
mGop	no	yes
;	no	no
if	no	no
(	no	no
gOpStats	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
gOpStats	no	yes
=	no	no
gop	yes	yes
;	no	no
}	no	no
long	no	no
orgParentNumRows	no	yes
=	no	no
getParentNumRows	no	yes
(	no	no
gOpStats	no	yes
,	no	no
gOpStats	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeys	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
cardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
orgParentNumRows	no	yes
,	no	no
cardinality	yes	yes
)	no	no
;	no	no

StatsUtils	no	yes
.	no	no
updateStats	no	yes
(	no	no
stats	yes	yes
,	no	no
cardinality	no	yes
,	no	no
true	no	no
,	no	no
gop	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
parentStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
stats	yes	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
long	no	no
parentNumRows	no	yes
=	no	no
stats	yes	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
interReduction	no	no
)	no	no
{	no	no
if	no	no
(	no	no
containsGroupingSet	no	no
)	no	no
{	no	no
cardinality	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentNumRows	no	yes
,	no	no
sizeOfGroupingSet	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
cardinality	no	yes
=	no	no
parentNumRows	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
gop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cardinality	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no

outColStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
stats	yes	yes
.	no	no
setColumnStats	no	yes
(	no	no
outColStats	no	yes
)	no	no
;	no	no
long	no	no
joinRowCount	no	yes
;	no	no
long	no	no
leftUnmatchedRows	no	yes
=	no	no
0L	no	no
;	no	no
long	no	no
rightUnmatchedRows	no	yes
=	no	no
0L	no	no
;	no	no
if	no	no
(	no	no
inferredRowCount	no	yes
!=	no	no
-	no	no
1	no	no
)	no	no
{	no	no
joinRowCount	no	yes
=	no	no
inferredRowCount	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
innerJoinRowCount	no	yes
=	no	no
computeRowCountAssumingInnerJoin	no	yes
(	no	no
rowCounts	no	yes
,	no	no
denom	no	yes
,	no	no
jop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
jop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getConds	no	yes
(	no	no
)	no	no
.	no	no
length	no	no
==	no	no
1	no	no
)	no	no
{	no	no
JoinCondDesc	no	yes
joinCond	no	yes
=	no	no
jop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getConds	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
joinCond	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
JoinDesc	no	no
.	no	no
LEFT_OUTER_JOIN	no	no
)	no	no
{	no	no
leftUnmatchedRows	no	yes
=	no	no
calculateUnmatchedRowsForOuter	no	yes
(	no	no
conf	no	yes
,	no	no
rowCountParents	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
joinKeys	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
joinStats	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
distinctUnmatched	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
joinCond	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
JoinDesc	no	no
.	no	no
RIGHT_OUTER_JOIN	no	no
)	no	no
{	no	no
rightUnmatchedRows	no	yes
=	no	no
calculateUnmatchedRowsForOuter	no	yes
(	no	no
conf	no	yes
,	no	no
rowCountParents	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
joinKeys	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
joinStats	no	yes
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
distinctUnmatched	no	yes
)	no	no
;	no	no

Statistics	no	yes
ps	no	yes
=	no	no
op	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
statsState	no	yes
=	no	no
Statistics	no	yes
.	no	no
inferColumnStatsState	no	yes
(	no	no
statsState	no	yes
,	no	no
ps	no	yes
.	no	no
getBasicStatsState	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
rowCount	no	yes
=	no	no
ps	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
dataSize	no	yes
=	no	no
ps	no	yes
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
newCrossRowCount	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
crossRowCount	no	yes
,	no	no
rowCount	no	yes
)	no	no
;	no	no
long	no	no
newCrossDataSize	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeAdd	no	yes
(	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
crossDataSize	no	yes
,	no	no
rowCount	no	yes
)	no	no
,	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
dataSize	no	yes
,	no	no
crossRowCount	no	yes
)	no	no
)	no	no
;	no	no
crossRowCount	no	yes
=	no	no
newCrossRowCount	no	yes
;	no	no
crossDataSize	no	yes
=	no	no
newCrossDataSize	no	yes
;	no	no
if	no	no
(	no	no
rowCount	no	yes
>	no	no
maxRowCount	no	yes
)	no	no
{	no	no
maxRowCount	no	yes
=	no	no
rowCount	no	yes
;	no	no
maxDataSize	no	yes
=	no	no
dataSize	no	yes
;	no	no
}	no	no
}	no	no
long	no	no
newDataSize	no	yes
;	no	no
boolean	no	no
cartesianProduct	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
jop	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
instanceof	no	no
ReduceSinkOperator	no	yes
)	no	no
{	no	no
ReduceSinkOperator	no	yes
rsOp	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
jop	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
jop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
newNumRows	no	yes
;	no	no
}	no	no
Integer	no	yes
pkPos	no	yes
=	no	no
parentsWithPK	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
ColStatistics	no	yes
csPK	no	yes
=	no	no
parentsWithPK	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Integer	no	yes
,	no	no
ColStatistics	no	yes
>	no	no
csFKs	no	yes
=	no	no
getForeignKeyCandidates	no	yes
(	no	no
parents	no	yes
,	no	no
csPK	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
csFKs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
+	no	no
1	no	no
==	no	no
parents	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
newNumRows	no	yes
=	no	no
getCardinality	no	yes
(	no	no
parents	no	yes
,	no	no
pkPos	no	yes
,	no	no
csPK	no	yes
,	no	no
csFKs	no	yes
,	no	no
jop	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
parentIds	yes	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Integer	no	yes
i	no	yes
:	no	no
parentsWithPK	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
parentIds	yes	yes
.	no	no
add	no	yes
(	no	no
parents	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
jop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
parentIds	yes	yes
)	no	no
;	no	no
parentIds	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Integer	no	yes
i	no	yes
:	no	no
csFKs	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
parentIds	yes	yes
.	no	no
add	no	yes
(	no	no
parents	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
updateColStats	no	no
(	no	no
HiveConf	no	no
conf	no	no
,	no	no
Statistics	no	no
stats	no	no
,	no	no
long	no	no
leftUnmatchedRows	no	no
,	no	no
long	no	no
rightUnmatchedRows	no	no
,	no	no
long	no	no
newNumRows	yes	no
,	no	no
CommonJoinOperator	no	no
<	no	no
?	no	no
extends	no	no
JoinDesc	no	no
>	no	no
jop	yes	no
,	no	no
Map	no	no
<	no	no
Integer	no	no
,	no	no
Long	no	no
>	no	no
rowCountParents	no	no
)	no	no
{	no	no
if	no	no
(	no	no
newNumRows	yes	no
<	no	no
0	no	no
)	no	no
{	no	no

AnnotateStatsProcCtx	no	yes
aspCtx	no	yes
=	no	no
(	no	no
AnnotateStatsProcCtx	no	yes
)	no	no
procCtx	no	yes
;	no	no
LimitOperator	no	yes
lop	yes	yes
=	no	no
(	no	no
LimitOperator	no	yes
)	no	no
nd	no	yes
;	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parent	no	yes
=	no	no
lop	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Statistics	no	yes
parentStats	no	yes
=	no	no
parent	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
limit	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
limit	no	yes
=	no	no
lop	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLimit	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
satisfyPrecondition	no	no
(	no	no
parentStats	no	yes
)	no	no
)	no	no
{	no	no
Statistics	no	yes
stats	yes	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getColStatisticsUpdatingTableAlias	no	yes
(	no	no
parentStats	no	yes
,	no	no
lop	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stats	yes	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
limit	no	yes
<=	no	no
parentStats	no	yes
.	no	no
getNumRows	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StatsUtils	no	yes
.	no	no
updateStats	no	yes
(	no	no
stats	yes	yes
,	no	no
limit	no	yes
,	no	no
true	no	no
,	no	no
lop	yes	yes
)	no	no
;	no	no
}	no	no
stats	yes	yes
=	no	no
applyRuntimeStats	no	yes
(	no	no
aspCtx	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
,	no	no
stats	yes	yes
,	no	no
lop	yes	yes
)	no	no
;	no	no
lop	yes	yes
.	no	no
setStatistics	no	yes
(	no	no
stats	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getColStatisticsUpdatingTableAlias	no	yes
(	no	no
parentStats	no	yes
,	no	no
lop	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
limit	no	yes
<=	no	no
parentStats	no	yes
.	no	no
getNumRows	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StatsUtils	no	yes
.	no	no
updateStats	no	yes
(	no	no
stats	no	yes
,	no	no
limit	no	yes
,	no	no
true	no	no
,	no	no
lop	yes	yes
)	no	no
;	no	no
}	no	no
stats	no	yes
=	no	no
applyRuntimeStats	no	yes
(	no	no
aspCtx	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
,	no	no
stats	no	yes
,	no	no
lop	yes	yes
)	no	no
;	no	no
lop	yes	yes
.	no	no
setStatistics	no	yes
(	no	no
stats	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
lop	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
stats	no	yes
.	no	no
extendedToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
parentStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
limit	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getMaxIfOverflow	no	yes
(	no	no
limit	no	yes
)	no	no
;	no	no
Statistics	no	yes
wcStats	yes	yes
=	no	no
parentStats	no	yes
.	no	no
scaleToRowCount	no	yes
(	no	no
limit	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
wcStats	yes	yes
=	no	no
applyRuntimeStats	no	yes
(	no	no
aspCtx	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
,	no	no
wcStats	yes	yes
,	no	no
lop	yes	yes
)	no	no
;	no	no
lop	yes	yes
.	no	no
setStatistics	no	yes
(	no	no
wcStats	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
cs	no	yes
.	no	no
setColumnName	no	yes
(	no	no
prefixedKey	no	yes
)	no	no
;	no	no
colStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
val	no	yes
:	no	no
outValueColNames	no	no
)	no	no
{	no	no
String	no	yes
prefixedVal	no	yes
=	no	no
Utilities	no	yes
.	no	no
ReduceField	no	yes
.	no	no
VALUE	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
val	no	yes
;	no	no
ExprNodeDesc	no	yes
end	no	yes
=	no	no
colExprMap	no	yes
.	no	no
get	no	yes
(	no	no
prefixedVal	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
end	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ColStatistics	no	yes
cs	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getColStatisticsFromExpression	no	yes
(	no	no
conf	no	yes
,	no	no
parentStats	no	yes
,	no	no
end	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
cs	no	yes
.	no	no
setColumnName	no	yes
(	no	no
prefixedVal	no	yes
)	no	no
;	no	no
colStats	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
outStats	yes	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
}	no	no
outStats	yes	yes
=	no	no
applyRuntimeStats	no	yes
(	no	no
aspCtx	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getContext	no	yes
(	no	no
)	no	no
,	no	no
outStats	yes	yes
,	no	no
rop	yes	yes
)	no	no
;	no	no
rop	yes	yes
.	no	no
setStatistics	no	yes
(	no	no
outStats	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
parentStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Statistics	no	yes
st	yes	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
float	no	no
udtfFactor	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
aspCtx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_STATS_UDTF_FACTOR	no	yes
)	no	no
;	no	no
long	no	no
numRows	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
parentStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
*	no	no
udtfFactor	no	yes
)	no	no
;	no	no
long	no	no
dataSize	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
safeMult	no	yes
(	no	no
parentStats	no	yes
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
,	no	no
udtfFactor	no	yes
)	no	no
;	no	no
st	yes	yes
.	no	no
setNumRows	no	yes
(	no	no
numRows	no	yes
)	no	no
;	no	no
st	yes	yes
.	no	no
setDataSize	no	yes
(	no	no
dataSize	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
colStatsList	no	yes
=	no	no
st	yes	yes
.	no	no
getColumnStats	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
colStatsList	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ColStatistics	no	yes
colStats	no	yes
:	no	no
colStatsList	no	yes
)	no	no
{	no	no
colStats	no	yes
.	no	no
setNumFalses	no	yes
(	no	no
(	no	no
long	no	no
)	no	no
(	no	no
colStats	no	yes
.	no	no
getNumFalses	no	yes
(	no	no
)	no	no
*	no	no
udtfFactor	no	yes
)	no	no
)	no	no
;	no	no
colStats	no	yes
.	no	no
setNumTrues	no	yes
(	no	no
(	no	no
long	no	no
)	no	no
(	no	no
colStats	no	yes
.	no	no
getNumTrues	no	yes
(	no	no
)	no	no
*	no	no
udtfFactor	no	yes
)	no	no
)	no	no
;	no	no
colStats	no	yes
.	no	no
setNumNulls	no	yes
(	no	no
(	no	no
long	no	no
)	no	no
(	no	no
colStats	no	yes
.	no	no
getNumNulls	no	yes
(	no	no
)	no	no
*	no	no
udtfFactor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
st	yes	yes
.	no	no
setColumnStats	no	yes
(	no	no
colStatsList	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

HiveConf	no	yes
hconf	no	yes
=	no	no
aspCtx	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Statistics	no	yes
stats	yes	yes
=	no	no
conf	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
stats	yes	yes
==	no	no
null	no	no
&&	no	no
op	yes	yes
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isAllParentsContainStatistics	no	no
(	no	no
op	yes	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
parent	no	yes
:	no	no
op	yes	yes
.	no	no
getParentOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Statistics	no	yes
parentStats	no	yes
=	no	no
parent	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
stats	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
stats	yes	yes
=	no	no
parentStats	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
stats	yes	yes
.	no	no
addBasicStats	no	yes
(	no	no
parentStats	no	yes
)	no	no
;	no	no
}	no	no
stats	yes	yes
.	no	no
updateColumnStatsState	no	yes
(	no	no
parentStats	no	yes
.	no	no
getColumnStatsState	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getColStatisticsFromExprMap	no	yes
(	no	no
hconf	no	yes
,	no	no
parentStats	no	yes
,	no	no
op	yes	yes
.	no	no
getColumnExprMap	no	yes
(	no	no
)	no	no
,	no	no
op	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
stats	yes	yes
.	no	no
addToColumnStats	no	yes
(	no	no
colStats	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
pushdownThroughParent	no	no
(	no	no
TopNKeyOperator	no	no
topNKey	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
parent	yes	yes
=	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

private	no	no
void	no	no
pushdownInnerJoin	no	no
(	no	no
TopNKeyOperator	no	no
topNKey	yes	yes
,	no	no
int	no	no
fkJoinInputIndex	no	yes
,	no	no
boolean	no	no
nonFkSideIsFiltered	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
TopNKeyDesc	no	yes
topNKeyDesc	no	yes
=	no	no
topNKey	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
CommonJoinOperator	no	yes
<	no	no
?	no	no
extends	no	no
JoinDesc	no	yes
>	no	no
join	yes	yes
=	no	no
(	no	no
CommonJoinOperator	no	yes
<	no	no
?	no	no
extends	no	no
JoinDesc	no	yes
>	no	no
)	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
joinInputs	no	yes
=	no	no
join	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
;	no	no
ReduceSinkOperator	no	yes
fkJoinInput	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
joinInputs	no	yes
.	no	no
get	no	yes
(	no	no
fkJoinInputIndex	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nonFkSideIsFiltered	no	no
)	no	no
{	no	no

private	no	no
void	no	no
pushdownInnerJoin	no	no
(	no	no
TopNKeyOperator	no	yes
topNKey	yes	yes
,	no	no
int	no	no
fkJoinInputIndex	no	yes
,	no	no
boolean	no	no
nonFkSideIsFiltered	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
TopNKeyDesc	no	yes
topNKeyDesc	no	yes
=	no	no
topNKey	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
CommonJoinOperator	no	yes
<	no	no
?	no	no
extends	no	no
JoinDesc	no	yes
>	no	no
join	yes	yes
=	no	no
(	no	no
CommonJoinOperator	no	yes
<	no	no
?	no	no
extends	no	no
JoinDesc	no	yes
>	no	no
)	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>>	no	no
joinInputs	no	yes
=	no	no
join	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
;	no	no
ReduceSinkOperator	no	yes
fkJoinInput	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
joinInputs	no	yes
.	no	no
get	no	yes
(	no	no
fkJoinInputIndex	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
nonFkSideIsFiltered	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
join	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
CommonKeyPrefix	no	yes
commonKeyPrefix	no	yes
=	no	no
CommonKeyPrefix	no	yes
.	no	no
map	no	yes
(	no	no
mapUntilColumnEquals	no	yes
(	no	no
topNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
join	yes	yes
.	no	no
getColumnExprMap	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
topNKeyDesc	no	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	no	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
,	no	no
fkJoinInput	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getKeyCols	no	yes
(	no	no
)	no	no
,	no	no
fkJoinInput	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getColumnExprMap	no	yes
(	no	no
)	no	no
,	no	no
fkJoinInput	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getOrder	no	yes
(	no	no
)	no	no
,	no	no
fkJoinInput	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
commonKeyPrefix	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
topNKeyDesc	no	yes
.	no	no
getPartitionKeyColumns	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
join	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
fkJoinInput	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
TopNKeyDesc	no	yes
newTopNKeyDesc	no	yes
=	no	no
topNKeyDesc	no	yes
.	no	no
combine	no	yes
(	no	no
commonKeyPrefix	no	yes
)	no	no
;	no	no
pushdown	no	yes
(	no	no
(	no	no
TopNKeyOperator	no	yes
)	no	no
copyDown	no	yes
(	no	no
fkJoinInput	no	yes
,	no	no
newTopNKeyDesc	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
topNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
pushdownThroughTopNKey	no	no
(	no	no
TopNKeyOperator	no	yes
topNKey	yes	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
TopNKeyOperator	no	yes
parent	yes	yes
=	no	no
(	no	no
TopNKeyOperator	no	yes
)	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hasSameTopNKeyDesc	no	no
(	no	no
parent	yes	yes
,	no	no
topNKey	yes	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

TopNKeyOperator	no	yes
parent	no	yes
=	no	no
(	no	no
TopNKeyOperator	no	yes
)	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hasSameTopNKeyDesc	no	no
(	no	no
parent	no	yes
,	no	no
topNKey	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
parent	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
parent	no	yes
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
TopNKeyDesc	no	yes
topNKeyDesc	no	yes
=	no	no
topNKey	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
TopNKeyDesc	no	yes
parentTopNKeyDesc	no	yes
=	no	no
parent	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
CommonKeyPrefix	no	yes
commonKeyPrefix	no	yes
=	no	no
CommonKeyPrefix	no	yes
.	no	no
map	no	yes
(	no	no
topNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	no	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	no	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	no	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	no	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
topNKeyDesc	no	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
==	no	no
parentTopNKeyDesc	no	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
topNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pushdownThroughParent	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
topNKey	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
OperatorType	no	no
.	no	no
TOPNKEY	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
parent	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
parentTopNKeyDesc	no	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no

return	no	no
;	no	no
}	no	no
TopNKeyDesc	no	yes
topNKeyDesc	yes	yes
=	no	no
topNKey	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
TopNKeyDesc	no	yes
parentTopNKeyDesc	yes	yes
=	no	no
parent	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
CommonKeyPrefix	no	yes
commonKeyPrefix	no	yes
=	no	no
CommonKeyPrefix	no	yes
.	no	no
map	no	yes
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	yes	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	yes	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
==	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pushdownThroughParent	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
topNKey	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
OperatorType	no	no
.	no	no
TOPNKEY	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
parent	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
parent	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
parent	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
&&	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
>	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getTopN	no	no
(	no	no
)	no	no
)	no	no
{	no	no

TopNKeyDesc	no	yes
parentTopNKeyDesc	yes	yes
=	no	no
parent	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
CommonKeyPrefix	no	yes
commonKeyPrefix	no	yes
=	no	no
CommonKeyPrefix	no	yes
.	no	no
map	no	yes
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	yes	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	yes	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getColumnSortOrder	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getNullOrder	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
==	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pushdownThroughParent	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
topNKey	yes	yes
.	no	no
getChildOperators	no	no
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
OperatorType	no	no
.	no	no
TOPNKEY	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
parent	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
parent	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
parent	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
&&	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getKeyColumns	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
commonKeyPrefix	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
topNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
>	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
topNKey	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
parent	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
topNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
,	no	no
parentTopNKeyDesc	yes	yes
.	no	no
getTopN	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
topNKey	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
removeChildAndAdoptItsChildren	no	yes
(	no	no
topNKey	yes	yes
)	no	no
;	no	no

boolean	no	no
isSupportedType	no	yes
=	no	no
(	no	no
qb	no	yes
.	no	no
getIsQuery	no	yes
(	no	no
)	no	no
)	no	no
||	no	no
qb	no	yes
.	no	no
isCTAS	no	yes
(	no	no
)	no	no
||	no	no
qb	no	yes
.	no	no
isMaterializedView	no	yes
(	no	no
)	no	no
||	no	no
cboCtx	no	yes
.	no	no
type	no	yes
==	no	no
PreCboCtx	no	yes
.	no	no
Type	no	yes
.	no	no
INSERT	no	yes
||	no	no
cboCtx	no	yes
.	no	no
type	no	yes
==	no	no
PreCboCtx	no	yes
.	no	no
Type	no	yes
.	no	no
MULTI_INSERT	no	yes
;	no	no
boolean	no	no
noBadTokens	no	yes
=	no	no
HiveCalciteUtil	no	yes
.	no	no
validateASTForUnsupportedTokens	no	yes
(	no	no
ast	no	yes
)	no	no
;	no	no
boolean	no	no
result	no	yes
=	no	no
isSupportedRoot	no	yes
&&	no	no
isSupportedType	no	yes
&&	no	no
noBadTokens	no	yes
;	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
if	no	no
(	no	no
!	no	no
result	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isSupportedRoot	no	yes
)	no	no
{	no	no
msg	yes	yes
+=	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isSupportedType	no	yes
)	no	no
{	no	no
msg	yes	yes
+=	no	no
+	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
noBadTokens	no	yes
)	no	no
{	no	no
msg	yes	yes
+=	no	no
;	no	no
}	no	no
if	no	no
(	no	no
msg	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
msg	yes	yes
+=	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
msg	yes	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
msg	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
needToLogMessage	no	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
!	no	no
isSupportedType	no	no
)	no	no
{	no	no
msg	yes	yes
+=	no	no
+	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
noBadTokens	no	no
)	no	no
{	no	no
msg	yes	yes
+=	no	no
;	no	no
}	no	no
if	no	no
(	no	no
msg	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
msg	yes	yes
+=	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
msg	yes	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
msg	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
needToLogMessage	no	yes
)	no	no
{	no	no
STATIC_LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
return	no	no
Pair	no	yes
.	no	no
of	no	yes
(	no	no
false	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
CalcitePlanner	no	yes
.	no	no
canHandleQbForCbo	no	yes
(	no	no
queryProperties	no	yes
,	no	no
conf	no	yes
,	no	no
true	no	no
,	no	no
needToLogMessage	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
msg	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
Pair	no	yes
.	no	no
of	no	yes
(	no	no
true	no	no
,	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
msg	yes	yes
=	no	no
msg	yes	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
msg	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
needToLogMessage	no	yes
)	no	no
{	no	no

analyzer	no	yes
.	no	no
initCtx	no	yes
(	no	no
ctx	no	yes
)	no	no
;	no	no
analyzer	no	yes
.	no	no
init	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
analyzer	no	yes
.	no	no
aliasToCTEs	no	yes
.	no	no
putAll	no	yes
(	no	no
aliasToCTEs	no	yes
)	no	no
;	no	no
HiveOperation	no	yes
operation	no	yes
=	no	no
queryState	no	yes
.	no	no
getHiveOperation	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
analyzer	no	yes
.	no	no
analyzeInternal	no	yes
(	no	no
createTable	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
queryState	no	yes
.	no	no
setCommandType	no	yes
(	no	no
operation	no	yes
)	no	no
;	no	no
}	no	no
Table	no	yes
table	no	yes
=	no	no
analyzer	no	yes
.	no	no
tableDesc	no	yes
.	no	no
toTable	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Path	no	yes
location	yes	yes
=	no	no
table	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
location	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
mkdirs	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
table	no	yes
.	no	no
setMaterializedTable	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

Operator	no	no
getOptimizedHiveOPDag	no	no
(	no	no
RelNode	no	yes
optimizedOptiqPlan	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
RelNode	no	yes
modifiedOptimizedOptiqPlan	yes	yes
=	no	no
PlanModifierForReturnPath	no	yes
.	no	no
convertOpTree	no	yes
(	no	no
optimizedOptiqPlan	no	yes
,	no	no
resultSchema	no	yes
,	no	no
this	no	no
.	no	no
getQB	no	yes
(	no	no
)	no	no
.	no	no
getTableDesc	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
;	no	no

public	no	no
static	no	no
URI	no	yes
getValidatedURI	no	no
(	no	no
HiveConf	no	yes
conf	no	yes
,	no	no
String	no	yes
dcPath	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
try	no	no
{	no	no
boolean	no	no
testMode	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVETESTMODE	no	yes
)	no	no
||	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEEXIMTESTMODE	no	yes
)	no	no
;	no	no
URI	no	yes
uri	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dcPath	no	yes
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
uri	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
String	no	yes
scheme	no	yes
=	no	no
fs	no	yes
.	no	no
getScheme	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
authority	no	yes
=	no	no
uri	no	yes
.	no	no
getAuthority	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
path	yes	yes
=	no	no
uri	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
explainOptions	no	no
==	no	no
HiveParser	no	no
.	no	no
KW_LOCKS	no	no
)	no	no
{	no	no
config	no	yes
.	no	no
setLocks	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
explainOptions	no	no
==	no	no
HiveParser	no	no
.	no	no
KW_AST	no	no
)	no	no
{	no	no
config	no	yes
.	no	no
setAst	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
explainOptions	no	no
==	no	no
HiveParser	no	no
.	no	no
KW_DEBUG	no	no
)	no	no
{	no	no
config	no	yes
.	no	no
setDebug	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
}	no	no
i	no	yes
++	no	no
;	no	no
}	no	no
ctx	no	yes
.	no	no
setExplainConfig	no	yes
(	no	no
config	no	yes
)	no	no
;	no	no
ctx	no	yes
.	no	no
setExplainPlan	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
ASTNode	no	yes
input	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
ast	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
config	no	yes
.	no	no
getAnalyze	no	no
(	no	no
)	no	no
==	no	no
AnalyzeState	no	no
.	no	no
RUNNING	no	no
)	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
ctx	no	yes
.	no	no
getTokenRewriteStream	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
input	no	yes
.	no	no
getTokenStartIndex	no	yes
(	no	no
)	no	no
,	no	no
input	no	yes
.	no	no
getTokenStopIndex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
query	yes	yes
)	no	no
;	no	no
conf	no	yes
.	no	no
unset	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
setupReduceSink	no	no
(	no	no
GenTezProcContext	no	no
context	no	no
,	no	no
ReduceWork	no	no
reduceWork	yes	no
,	no	no
ReduceSinkOperator	no	no
reduceSink	yes	no
)	no	no
{	no	no

SemiJoinBranchInfo	no	yes
sjInfo	no	yes
=	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
BaseWork	no	yes
>	no	no
rsWorkList	no	yes
=	no	no
procCtx	no	yes
.	no	no
childToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjInfo	no	yes
==	no	no
null	no	no
||	no	no
rsWorkList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
rsWorkList	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
1	no	no
)	no	no
{	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
BaseWork	no	yes
curWork	no	yes
:	no	no
rsWorkList	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
sb	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
curWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
rs	no	yes
+	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
TableScanOperator	no	yes
ts	no	yes
=	no	no
sjInfo	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rs	no	yes
+	no	no
+	no	no
ts	no	yes
)	no	no
;	no	no
BaseWork	no	yes
parentWork	yes	yes
=	no	no
rsWorkList	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
BaseWork	no	yes
childWork	yes	yes
=	no	no
procCtx	no	yes
.	no	no
rootToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
ts	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
removeSemiJoinOperator	no	no
(	no	no
ParseContext	no	no
context	no	no
,	no	no
ReduceSinkOperator	no	no
rs	yes	no
,	no	no
TableScanOperator	no	no
ts	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

public	no	no
static	no	no
void	no	no
removeSemiJoinOperator	no	no
(	no	no
ParseContext	no	no
context	no	no
,	no	no
AppMasterEventOperator	no	no
eventOp	yes	no
,	no	no
TableScanOperator	no	no
ts	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

private	no	no
static	no	no
Integer	no	no
obtainBufferSize	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
op	no	yes
,	no	no
ReduceSinkOperator	no	no
rsOp	yes	no
,	no	no
int	no	no
defaultTinyBufferSize	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
GroupByOperator	no	yes
)	no	no
{	no	no
GroupByOperator	no	yes
groupByOperator	no	yes
=	no	no
(	no	no
GroupByOperator	no	yes
)	no	no
op	no	yes
;	no	no
if	no	no
(	no	no
groupByOperator	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getKeys	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
groupByOperator	no	yes
.	no	no
getConf	no	no
(	no	no
)	no	no
.	no	no
getMode	no	no
(	no	no
)	no	no
==	no	no
GroupByDesc	no	no
.	no	no
Mode	no	no
.	no	no
MERGEPARTIAL	no	no
)	no	no
{	no	no
int	no	no
result	yes	yes
=	no	no
defaultTinyBufferSize	no	yes
==	no	no
-	no	no
1	no	no
?	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
ceil	no	yes
(	no	no
(	no	no
double	no	no
)	no	no
groupByOperator	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
.	no	no
getDataSize	no	yes
(	no	no
)	no	no
/	no	no
1E6	no	no
)	no	no
:	no	no
defaultTinyBufferSize	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
connectUnionWorkWithWork	no	no
(	no	no
UnionWork	no	no
unionWork	yes	no
,	no	no
BaseWork	no	no
work	yes	no
,	no	no
TezWork	no	no
tezWork	no	no
,	no	no
GenTezProcContext	no	no
context	no	no
)	no	no
{	no	no

String	no	yes
dbname	no	yes
=	no	no
rv	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
overrideDBName	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
overrideDBName	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
dbname	no	yes
=	no	no
overrideDBName	no	yes
;	no	no
}	no	no
ImportTableDesc	no	yes
tblDesc	yes	yes
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
metastore	no	yes
.	no	no
api	no	yes
.	no	no
Table	no	yes
tblObj	no	yes
=	no	no
rv	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
tblDesc	yes	yes
=	no	no
getBaseCreateTableDescFromTable	no	yes
(	no	no
dbname	no	yes
,	no	no
tblObj	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
inReplicationScope	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
(	no	no
replicationSpec	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
replicationSpec	no	yes
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tblDesc	yes	yes
.	no	no
setReplicationSpec	no	yes
(	no	no
replicationSpec	no	yes
)	no	no
;	no	no
inReplicationScope	no	yes
=	no	no
true	no	no
;	no	no
tblDesc	yes	yes
.	no	no
setReplWriteId	no	yes
(	no	no
writeId	no	yes
)	no	no
;	no	no
tblDesc	yes	yes
.	no	no
setOwnerName	no	yes
(	no	no
tblObj	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
static	no	no
AlterTableAddPartitionDesc	no	no
getBaseAddPartitionDescFromPartition	no	no
(	no	no
Path	no	no
fromPath	no	no
,	no	no
String	no	yes
dbName	no	no
,	no	no
ImportTableDesc	no	no
tblDesc	no	yes
,	no	no
Partition	no	no
partition	yes	yes
,	no	no
ReplicationSpec	no	no
replicationSpec	no	no
,	no	no
HiveConf	no	no
conf	no	yes
)	no	no
throws	no	no
MetaException	no	no
,	no	no
SemanticException	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partitionSpec	no	yes
=	no	no
EximUtil	no	yes
.	no	no
makePartSpec	no	yes
(	no	no
tblDesc	no	yes
.	no	no
getPartCols	no	yes
(	no	no
)	no	no
,	no	no
partition	yes	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StorageDescriptor	no	yes
sd	no	yes
=	no	no
partition	yes	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
location	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
replicationSpec	no	no
.	no	no
isInReplicationScope	no	no
(	no	no
)	no	no
&&	no	no
tblDesc	no	yes
.	no	no
isExternal	no	no
(	no	no
)	no	no
)	no	no
{	no	no
location	yes	yes
=	no	no
ReplExternalTables	no	yes
.	no	no
externalTableLocation	no	yes
(	no	no
conf	no	yes
,	no	no
partition	yes	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
srcs	no	yes
==	no	no
null	no	no
||	no	no
srcs	no	yes
.	no	no
length	no	no
==	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ASTErrorUtils	no	yes
.	no	no
getMsg	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
INVALID_PATH	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
,	no	no
fromTree	no	yes
,	no	no
+	no	no
fromURI	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
FileStatus	no	no
oneSrc	yes	yes
:	no	no
srcs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
oneSrc	yes	yes
.	no	no
isDir	no	no
(	no	no
)	no	no
)	no	no
{	no	no
reparseAndSuperAnalyze	no	yes
(	no	no
table	yes	yes
,	no	no
fromURI	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
AcidUtils	no	yes
.	no	no
validateAcidFiles	no	yes
(	no	no
table	yes	yes
,	no	no
srcs	no	yes
,	no	no
fileSystem	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
bucketCols	no	yes
=	no	no
table	yes	yes
.	no	no
getBucketCols	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bucketCols	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
bucketCols	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
[	no	no
]	no	no
bucketArray	no	yes
=	no	no
new	no	no
boolean	no	no
[	no	no
table	yes	yes
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
Arrays	no	yes
.	no	no
fill	no	yes
(	no	no
bucketArray	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
int	no	no
numBuckets	no	yes
=	no	no
table	yes	yes
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	no
oneSrc	yes	yes
:	no	no
srcs	no	yes
)	no	no
{	no	no
String	no	yes
bucketName	no	yes
=	no	no
oneSrc	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
bucketIdStr	no	yes
=	no	no
Utilities	no	yes
.	no	no
getBucketFileNameFromPathSubString	no	yes
(	no	no
bucketName	no	yes
)	no	no
;	no	no

else	no	no
{	no	no
colList	no	yes
.	no	no
addAll	no	yes
(	no	no
parts	no	yes
)	no	no
;	no	no
}	no	no
tempTableObj	no	yes
.	no	no
setFields	no	yes
(	no	no
colList	no	yes
)	no	no
;	no	no
tempTableObj	no	yes
.	no	no
setPartCols	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
StringBuilder	no	yes
rewrittenQueryStr	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
rewrittenQueryStr	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
rewrittenQueryStr	yes	yes
.	no	no
append	no	yes
(	no	no
getFullTableNameForSQL	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
(	no	no
tableTree	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
addPartitionColsToInsert	no	yes
(	no	no
table	no	yes
.	no	no
getPartCols	no	yes
(	no	no
)	no	no
,	no	no
inpPartSpec	no	yes
,	no	no
rewrittenQueryStr	yes	yes
)	no	no
;	no	no
rewrittenQueryStr	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
rewrittenQueryStr	yes	yes
.	no	no
append	no	yes
(	no	no
tempTblName	no	yes
)	no	no
;	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
DYNAMICPARTITIONINGMODE	no	yes
,	no	no
)	no	no
;	no	no
Context	no	yes
rewrittenCtx	no	yes
;	no	no
try	no	no
{	no	no
rewrittenCtx	no	yes
=	no	no
new	no	no
Context	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
ctx	yes	yes
.	no	no
addSubContext	no	yes
(	no	no
rewrittenCtx	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
;	no	no
List	no	yes
<	no	no
ExecDriver	no	yes
>	no	no
mrtasks	no	yes
=	no	no
Utilities	no	yes
.	no	no
getMRTasks	no	yes
(	no	no
rootTasks	no	yes
)	no	no
;	no	no
boolean	no	no
hasNonLocalJob	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
ExecDriver	no	yes
mrtask	yes	yes
:	no	no
mrtasks	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
ContentSummary	no	yes
inputSummary	yes	yes
=	no	no
Utilities	no	yes
.	no	no
getInputSummary	no	yes
(	no	no
ctx	no	yes
,	no	no
mrtask	yes	yes
.	no	no
getWork	no	yes
(	no	no
)	no	no
.	no	no
getMapWork	no	yes
(	no	no
)	no	no
,	no	no
p	no	yes
)	no	no
;	no	no
int	no	no
numReducers	yes	yes
=	no	no
getNumberOfReducers	no	yes
(	no	no
mrtask	yes	yes
.	no	no
getWork	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
estimatedInput	yes	yes
;	no	no
if	no	no
(	no	no
globalLimitCtx	no	yes
!=	no	no
null	no	no
&&	no	no
globalLimitCtx	no	yes
.	no	no
isEnable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
sizePerRow	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVELIMITMAXROWSIZE	no	yes
)	no	no
;	no	no
estimatedInput	yes	yes
=	no	no
(	no	no
globalLimitCtx	no	yes
.	no	no
getGlobalOffset	no	yes
(	no	no
)	no	no
+	no	no
globalLimitCtx	no	yes
.	no	no
getGlobalLimit	no	yes
(	no	no
)	no	no
)	no	no
*	no	no
sizePerRow	no	yes
;	no	no
long	no	no
minSplitSize	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAPREDMINSPLITSIZE	no	yes
)	no	no
;	no	no
long	no	no
estimatedNumMap	no	yes
=	no	no
inputSummary	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
/	no	no
minSplitSize	no	yes
+	no	no
1	no	no
;	no	no
estimatedInput	yes	yes
=	no	no
estimatedInput	yes	yes
*	no	no
(	no	no
estimatedNumMap	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

Configuration	no	yes
conf	no	yes
=	no	no
handler	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Path	no	yes
tblPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tbl	yes	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fs	no	yes
=	no	no
wh	no	yes
.	no	no
getFs	no	yes
(	no	no
tblPath	no	yes
)	no	no
;	no	no
Date	no	yes
now	no	yes
=	no	no
new	no	no
Date	no	yes
(	no	no
)	no	no
;	no	no
SimpleDateFormat	no	yes
sdf	no	yes
=	no	no
new	no	no
SimpleDateFormat	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dateString	no	yes
=	no	no
sdf	no	yes
.	no	no
format	no	yes
(	no	no
now	no	yes
)	no	no
;	no	no
String	no	yes
exportPathString	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METADATA_EXPORT_LOCATION	no	yes
)	no	no
;	no	no
boolean	no	no
moveMetadataToTrash	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MOVE_EXPORTED_METADATA_TO_TRASH	no	yes
)	no	no
;	no	no
Path	no	yes
exportPath	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
exportPathString	no	yes
!=	no	no
null	no	no
&&	no	no
exportPathString	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
exportPath	no	yes
=	no	no
fs	no	yes
.	no	no
getHomeDirectory	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
exportPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
exportPathString	no	yes
)	no	no
;	no	no
}	no	no
Path	no	yes
metaPath	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
exportPath	no	yes
,	no	no
name	no	yes
+	no	no
+	no	no
dateString	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
createChildColumnRef	no	no
(	no	no
Tree	no	no
child	no	yes
,	no	no
String	no	yes
alias	no	no
,	no	no
List	no	no
<	no	no
ASTNode	no	no
>	no	no
newChildren	no	no
,	no	no
HashSet	no	no
<	no	no
String	no	yes
>	no	no
aliases	no	no
)	no	no
{	no	no
String	no	yes
colAlias	yes	yes
=	no	no
child	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
aliases	no	no
.	no	no
add	no	no
(	no	no
colAlias	yes	yes
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
print	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
print	no	no
(	no	no
String	no	no
msg	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
+	no	no
+	no	no
qbp	no	yes
.	no	no
getAlias	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
alias	yes	yes
:	no	no
getSubqAliases	no	no
(	no	no
)	no	no
)	no	no
{	no	no
QBExpr	no	yes
qbexpr	no	yes
=	no	no
getSubqForAlias	no	yes
(	no	no
alias	yes	yes
)	no	no
;	no	no

public	no	no
void	no	no
print	no	yes
(	no	no
String	no	no
msg	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
+	no	no
+	no	no
qbp	no	yes
.	no	no
getAlias	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
alias	yes	yes
:	no	no
getSubqAliases	no	no
(	no	no
)	no	no
)	no	no
{	no	no
QBExpr	no	yes
qbexpr	no	yes
=	no	no
getSubqForAlias	no	yes
(	no	no
alias	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
+	no	no
+	no	no
alias	yes	yes
)	no	no
;	no	no
qbexpr	no	yes
.	no	no
print	no	yes
(	no	no
msg	yes	yes
+	no	no
)	no	no
;	no	no

public	no	no
void	no	no
print	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
opcode	no	no
==	no	no
Opcode	no	no
.	no	no
NULLOP	no	no
)	no	no
{	no	no

public	no	no
void	no	no
print	no	yes
(	no	no
String	no	no
msg	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
opcode	no	no
==	no	no
Opcode	no	no
.	no	no
NULLOP	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
+	no	no
+	no	no
qb	yes	yes
)	no	no
;	no	no
qb	yes	yes
.	no	no
print	no	yes
(	no	no
msg	yes	yes
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
analyzeInternal	no	no
(	no	no
ASTNode	no	no
ast	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
setOldReplPolicy	no	no
(	no	no
Tree	no	no
oldReplPolicyTree	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
oldReplScope	yes	yes
=	no	no
new	no	no
ReplScope	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
childCount	no	yes
=	no	no
oldReplPolicyTree	no	yes
.	no	no
getChildCount	no	yes
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
childCount	no	yes
<=	no	no
2	no	no
)	no	no
;	no	no
oldReplScope	yes	yes
.	no	no
setDbName	no	yes
(	no	no
oldReplPolicyTree	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
setOldReplPolicy	no	no
(	no	no
Tree	no	no
oldReplPolicyTree	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
oldReplScope	yes	yes
=	no	no
new	no	no
ReplScope	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
childCount	no	yes
=	no	no
oldReplPolicyTree	no	yes
.	no	no
getChildCount	no	yes
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
childCount	no	yes
<=	no	no
2	no	no
)	no	no
;	no	no
oldReplScope	yes	yes
.	no	no
setDbName	no	yes
(	no	no
oldReplPolicyTree	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
oldReplScope	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
oldReplScope	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
replScope	yes	no
.	no	no
getDbName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
initReplDump	no	no
(	no	no
ASTNode	no	no
ast	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
int	no	no
numChildren	no	yes
=	no	no
ast	no	yes
.	no	no
getChildCount	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isMetaDataOnly	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
dbNameOrPattern	yes	yes
=	no	no
PlanUtils	no	yes
.	no	no
stripQuotes	no	yes
(	no	no
ast	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
null	no	no
!=	no	no
replConfigs	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
config	no	yes
:	no	no
replConfigs	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
config	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
config	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
isMetaDataOnly	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
REPL_DUMP_METADATA_ONLY	no	yes
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
TOK_REPL_TABLES	no	no
:	no	no
setReplDumpTablesList	no	no
(	no	no
currNode	no	no
,	no	no
replScope	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
TOK_REPLACE	no	no
:	no	no
setOldReplPolicy	no	no
(	no	no
currNode	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
SemanticException	no	no
(	no	no
+	no	no
currNode	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
childIdx	no	yes
++	no	no
;	no	no
}	no	no
for	no	no
(	no	no
String	no	no
dbName	no	yes
:	no	no
Utils	no	no
.	no	no
matchesDb	no	no
(	no	no
db	no	yes
,	no	no
dbNameOrPattern	yes	no
)	no	no
)	no	no
{	no	no
Database	no	yes
database	no	yes
=	no	no
db	no	yes
.	no	no
getDatabase	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
database	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isMetaDataOnly	no	yes
&&	no	no
!	no	no
ReplChangeManager	no	no
.	no	no
isSourceOfReplication	no	no
(	no	no
database	no	yes
)	no	no
)	no	no
{	no	no

}	no	no
isMetaDataOnly	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
REPL_DUMP_METADATA_ONLY	no	yes
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
TOK_REPL_TABLES	no	no
:	no	no
setReplDumpTablesList	no	no
(	no	no
currNode	no	no
,	no	no
replScope	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
TOK_REPLACE	no	no
:	no	no
setOldReplPolicy	no	no
(	no	no
currNode	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
+	no	no
currNode	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
childIdx	no	yes
++	no	no
;	no	no
}	no	no
for	no	no
(	no	no
String	no	no
dbName	no	yes
:	no	no
Utils	no	no
.	no	no
matchesDb	no	no
(	no	no
db	no	yes
,	no	no
dbNameOrPattern	yes	yes
)	no	no
)	no	no
{	no	no
Database	no	yes
database	no	yes
=	no	no
db	no	yes
.	no	no
getDatabase	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
database	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isMetaDataOnly	no	yes
&&	no	no
!	no	no
ReplChangeManager	no	no
.	no	no
isSourceOfReplication	no	no
(	no	no
database	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
dbNameOrPattern	yes	yes
+	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_DATABASE_IS_NOT_SOURCE_OF_REPLICATION	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ReplUtils	no	no
.	no	no
isTargetOfReplication	no	no
(	no	no
database	no	yes
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
assert	no	yes
(	no	no
sourceDbNameOrPattern	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
Path	no	yes
loadPath	yes	yes
=	no	no
getCurrentLoadPath	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Path	no	yes
filePath	no	yes
=	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ifEnableMoveOptimization	no	no
(	no	no
filePath	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
setBoolVar	no	yes
(	no	no
REPL_ENABLE_MOVE_OPTIMIZATION	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
filePath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ReplUtils	no	no
.	no	no
failedWithNonRecoverableError	no	no
(	no	no
ReplUtils	no	no
.	no	no
getLatestDumpPath	no	no
(	no	no
ReplUtils	no	no
.	no	no
getEncodedDumpRootPath	no	no
(	no	no
conf	no	yes
,	no	no
sourceDbNameOrPattern	no	yes
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_FAILED_WITH_NON_RECOVERABLE_ERROR	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
loadPath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
DumpMetaData	no	yes
dmd	no	yes
=	no	no
new	no	no
DumpMetaData	no	yes
(	no	no
loadPath	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Path	no	yes
filePath	no	yes
=	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ifEnableMoveOptimization	no	no
(	no	no
filePath	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
setBoolVar	no	yes
(	no	no
REPL_ENABLE_MOVE_OPTIMIZATION	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
filePath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ReplUtils	no	no
.	no	no
failedWithNonRecoverableError	no	no
(	no	no
ReplUtils	no	no
.	no	no
getLatestDumpPath	no	no
(	no	no
ReplUtils	no	no
.	no	no
getEncodedDumpRootPath	no	no
(	no	no
conf	no	yes
,	no	no
sourceDbNameOrPattern	no	no
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_FAILED_WITH_NON_RECOVERABLE_ERROR	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
loadPath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
DumpMetaData	no	yes
dmd	no	yes
=	no	no
new	no	no
DumpMetaData	no	yes
(	no	no
loadPath	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
boolean	no	no
evDump	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
dmd	no	yes
.	no	no
isIncrementalDump	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
loadPath	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
analyzeReplStatus	no	no
(	no	no
ASTNode	no	no
ast	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
initReplStatus	no	yes
(	no	no
ast	no	yes
)	no	no
;	no	no
String	no	yes
dbNameOrPattern	no	yes
=	no	no
replScope	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
replLastId	yes	yes
=	no	no
getReplStatus	no	yes
(	no	no
dbNameOrPattern	no	yes
)	no	no
;	no	no
prepareReturnValues	no	yes
(	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
replLastId	yes	yes
)	no	no
,	no	no
)	no	no
;	no	no
setFetchTask	no	yes
(	no	no
createFetchTask	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
prepareReturnValues	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
values	no	no
,	no	no
String	no	no
schema	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

private	no	no
void	no	no
prepareReturnValues	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
values	no	no
,	no	no
String	no	no
schema	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
schema	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
s	yes	no
:	no	no
values	no	no
)	no	no
{	no	no

protected	no	no
static	no	no
Table	no	yes
getTable	no	yes
(	no	no
ASTNode	no	no
tabRef	no	no
,	no	no
Hive	no	no
db	no	yes
,	no	no
boolean	no	no
throwException	no	yes
)	no	no
throws	no	no
SemanticException	no	yes
{	no	no
TableName	no	yes
tableName	yes	yes
;	no	no
switch	no	no
(	no	no
tabRef	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
HiveParser	no	no
.	no	no
TOK_TABREF	no	no
:	no	no
tableName	yes	yes
=	no	no
getQualifiedTableName	no	no
(	no	no
(	no	no
ASTNode	no	no
)	no	no
tabRef	no	no
.	no	no
getChild	no	no
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
HiveParser	no	no
.	no	no
TOK_TABNAME	no	no
:	no	no
tableName	yes	yes
=	no	no
getQualifiedTableName	no	no
(	no	no
tabRef	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
raiseWrongType	no	no
(	no	no
,	no	no
tabRef	no	no
)	no	no
;	no	no
}	no	no
Table	no	yes
mTable	no	yes
;	no	no
try	no	no
{	no	no
mTable	no	yes
=	no	no
db	no	yes
.	no	no
getTable	no	yes
(	no	no
tableName	yes	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tableName	yes	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
,	no	no
throwException	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InvalidTableException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tableName	yes	yes
.	no	no
getNotEmptyDbTable	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
INVALID_TABLE	no	yes
.	no	no
getMsg	no	yes
(	no	no
tableName	yes	yes
.	no	no
getNotEmptyDbTable	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no

Context	no	yes
rewrittenCtx	no	yes
;	no	no
try	no	no
{	no	no
rewrittenCtx	no	yes
=	no	no
new	no	no
Context	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setHDFSCleanup	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
ctx	no	yes
.	no	no
addSubContext	no	yes
(	no	no
rewrittenCtx	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
UPDATEDELETE_IO_ERROR	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
rewrittenCtx	no	yes
.	no	no
setExplainConfig	no	yes
(	no	no
ctx	no	yes
.	no	no
getExplainConfig	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setExplainPlan	no	yes
(	no	no
ctx	no	yes
.	no	no
isExplainPlan	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setStatsSource	no	yes
(	no	no
ctx	no	yes
.	no	no
getStatsSource	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setPlanMapper	no	yes
(	no	no
ctx	no	yes
.	no	no
getPlanMapper	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setIsUpdateDeleteMerge	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
rewrittenCtx	no	yes
.	no	no
setCmd	no	yes
(	no	no
rewrittenQueryStr	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ASTNode	no	yes
rewrittenTree	no	yes
;	no	no
try	no	no
{	no	no

protected	no	no
void	no	no
validateTargetTable	no	no
(	no	no
Table	no	no
mTable	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
mTable	yes	no
.	no	no
getTableType	no	no
(	no	no
)	no	no
==	no	no
TableType	no	no
.	no	no
VIRTUAL_VIEW	no	no
||	no	no
mTable	yes	no
.	no	no
getTableType	no	no
(	no	no
)	no	no
==	no	no
TableType	no	no
.	no	no
MATERIALIZED_VIEW	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
analyzeInternal	no	no
(	no	no
ASTNode	no	no
ast	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
ScheduledQueryMaintenanceWork	no	yes
work	no	yes
;	no	no
ScheduledQueryMaintenanceRequestType	no	yes
type	yes	yes
=	no	no
translateAstType	no	yes
(	no	no
ast	no	yes
.	no	no
getToken	no	yes
(	no	no
)	no	no
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ScheduledQuery	no	yes
parsedSchq	no	yes
=	no	no
interpretAstNode	no	yes
(	no	no
ast	no	yes
)	no	no
;	no	no
ScheduledQuery	no	yes
schq	yes	yes
=	no	no
fillScheduledQuery	no	yes
(	no	no
type	yes	yes
,	no	no
parsedSchq	no	yes
)	no	no
;	no	no
checkAuthorization	no	yes
(	no	no
type	yes	yes
,	no	no
schq	yes	yes
)	no	no
;	no	no

private	no	no
ScheduledQuery	no	no
interpretAstNode	no	no
(	no	no
ASTNode	no	no
ast	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
String	no	yes
scheduleName	no	yes
=	no	no
ast	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
clusterNamespace	yes	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SCHEDULED_QUERIES_NAMESPACE	no	yes
)	no	no
;	no	no

analyzer	no	yes
.	no	no
initCtx	no	yes
(	no	no
ctx	no	yes
)	no	no
;	no	no
analyzer	no	yes
.	no	no
init	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
analyzer	no	yes
.	no	no
aliasToCTEs	no	yes
.	no	no
putAll	no	yes
(	no	no
aliasToCTEs	no	yes
)	no	no
;	no	no
HiveOperation	no	yes
operation	no	yes
=	no	no
queryState	no	yes
.	no	no
getHiveOperation	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
analyzer	no	yes
.	no	no
analyzeInternal	no	yes
(	no	no
createTable	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
queryState	no	yes
.	no	no
setCommandType	no	yes
(	no	no
operation	no	yes
)	no	no
;	no	no
}	no	no
Table	no	yes
table	no	yes
=	no	no
analyzer	no	yes
.	no	no
tableDesc	no	yes
.	no	no
toTable	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Path	no	yes
location	yes	yes
=	no	no
table	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
location	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
mkdirs	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
table	no	yes
.	no	no
setMaterializedTable	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

private	no	no
int	no	no
processQueryHint	no	no
(	no	no
ASTNode	no	no
ast	no	yes
,	no	no
QBParseInfo	no	no
qbp	no	no
,	no	no
int	no	no
posn	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
ParseDriver	no	yes
pd	no	yes
=	no	no
new	no	no
ParseDriver	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
queryHintStr	yes	yes
=	no	no
ast	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
}	no	no
if	no	no
(	no	no
skip	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
args	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
joinKeys	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
nextExpr	no	yes
=	no	no
ExprNodeGenericFuncDesc	no	yes
.	no	no
newInstance	no	yes
(	no	no
FunctionRegistry	no	yes
.	no	no
getFunctionInfo	no	yes
(	no	no
)	no	no
.	no	no
getGenericUDF	no	yes
(	no	no
)	no	no
,	no	no
args	no	yes
)	no	no
;	no	no
filterPred	no	yes
=	no	no
filterPred	no	yes
==	no	no
null	no	no
?	no	no
nextExpr	no	yes
:	no	no
ExprNodeDescUtils	no	yes
.	no	no
mergePredicates	no	yes
(	no	no
filterPred	no	yes
,	no	no
nextExpr	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
filterPred	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
input	no	yes
;	no	no
}	no	no
OpParseContext	no	yes
inputCtx	no	yes
=	no	no
opParseCtx	no	yes
.	no	no
get	no	yes
(	no	no
input	no	yes
)	no	no
;	no	no
RowResolver	no	yes
inputRR	yes	yes
=	no	no
inputCtx	no	yes
.	no	no
getRowResolver	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
input	no	yes
instanceof	no	no
FilterOperator	no	yes
)	no	no
{	no	no
FilterOperator	no	yes
f	no	yes
=	no	no
(	no	no
FilterOperator	no	yes
)	no	no
input	no	yes
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
preds	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
preds	no	yes
.	no	no
add	no	yes
(	no	no
f	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getPredicate	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
preds	no	yes
.	no	no
add	no	yes
(	no	no
filterPred	no	yes
)	no	no
;	no	no

private	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
genSelectPlan	no	yes
(	no	no
String	no	no
dest	yes	yes
,	no	no
QB	no	no
qb	no	yes
,	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
input	no	yes
,	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
inputForSelectStar	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
ASTNode	no	yes
selExprList	no	yes
=	no	no
qb	no	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getSelForClause	no	yes
(	no	no
dest	yes	yes
)	no	no
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
op	no	yes
=	no	no
genSelectPlan	no	yes
(	no	no
dest	yes	yes
,	no	no
selExprList	no	yes
,	no	no
qb	no	yes
,	no	no
input	no	yes
,	no	no
inputForSelectStar	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
private	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
genSelectPlan	no	no
(	no	no
String	no	no
dest	no	no
,	no	no
ASTNode	no	no
selExprList	yes	no
,	no	no
QB	no	no
qb	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
input	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
inputForSelectStar	no	no
,	no	no
boolean	no	no
outerLV	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

unparseTranslator	no	yes
.	no	no
addIdentifierTranslation	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
udtfExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isUDTF	no	no
&&	no	no
(	no	no
selectStar	no	no
=	no	no
udtfExprType	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_FUNCTIONSTAR	no	no
)	no	no
)	no	no
{	no	no
genExprNodeDescRegex	no	yes
(	no	no
,	no	no
null	no	no
,	no	no
(	no	no
ASTNode	no	yes
)	no	no
udtfExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
colList	no	yes
,	no	no
null	no	no
,	no	no
inputRR	no	yes
,	no	no
starRR	no	yes
,	no	no
pos	no	yes
,	no	no
out_rwsch	no	yes
,	no	no
qb	no	yes
.	no	no
getAliases	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
isUDTF	no	no
)	no	no
{	no	no
if	no	no
(	no	no
selExprList	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
generateErrorMessage	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
ErrorMsg	no	yes
.	no	no
UDTF_MULTIPLE_EXPR	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ASTNode	no	yes
selExpr	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
posn	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<	no	no
selExpr	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ASTNode	no	yes
selExprChild	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
switch	no	no
(	no	no
selExprChild	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
HiveParser	no	no
.	no	no
Identifier	no	no
:	no	no
udtfColAliases	no	no
.	no	no
add	no	no
(	no	no
unescapeIdentifier	no	yes
(	no	no
selExprChild	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
unparseTranslator	no	yes
.	no	no
addIdentifierTranslation	no	yes
(	no	no
selExprChild	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
HiveParser	no	no
.	no	no
TOK_TABALIAS	no	no
:	no	no
assert	no	no
(	no	no
selExprChild	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
;	no	no
udtfTableAlias	yes	yes
=	no	no
unescapeIdentifier	no	yes
(	no	no
selExprChild	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

unparseTranslator	no	yes
.	no	no
addIdentifierTranslation	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
udtfExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isUDTF	no	no
&&	no	no
(	no	no
selectStar	no	no
=	no	no
udtfExprType	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_FUNCTIONSTAR	no	no
)	no	no
)	no	no
{	no	no
genExprNodeDescRegex	no	yes
(	no	no
,	no	no
null	no	no
,	no	no
(	no	no
ASTNode	no	yes
)	no	no
udtfExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
colList	no	yes
,	no	no
null	no	no
,	no	no
inputRR	no	yes
,	no	no
starRR	no	yes
,	no	no
pos	no	yes
,	no	no
out_rwsch	no	yes
,	no	no
qb	no	yes
.	no	no
getAliases	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
isUDTF	no	no
)	no	no
{	no	no
if	no	no
(	no	no
selExprList	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
generateErrorMessage	no	yes
(	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
1	no	no
)	no	no
,	no	no
ErrorMsg	no	yes
.	no	no
UDTF_MULTIPLE_EXPR	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ASTNode	no	yes
selExpr	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
posn	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
1	no	no
;	no	no
i	no	yes
<	no	no
selExpr	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
ASTNode	no	yes
selExprChild	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExpr	no	yes
.	no	no
getChild	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
switch	no	no
(	no	no
selExprChild	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
case	no	no
HiveParser	no	no
.	no	no
Identifier	no	no
:	no	no
udtfColAliases	yes	no
.	no	no
add	no	no
(	no	no
unescapeIdentifier	no	yes
(	no	no
selExprChild	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
unparseTranslator	no	yes
.	no	no
addIdentifierTranslation	no	yes
(	no	no
selExprChild	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
HiveParser	no	no
.	no	no
TOK_TABALIAS	no	no
:	no	no
assert	no	no
(	no	no
selExprChild	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
;	no	no
udtfTableAlias	no	yes
=	no	no
unescapeIdentifier	no	yes
(	no	no
selExprChild	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
expr	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
DOT	no	no
&&	no	no
expr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_TABLE_OR_COL	no	no
&&	no	no
inputRR	no	yes
.	no	no
hasTableAlias	no	no
(	no	no
unescapeIdentifier	no	yes
(	no	no
expr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
hasAsClause	no	no
&&	no	no
!	no	no
inputRR	no	yes
.	no	no
getIsExprResolver	no	no
(	no	no
)	no	no
&&	no	no
isRegex	no	no
(	no	no
unescapeIdentifier	no	yes
(	no	no
expr	no	yes
.	no	no
getChild	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
conf	no	no
)	no	no
)	no	no
{	no	no
pos	no	yes
=	no	no
genExprNodeDescRegex	no	yes
(	no	no
unescapeIdentifier	no	yes
(	no	no
expr	no	yes
.	no	no
getChild	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
unescapeIdentifier	no	yes
(	no	no
expr	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
expr	no	yes
,	no	no
colList	no	yes
,	no	no
null	no	no
,	no	no
inputRR	no	yes
,	no	no
starRR	no	yes
,	no	no
pos	no	yes
,	no	no
out_rwsch	yes	yes
,	no	no
qb	no	yes
.	no	no
getAliases	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
TypeCheckCtx	no	yes
tcCtx	no	yes
=	no	no
new	no	no
TypeCheckCtx	no	yes
(	no	no
inputRR	no	yes
,	no	no
true	no	no
,	no	no
isCBOExecuted	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
tcCtx	no	yes
.	no	no
setAllowStatefulFunctions	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
tcCtx	no	yes
.	no	no
setAllowDistinctFunctions	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isCBOExecuted	no	yes
(	no	no
)	no	no
&&	no	no
!	no	no
qb	no	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getDestToGroupBy	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
expr	no	yes
=	no	no
rewriteGroupingFunctionAST	no	yes
(	no	no
getGroupByForClause	no	yes
(	no	no
qb	no	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
,	no	no
dest	no	yes
)	no	no
,	no	no
expr	no	yes
,	no	no
!	no	no
cubeRollupGrpSetPresent	no	yes
)	no	no
;	no	no
}	no	no
ExprNodeDesc	no	yes
exp	no	yes
=	no	no
genExprNodeDesc	no	yes
(	no	no
expr	no	yes
,	no	no
inputRR	no	yes
,	no	no
tcCtx	no	yes
)	no	no
;	no	no
String	no	yes
recommended	no	yes
=	no	no
recommendName	no	yes
(	no	no
exp	no	yes
,	no	no
colAlias	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
recommended	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
colAliases	no	no
.	no	no
contains	no	no
(	no	no
recommended	no	yes
)	no	no
&&	no	no
out_rwsch	yes	yes
.	no	no
get	no	no
(	no	no
null	no	no
,	no	no
recommended	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
colAlias	no	yes
=	no	no
recommended	no	yes
;	no	no
}	no	no
colList	no	yes
.	no	no
add	no	yes
(	no	no
exp	no	yes
)	no	no
;	no	no
ColumnInfo	no	yes
colInfo	no	yes
=	no	no
new	no	no
ColumnInfo	no	yes
(	no	no
getColumnInternalName	no	yes
(	no	no
pos	no	yes
)	no	no
,	no	no
exp	no	yes
.	no	no
getWritableObjectInspector	no	yes
(	no	no
)	no	no
,	no	no
tabAlias	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
colInfo	no	yes
.	no	no
setSkewedCol	no	yes
(	no	no
(	no	no
exp	no	yes
instanceof	no	no
ExprNodeColumnDesc	no	yes
)	no	no
&&	no	no
(	no	no
(	no	no
ExprNodeColumnDesc	no	yes
)	no	no
exp	no	yes
)	no	no
.	no	no
isSkewedCol	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

newColList	no	yes
.	no	no
add	no	yes
(	no	no
targetCol2Projection	no	yes
.	no	no
get	no	yes
(	no	no
f	no	yes
)	no	no
)	no	no
;	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
targetCol2ColumnInfo	no	yes
.	no	no
get	no	yes
(	no	no
f	no	yes
)	no	no
;	no	no
ci	no	yes
.	no	no
setInternalName	no	yes
(	no	no
getColumnInternalName	no	yes
(	no	no
colListPos	no	yes
)	no	no
)	no	no
;	no	no
newOutputRR	no	yes
.	no	no
put	no	yes
(	no	no
ci	no	yes
.	no	no
getTabAlias	no	yes
(	no	no
)	no	no
,	no	no
ci	no	yes
.	no	no
getInternalName	no	yes
(	no	no
)	no	no
,	no	no
ci	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
assert	no	yes
(	no	no
colNameToDefaultVal	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
exp	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
colNameToDefaultVal	no	yes
.	no	no
containsKey	no	no
(	no	no
f	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
defaultValue	no	yes
=	no	no
colNameToDefaultVal	no	yes
.	no	no
get	no	yes
(	no	no
f	no	yes
)	no	no
;	no	no
ParseDriver	no	yes
parseDriver	no	yes
=	no	no
new	no	no
ParseDriver	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ASTNode	no	yes
defValAst	no	yes
=	no	no
parseDriver	no	yes
.	no	no
parseExpression	no	yes
(	no	no
defaultValue	no	yes
)	no	no
;	no	no
exp	yes	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
genExprNode	no	yes
(	no	no
defValAst	no	yes
,	no	no
new	no	no
TypeCheckCtx	no	yes
(	no	no
null	no	no
)	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
defValAst	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
+	no	no
defaultValue	no	yes
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
(	no	no
dest_tab	no	yes
.	no	no
getSortCols	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
dest_tab	no	yes
.	no	no
getSortCols	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
)	no	no
{	no	no
sortCols	no	yes
=	no	no
getSortCols	no	yes
(	no	no
dest	no	yes
,	no	no
qb	no	yes
,	no	no
dest_tab	no	yes
,	no	no
table_desc	no	yes
,	no	no
input	no	yes
)	no	no
;	no	no
sortOrders	no	yes
=	no	no
getSortOrders	no	yes
(	no	no
dest_tab	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
enforceBucketing	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
TBL_SORTED_NOT_BUCKETED	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
dest_tab	no	yes
.	no	no
getCompleteName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SORT_WHEN_BUCKETING	no	no
)	no	no
&&	no	no
enforceBucketing	no	no
&&	no	no
!	no	no
updating	no	no
(	no	no
dest	no	yes
)	no	no
&&	no	no
!	no	no
deleting	no	no
(	no	no
dest	no	yes
)	no	no
)	no	no
{	no	no
sortCols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	no
expr	no	yes
:	no	no
partnCols	no	no
)	no	no
{	no	no
sortCols	no	yes
.	no	no
add	no	yes
(	no	no
expr	no	yes
.	no	no
clone	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
sortOrders	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
sortCols	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
sortOrders	no	yes
.	no	no
add	no	yes
(	no	no
DirectionUtils	no	yes
.	no	no
ASCENDING_CODE	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
enforceBucketing	no	no
)	no	no
{	no	no
Operation	no	yes
acidOp	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
isFullAcidTable	no	yes
(	no	no
dest_tab	no	yes
)	no	no
?	no	no
getAcidType	no	yes
(	no	no
table_desc	no	yes
.	no	no
getOutputFileFormatClass	no	yes
(	no	no
)	no	no
,	no	no
dest	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
isInsertOnlyTable	no	yes
(	no	no
dest_tab	no	yes
)	no	no
)	no	no
:	no	no
Operation	no	yes
.	no	no
NOT_ACID	no	yes
;	no	no
int	no	no
maxReducers	yes	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MAXREDUCERS	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
genAutoColumnStatsGatheringPipeline	no	no
(	no	no
Table	no	no
table	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
partSpec	no	no
,	no	no
Operator	no	no
curr	no	no
,	no	no
boolean	no	no
isInsertInto	no	no
,	no	no
boolean	no	no
useTableValueConstructor	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
private	no	no
Operator	no	yes
genLimitPlan	no	no
(	no	no
String	no	no
dest	yes	no
,	no	no
Operator	no	yes
input	no	yes
,	no	no
int	no	no
offset	no	yes
,	no	no
int	no	no
limit	no	yes
)	no	no
{	no	no
RowResolver	no	yes
inputRR	yes	yes
=	no	no
opParseCtx	no	yes
.	no	no
get	no	yes
(	no	no
input	no	yes
)	no	no
.	no	no
getRowResolver	no	yes
(	no	no
)	no	no
;	no	no
LimitDesc	no	yes
limitDesc	no	yes
=	no	no
new	no	no
LimitDesc	no	yes
(	no	no
offset	no	yes
,	no	no
limit	no	yes
)	no	no
;	no	no
globalLimitCtx	no	yes
.	no	no
setLastReduceLimitDesc	no	yes
(	no	no
limitDesc	no	yes
)	no	no
;	no	no
Operator	no	yes
limitMap	no	yes
=	no	no
putOpInsertMap	no	yes
(	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
limitDesc	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
inputRR	yes	yes
.	no	no
getColumnInfos	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
input	no	yes
)	no	no
,	no	no
inputRR	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
ASTNode	no	yes
hintNode	no	no
:	no	no
hints	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Node	no	no
node	no	yes
:	no	no
hintNode	no	no
.	no	no
getChildren	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ASTNode	no	yes
hint	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
node	no	yes
;	no	no
if	no	no
(	no	no
hint	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
!=	no	no
HintParser	no	no
.	no	no
TOK_LEFTSEMIJOIN	no	no
&&	no	no
hint	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
!=	no	no
HintParser	no	no
.	no	no
TOK_LEFTANTISEMIJOIN	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	yes	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
Tree	no	yes
args	no	yes
=	no	no
hint	no	yes
.	no	no
getChild	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
args	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
String	no	yes
text	no	yes
=	no	no
args	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
text	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
result	yes	yes
;	no	no
}	no	no
}	no	no
int	no	no
curIdx	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
curIdx	no	yes
<	no	no
args	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
)	no	no
{	no	no
curIdx	no	yes
=	no	no
parseSingleSemiJoinHint	no	yes
(	no	no
args	no	yes
,	no	no
curIdx	no	yes
,	no	no
result	yes	yes
)	no	no
;	no	no

ASTNode	no	yes
selExprList	no	yes
=	no	no
qbp	no	yes
.	no	no
getSelForClause	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
selExprList	no	yes
.	no	no
getToken	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_SELECTDI	no	no
&&	no	no
selExprList	no	yes
.	no	no
getChildCount	no	no
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getChildCount	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
ASTNode	no	yes
node	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
selExprList	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
node	no	yes
.	no	no
getToken	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_ALLCOLREF	no	no
)	no	no
{	no	no
curr	no	yes
=	no	no
genSelectPlan	no	yes
(	no	no
dest	no	yes
,	no	no
qb	yes	yes
,	no	no
curr	no	yes
,	no	no
curr	no	yes
)	no	no
;	no	no
RowResolver	no	yes
rr	no	yes
=	no	no
opParseCtx	no	yes
.	no	no
get	no	yes
(	no	no
curr	no	yes
)	no	no
.	no	no
getRowResolver	no	yes
(	no	no
)	no	no
;	no	no
qbp	no	yes
.	no	no
setSelExprForClause	no	yes
(	no	no
dest	no	yes
,	no	no
genSelectDIAST	no	yes
(	no	no
rr	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVEMAPSIDEAGGREGATE	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVEGROUPBYSKEW	no	no
)	no	no
)	no	no
{	no	no
curr	no	yes
=	no	no
genGroupByPlanMapAggrNoSkew	no	yes
(	no	no
dest	no	yes
,	no	no
qb	yes	yes
,	no	no
curr	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
curr	no	yes
=	no	no
genGroupByPlanMapAggr2MR	no	yes
(	no	no
dest	no	yes
,	no	no
qb	yes	yes
,	no	no
curr	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVEGROUPBYSKEW	no	no
)	no	no
)	no	no
{	no	no
curr	no	yes
=	no	no
genGroupByPlan2MR	no	yes
(	no	no
dest	no	yes
,	no	no
qb	yes	yes
,	no	no
curr	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

ExprNodeDesc	no	yes
numeratorExpr	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
ts	no	yes
.	no	no
getNumerator	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
denominatorExpr	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
ts	no	yes
.	no	no
getDenominator	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ExprNodeDesc	no	yes
intMaxExpr	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
args	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
planExpr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
planExpr	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
useBucketCols	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
col	no	yes
:	no	no
bucketCols	no	no
)	no	no
{	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
rwsch	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
,	no	no
col	no	yes
)	no	no
;	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
ci	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
ASTNode	no	no
expr	no	yes
:	no	no
ts	no	yes
.	no	no
getExprs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
genExprNodeDesc	no	yes
(	no	no
expr	no	yes
,	no	no
rwsch	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ExprNodeDesc	no	yes
equalsExpr	no	yes
=	no	no
null	no	no
;	no	no
{	no	no
ExprNodeDesc	no	yes
hashfnExpr	yes	yes
=	no	no
new	no	no
ExprNodeGenericFuncDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
bucketingVersion	no	yes
==	no	no
2	no	no
?	no	no
new	no	no
GenericUDFMurmurHash	no	yes
(	no	no
)	no	no
:	no	no
new	no	no
GenericUDFHash	no	yes
(	no	no
)	no	no
,	no	no
args	no	yes
)	no	no
;	no	no

ExprNodeDesc	no	yes
intMaxExpr	no	yes
=	no	no
new	no	no
ExprNodeConstantDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
Integer	no	yes
.	no	no
valueOf	no	yes
(	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
args	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
planExpr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
planExpr	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
useBucketCols	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
col	no	yes
:	no	no
bucketCols	no	no
)	no	no
{	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
rwsch	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
,	no	no
col	no	yes
)	no	no
;	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
ci	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
ASTNode	no	no
expr	no	yes
:	no	no
ts	no	no
.	no	no
getExprs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
genExprNodeDesc	no	yes
(	no	no
expr	no	yes
,	no	no
rwsch	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ExprNodeDesc	no	yes
equalsExpr	no	yes
=	no	no
null	no	no
;	no	no
{	no	no
ExprNodeDesc	no	yes
hashfnExpr	no	yes
=	no	no
new	no	no
ExprNodeGenericFuncDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
bucketingVersion	no	yes
==	no	no
2	no	no
?	no	no
new	no	no
GenericUDFMurmurHash	no	yes
(	no	no
)	no	no
:	no	no
new	no	no
GenericUDFHash	no	yes
(	no	no
)	no	no
,	no	no
args	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
hashfnExpr	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
andExpr	yes	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
getExprNodeDefaultExprProcessor	no	yes
(	no	no
)	no	no
.	no	no
getFuncExprNodeDesc	no	yes
(	no	no
,	no	no
hashfnExpr	no	yes
,	no	no
intMaxExpr	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
planExpr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
planExpr	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
useBucketCols	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
col	no	yes
:	no	no
bucketCols	no	no
)	no	no
{	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
rwsch	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
,	no	no
col	no	yes
)	no	no
;	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
ci	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
ASTNode	no	no
expr	no	yes
:	no	no
ts	no	no
.	no	no
getExprs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
genExprNodeDesc	no	yes
(	no	no
expr	no	yes
,	no	no
rwsch	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ExprNodeDesc	no	yes
equalsExpr	no	yes
=	no	no
null	no	no
;	no	no
{	no	no
ExprNodeDesc	no	yes
hashfnExpr	no	yes
=	no	no
new	no	no
ExprNodeGenericFuncDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
bucketingVersion	no	yes
==	no	no
2	no	no
?	no	no
new	no	no
GenericUDFMurmurHash	no	yes
(	no	no
)	no	no
:	no	no
new	no	no
GenericUDFHash	no	yes
(	no	no
)	no	no
,	no	no
args	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
hashfnExpr	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
andExpr	no	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
getExprNodeDefaultExprProcessor	no	yes
(	no	no
)	no	no
.	no	no
getFuncExprNodeDesc	no	yes
(	no	no
,	no	no
hashfnExpr	no	yes
,	no	no
intMaxExpr	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
andExpr	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
modExpr	yes	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
getExprNodeDefaultExprProcessor	no	yes
(	no	no
)	no	no
.	no	no
getFuncExprNodeDesc	no	yes
(	no	no
,	no	no
andExpr	no	yes
,	no	no
denominatorExpr	no	yes
)	no	no
;	no	no

else	no	no
if	no	no
(	no	no
useBucketCols	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
col	no	yes
:	no	no
bucketCols	no	no
)	no	no
{	no	no
ColumnInfo	no	yes
ci	no	yes
=	no	no
rwsch	no	yes
.	no	no
get	no	yes
(	no	no
alias	no	yes
,	no	no
col	no	yes
)	no	no
;	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ExprNodeColumnDesc	no	yes
(	no	no
ci	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
ASTNode	no	no
expr	no	yes
:	no	no
ts	no	no
.	no	no
getExprs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
args	no	yes
.	no	no
add	no	yes
(	no	no
genExprNodeDesc	no	yes
(	no	no
expr	no	yes
,	no	no
rwsch	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
ExprNodeDesc	no	yes
equalsExpr	yes	yes
=	no	no
null	no	no
;	no	no
{	no	no
ExprNodeDesc	no	yes
hashfnExpr	no	yes
=	no	no
new	no	no
ExprNodeGenericFuncDesc	no	yes
(	no	no
TypeInfoFactory	no	yes
.	no	no
intTypeInfo	no	yes
,	no	no
bucketingVersion	no	yes
==	no	no
2	no	no
?	no	no
new	no	no
GenericUDFMurmurHash	no	yes
(	no	no
)	no	no
:	no	no
new	no	no
GenericUDFHash	no	yes
(	no	no
)	no	no
,	no	no
args	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
hashfnExpr	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
andExpr	no	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
getExprNodeDefaultExprProcessor	no	yes
(	no	no
)	no	no
.	no	no
getFuncExprNodeDesc	no	yes
(	no	no
,	no	no
hashfnExpr	no	yes
,	no	no
intMaxExpr	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
andExpr	no	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
modExpr	no	yes
=	no	no
ExprNodeTypeCheck	no	yes
.	no	no
getExprNodeDefaultExprProcessor	no	yes
(	no	no
)	no	no
.	no	no
getFuncExprNodeDesc	no	yes
(	no	no
,	no	no
andExpr	no	yes
,	no	no
denominatorExpr	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
modExpr	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
numeratorExpr	no	yes
)	no	no
;	no	no

FilterDesc	no	yes
filterDesc	no	yes
=	no	no
new	no	no
FilterDesc	no	yes
(	no	no
samplePredicate	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
filterDesc	no	yes
.	no	no
setGenerated	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
op	yes	yes
=	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
filterDesc	no	yes
,	no	no
new	no	no
RowSchema	no	yes
(	no	no
rwsch	no	yes
.	no	no
getColumnInfos	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
top	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
boolean	no	no
testMode	no	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVETESTMODE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
testMode	no	yes
)	no	no
{	no	no
String	no	yes
tabName	no	yes
=	no	no
tab	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
unSampleTblList	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVETESTMODENOSAMPLE	no	yes
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
unSampleTbls	no	yes
=	no	no
unSampleTblList	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
unsample	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
unSampleTbl	no	no
:	no	no
unSampleTbls	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
tabName	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
unSampleTbl	no	no
)	no	no
)	no	no
{	no	no
unsample	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
unsample	no	yes
)	no	no
{	no	no
int	no	no
numBuckets	no	yes
=	no	no
tab	no	yes
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no

aliasToOpInfo	no	yes
.	no	no
put	no	yes
(	no	no
ptfAlias	no	yes
,	no	no
lastPTFOp	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
genLateralViewPlans	no	yes
(	no	no
aliasToOpInfo	no	yes
,	no	no
qb	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
qb	yes	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getJoinExpr	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
ASTNode	no	yes
joinExpr	no	yes
=	no	no
qb	yes	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getJoinExpr	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
joinExpr	no	yes
.	no	no
getToken	no	no
(	no	no
)	no	no
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
TOK_UNIQUEJOIN	no	no
)	no	no
{	no	no
QBJoinTree	no	yes
joinTree	no	yes
=	no	no
genUniqueJoinTree	no	yes
(	no	no
qb	yes	yes
,	no	no
joinExpr	no	yes
,	no	no
aliasToOpInfo	no	yes
)	no	no
;	no	no
qb	yes	yes
.	no	no
setQbJoinTree	no	yes
(	no	no
joinTree	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
QBJoinTree	no	yes
joinTree	no	yes
=	no	no
genJoinTree	no	yes
(	no	no
qb	yes	yes
,	no	no
joinExpr	no	yes
,	no	no
aliasToOpInfo	no	yes
)	no	no
;	no	no
qb	yes	yes
.	no	no
setQbJoinTree	no	yes
(	no	no
joinTree	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
dests	no	yes
=	no	no
qb	yes	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getClauseNames	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dests	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
&&	no	no
joinTree	no	yes
.	no	no
getNoOuterJoin	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dest	no	yes
=	no	no
dests	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
ASTNode	no	yes
whereClause	no	yes
=	no	no
qb	yes	yes
.	no	no
getParseInfo	no	yes
(	no	no
)	no	no
.	no	no
getWhrForClause	no	yes
(	no	no
dest	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
whereClause	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

aliasIndex	no	yes
=	no	no
index	no	yes
;	no	no
}	no	no
}	no	no
ASTNode	no	yes
tableTree	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
(	no	no
astNode	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
tabIdName	yes	yes
=	no	no
getUnescapedName	no	yes
(	no	no
tableTree	no	yes
)	no	no
;	no	no
String	no	yes
alias	no	yes
;	no	no
if	no	no
(	no	no
aliasIndex	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
alias	no	yes
=	no	no
unescapeIdentifier	no	yes
(	no	no
astNode	no	yes
.	no	no
getChild	no	yes
(	no	no
aliasIndex	no	yes
)	no	no
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
alias	no	yes
=	no	no
getUnescapedUnqualifiedTableName	no	yes
(	no	no
tableTree	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
cteAlias	no	no
.	no	no
contains	no	no
(	no	no
tabIdName	yes	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Table	no	yes
table	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
table	no	yes
=	no	no
getTableObjectByName	no	yes
(	no	no
tabIdName	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
)	no	no
;	no	no

transactionalInQuery	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
!	no	no
wasAcidChecked	no	yes
)	no	no
{	no	no
checkAcidTxnManager	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
wasAcidChecked	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
WriteEntity	no	yes
writeEntity	no	yes
:	no	no
getOutputs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
WriteEntity	no	yes
.	no	no
Type	no	yes
type	no	yes
=	no	no
writeEntity	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
type	no	yes
==	no	no
WriteEntity	no	yes
.	no	no
Type	no	yes
.	no	no
PARTITION	no	no
||	no	no
type	no	yes
==	no	no
WriteEntity	no	yes
.	no	no
Type	no	yes
.	no	no
DUMMYPARTITION	no	no
)	no	no
{	no	no
String	no	yes
conflictingArchive	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Partition	no	yes
usedp	yes	yes
=	no	no
writeEntity	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
usedp	yes	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
tbl	no	yes
)	no	no
)	no	no
{	no	no
transactionalInQuery	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
!	no	no
wasAcidChecked	no	yes
)	no	no
{	no	no
checkAcidTxnManager	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no

case	no	no
HiveParser	no	no
.	no	no
KW_FOLLOWING	no	no
:	no	no
bs	yes	yes
.	no	no
setDirection	no	no
(	no	no
Direction	no	no
.	no	no
FOLLOWING	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
HiveParser	no	no
.	no	no
KW_CURRENT	no	no
:	no	no
bs	yes	yes
.	no	no
setDirection	no	no
(	no	no
Direction	no	no
.	no	no
CURRENT	no	no
)	no	no
;	no	no
hasAmt	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
}	no	no
if	no	no
(	no	no
hasAmt	no	yes
)	no	no
{	no	no
ASTNode	no	yes
amtNode	no	yes
=	no	no
(	no	no
ASTNode	no	yes
)	no	no
node	no	yes
.	no	no
getChild	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
amtNode	no	yes
.	no	no
getType	no	no
(	no	no
)	no	no
==	no	no
HiveParser	no	no
.	no	no
KW_UNBOUNDED	no	no
)	no	no
{	no	no
bs	yes	yes
.	no	no
setAmt	no	yes
(	no	no
BoundarySpec	no	yes
.	no	no
UNBOUNDED_AMOUNT	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
int	no	no
amt	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
amtNode	no	yes
.	no	no
getText	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
amt	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
+	no	no
amt	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
amt	no	yes
==	no	no
0	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
Utilities	no	no
.	no	no
getNumClusterJobs	no	no
(	no	no
getRootTasks	no	no
(	no	no
)	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
ctx	no	no
.	no	no
isCboSucceeded	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
QueryResultsCache	no	yes
.	no	no
incrementMetric	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
QC_INVALID_FOR_CACHING	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isValidQueryCaching	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
getInvalidResultCacheReason	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
QueryResultsCache	no	yes
.	no	no
incrementMetric	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
QC_INVALID_FOR_CACHING	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_QUERY_RESULTS_CACHE_NONTRANSACTIONAL_TABLES_ENABLED	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Table	no	yes
>	no	no
nonTransactionalTables	yes	yes
=	no	no
getNonTransactionalTables	no	yes
(	no	no
)	no	no
;	no	no

sb	yes	yes
.	no	no
append	no	yes
(	no	no
HiveUtils	no	yes
.	no	no
unparseIdentifier	no	yes
(	no	no
colName	no	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
doColumnMasking	no	no
)	no	no
{	no	no
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
maskAndFilterInfo	no	yes
.	no	no
isView	no	no
&&	no	no
!	no	no
maskAndFilterInfo	no	yes
.	no	no
isNonNative	no	no
)	no	no
{	no	no
Iterator	no	yes
<	no	no
VirtualColumn	no	yes
>	no	no
vcs	no	yes
=	no	no
VirtualColumn	no	yes
.	no	no
getRegistry	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
vcs	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
VirtualColumn	no	yes
vc	no	yes
=	no	no
vcs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
vc	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
HiveUtils	no	yes
.	no	no
unparseIdentifier	no	yes
(	no	no
privObject	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
HiveUtils	no	yes
.	no	no
unparseIdentifier	no	yes
(	no	no
privObject	no	yes
.	no	no
getObjectName	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
+	no	no
maskAndFilterInfo	no	yes
.	no	no
additionalTabInfo	no	yes
)	no	no
;	no	no
String	no	yes
filter	no	yes
=	no	no
privObject	no	yes
.	no	no
getRowFilterExpression	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
runCycleAnalysisForPartitionPruning	no	no
(	no	no
OptimizeTezProcContext	no	no
procCtx	no	yes
,	no	no
Set	no	yes
<	no	no
ReadEntity	no	no
>	no	no
inputs	no	no
,	no	no
Set	no	yes
<	no	no
WriteEntity	no	no
>	no	no
outputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
connectTerminalOps	no	yes
(	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
)	no	no
;	no	no
boolean	no	no
cycleFree	no	yes
=	no	no
false	no	no
;	no	no
while	no	no
(	no	no
!	no	no
cycleFree	no	yes
)	no	no
{	no	no
cycleFree	no	yes
=	no	no
true	no	no
;	no	no
Set	no	yes
<	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>>	no	no
components	no	yes
=	no	no
getComponents	no	yes
(	no	no
procCtx	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
component	no	no
:	no	no
components	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
co	yes	no
:	no	no
component	no	no
)	no	no
{	no	no

SemanticGraphWalker	no	yes
ogw	no	yes
=	no	no
new	no	no
GenTezWorkWalker	no	yes
(	no	no
disp	no	yes
,	no	no
procCtx	no	yes
)	no	no
;	no	no
ogw	no	yes
.	no	no
startWalking	no	yes
(	no	no
topNodes	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
for	no	no
(	no	no
List	no	no
<	no	no
BaseWork	no	no
>	no	no
baseWorkList	no	no
:	no	no
procCtx	no	yes
.	no	no
mapJoinWorkMap	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
BaseWork	no	no
w	no	yes
:	no	no
baseWorkList	no	no
)	no	no
{	no	no
w	no	yes
.	no	no
setReservedMemoryMB	no	yes
(	no	no
(	no	no
int	no	no
)	no	no
(	no	no
conf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVECONVERTJOINNOCONDITIONALTASKTHRESHOLD	no	yes
)	no	no
/	no	no
(	no	no
1024	no	no
*	no	no
1024	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
int	no	no
indexForTezUnion	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
BaseWork	no	no
w	no	yes
:	no	no
procCtx	no	yes
.	no	no
workWithUnionOperators	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
removeUnionOperators	no	yes
(	no	no
procCtx	no	yes
,	no	no
w	no	yes
,	no	no
indexForTezUnion	no	yes
++	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
FileSinkOperator	no	no
fileSink	no	yes
:	no	no
procCtx	no	yes
.	no	no
fileSinkSet	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
processFileSink	no	yes
(	no	no
procCtx	no	yes
,	no	no
fileSink	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
pCtx	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	no
rs	no	yes
:	no	no
pCtx	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
GenTezUtils	no	yes
.	no	no
processDynamicSemiJoinPushDownOperator	no	yes
(	no	no
procCtx	no	yes
,	no	no
pCtx	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	no	yes
)	no	no
,	no	no
rs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
procCtx	no	yes
.	no	no
eventOperatorSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	no
(	no	no
AppMasterEventOperator	no	no
event	yes	no
:	no	no
procCtx	no	yes
.	no	no
eventOperatorSet	no	yes
)	no	no
{	no	no

continue	no	no
;	no	no
}	no	no
while	no	no
(	no	no
parent	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
parent	no	yes
instanceof	no	no
TableScanOperator	no	yes
)	no	no
{	no	no
tsOps	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
parent	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
parent	no	yes
=	no	no
parent	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
ParseContext	no	yes
pctx	no	yes
=	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
;	no	no
Set	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
rsSet	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
pctx	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TableScanOperator	no	yes
ts	yes	yes
:	no	no
tsOps	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
rs	yes	yes
:	no	no
rsSet	no	yes
)	no	no
{	no	no
SemiJoinBranchInfo	no	yes
sjInfo	no	yes
=	no	no
pctx	no	yes
.	no	no
getRsToSemiJoinBranchInfo	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjInfo	no	yes
!=	no	no
null	no	no
&&	no	no
ts	yes	yes
==	no	no
sjInfo	no	yes
.	no	no
getTsOp	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sjInfo	no	yes
.	no	no
getIsHint	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
+	no	no
rs	yes	yes
+	no	no
+	no	no
ts	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
removeRedundantSemijoinAndDpp	no	no
(	no	no
OptimizeTezProcContext	no	no
procCtx	no	yes
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Map	no	yes
<	no	no
SemanticRule	no	yes
,	no	no
SemanticNodeProcessor	no	yes
>	no	no
opRules	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
opRules	no	yes
.	no	no
put	no	yes
(	no	no
new	no	no
RuleRegExp	no	yes
(	no	no
,	no	no
GroupByOperator	no	yes
.	no	no
getOperatorName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ReduceSinkOperator	no	yes
.	no	no
getOperatorName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
GroupByOperator	no	yes
.	no	no
getOperatorName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ReduceSinkOperator	no	yes
.	no	no
getOperatorName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
,	no	no
new	no	no
SemiJoinRemovalProc	no	yes
(	no	no
false	no	no
,	no	no
true	no	no
)	no	no
)	no	no
;	no	no
opRules	no	yes
.	no	no
put	no	yes
(	no	no
new	no	no
RuleRegExp	no	yes
(	no	no
,	no	no
AppMasterEventOperator	no	yes
.	no	no
getOperatorName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
,	no	no
new	no	no
DynamicPruningRemovalRedundantProc	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SemiJoinRemovalContext	no	yes
ctx	no	yes
=	no	no
new	no	no
SemiJoinRemovalContext	no	yes
(	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
)	no	no
;	no	no
SemanticDispatcher	no	yes
disp	no	yes
=	no	no
new	no	no
DefaultRuleDispatcher	no	yes
(	no	no
null	no	no
,	no	no
opRules	no	yes
,	no	no
ctx	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Node	no	yes
>	no	no
topNodes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Node	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
topNodes	no	yes
.	no	no
addAll	no	yes
(	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SemanticGraphWalker	no	yes
ogw	no	yes
=	no	no
new	no	no
PreOrderOnceWalker	no	yes
(	no	no
disp	no	yes
)	no	no
;	no	no
ogw	no	yes
.	no	no
startWalking	no	yes
(	no	no
topNodes	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
,	no	no
TableScanOperator	no	no
>	no	no
p	yes	no
:	no	no
ctx	no	yes
.	no	no
opsToRemove	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

topOps	no	yes
.	no	no
addAll	no	yes
(	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getTopOps	no	yes
(	no	no
)	no	no
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
unionOps	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
ReduceSinkOperator	no	yes
,	no	no
TableScanOperator	no	yes
>	no	no
sjToRemove	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
parent	no	yes
:	no	no
topOps	no	yes
)	no	no
{	no	no
Deque	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
deque	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
deque	no	yes
.	no	no
add	no	yes
(	no	no
parent	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
deque	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
op	no	yes
=	no	no
deque	no	yes
.	no	no
pollLast	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
UnionOperator	no	no
&&	no	no
!	no	no
unionOps	no	yes
.	no	no
contains	no	no
(	no	no
op	no	yes
)	no	no
)	no	no
{	no	no
unionOps	no	yes
.	no	no
add	no	yes
(	no	no
op	no	yes
)	no	no
;	no	no
removeSemiJoinEdges	no	yes
(	no	no
op	no	yes
,	no	no
procCtx	no	yes
,	no	no
sjToRemove	no	yes
)	no	no
;	no	no
}	no	no
deque	no	yes
.	no	no
addAll	no	yes
(	no	no
op	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
sjToRemove	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
ReduceSinkOperator	no	yes
,	no	no
TableScanOperator	no	yes
>	no	no
entry	yes	no
:	no	no
sjToRemove	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
TableScanOperator	no	yes
,	no	no
List	no	yes
<	no	no
MapJoinOperator	no	yes
>>	no	no
probeDecodeMJoins	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
parent	no	yes
:	no	no
topOps	no	no
)	no	no
{	no	no
Deque	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
deque	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
deque	no	yes
.	no	no
add	no	yes
(	no	no
parent	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
deque	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
op	no	yes
=	no	no
deque	no	yes
.	no	no
pollLast	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
ReduceSinkOperator	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
op	no	yes
instanceof	no	no
MapJoinOperator	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
findParallelSemiJoinBranch	no	no
(	no	no
op	no	yes
,	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
parent	no	yes
,	no	no
procCtx	no	no
.	no	no
parseContext	no	no
,	no	no
semijoins	no	no
,	no	no
probeDecodeMJoins	no	yes
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
deque	no	yes
.	no	no
addAll	no	yes
(	no	no
op	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
procCtx	no	no
.	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
TEZ_DYNAMIC_SEMIJOIN_REDUCTION_FOR_MAPJOIN	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
semijoins	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
ReduceSinkOperator	no	no
,	no	no
TableScanOperator	no	yes
>	no	no
semiEntry	yes	no
:	no	no
semijoins	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
op	no	yes
instanceof	no	no
MapJoinOperator	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
findParallelSemiJoinBranch	no	no
(	no	no
op	no	yes
,	no	no
(	no	no
TableScanOperator	no	yes
)	no	no
parent	no	no
,	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
,	no	no
semijoins	no	no
,	no	no
probeDecodeMJoins	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
deque	no	yes
.	no	no
addAll	no	yes
(	no	no
op	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
procCtx	no	yes
.	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
TEZ_DYNAMIC_SEMIJOIN_REDUCTION_FOR_MAPJOIN	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
semijoins	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
ReduceSinkOperator	no	no
,	no	no
TableScanOperator	no	yes
>	no	no
semiEntry	no	yes
:	no	no
semijoins	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
semiEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
semiEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
GenTezUtils	no	yes
.	no	no
removeBranch	no	yes
(	no	no
semiEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
GenTezUtils	no	yes
.	no	no
removeSemiJoinOperator	no	yes
(	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
,	no	no
semiEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
semiEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
procCtx	no	yes
.	no	no
conf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_OPTIMIZE_SCAN_PROBEDECODE	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
probeDecodeMJoins	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
TableScanOperator	no	yes
,	no	no
List	no	no
<	no	no
MapJoinOperator	no	no
>>	no	no
probeTsMap	yes	no
:	no	no
probeDecodeMJoins	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
TableScanOperator	no	yes
.	no	no
ProbeDecodeContext	no	yes
tsCntx	yes	yes
=	no	no
null	no	no
;	no	no

boolean	no	no
semiJoinKeyIsPK	yes	yes
=	no	no
StatsUtils	no	yes
.	no	no
inferForeignKey	no	yes
(	no	no
selColStat	yes	yes
,	no	no
tsColStat	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
semiJoinKeyIsPK	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
selColSourceNdv	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
keyDomainCardinality	yes	yes
=	no	no
selColSourceNdv	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
selColSourceNdv	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
keyDomainCardinality	yes	yes
=	no	no
selColSourceNdv	no	yes
+	no	no
tsColStat	yes	yes
.	no	no
getCountDistint	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StatsUtils	no	yes
.	no	no
hasDiscreteRange	no	no
(	no	no
selColStat	yes	yes
)	no	no
&&	no	no
StatsUtils	no	yes
.	no	no
hasDiscreteRange	no	no
(	no	no
tsColStat	yes	yes
)	no	no
)	no	no
{	no	no
long	no	no
range	no	yes
=	no	no
0	no	no
;	no	no
ColStatistics	no	yes
.	no	no
Range	no	yes
combinedRange	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
combineRange	no	yes
(	no	no
selColStat	yes	yes
.	no	no
getRange	no	yes
(	no	no
)	no	no
,	no	no
tsColStat	yes	yes
.	no	no
getRange	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
combinedRange	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
range	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getRangeDelta	no	yes
(	no	no
combinedRange	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
range	no	yes
=	no	no
StatsUtils	no	yes
.	no	no
getRangeDelta	no	yes
(	no	no
selColStat	yes	yes
.	no	no
getRange	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
StatsUtils	no	yes
.	no	no
getRangeDelta	no	yes
(	no	no
tsColStat	yes	yes
.	no	no
getRange	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
keyDomainCardinality	yes	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
keyDomainCardinality	yes	yes
,	no	no
range	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
double	no	no
computeBloomFilterNetBenefit	no	no
(	no	no
SelectOperator	no	no
sel	no	yes
,	no	no
List	no	no
<	no	no
ExprNodeDesc	no	no
>	no	no
selExpr	no	yes
,	no	no
Statistics	no	no
filStats	no	yes
,	no	no
List	no	no
<	no	no
ExprNodeDesc	no	no
>	no	no
tsExpr	no	yes
)	no	no
{	no	no
double	no	no
netBenefit	no	yes
=	no	no
0	no	no
;	no	no
double	no	no
benefit	yes	yes
=	no	no
getBloomFilterBenefit	no	yes
(	no	no
sel	no	yes
,	no	no
selExpr	no	yes
,	no	no
filStats	no	yes
,	no	no
tsExpr	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
benefit	yes	yes
>	no	no
0	no	no
&&	no	no
filStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
double	no	no
cost	yes	yes
=	no	no
getBloomFilterCost	no	yes
(	no	no
sel	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cost	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
long	no	no
filDataSize	yes	yes
=	no	no
filStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
netBenefit	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
benefit	yes	yes
-	no	no
cost	yes	yes
,	no	no
0	no	no
)	no	no
/	no	no
filDataSize	yes	yes
;	no	no

SortedSet	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
semiJoinRsOps	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
rsOpComp	no	yes
)	no	no
;	no	no
semiJoinRsOps	no	yes
.	no	no
addAll	no	yes
(	no	no
map	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ListMultimap	no	yes
<	no	no
FilterOperator	no	yes
,	no	no
SemijoinOperatorInfo	no	yes
>	no	no
globalReductionFactorMap	no	yes
=	no	no
ArrayListMultimap	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
semiJoinRsOps	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
FilterOperator	no	yes
,	no	no
SemijoinOperatorInfo	no	yes
>	no	no
reductionFactorMap	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
SortedSet	no	yes
<	no	no
ReduceSinkOperator	no	yes
>	no	no
semiJoinRsOpsNewIter	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
rsOpComp	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ReduceSinkOperator	no	yes
rs	yes	yes
:	no	no
semiJoinRsOps	no	yes
)	no	no
{	no	no
SemiJoinBranchInfo	no	yes
sjInfo	no	yes
=	no	no
map	no	yes
.	no	no
get	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
sjInfo	no	yes
.	no	no
getIsHint	no	no
(	no	no
)	no	no
||	no	no
!	no	no
sjInfo	no	yes
.	no	no
getShouldRemove	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
SelectOperator	no	yes
sel	no	yes
=	no	no
OperatorUtils	no	yes
.	no	no
ancestor	no	yes
(	no	no
rs	yes	yes
,	no	no
SelectOperator	no	yes
.	no	no
class	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
TableScanOperator	no	yes
ts	yes	yes
=	no	no
sjInfo	no	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
;	no	no
RuntimeValuesInfo	no	yes
rti	no	yes
=	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
targetColumns	yes	yes
=	no	no
rti	no	yes
.	no	no
getTargetColumns	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ExprNodeDesc	no	yes
>	no	no
sourceColumns	no	yes
=	no	no
sel	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getColList	no	yes
(	no	no
)	no	no
.	no	no
subList	no	yes
(	no	no
0	no	no
,	no	no
targetColumns	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

adjustedStatsMap	no	yes
.	no	no
put	no	yes
(	no	no
filterOperator	no	yes
,	no	no
filterStats	no	yes
)	no	no
;	no	no
}	no	no
double	no	no
reductionFactor	no	yes
=	no	no
computeBloomFilterNetBenefit	no	yes
(	no	no
sel	no	yes
,	no	no
sourceColumns	no	yes
,	no	no
filterStats	no	yes
,	no	no
targetColumns	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
reductionFactor	no	yes
<	no	no
semijoinReductionThreshold	no	no
)	no	no
{	no	no
semijoinRsToRemove	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
filterStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ImmutableSet	no	yes
.	no	no
Builder	no	yes
<	no	no
String	no	yes
>	no	no
colNames	no	yes
=	no	no
ImmutableSet	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	no
tsExpr	no	yes
:	no	no
targetColumns	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
tsExpr	no	yes
instanceof	no	no
ExprNodeFieldDesc	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tsExpr	no	yes
=	no	no
(	no	no
(	no	no
ExprNodeFieldDesc	no	yes
)	no	no
tsExpr	no	yes
)	no	no
.	no	no
getDesc	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
colNames	no	yes
.	no	no
add	no	yes
(	no	no
ExprNodeDescUtils	no	yes
.	no	no
getColumnExpr	no	yes
(	no	no
tsExpr	no	yes
)	no	no
.	no	no
getColumn	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SemijoinOperatorInfo	no	yes
prevResult	yes	yes
=	no	no
reductionFactorMap	no	yes
.	no	no
get	no	yes
(	no	no
filterOperator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
prevResult	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
prevResult	yes	yes
.	no	no
reductionFactor	no	yes
<	no	no
reductionFactor	no	yes
)	no	no
{	no	no

semijoinRsToRemove	no	yes
.	no	no
add	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
filterStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ImmutableSet	no	yes
.	no	no
Builder	no	yes
<	no	no
String	no	yes
>	no	no
colNames	no	yes
=	no	no
ImmutableSet	no	yes
.	no	no
builder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ExprNodeDesc	no	no
tsExpr	no	yes
:	no	no
targetColumns	no	no
)	no	no
{	no	no
if	no	no
(	no	no
tsExpr	no	yes
instanceof	no	no
ExprNodeFieldDesc	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
tsExpr	no	yes
=	no	no
(	no	no
(	no	no
ExprNodeFieldDesc	no	yes
)	no	no
tsExpr	no	yes
)	no	no
.	no	no
getDesc	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
colNames	no	yes
.	no	no
add	no	yes
(	no	no
ExprNodeDescUtils	no	yes
.	no	no
getColumnExpr	no	yes
(	no	no
tsExpr	no	yes
)	no	no
.	no	no
getColumn	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SemijoinOperatorInfo	no	yes
prevResult	no	yes
=	no	no
reductionFactorMap	no	yes
.	no	no
get	no	yes
(	no	no
filterOperator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
prevResult	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
prevResult	no	yes
.	no	no
reductionFactor	no	yes
<	no	no
reductionFactor	no	yes
)	no	no
{	no	no
reductionFactorMap	no	yes
.	no	no
put	no	yes
(	no	no
filterOperator	no	yes
,	no	no
new	no	no
SemijoinOperatorInfo	no	yes
(	no	no
rs	yes	yes
,	no	no
filterOperator	no	yes
,	no	no
filterStats	no	yes
,	no	no
colNames	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
reductionFactor	no	yes
)	no	no
)	no	no
;	no	no
semiJoinRsOpsNewIter	no	yes
.	no	no
add	no	yes
(	no	no
prevResult	no	yes
.	no	no
rsOperator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

colNames	no	yes
.	no	no
add	no	yes
(	no	no
ExprNodeDescUtils	no	yes
.	no	no
getColumnExpr	no	yes
(	no	no
tsExpr	no	yes
)	no	no
.	no	no
getColumn	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SemijoinOperatorInfo	no	yes
prevResult	no	yes
=	no	no
reductionFactorMap	no	yes
.	no	no
get	no	yes
(	no	no
filterOperator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
prevResult	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
prevResult	no	yes
.	no	no
reductionFactor	no	yes
<	no	no
reductionFactor	no	yes
)	no	no
{	no	no
reductionFactorMap	no	yes
.	no	no
put	no	yes
(	no	no
filterOperator	no	yes
,	no	no
new	no	no
SemijoinOperatorInfo	no	yes
(	no	no
rs	no	yes
,	no	no
filterOperator	no	yes
,	no	no
filterStats	no	yes
,	no	no
colNames	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
reductionFactor	no	yes
)	no	no
)	no	no
;	no	no
semiJoinRsOpsNewIter	no	yes
.	no	no
add	no	yes
(	no	no
prevResult	no	yes
.	no	no
rsOperator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
prevResult	no	yes
.	no	no
rsOperator	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
semiJoinRsOpsNewIter	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
rs	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
reductionFactorMap	no	yes
.	no	no
put	no	yes
(	no	no
filterOperator	no	yes
,	no	no
new	no	no
SemijoinOperatorInfo	no	yes
(	no	no
rs	no	yes
,	no	no
filterOperator	no	yes
,	no	no
filterStats	no	yes
,	no	no
colNames	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
reductionFactor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
SemijoinOperatorInfo	no	yes
roi	yes	no
:	no	no
reductionFactorMap	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
prevResult	no	yes
.	no	no
rsOperator	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
semiJoinRsOpsNewIter	no	yes
.	no	no
add	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
OperatorUtils	no	yes
.	no	no
getOpNamePretty	no	yes
(	no	no
rs	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
reductionFactorMap	no	yes
.	no	no
put	no	yes
(	no	no
filterOperator	no	yes
,	no	no
new	no	no
SemijoinOperatorInfo	no	yes
(	no	no
rs	yes	yes
,	no	no
filterOperator	no	yes
,	no	no
filterStats	no	yes
,	no	no
colNames	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
,	no	no
reductionFactor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
SemijoinOperatorInfo	no	yes
roi	no	yes
:	no	no
reductionFactorMap	no	yes
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
newNumRows	no	yes
=	no	no
(	no	no
long	no	no
)	no	no
(	no	no
1.0	no	no
-	no	no
roi	no	yes
.	no	no
reductionFactor	no	yes
)	no	no
*	no	no
roi	no	yes
.	no	no
filterStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
roi	no	yes
.	no	no
filterOperator	no	yes
,	no	no
roi	no	yes
.	no	no
filterStats	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
newNumRows	no	yes
,	no	no
roi	no	yes
.	no	no
filterStats	no	yes
.	no	no
getNumRows	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
StatsUtils	no	yes
.	no	no
updateStats	no	yes
(	no	no
roi	no	yes
.	no	no
filterStats	no	yes
,	no	no
newNumRows	no	yes
,	no	no
true	no	no
,	no	no
roi	no	yes
.	no	no
filterOperator	no	yes
,	no	no
roi	no	yes
.	no	no
colNames	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

break	no	no
;	no	no
}	no	no
long	no	no
nDVs	yes	yes
=	no	no
colStatisticsSJ	no	yes
.	no	no
getCountDistint	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
nDVs	yes	yes
>	no	no
0	no	no
)	no	no
{	no	no
RuntimeValuesInfo	no	yes
rti	no	yes
=	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
tsExpr	no	yes
=	no	no
rti	no	yes
.	no	no
getTargetColumns	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
FilterOperator	no	yes
fil	no	yes
=	no	no
(	no	no
FilterOperator	no	yes
)	no	no
(	no	no
ts	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
Statistics	no	yes
filStats	no	yes
=	no	no
fil	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filStats	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
String	no	yes
colName	no	yes
=	no	no
ExprNodeDescUtils	no	yes
.	no	no
extractColName	no	yes
(	no	no
tsExpr	no	yes
)	no	no
;	no	no
ColStatistics	no	yes
colStatisticsTarget	no	yes
=	no	no
filStats	no	yes
.	no	no
getColumnStatisticsFromColName	no	yes
(	no	no
colName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStatisticsTarget	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
long	no	no
nDVsOfTS	yes	yes
=	no	no
colStatisticsTarget	no	yes
.	no	no
getCountDistint	no	yes
(	no	no
)	no	no
;	no	no
double	no	no
nDVsOfTSFactored	yes	yes
=	no	no
nDVsOfTS	yes	yes
*	no	no
procCtx	no	yes
.	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_DYNAMIC_SEMIJOIN_REDUCTION_FOR_DPP_FACTOR	no	yes
)	no	no
;	no	no

RuntimeValuesInfo	no	yes
rti	no	yes
=	no	no
procCtx	no	yes
.	no	no
parseContext	no	yes
.	no	no
getRsToRuntimeValuesInfoMap	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
rs	yes	yes
)	no	no
;	no	no
ExprNodeDesc	no	yes
tsExpr	no	yes
=	no	no
rti	no	yes
.	no	no
getTargetColumns	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
FilterOperator	no	yes
fil	no	yes
=	no	no
(	no	no
FilterOperator	no	yes
)	no	no
(	no	no
ts	no	yes
.	no	no
getChildOperators	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
Statistics	no	yes
filStats	no	yes
=	no	no
fil	no	yes
.	no	no
getStatistics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filStats	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
String	no	yes
colName	no	yes
=	no	no
ExprNodeDescUtils	no	yes
.	no	no
extractColName	no	yes
(	no	no
tsExpr	no	yes
)	no	no
;	no	no
ColStatistics	no	yes
colStatisticsTarget	no	yes
=	no	no
filStats	no	yes
.	no	no
getColumnStatisticsFromColName	no	yes
(	no	no
colName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStatisticsTarget	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
long	no	no
nDVsOfTS	no	yes
=	no	no
colStatisticsTarget	no	yes
.	no	no
getCountDistint	no	yes
(	no	no
)	no	no
;	no	no
double	no	no
nDVsOfTSFactored	no	yes
=	no	no
nDVsOfTS	no	yes
*	no	no
procCtx	no	yes
.	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
TEZ_DYNAMIC_SEMIJOIN_REDUCTION_FOR_DPP_FACTOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
long	no	no
)	no	no
nDVsOfTSFactored	no	yes
>	no	no
nDVs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
nDVs	no	yes
+	no	no
+	no	no
nDVsOfTS	no	yes
+	no	no
+	no	no
nDVsOfTSFactored	no	yes
+	no	no
+	no	no
rs	yes	yes
+	no	no
+	no	no
sjInfo	yes	yes
.	no	no
getTsOp	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

boolean	no	no
useRegularCopy	no	yes
=	no	no
regularCopy	no	yes
(	no	no
sourceFs	no	yes
,	no	no
srcFiles	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
useRegularCopy	no	yes
)	no	no
{	no	no
srcFiles	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
srcFiles	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
(	no	no
sourceFs	no	yes
,	no	no
origSrcPtah	no	yes
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
doCopyRetry	no	yes
(	no	no
sourceFs	no	yes
,	no	no
srcFiles	no	yes
,	no	no
destRoot	no	yes
,	no	no
proxyUser	no	yes
,	no	no
useRegularCopy	no	yes
,	no	no
overwrite	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Map	no	yes
<	no	no
FileSystem	no	yes
,	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>>>	no	no
map	no	yes
=	no	no
fsToFileMap	no	yes
(	no	no
srcFiles	no	yes
,	no	no
destRoot	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
FileSystem	no	yes
,	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>>>	no	no
entry	no	yes
:	no	no
map	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>>	no	no
destMap	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	no
<	no	no
Path	no	yes
,	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>>	no	no
destMapEntry	no	yes
:	no	no
destMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
destination	yes	yes
=	no	no
destMapEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>	no	no
fileInfoList	no	yes
=	no	no
destMapEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
sourceFs	no	yes
=	no	no
fileInfoList	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getSourcePath	no	yes
(	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
destinationFs	no	no
.	no	no
exists	no	no
(	no	no
destination	yes	yes
)	no	no
&&	no	no
!	no	no
FileUtils	no	no
.	no	no
mkdir	no	no
(	no	no
destinationFs	no	no
,	no	no
destination	yes	yes
,	no	no
hiveConf	no	yes
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
doCopyRetry	no	no
(	no	no
FileSystem	no	no
sourceFs	no	yes
,	no	no
List	no	yes
<	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
>	no	no
srcFileList	no	yes
,	no	no
Path	no	yes
destination	no	yes
,	no	no
UserGroupInformation	no	no
proxyUser	no	yes
,	no	no
boolean	no	no
useRegularCopy	no	yes
,	no	no
boolean	no	no
overwrite	no	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
LoginException	no	no
,	no	no
HiveFatalException	no	no
{	no	no
int	no	no
repeat	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
isCopyError	no	yes
=	no	no
false	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
pathList	no	yes
=	no	no
Lists	no	yes
.	no	no
transform	no	yes
(	no	no
srcFileList	no	yes
,	no	no
ReplChangeManager	no	yes
.	no	no
FileInfo	no	yes
::	no	no
getEffectivePath	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
pathList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
repeat	no	yes
<	no	no
MAX_IO_RETRY	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
repeat	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
pathList	no	yes
=	no	no
getFilesToRetry	no	yes
(	no	no
sourceFs	no	yes
,	no	no
srcFileList	no	yes
,	no	no
destination	no	yes
,	no	no
isCopyError	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pathList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
repeat	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
pathList	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
true	no	no
;	no	no
doCopyOnce	no	yes
(	no	no
sourceFs	no	yes
,	no	no
pathList	no	yes
,	no	no
destination	no	yes
,	no	no
useRegularCopy	no	yes
,	no	no
proxyUser	no	yes
,	no	no
overwrite	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

try	no	no
{	no	no
if	no	no
(	no	no
repeat	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
pathList	no	yes
=	no	no
getFilesToRetry	no	yes
(	no	no
sourceFs	no	yes
,	no	no
srcFileList	no	yes
,	no	no
destination	no	yes
,	no	no
isCopyError	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
pathList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
repeat	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
pathList	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
true	no	no
;	no	no
doCopyOnce	no	yes
(	no	no
sourceFs	no	yes
,	no	no
pathList	no	yes
,	no	no
destination	no	yes
,	no	no
useRegularCopy	no	yes
,	no	no
proxyUser	no	yes
,	no	no
overwrite	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
repeat	no	yes
>=	no	no
(	no	no
MAX_IO_RETRY	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
e	no	yes
instanceof	no	no
FileNotFoundException	no	no
)	no	no
)	no	no
{	no	no
int	no	no
sleepTime	yes	yes
=	no	no
FileUtils	no	yes
.	no	no
getSleepTime	no	yes
(	no	no
repeat	no	yes
)	no	no
;	no	no

break	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
(	no	no
repeat	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
+	no	no
pathList	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
true	no	no
;	no	no
doCopyOnce	no	yes
(	no	no
sourceFs	no	yes
,	no	no
pathList	no	yes
,	no	no
destination	no	yes
,	no	no
useRegularCopy	no	yes
,	no	no
proxyUser	no	yes
,	no	no
overwrite	no	yes
)	no	no
;	no	no
isCopyError	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
repeat	no	yes
>=	no	no
(	no	no
MAX_IO_RETRY	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
e	no	yes
instanceof	no	no
FileNotFoundException	no	no
)	no	no
)	no	no
{	no	no
int	no	no
sleepTime	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getSleepTime	no	yes
(	no	no
repeat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sleepTime	no	yes
+	no	no
+	no	no
(	no	no
repeat	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepTime	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
timerEx	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
repeat	no	yes
>=	no	no
(	no	no
MAX_IO_RETRY	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
(	no	no
e	no	yes
instanceof	no	no
FileNotFoundException	no	no
)	no	no
)	no	no
{	no	no
int	no	no
sleepTime	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getSleepTime	no	yes
(	no	no
repeat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
sleepTime	no	yes
+	no	no
+	no	no
(	no	no
repeat	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepTime	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
timerEx	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
timerEx	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
proxyUser	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
proxyUser	no	yes
)	no	no
;	no	no
}	no	no
sourceFs	no	yes
=	no	no
pathList	yes	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
srcFile	yes	yes
.	no	no
isCopyDone	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Path	no	yes
srcPath	no	yes
=	no	no
srcFile	yes	yes
.	no	no
getEffectivePath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
destinationFs	no	yes
.	no	no
exists	no	no
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isSourceFileMismatch	no	no
(	no	no
sourceFs	no	no
,	no	no
srcFile	yes	yes
)	no	no
)	no	no
{	no	no
destinationFs	no	yes
.	no	no
delete	no	yes
(	no	no
destination	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
srcFile	yes	yes
.	no	no
setIsUseSourcePath	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCopyError	no	no
)	no	no
{	no	no
srcFile	yes	yes
.	no	no
setCopyDone	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isSourceFileMismatch	no	no
(	no	no
sourceFs	no	no
,	no	no
srcFile	yes	yes
)	no	no
)	no	no
{	no	no
srcFile	yes	yes
.	no	no
setIsUseSourcePath	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
srcPath	no	yes
=	no	no
srcFile	yes	yes
.	no	no
getEffectivePath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
srcPath	no	yes
)	no	no
{	no	no

Path	no	yes
srcPath	no	yes
=	no	no
srcFile	yes	yes
.	no	no
getEffectivePath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
destinationFs	no	yes
.	no	no
exists	no	no
(	no	no
destination	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isSourceFileMismatch	no	no
(	no	no
sourceFs	no	no
,	no	no
srcFile	yes	yes
)	no	no
)	no	no
{	no	no
destinationFs	no	yes
.	no	no
delete	no	yes
(	no	no
destination	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
srcFile	yes	yes
.	no	no
setIsUseSourcePath	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCopyError	no	no
)	no	no
{	no	no
srcFile	yes	yes
.	no	no
setCopyDone	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isSourceFileMismatch	no	no
(	no	no
sourceFs	no	no
,	no	no
srcFile	yes	yes
)	no	no
)	no	no
{	no	no
srcFile	yes	yes
.	no	no
setIsUseSourcePath	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
srcPath	no	yes
=	no	no
srcFile	yes	yes
.	no	no
getEffectivePath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
null	no	no
==	no	no
srcPath	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
srcFile	yes	yes
.	no	no
getSourcePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
HiveFatalException	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
REPL_FILE_MISSING_FROM_SRC_AND_CM_PATH	no	yes
.	no	no
getMsg	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

boolean	no	no
limitReachedForLocalCopy	no	no
(	no	no
long	no	no
size	yes	yes
,	no	no
long	no	no
numberOfFiles	no	yes
)	no	no
{	no	no
boolean	no	no
result	no	yes
=	no	no
size	yes	yes
>	no	no
maxCopyFileSize	yes	yes
&&	no	no
numberOfFiles	no	yes
>	no	no
maxNumberOfFiles	no	yes
;	no	no
if	no	no
(	no	no
result	no	yes
)	no	no
{	no	no

boolean	no	no
limitReachedForLocalCopy	no	no
(	no	no
long	no	no
size	no	yes
,	no	no
long	no	no
numberOfFiles	yes	yes
)	no	no
{	no	no
boolean	no	no
result	no	yes
=	no	no
size	no	yes
>	no	no
maxCopyFileSize	no	yes
&&	no	no
numberOfFiles	yes	yes
>	no	no
maxNumberOfFiles	yes	yes
;	no	no
if	no	no
(	no	no
result	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
size	no	yes
,	no	no
maxCopyFileSize	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
log	no	no
(	no	no
LogTag	no	no
tag	yes	no
)	no	no
{	no	no
try	no	no
{	no	no

queue	no	yes
.	no	no
put	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
ThreadFactory	no	yes
namingThreadFactory	no	yes
=	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
consumer	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
nThreads	no	yes
,	no	no
namingThreadFactory	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
producer	no	yes
.	no	no
isTerminated	no	no
(	no	no
)	no	no
||	no	no
!	no	no
queue	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
queue	no	yes
.	no	no
poll	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partition	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
partition	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
futures	no	no
.	no	no
add	no	no
(	no	no
consumer	no	yes
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
partitionName	yes	yes
=	no	no
partition	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
threadName	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
)	no	no
)	no	no
;	no	no
producer	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
ThreadFactory	no	yes
namingThreadFactory	no	yes
=	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
ExecutorService	no	yes
consumer	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
nThreads	no	yes
,	no	no
namingThreadFactory	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
producer	no	yes
.	no	no
isTerminated	no	no
(	no	no
)	no	no
||	no	no
!	no	no
queue	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
queue	no	yes
.	no	no
poll	no	yes
(	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partition	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
partition	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
futures	no	no
.	no	no
add	no	no
(	no	no
consumer	no	yes
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
partitionName	yes	yes
=	no	no
partition	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
threadName	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
threadName	yes	yes
,	no	no
partitionName	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
dataPathList	no	yes
=	no	no
Utils	no	yes
.	no	no
getDataPathList	no	yes
(	no	no
partition	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
,	no	no
forReplicationSpec	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no

futures	no	no
.	no	no
add	no	yes
(	no	no
consumer	no	no
.	no	no
submit	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
partitionName	no	yes
=	no	no
partition	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
threadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
threadName	no	yes
,	no	no
partitionName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
dataPathList	no	yes
=	no	no
Utils	no	yes
.	no	no
getDataPathList	no	yes
(	no	no
partition	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
,	no	no
forReplicationSpec	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
Path	no	yes
rootDataDumpDir	no	yes
=	no	no
isExportTask	no	yes
?	no	no
paths	no	yes
.	no	no
partitionMetadataExportDir	no	yes
(	no	no
partitionName	no	yes
)	no	no
:	no	no
paths	no	yes
.	no	no
partitionDataExportDir	no	yes
(	no	no
partitionName	no	yes
)	no	no
;	no	no
new	no	no
FileOperations	no	yes
(	no	no
dataPathList	no	yes
,	no	no
rootDataDumpDir	no	yes
,	no	no
distCpDoAsUser	no	yes
,	no	no
hiveConf	no	yes
,	no	no
mmCtx	no	yes
)	no	no
.	no	no
export	no	yes
(	no	no
isExportTask	no	yes
,	no	no
dataCopyAtLoad	no	yes
)	no	no
;	no	no
Path	no	yes
dataDumpDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
paths	no	yes
.	no	no
dataExportRootDir	no	yes
(	no	no
)	no	no
,	no	no
partitionName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
threadName	no	yes
,	no	no
partitionName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
isExportTask	no	yes
||	no	no
dataCopyAtLoad	no	yes
)	no	no
)	no	no
{	no	no
fileList	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
DataCopyPath	no	yes
(	no	no
forReplicationSpec	no	yes
,	no	no
partition	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
,	no	no
dataDumpDir	no	yes
)	no	no
.	no	no
convertToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
resetDbBootstrapDumpState	no	no
(	no	no
Hive	no	no
hiveDb	no	yes
,	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
uniqueKey	yes	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
Database	no	yes
database	no	yes
=	no	no
hiveDb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
dbName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
database	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
database	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
params	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
params	no	yes
.	no	no
containsKey	no	no
(	no	no
uniqueKey	yes	yes
)	no	no
)	no	no
{	no	no
params	no	yes
.	no	no
remove	no	yes
(	no	no
uniqueKey	yes	yes
)	no	no
;	no	no
database	no	yes
.	no	no
setParameters	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
hiveDb	no	yes
.	no	no
alterDatabase	no	yes
(	no	no
dbName	yes	yes
,	no	no
database	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
handleRenameForReplacePolicy	no	no
(	no	no
Context	no	no
withinContext	no	yes
,	no	no
String	no	no
oldName	yes	yes
,	no	no
String	no	no
newName	yes	no
)	no	no
{	no	no
boolean	no	no
oldTableInBootstrapList	no	yes
=	no	no
withinContext	no	yes
.	no	no
removeFromListOfTablesForBootstrap	no	yes
(	no	no
oldName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
ReplUtils	no	no
.	no	no
tableIncludedInReplScope	no	no
(	no	no
withinContext	no	yes
.	no	no
replScope	no	no
,	no	no
newName	yes	no
)	no	no
)	no	no
{	no	no

boolean	no	no
oldTableInBootstrapList	no	yes
=	no	no
withinContext	no	yes
.	no	no
removeFromListOfTablesForBootstrap	no	yes
(	no	no
oldName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
ReplUtils	no	no
.	no	no
tableIncludedInReplScope	no	no
(	no	no
withinContext	no	yes
.	no	no
replScope	no	no
,	no	no
newName	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
oldTableInBootstrapList	no	yes
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
scenario	no	yes
=	no	no
Scenario	no	yes
.	no	no
DROP	no	yes
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
oldName	yes	yes
+	no	no
+	no	no
newName	yes	yes
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
oldTableInBootstrapList	no	yes
)	no	no
{	no	no
withinContext	no	yes
.	no	no
addToListOfTablesForBootstrap	no	yes
(	no	no
newName	yes	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
ReplUtils	no	no
.	no	no
tableIncludedInReplScope	no	no
(	no	no
withinContext	no	yes
.	no	no
replScope	no	no
,	no	no
newName	yes	yes
)	no	no
)	no	no
{	no	no

Set	no	yes
<	no	no
String	no	yes
>	no	no
bootstrapTableList	no	yes
;	no	no
ReplScope	no	yes
oldReplScope	no	yes
;	no	no
if	no	no
(	no	no
Scenario	no	no
.	no	no
RENAME	no	no
==	no	no
scenario	no	no
)	no	no
{	no	no
bootstrapTableList	no	yes
=	no	no
null	no	no
;	no	no
oldReplScope	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
!	no	no
ReplUtils	no	no
.	no	no
tableIncludedInReplScope	no	no
(	no	no
withinContext	no	yes
.	no	no
replScope	no	no
,	no	no
before	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
before	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
bootstrapTableList	no	yes
=	no	no
withinContext	no	yes
.	no	no
getTablesForBootstrap	no	yes
(	no	no
)	no	no
;	no	no
oldReplScope	no	yes
=	no	no
withinContext	no	yes
.	no	no
oldReplScope	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
Utils	no	no
.	no	no
shouldReplicate	no	no
(	no	no
withinContext	no	yes
.	no	no
replicationSpec	no	no
,	no	no
qlMdTableBefore	no	no
,	no	no
true	no	no
,	no	no
bootstrapTableList	no	yes
,	no	no
oldReplScope	no	yes
,	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_BOOTSTRAP_ACID_TABLES	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
before	no	yes
)	no	no
&&	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
after	yes	no
)	no	no
)	no	no
{	no	no

bootstrapTableList	no	yes
=	no	no
withinContext	no	yes
.	no	no
getTablesForBootstrap	no	yes
(	no	no
)	no	no
;	no	no
oldReplScope	no	yes
=	no	no
withinContext	no	yes
.	no	no
oldReplScope	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
Utils	no	no
.	no	no
shouldReplicate	no	no
(	no	no
withinContext	no	yes
.	no	no
replicationSpec	no	no
,	no	no
qlMdTableBefore	no	no
,	no	no
true	no	no
,	no	no
bootstrapTableList	no	yes
,	no	no
oldReplScope	no	yes
,	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_BOOTSTRAP_ACID_TABLES	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
before	no	yes
)	no	no
&&	no	no
AcidUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
after	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
after	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
Scenario	no	no
.	no	no
RENAME	no	no
==	no	no
scenario	no	no
)	no	no
{	no	no
String	no	yes
oldName	yes	yes
=	no	no
before	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
newName	yes	yes
=	no	no
after	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
needDump	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
withinContext	no	yes
.	no	no
oldReplScope	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
needDump	no	yes
=	no	no
handleRenameForReplacePolicy	no	yes
(	no	no
withinContext	no	yes
,	no	no
oldName	yes	yes
,	no	no
newName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
withinContext	no	yes
.	no	no
replScope	no	no
.	no	no
includeAllTables	no	no
(	no	no
)	no	no
)	no	no
{	no	no

String	no	yes
payload	no	yes
=	no	no
eventMessageAsJSON	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_DUMP_METADATA_ONLY	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
replicatingAcidEvents	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
REPL_BOOTSTRAP_ACID_TABLES	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
replicatingAcidEvents	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
ReplUtils	no	no
.	no	no
includeAcidTableInDump	no	no
(	no	no
withinContext	no	yes
.	no	no
hiveConf	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
replicatingAcidEvents	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
WriteEventInfo	no	yes
>	no	no
writeEventInfoList	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
replicatingAcidEvents	no	yes
)	no	no
{	no	no
writeEventInfoList	no	yes
=	no	no
getAllWriteEventInfo	no	yes
(	no	no
withinContext	no	yes
)	no	no
;	no	no
}	no	no
int	no	no
numEntry	no	yes
=	no	no
(	no	no
writeEventInfoList	no	yes
!=	no	no
null	no	no
?	no	no
writeEventInfoList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numEntry	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
eventMessage	no	yes
.	no	no
addWriteEventInfo	no	yes
(	no	no
writeEventInfoList	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
handle	no	no
(	no	no
Context	no	no
withinContext	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
fromEventId	no	yes
(	no	no
)	no	no
,	no	no
eventMessageAsJSON	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
withinContext	no	no
.	no	no
removeFromListOfTablesForBootstrap	no	no
(	no	no
event	yes	no
.	no	no
getTableName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
BufferedWriter	no	no
writer	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Path	no	yes
exportToFile	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
exportRootDataDir	no	yes
,	no	no
EximUtil	no	yes
.	no	no
FILES_NAME	no	yes
)	no	no
;	no	no

MetaData	no	yes
rv	no	yes
=	no	no
EximUtil	no	yes
.	no	no
readMetaData	no	yes
(	no	no
metadataPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
context	no	yes
.	no	no
hiveConf	no	yes
)	no	no
,	no	no
metadataPath	no	yes
)	no	no
;	no	no
tableType	no	yes
=	no	no
rv	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
EVENT_ALTER_TABLE	no	no
:	no	no
AlterTableMessage	no	no
alterTableMessage	no	yes
=	no	no
deserializer	no	no
.	no	no
getAlterTableMessage	no	no
(	no	no
context	no	yes
.	no	no
dmd	no	no
.	no	no
getPayload	no	no
(	no	no
)	no	no
)	no	no
;	no	no
tableType	no	yes
=	no	no
alterTableMessage	no	yes
.	no	no
getTableObjAfter	no	yes
(	no	no
)	no	no
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
writeId	no	yes
=	no	no
alterTableMessage	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
EVENT_ALTER_PARTITION	no	no
:	no	no
AlterPartitionMessage	no	no
msg	no	yes
=	no	no
deserializer	no	no
.	no	no
getAlterPartitionMessage	no	no
(	no	no
context	no	yes
.	no	no
dmd	no	no
.	no	no
getPayload	no	no
(	no	no
)	no	no
)	no	no
;	no	no
tableType	no	yes
=	no	no
msg	no	yes
.	no	no
getTableObj	no	yes
(	no	no
)	no	no
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
writeId	no	yes
=	no	no
msg	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
break	no	no
;	no	no
}	no	no
boolean	no	no
isExternalTable	no	yes
=	no	no
tableType	no	yes
!=	no	no
null	no	no
&&	no	no
TableType	no	yes
.	no	no
EXTERNAL_TABLE	no	yes
.	no	no
equals	no	yes
(	no	no
Enum	no	yes
.	no	no
valueOf	no	yes
(	no	no
TableType	no	yes
.	no	no
class	no	no
,	no	no
tableType	no	yes
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
Tuple	no	yes
(	no	no
isExternalTable	no	yes
,	no	no
writeId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
reportStageStart	no	no
(	no	no
String	no	no
stageName	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
Long	no	no
>	no	no
metricMap	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
void	no	no
reportStageEnd	no	no
(	no	no
String	no	no
stageName	yes	no
,	no	no
Status	no	no
status	yes	no
,	no	no
long	no	no
lastReplId	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
void	no	no
reportStageEnd	no	no
(	no	no
String	no	no
stageName	yes	no
,	no	no
Status	no	no
status	yes	no
,	no	no
String	no	no
errorLogPath	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
void	no	no
reportStageEnd	no	no
(	no	no
String	no	no
stageName	yes	no
,	no	no
Status	no	no
status	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
void	no	no
reportStageProgress	no	no
(	no	no
String	no	no
stageName	yes	no
,	no	no
String	no	no
metricName	yes	no
,	no	no
long	no	no
count	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
void	no	no
reportEnd	no	no
(	no	no
Status	no	no
status	yes	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
if	no	no
(	no	no
isEnabled	no	no
)	no	no
{	no	no

public	no	no
ReduceWork	no	yes
createReduceWork	no	no
(	no	no
GenSparkProcContext	no	no
context	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
root	yes	yes
,	no	no
SparkWork	no	no
sparkWork	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
!	no	no
root	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
ReduceWork	no	yes
reduceWork	yes	yes
=	no	no
new	no	no
ReduceWork	no	yes
(	no	no
+	no	no
(	no	no
++	no	no
sequenceNumber	no	yes
)	no	no
)	no	no
;	no	no

protected	no	no
void	no	no
setupReduceSink	no	no
(	no	no
GenSparkProcContext	no	no
context	no	no
,	no	no
ReduceWork	no	no
reduceWork	yes	no
,	no	no
ReduceSinkOperator	no	no
reduceSink	yes	no
)	no	no
{	no	no

public	no	no
MapWork	no	yes
createMapWork	no	no
(	no	no
GenSparkProcContext	no	no
context	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
root	yes	yes
,	no	no
SparkWork	no	no
sparkWork	no	no
,	no	no
PrunedPartitionList	no	no
partitions	no	no
,	no	no
boolean	no	no
deferSetup	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
root	yes	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
MapWork	no	yes
mapWork	yes	yes
=	no	no
new	no	no
MapWork	no	yes
(	no	no
+	no	no
(	no	no
++	no	no
sequenceNumber	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
void	no	no
processPartitionPruningSink	no	no
(	no	no
GenSparkProcContext	no	no
context	no	yes
,	no	no
SparkPartitionPruningSinkOperator	no	no
pruningSink	no	yes
)	no	no
{	no	no
SparkPartitionPruningSinkDesc	no	yes
desc	no	yes
=	no	no
pruningSink	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Path	no	yes
outputBase	yes	yes
=	no	no
getDPPOutputPath	no	yes
(	no	no
context	no	yes
.	no	no
parseContext	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
sourceId	no	yes
=	no	no
pruningSink	no	yes
.	no	no
getUniqueId	no	yes
(	no	no
)	no	no
;	no	no
desc	no	yes
.	no	no
setPath	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
outputBase	yes	yes
,	no	no
sourceId	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SparkPartitionPruningSinkDesc	no	yes
.	no	no
DPPTargetInfo	no	no
targetInfo	no	yes
:	no	no
desc	no	yes
.	no	no
getTargetInfos	no	no
(	no	no
)	no	no
)	no	no
{	no	no
TableScanOperator	no	yes
ts	no	yes
=	no	no
targetInfo	no	yes
.	no	no
tableScan	no	yes
;	no	no
MapWork	no	yes
targetWork	no	yes
=	no	no
(	no	no
MapWork	no	yes
)	no	no
context	no	yes
.	no	no
rootToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
ts	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkNotNull	no	yes
(	no	no
targetWork	no	yes
,	no	no
+	no	no
ts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
targetWork	no	yes
.	no	no
getTmpPathForPartitionPruning	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
targetWork	no	yes
.	no	no
setTmpPathForPartitionPruning	no	yes
(	no	no
outputBase	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
procContext	no	yes
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
GenSparkProcContext	no	yes
context	no	yes
=	no	no
(	no	no
GenSparkProcContext	no	yes
)	no	no
procContext	no	yes
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
.	no	no
currentTask	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
.	no	no
currentRootOperator	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
operator	no	yes
=	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
)	no	no
nd	no	yes
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
root	yes	yes
=	no	no
context	no	yes
.	no	no
currentRootOperator	no	yes
;	no	no

@	no	no
Override	no	no
public	no	no
Object	no	no
process	no	no
(	no	no
Node	no	no
nd	no	yes
,	no	no
Stack	no	no
<	no	no
Node	no	no
>	no	no
stack	no	no
,	no	no
NodeProcessorCtx	no	no
procContext	no	yes
,	no	no
Object	no	no
...	no	no
nodeOutputs	no	no
)	no	no
throws	no	no
SemanticException	no	no
{	no	no
GenSparkProcContext	no	yes
context	no	yes
=	no	no
(	no	no
GenSparkProcContext	no	yes
)	no	no
procContext	no	yes
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
.	no	no
currentTask	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
context	no	yes
.	no	no
currentRootOperator	no	yes
!=	no	no
null	no	no
,	no	no
)	no	no
;	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
operator	yes	yes
=	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	yes
>	no	no
)	no	no
nd	no	yes
;	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
root	no	yes
=	no	no
context	no	yes
.	no	no
currentRootOperator	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
root	no	yes
)	no	no
;	no	no

workItems	no	yes
.	no	no
add	no	yes
(	no	no
work	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
childToWorkMap	no	yes
.	no	no
put	no	yes
(	no	no
operator	no	yes
,	no	no
workItems	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
context	no	yes
.	no	no
childToWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
operator	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
work	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
currentMapJoinOperators	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
MapJoinOperator	no	no
mj	no	yes
:	no	no
context	no	yes
.	no	no
currentMapJoinOperators	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
mj	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
context	no	yes
.	no	no
mapJoinWorkMap	no	yes
.	no	no
containsKey	no	no
(	no	no
mj	no	yes
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
BaseWork	no	yes
>	no	no
workItems	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
BaseWork	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
workItems	no	yes
.	no	no
add	no	yes
(	no	no
work	yes	yes
)	no	no
;	no	no
context	no	yes
.	no	no
mapJoinWorkMap	no	yes
.	no	no
put	no	yes
(	no	no
mj	no	yes
,	no	no
workItems	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
context	no	yes
.	no	no
mapJoinWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
mj	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
work	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
context	no	yes
.	no	no
linkOpWithWorkMap	no	yes
.	no	no
containsKey	no	no
(	no	no
mj	no	yes
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
BaseWork	no	yes
,	no	no
SparkEdgeProperty	no	yes
>	no	no
linkWorkMap	no	yes
=	no	no
context	no	yes
.	no	no
linkOpWithWorkMap	no	yes
.	no	no
get	no	yes
(	no	no
mj	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
r	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
OperatorFactory	no	yes
.	no	no
getAndMakeChild	no	yes
(	no	no
r	no	yes
.	no	no
getCompilationOpContext	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
ReduceSinkDesc	no	yes
)	no	no
r	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
clone	no	yes
(	no	no
)	no	no
,	no	no
r	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
r	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
setOutputName	no	yes
(	no	no
work	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
context	no	yes
.	no	no
currentMapJoinOperators	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
root	no	yes
.	no	no
getNumParent	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
work	yes	yes
instanceof	no	no
ReduceWork	no	yes
,	no	no
+	no	no
work	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ReduceWork	no	yes
reduceWork	no	yes
=	no	no
(	no	no
ReduceWork	no	yes
)	no	no
work	yes	yes
;	no	no
for	no	no
(	no	no
Operator	no	no
<	no	no
?	no	no
>	no	no
parent	no	yes
:	no	no
new	no	no
ArrayList	no	no
<	no	no
Operator	no	no
<	no	no
?	no	no
>>	no	no
(	no	no
root	no	yes
.	no	no
getParentOperators	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
parent	no	yes
instanceof	no	no
ReduceSinkOperator	no	yes
,	no	no
+	no	no
parent	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ReduceSinkOperator	no	yes
rsOp	no	yes
=	no	no
(	no	no
ReduceSinkOperator	no	yes
)	no	no
parent	no	yes
;	no	no
SparkEdgeProperty	no	yes
edgeProp	no	yes
=	no	no
GenSparkUtils	no	yes
.	no	no
getEdgeProperty	no	yes
(	no	no
context	no	yes
.	no	no
conf	no	yes
,	no	no
rsOp	no	yes
,	no	no
reduceWork	no	yes
)	no	no
;	no	no
rsOp	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
setOutputName	no	yes
(	no	no
reduceWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
GenMapRedUtils	no	yes
.	no	no
setKeyAndValueDesc	no	yes
(	no	no
reduceWork	no	yes
,	no	no
rsOp	no	yes
)	no	no
;	no	no
context	no	yes
.	no	no
leafOpToFollowingWorkInfo	no	yes
.	no	no
put	no	yes
(	no	no
rsOp	no	yes
,	no	no
Pair	no	yes
.	no	no
of	no	yes
(	no	no
edgeProp	no	yes
,	no	no
reduceWork	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
parent	no	yes
+	no	no
+	no	no
root	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
runCycleAnalysisForPartitionPruning	no	no
(	no	no
OptimizeSparkProcContext	no	no
procCtx	no	yes
)	no	no
{	no	no
boolean	no	no
cycleFree	no	yes
=	no	no
false	no	no
;	no	no
while	no	no
(	no	no
!	no	no
cycleFree	no	yes
)	no	no
{	no	no
cycleFree	no	yes
=	no	no
true	no	no
;	no	no
Set	no	yes
<	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>>	no	no
components	no	yes
=	no	no
getComponents	no	yes
(	no	no
procCtx	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Set	no	yes
<	no	no
Operator	no	yes
<	no	no
?	no	no
>>	no	no
component	no	no
:	no	no
components	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
>	no	no
co	yes	no
:	no	no
component	no	no
)	no	no
{	no	no

ObjectOutputStream	no	yes
out	no	yes
=	no	no
null	no	no
;	no	no
FSDataOutputStream	no	yes
fsout	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
fsout	no	yes
=	no	no
fs	no	yes
.	no	no
create	no	yes
(	no	no
path	yes	yes
,	no	no
numOfRepl	no	yes
)	no	no
;	no	no
out	no	yes
=	no	no
new	no	no
ObjectOutputStream	no	yes
(	no	no
new	no	no
BufferedOutputStream	no	yes
(	no	no
fsout	no	yes
)	no	no
)	no	no
;	no	no
out	no	yes
.	no	no
writeInt	no	yes
(	no	no
conf	no	yes
.	no	no
getTargetInfos	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SparkPartitionPruningSinkDesc	no	no
.	no	no
DPPTargetInfo	no	no
info	no	yes
:	no	no
conf	no	yes
.	no	no
getTargetInfos	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
out	no	yes
.	no	no
writeUTF	no	yes
(	no	no
info	no	yes
.	no	no
columnName	no	yes
)	no	no
;	no	no
}	no	no
buffer	no	yes
.	no	no
writeTo	no	yes
(	no	no
out	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
path	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	no	yes
;	no	no

try	no	no
{	no	no
Mode	no	yes
udafMode	no	yes
=	no	no
SemanticAnalyzer	no	yes
.	no	no
groupByDescModeToUDAFMode	no	yes
(	no	no
GroupByDesc	no	yes
.	no	no
Mode	no	yes
.	no	no
COMPLETE	no	yes
,	no	no
isDistinct	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ObjectInspector	no	yes
>	no	no
aggParameterOIs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
RexNode	no	no
aggParameter	no	yes
:	no	no
aggregateParameters	no	no
)	no	no
{	no	no
aggParameterOIs	no	yes
.	no	no
add	no	yes
(	no	no
createObjectInspector	no	yes
(	no	no
aggParameter	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aggregateName	yes	yes
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
FunctionRegistry	no	yes
.	no	no
LEAD_FUNC_NAME	no	no
)	no	no
||	no	no
aggregateName	yes	yes
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
FunctionRegistry	no	yes
.	no	no
LAG_FUNC_NAME	no	no
)	no	no
)	no	no
{	no	no
GenericUDAFEvaluator	no	yes
genericUDAFEvaluator	no	yes
=	no	no
FunctionRegistry	no	yes
.	no	no
getGenericWindowingEvaluator	no	yes
(	no	no
aggregateName	yes	yes
,	no	no
aggParameterOIs	no	yes
,	no	no
isDistinct	no	yes
,	no	no
isAllColumns	no	yes
)	no	no
;	no	no
GenericUDAFInfo	no	yes
udaf	no	yes
=	no	no
SemanticAnalyzer	no	yes
.	no	no
getGenericUDAFInfo2	no	yes
(	no	no
genericUDAFEvaluator	no	yes
,	no	no
udafMode	no	yes
,	no	no
aggParameterOIs	no	yes
)	no	no
;	no	no
returnType	no	yes
=	no	no
(	no	no
(	no	no
ListTypeInfo	no	yes
)	no	no
udaf	no	yes
.	no	no
returnType	no	yes
)	no	no
.	no	no
getListElementTypeInfo	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
GenericUDAFEvaluator	no	yes
genericUDAFEvaluator	no	yes
=	no	no
SemanticAnalyzer	no	yes
.	no	no
getGenericUDAFEvaluator2	no	yes
(	no	no
aggregateName	yes	yes
,	no	no
aggParameterOIs	no	yes
,	no	no
null	no	no
,	no	no
isDistinct	no	yes
,	no	no
isAllColumns	no	yes
)	no	no
;	no	no
assert	no	yes
(	no	no
genericUDAFEvaluator	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
GenericUDAFInfo	no	yes
udaf	no	yes
=	no	no
SemanticAnalyzer	no	yes
.	no	no
getGenericUDAFInfo2	no	yes
(	no	no
genericUDAFEvaluator	no	yes
,	no	no
udafMode	no	yes
,	no	no
aggParameterOIs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
FunctionRegistry	no	yes
.	no	no
pivotResult	no	no
(	no	no
aggregateName	yes	yes
)	no	no
)	no	no
{	no	no
returnType	no	yes
=	no	no
(	no	no
(	no	no
ListTypeInfo	no	yes
)	no	no
udaf	no	yes
.	no	no
returnType	no	yes
)	no	no
.	no	no
getListElementTypeInfo	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
setError	no	no
(	no	no
String	no	no
error	yes	no
,	no	no
ASTNode	no	no
errorSrcNode	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

long	no	no
threshold	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVESMALLTABLESFILESIZE	no	yes
)	no	no
;	no	no
Long	no	yes
bigTableSize	yes	yes
=	no	no
null	no	no
;	no	no
Long	no	yes
smallTablesSize	yes	yes
=	no	no
null	no	no
;	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
nextTask	yes	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
Map	no	yes
.	no	no
Entry	no	yes
<	no	no
Task	no	yes
<	no	no
?	no	no
>	no	no
,	no	no
Set	no	yes
<	no	no
String	no	yes
>>	no	no
entry	no	yes
:	no	no
taskToAliases	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
aliases	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
sumOfOthers	no	yes
=	no	no
Utilities	no	yes
.	no	no
sumOfExcept	no	yes
(	no	no
aliasToKnownSize	no	yes
,	no	no
participants	no	yes
,	no	no
aliases	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
sumOfOthers	no	yes
<	no	no
0	no	no
||	no	no
sumOfOthers	no	yes
>	no	no
threshold	yes	yes
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
long	no	no
aliasSize	no	yes
=	no	no
Utilities	no	yes
.	no	no
sumOf	no	yes
(	no	no
aliasToKnownSize	no	yes
,	no	no
aliases	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
bigTableSize	yes	yes
==	no	no
null	no	no
||	no	no
aliasSize	no	yes
>	no	no
bigTableSize	yes	yes
)	no	no
{	no	no
nextTask	yes	yes
=	no	no
entry	no	yes
;	no	no
bigTableSize	yes	yes
=	no	no
aliasSize	no	yes
;	no	no
smallTablesSize	yes	yes
=	no	no
sumOfOthers	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
nextTask	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
acidPostProcess	no	no
(	no	no
Hive	no	no
db	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
if	no	no
(	no	no
acidFqTableName	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
jobProperties	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
jobSecrets	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
input	no	no
)	no	no
{	no	no
try	no	no
{	no	no
storageHandler	no	yes
.	no	no
configureInputJobProperties	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobProperties	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AbstractMethodError	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
storageHandler	no	yes
.	no	no
configureTableJobProperties	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobProperties	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
storageHandler	no	yes
.	no	no
configureInputJobCredentials	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobSecrets	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AbstractMethodError	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
storageHandler	no	yes
.	no	no
configureOutputJobProperties	no	yes
(	no	no
tableDesc	no	yes
,	no	no
jobProperties	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
logException	no	no
(	no	no
String	no	no
msg	yes	no
,	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
OpTreeSignature	no	yes
>	no	no
sig	yes	yes
=	no	no
e	no	yes
.	no	no
getAll	no	yes
(	no	no
OpTreeSignature	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
RelTreeSignature	no	yes
>	no	no
rSig	no	yes
=	no	no
e	no	yes
.	no	no
getAll	no	yes
(	no	no
RelTreeSignature	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
stat	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
||	no	no
sig	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
StringBuffer	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuffer	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
stat	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
sig	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
OperatorStats	no	no
s	no	yes
:	no	no
stat	no	yes
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
OpTreeSignature	no	yes
s	no	yes
:	no	no
sig	yes	yes
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
stat	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
||	no	no
sig	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getAll	no	yes
(	no	no
OperatorStats	no	no
.	no	no
IncorrectRuntimeStatsMarker	no	no
.	no	no
class	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

}	no	no
HiveStorageHandler	no	yes
storageHandler	no	yes
=	no	no
tbl	no	yes
.	no	no
getStorageHandler	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
storageHandler	no	yes
instanceof	no	no
HiveStoragePredicateHandler	no	yes
)	no	no
)	no	no
{	no	no
tableScanDesc	no	yes
.	no	no
setFilterExpr	no	yes
(	no	no
originalPredicate	yes	yes
)	no	no
;	no	no
return	no	no
originalPredicate	yes	yes
;	no	no
}	no	no
HiveStoragePredicateHandler	no	yes
predicateHandler	no	yes
=	no	no
(	no	no
HiveStoragePredicateHandler	no	yes
)	no	no
storageHandler	no	yes
;	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
owi	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnNameList	no	yes
(	no	no
jobConf	no	yes
,	no	no
tableScanOp	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnTypeList	no	yes
(	no	no
jobConf	no	yes
,	no	no
tableScanOp	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Utilities	no	yes
.	no	no
copyTableJobPropertiesToConf	no	yes
(	no	no
Utilities	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
tbl	no	yes
)	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
Deserializer	no	yes
deserializer	no	yes
=	no	no
tbl	no	yes
.	no	no
getDeserializer	no	yes
(	no	no
)	no	no
;	no	no
HiveStoragePredicateHandler	no	yes
.	no	no
DecomposedPredicate	no	yes
decomposed	no	yes
=	no	no
predicateHandler	no	yes
.	no	no
decomposePredicate	no	yes
(	no	no
jobConf	no	yes
,	no	no
deserializer	no	yes
,	no	no
originalPredicate	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
decomposed	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

tableScanDesc	no	yes
.	no	no
setFilterExpr	no	yes
(	no	no
originalPredicate	yes	yes
)	no	no
;	no	no
return	no	no
originalPredicate	yes	yes
;	no	no
}	no	no
HiveStoragePredicateHandler	no	yes
predicateHandler	no	yes
=	no	no
(	no	no
HiveStoragePredicateHandler	no	yes
)	no	no
storageHandler	no	yes
;	no	no
JobConf	no	yes
jobConf	no	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
owi	no	yes
.	no	no
getParseContext	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnNameList	no	yes
(	no	no
jobConf	no	yes
,	no	no
tableScanOp	no	yes
)	no	no
;	no	no
Utilities	no	yes
.	no	no
setColumnTypeList	no	yes
(	no	no
jobConf	no	yes
,	no	no
tableScanOp	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Utilities	no	yes
.	no	no
copyTableJobPropertiesToConf	no	yes
(	no	no
Utilities	no	yes
.	no	no
getTableDesc	no	yes
(	no	no
tbl	no	yes
)	no	no
,	no	no
jobConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SemanticException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
Deserializer	no	yes
deserializer	no	yes
=	no	no
tbl	no	yes
.	no	no
getDeserializer	no	yes
(	no	no
)	no	no
;	no	no
HiveStoragePredicateHandler	no	yes
.	no	no
DecomposedPredicate	no	yes
decomposed	no	yes
=	no	no
predicateHandler	no	yes
.	no	no
decomposePredicate	no	yes
(	no	no
jobConf	no	yes
,	no	no
deserializer	no	yes
,	no	no
originalPredicate	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
decomposed	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
originalPredicate	yes	yes
.	no	no
getExprString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

boolean	no	no
purge	no	yes
=	no	no
args	no	yes
.	no	no
hasOption	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
hs2Host	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
ss	no	yes
.	no	no
isHiveServerQuery	no	no
(	no	no
)	no	no
)	no	no
{	no	no
hs2Host	no	yes
=	no	no
ss	no	yes
.	no	no
getHiveServer2Host	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
purge	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
fullCommand	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
fullCommand	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
params	no	yes
)	no	no
)	no	no
;	no	no
CommandProcessorResponse	no	yes
authErrResp	no	yes
=	no	no
CommandUtil	no	yes
.	no	no
authorizeCommandAndServiceObject	no	yes
(	no	no
ss	no	yes
,	no	no
HiveOperationType	no	yes
.	no	no
LLAP_CACHE_PURGE	no	yes
,	no	no
fullCommand	no	yes
,	no	no
hs2Host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
authErrResp	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
authErrResp	no	yes
;	no	no
}	no	no
try	no	no
{	no	no
LlapRegistryService	no	yes
llapRegistryService	no	yes
=	no	no
LlapRegistryService	no	yes
.	no	no
getClient	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
llapCachePurge	no	yes
(	no	no
ss	no	yes
,	no	no
llapRegistryService	no	yes
)	no	no
;	no	no
return	no	no
new	no	no
CommandProcessorResponse	no	yes
(	no	no
getSchema	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

hs2Host	no	yes
=	no	no
ss	no	yes
.	no	no
getHiveServer2Host	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
hasInfo	no	yes
=	no	no
args	no	yes
.	no	no
hasOption	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hasInfo	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
fullCommand	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
fullCommand	no	yes
.	no	no
addAll	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
params	no	yes
)	no	no
)	no	no
;	no	no
CommandProcessorResponse	no	yes
authErrResp	no	yes
=	no	no
CommandUtil	no	yes
.	no	no
authorizeCommandAndServiceObject	no	yes
(	no	no
ss	no	yes
,	no	no
HiveOperationType	no	yes
.	no	no
LLAP_CLUSTER_INFO	no	yes
,	no	no
fullCommand	no	yes
,	no	no
hs2Host	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
authErrResp	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
authErrResp	no	yes
;	no	no
}	no	no
try	no	no
{	no	no
LlapRegistryService	no	yes
llapRegistryService	no	yes
=	no	no
LlapRegistryService	no	yes
.	no	no
getClient	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
appId	no	yes
=	no	no
llapRegistryService	no	yes
.	no	no
getApplicationId	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
?	no	no
:	no	no
llapRegistryService	no	yes
.	no	no
getApplicationId	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
LlapServiceInstance	no	no
instance	no	yes
:	no	no
llapRegistryService	no	yes
.	no	no
getInstances	no	no
(	no	no
)	no	no
.	no	no
getAll	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ss	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
appId	no	yes
,	no	no
instance	no	yes
.	no	no
getWorkerIdentity	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
.	no	no
getRpcPort	no	yes
(	no	no
)	no	no
,	no	no
instance	no	yes
.	no	no
getResource	no	yes
(	no	no
)	no	no
.	no	no
getMemory	no	yes
(	no	no
)	no	no
*	no	no
1024L	no	no
*	no	no
1024L	no	no
,	no	no
instance	no	yes
.	no	no
getResource	no	yes
(	no	no
)	no	no
.	no	no
getVirtualCores	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
new	no	no
CommandProcessorResponse	no	yes
(	no	no
getSchema	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
boolean	no	no
shouldReExecuteAfterCompile	no	no
(	no	no
PlanMapper	no	no
oldPlanMapper	no	yes
,	no	no
PlanMapper	no	no
newPlanMapper	no	yes
)	no	no
{	no	no
boolean	no	no
ret	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
IReExecutionPlugin	no	no
p	yes	yes
:	no	no
plugins	no	no
)	no	no
{	no	no
boolean	no	no
shouldReExecute	yes	yes
=	no	no
p	yes	yes
.	no	no
shouldReExecute	yes	yes
(	no	no
executionIndex	no	yes
,	no	no
oldPlanMapper	no	yes
,	no	no
newPlanMapper	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
shouldReExecute	yes	yes
(	no	no
CommandProcessorException	no	no
ex	no	yes
)	no	no
{	no	no
boolean	no	no
ret	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
IReExecutionPlugin	no	no
p	yes	yes
:	no	no
plugins	no	no
)	no	no
{	no	no
boolean	no	no
shouldReExecute	yes	yes
=	no	no
p	yes	yes
.	no	no
shouldReExecute	yes	yes
(	no	no
executionIndex	no	yes
,	no	no
ex	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
shouldReExecute	no	no
(	no	no
int	no	no
executionNum	no	no
,	no	no
PlanMapper	no	no
oldPlanMapper	no	yes
,	no	no
PlanMapper	no	no
newPlanMapper	no	yes
)	no	no
{	no	no
boolean	no	no
planDidChange	yes	yes
=	no	no
!	no	no
planEquals	no	yes
(	no	no
oldPlanMapper	no	yes
,	no	no
newPlanMapper	no	yes
)	no	no
;	no	no

long	no	no
interval	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_PRIVILEGE_SYNCHRONIZER_INTERVAL	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
HivePolicyProvider	no	no
policyProvider	no	yes
:	no	no
policyProviderContainer	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
policyProvider	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
authorizer	no	yes
=	no	no
policyProvider	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
privilegeSynchronizerLatch	no	no
.	no	no
await	no	no
(	no	no
interval	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
int	no	no
numDb	no	yes
=	no	no
0	no	no
,	no	no
numTbl	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
dbName	yes	yes
:	no	no
hiveClient	no	yes
.	no	no
getAllDatabases	no	no
(	no	no
)	no	no
)	no	no
{	no	no
numDb	no	yes
++	no	no
;	no	no
HiveObjectRef	no	yes
dbToRefresh	no	yes
=	no	no
getObjToRefresh	no	yes
(	no	no
HiveObjectType	no	yes
.	no	no
DATABASE	no	yes
,	no	no
dbName	yes	yes
,	no	no
null	no	no
)	no	no
;	no	no
PrivilegeBag	no	yes
grantDatabaseBag	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantDatabaseBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
DATABASE	no	yes
,	no	no
dbName	yes	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
dbToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantDatabaseBag	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
policyProvider	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
authorizer	no	yes
=	no	no
policyProvider	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
privilegeSynchronizerLatch	no	no
.	no	no
await	no	no
(	no	no
interval	no	no
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
int	no	no
numDb	no	yes
=	no	no
0	no	no
,	no	no
numTbl	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
dbName	yes	yes
:	no	no
hiveClient	no	yes
.	no	no
getAllDatabases	no	no
(	no	no
)	no	no
)	no	no
{	no	no
numDb	no	yes
++	no	no
;	no	no
HiveObjectRef	no	yes
dbToRefresh	no	yes
=	no	no
getObjToRefresh	no	yes
(	no	no
HiveObjectType	no	yes
.	no	no
DATABASE	no	yes
,	no	no
dbName	yes	yes
,	no	no
null	no	no
)	no	no
;	no	no
PrivilegeBag	no	yes
grantDatabaseBag	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantDatabaseBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
DATABASE	no	yes
,	no	no
dbName	yes	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
dbToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantDatabaseBag	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
dbName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
tblName	yes	no
:	no	no
hiveClient	no	yes
.	no	no
getAllTables	no	no
(	no	no
dbName	yes	yes
)	no	no
)	no	no
{	no	no
numTbl	no	yes
++	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tblName	yes	yes
)	no	no
;	no	no
HiveObjectRef	no	yes
tableToRefresh	no	yes
=	no	no
getObjToRefresh	no	yes
(	no	no
HiveObjectType	no	yes
.	no	no
TABLE	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
PrivilegeBag	no	yes
grantTableBag	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantTableBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
TABLE	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
null	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
tableToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantTableBag	no	yes
)	no	no
;	no	no
HiveObjectRef	no	yes
tableOfColumnsToRefresh	no	yes
=	no	no
getObjToRefresh	no	yes
(	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
PrivilegeBag	no	yes
grantColumnBag	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tbl	no	yes
=	no	no
hiveClient	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
tbl	no	yes
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantColumnBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
tbl	no	yes
.	no	no
getSd	no	no
(	no	no
)	no	no
.	no	no
getCols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantColumnBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
tableOfColumnsToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantColumnBag	no	yes
)	no	no
;	no	no

addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantTableBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
TABLE	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
null	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
tableToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantTableBag	no	yes
)	no	no
;	no	no
HiveObjectRef	no	yes
tableOfColumnsToRefresh	no	yes
=	no	no
getObjToRefresh	no	yes
(	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
PrivilegeBag	no	yes
grantColumnBag	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tbl	no	yes
=	no	no
hiveClient	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
tbl	no	yes
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantColumnBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
tbl	no	yes
.	no	no
getSd	no	no
(	no	no
)	no	no
.	no	no
getCols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
addGrantPrivilegesToBag	no	yes
(	no	no
policyProvider	no	yes
,	no	no
grantColumnBag	no	yes
,	no	no
HiveObjectType	no	yes
.	no	no
COLUMN	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
hiveClient	no	yes
.	no	no
refresh_privileges	no	yes
(	no	no
tableOfColumnsToRefresh	no	yes
,	no	no
authorizer	no	yes
,	no	no
grantColumnBag	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tblName	no	yes
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
policyProvider	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
numDb	no	yes
+	no	no
+	no	no
numTbl	no	yes
+	no	no
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
userHasProxyPrivilege	no	no
(	no	no
String	no	no
user	yes	no
,	no	no
Configuration	no	no
conf	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
MetaStoreServerUtils	no	no
.	no	no
checkUserHasHostProxyPrivileges	no	no
(	no	no
user	yes	no
,	no	no
conf	no	no
,	no	no
HiveMetaStore	no	no
.	no	no
HMSHandler	no	no
.	no	no
getIPAddress	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
final	no	no
void	no	no
onEvent	no	no
(	no	no
PreEventContext	no	no
preEventContext	yes	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
NoSuchObjectException	no	no
,	no	no
InvalidOperationException	no	no
{	no	no

HiveMetaStoreAuthzInfo	no	no
buildAuthzContext	no	no
(	no	no
PreEventContext	no	no
preEventContext	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

break	no	no
;	no	no
case	no	no
ADD_PARTITION	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
AddPartitionEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
ALTER_PARTITION	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
AlterPartitionEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
LOAD_PARTITION_DONE	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
LoadPartitionDoneEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
DROP_PARTITION	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
DropPartitionEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
READ_TABLE	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
ReadTableEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
READ_DATABASE	no	no
:	no	no
authzEvent	no	no
=	no	no
new	no	no
ReadDatabaseEvent	no	no
(	no	no
preEventContext	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
AUTHORIZATION_API_CALL	no	no
:	no	no
case	no	no
READ_ISCHEMA	no	no
:	no	no
case	no	no
CREATE_ISCHEMA	no	no
:	no	no
case	no	no
DROP_ISCHEMA	no	no
:	no	no
case	no	no
ALTER_ISCHEMA	no	no
:	no	no
case	no	no
ADD_SCHEMA_VERSION	no	no
:	no	no
case	no	no
ALTER_SCHEMA_VERSION	no	no
:	no	no
case	no	no
DROP_SCHEMA_VERSION	no	no
:	no	no
case	no	no
READ_SCHEMA_VERSION	no	no
:	no	no
case	no	no
CREATE_CATALOG	no	no
:	no	no
case	no	no
ALTER_CATALOG	no	no
:	no	no
case	no	no
DROP_CATALOG	no	no
:	no	no
if	no	no
(	no	no
!	no	no
isSuperUser	no	no
(	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
getErrorMessage	no	yes
(	no	no
preEventContext	yes	yes
,	no	no
getCurrentUser	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
checkPrivileges	no	no
(	no	no
final	no	no
HiveMetaStoreAuthzInfo	no	no
authzContext	yes	no
,	no	no
HiveAuthorizer	no	no
authorizer	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
getOutputHObjs	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
ret	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
PreAddPartitionEvent	no	yes
event	no	yes
=	no	no
(	no	no
PreAddPartitionEvent	no	yes
)	no	no
preEventContext	no	yes
;	no	no
Table	no	yes
table	no	yes
=	no	no
event	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
getHivePrivilegeObject	no	yes
(	no	no
table	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
partitions	no	yes
=	no	no
event	no	yes
.	no	no
getPartitions	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitions	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Partition	no	yes
partition	no	yes
:	no	no
partitions	no	yes
)	no	no
{	no	no
String	no	yes
uri	no	yes
=	no	no
getSdLocation	no	yes
(	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
uri	no	yes
)	no	no
)	no	no
{	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
getHivePrivilegeObjectDfsUri	no	yes
(	no	no
uri	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
COMMAND_STR	no	yes
=	no	no
buildCommandString	no	yes
(	no	no
COMMAND_STR	no	yes
,	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
getInputHObjs	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
ret	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
PreReadDatabaseEvent	no	yes
preReadDatabaseEvent	no	yes
=	no	no
(	no	no
PreReadDatabaseEvent	no	yes
)	no	no
preEventContext	no	yes
;	no	no
Database	no	yes
database	no	yes
=	no	no
preReadDatabaseEvent	no	yes
.	no	no
getDatabase	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
database	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
getHivePrivilegeObject	no	yes
(	no	no
database	no	yes
)	no	no
)	no	no
;	no	no
COMMAND_STR	no	yes
=	no	no
buildCommandString	no	yes
(	no	no
COMMAND_STR	no	yes
,	no	no
database	no	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
getInputHObjs	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
ret	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
PreReadTableEvent	no	yes
preReadTableEvent	no	yes
=	no	no
(	no	no
PreReadTableEvent	no	yes
)	no	no
preEventContext	no	yes
;	no	no
String	no	yes
dbName	no	yes
=	no	no
preReadTableEvent	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
table	no	yes
=	no	no
preReadTableEvent	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
new	no	no
HivePrivilegeObject	no	yes
(	no	no
HivePrivilegeObjectType	no	yes
.	no	no
DATABASE	no	yes
,	no	no
dbName	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
HivePrivilegeObject	no	yes
.	no	no
HivePrivObjectActionType	no	yes
.	no	no
OTHER	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
table	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getOwnerType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
getHivePrivilegeObject	no	yes
(	no	no
table	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
RequiredPrivileges	no	yes
getPrivilegesFromFS	no	no
(	no	no
Path	no	no
filePath	yes	yes
,	no	no
HiveConf	no	no
conf	no	yes
,	no	no
String	no	no
userName	no	no
)	no	no
throws	no	no
HiveAuthzPluginException	no	no
{	no	no
RequiredPrivileges	no	yes
availPrivs	no	yes
=	no	no
new	no	no
RequiredPrivileges	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
;	no	no
try	no	no
{	no	no
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
filePath	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
fileMatches	no	yes
=	no	no
fs	no	yes
.	no	no
globStatus	no	yes
(	no	no
filePath	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
fileMatches	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
fileMatches	no	yes
.	no	no
length	no	no
>	no	no
1	no	no
)	no	no
)	no	no
{	no	no

RequiredPrivileges	no	yes
availPrivs	no	yes
=	no	no
new	no	no
RequiredPrivileges	no	yes
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
;	no	no
try	no	no
{	no	no
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
filePath	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
fileMatches	no	yes
=	no	no
fs	no	yes
.	no	no
globStatus	no	yes
(	no	no
filePath	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
fileMatches	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
fileMatches	no	yes
.	no	no
length	no	no
>	no	no
1	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filePath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addPrivilegesFromFS	no	yes
(	no	no
userName	no	yes
,	no	no
availPrivs	no	yes
,	no	no
fs	no	yes
,	no	no
fileMatches	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getFileStatusOrNull	no	yes
(	no	no
fs	no	yes
,	no	no
filePath	yes	yes
)	no	no
;	no	no
boolean	no	no
pickParent	no	yes
=	no	no
(	no	no
fileStatus	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pickParent	no	yes
)	no	no
{	no	no
fileStatus	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getPathOrParentThatExists	no	yes
(	no	no
fs	no	yes
,	no	no
filePath	yes	yes
.	no	no
getParent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
path	yes	yes
=	no	no
fileStatus	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pickParent	no	yes
)	no	no
{	no	no

fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
filePath	yes	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
[	no	no
]	no	no
fileMatches	no	yes
=	no	no
fs	no	yes
.	no	no
globStatus	no	yes
(	no	no
filePath	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
fileMatches	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
fileMatches	no	yes
.	no	no
length	no	no
>	no	no
1	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filePath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addPrivilegesFromFS	no	yes
(	no	no
userName	no	yes
,	no	no
availPrivs	no	yes
,	no	no
fs	no	yes
,	no	no
fileMatches	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
FileStatus	no	yes
fileStatus	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getFileStatusOrNull	no	yes
(	no	no
fs	no	yes
,	no	no
filePath	yes	yes
)	no	no
;	no	no
boolean	no	no
pickParent	no	yes
=	no	no
(	no	no
fileStatus	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pickParent	no	yes
)	no	no
{	no	no
fileStatus	no	yes
=	no	no
FileUtils	no	yes
.	no	no
getPathOrParentThatExists	no	yes
(	no	no
fs	no	yes
,	no	no
filePath	yes	yes
.	no	no
getParent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
path	yes	yes
=	no	no
fileStatus	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
pickParent	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
path	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
filePath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addPrivilegesFromFS	no	yes
(	no	no
userName	no	yes
,	no	no
availPrivs	no	yes
,	no	no
fs	no	yes
,	no	no
fileStatus	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

private	no	no
static	no	no
Set	no	yes
<	no	no
SQLPrivTypeGrant	no	yes
>	no	no
getPrivilegesFromFS	no	no
(	no	no
String	no	no
userName	yes	no
,	no	no
FileSystem	no	no
fs	no	no
,	no	no
FileStatus	no	no
fileStatus	yes	no
,	no	no
boolean	no	no
recurse	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Set	no	yes
<	no	no
SQLPrivTypeGrant	no	yes
>	no	no
privs	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
SQLPrivTypeGrant	no	yes
>	no	no
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
checkPrivileges	no	no
(	no	no
HiveOperationType	no	no
hiveOpType	no	yes
,	no	no
List	no	no
<	no	no
HivePrivilegeObject	no	no
>	no	no
inputHObjs	no	yes
,	no	no
List	no	no
<	no	no
HivePrivilegeObject	no	no
>	no	no
outputHObjs	no	yes
,	no	no
HiveAuthzContext	no	no
context	no	yes
)	no	no
throws	no	no
HiveAuthzPluginException	no	no
,	no	no
HiveAccessControlException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
hiveOpType	no	yes
+	no	no
+	no	no
authenticator	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
inputHObjs	no	yes
+	no	no
+	no	no
outputHObjs	no	yes
+	no	no
+	no	no
context	no	yes
;	no	no

@	no	no
Override	no	no
public	no	no
List	no	no
<	no	no
HivePrivilegeObject	no	no
>	no	no
filterListCmdObjects	no	no
(	no	no
List	no	no
<	no	no
HivePrivilegeObject	no	no
>	no	no
listObjs	no	yes
,	no	no
HiveAuthzContext	no	no
context	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
listObjs	no	yes
+	no	no
+	no	no
authenticator	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
context	no	yes
;	no	no

public	no	no
void	no	no
updateThreadName	no	no
(	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
sessionId	no	yes
=	no	no
getSessionId	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
logPrefix	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLogIdVar	no	yes
(	no	no
sessionId	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
currThreadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
currThreadName	no	yes
.	no	no
contains	no	no
(	no	no
logPrefix	no	yes
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
newThreadName	yes	yes
=	no	no
logPrefix	no	yes
+	no	no
+	no	no
currThreadName	no	yes
;	no	no

public	no	no
void	no	no
resetThreadName	no	no
(	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
sessionId	no	yes
=	no	no
getSessionId	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
logPrefix	no	yes
=	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getLogIdVar	no	yes
(	no	no
sessionId	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
currThreadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
currThreadName	no	yes
.	no	no
contains	no	no
(	no	no
logPrefix	no	yes
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
[	no	no
]	no	no
names	yes	yes
=	no	no
currThreadName	no	yes
.	no	no
split	no	yes
(	no	no
logPrefix	no	yes
)	no	no
;	no	no

return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
authenticator	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getAuthenticator	no	yes
(	no	no
sessionConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_AUTHENTICATOR_MANAGER	no	yes
)	no	no
;	no	no
authenticator	no	yes
.	no	no
setSessionState	no	yes
(	no	no
this	no	no
)	no	no
;	no	no
String	no	yes
clsStr	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
sessionConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_AUTHORIZATION_MANAGER	no	yes
)	no	no
;	no	no
authorizer	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getAuthorizeProviderManager	no	yes
(	no	no
sessionConf	no	yes
,	no	no
clsStr	no	yes
,	no	no
authenticator	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
authorizer	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
HiveAuthorizerFactory	no	yes
authorizerFactory	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getAuthorizerFactory	no	yes
(	no	no
sessionConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_AUTHORIZATION_MANAGER	no	yes
)	no	no
;	no	no
HiveAuthzSessionContext	no	yes
.	no	no
Builder	no	yes
authzContextBuilder	no	yes
=	no	no
new	no	no
HiveAuthzSessionContext	no	yes
.	no	no
Builder	no	yes
(	no	no
)	no	no
;	no	no
authzContextBuilder	no	yes
.	no	no
setClientType	no	yes
(	no	no
isHiveServerQuery	no	yes
(	no	no
)	no	no
?	no	no
CLIENT_TYPE	no	yes
.	no	no
HIVESERVER2	no	yes
:	no	no
CLIENT_TYPE	no	yes
.	no	no
HIVECLI	no	yes
)	no	no
;	no	no
authzContextBuilder	no	yes
.	no	no
setSessionString	no	yes
(	no	no
getSessionId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
authorizerV2	no	yes
=	no	no
authorizerFactory	no	yes
.	no	no
createHiveAuthorizer	no	yes
(	no	no
new	no	no
HiveMetastoreClientFactoryImpl	no	yes
(	no	no
)	no	no
,	no	no
sessionConf	no	yes
,	no	no
authenticator	no	yes
,	no	no
authzContextBuilder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setAuthorizerV2Config	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
createTableGrants	no	yes
=	no	no
CreateTableAutomaticGrant	no	yes
.	no	no
create	no	yes
(	no	no
sessionConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	no
)	no	no
{	no	no

for	no	no
(	no	no
Closeable	no	no
cleanupItem	no	yes
:	no	no
cleanupItems	no	no
)	no	no
{	no	no
try	no	no
{	no	no
cleanupItem	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
err	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
cleanupItem	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
err	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
registry	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
txnMgr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
txnMgr	no	yes
.	no	no
closeTxnManager	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
JavaUtils	no	yes
.	no	no
closeClassLoadersTo	no	yes
(	no	no
sessionConf	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
,	no	no
parentLoader	no	yes
)	no	no
;	no	no
File	no	yes
resourceDir	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
DOWNLOADED_RESOURCES_DIR	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
resourceDir	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
resourceDir	yes	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FileUtils	no	yes
.	no	no
deleteDirectory	no	yes
(	no	no
resourceDir	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
registry	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
txnMgr	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
txnMgr	no	yes
.	no	no
closeTxnManager	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
JavaUtils	no	yes
.	no	no
closeClassLoadersTo	no	yes
(	no	no
sessionConf	no	yes
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
,	no	no
parentLoader	no	yes
)	no	no
;	no	no
File	no	yes
resourceDir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
DOWNLOADED_RESOURCES_DIR	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
resourceDir	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
resourceDir	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no
FileUtils	no	yes
.	no	no
deleteDirectory	no	yes
(	no	no
resourceDir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
resourceDir	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
detachSession	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
tezSessionState	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

String	no	yes
tableFullName	no	yes
=	no	no
table	no	yes
.	no	no
getFullyQualifiedName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
scs	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
0	no	no
;	no	no
}	no	no
if	no	no
(	no	no
work	no	no
.	no	no
isStatsReliable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
FooterStatCollector	no	yes
statsCollection	no	yes
:	no	no
scs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
statsCollection	no	yes
.	no	no
result	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
statsCollection	no	yes
.	no	no
partish	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
-	no	no
1	no	no
;	no	no
}	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
validColectors	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FooterStatCollector	no	yes
statsCollection	no	yes
:	no	no
scs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
statsCollection	no	yes
.	no	no
isValid	no	no
(	no	no
)	no	no
)	no	no
{	no	no
validColectors	no	yes
.	no	no
add	no	yes
(	no	no
statsCollection	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
EnvironmentContext	no	yes
environmentContext	no	yes
=	no	no
new	no	no
EnvironmentContext	no	yes
(	no	no
)	no	no
;	no	no
environmentContext	no	yes
.	no	no
putToProperties	no	yes
(	no	no
StatsSetupConst	no	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
TRUE	no	yes
)	no	no
;	no	no
ImmutableListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
FooterStatCollector	no	yes
>	no	no
collectorsByTable	yes	yes
=	no	no
Multimaps	no	yes
.	no	no
index	no	yes
(	no	no
validColectors	no	yes
,	no	no
FooterStatCollector	no	yes
.	no	no
SIMPLE_NAME_FUNCTION	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
work	no	no
.	no	no
isStatsReliable	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
FooterStatCollector	no	yes
statsCollection	no	yes
:	no	no
scs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
statsCollection	no	yes
.	no	no
result	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
statsCollection	no	yes
.	no	no
partish	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
-	no	no
1	no	no
;	no	no
}	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
validColectors	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FooterStatCollector	no	yes
statsCollection	no	yes
:	no	no
scs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
statsCollection	no	yes
.	no	no
isValid	no	no
(	no	no
)	no	no
)	no	no
{	no	no
validColectors	no	yes
.	no	no
add	no	yes
(	no	no
statsCollection	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
EnvironmentContext	no	yes
environmentContext	no	yes
=	no	no
new	no	no
EnvironmentContext	no	yes
(	no	no
)	no	no
;	no	no
environmentContext	no	yes
.	no	no
putToProperties	no	yes
(	no	no
StatsSetupConst	no	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
TRUE	no	yes
)	no	no
;	no	no
ImmutableListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
FooterStatCollector	no	yes
>	no	no
collectorsByTable	no	yes
=	no	no
Multimaps	no	yes
.	no	no
index	no	yes
(	no	no
validColectors	no	yes
,	no	no
FooterStatCollector	no	yes
.	no	no
SIMPLE_NAME_FUNCTION	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no

}	no	no
List	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
validColectors	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FooterStatCollector	no	yes
statsCollection	no	yes
:	no	no
scs	no	no
)	no	no
{	no	no
if	no	no
(	no	no
statsCollection	no	yes
.	no	no
isValid	no	no
(	no	no
)	no	no
)	no	no
{	no	no
validColectors	no	yes
.	no	no
add	no	yes
(	no	no
statsCollection	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
EnvironmentContext	no	yes
environmentContext	no	yes
=	no	no
new	no	no
EnvironmentContext	no	yes
(	no	no
)	no	no
;	no	no
environmentContext	no	yes
.	no	no
putToProperties	no	yes
(	no	no
StatsSetupConst	no	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
TRUE	no	yes
)	no	no
;	no	no
ImmutableListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
FooterStatCollector	no	yes
>	no	no
collectorsByTable	no	yes
=	no	no
Multimaps	no	yes
.	no	no
index	no	yes
(	no	no
validColectors	no	yes
,	no	no
FooterStatCollector	no	yes
.	no	no
SIMPLE_NAME_FUNCTION	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
}	no	no
assert	no	yes
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
partName	no	yes
:	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ImmutableList	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
values	no	yes
=	no	no
collectorsByTable	no	yes
.	no	no
get	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
values	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

}	no	no
}	no	no
EnvironmentContext	no	yes
environmentContext	no	yes
=	no	no
new	no	no
EnvironmentContext	no	yes
(	no	no
)	no	no
;	no	no
environmentContext	no	yes
.	no	no
putToProperties	no	yes
(	no	no
StatsSetupConst	no	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
TRUE	no	yes
)	no	no
;	no	no
ImmutableListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
FooterStatCollector	no	yes
>	no	no
collectorsByTable	no	yes
=	no	no
Multimaps	no	yes
.	no	no
index	no	yes
(	no	no
validColectors	no	yes
,	no	no
FooterStatCollector	no	yes
.	no	no
SIMPLE_NAME_FUNCTION	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
}	no	no
assert	no	yes
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
partName	no	yes
:	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ImmutableList	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
values	no	yes
=	no	no
collectorsByTable	no	yes
.	no	no
get	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
values	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
result	no	yes
instanceof	no	no
Table	no	yes
)	no	no
{	no	no
db	no	yes
.	no	no
alterTable	no	yes
(	no	no
tableFullName	yes	yes
,	no	no
(	no	no
Table	no	yes
)	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
result	no	yes
,	no	no
environmentContext	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no

ImmutableListMultimap	no	yes
<	no	no
String	no	yes
,	no	no
FooterStatCollector	no	yes
>	no	no
collectorsByTable	no	yes
=	no	no
Multimaps	no	yes
.	no	no
index	no	yes
(	no	no
validColectors	no	yes
,	no	no
FooterStatCollector	no	yes
.	no	no
SIMPLE_NAME_FUNCTION	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
}	no	no
assert	no	yes
(	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
<=	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
partName	no	yes
:	no	no
collectorsByTable	no	yes
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
ImmutableList	no	yes
<	no	no
FooterStatCollector	no	yes
>	no	no
values	no	yes
=	no	no
collectorsByTable	no	yes
.	no	no
get	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
values	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
result	no	yes
instanceof	no	no
Table	no	yes
)	no	no
{	no	no
db	no	yes
.	no	no
alterTable	no	yes
(	no	no
tableFullName	yes	yes
,	no	no
(	no	no
Table	no	yes
)	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
result	no	yes
,	no	no
environmentContext	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tableFullName	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
values	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
result	no	yes
instanceof	no	no
Partition	no	no
)	no	no
{	no	no

}	no	no
console	no	yes
.	no	no
printError	no	yes
(	no	no
ErrorMsg	no	yes
.	no	no
STATS_SKIPPING_BY_ERROR	no	yes
.	no	no
getErrorCodedMsg	no	yes
(	no	no
e	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
partitions	no	yes
=	no	no
getPartitionsList	no	yes
(	no	no
db	no	yes
)	no	no
;	no	no
String	no	yes
tableFullName	yes	yes
=	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Partish	no	yes
>	no	no
partishes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitions	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
Partish	no	yes
p	yes	yes
;	no	no
partishes	no	yes
.	no	no
add	no	yes
(	no	no
p	yes	yes
=	no	no
new	no	no
Partish	no	yes
.	no	no
PTable	no	yes
(	no	no
table	no	yes
)	no	no
)	no	no
;	no	no
BasicStatsProcessor	no	yes
basicStatsProcessor	no	yes
=	no	no
new	no	no
BasicStatsProcessor	no	yes
(	no	no
p	yes	yes
,	no	no
work	no	yes
,	no	no
conf	no	yes
,	no	no
followedColStats	no	yes
)	no	no
;	no	no
basicStatsProcessor	no	yes
.	no	no
collectFileStatus	no	yes
(	no	no
wh	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
Table	no	yes
res	no	yes
=	no	no
(	no	no
Table	no	yes
)	no	no
basicStatsProcessor	no	yes
.	no	no
process	no	yes
(	no	no
statsAggregator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
res	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
0	no	no
;	no	no
}	no	no
db	no	yes
.	no	no
alterTable	no	yes
(	no	no
tableFullName	yes	yes
,	no	no
res	no	yes
,	no	no
environmentContext	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
TEZ_EXEC_SUMMARY	no	no
)	no	no
)	no	no
{	no	no
console	no	yes
.	no	no
printInfo	no	yes
(	no	no
+	no	no
tableFullName	yes	yes
+	no	no
+	no	no
toString	no	yes
(	no	no
p	yes	yes
.	no	no
getPartParameters	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
']'	no	no
)	no	no
;	no	no

}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tableFullName	no	yes
+	no	no
+	no	no
toString	no	yes
(	no	no
p	no	yes
.	no	no
getPartParameters	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
']'	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
updates	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Partition	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
buildBasicStatsExecutor	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
Void	no	yes
>>	no	no
futures	yes	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
BasicStatsProcessor	no	yes
>	no	no
processors	no	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
final	no	no
Partition	no	yes
partn	no	yes
:	no	no
partitions	no	no
)	no	no
{	no	no
Partish	no	yes
p	no	yes
;	no	no
BasicStatsProcessor	no	yes
bsp	no	yes
=	no	no
new	no	no
BasicStatsProcessor	no	yes
(	no	no
p	no	yes
=	no	no
new	no	no
Partish	no	yes
.	no	no
PPart	no	yes
(	no	no
table	no	yes
,	no	no
partn	no	yes
)	no	no
,	no	no
work	no	yes
,	no	no
conf	no	yes
,	no	no
followedColStats	no	yes
)	no	no
;	no	no
processors	no	yes
.	no	no
add	no	yes
(	no	no
bsp	no	yes
)	no	no
;	no	no
futures	yes	yes
.	no	no
add	no	yes
(	no	no
pool	no	yes
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
Void	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Void	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
bsp	no	yes
.	no	no
collectFileStatus	no	yes
(	no	no
wh	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no

private	no	no
ExecutorService	no	yes
buildBasicStatsExecutor	no	no
(	no	no
)	no	no
{	no	no
int	no	no
poolSize	yes	yes
=	no	no
conf	no	yes
.	no	no
getInt	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_MOVE_FILES_THREAD_COUNT	no	yes
.	no	no
varname	no	yes
,	no	no
1	no	no
)	no	no
;	no	no
poolSize	yes	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
poolSize	yes	yes
,	no	no
1	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
poolSize	yes	yes
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

final	no	no
StructObjectInspector	no	yes
soi	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
packedRow	no	yes
.	no	no
oi	no	yes
;	no	no
final	no	no
List	no	yes
<	no	no
?	no	no
extends	no	no
StructField	no	yes
>	no	no
fields	no	yes
=	no	no
soi	no	yes
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Object	no	yes
>	no	no
values	no	yes
=	no	no
soi	no	yes
.	no	no
getStructFieldsDataAsList	no	yes
(	no	no
packedRow	no	yes
.	no	no
o	no	yes
)	no	no
;	no	no
int	no	no
pos	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
colName	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
columnName	yes	yes
=	no	no
colName	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
String	no	yes
columnType	no	yes
=	no	no
colType	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
PrimitiveTypeInfo	no	yes
typeInfo	no	yes
=	no	no
(	no	no
PrimitiveTypeInfo	no	yes
)	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfoFromTypeString	no	yes
(	no	no
columnType	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatsField	no	yes
>	no	no
columnStatsFields	no	yes
=	no	no
ColumnStatsType	no	yes
.	no	no
getColumnStats	no	yes
(	no	no
typeInfo	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ColumnStatisticsObj	no	yes
statObj	no	yes
=	no	no
ColumnStatisticsObjTranslator	no	yes
.	no	no
readHiveColumnStatistics	no	yes
(	no	no
columnName	yes	yes
,	no	no
columnType	no	yes
,	no	no
columnStatsFields	no	yes
,	no	no
pos	no	yes
,	no	no
fields	no	yes
,	no	no
values	no	yes
)	no	no
;	no	no
statsObjs	no	yes
.	no	no
add	no	yes
(	no	no
statObj	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
isStatsReliable	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

String	no	yes
vertexName	yes	yes
=	no	no
baseWork	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
vertexName	yes	yes
)	no	no
;	no	no
TezCounters	no	yes
counters	no	yes
=	no	no
tezTask	no	yes
.	no	no
getTezCounters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
counters	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
groupName	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVECOUNTERGROUP	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Operator	no	yes
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
op	no	yes
:	no	no
baseWork	no	yes
.	no	no
getAllOperators	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
operatorId	yes	yes
=	no	no
op	no	yes
.	no	no
getOperatorId	no	yes
(	no	no
)	no	no
;	no	no
OperatorStats	no	yes
operatorStats	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
counterName	no	yes
=	no	no
Operator	no	yes
.	no	no
Counter	no	yes
.	no	no
RECORDS_OUT_OPERATOR	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
operatorId	yes	yes
;	no	no
TezCounter	no	yes
tezCounter	no	yes
=	no	no
counters	no	yes
.	no	no
getGroup	no	yes
(	no	no
groupName	yes	yes
)	no	no
.	no	no
findCounter	no	yes
(	no	no
counterName	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tezCounter	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
operatorStats	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
operatorStats	no	yes
=	no	no
new	no	no
OperatorStats	no	yes
(	no	no
operatorId	yes	yes
)	no	no
;	no	no
}	no	no
operatorStats	no	yes
.	no	no
setOutputRecords	no	yes
(	no	no
tezCounter	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
operatorStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
stopWorkers	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
fullTableNames	no	yes
)	no	no
;	no	no
boolean	no	no
hadUpdates	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
TableName	no	no
fullTableName	yes	yes
:	no	no
fullTableNames	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
AnalyzeWork	no	yes
>	no	no
commands	no	yes
=	no	no
processOneTable	no	yes
(	no	no
fullTableName	yes	yes
)	no	no
;	no	no
hadUpdates	no	yes
=	no	no
hadUpdates	no	yes
||	no	no
commands	no	yes
!=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
commands	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
AnalyzeWork	no	yes
req	no	yes
:	no	no
commands	no	yes
)	no	no
{	no	no
markAnalyzeInProgress	no	yes
(	no	no
req	no	yes
)	no	no
;	no	no
workQueue	no	yes
.	no	no
put	no	yes
(	no	no
req	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
List	no	no
<	no	no
AnalyzeWork	no	no
>	no	no
processOneTable	no	no
(	no	no
TableName	no	no
fullTableName	no	yes
)	no	no
throws	no	no
MetaException	no	no
,	no	no
NoSuchTxnException	no	no
,	no	no
NoSuchObjectException	no	no
{	no	no
if	no	no
(	no	no
isAnalyzeTableInProgress	no	yes
(	no	no
fullTableName	no	yes
)	no	no
)	no	no
return	no	no
null	no	no
;	no	no
String	no	yes
cat	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getCat	no	yes
(	no	no
)	no	no
,	no	no
db	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
table	yes	yes
=	no	no
rs	no	yes
.	no	no
getTable	no	yes
(	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
;	no	no

private	no	no
List	no	no
<	no	no
AnalyzeWork	no	no
>	no	no
processOneTable	no	no
(	no	no
TableName	no	no
fullTableName	no	yes
)	no	no
throws	no	no
MetaException	no	no
,	no	no
NoSuchTxnException	no	no
,	no	no
NoSuchObjectException	no	no
{	no	no
if	no	no
(	no	no
isAnalyzeTableInProgress	no	yes
(	no	no
fullTableName	no	yes
)	no	no
)	no	no
return	no	no
null	no	no
;	no	no
String	no	yes
cat	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getCat	no	yes
(	no	no
)	no	no
,	no	no
db	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
=	no	no
fullTableName	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
table	yes	yes
=	no	no
rs	no	yes
.	no	no
getTable	no	yes
(	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
table	yes	yes
)	no	no
;	no	no
String	no	yes
skipParam	no	yes
=	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
SKIP_STATS_AUTOUPDATE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
skipParam	no	yes
)	no	no
)	no	no
return	no	no
null	no	no
;	no	no
String	no	yes
replTrgtParam	no	yes
=	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
ReplConst	no	yes
.	no	no
REPL_TARGET_TABLE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
replTrgtParam	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
replTrgtParam	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

String	no	yes
cat	no	yes
=	no	no
fullTableName	yes	yes
.	no	no
getCat	no	yes
(	no	no
)	no	no
,	no	no
db	no	yes
=	no	no
fullTableName	yes	yes
.	no	no
getDb	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
=	no	no
fullTableName	yes	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
table	no	yes
=	no	no
rs	no	yes
.	no	no
getTable	no	yes
(	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
table	no	yes
)	no	no
;	no	no
String	no	yes
skipParam	no	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
SKIP_STATS_AUTOUPDATE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
skipParam	no	yes
)	no	no
)	no	no
return	no	no
null	no	no
;	no	no
String	no	yes
replTrgtParam	no	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
ReplConst	no	yes
.	no	no
REPL_TARGET_TABLE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
replTrgtParam	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
replTrgtParam	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
table	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
String	no	yes
writeIdString	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
isTxn	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isTxn	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
areTxnStatsEnabled	no	yes
)	no	no
return	no	no
null	no	no
;	no	no
ValidReaderWriteIdList	no	yes
writeIds	no	yes
=	no	no
getWriteIds	no	yes
(	no	no
fullTableName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
writeIds	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
fullTableName	no	yes
+	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
writeIdString	no	yes
=	no	no
writeIds	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
allCols	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getColsSize	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
allCols	yes	yes
.	no	no
add	no	yes
(	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
allCols	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
getPartitionKeysSize	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	yes	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
colsToUpdate	yes	yes
=	no	no
null	no	no
;	no	no
long	no	no
writeId	no	yes
=	no	no
isTxn	no	yes
?	no	no
table	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
:	no	no
-	no	no
1	no	no
;	no	no
if	no	no
(	no	no
isExistingOnly	yes	no
)	no	no
{	no	no
colsToUpdate	yes	yes
=	no	no
getExistingNonPartTableStatsToUpdate	no	yes
(	no	no
fullTableName	no	yes
,	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
params	yes	yes
,	no	no
writeId	no	yes
,	no	no
allCols	yes	yes
,	no	no
writeIdString	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
colsToUpdate	yes	yes
=	no	no
getAnyStatsToUpdate	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
allCols	yes	yes
,	no	no
params	yes	yes
,	no	no
writeId	no	yes
,	no	no
writeIdString	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
FieldSchema	no	no
fs	no	yes
:	no	no
table	no	yes
.	no	no
getSd	no	no
(	no	no
)	no	no
.	no	no
getCols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
allCols	yes	yes
.	no	no
add	no	yes
(	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
allCols	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	no	yes
.	no	no
getPartitionKeysSize	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
colsToUpdate	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
writeId	no	yes
=	no	no
isTxn	no	yes
?	no	no
table	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
:	no	no
-	no	no
1	no	no
;	no	no
if	no	no
(	no	no
isExistingOnly	yes	yes
)	no	no
{	no	no
colsToUpdate	no	yes
=	no	no
getExistingNonPartTableStatsToUpdate	no	yes
(	no	no
fullTableName	no	yes
,	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
params	no	yes
,	no	no
writeId	no	yes
,	no	no
allCols	yes	yes
,	no	no
writeIdString	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
colsToUpdate	no	yes
=	no	no
getAnyStatsToUpdate	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
allCols	yes	yes
,	no	no
params	no	yes
,	no	no
writeId	no	yes
,	no	no
writeIdString	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
colsToUpdate	no	yes
,	no	no
isExistingOnly	yes	yes
,	no	no
allCols	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colsToUpdate	no	yes
==	no	no
null	no	no
||	no	no
colsToUpdate	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
return	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
new	no	no
AnalyzeWork	no	yes
(	no	no
fullTableName	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
allCols	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
colsToUpdate	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
?	no	no
null	no	no
:	no	no
colsToUpdate	no	yes
)	no	no
)	no	no
;	no	no

currentBatch	no	yes
=	no	no
rs	no	yes
.	no	no
getPartitionsByNames	no	yes
(	no	no
cat	no	yes
,	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
currentNames	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
fullTableName	no	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
currentBatch	no	yes
=	no	no
null	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
nextIxInBatch	no	yes
=	no	no
0	no	no
;	no	no
}	no	no
int	no	no
currentIxInBatch	no	yes
=	no	no
nextIxInBatch	no	yes
++	no	no
;	no	no
Partition	no	yes
part	no	yes
=	no	no
currentBatch	no	yes
.	no	no
get	no	yes
(	no	no
currentIxInBatch	no	yes
)	no	no
;	no	no
String	no	yes
partName	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
t	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
currentIxInBatch	no	yes
,	no	no
partName	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	yes	yes
=	no	no
part	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
skipParam	no	yes
=	no	no
params	yes	yes
.	no	no
get	no	yes
(	no	no
SKIP_STATS_AUTOUPDATE_PROPERTY	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isAnalyzePartInProgress	no	no
(	no	no
fullTableName	no	yes
,	no	no
partName	no	yes
)	no	no
||	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
skipParam	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isAllParts	no	no
)	no	no
{	no	no
addPreviousPartitions	no	yes
(	no	no
t	no	yes
,	no	no
partNames	no	yes
,	no	no
currentBatchStart	no	yes
,	no	no
currentBatch	no	yes
,	no	no
currentIxInBatch	no	yes
,	no	no
colsToUpdateForAll	no	yes
,	no	no
partsToAnalyze	no	yes
)	no	no
;	no	no

AnalyzeWork	no	yes
req	no	yes
;	no	no
if	no	no
(	no	no
doWait	no	no
)	no	no
{	no	no
req	no	yes
=	no	no
workQueue	no	yes
.	no	no
take	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
req	no	yes
=	no	no
workQueue	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
req	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
String	no	yes
cmd	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
cmd	yes	yes
=	no	no
req	no	yes
.	no	no
buildCommand	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
cmd	yes	yes
,	no	no
req	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
doWait	no	no
)	no	no
{	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
ss	no	yes
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
ss	no	yes
,	no	no
cmd	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
}	no	no
if	no	no
(	no	no
needColStats	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partitionCols	no	yes
=	no	no
getPartitionColumns	no	yes
(	no	no
schema	no	yes
,	no	no
neededColumns	no	yes
,	no	no
referencedColumns	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ColStatistics	no	yes
>	no	no
columnStats	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
neededColsToRetrieve	no	yes
=	no	no
extractColumnStates	no	yes
(	no	no
table	no	yes
,	no	no
neededColumns	no	yes
,	no	no
colStatsCache	no	yes
,	no	no
columnStats	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partitionColsToRetrieve	no	yes
=	no	no
extractColumnStates	no	yes
(	no	no
table	no	yes
,	no	no
partitionCols	no	yes
,	no	no
colStatsCache	no	yes
,	no	no
columnStats	yes	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partNames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
partList	no	yes
.	no	no
getNotDeniedPartns	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	no
part	no	yes
:	no	no
partList	no	yes
.	no	no
getNotDeniedPartns	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
partNames	no	yes
.	no	no
add	no	yes
(	no	no
part	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
AggrStats	no	yes
aggrStats	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
fetchColStats	no	no
&&	no	no
!	no	no
neededColsToRetrieve	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
partNames	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
aggrStats	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getAggrColStatsFor	no	yes
(	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
neededColsToRetrieve	no	yes
,	no	no
partNames	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
statsRetrieved	no	yes
=	no	no
aggrStats	no	yes
!=	no	no
null	no	no
&&	no	no
aggrStats	no	yes
.	no	no
getColStats	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
aggrStats	no	yes
.	no	no
getColStatsSize	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
neededColumns	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
(	no	no
!	no	no
neededColsToRetrieve	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
statsRetrieved	no	yes
)	no	no
)	no	no
{	no	no
estimateStatsForMissingCols	no	yes
(	no	no
neededColsToRetrieve	no	yes
,	no	no
columnStats	yes	yes
,	no	no
table	no	yes
,	no	no
conf	no	yes
,	no	no
nr	no	yes
,	no	no
schema	no	yes
)	no	no
;	no	no
addPartitionColumnStats	no	yes
(	no	no
conf	no	yes
,	no	no
partitionColsToRetrieve	no	yes
,	no	no
schema	no	yes
,	no	no
table	no	yes
,	no	no
partList	no	yes
,	no	no
columnStats	yes	yes
)	no	no
;	no	no

AggrStats	no	yes
aggrStats	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
fetchColStats	no	no
&&	no	no
!	no	no
neededColsToRetrieve	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
partNames	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
aggrStats	yes	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getAggrColStatsFor	no	yes
(	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
neededColsToRetrieve	no	yes
,	no	no
partNames	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
statsRetrieved	no	yes
=	no	no
aggrStats	yes	yes
!=	no	no
null	no	no
&&	no	no
aggrStats	yes	yes
.	no	no
getColStats	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
aggrStats	yes	yes
.	no	no
getColStatsSize	no	yes
(	no	no
)	no	no
!=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
neededColumns	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
(	no	no
!	no	no
neededColsToRetrieve	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
statsRetrieved	no	yes
)	no	no
)	no	no
{	no	no
estimateStatsForMissingCols	no	yes
(	no	no
neededColsToRetrieve	no	yes
,	no	no
columnStats	no	yes
,	no	no
table	no	yes
,	no	no
conf	no	yes
,	no	no
nr	no	yes
,	no	no
schema	no	yes
)	no	no
;	no	no
addPartitionColumnStats	no	yes
(	no	no
conf	no	yes
,	no	no
partitionColsToRetrieve	no	yes
,	no	no
schema	no	yes
,	no	no
table	no	yes
,	no	no
partList	no	yes
,	no	no
columnStats	no	yes
)	no	no
;	no	no
stats	no	yes
.	no	no
addToDataSize	no	yes
(	no	no
getDataSizeFromColumnStats	no	yes
(	no	no
nr	no	yes
,	no	no
columnStats	no	yes
)	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
updateColumnStatsState	no	yes
(	no	no
deriveStatType	no	yes
(	no	no
columnStats	no	yes
,	no	no
referencedColumns	no	yes
)	no	no
)	no	no
;	no	no
stats	no	yes
.	no	no
addToColumnStats	no	yes
(	no	no
columnStats	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
statsRetrieved	no	yes
)	no	no
{	no	no
columnStats	no	yes
.	no	no
addAll	no	yes
(	no	no
convertColStats	no	yes
(	no	no
aggrStats	yes	yes
.	no	no
getColStats	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
int	no	no
colStatsAvailable	no	yes
=	no	no
neededColumns	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
partitionCols	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
partitionColsToRetrieve	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
columnStats	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
!=	no	no
colStatsAvailable	no	yes
)	no	no
{	no	no

@	no	no
Deprecated	no	no
public	no	no
static	no	no
List	no	no
<	no	no
Long	no	no
>	no	no
getFileSizeForPartitions	no	no
(	no	no
final	no	no
HiveConf	no	no
conf	no	no
,	no	no
List	no	no
<	no	no
Partition	no	no
>	no	no
parts	yes	no
)	no	no
{	no	no

@	no	no
Deprecated	no	no
public	no	no
static	no	no
List	no	no
<	no	no
Long	no	yes
>	no	no
getFileSizeForPartitions	no	no
(	no	no
final	no	no
HiveConf	no	no
conf	no	yes
,	no	no
List	no	no
<	no	no
Partition	no	no
>	no	no
parts	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Future	no	yes
<	no	no
Long	no	yes
>>	no	no
futures	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
threads	no	yes
=	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
1	no	no
,	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
METASTORE_FS_HANDLER_THREADS_COUNT	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
threads	no	yes
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
ArrayList	no	yes
<	no	no
Long	no	yes
>	no	no
sizes	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Partition	no	no
part	no	yes
:	no	no
parts	no	yes
)	no	no
{	no	no
final	no	no
Path	no	yes
path	yes	yes
=	no	no
part	no	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
;	no	no
futures	no	yes
.	no	no
add	no	no
(	no	no
pool	no	yes
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
Long	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Long	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no

}	no	no
else	no	no
{	no	no
colStatsToRetrieve	no	yes
=	no	no
neededColumns	no	yes
;	no	no
}	no	no
String	no	yes
dbName	no	yes
=	no	no
table	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tabName	no	yes
=	no	no
table	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
SemanticAnalyzer	no	no
.	no	no
DUMMY_DATABASE	no	no
.	no	no
equals	no	no
(	no	no
dbName	no	yes
)	no	no
&&	no	no
SemanticAnalyzer	no	no
.	no	no
DUMMY_TABLE	no	no
.	no	no
equals	no	no
(	no	no
tabName	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
stats	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
fetchColStats	no	no
&&	no	no
!	no	no
colStatsToRetrieve	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
colStat	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getTableColumnStatistics	no	yes
(	no	no
dbName	no	yes
,	no	no
tabName	no	yes
,	no	no
colStatsToRetrieve	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
stats	no	yes
=	no	no
convertColStats	no	yes
(	no	no
colStat	no	yes
,	no	no
tabName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
colStatsCache	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
col	no	yes
:	no	no
neededColumns	no	yes
)	no	no
{	no	no
ColStatistics	no	yes
cs	yes	yes
=	no	no
colStatsCache	no	yes
.	no	no
getColStats	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
col	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
updateStats	no	no
(	no	no
Statistics	no	no
stats	no	no
,	no	no
long	no	no
newNumRows	yes	no
,	no	no
boolean	no	no
useColStats	no	no
,	no	no
Operator	no	no
<	no	no
?	no	no
extends	no	no
OperatorDesc	no	no
>	no	no
op	yes	no
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
affectedColumns	no	no
)	no	no
{	no	no
if	no	no
(	no	no
newNumRows	yes	no
<	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
init	no	no
(	no	no
StatsCollectionContext	no	no
context	no	no
)	no	no
{	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	no
tmpDir	no	yes
:	no	no
context	no	no
.	no	no
getStatsTmpDirs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
statsDir	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tmpDir	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
init	no	no
(	no	no
StatsCollectionContext	no	no
context	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	no
tmpDir	no	yes
:	no	no
context	no	yes
.	no	no
getStatsTmpDirs	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
statsDir	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tmpDir	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
statsDir	yes	yes
)	no	no
;	no	no
statsDir	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
context	no	yes
.	no	no
getHiveConf	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
mkdirs	no	yes
(	no	no
statsDir	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
do	no	no
{	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
startedAt	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
try	no	no
{	no	no
handle	no	yes
=	no	no
txnHandler	no	yes
.	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
TxnStore	no	yes
.	no	no
MUTEX_KEY	no	yes
.	no	no
Cleaner	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
startedAt	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
minOpenTxnId	yes	yes
=	no	no
txnHandler	no	yes
.	no	no
findMinOpenTxnIdForCleaner	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
do	no	no
{	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
startedAt	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
try	no	no
{	no	no
handle	no	yes
=	no	no
txnHandler	no	yes
.	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
TxnStore	no	yes
.	no	no
MUTEX_KEY	no	yes
.	no	no
Cleaner	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
startedAt	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
minOpenTxnId	no	yes
=	no	no
txnHandler	no	yes
.	no	no
findMinOpenTxnIdForCleaner	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
minOpenTxnId	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
CompletableFuture	no	yes
>	no	no
cleanerList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
CompactionInfo	no	no
compactionInfo	no	yes
:	no	no
txnHandler	no	yes
.	no	no
findReadyToClean	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cleanerList	no	yes
.	no	no
add	no	yes
(	no	no
CompletableFuture	no	yes
.	no	no
runAsync	no	yes
(	no	no
CompactorUtil	no	yes
.	no	no
ThrowingRunnable	no	yes
.	no	no
unchecked	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
clean	no	yes
(	no	no
compactionInfo	no	yes
,	no	no
minOpenTxnId	no	yes
)	no	no
)	no	no
,	no	no
cleanerExecutor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
CompletableFuture	no	yes
.	no	no
allOf	no	yes
(	no	no
cleanerList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
CompletableFuture	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

List	no	yes
<	no	no
CompletableFuture	no	yes
>	no	no
cleanerList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
CompactionInfo	no	no
compactionInfo	no	yes
:	no	no
txnHandler	no	no
.	no	no
findReadyToClean	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cleanerList	no	yes
.	no	no
add	no	yes
(	no	no
CompletableFuture	no	yes
.	no	no
runAsync	no	yes
(	no	no
CompactorUtil	no	yes
.	no	no
ThrowingRunnable	no	yes
.	no	no
unchecked	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
clean	no	yes
(	no	no
compactionInfo	no	yes
,	no	no
minOpenTxnId	no	yes
)	no	no
)	no	no
,	no	no
cleanerExecutor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
CompletableFuture	no	yes
.	no	no
allOf	no	yes
(	no	no
cleanerList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
CompletableFuture	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
handle	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
handle	no	yes
.	no	no
releaseLocks	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
long	no	no
elapsedTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startedAt	no	yes
;	no	no
if	no	no
(	no	no
elapsedTime	no	yes
<	no	no
cleanerCheckInterval	no	yes
&&	no	no
!	no	no
stop	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
cleanerCheckInterval	no	yes
-	no	no
elapsedTime	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
!	no	no
stop	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
removeFiles	no	no
(	no	no
String	no	no
location	no	yes
,	no	no
ValidWriteIdList	no	no
writeIdList	no	yes
,	no	no
CompactionInfo	no	no
ci	yes	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
NoSuchObjectException	no	no
,	no	no
MetaException	no	no
{	no	no
Path	no	yes
locPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
Directory	no	yes
dir	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
getAcidState	no	yes
(	no	no
locPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
,	no	no
locPath	no	yes
,	no	no
conf	no	yes
,	no	no
writeIdList	no	yes
,	no	no
Ref	no	yes
.	no	no
from	no	yes
(	no	no
false	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
obsoleteDirs	no	yes
=	no	no
dir	no	yes
.	no	no
getObsolete	no	yes
(	no	no
)	no	no
;	no	no
obsoleteDirs	no	yes
.	no	no
addAll	no	yes
(	no	no
dir	no	yes
.	no	no
getAbortedDirectories	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Path	no	yes
>	no	no
filesToDelete	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
obsoleteDirs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StringBuilder	no	yes
extraDebugInfo	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
stat	yes	yes
:	no	no
obsoleteDirs	no	yes
)	no	no
{	no	no
filesToDelete	no	yes
.	no	no
add	no	yes
(	no	no
stat	yes	yes
)	no	no
;	no	no
extraDebugInfo	no	yes
.	no	no
append	no	yes
(	no	no
stat	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
FileUtils	no	no
.	no	no
isPathWithinSubtree	no	no
(	no	no
stat	yes	yes
,	no	no
locPath	no	yes
)	no	no
)	no	no
{	no	no

StringBuilder	no	yes
extraDebugInfo	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	no
stat	no	yes
:	no	no
obsoleteDirs	no	no
)	no	no
{	no	no
filesToDelete	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
)	no	no
;	no	no
extraDebugInfo	no	yes
.	no	no
append	no	yes
(	no	no
stat	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
FileUtils	no	no
.	no	no
isPathWithinSubtree	no	no
(	no	no
stat	no	yes
,	no	no
locPath	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
idWatermark	no	yes
(	no	no
ci	no	yes
)	no	no
+	no	no
+	no	no
stat	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
extraDebugInfo	no	yes
.	no	no
setCharAt	no	yes
(	no	no
extraDebugInfo	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
,	no	no
']'	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
idWatermark	no	yes
(	no	no
ci	no	yes
)	no	no
+	no	no
+	no	no
filesToDelete	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
location	no	yes
+	no	no
+	no	no
extraDebugInfo	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
filesToDelete	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
location	no	yes
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
filesToDelete	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Database	no	yes
db	no	yes
=	no	no
getMSForConf	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
getDatabase	no	yes
(	no	no
getDefaultCatalog	no	yes
(	no	no
conf	no	yes
)	no	no
,	no	no
ci	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
Table	no	yes
table	no	yes
=	no	no
getMSForConf	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
getTable	no	yes
(	no	no
getDefaultCatalog	no	yes
(	no	no
conf	no	yes
)	no	no
,	no	no
ci	no	yes
.	no	no
dbname	no	yes
,	no	no
ci	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	no
dead	yes	no
:	no	no
filesToDelete	no	yes
)	no	no
{	no	no

private	no	no
JobConf	no	yes
createBaseJobConf	no	no
(	no	no
HiveConf	no	no
conf	no	yes
,	no	no
String	no	no
jobName	no	yes
,	no	no
Table	no	no
t	no	no
,	no	no
StorageDescriptor	no	no
sd	no	no
,	no	no
ValidWriteIdList	no	no
writeIds	no	no
,	no	no
CompactionInfo	no	no
ci	no	no
)	no	no
{	no	no
JobConf	no	yes
job	yes	yes
=	no	no
new	no	no
JobConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setJobName	no	yes
(	no	no
jobName	no	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setOutputKeyClass	no	yes
(	no	no
NullWritable	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
setOutputValueClass	no	yes
(	no	no
NullWritable	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
setJarByClass	no	yes
(	no	no
CompactorMR	no	yes
.	no	no
class	no	no
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
jobSubId	no	yes
=	no	no
0	no	no
;	no	no
jobSubId	no	yes
<	no	no
numMinorCompactions	no	no
;	no	no
jobSubId	no	yes
++	no	no
)	no	no
{	no	no
JobConf	no	yes
jobMinorCompact	no	yes
=	no	no
createBaseJobConf	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
+	no	no
+	no	no
jobSubId	no	yes
,	no	no
t	no	yes
,	no	no
sd	no	yes
,	no	no
writeIds	no	yes
,	no	no
ci	no	yes
)	no	no
;	no	no
launchCompactionJob	no	yes
(	no	no
jobMinorCompact	no	yes
,	no	no
null	no	no
,	no	no
CompactionType	no	yes
.	no	no
MINOR	no	yes
,	no	no
null	no	no
,	no	no
parsedDeltas	no	yes
.	no	no
subList	no	yes
(	no	no
jobSubId	no	yes
*	no	no
maxDeltasToHandle	no	yes
,	no	no
(	no	no
jobSubId	no	yes
+	no	no
1	no	no
)	no	no
*	no	no
maxDeltasToHandle	no	yes
)	no	no
,	no	no
maxDeltasToHandle	no	yes
,	no	no
-	no	no
1	no	no
,	no	no
conf	no	yes
,	no	no
msc	no	yes
,	no	no
ci	no	yes
.	no	no
id	no	yes
,	no	no
jobName	no	yes
)	no	no
;	no	no
}	no	no
dir	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
getAcidState	no	yes
(	no	no
null	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
sd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
Ref	no	yes
.	no	no
from	no	yes
(	no	no
false	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
StringableList	no	yes
dirsToSearch	no	yes
=	no	no
new	no	no
StringableList	no	yes
(	no	no
)	no	no
;	no	no
Path	no	yes
baseDir	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
.	no	no
isMajorCompaction	no	no
(	no	no
)	no	no
)	no	no
{	no	no
baseDir	yes	yes
=	no	no
dir	no	yes
.	no	no
getBaseDirectory	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
baseDir	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
HdfsFileStatusWithId	no	yes
>	no	no
originalFiles	no	yes
=	no	no
dir	no	yes
.	no	no
getOriginalFiles	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
originalFiles	no	yes
==	no	no
null	no	no
)	no	no
&&	no	no
!	no	no
(	no	no
originalFiles	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
HdfsFileStatusWithId	no	yes
stat	no	yes
:	no	no
originalFiles	no	yes
)	no	no
{	no	no
Path	no	yes
path	no	yes
=	no	no
stat	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
dirsToSearch	no	yes
.	no	no
add	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
path	no	yes
+	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
baseDir	no	yes
!=	no	no
null	no	no
)	no	no
job	yes	yes
.	no	no
set	no	yes
(	no	no
BASE_DIR	no	yes
,	no	no
baseDir	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
set	no	yes
(	no	no
DELTA_DIRS	no	yes
,	no	no
deltaDirs	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
set	no	yes
(	no	no
DIRS_TO_SEARCH	no	yes
,	no	no
dirsToSearch	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
setLong	no	yes
(	no	no
MIN_TXN	no	yes
,	no	no
minTxn	yes	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setLong	no	yes
(	no	no
MAX_TXN	no	yes
,	no	no
maxTxn	yes	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setBoolean	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
REDUCE_SPECULATIVE	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
setBoolean	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
MAP_SPECULATIVE	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Path	no	yes
>	no	no
dirs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
baseDir	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
dirs	no	yes
.	no	no
add	no	yes
(	no	no
baseDir	no	yes
)	no	no
;	no	no
}	no	no
dirs	no	yes
.	no	no
addAll	no	yes
(	no	no
deltaDirs	no	yes
)	no	no
;	no	no
dirs	no	yes
.	no	no
addAll	no	yes
(	no	no
dirsToSearch	no	yes
)	no	no
;	no	no
TokenCache	no	yes
.	no	no
obtainTokensForNamenodes	no	yes
(	no	no
job	yes	yes
.	no	no
getCredentials	no	yes
(	no	no
)	no	no
,	no	no
dirs	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
Path	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
,	no	no
job	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_IN_TEST	no	no
)	no	no
)	no	no
{	no	no
mrJob	no	yes
=	no	no
job	yes	yes
;	no	no

job	yes	yes
.	no	no
setLong	no	yes
(	no	no
MIN_TXN	no	yes
,	no	no
minTxn	no	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setLong	no	yes
(	no	no
MAX_TXN	no	yes
,	no	no
maxTxn	no	yes
)	no	no
;	no	no
job	yes	yes
.	no	no
setBoolean	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
REDUCE_SPECULATIVE	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
job	yes	yes
.	no	no
setBoolean	no	yes
(	no	no
MRJobConfig	no	yes
.	no	no
MAP_SPECULATIVE	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
Path	no	yes
>	no	no
dirs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
baseDir	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
dirs	no	yes
.	no	no
add	no	yes
(	no	no
baseDir	no	yes
)	no	no
;	no	no
}	no	no
dirs	no	yes
.	no	no
addAll	no	yes
(	no	no
deltaDirs	no	yes
)	no	no
;	no	no
dirs	no	yes
.	no	no
addAll	no	yes
(	no	no
dirsToSearch	no	yes
)	no	no
;	no	no
TokenCache	no	yes
.	no	no
obtainTokensForNamenodes	no	yes
(	no	no
job	yes	yes
.	no	no
getCredentials	no	yes
(	no	no
)	no	no
,	no	no
dirs	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
Path	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
,	no	no
job	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
hiveConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_IN_TEST	no	no
)	no	no
)	no	no
{	no	no
mrJob	no	yes
=	no	no
job	yes	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
compactionType	no	yes
+	no	no
+	no	no
job	yes	yes
.	no	no
getJobName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
job	yes	yes
.	no	no
getQueueName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
+	no	no
curDirNumber	no	yes
+	no	no
+	no	no
obsoleteDirNumber	no	yes
+	no	no
+	no	no
minTxn	no	yes
+	no	no
+	no	no
maxTxn	no	yes
+	no	no
)	no	no
;	no	no
JobClient	no	yes
jc	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no

private	no	no
static	no	no
<	no	no
T	no	yes
>	no	no
T	no	yes
instantiate	no	no
(	no	no
Class	no	yes
<	no	no
T	no	yes
>	no	no
classType	no	yes
,	no	no
String	no	yes
classname	no	yes
)	no	no
throws	no	no
IOException	no	yes
{	no	no
T	no	yes
t	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
Class	no	yes
c	no	yes
=	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
classname	no	yes
)	no	no
;	no	no
Object	no	yes
o	no	yes
=	no	no
c	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
classType	no	yes
.	no	no
isAssignableFrom	no	no
(	no	no
o	no	yes
.	no	no
getClass	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
t	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
o	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
s	no	yes
=	no	no
classname	no	yes
+	no	no
+	no	no
classType	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InstantiationException	no	no
e	yes	yes
)	no	no
{	no	no

Class	no	yes
c	no	yes
=	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
classname	no	yes
)	no	no
;	no	no
Object	no	yes
o	no	yes
=	no	no
c	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
classType	no	yes
.	no	no
isAssignableFrom	no	no
(	no	no
o	no	yes
.	no	no
getClass	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
t	no	yes
=	no	no
(	no	no
T	no	yes
)	no	no
o	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
s	no	yes
=	no	no
classname	no	yes
+	no	no
+	no	no
classType	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InstantiationException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalAccessException	no	no
e	yes	yes
)	no	no
{	no	no

protected	no	no
String	no	no
findUserToRunAs	no	no
(	no	no
String	no	no
location	no	yes
,	no	no
Table	no	no
t	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Path	no	yes
p	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
location	no	yes
)	no	no
;	no	no
final	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
p	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
FileStatus	no	yes
stat	yes	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no

return	no	no
stat	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AccessControlException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
wrapper	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	yes	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ugi	yes	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
FileSystem	no	yes
proxyFs	no	yes
=	no	no
p	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
stat	no	yes
=	no	no
proxyFs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
wrapper	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
ugi	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
exception	yes	no
)	no	no
{	no	no

catch	no	no
(	no	no
AccessControlException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
wrapper	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
1	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
FileSystem	no	yes
proxyFs	no	yes
=	no	no
p	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
stat	no	yes
=	no	no
proxyFs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
wrapper	yes	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
ugi	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
exception	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
ugi	no	yes
,	no	no
exception	no	yes
)	no	no
;	no	no

UserGroupInformation	yes	yes
ugi	no	yes
=	no	no
UserGroupInformation	yes	yes
.	no	no
createProxyUser	no	yes
(	no	no
t	yes	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
,	no	no
UserGroupInformation	yes	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
FileSystem	no	yes
proxyFs	no	yes
=	no	no
p	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FileStatus	no	yes
stat	no	yes
=	no	no
proxyFs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
p	yes	yes
)	no	no
;	no	no
wrapper	no	yes
.	no	no
add	no	yes
(	no	no
stat	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
ugi	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
exception	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
ugi	no	yes
,	no	no
exception	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
wrapper	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
wrapper	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
return	no	no
wrapper	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

protected	no	no
boolean	no	no
replIsCompactionDisabledForTable	no	no
(	no	no
Table	no	no
tbl	yes	yes
)	no	no
{	no	no
boolean	no	no
isCompactDisabled	no	yes
=	no	no
ReplUtils	no	yes
.	no	no
isFirstIncPending	no	yes
(	no	no
tbl	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isCompactDisabled	no	yes
)	no	no
{	no	no

int	no	no
abortedThreshold	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD	no	yes
)	no	no
;	no	no
long	no	no
abortedTimeThreshold	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_ABORTEDTXN_TIME_THRESHOLD	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
boolean	no	no
metricsEnabled	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METRICS_ENABLED	no	yes
)	no	no
;	no	no
do	no	no
{	no	no
long	no	no
startedAt	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
handle	no	yes
=	no	no
txnHandler	no	yes
.	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
TxnStore	no	yes
.	no	no
MUTEX_KEY	no	yes
.	no	no
Initiator	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
startedAt	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
compactionInterval	no	yes
=	no	no
(	no	no
prevStart	no	yes
<	no	no
0	no	no
)	no	no
?	no	no
prevStart	no	yes
:	no	no
(	no	no
startedAt	no	yes
-	no	no
prevStart	no	yes
)	no	no
/	no	no
1000	no	no
;	no	no
prevStart	no	yes
=	no	no
startedAt	no	yes
;	no	no
ShowCompactResponse	no	yes
currentCompactions	no	yes
=	no	no
txnHandler	no	yes
.	no	no
showCompact	no	yes
(	no	no
new	no	no
ShowCompactRequest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metricsEnabled	no	yes
)	no	no
{	no	no
updateCompactionMetrics	no	yes
(	no	no
currentCompactions	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
potentials	yes	yes
=	no	no
txnHandler	no	yes
.	no	no
findPotentialCompactions	no	yes
(	no	no
abortedThreshold	no	yes
,	no	no
abortedTimeThreshold	no	yes
,	no	no
compactionInterval	no	yes
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
ci	no	yes
->	no	no
isEligibleForCompaction	no	yes
(	no	no
ci	no	yes
,	no	no
currentCompactions	no	yes
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toSet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

ShowCompactResponse	no	yes
currentCompactions	no	yes
=	no	no
txnHandler	no	yes
.	no	no
showCompact	no	yes
(	no	no
new	no	no
ShowCompactRequest	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metricsEnabled	no	no
)	no	no
{	no	no
updateCompactionMetrics	no	yes
(	no	no
currentCompactions	no	yes
)	no	no
;	no	no
}	no	no
Set	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
potentials	no	yes
=	no	no
txnHandler	no	yes
.	no	no
findPotentialCompactions	no	yes
(	no	no
abortedThreshold	no	yes
,	no	no
abortedTimeThreshold	no	yes
,	no	no
compactionInterval	no	yes
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
ci	yes	yes
->	no	no
isEligibleForCompaction	no	yes
(	no	no
ci	yes	yes
,	no	no
currentCompactions	no	yes
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toSet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
potentials	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
tblNameOwners	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
CompletableFuture	no	yes
>	no	no
compactionList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
potentials	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ValidTxnList	no	yes
validTxnList	no	yes
=	no	no
TxnCommonUtils	no	yes
.	no	no
createValidReadTxnList	no	yes
(	no	no
txnHandler	no	yes
.	no	no
getOpenTxns	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
,	no	no
validTxnList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
CompactionInfo	no	yes
ci	yes	yes
:	no	no
potentials	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Table	no	yes
t	no	yes
=	no	no
resolveTable	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
Partition	no	yes
p	no	yes
=	no	no
resolvePartition	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
==	no	no
null	no	no
&&	no	no
ci	yes	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
potentials	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
tblNameOwners	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
CompletableFuture	no	yes
>	no	no
compactionList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
potentials	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ValidTxnList	no	yes
validTxnList	no	yes
=	no	no
TxnCommonUtils	no	yes
.	no	no
createValidReadTxnList	no	yes
(	no	no
txnHandler	no	yes
.	no	no
getOpenTxns	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
,	no	no
validTxnList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
CompactionInfo	no	no
ci	yes	yes
:	no	no
potentials	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
Table	no	yes
t	yes	yes
=	no	no
resolveTable	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
Partition	no	yes
p	no	yes
=	no	no
resolvePartition	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
==	no	no
null	no	no
&&	no	no
ci	yes	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
String	no	yes
runAs	no	yes
=	no	no
resolveUserToRunAs	no	yes
(	no	no
tblNameOwners	no	yes
,	no	no
t	yes	yes
,	no	no
p	no	yes
)	no	no
;	no	no
compactionList	no	yes
.	no	no
add	no	yes
(	no	no
CompletableFuture	no	yes
.	no	no
runAsync	no	yes
(	no	no
CompactorUtil	no	yes
.	no	no
ThrowingRunnable	no	yes
.	no	no
unchecked	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
scheduleCompactionIfRequired	no	yes
(	no	no
ci	yes	yes
,	no	no
t	yes	yes
,	no	no
p	no	yes
,	no	no
runAs	no	yes
)	no	no
)	no	no
,	no	no
compactionExecutor	no	yes
)	no	no
)	no	no
;	no	no

}	no	no
for	no	no
(	no	no
CompactionInfo	no	no
ci	no	yes
:	no	no
potentials	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Table	no	yes
t	yes	yes
=	no	no
resolveTable	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
Partition	no	yes
p	no	yes
=	no	no
resolvePartition	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
==	no	no
null	no	no
&&	no	no
ci	no	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	no	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
String	no	yes
runAs	no	yes
=	no	no
resolveUserToRunAs	no	yes
(	no	no
tblNameOwners	no	yes
,	no	no
t	yes	yes
,	no	no
p	no	yes
)	no	no
;	no	no
compactionList	no	yes
.	no	no
add	no	yes
(	no	no
CompletableFuture	no	yes
.	no	no
runAsync	no	yes
(	no	no
CompactorUtil	no	yes
.	no	no
ThrowingRunnable	no	yes
.	no	no
unchecked	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
scheduleCompactionIfRequired	no	yes
(	no	no
ci	no	yes
,	no	no
t	yes	yes
,	no	no
p	no	yes
,	no	no
runAs	no	yes
)	no	no
)	no	no
,	no	no
compactionExecutor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
,	no	no
ci	no	yes
,	no	no
t	yes	yes
)	no	no
;	no	no
ci	no	yes
.	no	no
errorMessage	no	yes
=	no	no
t	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
txnHandler	no	yes
.	no	no
markFailed	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
CompletableFuture	no	yes
.	no	no
allOf	no	yes
(	no	no
compactionList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
CompletableFuture	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
recoverFailedCompactions	no	yes
(	no	no
true	no	no
)	no	no
;	no	no

compactionList	no	yes
.	no	no
add	no	yes
(	no	no
CompletableFuture	no	yes
.	no	no
runAsync	no	yes
(	no	no
CompactorUtil	no	yes
.	no	no
ThrowingRunnable	no	yes
.	no	no
unchecked	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
scheduleCompactionIfRequired	no	yes
(	no	no
ci	no	yes
,	no	no
t	yes	yes
,	no	no
p	no	yes
,	no	no
runAs	no	yes
)	no	no
)	no	no
,	no	no
compactionExecutor	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
,	no	no
ci	no	yes
,	no	no
t	yes	yes
)	no	no
;	no	no
ci	no	yes
.	no	no
errorMessage	no	yes
=	no	no
t	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no
txnHandler	no	yes
.	no	no
markFailed	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
CompletableFuture	no	yes
.	no	no
allOf	no	yes
(	no	no
compactionList	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
CompletableFuture	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
recoverFailedCompactions	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
t	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
handle	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
handle	no	yes
.	no	no
releaseLocks	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
long	no	no
elapsedTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
startedAt	no	yes
;	no	no
if	no	no
(	no	no
elapsedTime	no	yes
<	no	no
checkInterval	no	yes
&&	no	no
!	no	no
stop	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
checkInterval	no	yes
-	no	no
elapsedTime	no	yes
)	no	no
;	no	no

private	no	no
CompactionType	no	no
checkForCompaction	no	no
(	no	no
final	no	no
CompactionInfo	no	no
ci	yes	no
,	no	no
final	no	no
ValidWriteIdList	no	no
writeIds	no	no
,	no	no
final	no	no
StorageDescriptor	no	no
sd	no	no
,	no	no
final	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
tblproperties	no	no
,	no	no
final	no	no
String	no	no
runAs	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
if	no	no
(	no	no
ci	yes	no
.	no	no
tooManyAborts	no	no
)	no	no
{	no	no

return	no	no
CompactionType	no	yes
.	no	no
MINOR	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
runJobAsSelf	no	no
(	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
determineCompactionType	no	yes
(	no	no
ci	yes	yes
,	no	no
writeIds	no	yes
,	no	no
sd	no	yes
,	no	no
tblproperties	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
runAs	no	yes
+	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
UserGroupInformation	no	yes
ugi	yes	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
CompactionType	no	yes
compactionType	no	yes
;	no	no
try	no	no
{	no	no
compactionType	no	yes
=	no	no
ugi	yes	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
CompactionType	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
CompactionType	no	yes
run	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
return	no	no
determineCompactionType	no	yes
(	no	no
ci	yes	yes
,	no	no
writeIds	no	yes
,	no	no
sd	no	yes
,	no	no
tblproperties	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
ugi	yes	yes
)	no	no
;	no	no

private	no	no
CompactionType	no	no
determineCompactionType	no	no
(	no	no
CompactionInfo	no	no
ci	no	no
,	no	no
ValidWriteIdList	no	no
writeIds	no	yes
,	no	no
StorageDescriptor	no	no
sd	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
tblproperties	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
boolean	no	no
noBase	no	yes
=	no	no
false	no	no
;	no	no
Path	no	yes
location	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
sd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
location	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
Directory	no	yes
dir	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
getAcidState	no	yes
(	no	no
fs	no	yes
,	no	no
location	no	yes
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
Ref	no	yes
.	no	no
from	no	yes
(	no	no
false	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
Path	no	yes
base	yes	yes
=	no	no
dir	no	yes
.	no	no
getBaseDirectory	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
baseSize	no	yes
=	no	no
0	no	no
;	no	no
FileStatus	no	yes
stat	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
base	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
stat	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
base	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
stat	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no

float	no	no
deltaPctThreshold	no	yes
=	no	no
deltaPctProp	no	yes
==	no	no
null	no	no
?	no	no
HiveConf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_DELTA_PCT_THRESHOLD	no	yes
)	no	no
:	no	no
Float	no	yes
.	no	no
parseFloat	no	yes
(	no	no
deltaPctProp	no	yes
)	no	no
;	no	no
boolean	no	no
bigEnough	no	yes
=	no	no
(	no	no
float	no	no
)	no	no
deltaSize	no	yes
/	no	no
(	no	no
float	no	no
)	no	no
baseSize	no	yes
>	no	no
deltaPctThreshold	no	yes
;	no	no
boolean	no	no
multiBase	no	yes
=	no	no
dir	no	yes
.	no	no
getObsolete	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
filter	no	yes
(	no	no
path	no	yes
->	no	no
path	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
startsWith	no	yes
(	no	no
AcidUtils	no	yes
.	no	no
BASE_PREFIX	no	yes
)	no	no
)	no	no
.	no	no
findAny	no	yes
(	no	no
)	no	no
.	no	no
isPresent	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
initiateMajor	no	yes
=	no	no
bigEnough	no	yes
||	no	no
(	no	no
deltaSize	no	yes
==	no	no
0	no	no
&&	no	no
multiBase	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StringBuilder	no	yes
msg	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
deltaSize	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
baseSize	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
multiBase	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
deltaSize	no	yes
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	yes	yes
.	no	no
append	no	yes
(	no	no
deltaPctThreshold	no	yes
)	no	no
;	no	no

msg	no	yes
.	no	no
append	no	yes
(	no	no
deltaSize	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
deltaPctThreshold	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_DELTA_PCT_THRESHOLD	no	yes
.	no	no
varname	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
bigEnough	no	yes
)	no	no
;	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
initiateMajor	no	yes
)	no	no
{	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
msg	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
msg	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
initiateMajor	no	yes
)	no	no
return	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
;	no	no
}	no	no
String	no	yes
deltaNumProp	no	yes
=	no	no
tblproperties	no	yes
.	no	no
get	no	yes
(	no	no
COMPACTORTHRESHOLD_PREFIX	no	yes
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_DELTA_NUM_THRESHOLD	no	yes
)	no	no
;	no	no
int	no	no
deltaNumThreshold	no	yes
=	no	no
deltaNumProp	no	yes
==	no	no
null	no	no
?	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_DELTA_NUM_THRESHOLD	no	yes
)	no	no
:	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
deltaNumProp	no	yes
)	no	no
;	no	no
boolean	no	no
enough	no	yes
=	no	no
deltas	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
deltaNumThreshold	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
enough	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
requestCompaction	no	no
(	no	no
CompactionInfo	no	no
ci	no	yes
,	no	no
String	no	no
runAs	no	yes
,	no	no
CompactionType	no	no
type	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
CompactionRequest	no	yes
rqst	yes	yes
=	no	no
new	no	no
CompactionRequest	no	yes
(	no	no
ci	no	yes
.	no	no
dbname	no	yes
,	no	no
ci	no	yes
.	no	no
tableName	no	yes
,	no	no
type	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
rqst	yes	yes
.	no	no
setPartitionname	no	yes
(	no	no
ci	no	yes
.	no	no
partName	no	yes
)	no	no
;	no	no
rqst	yes	yes
.	no	no
setRunas	no	yes
(	no	no
runAs	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
checkDynPartitioning	no	no
(	no	no
Table	no	no
t	no	no
,	no	no
CompactionInfo	no	no
ci	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
t	no	no
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
t	no	no
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
&&	no	no
ci	yes	no
.	no	no
partName	no	no
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
boolean	no	no
isEligibleForCompaction	no	no
(	no	no
CompactionInfo	no	no
ci	yes	no
,	no	no
ShowCompactResponse	no	no
currentCompactions	no	no
)	no	no
{	no	no

private	no	no
boolean	no	no
isEligibleForCompaction	no	no
(	no	no
CompactionInfo	no	no
ci	yes	yes
,	no	no
ShowCompactResponse	no	no
currentCompactions	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lookForCurrentCompactions	no	no
(	no	no
currentCompactions	no	no
,	no	no
ci	yes	yes
)	no	no
)	no	no
{	no	no

return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
noAutoCompactSet	no	no
(	no	no
t	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tableName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
hive_metastoreConstants	no	yes
.	no	no
TABLE_NO_AUTO_COMPACT	no	yes
+	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
checkDynPartitioning	no	no
(	no	no
t	no	yes
,	no	no
ci	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
txnHandler	no	yes
.	no	no
checkFailedCompactions	no	no
(	no	no
ci	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
ci	no	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
COMPACTOR_INITIATOR_FAILED_THRESHOLD	no	yes
+	no	no
)	no	no
;	no	no
ci	no	yes
.	no	no
errorMessage	no	yes
=	no	no
+	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
COMPACTOR_INITIATOR_FAILED_THRESHOLD	no	yes
+	no	no
;	no	no
txnHandler	no	yes
.	no	no
markFailed	no	yes
(	no	no
ci	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
ci	no	yes
.	no	no
errorMessage	no	yes
=	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
boolean	no	no
replIsCompactionDisabledForDatabase	no	no
(	no	no
String	no	no
dbName	yes	yes
)	no	no
throws	no	no
TException	no	no
{	no	no
try	no	no
{	no	no
Database	no	yes
database	no	yes
=	no	no
getMSForConf	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
getDatabase	no	yes
(	no	no
getDefaultCatalog	no	yes
(	no	no
conf	no	yes
)	no	no
,	no	no
dbName	yes	yes
)	no	no
;	no	no
boolean	no	no
isReplCompactDisabled	no	yes
=	no	no
ReplUtils	no	yes
.	no	no
isFirstIncPending	no	yes
(	no	no
database	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isReplCompactDisabled	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
void	no	no
runCompaction	no	no
(	no	no
HiveConf	no	no
hiveConf	no	no
,	no	no
Table	no	no
table	yes	no
,	no	no
Partition	no	no
partition	no	no
,	no	no
StorageDescriptor	no	no
storageDescriptor	no	no
,	no	no
ValidWriteIdList	no	no
writeIds	no	no
,	no	no
CompactionInfo	no	no
compactionInfo	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

@	no	no
Override	no	no
void	no	no
runCompaction	no	no
(	no	no
HiveConf	no	no
hiveConf	no	no
,	no	no
Table	no	no
table	yes	no
,	no	no
Partition	no	no
partition	no	no
,	no	no
StorageDescriptor	no	no
storageDescriptor	no	no
,	no	no
ValidWriteIdList	no	no
writeIds	no	no
,	no	no
CompactionInfo	no	no
compactionInfo	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

void	no	no
runCompactionQueries	no	no
(	no	no
HiveConf	no	yes
conf	no	yes
,	no	no
String	no	yes
tmpTableName	no	no
,	no	no
StorageDescriptor	no	no
storageDescriptor	no	no
,	no	no
ValidWriteIdList	no	no
writeIds	no	no
,	no	no
CompactionInfo	no	no
compactionInfo	no	yes
,	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
resultDirs	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
createQueries	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
compactionQueries	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
dropQueries	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Util	no	yes
.	no	no
disableLlapCaching	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
conf	no	yes
.	no	no
setBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ENABLE_DOAS	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
String	no	yes
user	no	yes
=	no	no
compactionInfo	no	yes
.	no	no
runAs	no	yes
;	no	no
SessionState	no	yes
sessionState	no	yes
=	no	no
DriverUtils	no	yes
.	no	no
setUpSessionState	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
long	no	no
compactorTxnId	no	yes
=	no	no
CompactorMR	no	yes
.	no	no
CompactorMap	no	yes
.	no	no
getCompactorTxnId	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
createQueries	no	no
)	no	no
{	no	no
try	no	no
{	no	no

String	no	yes
user	no	yes
=	no	no
compactionInfo	no	yes
.	no	no
runAs	no	yes
;	no	no
SessionState	no	yes
sessionState	no	yes
=	no	no
DriverUtils	no	yes
.	no	no
setUpSessionState	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
long	no	no
compactorTxnId	no	yes
=	no	no
CompactorMR	no	yes
.	no	no
CompactorMap	no	yes
.	no	no
getCompactorTxnId	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
query	yes	yes
:	no	no
createQueries	no	no
)	no	no
{	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	yes	yes
)	no	no
;	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	no	yes
=	no	no
ex	no	yes
;	no	no
while	no	no
(	no	no
cause	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
(	no	no
cause	no	yes
instanceof	no	no
AlreadyExistsException	no	no
)	no	no
)	no	no
{	no	no
cause	no	yes
=	no	no
cause	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
cause	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
query	yes	yes
:	no	no
compactionQueries	no	no
)	no	no
{	no	no

DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
Throwable	no	yes
cause	no	yes
=	no	no
ex	no	yes
;	no	no
while	no	no
(	no	no
cause	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
(	no	no
cause	no	yes
instanceof	no	no
AlreadyExistsException	no	no
)	no	no
)	no	no
{	no	no
cause	no	yes
=	no	no
cause	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
cause	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
compactionQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
commitCompaction	no	yes
(	no	no
storageDescriptor	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
tmpTableName	no	yes
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
if	no	no
(	no	no
cause	no	no
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	no
query	yes	yes
:	no	no
compactionQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	yes	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
commitCompaction	no	yes
(	no	no
storageDescriptor	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
tmpTableName	no	yes
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
removeResultDirs	no	yes
(	no	no
resultDirs	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no

}	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
compactionQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
commitCompaction	no	yes
(	no	no
storageDescriptor	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
tmpTableName	yes	yes
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
removeResultDirs	no	yes
(	no	no
resultDirs	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
dropQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	no	yes
)	no	no
;	no	no

}	no	no
}	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
compactionQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
DriverUtils	no	yes
.	no	no
runOnDriver	no	yes
(	no	no
conf	no	yes
,	no	no
user	no	yes
,	no	no
sessionState	no	yes
,	no	no
query	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
commitCompaction	no	yes
(	no	no
storageDescriptor	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
tmpTableName	no	yes
,	no	no
conf	no	yes
,	no	no
writeIds	no	yes
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
HiveException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
removeResultDirs	no	yes
(	no	no
resultDirs	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
dropQueries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
compactionInfo	no	yes
.	no	no
isMajorCompaction	no	yes
(	no	no
)	no	no
?	no	no
:	no	no
,	no	no
query	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
removeResultDirs	no	no
(	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
resultDirPaths	no	no
,	no	no
HiveConf	no	no
conf	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
for	no	no
(	no	no
Path	no	no
path	yes	no
:	no	no
resultDirPaths	no	no
)	no	no
{	no	no

long	no	no
timeout	no	yes
=	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_COMPACTOR_WORKER_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
boolean	no	no
launchedJob	no	yes
;	no	no
ExecutorService	no	yes
executor	no	yes
=	no	no
getTimeoutHandlingExecutor	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
do	no	no
{	no	no
Future	no	yes
<	no	no
Boolean	no	yes
>	no	no
singleRun	no	yes
=	no	no
executor	no	yes
.	no	no
submit	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
findNextCompactionAndExecute	no	yes
(	no	no
computeStats	no	yes
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
launchedJob	no	yes
=	no	no
singleRun	no	yes
.	no	no
get	no	yes
(	no	no
timeout	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
te	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
te	no	yes
)	no	no
;	no	no
singleRun	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
executor	no	yes
.	no	no
shutdownNow	no	yes
(	no	no
)	no	no
;	no	no
executor	no	yes
=	no	no
getTimeoutHandlingExecutor	no	yes
(	no	no
)	no	no
;	no	no
launchedJob	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ExecutionException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
needsCleaning	no	no
(	no	no
AcidUtils	no	no
.	no	no
Directory	no	no
dir	no	yes
,	no	no
StorageDescriptor	no	no
sd	yes	no
)	no	no
{	no	no
int	no	no
numObsoleteDirs	yes	yes
=	no	no
dir	no	yes
.	no	no
getObsolete	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
needsJustCleaning	no	yes
=	no	no
numObsoleteDirs	yes	yes
>	no	no
0	no	no
;	no	no
if	no	no
(	no	no
needsJustCleaning	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
msc	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
msc	no	yes
=	no	no
HiveMetaStoreUtils	no	yes
.	no	no
getHiveMetastoreClient	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
ci	yes	yes
=	no	no
CompactionInfo	no	yes
.	no	no
optionalCompactionInfoStructToInfo	no	yes
(	no	no
msc	no	yes
.	no	no
findNextCompact	no	yes
(	no	no
workerName	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
t1	no	yes
;	no	no
try	no	no
{	no	no
t1	no	yes
=	no	no
resolveTable	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
t1	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
t1	no	yes
;	no	no
try	no	no
{	no	no
t1	no	yes
=	no	no
resolveTable	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
t1	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
getFullTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	no	no
)	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Table	no	yes
t	no	yes
=	no	no
t1	no	yes
;	no	no
String	no	yes
fullTableName	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getFullTableName	no	yes
(	no	no
t	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Partition	no	yes
p	no	yes
;	no	no

}	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	no	no
)	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Table	no	yes
t	no	yes
=	no	no
t1	no	yes
;	no	no
String	no	yes
fullTableName	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
getFullTableName	no	yes
(	no	no
t	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Partition	no	yes
p	no	yes
;	no	no
try	no	no
{	no	no
p	no	yes
=	no	no
resolvePartition	no	yes
(	no	no
ci	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
==	no	no
null	no	no
&&	no	no
ci	yes	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no

return	no	no
false	no	no
;	no	no
}	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
ci	yes	yes
.	no	no
runAs	no	yes
=	no	no
findUserToRunAs	no	yes
(	no	no
sd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
compactorTxnId	no	yes
=	no	no
msc	no	yes
.	no	no
openTxn	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
,	no	no
TxnType	no	yes
.	no	no
COMPACTION	no	yes
)	no	no
;	no	no
heartbeater	no	yes
=	no	no
new	no	no
CompactionHeartbeater	no	yes
(	no	no
compactorTxnId	no	yes
,	no	no
fullTableName	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
heartbeater	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ValidTxnList	no	yes
validTxnList	no	yes
=	no	no
msc	no	yes
.	no	no
getValidTxns	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
final	no	no
ValidCompactorWriteIdList	no	yes
tblValidWriteIds	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
createValidCompactWriteIdList	no	yes
(	no	no
msc	no	yes
.	no	no
getValidWriteIds	no	yes
(	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
fullTableName	no	yes
)	no	no
,	no	no
validTxnList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tblValidWriteIds	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
,	no	no
validTxnList	no	yes
.	no	no
writeToString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ci	yes	yes
.	no	no
highestWriteId	no	yes
=	no	no
tblValidWriteIds	no	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
;	no	no
msc	no	yes
.	no	no
updateCompactorState	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
,	no	no
compactorTxnId	no	yes
)	no	no
;	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
StringBuilder	no	yes
jobName	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
workerName	no	yes
)	no	no
;	no	no

jobName	no	yes
.	no	no
append	no	yes
(	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
AcidUtils	no	yes
.	no	no
Directory	no	yes
dir	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
getAcidState	no	yes
(	no	no
null	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
sd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
Ref	no	yes
.	no	no
from	no	yes
(	no	no
false	no	no
)	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isEnoughToCompact	no	no
(	no	no
ci	yes	yes
.	no	no
isMajorCompaction	no	no
(	no	no
)	no	no
,	no	no
dir	no	yes
,	no	no
sd	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
needsCleaning	no	no
(	no	no
dir	no	yes
,	no	no
sd	no	yes
)	no	no
)	no	no
{	no	no
msc	no	yes
.	no	no
markCompacted	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
+	no	no
computeStats	no	yes
)	no	no
;	no	no
final	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
computeStats	no	yes
?	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
msc	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
?	no	no
ci	yes	yes
.	no	no
runAs	no	yes
:	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
null	no	no
;	no	no
final	no	no
CompactorMR	no	yes
mr	no	yes
=	no	no
new	no	no
CompactorMR	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
,	no	no
p	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
ci	yes	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
isEnoughToCompact	no	no
(	no	no
ci	yes	yes
.	no	no
isMajorCompaction	no	no
(	no	no
)	no	no
,	no	no
dir	no	yes
,	no	no
sd	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
needsCleaning	no	no
(	no	no
dir	no	yes
,	no	no
sd	no	yes
)	no	no
)	no	no
{	no	no
msc	no	yes
.	no	no
markCompacted	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
+	no	no
computeStats	no	yes
)	no	no
;	no	no
final	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
computeStats	no	yes
?	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
msc	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
?	no	no
ci	yes	yes
.	no	no
runAs	no	yes
:	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
null	no	no
;	no	no
final	no	no
CompactorMR	no	yes
mr	no	yes
=	no	no
new	no	no
CompactorMR	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
,	no	no
p	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
ci	yes	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
msc	no	yes
.	no	no
markCleaned	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
+	no	no
computeStats	no	yes
)	no	no
;	no	no
final	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
computeStats	no	yes
?	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
msc	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
?	no	no
ci	yes	yes
.	no	no
runAs	no	yes
:	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
null	no	no
;	no	no
final	no	no
CompactorMR	no	yes
mr	no	yes
=	no	no
new	no	no
CompactorMR	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
,	no	no
p	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
ci	yes	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Partition	no	yes
fp	no	yes
=	no	no
p	no	yes
;	no	no
final	no	no
CompactionInfo	no	yes
fci	no	yes
=	no	no
ci	yes	yes
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no

}	no	no
return	no	no
false	no	no
;	no	no
}	no	no
checkInterrupt	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	no	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	no	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
+	no	no
computeStats	no	yes
)	no	no
;	no	no
final	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
computeStats	no	yes
?	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	no	yes
,	no	no
msc	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	no	yes
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
runJobAsSelf	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
)	no	no
?	no	no
ci	no	yes
.	no	no
runAs	no	yes
:	no	no
t	yes	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
null	no	no
;	no	no
final	no	no
CompactorMR	no	yes
mr	no	yes
=	no	no
new	no	no
CompactorMR	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
runJobAsSelf	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	yes	yes
,	no	no
p	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
ci	no	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Partition	no	yes
fp	no	yes
=	no	no
p	no	yes
;	no	no
final	no	no
CompactionInfo	no	yes
fci	no	yes
=	no	no
ci	no	yes
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	yes	yes
,	no	no
fp	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
fci	no	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	yes	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
+	no	no
computeStats	no	yes
)	no	no
;	no	no
final	no	no
StatsUpdater	no	yes
su	no	yes
=	no	no
computeStats	no	yes
?	no	no
StatsUpdater	no	yes
.	no	no
init	no	yes
(	no	no
ci	yes	yes
,	no	no
msc	no	yes
.	no	no
findColumnsWithStats	no	yes
(	no	no
CompactionInfo	no	yes
.	no	no
compactionInfoToStruct	no	yes
(	no	no
ci	yes	yes
)	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
?	no	no
ci	yes	yes
.	no	no
runAs	no	yes
:	no	no
t	no	yes
.	no	no
getOwner	no	yes
(	no	no
)	no	no
)	no	no
:	no	no
null	no	no
;	no	no
final	no	no
CompactorMR	no	yes
mr	no	yes
=	no	no
new	no	no
CompactorMR	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
runJobAsSelf	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
)	no	no
)	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
,	no	no
p	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
ci	yes	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
ci	yes	yes
.	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Partition	no	yes
fp	no	yes
=	no	no
p	no	yes
;	no	no
final	no	no
CompactionInfo	no	yes
fci	no	yes
=	no	no
ci	yes	yes
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	no	yes
,	no	no
fp	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
fci	no	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
UserGroupInformation	no	yes
.	no	no
createProxyUser	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
,	no	no
UserGroupInformation	no	yes
.	no	no
getLoginUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
Partition	no	yes
fp	no	yes
=	no	no
p	no	yes
;	no	no
final	no	no
CompactionInfo	no	yes
fci	no	yes
=	no	no
ci	no	yes
;	no	no
ugi	no	yes
.	no	no
doAs	no	no
(	no	no
new	no	no
PrivilegedExceptionAction	no	no
<	no	no
Object	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Object	no	no
run	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
mr	no	yes
.	no	no
run	no	yes
(	no	no
conf	no	yes
,	no	no
jobName	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
t	yes	yes
,	no	no
fp	no	yes
,	no	no
sd	no	yes
,	no	no
tblValidWriteIds	no	yes
,	no	no
fci	no	yes
,	no	no
su	no	yes
,	no	no
msc	no	yes
,	no	no
dir	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
try	no	no
{	no	no
FileSystem	no	yes
.	no	no
closeAllForUGI	no	yes
(	no	no
ugi	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
exception	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
ugi	no	yes
+	no	no
+	no	no
ci	no	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
,	no	no
exception	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
heartbeater	no	yes
.	no	no
cancel	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ci	no	yes
.	no	no
type	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ci	no	yes
.	no	no
getFullPartitionName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
compactorTxnId	no	yes
)	no	no
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
process	no	no
(	no	no
Object	no	no
[	no	no
]	no	no
arguments	no	yes
)	no	no
throws	no	no
HiveException	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
stringOI	no	yes
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
arguments	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
ConfVars	no	yes
.	no	no
LLAP_HS2_ENABLE_COORDINATOR	no	yes
.	no	no
varname	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
HiveConf	no	yes
.	no	no
setVar	no	yes
(	no	no
wxConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVEQUERYID	no	yes
,	no	no
extClientAppId	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Vertex	no	yes
wx	no	yes
=	no	no
utils	no	yes
.	no	no
createVertex	no	yes
(	no	no
wxConf	no	yes
,	no	no
mapWork	no	yes
,	no	no
scratchDir	no	yes
,	no	no
work	no	yes
,	no	no
DagUtils	no	yes
.	no	no
createTezLrMap	no	yes
(	no	no
appJarLr	no	yes
,	no	no
null	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
vertexName	no	yes
=	no	no
wx	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
dag	no	yes
.	no	no
addVertex	no	yes
(	no	no
wx	no	yes
)	no	no
;	no	no
utils	no	yes
.	no	no
addCredentials	no	yes
(	no	no
mapWork	no	yes
,	no	no
dag	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
wxConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_TEZ_GENERATE_CONSISTENT_SPLITS	no	yes
)	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
wxConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LLAP_CLIENT_CONSISTENT_SPLITS	no	yes
)	no	no
)	no	no
;	no	no
HiveSplitGenerator	no	yes
splitGenerator	no	yes
=	no	no
new	no	no
HiveSplitGenerator	no	yes
(	no	no
wxConf	no	yes
,	no	no
mapWork	no	yes
,	no	no
generateSingleSplit	no	yes
,	no	no
inputArgNumSplits	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Event	no	yes
>	no	no
eventList	yes	yes
=	no	no
splitGenerator	no	yes
.	no	no
initialize	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numGroupedSplitsGenerated	no	yes
=	no	no
eventList	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
result	yes	yes
=	no	no
new	no	no
InputSplit	no	yes
[	no	no
numGroupedSplitsGenerated	no	yes
]	no	no
;	no	no
InputConfigureVertexTasksEvent	no	yes
configureEvent	no	yes
=	no	no
(	no	no
InputConfigureVertexTasksEvent	no	yes
)	no	no
eventList	yes	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TaskLocationHint	no	yes
>	no	no
hints	no	yes
=	no	no
configureEvent	no	yes
.	no	no
getLocationHint	no	yes
(	no	no
)	no	no
.	no	no
getTaskLocationHints	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
hints	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
numGroupedSplitsGenerated	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
reportInvalidJson	no	no
(	no	no
String	no	no
jsonStr	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
seenErrors	no	no
)	no	no
{	no	no

else	no	no
if	no	no
(	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
partnames	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
PARTNAME	no	yes
.	no	no
QUERY_WITH_KEY	no	yes
;	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
paths	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
substring	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
partnames	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
PARTNAME	no	yes
.	no	no
NULLNAME	no	yes
;	no	no
}	no	no
}	no	no
pathParsed	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
String	no	yes
urlStr	yes	yes
=	no	no
(	no	no
(	no	no
StringObjectInspector	no	yes
)	no	no
inputOIs	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
.	no	no
getPrimitiveJavaObject	no	yes
(	no	no
o	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
if	no	no
(	no	no
urlStr	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
forward	no	yes
(	no	no
nullCols	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
String	no	yes
ret	no	yes
=	no	no
null	no	no
;	no	no
url	no	yes
=	no	no
new	no	no
URL	no	yes
(	no	no
urlStr	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numCols	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
ret	no	yes
=	no	no
evaluate	no	yes
(	no	no
url	no	yes
,	no	no
i	no	yes
)	no	no
;	no	no

private	no	no
String	no	no
downloadResource	no	no
(	no	no
URI	no	no
srcUri	yes	no
,	no	no
String	no	no
subDir	no	no
,	no	no
boolean	no	no
convertToUnix	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
URISyntaxException	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
ParseException	no	no
e	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
printAndExit	no	yes
(	no	no
tool	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
hasOption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HelpFormatter	no	yes
formatter	no	yes
=	no	no
new	no	no
HelpFormatter	no	yes
(	no	no
)	no	no
;	no	no
formatter	no	yes
.	no	no
printHelp	no	yes
(	no	no
,	no	no
tool	no	yes
.	no	no
cmdLineOptions	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
hasOption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
outputDir	no	yes
=	no	no
line	no	yes
.	no	no
getOptionValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
hasOption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
execute	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
execute	no	yes
+	no	no
+	no	no
outputDir	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
hiveVer	no	yes
=	no	no
HiveVersionInfo	yes	yes
.	no	no
getShortVersion	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
performUpgradeInternal	no	no
(	no	no
String	no	yes
scriptLocation	no	no
,	no	no
boolean	no	no
execute	no	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
TException	no	no
,	no	no
IOException	no	no
{	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
hiveConf	no	yes
!=	no	no
null	no	no
?	no	no
hiveConf	no	yes
:	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isAcidEnabled	no	yes
=	no	no
isAcidEnabled	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
IMetaStoreClient	no	yes
hms	no	yes
=	no	no
getHMS	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
databases	yes	yes
=	no	no
hms	no	yes
.	no	no
getAllDatabases	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
performUpgradeInternal	no	no
(	no	no
String	no	yes
scriptLocation	no	yes
,	no	no
boolean	no	no
execute	no	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
TException	no	no
,	no	no
IOException	no	no
{	no	no
HiveConf	no	yes
conf	no	yes
=	no	no
hiveConf	no	yes
!=	no	no
null	no	no
?	no	no
hiveConf	no	yes
:	no	no
new	no	no
HiveConf	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isAcidEnabled	no	yes
=	no	no
isAcidEnabled	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
IMetaStoreClient	no	yes
hms	no	yes
=	no	no
getHMS	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
databases	no	yes
=	no	no
hms	no	yes
.	no	no
getAllDatabases	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
databases	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
convertToAcid	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
convertToMM	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Hive	no	yes
db	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
execute	no	no
)	no	no
{	no	no
db	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
PrintWriter	no	yes
pw	no	yes
=	no	no
makeRenameFileScript	no	yes
(	no	no
scriptLocation	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
dbName	yes	yes
:	no	no
databases	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	yes	yes
=	no	no
hms	no	yes
.	no	no
getAllTables	no	yes
(	no	no
dbName	yes	yes
)	no	no
;	no	no

IMetaStoreClient	no	yes
hms	no	yes
=	no	no
getHMS	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
databases	no	yes
=	no	no
hms	no	yes
.	no	no
getAllDatabases	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
databases	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
convertToAcid	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
convertToMM	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Hive	no	yes
db	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
execute	no	no
)	no	no
{	no	no
db	no	yes
=	no	no
Hive	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
PrintWriter	no	yes
pw	no	yes
=	no	no
makeRenameFileScript	no	yes
(	no	no
scriptLocation	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
dbName	no	yes
:	no	no
databases	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	no	yes
=	no	no
hms	no	yes
.	no	no
getAllTables	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tables	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
dbName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
tableName	no	yes
:	no	no
tables	no	yes
)	no	no
{	no	no
Table	no	yes
t	yes	yes
=	no	no
hms	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no

FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
RemoteIteratorWithFilter	no	yes
iter	no	yes
=	no	no
new	no	no
RemoteIteratorWithFilter	no	yes
(	no	no
fs	no	yes
.	no	no
listFiles	no	yes
(	no	no
p	no	yes
,	no	no
true	no	no
)	no	no
,	no	no
RemoteIteratorWithFilter	no	yes
.	no	no
HIDDEN_FILES_FULL_PATH_FILTER	no	yes
)	no	no
;	no	no
Function	no	no
<	no	no
Integer	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>>	no	no
makeList	no	no
=	no	no
new	no	no
Function	no	no
<	no	no
Integer	no	no
,	no	no
List	no	no
<	no	no
Path	no	no
>>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
List	no	no
<	no	no
Path	no	no
>	no	no
apply	no	no
(	no	no
Integer	no	no
aVoid	no	no
)	no	no
{	no	no
return	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
lfs	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lfs	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
bmd	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
.	no	no
parse	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	no
<	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

}	no	no
}	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
lfs	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lfs	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
bmd	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
.	no	no
parse	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
>	no	no
BucketCodec	no	no
.	no	no
MAX_BUCKET_ID	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
+	no	no
;	no	no

if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
>	no	no
BucketCodec	no	no
.	no	no
MAX_BUCKET_ID	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
bmd	no	yes
.	no	no
bucketId	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
copyNumber	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
deltaToFileMap	no	yes
.	no	no
computeIfAbsent	no	yes
(	no	no
bmd	no	yes
.	no	no
copyNumber	no	yes
,	no	no
makeList	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
deltaToFileMap	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
println	no	yes
(	no	no
pw	no	yes
,	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Integer	no	no
,	no	no
List	no	no
<	no	no
Path	no	yes
>>	no	no
ent	no	yes
:	no	no
deltaToFileMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
deltaDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
p	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
deltaSubdir	no	yes
(	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
copyNumber	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
deltaToFileMap	no	yes
.	no	no
computeIfAbsent	no	yes
(	no	no
bmd	no	yes
.	no	no
copyNumber	no	yes
,	no	no
makeList	no	yes
)	no	no
.	no	no
add	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
deltaToFileMap	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
println	no	yes
(	no	no
pw	no	yes
,	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Integer	no	no
,	no	no
List	no	no
<	no	no
Path	no	yes
>>	no	no
ent	no	yes
:	no	no
deltaToFileMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
deltaDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
p	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
deltaSubdir	no	yes
(	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
execute	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	no
.	no	no
mkdirs	no	no
(	no	no
deltaDir	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
deltaDir	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
makeDirectoryCommand	no	yes
(	no	no
deltaDir	no	yes
,	no	no
pw	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
file	no	no
:	no	no
ent	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no

}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
deltaToFileMap	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
println	no	yes
(	no	no
pw	no	yes
,	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Integer	no	no
,	no	no
List	no	no
<	no	no
Path	no	yes
>>	no	no
ent	no	yes
:	no	no
deltaToFileMap	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
deltaDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
p	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
deltaSubdir	no	yes
(	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
ent	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
execute	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	no
.	no	no
mkdirs	no	no
(	no	no
deltaDir	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
deltaDir	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
makeDirectoryCommand	no	yes
(	no	no
deltaDir	no	yes
,	no	no
pw	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Path	no	yes
file	no	yes
:	no	no
ent	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
newFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
deltaDir	no	yes
,	no	no
stripCopySuffix	no	yes
(	no	no
file	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
file	no	yes
+	no	no
+	no	no
newFile	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fs	no	no
.	no	no
exists	no	no
(	no	no
newFile	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
+	no	no
+	no	no
newFile	no	yes
+	no	no
;	no	no

throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
makeRenameCommand	no	yes
(	no	no
file	no	yes
,	no	no
newFile	no	yes
,	no	no
pw	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
deltaToFileMap	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
println	no	yes
(	no	no
pw	no	yes
,	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
RenamePair	no	yes
>	no	no
renames	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
FileSystem	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
RemoteIteratorWithFilter	no	yes
iter	no	yes
=	no	no
new	no	no
RemoteIteratorWithFilter	no	yes
(	no	no
fs	no	yes
.	no	no
listFiles	no	yes
(	no	no
p	no	yes
,	no	no
true	no	no
)	no	no
,	no	no
RemoteIteratorWithFilter	no	yes
.	no	no
HIDDEN_FILES_FULL_PATH_FILTER	no	yes
)	no	no
;	no	no
int	no	no
numBadFileNames	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
numCopyNFiles	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
fileId	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
numBytesInPartition	no	yes
=	no	no
getDataSize	no	yes
(	no	no
p	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
int	no	no
numBuckets	no	yes
=	no	no
guessNumBuckets	no	yes
(	no	no
numBytesInPartition	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
lfs	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no

while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
lfs	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lfs	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
bmd	no	yes
=	no	no
AcidUtils	no	yes
.	no	no
BucketMetaData	no	yes
.	no	no
parse	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
bucketId	no	no
<	no	no
0	no	no
)	no	no
{	no	no
numBadFileNames	no	yes
++	no	no
;	no	no
}	no	no
if	no	no
(	no	no
bmd	no	yes
.	no	no
copyNumber	no	no
>	no	no
0	no	no
)	no	no
{	no	no
numCopyNFiles	no	yes
++	no	no
;	no	no
}	no	no
int	no	no
writeId	no	yes
=	no	no
fileId	no	yes
/	no	no
numBuckets	no	yes
+	no	no
1	no	no
;	no	no
Path	no	yes
deltaDir	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
p	no	yes
,	no	no
AcidUtils	no	yes
.	no	no
deltaSubdir	no	yes
(	no	no
writeId	no	yes
,	no	no
writeId	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
execute	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
fs	no	no
.	no	no
mkdirs	no	no
(	no	no
deltaDir	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
deltaDir	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

private	no	no
static	no	no
PrintWriter	no	no
makeRenameFileScript	no	no
(	no	no
String	no	yes
scriptLocation	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
fileName	yes	yes
=	no	no
+	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
3000	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
RecordWriter	no	yes
<	no	no
NullWritable	no	yes
,	no	no
Text	no	yes
>	no	no
writer	no	yes
=	no	no
format	no	yes
.	no	no
getRecordWriter	no	yes
(	no	no
null	no	no
,	no	no
job	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
Text	no	yes
text	yes	yes
=	no	no
new	no	no
Text	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
text	yes	yes
.	no	no
set	no	yes
(	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
writer	no	yes
.	no	no
write	no	yes
(	no	no
NullWritable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
text	yes	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
InputStream	no	yes
in	no	yes
=	no	no
socket	no	yes
.	no	no
getInputStream	no	yes
(	no	no
)	no	no
;	no	no
LlapBaseRecordReader	no	yes
reader	no	yes
=	no	no
new	no	no
LlapBaseRecordReader	no	yes
(	no	no
in	no	yes
,	no	no
null	no	no
,	no	no
Text	no	yes
.	no	no
class	no	no
,	no	no
job	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
reader	no	yes
.	no	no
handleEvent	no	yes
(	no	no
ReaderEvent	no	yes
.	no	no
doneEvent	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
reader	no	yes
.	no	no
next	no	no
(	no	no
NullWritable	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
,	no	no
text	yes	yes
)	no	no
)	no	no
{	no	no

final	no	no
Connection	no	yes
conn2	no	yes
=	no	no
tHndlr	no	yes
.	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_SERIALIZABLE	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
5	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
Thread	no	yes
t1	no	no
=	no	no
new	no	no
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
try	no	no
{	no	no
updateTxns	no	yes
(	no	no
conn1	no	yes
)	no	no
;	no	no
updateLocks	no	yes
(	no	no
conn1	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
conn1	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
try	no	no
{	no	no
tHndlr	no	yes
.	no	no
checkRetryable	no	yes
(	no	no
conn1	no	yes
,	no	no
e	yes	yes
,	no	no
)	no	no
;	no	no

for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
5	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
Thread	no	yes
t1	no	no
=	no	no
new	no	no
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
try	no	no
{	no	no
updateTxns	no	yes
(	no	no
conn1	no	yes
)	no	no
;	no	no
updateLocks	no	yes
(	no	no
conn1	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
conn1	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
try	no	no
{	no	no
tHndlr	no	yes
.	no	no
checkRetryable	no	yes
(	no	no
conn1	no	yes
,	no	no
e	yes	yes
,	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getSQLState	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TxnHandler	no	no
.	no	no
RetryException	no	no
de	no	no
)	no	no
{	no	no

sawDeadlock	no	yes
.	no	no
set	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
}	no	no
conn1	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
Thread	no	yes
t2	no	no
=	no	no
new	no	no
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
try	no	no
{	no	no
updateLocks	no	yes
(	no	no
conn2	no	yes
)	no	no
;	no	no
updateTxns	no	yes
(	no	no
conn2	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
conn2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
conn1	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
Thread	no	yes
t2	no	no
=	no	no
new	no	no
Thread	no	yes
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
try	no	no
{	no	no
updateLocks	no	yes
(	no	no
conn2	no	yes
)	no	no
;	no	no
updateTxns	no	yes
(	no	no
conn2	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
1000	no	no
)	no	no
;	no	no
conn2	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
try	no	no
{	no	no

private	no	no
void	no	no
logResuts	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
r	no	no
,	no	no
String	no	no
header	yes	no
,	no	no
String	no	no
prefix	yes	no
)	no	no
{	no	no

protected	no	no
List	no	no
<	no	no
String	no	no
>	no	no
runStatementOnDriver	no	no
(	no	no
String	no	no
stmt	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

int	no	no
[	no	no
]	no	no
[	no	no
]	no	no
valuesEven	no	yes
=	no	no
{	no	no
{	no	no
2	no	no
,	no	no
1	no	no
}	no	no
,	no	no
{	no	no
4	no	no
,	no	no
3	no	no
}	no	no
}	no	no
;	no	no
runStatementOnDriver	no	yes
(	no	no
+	no	no
TableExtended	no	yes
.	no	no
MMTBLPART	no	yes
+	no	no
+	no	no
makeValuesClause	no	yes
(	no	no
valuesOdd	no	yes
)	no	no
)	no	no
;	no	no
runStatementOnDriver	no	yes
(	no	no
+	no	no
TableExtended	no	yes
.	no	no
MMTBLPART	no	yes
+	no	no
+	no	no
makeValuesClause	no	yes
(	no	no
valuesEven	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
pStrings	no	yes
=	no	no
{	no	no
,	no	no
}	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
pStrings	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
status	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
TEST_WAREHOUSE_DIR	no	yes
+	no	no
+	no	no
(	no	no
TableExtended	no	yes
.	no	no
MMTBLPART	no	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
+	no	no
pStrings	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
,	no	no
FileUtils	no	yes
.	no	no
STAGING_DIR_PATH_FILTER	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
status	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertTrue	no	yes
(	no	no
status	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
matches	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
int	no	no
[	no	no
]	no	no
[	no	no
]	no	no
newValsOdd	no	yes
=	no	no
{	no	no
{	no	no
5	no	no
,	no	no
5	no	no
}	no	no
,	no	no
{	no	no
11	no	no
,	no	no
11	no	no
}	no	no
}	no	no
;	no	no
int	no	no
[	no	no
]	no	no
[	no	no
]	no	no
newValsEven	no	yes
=	no	no
{	no	no
{	no	no
2	no	no
,	no	no
2	no	no
}	no	no
}	no	no
;	no	no
runStatementOnDriver	no	yes
(	no	no
+	no	no
TableExtended	no	yes
.	no	no
NONACIDPART	no	yes
+	no	no
+	no	no
makeValuesClause	no	yes
(	no	no
newValsOdd	no	yes
)	no	no
)	no	no
;	no	no
runStatementOnDriver	no	yes
(	no	no
+	no	no
TableExtended	no	yes
.	no	no
NONACIDPART	no	yes
+	no	no
+	no	no
makeValuesClause	no	yes
(	no	no
newValsEven	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
rs	yes	yes
=	no	no
null	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
TableExtended	no	yes
.	no	no
MMTBLPART	no	yes
+	no	no
+	no	no
+	no	no
TableExtended	no	yes
.	no	no
NONACIDPART	no	yes
+	no	no
+	no	no
TableExtended	no	yes
.	no	no
NONACIDPART	no	yes
+	no	no
;	no	no
rs	yes	yes
=	no	no
runStatementOnDriver	no	yes
(	no	no
+	no	no
s	no	yes
)	no	no
;	no	no

protected	no	no
List	no	no
<	no	no
String	no	no
>	no	no
runStatementOnDriver	no	no
(	no	no
String	no	no
stmt	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
void	no	no
executePlan	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	yes
{	no	no
String	no	yes
testName	yes	yes
=	no	no
new	no	no
Exception	no	yes
(	no	no
)	no	no
.	no	no
getStackTrace	no	yes
(	no	no
)	no	no
[	no	no
1	no	no
]	no	no
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
;	no	no
MapRedTask	no	yes
mrtask	no	yes
=	no	no
new	no	no
MapRedTask	no	yes
(	no	no
)	no	no
;	no	no
TaskQueue	no	yes
taskQueue	no	yes
=	no	no
new	no	no
TaskQueue	no	yes
(	no	no
)	no	no
;	no	no
mrtask	no	yes
.	no	no
setWork	no	yes
(	no	no
mr	no	yes
)	no	no
;	no	no
mrtask	no	yes
.	no	no
initialize	no	yes
(	no	no
queryState	no	yes
,	no	no
null	no	no
,	no	no
taskQueue	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
int	no	no
exitVal	yes	yes
=	no	no
mrtask	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitVal	yes	yes
!=	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testMultiSessionMultipleUse	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
sessionManagerHS2	no	yes
=	no	no
SparkSessionManagerImpl	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
sessionManagerHS2	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
HiveConf	no	yes
hiveConf	no	yes
=	no	no
getHiveConf	no	yes
(	no	no
)	no	no
;	no	no
sessionManagerHS2	no	yes
.	no	no
setup	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Thread	no	yes
>	no	no
threadList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Thread	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
10	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Thread	no	yes
t	no	yes
=	no	no
new	no	no
Thread	no	yes
(	no	no
new	no	no
SessionThread	no	yes
(	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
+	no	no
i	no	yes
)	no	no
;	no	no
t	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
threadList	no	yes
.	no	no
add	no	yes
(	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Thread	no	yes
t	no	yes
:	no	no
threadList	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
t	no	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no

int	no	no
moved	no	yes
=	no	no
0	no	no
,	no	no
newLoc	no	yes
=	no	no
0	no	no
;	no	no
String	no	yes
newNode	no	yes
=	no	no
partLoc	no	yes
.	no	no
get	no	yes
(	no	no
locs	no	yes
-	no	no
1	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
splitIx	no	yes
=	no	no
0	no	no
;	no	no
splitIx	no	yes
<	no	no
splits	no	yes
.	no	no
length	no	yes
;	no	no
++	no	no
splitIx	no	yes
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
splitLocations	no	yes
=	no	no
lp	no	yes
.	no	no
getLocations	no	yes
(	no	no
splits	no	yes
[	no	no
splitIx	no	yes
]	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
1	no	no
,	no	no
splitLocations	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
String	no	yes
splitLocation	no	yes
=	no	no
splitLocations	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
if	no	no
(	no	no
locs	no	yes
>	no	no
MIN_LOC_COUNT	no	no
&&	no	no
!	no	no
splitLocation	no	yes
.	no	no
equals	no	no
(	no	no
lastLocations	no	yes
[	no	no
splitIx	no	yes
]	no	no
)	no	no
)	no	no
{	no	no
++	no	no
moved	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
newNode	no	yes
.	no	no
equals	no	no
(	no	no
splitLocation	no	yes
)	no	no
)	no	no
{	no	no
++	no	no
newLoc	no	yes
;	no	no
}	no	no
lastLocations	no	yes
[	no	no
splitIx	no	yes
]	no	no
=	no	no
splitLocation	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
locs	no	yes
==	no	no
MIN_LOC_COUNT	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
String	no	yes
msgTail	yes	yes
=	no	no
+	no	no
locs	no	yes
+	no	no
;	no	no
String	no	yes
movedMsg	yes	yes
=	no	no
moved	no	yes
+	no	no
,	no	no
newMsg	yes	yes
=	no	no
newLoc	no	yes
+	no	no
;	no	no

@	no	no
Test	no	no
(	no	no
timeout	no	no
=	no	no
20000	no	no
)	no	no
public	no	no
void	no	no
testConsistentHashingFallback	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
final	no	no
int	no	no
LOC_COUNT_TO	no	yes
=	no	no
20	no	no
,	no	no
SPLIT_COUNT	no	yes
=	no	no
500	no	no
,	no	no
MAX_MISS_COUNT	no	yes
=	no	no
4	no	no
,	no	no
LOC_COUNT_FROM	no	yes
=	no	no
MAX_MISS_COUNT	no	yes
+	no	no
1	no	no
;	no	no
FileSplit	no	yes
[	no	no
]	no	no
splits	no	yes
=	no	no
createSplits	no	yes
(	no	no
SPLIT_COUNT	no	yes
)	no	no
;	no	no
AtomicInteger	no	yes
errorCount	no	yes
=	no	no
new	no	no
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
int	no	no
cvErrorCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
locs	yes	yes
=	no	no
LOC_COUNT_FROM	no	yes
;	no	no
locs	yes	yes
<=	no	no
LOC_COUNT_TO	no	yes
;	no	no
++	no	no
locs	yes	yes
)	no	no
{	no	no
int	no	no
aboveAvgCount	no	yes
=	no	no
0	no	no
;	no	no
double	no	no
sum	no	yes
=	no	no
0	no	no
;	no	no
double	no	no
[	no	no
]	no	no
cvs	yes	yes
=	no	no
new	no	no
double	no	no
[	no	no
MAX_MISS_COUNT	no	yes
+	no	no
1	no	no
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
missCount	no	yes
=	no	no
0	no	no
;	no	no
missCount	no	yes
<=	no	no
MAX_MISS_COUNT	no	yes
;	no	no
++	no	no
missCount	no	yes
)	no	no
{	no	no
double	no	no
cv	no	yes
=	no	no
cvs	yes	yes
[	no	no
missCount	no	yes
]	no	no
=	no	no
testHashDistribution	no	yes
(	no	no
locs	yes	yes
,	no	no
missCount	no	yes
,	no	no
splits	no	yes
,	no	no
errorCount	no	yes
)	no	no
;	no	no
sum	no	yes
+=	no	no
cv	no	yes
;	no	no
if	no	no
(	no	no
missCount	no	yes
>	no	no
0	no	no
&&	no	no
cv	no	yes
>	no	no
sum	no	yes
/	no	no
(	no	no
missCount	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
{	no	no
++	no	no
aboveAvgCount	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
aboveAvgCount	no	yes
>	no	no
2	no	no
)	no	no
{	no	no

Mockito	no	no
.	no	no
when	no	no
(	no	no
partLocs	no	yes
.	no	no
get	no	no
(	no	no
Mockito	no	no
.	no	no
anyInt	no	no
(	no	no
)	no	no
)	no	no
)	no	no
.	no	no
thenAnswer	no	no
(	no	no
new	no	no
Answer	no	no
<	no	no
String	no	no
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
String	no	no
answer	no	no
(	no	no
InvocationOnMock	no	no
invocation	no	no
)	no	no
throws	no	no
Throwable	no	no
{	no	no
return	no	no
(	no	no
state	no	yes
.	no	no
getAndIncrement	no	yes
(	no	no
)	no	no
==	no	no
missCount	yes	yes
)	no	no
?	no	no
:	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
int	no	no
[	no	no
]	no	no
hitCounts	no	yes
=	no	no
new	no	no
int	no	no
[	no	no
locs	yes	yes
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
splitIx	no	yes
=	no	no
0	no	no
;	no	no
splitIx	no	yes
<	no	no
splits	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
splitIx	no	yes
)	no	no
{	no	no
state	no	yes
.	no	no
set	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
int	no	no
index	no	yes
=	no	no
HostAffinitySplitLocationProvider	no	yes
.	no	no
determineLocation	no	yes
(	no	no
partLocs	no	yes
,	no	no
splits	no	yes
[	no	no
splitIx	no	yes
]	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
splits	no	yes
[	no	no
splitIx	no	yes
]	no	no
.	no	no
getStart	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
++	no	no
hitCounts	no	yes
[	no	no
index	no	yes
]	no	no
;	no	no
}	no	no
SummaryStatistics	no	yes
ss	yes	yes
=	no	no
new	no	no
SummaryStatistics	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
hitCount	no	yes
:	no	no
hitCounts	no	yes
)	no	no
{	no	no
ss	yes	yes
.	no	no
addValue	no	yes
(	no	no
hitCount	no	yes
)	no	no
;	no	no
}	no	no
double	no	no
avg	yes	yes
=	no	no
ss	yes	yes
.	no	no
getSum	no	yes
(	no	no
)	no	no
/	no	no
ss	yes	yes
.	no	no
getN	no	yes
(	no	no
)	no	no
,	no	no
stdev	yes	yes
=	no	no
ss	yes	yes
.	no	no
getStandardDeviation	no	yes
(	no	no
)	no	no
,	no	no
cv	yes	yes
=	no	no
stdev	yes	yes
/	no	no
avg	yes	yes
;	no	no
double	no	no
allowedMin	no	yes
=	no	no
avg	yes	yes
-	no	no
2.5	no	no
*	no	no
stdev	yes	yes
,	no	no
allowedMax	no	yes
=	no	no
avg	yes	yes
+	no	no
2.5	no	no
*	no	no
stdev	yes	yes
;	no	no
if	no	no
(	no	no
allowedMin	no	yes
>	no	no
ss	yes	yes
.	no	no
getMin	no	no
(	no	no
)	no	no
||	no	no
allowedMax	no	yes
<	no	no
ss	yes	yes
.	no	no
getMax	no	no
(	no	no
)	no	no
||	no	no
cv	yes	yes
>	no	no
0.22	no	no
)	no	no
{	no	no

container	no	yes
.	no	no
putRow	no	yes
(	no	no
key	no	yes
,	no	no
value	no	yes
)	no	no
;	no	no
dataSize	no	yes
+=	no	no
8	no	no
;	no	no
dataSize	no	yes
+=	no	no
8	no	no
;	no	no
}	no	no
Statistics	no	yes
stat	no	yes
=	no	no
new	no	no
Statistics	no	yes
(	no	no
keyCount	no	yes
,	no	no
dataSize	no	yes
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
Long	no	yes
realObjectSize	yes	yes
=	no	no
getObjectSize	no	yes
(	no	no
container	no	yes
)	no	no
;	no	no
Long	no	yes
executionEstimate	no	yes
=	no	no
container	no	yes
.	no	no
getEstimatedMemorySize	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
compilerEstimate	no	yes
=	no	no
null	no	no
;	no	no
ConvertJoinMapJoin	no	yes
cjm	no	yes
=	no	no
new	no	no
ConvertJoinMapJoin	no	yes
(	no	no
)	no	no
;	no	no
cjm	no	yes
.	no	no
hashTableLoadFactor	no	yes
=	no	no
.75f	no	no
;	no	no
switch	no	no
(	no	no
l	no	no
)	no	no
{	no	no
case	no	no
MULTI_KEY	no	no
:	no	no
compilerEstimate	no	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastCompositeKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
LONG	no	no
:	no	no
compilerEstimate	no	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastLongKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
stat	no	yes
)	no	no
;	no	no

dataSize	no	yes
+=	no	no
8	no	no
;	no	no
dataSize	no	yes
+=	no	no
8	no	no
;	no	no
}	no	no
Statistics	no	yes
stat	no	yes
=	no	no
new	no	no
Statistics	no	yes
(	no	no
keyCount	no	yes
,	no	no
dataSize	no	yes
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
Long	no	yes
realObjectSize	no	yes
=	no	no
getObjectSize	no	yes
(	no	no
container	no	yes
)	no	no
;	no	no
Long	no	yes
executionEstimate	yes	yes
=	no	no
container	no	yes
.	no	no
getEstimatedMemorySize	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
compilerEstimate	no	yes
=	no	no
null	no	no
;	no	no
ConvertJoinMapJoin	no	yes
cjm	no	yes
=	no	no
new	no	no
ConvertJoinMapJoin	no	yes
(	no	no
)	no	no
;	no	no
cjm	no	yes
.	no	no
hashTableLoadFactor	no	yes
=	no	no
.75f	no	no
;	no	no
switch	no	no
(	no	no
l	no	no
)	no	no
{	no	no
case	no	no
MULTI_KEY	no	no
:	no	no
compilerEstimate	no	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastCompositeKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
LONG	no	no
:	no	no
compilerEstimate	no	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastLongKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
stat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
realObjectSize	no	yes
)	no	no
;	no	no

dataSize	no	yes
+=	no	no
8	no	no
;	no	no
}	no	no
Statistics	no	yes
stat	no	yes
=	no	no
new	no	no
Statistics	no	yes
(	no	no
keyCount	no	yes
,	no	no
dataSize	no	yes
,	no	no
0	no	no
,	no	no
0	no	no
)	no	no
;	no	no
Long	no	yes
realObjectSize	no	yes
=	no	no
getObjectSize	no	yes
(	no	no
container	no	yes
)	no	no
;	no	no
Long	no	yes
executionEstimate	no	yes
=	no	no
container	no	yes
.	no	no
getEstimatedMemorySize	no	yes
(	no	no
)	no	no
;	no	no
Long	no	yes
compilerEstimate	yes	yes
=	no	no
null	no	no
;	no	no
ConvertJoinMapJoin	no	yes
cjm	no	yes
=	no	no
new	no	no
ConvertJoinMapJoin	no	yes
(	no	no
)	no	no
;	no	no
cjm	no	yes
.	no	no
hashTableLoadFactor	no	yes
=	no	no
.75f	no	no
;	no	no
switch	no	no
(	no	no
l	no	no
)	no	no
{	no	no
case	no	no
MULTI_KEY	no	no
:	no	no
compilerEstimate	yes	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastCompositeKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
LONG	no	no
:	no	no
compilerEstimate	yes	yes
=	no	no
cjm	no	yes
.	no	no
computeOnlineDataSizeFastLongKeyed	no	no
(	no	no
stat	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
stat	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
realObjectSize	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
executionEstimate	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
joinThread	no	no
(	no	no
Thread	no	no
t	yes	no
)	no	no
throws	no	no
InterruptedException	no	no
{	no	no

private	no	no
static	no	no
void	no	no
joinThread	no	no
(	no	no
Thread	no	no
t	yes	yes
)	no	no
throws	no	no
InterruptedException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
t	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
t	yes	yes
.	no	no
join	no	yes
(	no	no
)	no	no
;	no	no

RCFile	no	yes
.	no	no
Writer	no	yes
writer	no	yes
=	no	no
new	no	no
RCFile	no	yes
.	no	no
Writer	no	yes
(	no	no
fs	no	yes
,	no	no
conf	no	yes
,	no	no
file	no	yes
,	no	no
null	no	no
,	no	no
new	no	no
DefaultCodec	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BytesRefArrayWritable	no	yes
bytes	no	yes
=	no	no
new	no	no
BytesRefArrayWritable	no	yes
(	no	no
record	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
recCount	no	yes
=	no	no
100	no	no
;	no	no
Random	no	yes
rand	no	yes
=	no	no
new	no	no
Random	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
recIdx	no	no
=	no	no
0	no	no
;	no	no
recIdx	no	no
<	no	no
recCount	no	yes
;	no	no
recIdx	no	no
++	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
record	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
record	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
rand	no	yes
.	no	no
nextInt	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
StandardCharsets	no	yes
.	no	no
UTF_8	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
record	no	yes
.	no	no
length	no	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
BytesRefWritable	no	yes
cu	no	yes
=	no	no
new	no	no
BytesRefWritable	no	yes
(	no	no
record	no	yes
[	no	no
i	no	yes
]	no	no
,	no	no
0	no	no
,	no	no
record	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
length	no	yes
)	no	no
;	no	no
bytes	no	yes
.	no	no
set	no	yes
(	no	no
i	no	yes
,	no	no
cu	no	yes
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
append	no	yes
(	no	no
bytes	no	yes
)	no	no
;	no	no
bytes	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
RandomAccessFile	no	yes
raf	yes	yes
=	no	no
new	no	no
RandomAccessFile	no	yes
(	no	no
file	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
long	no	no
corruptOffset	yes	yes
=	no	no
raf	yes	yes
.	no	no
length	no	yes
(	no	no
)	no	no
/	no	no
2	no	no
;	no	no

System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
args	no	yes
.	no	no
length	no	no
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
count	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
args	no	yes
[	no	no
++	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
file	yes	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
args	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
file	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
usage	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
count	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
create	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
fullyReadTest	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
int	no	no
count	yes	no
,	no	no
Path	no	no
file	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
SerDeException	no	no
{	no	no

Object	no	yes
row	no	yes
=	no	no
serDe	no	yes
.	no	no
deserialize	no	yes
(	no	no
cols	no	yes
)	no	no
;	no	no
StructObjectInspector	no	yes
oi	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
serDe	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
?	no	no
extends	no	no
StructField	no	yes
>	no	no
fieldRefs	no	yes
=	no	no
oi	no	yes
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
8	no	no
,	no	no
fieldRefs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
fieldRefs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
Object	no	yes
fieldData	no	yes
=	no	no
oi	no	yes
.	no	no
getStructFieldData	no	yes
(	no	no
row	no	yes
,	no	no
fieldRefs	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
Object	no	yes
standardWritableData	no	yes
=	no	no
ObjectInspectorUtils	no	yes
.	no	no
copyToStandardObject	no	yes
(	no	no
fieldData	no	yes
,	no	no
fieldRefs	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
,	no	no
ObjectInspectorCopyOption	no	yes
.	no	no
WRITABLE	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
standardWritableData	no	yes
,	no	no
expectedFieldsData	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
BytesRefArrayWritable	no	yes
.	no	no
class	no	no
,	no	no
serDe	no	yes
.	no	no
getSerializedClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BytesRefArrayWritable	no	yes
serializedText	no	yes
=	no	no
(	no	no
BytesRefArrayWritable	no	yes
)	no	no
serDe	no	yes
.	no	no
serialize	no	yes
(	no	no
row	no	yes
,	no	no
oi	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
s	no	yes
,	no	no
serializedText	no	yes
)	no	no
;	no	no
actualRead	no	yes
++	no	no
;	no	no
}	no	no
reader	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
actualRead	no	yes
,	no	no
actualRead	no	yes
,	no	no
count	no	yes
)	no	no
;	no	no
long	no	no
cost	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

private	no	no
void	no	no
partialReadTest	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
int	no	no
count	yes	no
,	no	no
Path	no	no
file	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
SerDeException	no	no
{	no	no

reader	no	yes
.	no	no
getCurrentRow	no	yes
(	no	no
cols	no	yes
)	no	no
;	no	no
cols	no	yes
.	no	no
resetValid	no	yes
(	no	no
8	no	no
)	no	no
;	no	no
Object	no	yes
row	no	yes
=	no	no
serDe	no	yes
.	no	no
deserialize	no	yes
(	no	no
cols	no	yes
)	no	no
;	no	no
StructObjectInspector	no	yes
oi	no	yes
=	no	no
(	no	no
StructObjectInspector	no	yes
)	no	no
serDe	no	yes
.	no	no
getObjectInspector	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
?	no	no
extends	no	no
StructField	no	yes
>	no	no
fieldRefs	no	yes
=	no	no
oi	no	yes
.	no	no
getAllStructFieldRefs	no	yes
(	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
8	no	no
,	no	no
fieldRefs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
:	no	no
readCols	no	no
)	no	no
{	no	no
Object	no	yes
fieldData	no	yes
=	no	no
oi	no	yes
.	no	no
getStructFieldData	no	yes
(	no	no
row	no	yes
,	no	no
fieldRefs	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
)	no	no
;	no	no
Object	no	yes
standardWritableData	no	yes
=	no	no
ObjectInspectorUtils	no	yes
.	no	no
copyToStandardObject	no	yes
(	no	no
fieldData	no	yes
,	no	no
fieldRefs	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getFieldObjectInspector	no	yes
(	no	no
)	no	no
,	no	no
ObjectInspectorCopyOption	no	yes
.	no	no
WRITABLE	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
i	no	yes
,	no	no
standardWritableData	no	yes
,	no	no
expectedPartitalFieldsData	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
assertEquals	no	yes
(	no	no
,	no	no
BytesRefArrayWritable	no	yes
.	no	no
class	no	no
,	no	no
serDe	no	yes
.	no	no
getSerializedClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
BytesRefArrayWritable	no	yes
serializedBytes	no	yes
=	no	no
(	no	no
BytesRefArrayWritable	no	yes
)	no	no
serDe	no	yes
.	no	no
serialize	no	yes
(	no	no
row	no	yes
,	no	no
oi	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
patialS	no	yes
,	no	no
serializedBytes	no	yes
)	no	no
;	no	no
}	no	no
reader	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
cost	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
;	no	no

Path	no	yes
dir1_file2	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dataDir1	no	yes
,	no	no
)	no	no
;	no	no
writeTextFile	no	yes
(	no	no
dir1_file2	no	yes
,	no	no
+	no	no
)	no	no
;	no	no
Path	no	yes
dir2_file1	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dataDir2	no	yes
,	no	no
)	no	no
;	no	no
writeTextFile	no	yes
(	no	no
dir2_file1	no	yes
,	no	no
+	no	no
)	no	no
;	no	no
Path	no	yes
dir2_file2	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
dataDir2	no	yes
,	no	no
)	no	no
;	no	no
writeTextFile	no	yes
(	no	no
dir2_file2	no	yes
,	no	no
+	no	no
)	no	no
;	no	no
symbolLinkedFileSize	no	yes
+=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
dir2_file2	no	yes
)	no	no
.	no	no
getLen	no	yes
(	no	no
)	no	no
;	no	no
writeSymlinkFile	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
symlinkDir	no	yes
,	no	no
)	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
dataDir1	no	yes
,	no	no
)	no	no
,	no	no
new	no	no
Path	no	yes
(	no	no
dataDir2	no	yes
,	no	no
)	no	no
)	no	no
;	no	no
SymlinkTextInputFormat	no	yes
inputFormat	no	yes
=	no	no
new	no	no
SymlinkTextInputFormat	no	yes
(	no	no
)	no	no
;	no	no
ContentSummary	no	yes
cs	no	yes
=	no	no
inputFormat	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
symlinkDir	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
symbolLinkedFileSize	no	yes
,	no	no
cs	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
2	no	no
,	no	no
cs	no	yes
.	no	no
getFileCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
cs	no	yes
.	no	no
getDirectoryCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FileInputFormat	no	yes
.	no	no
setInputPaths	no	yes
(	no	no
job	no	yes
,	no	no
symlinkDir	no	yes
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
splits	yes	yes
=	no	no
inputFormat	no	yes
.	no	no
getSplits	no	yes
(	no	no
job	no	yes
,	no	no
2	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testAccuracy2	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
fileSystem	no	yes
.	no	no
mkdirs	no	yes
(	no	no
symlinkDir	no	yes
)	no	no
;	no	no
FileInputFormat	no	yes
.	no	no
setInputPaths	no	yes
(	no	no
job	no	yes
,	no	no
symlinkDir	no	yes
)	no	no
;	no	no
SymlinkTextInputFormat	no	yes
inputFormat	no	yes
=	no	no
new	no	no
SymlinkTextInputFormat	no	yes
(	no	no
)	no	no
;	no	no
ContentSummary	no	yes
cs	no	yes
=	no	no
inputFormat	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
symlinkDir	no	yes
,	no	no
job	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
cs	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
cs	no	yes
.	no	no
getFileCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
0	no	no
,	no	no
cs	no	yes
.	no	no
getDirectoryCount	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
InputSplit	no	yes
[	no	no
]	no	no
splits	yes	yes
=	no	no
inputFormat	no	yes
.	no	no
getSplits	no	yes
(	no	no
job	no	yes
,	no	no
2	no	no
)	no	no
;	no	no

}	no	no
}	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
fileLength	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
testFilePath	no	yes
)	no	no
.	no	no
getLen	no	yes
(	no	no
)	no	no
;	no	no
Reader	no	yes
orcReader	no	yes
=	no	no
OrcFile	no	yes
.	no	no
createReader	no	yes
(	no	no
fs	no	yes
,	no	no
testFilePath	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
StripeInformation	no	yes
>	no	no
stripes	yes	yes
=	no	no
orcReader	no	yes
.	no	no
getStripes	no	yes
(	no	no
)	no	no
;	no	no
StripeInformation	no	yes
lastStripe	no	yes
=	no	no
stripes	yes	yes
.	no	no
get	no	yes
(	no	no
stripes	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
long	no	no
lastStripeOffset	yes	yes
=	no	no
lastStripe	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
lastStripeLength	yes	yes
=	no	no
lastStripe	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
;	no	no
RecordIdentifier	no	yes
[	no	no
]	no	no
keyIndex	no	yes
=	no	no
OrcRecordUpdater	no	yes
.	no	no
parseKeyIndex	no	yes
(	no	no
orcReader	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
stripes	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
keyIndex	no	yes
.	no	no
length	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	no
RecordIdentifier	no	yes
(	no	no
1	no	no
,	no	no
536870916	no	no
,	no	no
999	no	no
)	no	no
,	no	no
keyIndex	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
new	no	no
RecordIdentifier	no	yes
(	no	no
1	no	no
,	no	no
536870920	no	no
,	no	no
999	no	no
)	no	no
,	no	no
keyIndex	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ValidTxnList	no	yes
.	no	no
VALID_TXNS_KEY	no	yes
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
IOConstants	no	yes
.	no	no
SCHEMA_EVOLUTION_COLUMNS	no	yes
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
IOConstants	no	yes
.	no	no
SCHEMA_EVOLUTION_COLUMNS_TYPES	no	yes
,	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ColumnProjectionUtils	no	yes
.	no	no
READ_ALL_COLUMNS	no	yes
,	no	no
)	no	no
;	no	no

assertEquals	no	yes
(	no	no
,	no	no
getValue	no	yes
(	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
true	no	no
,	no	no
merger	no	yes
.	no	no
next	no	yes
(	no	no
id	yes	yes
,	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
INSERT_OPERATION	no	yes
,	no	no
OrcRecordUpdater	no	yes
.	no	no
getOperation	no	yes
(	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
new	no	no
ReaderKey	no	yes
(	no	no
200	no	no
,	no	no
BUCKET_PROPERTY	no	yes
,	no	no
1	no	no
,	no	no
200	no	no
)	no	no
,	no	no
id	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
getValue	no	yes
(	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
true	no	no
,	no	no
merger	no	yes
.	no	no
next	no	yes
(	no	no
id	yes	yes
,	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
OrcRecordUpdater	no	yes
.	no	no
INSERT_OPERATION	no	yes
,	no	no
OrcRecordUpdater	no	yes
.	no	no
getOperation	no	yes
(	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
new	no	no
ReaderKey	no	yes
(	no	no
200	no	no
,	no	no
BUCKET_PROPERTY	no	yes
,	no	no
2	no	no
,	no	no
200	no	no
)	no	no
,	no	no
id	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
,	no	no
getValue	no	yes
(	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
false	no	no
,	no	no
merger	no	yes
.	no	no
next	no	yes
(	no	no
id	yes	yes
,	no	no
event	yes	yes
)	no	no
)	no	no
;	no	no
merger	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ValidWriteIdList	no	yes
writeIds	no	yes
=	no	no
new	no	no
ValidReaderWriteIdList	no	yes
(	no	no
)	no	no
;	no	no
baseReader	no	yes
=	no	no
OrcFile	no	yes
.	no	no
createReader	no	yes
(	no	no
basePath	no	yes
,	no	no
OrcFile	no	yes
.	no	no
readerOptions	no	yes
(	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
merger	no	yes
=	no	no
new	no	no
OrcRawRecordMerger	no	yes
(	no	no
conf	no	yes
,	no	no
false	no	no
,	no	no
baseReader	no	yes
,	no	no
false	no	no
,	no	no
BUCKET	no	yes
,	no	no
writeIds	no	yes
,	no	no
new	no	no
Reader	no	yes
.	no	no
Options	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
Path	no	yes
[	no	no
]	no	no
{	no	no
deleteDeltaDir	no	yes
}	no	no
,	no	no
new	no	no
OrcRawRecordMerger	no	yes
.	no	no
Options	no	yes
(	no	no
)	no	no
.	no	no
isCompacting	no	yes
(	no	no
false	no	no
)	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
null	no	no
,	no	no
merger	no	yes
.	no	no
getMinKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

@	no	no
BeforeClass	no	no
public	no	no
static	no	no
void	no	no
setupDb	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
String	no	yes
metastoreType	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
SYS_PROP_METASTORE_DB	no	yes
)	no	no
==	no	no
null	no	no
?	no	no
:	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
SYS_PROP_METASTORE_DB	no	yes
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
rule	no	yes
=	no	no
getDatabaseRule	no	yes
(	no	no
metastoreType	no	yes
)	no	no
.	no	no
setVerbose	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
conf	yes	yes
.	no	no
setVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTOREDBTYPE	no	yes
,	no	no
metastoreType	no	yes
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
,	no	no
rule	no	yes
.	no	no
getJdbcUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECTION_DRIVER	no	yes
,	no	no
rule	no	yes
.	no	no
getJdbcDriver	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CONNECTION_USER_NAME	no	yes
,	no	no
rule	no	yes
.	no	no
getHiveUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PWD	no	yes
,	no	no
rule	no	yes
.	no	no
getHivePassword	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setBoolVar	no	yes
(	no	no
conf	yes	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
AUTO_CREATE_ALL	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

try	no	no
{	no	no
Files	no	yes
.	no	no
createDirectory	no	yes
(	no	no
parent	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FileAlreadyExistsException	no	no
e	no	no
)	no	no
{	no	no
}	no	no
deleteLogFiles	no	yes
(	no	no
parent	no	yes
,	no	no
fileName	no	yes
)	no	no
;	no	no
Logger	no	yes
logger	no	yes
=	no	no
LogManager	no	yes
.	no	no
getLogger	no	yes
(	no	no
LineageLogger	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
logging	no	yes
.	no	no
log4j	no	yes
.	no	no
core	no	yes
.	no	no
Logger	no	yes
coreLogger	no	yes
=	no	no
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
logging	no	yes
.	no	no
log4j	no	yes
.	no	no
core	no	yes
.	no	no
Logger	no	yes
)	no	no
logger	no	yes
;	no	no
LoggerConfig	no	yes
loggerConfig	no	yes
=	no	no
coreLogger	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Appender	no	yes
>	no	no
appenders	no	yes
=	no	no
loggerConfig	no	yes
.	no	no
getAppenders	no	yes
(	no	no
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
,	no	no
appenders	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
NUM_LOGS	no	yes
=	no	no
7	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
errorString	yes	yes
=	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	no
=	no	no
0	no	no
;	no	no
i	yes	no
<	no	no
NUM_LOGS	no	yes
;	no	no
i	yes	no
++	no	no
)	no	no
{	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
100	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testInsertSelect	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteAllNonPartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteWhereNoPartition	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteAllPartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteAllWherePartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteOnePartition	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDeleteOnePartitionWhere	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateAllNonPartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateAllNonPartitionedWhere	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateAllPartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateAllPartitionedWhere	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateOnePartition	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testUpdateOnePartitionWhere	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testInsertValues	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testInsertValuesPartitioned	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
try	no	no
{	no	no
ReturnInfo	no	yes
rc	yes	yes
=	no	no
parseAndAnalyze	no	yes
(	no	no
+	no	no
,	no	no
)	no	no
;	no	no

File	no	yes
dist	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dist	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
reloadFolder	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
reloadClazzFileName	no	yes
)	no	no
;	no	no
Files	no	yes
.	no	no
copy	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestUtils	no	yes
.	no	no
getFileFromClasspath	no	yes
(	no	no
clazzDistFileName	no	yes
)	no	no
)	no	no
,	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
getReloadedClazzVersion	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ss	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioException	yes	yes
)	no	no
{	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
ioException	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

try	no	no
{	no	no
ss	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
dist	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
reloadFolder	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
reloadClazzFileName	no	yes
)	no	no
;	no	no
Files	no	yes
.	no	no
copy	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestUtils	no	yes
.	no	no
getFileFromClasspath	no	yes
(	no	no
clazzDistFileName	no	yes
)	no	no
)	no	no
,	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
getReloadedClazzVersion	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
Files	no	yes
.	no	no
copy	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestUtils	no	yes
.	no	no
getFileFromClasspath	no	yes
(	no	no
clazzV2FileName	no	yes
)	no	no
)	no	no
,	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
getReloadedClazzVersion	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
Files	no	yes
.	no	no
copy	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
HiveTestUtils	no	yes
.	no	no
getFileFromClasspath	no	yes
(	no	no
clazzV2FileName	no	yes
)	no	no
)	no	no
,	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
getReloadedClazzVersion	no	yes
(	no	no
ss	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
ss	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
dist	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
ss	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioException	yes	yes
)	no	no
{	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
ioException	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
runTest	no	no
(	no	no
WindowingSpec	no	no
.	no	no
Direction	no	no
startDirection	no	yes
,	no	no
int	no	no
startAmount	no	yes
,	no	no
WindowingSpec	no	no
.	no	no
Direction	no	no
endDirection	no	yes
,	no	no
int	no	no
endAmount	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
BoundaryDef	no	yes
startBoundary	no	yes
=	no	no
new	no	no
BoundaryDef	no	yes
(	no	no
startDirection	no	yes
,	no	no
startAmount	no	yes
)	no	no
;	no	no
BoundaryDef	no	yes
endBoundary	no	yes
=	no	no
new	no	no
BoundaryDef	no	yes
(	no	no
endDirection	no	yes
,	no	no
endAmount	no	yes
)	no	no
;	no	no
AtomicInteger	no	yes
readCounter	no	yes
=	no	no
new	no	no
AtomicInteger	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
int	no	no
[	no	no
]	no	no
expectedBoundaryStarts	no	yes
=	no	no
new	no	no
int	no	no
[	no	no
TEST_PARTITION	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
int	no	no
[	no	no
]	no	no
expectedBoundaryEnds	no	yes
=	no	no
new	no	no
int	no	no
[	no	no
TEST_PARTITION	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
int	no	no
expectedReadCountWithoutCache	no	yes
=	no	no
-	no	no
1	no	no
;	no	no
for	no	no
(	no	no
PTFInvocationSpec	no	no
.	no	no
Order	no	no
order	yes	no
:	no	no
ORDERS	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Integer	no	no
cacheSize	yes	no
:	no	no
CACHE_SIZES	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getStackTrace	no	yes
(	no	no
)	no	no
[	no	no
2	no	no
]	no	no
.	no	no
getMethodName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

PTFPartition	no	yes
ptfPartition	no	yes
=	no	no
mocks	no	yes
.	no	no
getLeft	no	yes
(	no	no
)	no	no
;	no	no
ValueBoundaryScanner	no	yes
scanner	no	yes
=	no	no
mocks	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	yes	yes
=	no	no
0	no	no
;	no	no
i	yes	yes
<	no	no
TEST_PARTITION	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
;	no	no
++	no	no
i	yes	yes
)	no	no
{	no	no
scanner	no	yes
.	no	no
handleCache	no	yes
(	no	no
i	yes	yes
,	no	no
ptfPartition	no	yes
)	no	no
;	no	no
int	no	no
start	yes	yes
=	no	no
scanner	no	yes
.	no	no
computeStart	no	yes
(	no	no
i	yes	yes
,	no	no
ptfPartition	no	yes
)	no	no
;	no	no
int	no	no
end	yes	yes
=	no	no
scanner	no	yes
.	no	no
computeEnd	no	yes
(	no	no
i	yes	yes
,	no	no
ptfPartition	no	yes
)	no	no
-	no	no
1	no	no
;	no	no
if	no	no
(	no	no
cache	no	no
==	no	no
null	no	no
)	no	no
{	no	no
expectedBoundaryStarts	no	yes
[	no	no
i	yes	yes
]	no	no
=	no	no
start	yes	yes
;	no	no
expectedBoundaryEnds	no	yes
[	no	no
i	yes	yes
]	no	no
=	no	no
end	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
assertEquals	no	yes
(	no	no
expectedBoundaryStarts	no	yes
[	no	no
i	yes	yes
]	no	no
,	no	no
start	yes	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
expectedBoundaryEnds	no	yes
[	no	no
i	yes	yes
]	no	no
,	no	no
end	yes	yes
)	no	no
;	no	no
}	no	no
Integer	no	yes
col0	yes	yes
=	no	no
ofNullable	no	yes
(	no	no
TEST_PARTITION	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
v	no	yes
->	no	no
v	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
Integer	no	yes
col1	yes	yes
=	no	no
ofNullable	no	yes
(	no	no
TEST_PARTITION	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
v	no	yes
->	no	no
v	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
Integer	no	yes
col2	yes	yes
=	no	no
ofNullable	no	yes
(	no	no
TEST_PARTITION	no	yes
.	no	no
get	no	yes
(	no	no
i	yes	yes
)	no	no
.	no	no
get	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
v	no	yes
->	no	no
v	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
;	no	no

tickTimeToUse	no	yes
=	no	no
this	no	no
.	no	no
tickTime	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
tickTimeToUse	no	yes
=	no	no
TICK_TIME	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
hasValidClientPortInList	no	no
(	no	no
i	no	yes
)	no	no
)	no	no
{	no	no
currentClientPort	yes	yes
=	no	no
clientPortList	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
tentativePort	no	yes
=	no	no
selectClientPort	no	yes
(	no	no
tentativePort	no	yes
)	no	no
;	no	no
currentClientPort	yes	yes
=	no	no
tentativePort	no	yes
;	no	no
}	no	no
ZooKeeperServer	no	yes
server	no	yes
=	no	no
new	no	no
ZooKeeperServer	no	yes
(	no	no
dir	no	yes
,	no	no
dir	no	yes
,	no	no
tickTimeToUse	no	yes
)	no	no
;	no	no
server	no	yes
.	no	no
setMinSessionTimeout	no	yes
(	no	no
configuration	no	yes
.	no	no
getInt	no	yes
(	no	no
,	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
setMaxSessionTimeout	no	yes
(	no	no
configuration	no	yes
.	no	no
getInt	no	yes
(	no	no
,	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
ServerCnxnFactory	no	yes
standaloneServerFactory	no	yes
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
try	no	no
{	no	no
standaloneServerFactory	no	yes
=	no	no
createServerCnxnFactory	no	yes
(	no	no
currentClientPort	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
started	no	no
||	no	no
activeZKServerIndex	no	yes
<	no	no
0	no	no
)	no	no
{	no	no
return	no	no
-	no	no
1	no	no
;	no	no
}	no	no
ServerCnxnFactory	no	yes
standaloneServerFactory	no	yes
=	no	no
standaloneServerFactoryList	no	yes
.	no	no
get	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no
int	no	no
clientPort	yes	yes
=	no	no
clientPortList	no	yes
.	no	no
get	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no
standaloneServerFactory	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
waitForServerDown	no	no
(	no	no
clientPort	yes	yes
,	no	no
connectionTimeout	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
zooKeeperServers	no	yes
.	no	no
get	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
.	no	no
getZKDatabase	no	yes
(	no	no
)	no	no
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
standaloneServerFactoryList	no	yes
.	no	no
remove	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no
clientPortList	no	yes
.	no	no
remove	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no
zooKeeperServers	no	yes
.	no	no
remove	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
+	no	no
clientPort	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
standaloneServerFactoryList	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
-	no	no
1	no	no
;	no	no
}	no	no
clientPort	yes	yes
=	no	no
clientPortList	no	yes
.	no	no
get	no	yes
(	no	no
activeZKServerIndex	no	yes
)	no	no
;	no	no

BufferedReader	no	yes
reader	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
OutputStream	no	yes
outstream	no	yes
=	no	no
sock	no	yes
.	no	no
getOutputStream	no	yes
(	no	no
)	no	no
;	no	no
outstream	no	yes
.	no	no
write	no	yes
(	no	no
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
outstream	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
Reader	no	yes
isr	no	yes
=	no	no
new	no	no
InputStreamReader	no	yes
(	no	no
sock	no	yes
.	no	no
getInputStream	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
reader	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
isr	no	yes
)	no	no
;	no	no
String	no	yes
line	no	yes
=	no	no
reader	no	yes
.	no	no
readLine	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
line	no	yes
!=	no	no
null	no	no
&&	no	no
line	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
sock	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
reader	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
reader	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
initialize	no	no
(	no	no
final	no	no
Configuration	no	no
conf	no	no
,	no	no
final	no	no
Properties	no	no
tbl	yes	no
,	no	no
final	no	no
boolean	no	no
writeablePrimitivesDeserialize	no	no
)	no	no
{	no	no

public	no	no
void	no	no
initialize	no	no
(	no	no
final	no	no
Configuration	no	no
conf	no	no
,	no	no
final	no	no
Properties	no	no
tbl	no	yes
,	no	no
final	no	no
boolean	no	no
writeablePrimitivesDeserialize	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tbl	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameProperty	yes	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
columnNames	yes	yes
=	no	no
columnNameProperty	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
?	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
:	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	yes	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
columnTypeProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
columnTypes	no	yes
=	no	no
columnTypeProperty	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
?	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
:	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
initialize	no	no
(	no	no
final	no	no
Configuration	no	no
conf	no	no
,	no	no
final	no	no
Properties	no	no
tbl	no	yes
,	no	no
final	no	no
boolean	no	no
writeablePrimitivesDeserialize	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tbl	no	yes
.	no	no
entrySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
columnNames	no	yes
=	no	no
columnNameProperty	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
?	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
:	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
columnTypeProperty	yes	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
columnTypes	yes	yes
=	no	no
columnTypeProperty	yes	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
?	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
:	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
columnNameProperty	no	yes
,	no	no
columnNames	no	yes
)	no	no
;	no	no

tsParser	no	yes
=	no	no
new	no	no
TimestampParser	no	yes
(	no	no
HiveStringUtils	no	yes
.	no	no
splitAndUnEscape	no	yes
(	no	no
parserFormats	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
tsParser	no	yes
=	no	no
new	no	no
TimestampParser	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
binaryEncodingStr	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
BINARY_FORMAT	no	yes
,	no	no
)	no	no
;	no	no
this	no	no
.	no	no
binaryEncoding	no	yes
=	no	no
BinaryEncoding	no	yes
.	no	no
valueOf	no	yes
(	no	no
binaryEncodingStr	no	yes
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
jsonReader	no	yes
=	no	no
new	no	no
HiveJsonReader	no	yes
(	no	no
this	no	no
.	no	no
soi	no	yes
,	no	no
tsParser	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
jsonWriter	yes	yes
=	no	no
new	no	no
HiveJsonWriter	no	yes
(	no	no
this	no	no
.	no	no
binaryEncoding	no	yes
,	no	no
columnNames	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
jsonReader	no	yes
.	no	no
setBinaryEncoding	no	yes
(	no	no
binaryEncoding	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
jsonReader	no	yes
.	no	no
enable	no	yes
(	no	no
HiveJsonReader	no	yes
.	no	no
Feature	no	yes
.	no	no
COL_INDEX_PARSING	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
writeablePrimitivesDeserialize	no	no
)	no	no
{	no	no
this	no	no
.	no	no
jsonReader	no	yes
.	no	no
enable	no	yes
(	no	no
HiveJsonReader	no	yes
.	no	no
Feature	no	yes
.	no	no
PRIMITIVE_TO_WRITABLE	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
ignoreExtras	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
IGNORE_EXTRA	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
Boolean	no	no
.	no	no
parseBoolean	no	no
(	no	no
ignoreExtras	no	yes
)	no	no
)	no	no
{	no	no
this	no	no
.	no	no
jsonReader	no	yes
.	no	no
enable	no	yes
(	no	no
HiveJsonReader	no	yes
.	no	no
Feature	no	yes
.	no	no
IGNORE_UKNOWN_FIELDS	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
jsonReader	no	yes
)	no	no
;	no	no

nullString	no	yes
=	no	no
getByteValue	no	yes
(	no	no
altNull	no	yes
,	no	no
defaultNullString	no	yes
)	no	no
;	no	no
String	no	yes
columnProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
serdeName	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
SERIALIZATION_LIB	no	yes
)	no	no
;	no	no
boolean	no	no
columnsetSerDe	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
(	no	no
serdeName	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
serdeName	no	yes
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
columnsetSerDe	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
tbl	no	yes
.	no	no
containsKey	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
?	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
:	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
columnProperty	no	yes
==	no	no
null	no	no
||	no	no
columnProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
||	no	no
columnsetSerDe	no	yes
)	no	no
{	no	no
cachedObjectInspector	no	yes
=	no	no
ObjectInspectorFactory	no	yes
.	no	no
getReflectionObjectInspector	no	yes
(	no	no
ColumnSet	no	yes
.	no	no
class	no	no
,	no	no
ObjectInspectorFactory	no	yes
.	no	no
ObjectInspectorOptions	no	yes
.	no	no
JAVA	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnNames	yes	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
cachedObjectInspector	no	yes
=	no	no
MetadataListStructObjectInspector	no	yes
.	no	no
getInstance	no	yes
(	no	no
columnNames	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
lastColumnTakesRestString	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
SERIALIZATION_LAST_COLUMN_TAKES_REST	no	yes
)	no	no
;	no	no
lastColumnTakesRest	yes	yes
=	no	no
(	no	no
lastColumnTakesRestString	no	yes
!=	no	no
null	no	no
&&	no	no
lastColumnTakesRestString	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
splitLimit	yes	yes
=	no	no
(	no	no
lastColumnTakesRest	yes	yes
&&	no	no
columnNames	yes	yes
!=	no	no
null	no	no
)	no	no
?	no	no
columnNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
:	no	no
-	no	no
1	no	no
;	no	no

csv	no	yes
=	no	no
newReader	no	yes
(	no	no
new	no	no
CharArrayReader	no	yes
(	no	no
rowText	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
toCharArray	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
separatorChar	no	yes
,	no	no
quoteChar	no	yes
,	no	no
escapeChar	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
[	no	no
]	no	no
read	no	yes
=	no	no
csv	no	yes
.	no	no
readNext	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
numCols	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
if	no	no
(	no	no
read	no	yes
!=	no	no
null	no	no
&&	no	no
i	no	yes
<	no	no
read	no	yes
.	no	no
length	no	no
)	no	no
{	no	no
row	no	yes
.	no	no
set	no	yes
(	no	no
i	no	yes
,	no	no
read	no	yes
[	no	no
i	no	yes
]	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
row	no	yes
.	no	no
set	no	yes
(	no	no
i	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
row	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
final	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
SerDeException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
csv	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
csv	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
final	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
row	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
AvroGenericRecordWritable	no	yes
recordWritable	no	yes
=	no	no
(	no	no
AvroGenericRecordWritable	no	yes
)	no	no
writable	no	yes
;	no	no
GenericRecord	no	yes
r	no	yes
=	no	no
recordWritable	no	yes
.	no	no
getRecord	no	yes
(	no	no
)	no	no
;	no	no
Schema	no	yes
fileSchema	no	yes
=	no	no
recordWritable	no	yes
.	no	no
getFileSchema	no	yes
(	no	no
)	no	no
;	no	no
writerTimezone	no	yes
=	no	no
recordWritable	no	yes
.	no	no
getWriterTimezone	no	yes
(	no	no
)	no	no
;	no	no
writerProleptic	no	yes
=	no	no
recordWritable	no	yes
.	no	no
getWriterProleptic	no	yes
(	no	no
)	no	no
;	no	no
UID	no	yes
recordReaderId	yes	yes
=	no	no
recordWritable	no	yes
.	no	no
getRecordReaderID	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
noEncodingNeeded	no	no
.	no	no
contains	no	no
(	no	no
recordReaderId	yes	yes
)	no	no
)	no	no
{	no	no
SchemaReEncoder	no	yes
reEncoder	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
reEncoderCache	no	yes
.	no	no
containsKey	no	no
(	no	no
recordReaderId	yes	yes
)	no	no
)	no	no
{	no	no
reEncoder	no	yes
=	no	no
reEncoderCache	no	yes
.	no	no
get	no	yes
(	no	no
recordReaderId	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
!	no	no
r	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
readerSchema	no	yes
)	no	no
)	no	no
{	no	no
reEncoder	no	yes
=	no	no
new	no	no
SchemaReEncoder	no	yes
(	no	no
r	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
,	no	no
readerSchema	no	yes
)	no	no
;	no	no
reEncoderCache	no	yes
.	no	no
put	no	yes
(	no	no
recordReaderId	yes	yes
,	no	no
reEncoder	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
data	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
data	no	yes
instanceof	no	no
LazyStruct	no	yes
)	no	no
{	no	no
LazyStruct	no	yes
row	no	yes
=	no	no
(	no	no
LazyStruct	no	yes
)	no	no
data	no	yes
;	no	no
Object	no	yes
rowField	no	yes
=	no	no
row	no	yes
.	no	no
getField	no	yes
(	no	no
fieldID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rowField	no	yes
instanceof	no	no
LazyStruct	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
rowField	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rowField	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
deserializeStruct	no	yes
(	no	no
rowField	no	yes
,	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rowField	no	yes
instanceof	no	no
LazyMap	no	yes
)	no	no
{	no	no
LazyMap	no	yes
lazyMap	no	yes
=	no	no
(	no	no
LazyMap	no	yes
)	no	no
rowField	no	yes
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Object	no	yes
,	no	no
Object	no	yes
>	no	no
entry	no	yes
:	no	no
lazyMap	no	yes
.	no	no
getMap	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Object	no	yes
_key	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
_value	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
_value	no	yes
instanceof	no	no
LazyStruct	no	yes
)	no	no
{	no	no
lazyMap	no	yes
.	no	no
getMap	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
_key	no	yes
,	no	no
deserializeStruct	no	yes
(	no	no
_value	no	yes
,	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

Object	no	yes
rowField	yes	yes
=	no	no
row	no	yes
.	no	no
getField	no	yes
(	no	no
fieldID	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rowField	yes	yes
instanceof	no	no
LazyStruct	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
rowField	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rowField	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
deserializeStruct	no	yes
(	no	no
rowField	yes	yes
,	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
rowField	yes	yes
instanceof	no	no
LazyMap	no	yes
)	no	no
{	no	no
LazyMap	no	yes
lazyMap	no	yes
=	no	no
(	no	no
LazyMap	no	yes
)	no	no
rowField	yes	yes
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Object	no	yes
,	no	no
Object	no	yes
>	no	no
entry	no	yes
:	no	no
lazyMap	no	yes
.	no	no
getMap	no	yes
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Object	no	yes
_key	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
_value	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
_value	no	yes
instanceof	no	no
LazyStruct	no	no
)	no	no
{	no	no
lazyMap	no	yes
.	no	no
getMap	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
_key	no	yes
,	no	no
deserializeStruct	no	yes
(	no	no
_value	no	yes
,	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
.	no	no
getFieldName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
return	no	no
lazyMap	no	yes
;	no	no

throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
fieldName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
Schema	no	yes
ws	yes	yes
=	no	no
null	no	no
;	no	no
Schema	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
int	no	no
offset	no	yes
=	no	no
0	no	no
;	no	no
AvroGenericRecordWritable	no	yes
avroWritable	no	yes
=	no	no
new	no	no
AvroGenericRecordWritable	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
readerSchema	no	no
==	no	no
null	no	no
)	no	no
{	no	no
offset	no	yes
=	no	no
schemaRetriever	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
data	no	yes
.	no	no
length	no	yes
<	no	no
offset	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
data	no	yes
.	no	no
length	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
rs	no	yes
=	no	no
schemaRetriever	no	yes
.	no	no
retrieveReaderSchema	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
fieldName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
ws	yes	yes
=	no	no
schemaRetriever	no	yes
.	no	no
retrieveWriterSchema	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ws	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
fieldName	no	yes
+	no	no
)	no	no
;	no	no

}	no	no
Schema	no	yes
ws	no	yes
=	no	no
null	no	no
;	no	no
Schema	no	yes
rs	yes	yes
=	no	no
null	no	no
;	no	no
int	no	no
offset	no	yes
=	no	no
0	no	no
;	no	no
AvroGenericRecordWritable	no	yes
avroWritable	no	yes
=	no	no
new	no	no
AvroGenericRecordWritable	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
readerSchema	no	no
==	no	no
null	no	no
)	no	no
{	no	no
offset	no	yes
=	no	no
schemaRetriever	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
data	no	yes
.	no	no
length	no	yes
<	no	no
offset	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
offset	no	yes
+	no	no
+	no	no
data	no	yes
.	no	no
length	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
rs	yes	yes
=	no	no
schemaRetriever	no	yes
.	no	no
retrieveReaderSchema	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rs	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
fieldName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
ws	no	yes
=	no	no
schemaRetriever	no	yes
.	no	no
retrieveWriterSchema	no	yes
(	no	no
data	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ws	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
fieldName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

columnNames	no	yes
=	no	no
null	no	no
;	no	no
columnTypes	no	yes
=	no	no
null	no	no
;	no	no
final	no	no
String	no	yes
columnNameProperty	no	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnTypeProperty	no	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
columnCommentProperty	no	yes
=	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
LIST_COLUMN_COMMENTS	no	yes
,	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
properties	no	yes
.	no	no
containsKey	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
?	no	no
properties	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
:	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
;	no	no
boolean	no	no
gotColTypesFromColProps	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
hasExternalSchema	no	no
(	no	no
properties	no	yes
)	no	no
||	no	no
columnNameProperty	no	yes
==	no	no
null	no	no
||	no	no
columnNameProperty	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
columnTypeProperty	no	yes
==	no	no
null	no	no
||	no	no
columnTypeProperty	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
schema	yes	yes
=	no	no
determineSchemaOrReturnErrorSchema	no	yes
(	no	no
configuration	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no
gotColTypesFromColProps	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnNames	no	yes
=	no	no
StringInternUtils	no	yes
.	no	no
internStringsInList	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
columnTypes	no	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	no	yes
)	no	no
;	no	no
schema	yes	yes
=	no	no
getSchemaFromCols	no	yes
(	no	no
properties	no	yes
,	no	no
columnNames	no	yes
,	no	no
columnTypes	no	yes
,	no	no
columnCommentProperty	no	yes
)	no	no
;	no	no
}	no	no
properties	no	yes
.	no	no
setProperty	no	yes
(	no	no
AvroSerdeUtils	no	yes
.	no	no
AvroTableProperties	no	yes
.	no	no
SCHEMA_LITERAL	no	yes
.	no	no
getPropName	no	yes
(	no	no
)	no	no
,	no	no
schema	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

public	no	no
String	no	no
write	no	no
(	no	no
final	no	no
Object	no	no
o	no	yes
,	no	no
final	no	no
ObjectInspector	no	no
objInspector	no	yes
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
final	no	no
JsonNode	no	yes
rootNode	yes	yes
=	no	no
walkObjectGraph	no	yes
(	no	no
objInspector	no	yes
,	no	no
o	no	yes
,	no	no
rootStructFieldNames	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
logExceptionMessage	no	no
(	no	no
ByteArrayRef	no	no
bytes	no	yes
,	no	no
int	no	no
start	no	yes
,	no	no
int	no	no
length	no	yes
,	no	no
String	no	yes
dataType	yes	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
byteData	yes	yes
=	no	no
Text	no	yes
.	no	no
decode	no	yes
(	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
,	no	no
start	no	yes
,	no	no
length	no	yes
)	no	no
;	no	no

fieldId	yes	yes
++	no	no
;	no	no
if	no	no
(	no	no
fieldId	yes	yes
==	no	no
fields	yes	no
.	no	no
length	no	no
||	no	no
fieldByteEnd	no	yes
==	no	no
structByteEnd	no	no
)	no	no
{	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
fieldId	yes	yes
;	no	no
i	no	yes
<=	no	no
fields	yes	no
.	no	no
length	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
startPosition	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
fieldByteEnd	no	yes
+	no	no
1	no	no
;	no	no
}	no	no
break	no	no
;	no	no
}	no	no
fieldByteBegin	no	yes
=	no	no
fieldByteEnd	no	yes
+	no	no
1	no	no
;	no	no
fieldByteEnd	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
isEscaped	no	no
&&	no	no
bytes	no	no
[	no	no
fieldByteEnd	no	yes
]	no	no
==	no	no
escapeChar	no	no
&&	no	no
fieldByteEnd	no	yes
+	no	no
1	no	no
<	no	no
structByteEnd	no	no
)	no	no
{	no	no
fieldByteEnd	no	yes
+=	no	no
2	no	no
;	no	no
}	no	no
else	no	no
{	no	no
fieldByteEnd	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
extraFieldWarned	no	yes
&&	no	no
fieldByteEnd	no	yes
<	no	no
structByteEnd	no	no
)	no	no
{	no	no
extraFieldWarned	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no

public	no	no
void	no	no
logExceptionMessage	no	no
(	no	no
byte	no	no
[	no	no
]	no	no
bytes	no	yes
,	no	no
int	no	no
bytesStart	no	yes
,	no	no
int	no	no
bytesLength	no	yes
,	no	no
String	no	yes
dataType	yes	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
byteData	yes	yes
=	no	no
Text	no	yes
.	no	no
decode	no	yes
(	no	no
bytes	no	yes
,	no	no
bytesStart	no	yes
,	no	no
bytesLength	no	yes
)	no	no
;	no	no

String	no	yes
columnNameProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMNS	no	yes
)	no	no
;	no	no
String	no	yes
columnNameDelimiter	no	yes
=	no	no
tbl	no	yes
.	no	no
containsKey	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
?	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
COLUMN_NAME_DELIMITER	no	yes
)	no	no
:	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
SerDeUtils	no	yes
.	no	no
COMMA	no	yes
)	no	no
;	no	no
String	no	yes
columnTypeProperty	no	yes
=	no	no
tbl	no	yes
.	no	no
getProperty	no	yes
(	no	no
serdeConstants	no	yes
.	no	no
LIST_COLUMN_TYPES	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
columnNameProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnNames	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnNames	yes	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
columnNameProperty	no	yes
.	no	no
split	no	yes
(	no	no
columnNameDelimiter	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
columnTypeProperty	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
columnTypes	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
columnTypes	yes	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getTypeInfosFromTypeString	no	yes
(	no	no
columnTypeProperty	no	yes
)	no	no
;	no	no
}	no	no
assert	no	yes
(	no	no
columnNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
columnTypes	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rowTypeInfo	no	yes
=	no	no
TypeInfoFactory	no	yes
.	no	no
getStructTypeInfo	no	yes
(	no	no
columnNames	yes	yes
,	no	no
columnTypes	yes	yes
)	no	no
;	no	no
cachedObjectInspector	no	yes
=	no	no
LazyBinaryUtils	no	yes
.	no	no
getLazyBinaryObjectInspectorFromTypeInfo	no	yes
(	no	no
rowTypeInfo	no	yes
)	no	no
;	no	no
cachedLazyBinaryStruct	no	yes
=	no	no
(	no	no
LazyBinaryStruct	no	yes
)	no	no
LazyBinaryFactory	no	yes
.	no	no
createLazyBinaryObject	no	yes
(	no	no
cachedObjectInspector	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
parse	no	no
(	no	no
)	no	no
{	no	no
LazyBinaryUnionObjectInspector	no	yes
uoi	no	yes
=	no	no
(	no	no
LazyBinaryUnionObjectInspector	no	yes
)	no	no
oi	no	yes
;	no	no
int	no	no
unionByteEnd	no	yes
=	no	no
start	no	yes
+	no	no
length	no	yes
;	no	no
byte	no	no
[	no	no
]	no	no
byteArr	no	yes
=	no	no
this	no	no
.	no	no
bytes	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
tagEnd	no	yes
=	no	no
start	no	yes
+	no	no
1	no	no
;	no	no
tag	no	yes
=	no	no
byteArr	no	yes
[	no	no
start	no	yes
]	no	no
;	no	no
field	yes	yes
=	no	no
LazyBinaryFactory	no	yes
.	no	no
createLazyBinaryObject	no	yes
(	no	no
uoi	no	yes
.	no	no
getObjectInspectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
)	no	no
;	no	no
LazyBinaryUtils	no	yes
.	no	no
checkObjectByteInfo	no	yes
(	no	no
uoi	no	yes
.	no	no
getObjectInspectors	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
tag	no	yes
)	no	no
,	no	no
byteArr	no	yes
,	no	no
tagEnd	no	yes
,	no	no
recordInfo	no	yes
,	no	no
vInt	no	yes
)	no	no
;	no	no
fieldStart	no	yes
=	no	no
tagEnd	no	yes
+	no	no
recordInfo	no	yes
.	no	no
elementOffset	no	yes
;	no	no
fieldLength	no	yes
=	no	no
recordInfo	no	yes
.	no	no
elementSize	no	yes
;	no	no
if	no	no
(	no	no
!	no	no
extraFieldWarned	no	yes
&&	no	no
(	no	no
fieldStart	no	yes
+	no	no
fieldLength	no	yes
)	no	no
<	no	no
unionByteEnd	no	yes
)	no	no
{	no	no
extraFieldWarned	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
missingFieldWarned	no	yes
&&	no	no
(	no	no
fieldStart	no	yes
+	no	no
fieldLength	no	yes
)	no	no
>	no	no
unionByteEnd	no	yes
)	no	no
{	no	no
missingFieldWarned	no	yes
=	no	no
true	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
initialize	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
Properties	no	no
tbl	no	no
)	no	no
throws	no	no
SerDeException	no	no
{	no	no
MAX_BUFFERED_ROWS	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_RESULTSET_DEFAULT_FETCH_SIZE	no	yes
)	no	no
;	no	no

typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
STRING	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
CHAR	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
VARCHAR	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
BINARY	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
BYTE	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
SHORT	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
INT	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
LONG	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
FLOAT	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
DOUBLE	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
BOOLEAN	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
DECIMAL	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
DATE	no	yes
)	no	no
;	no	no
typeInfos	no	yes
.	no	no
add	no	yes
(	no	no
VOID	no	yes
)	no	no
;	no	no
structTypeInfo	yes	yes
.	no	no
setAllStructFieldTypeInfos	no	yes
(	no	no
typeInfos	no	yes
)	no	no
;	no	no

File	no	yes
dir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
JDBC_JAR_DIR	no	yes
)	no	no
;	no	no
FileFilter	no	yes
fileFilter	no	yes
=	no	no
new	no	no
WildcardFileFilter	no	yes
(	no	no
JDBC_JAR_PATTERN	no	yes
)	no	no
;	no	no
File	no	yes
[	no	no
]	no	no
files	no	yes
=	no	no
dir	no	yes
.	no	no
listFiles	no	yes
(	no	no
fileFilter	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
files	no	yes
==	no	no
null	no	no
||	no	no
files	no	yes
.	no	no
length	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
handleError	no	yes
(	no	no
files	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
sendError	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_NOT_FOUND	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
File	no	yes
file	no	yes
=	no	no
files	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
file	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
(	no	no
FileInputStream	no	no
in	no	no
=	no	no
new	no	no
FileInputStream	no	no
(	no	no
file	no	yes
)	no	no
;	no	no
OutputStream	no	no
out	no	yes
=	no	no
response	no	yes
.	no	no
getOutputStream	no	no
(	no	no
)	no	no
)	no	no
{	no	no
byte	no	no
[	no	no
]	no	no
buffer	no	yes
=	no	no
new	no	no
byte	no	no
[	no	no
4096	no	no
]	no	no
;	no	no
int	no	no
length	no	yes
;	no	no
while	no	no
(	no	no
(	no	no
length	no	yes
=	no	no
in	no	no
.	no	no
read	no	no
(	no	no
buffer	no	yes
)	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
out	no	yes
.	no	no
write	no	yes
(	no	no
buffer	no	yes
,	no	no
0	no	no
,	no	no
length	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

String	no	yes
clusterName	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConfFromContext	no	yes
(	no	no
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
LLAP_DAEMON_SERVICE_HOSTS	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
response	no	yes
.	no	no
setContentType	no	yes
(	no	no
HttpConstants	no	yes
.	no	no
CONTENT_TYPE_JSON	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setHeader	no	yes
(	no	no
HttpConstants	no	yes
.	no	no
ACCESS_CONTROL_ALLOW_METHODS	no	yes
,	no	no
HttpConstants	no	yes
.	no	no
METHOD_GET	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setHeader	no	yes
(	no	no
HttpConstants	no	yes
.	no	no
ACCESS_CONTROL_ALLOW_ORIGIN	no	yes
,	no	no
HttpConstants	no	yes
.	no	no
WILDCARD	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setHeader	no	yes
(	no	no
HttpConstants	no	yes
.	no	no
CACHE_CONTROL	no	yes
,	no	no
)	no	no
;	no	no
writer	no	yes
=	no	no
response	no	yes
.	no	no
getWriter	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
clusterName	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
clusterName	yes	yes
=	no	no
clusterName	yes	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
clusterName	yes	yes
==	no	no
null	no	no
||	no	no
clusterName	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writer	no	yes
.	no	no
print	no	yes
(	no	no
)	no	no
;	no	no
writer	no	yes
.	no	no
print	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
clusterName	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
clusterName	yes	yes
=	no	no
clusterName	yes	yes
.	no	no
substring	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

public	no	no
static	no	no
String	no	yes
getUserNameFromCookieToken	no	no
(	no	no
String	no	yes
tokenStr	yes	yes
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
map	no	yes
=	no	no
splitCookieToken	no	yes
(	no	no
tokenStr	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
map	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
COOKIE_ATTRIBUTES	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
splitCookieToken	no	no
(	no	no
String	no	yes
tokenStr	yes	yes
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
map	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
StringTokenizer	no	yes
st	no	yes
=	no	no
new	no	no
StringTokenizer	no	yes
(	no	no
tokenStr	yes	yes
,	no	no
COOKIE_ATTR_SEPARATOR	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
st	no	yes
.	no	no
hasMoreTokens	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
part	no	yes
=	no	no
st	no	yes
.	no	no
nextToken	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
separator	no	yes
=	no	no
part	no	yes
.	no	no
indexOf	no	yes
(	no	no
COOKIE_KEY_VALUE_SEPARATOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
separator	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no

private	no	no
SearchResultHandler	no	no
execute	no	no
(	no	no
Collection	no	no
<	no	no
String	no	no
>	no	no
baseDns	yes	no
,	no	no
Query	no	no
query	yes	no
)	no	no
{	no	no
List	no	yes
<	no	no
NamingEnumeration	no	yes
<	no	no
SearchResult	no	yes
>>	no	no
searchResults	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
DirContext	no	no
createDirContext	no	no
(	no	no
HiveConf	no	yes
conf	no	yes
,	no	no
String	no	yes
principal	yes	yes
,	no	no
String	no	yes
password	no	yes
)	no	no
throws	no	no
NamingException	no	no
{	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
env	no	yes
=	no	no
new	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
ldapUrl	yes	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_PLAIN_LDAP_URL	no	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
INITIAL_CONTEXT_FACTORY	no	yes
,	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
PROVIDER_URL	no	yes
,	no	no
ldapUrl	yes	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_AUTHENTICATION	no	yes
,	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_CREDENTIALS	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_PRINCIPAL	no	yes
,	no	no
principal	yes	yes
)	no	no
;	no	no

setHiveConf	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
sessionManager	no	yes
=	no	no
new	no	no
SessionManager	no	yes
(	no	no
hiveServer2	no	yes
,	no	no
allowSessionsInitial	no	yes
)	no	no
;	no	no
defaultFetchRows	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_RESULTSET_DEFAULT_FETCH_SIZE	no	yes
)	no	no
;	no	no
addService	no	yes
(	no	no
sessionManager	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
UserGroupInformation	no	no
.	no	no
isSecurityEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
HiveAuthFactory	no	yes
.	no	no
loginFromKeytab	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
serviceUGI	no	yes
=	no	no
Utils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
LoginException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
principal	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SPNEGO_PRINCIPAL	no	yes
)	no	no
;	no	no
String	no	yes
keyTabFile	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SPNEGO_KEYTAB	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
principal	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
keyTabFile	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Deprecated	no	no
public	no	no
SessionHandle	no	yes
openSession	no	yes
(	no	no
TProtocolVersion	no	no
protocol	no	yes
,	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
protocol	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
null	no	no
,	no	no
configuration	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no

@	no	no
Deprecated	no	no
public	no	no
SessionHandle	no	yes
openSessionWithImpersonation	no	no
(	no	no
TProtocolVersion	no	no
protocol	no	yes
,	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
,	no	no
String	no	no
delegationToken	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
protocol	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
null	no	no
,	no	no
configuration	no	yes
,	no	no
true	no	no
,	no	no
delegationToken	no	yes
)	no	no
;	no	no

public	no	no
SessionHandle	no	yes
openSession	no	yes
(	no	no
TProtocolVersion	no	no
protocol	no	yes
,	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
String	no	no
ipAddress	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
protocol	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
ipAddress	no	yes
,	no	no
configuration	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no

public	no	no
SessionHandle	no	yes
openSessionWithImpersonation	no	no
(	no	no
TProtocolVersion	no	no
protocol	no	yes
,	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
String	no	no
ipAddress	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
,	no	no
String	no	no
delegationToken	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
protocol	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
ipAddress	no	yes
,	no	no
configuration	no	yes
,	no	no
true	no	no
,	no	no
delegationToken	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
SessionHandle	no	yes
openSession	no	yes
(	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
SERVER_VERSION	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
null	no	no
,	no	no
configuration	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no

public	no	no
void	no	no
createSessionWithSessionHandle	no	no
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
createSession	no	yes
(	no	no
sessionHandle	yes	yes
,	no	no
SERVER_VERSION	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
null	no	no
,	no	no
configuration	no	yes
,	no	no
false	no	no
,	no	no
null	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
SessionHandle	no	yes
openSessionWithImpersonation	no	no
(	no	no
String	no	no
username	no	yes
,	no	no
String	no	no
password	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
configuration	no	yes
,	no	no
String	no	no
delegationToken	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
sessionManager	no	yes
.	no	no
openSession	no	yes
(	no	no
SERVER_VERSION	no	yes
,	no	no
username	no	yes
,	no	no
password	no	yes
,	no	no
null	no	no
,	no	no
configuration	no	yes
,	no	no
true	no	no
,	no	no
delegationToken	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
closeSession	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
closeSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
GetInfoValue	no	yes
getInfo	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
GetInfoType	no	no
getInfoType	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
GetInfoValue	no	yes
infoValue	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getInfo	no	yes
(	no	no
getInfoType	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
executeStatement	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
statement	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
confOverlay	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
HiveSession	no	yes
session	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getSessionState	no	yes
(	no	no
)	no	no
.	no	no
updateProgressMonitor	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
session	no	yes
.	no	no
executeStatement	no	yes
(	no	no
statement	no	yes
,	no	no
confOverlay	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
executeStatement	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
statement	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
confOverlay	no	yes
,	no	no
long	no	no
queryTimeout	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
HiveSession	no	yes
session	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getSessionState	no	yes
(	no	no
)	no	no
.	no	no
updateProgressMonitor	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
session	no	yes
.	no	no
executeStatement	no	yes
(	no	no
statement	no	yes
,	no	no
confOverlay	no	yes
,	no	no
queryTimeout	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
executeStatementAsync	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
statement	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
confOverlay	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
HiveSession	no	yes
session	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getSessionState	no	yes
(	no	no
)	no	no
.	no	no
updateProgressMonitor	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
session	no	yes
.	no	no
executeStatementAsync	no	yes
(	no	no
statement	no	yes
,	no	no
confOverlay	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
executeStatementAsync	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
statement	no	yes
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
confOverlay	no	yes
,	no	no
long	no	no
queryTimeout	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
HiveSession	no	yes
session	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
;	no	no
session	no	yes
.	no	no
getSessionState	no	yes
(	no	no
)	no	no
.	no	no
updateProgressMonitor	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
session	no	yes
.	no	no
executeStatementAsync	no	yes
(	no	no
statement	no	yes
,	no	no
confOverlay	no	yes
,	no	no
queryTimeout	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getTypeInfo	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getTypeInfo	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getCatalogs	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getCatalogs	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getSchemas	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
catalogName	no	yes
,	no	no
String	no	no
schemaName	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getSchemas	no	yes
(	no	no
catalogName	no	yes
,	no	no
schemaName	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getTables	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
catalogName	no	yes
,	no	no
String	no	no
schemaName	no	yes
,	no	no
String	no	no
tableName	no	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
tableTypes	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getTables	no	yes
(	no	no
catalogName	no	yes
,	no	no
schemaName	no	yes
,	no	no
tableName	no	yes
,	no	no
tableTypes	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getTableTypes	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getTableTypes	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getColumns	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
catalogName	no	yes
,	no	no
String	no	no
schemaName	no	yes
,	no	no
String	no	no
tableName	no	yes
,	no	no
String	no	no
columnName	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getColumns	no	yes
(	no	no
catalogName	no	yes
,	no	no
schemaName	no	yes
,	no	no
tableName	no	yes
,	no	no
columnName	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getFunctions	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
catalogName	no	yes
,	no	no
String	no	no
schemaName	no	yes
,	no	no
String	no	no
functionName	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getFunctions	no	yes
(	no	no
catalogName	no	yes
,	no	no
schemaName	no	yes
,	no	no
functionName	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getPrimaryKeys	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
catalog	no	yes
,	no	no
String	no	no
schema	no	yes
,	no	no
String	no	no
table	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getPrimaryKeys	no	yes
(	no	no
catalog	no	yes
,	no	no
schema	no	yes
,	no	no
table	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
OperationHandle	no	yes
getCrossReference	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
String	no	no
primaryCatalog	no	yes
,	no	no
String	no	no
primarySchema	no	yes
,	no	no
String	no	no
primaryTable	no	yes
,	no	no
String	no	no
foreignCatalog	no	yes
,	no	no
String	no	no
foreignSchema	no	yes
,	no	no
String	no	no
foreignTable	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
OperationHandle	no	yes
opHandle	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getCrossReference	no	yes
(	no	no
primaryCatalog	no	yes
,	no	no
primarySchema	no	yes
,	no	no
primaryTable	no	yes
,	no	no
foreignCatalog	no	yes
,	no	no
foreignSchema	no	yes
,	no	no
foreignTable	no	yes
)	no	no
;	no	no

HiveConf	no	yes
conf	no	yes
=	no	no
operation	no	yes
.	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
getHiveConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
operation	no	yes
.	no	no
shouldRunAsync	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
maxTimeout	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_LONG_POLLING_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
final	no	no
long	no	no
elapsed	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
operation	no	yes
.	no	no
getBeginTime	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
long	no	no
timeout	no	yes
=	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
maxTimeout	no	yes
,	no	no
(	no	no
elapsed	no	yes
/	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
toMillis	no	yes
(	no	no
10	no	no
)	no	no
+	no	no
1	no	no
)	no	no
*	no	no
500	no	no
)	no	no
;	no	no
try	no	no
{	no	no
operation	no	yes
.	no	no
getBackgroundHandle	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
timeout	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TimeoutException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
opHandle	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
CancellationException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
opHandle	yes	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ExecutionException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
opHandle	yes	yes
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
OperationStatus	no	yes
opStatus	no	yes
=	no	no
operation	no	yes
.	no	no
getStatus	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
cancelOperation	no	yes
(	no	no
OperationHandle	no	no
opHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
.	no	no
getOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
.	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
cancelOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
closeOperation	no	yes
(	no	no
OperationHandle	no	no
opHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
.	no	no
getOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
.	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
closeOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
TableSchema	no	yes
getResultSetMetadata	no	yes
(	no	no
OperationHandle	no	no
opHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
TableSchema	no	yes
tableSchema	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
.	no	no
getOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
.	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
getResultSetMetadata	no	yes
(	no	no
opHandle	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
RowSet	no	yes
fetchResults	no	yes
(	no	no
OperationHandle	no	no
opHandle	yes	yes
,	no	no
FetchOrientation	no	no
orientation	no	yes
,	no	no
long	no	no
maxRows	no	yes
,	no	no
FetchType	no	no
fetchType	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
RowSet	no	yes
rowSet	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
.	no	no
getOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
.	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
fetchResults	no	yes
(	no	no
opHandle	yes	yes
,	no	no
orientation	no	yes
,	no	no
maxRows	no	yes
,	no	no
fetchType	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
String	no	yes
getDelegationToken	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
HiveAuthFactory	no	no
authFactory	no	yes
,	no	no
String	no	yes
owner	yes	yes
,	no	no
String	no	yes
renewer	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
String	no	yes
delegationToken	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
getDelegationToken	no	yes
(	no	no
authFactory	no	yes
,	no	no
owner	yes	yes
,	no	no
renewer	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
cancelDelegationToken	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
HiveAuthFactory	no	no
authFactory	no	yes
,	no	no
String	no	no
tokenStr	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
cancelDelegationToken	no	yes
(	no	no
authFactory	no	yes
,	no	no
tokenStr	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
renewDelegationToken	no	yes
(	no	no
SessionHandle	no	no
sessionHandle	yes	yes
,	no	no
HiveAuthFactory	no	no
authFactory	no	yes
,	no	no
String	no	no
tokenStr	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
sessionManager	no	yes
.	no	no
getSession	no	yes
(	no	no
sessionHandle	yes	yes
)	no	no
.	no	no
renewDelegationToken	no	yes
(	no	no
authFactory	no	yes
,	no	no
tokenStr	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
String	no	yes
getQueryId	no	yes
(	no	no
TOperationHandle	no	no
opHandle	yes	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
Operation	no	yes
operation	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
.	no	no
getOperation	no	yes
(	no	no
new	no	no
OperationHandle	no	yes
(	no	no
opHandle	yes	yes
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
queryId	yes	yes
=	no	no
operation	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
int	no	no
maxBatchSize	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
METASTORE_BATCH_RETRIEVE_MAX	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
dbTabs	no	yes
:	no	no
db2Tabs	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
dbName	no	yes
=	no	no
dbTabs	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tableNames	no	yes
=	no	no
dbTabs	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Table	no	no
table	no	yes
:	no	no
new	no	no
TableIterable	no	no
(	no	no
metastoreClient	no	yes
,	no	no
dbName	no	yes
,	no	no
tableNames	no	yes
,	no	no
maxBatchSize	no	yes
)	no	no
)	no	no
{	no	no
TableSchema	no	yes
schema	no	yes
=	no	no
new	no	no
TableSchema	no	yes
(	no	no
metastoreClient	no	yes
.	no	no
getSchema	no	yes
(	no	no
dbName	no	yes
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
SQLPrimaryKey	no	yes
>	no	no
primaryKeys	no	yes
=	no	no
metastoreClient	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
new	no	no
PrimaryKeysRequest	no	yes
(	no	no
dbName	no	yes
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
pkColNames	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
SQLPrimaryKey	no	yes
key	no	yes
:	no	no
primaryKeys	no	yes
)	no	no
{	no	no
pkColNames	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
.	no	no
getColumn_name	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ColumnDescriptor	no	no
column	no	yes
:	no	no
schema	no	yes
.	no	no
getColumnDescriptors	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
columnPattern	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
columnPattern	no	no
.	no	no
matcher	no	no
(	no	no
column	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
matches	no	no
(	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Object	no	yes
[	no	no
]	no	no
rowData	yes	yes
=	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
null	no	no
,	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
column	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
column	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
.	no	no
toJavaSQLType	no	yes
(	no	no
)	no	no
,	no	no
column	no	yes
.	no	no
getTypeName	no	yes
(	no	no
)	no	no
,	no	no
column	no	yes
.	no	no
getTypeDescriptor	no	yes
(	no	no
)	no	no
.	no	no
getColumnSize	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
column	no	yes
.	no	no
getTypeDescriptor	no	yes
(	no	no
)	no	no
.	no	no
getDecimalDigits	no	yes
(	no	no
)	no	no
,	no	no
column	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
.	no	no
getNumPrecRadix	no	yes
(	no	no
)	no	no
,	no	no
pkColNames	no	yes
.	no	no
contains	no	yes
(	no	no
column	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
DatabaseMetaData	no	yes
.	no	no
columnNoNulls	no	yes
:	no	no
DatabaseMetaData	no	yes
.	no	no
columnNullable	no	yes
,	no	no
column	no	yes
.	no	no
getComment	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
column	no	yes
.	no	no
getOrdinalPosition	no	yes
(	no	no
)	no	no
,	no	no
pkColNames	no	yes
.	no	no
contains	no	yes
(	no	no
column	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
:	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
}	no	no
;	no	no
rowSet	no	yes
.	no	no
addRow	no	yes
(	no	no
rowData	yes	yes
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
TException	no	no
e	no	yes
)	no	no
{	no	no
setState	no	yes
(	no	no
OperationState	no	yes
.	no	no
ERROR	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
privObjs	no	yes
=	no	no
HivePrivilegeObjectUtils	no	yes
.	no	no
getHivePrivDbObjects	no	yes
(	no	no
matchingDbs	no	yes
)	no	no
;	no	no
String	no	yes
cmdStr	no	yes
=	no	no
+	no	no
catalogName	no	yes
+	no	no
+	no	no
schemaName	no	yes
;	no	no
authorizeMetaGets	no	yes
(	no	no
HiveOperationType	no	yes
.	no	no
GET_FUNCTIONS	no	yes
,	no	no
privObjs	no	yes
,	no	no
cmdStr	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
(	no	no
null	no	no
==	no	no
catalogName	no	yes
||	no	no
.	no	no
equals	no	no
(	no	no
catalogName	no	yes
)	no	no
)	no	no
&&	no	no
(	no	no
null	no	no
==	no	no
schemaName	no	yes
||	no	no
.	no	no
equals	no	no
(	no	no
schemaName	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
functionNames	no	yes
=	no	no
FunctionRegistry	no	yes
.	no	no
getFunctionNames	no	yes
(	no	no
CLIServiceUtils	no	yes
.	no	no
patternToRegex	no	yes
(	no	no
functionName	no	yes
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
functionName	no	yes
:	no	no
functionNames	no	yes
)	no	no
{	no	no
FunctionInfo	no	yes
functionInfo	no	yes
=	no	no
FunctionRegistry	no	yes
.	no	no
getFunctionInfo	no	yes
(	no	no
functionName	no	yes
)	no	no
;	no	no
Object	no	yes
rowData	yes	yes
[	no	no
]	no	no
=	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
null	no	no
,	no	no
null	no	no
,	no	no
functionInfo	no	yes
.	no	no
getDisplayName	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
(	no	no
functionInfo	no	yes
.	no	no
isGenericUDTF	no	yes
(	no	no
)	no	no
?	no	no
DatabaseMetaData	no	yes
.	no	no
functionReturnsTable	no	yes
:	no	no
DatabaseMetaData	no	yes
.	no	no
functionNoTable	no	yes
)	no	no
,	no	no
functionInfo	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
}	no	no
;	no	no
rowSet	no	yes
.	no	no
addRow	no	yes
(	no	no
rowData	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
debugMessage	yes	yes
=	no	no
getDebugMessage	no	yes
(	no	no
,	no	no
RESULT_SET_SCHEMA	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
IMetaStoreClient	no	yes
metastoreClient	no	yes
=	no	no
getParentSession	no	yes
(	no	no
)	no	no
.	no	no
getMetaStoreClient	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
schemaPattern	no	yes
=	no	no
convertSchemaPattern	no	yes
(	no	no
schemaName	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
matchingDbs	no	yes
=	no	no
metastoreClient	no	yes
.	no	no
getDatabases	no	yes
(	no	no
schemaPattern	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isAuthV2Enabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
HivePrivilegeObject	no	yes
>	no	no
privObjs	no	yes
=	no	no
HivePrivilegeObjectUtils	no	yes
.	no	no
getHivePrivDbObjects	no	yes
(	no	no
matchingDbs	no	yes
)	no	no
;	no	no
String	no	yes
cmdStr	no	yes
=	no	no
+	no	no
catalogName	no	yes
+	no	no
+	no	no
schemaName	no	yes
;	no	no
authorizeMetaGets	no	yes
(	no	no
HiveOperationType	no	yes
.	no	no
GET_TABLES	no	yes
,	no	no
privObjs	no	yes
,	no	no
cmdStr	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
tablePattern	no	yes
=	no	no
convertIdentifierPattern	no	yes
(	no	no
tableName	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
dbName	no	no
:	no	no
metastoreClient	no	yes
.	no	no
getDatabases	no	yes
(	no	no
schemaPattern	no	yes
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
TableMeta	no	no
tableMeta	yes	yes
:	no	no
metastoreClient	no	yes
.	no	no
getTableMeta	no	no
(	no	no
dbName	no	no
,	no	no
tablePattern	no	yes
,	no	no
tableTypeList	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
tableType	yes	yes
=	no	no
tableTypeMapping	no	yes
.	no	no
mapToClientType	no	yes
(	no	no
tableMeta	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
rowSet	no	yes
.	no	no
addRow	no	yes
(	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
DEFAULT_HIVE_CATALOG	yes	yes
,	no	no
tableMeta	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tableMeta	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
tableType	yes	yes
,	no	no
tableMeta	yes	yes
.	no	no
getComments	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
null	no	no
}	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
debugMessage	yes	yes
=	no	no
getDebugMessage	no	yes
(	no	no
,	no	no
RESULT_SET_SCHEMA	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
setupSessionIO	no	no
(	no	no
SessionState	no	no
sessionState	yes	no
)	no	no
{	no	no
try	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
runInternal	no	no
(	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
setState	no	yes
(	no	no
OperationState	no	yes
.	no	no
RUNNING	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
command	no	yes
=	no	no
getStatement	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
tokens	no	yes
=	no	no
statement	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
commandArgs	no	yes
=	no	no
command	no	yes
.	no	no
substring	no	yes
(	no	no
tokens	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
CommandProcessorResponse	no	yes
response	yes	yes
=	no	no
commandProcessor	no	yes
.	no	no
run	no	yes
(	no	no
commandArgs	no	yes
)	no	no
;	no	no
Schema	no	yes
schema	no	yes
=	no	no
response	yes	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
schema	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
setHasResultSet	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
resultSchema	no	yes
=	no	no
new	no	no
TableSchema	no	yes
(	no	no
schema	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
setHasResultSet	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
resultSchema	no	yes
=	no	no
new	no	no
TableSchema	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
response	yes	yes
.	no	no
getMessage	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

protected	no	no
void	no	no
beforeRun	no	no
(	no	no
)	no	no
{	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
setHadoopQueryContext	no	yes
(	no	no
queryState	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
createOperationLog	no	yes
(	no	no
)	no	no
;	no	no
LogUtils	no	yes
.	no	no
registerLoggingContext	no	yes
(	no	no
queryState	yes	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
void	no	no
addOperation	no	no
(	no	no
Operation	no	no
operation	yes	no
)	no	no
{	no	no

private	no	no
Operation	no	yes
removeTimedOutOperation	no	no
(	no	no
OperationHandle	no	no
operationHandle	no	yes
)	no	no
{	no	no
Operation	no	yes
operation	yes	yes
=	no	no
handleToOperation	no	yes
.	no	no
get	no	yes
(	no	no
operationHandle	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
operation	yes	yes
!=	no	no
null	no	no
&&	no	no
operation	yes	yes
.	no	no
isTimedOut	no	no
(	no	no
System	no	no
.	no	no
currentTimeMillis	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
removeSafeQueryInfo	no	no
(	no	no
OperationHandle	no	no
operationHandle	no	yes
)	no	no
{	no	no
synchronized	no	no
(	no	no
webuiLock	no	no
)	no	no
{	no	no
String	no	yes
opKey	yes	yes
=	no	no
operationHandle	no	yes
.	no	no
getHandleIdentifier	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
QueryInfo	no	yes
display	no	yes
=	no	no
liveQueryInfos	no	yes
.	no	no
remove	no	yes
(	no	no
opKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
display	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
cancelOperation	no	no
(	no	no
OperationHandle	no	no
opHandle	yes	yes
,	no	no
String	no	no
errMsg	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
Operation	no	yes
operation	no	yes
=	no	no
getOperation	no	yes
(	no	no
opHandle	yes	yes
)	no	no
;	no	no
OperationState	no	yes
opState	yes	yes
=	no	no
operation	no	yes
.	no	no
getStatus	no	yes
(	no	no
)	no	no
.	no	no
getState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
opState	yes	yes
.	no	no
isTerminal	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
closeOperation	no	no
(	no	no
OperationHandle	no	no
opHandle	yes	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no

private	no	no
void	no	no
prepare	no	no
(	no	no
QueryState	no	no
queryState	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
setState	no	yes
(	no	no
OperationState	no	yes
.	no	no
RUNNING	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
driver	no	yes
=	no	no
DriverFactory	no	yes
.	no	no
newDriver	no	yes
(	no	no
queryState	no	yes
,	no	no
queryInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
queryTimeout	yes	no
>	no	no
0L	no	no
)	no	no
{	no	no
timeoutExecutor	no	yes
=	no	no
Executors	no	yes
.	no	no
newSingleThreadScheduledExecutor	no	yes
(	no	no
)	no	no
;	no	no
timeoutExecutor	no	yes
.	no	no
schedule	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
final	no	no
String	no	yes
queryId	yes	yes
=	no	no
queryState	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
runQuery	no	no
(	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
try	no	no
{	no	no
OperationState	no	yes
opState	yes	yes
=	no	no
getStatus	no	yes
(	no	no
)	no	no
.	no	no
getState	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
opState	yes	yes
.	no	no
isTerminal	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
synchronized	no	no
void	no	no
cleanup	no	no
(	no	no
OperationState	no	no
state	no	yes
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
setState	no	yes
(	no	no
state	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
shouldRunAsync	no	no
(	no	no
)	no	no
&&	no	no
state	no	yes
!=	no	no
OperationState	no	no
.	no	no
CANCELED	no	no
&&	no	no
state	no	yes
!=	no	no
OperationState	no	no
.	no	no
TIMEDOUT	no	no
)	no	no
{	no	no
Future	no	yes
<	no	no
?	no	no
>	no	no
backgroundHandle	no	yes
=	no	no
getBackgroundHandle	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
backgroundHandle	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
backgroundHandle	no	yes
.	no	no
cancel	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
String	no	yes
queryId	yes	yes
=	no	no
queryState	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
success	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
cancel	no	no
(	no	no
OperationState	no	no
stateAfterCancel	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
String	no	yes
queryId	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
stateAfterCancel	no	no
==	no	no
OperationState	no	no
.	no	no
CANCELED	no	no
)	no	no
{	no	no
queryId	yes	yes
=	no	no
queryState	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
;	no	no

FetchTask	no	yes
fetchTask	no	yes
=	no	no
driver	no	yes
.	no	no
getFetchTask	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
isBlobBased	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fetchTask	no	yes
!=	no	no
null	no	no
&&	no	no
fetchTask	no	yes
.	no	no
getWork	no	no
(	no	no
)	no	no
.	no	no
isUsingThriftJDBCBinarySerDe	no	no
(	no	no
)	no	no
)	no	no
{	no	no
maxRows	no	yes
=	no	no
1	no	no
;	no	no
isBlobBased	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
RowSet	no	yes
rowSet	no	yes
=	no	no
RowSetFactory	no	yes
.	no	no
create	no	yes
(	no	no
getResultSetSchema	no	yes
(	no	no
)	no	no
,	no	no
getProtocolVersion	no	yes
(	no	no
)	no	no
,	no	no
isBlobBased	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
orientation	no	no
.	no	no
equals	no	no
(	no	no
FetchOrientation	no	no
.	no	no
FETCH_FIRST	no	no
)	no	no
&&	no	no
fetchStarted	no	yes
)	no	no
{	no	no
driver	no	yes
.	no	no
resetFetch	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
fetchStarted	no	yes
=	no	no
true	no	no
;	no	no
final	no	no
int	no	no
capacity	yes	yes
=	no	no
Math	no	yes
.	no	no
toIntExact	no	yes
(	no	no
maxRows	no	yes
)	no	no
;	no	no
convey	no	yes
.	no	no
ensureCapacity	no	yes
(	no	no
capacity	yes	yes
)	no	no
;	no	no
driver	no	yes
.	no	no
setMaxRows	no	yes
(	no	no
capacity	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
driver	no	yes
.	no	no
getResults	no	no
(	no	no
convey	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
convey	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
capacity	yes	yes
)	no	no
{	no	no

private	no	no
AbstractSerDe	no	no
getSerDe	no	no
(	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
serde	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
this	no	no
.	no	no
serde	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Schema	no	yes
mResultSchema	no	yes
=	no	no
driver	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
FieldSchema	no	yes
>	no	no
fieldSchemas	no	yes
=	no	no
mResultSchema	no	yes
.	no	no
getFieldSchemas	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Properties	no	yes
props	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
fieldSchemas	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
names	yes	yes
=	no	no
fieldSchemas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
i	no	yes
->	no	no
i	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
types	no	yes
=	no	no
fieldSchemas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
i	no	yes
->	no	no
i	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
AbstractSerDe	no	no
getSerDe	no	no
(	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
serde	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
this	no	no
.	no	no
serde	no	yes
=	no	no
new	no	no
LazySimpleSerDe	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Schema	no	yes
mResultSchema	no	yes
=	no	no
driver	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
FieldSchema	no	yes
>	no	no
fieldSchemas	no	yes
=	no	no
mResultSchema	no	yes
.	no	no
getFieldSchemas	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
Properties	no	yes
props	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
fieldSchemas	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
names	no	yes
=	no	no
fieldSchemas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
i	no	yes
->	no	no
i	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
types	yes	yes
=	no	no
fieldSchemas	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
i	no	yes
->	no	no
i	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
log	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
names	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
if	no	no
(	no	no
sessionManager	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sessionState	no	yes
.	no	no
setHiveServer2Host	no	yes
(	no	no
sessionManager	no	yes
.	no	no
getHiveServer2HostName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
KillQueryZookeeperManager	no	yes
killQueryZookeeperManager	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
sessionManager	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
killQueryZookeeperManager	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getKillQueryZookeeperManager	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sessionState	no	yes
.	no	no
setKillQuery	no	yes
(	no	no
new	no	no
KillQueryImpl	no	yes
(	no	no
operationManager	no	yes
,	no	no
killQueryZookeeperManager	no	yes
)	no	no
)	no	no
;	no	no
SessionState	no	yes
.	no	no
start	no	yes
(	no	no
sessionState	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
sessionState	no	yes
.	no	no
loadAuxJars	no	yes
(	no	no
)	no	no
;	no	no
sessionState	no	yes
.	no	no
loadReloadableAuxJars	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	yes	yes
;	no	no

private	no	no
OperationHandle	no	no
executeStatementInternal	no	no
(	no	no
String	no	no
statement	yes	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
confOverlay	no	no
,	no	no
boolean	no	no
runAsync	no	no
,	no	no
long	no	no
queryTimeout	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
acquire	no	yes
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no

private	no	no
void	no	no
cleanupSessionLogDir	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
isOperationLogEnabled	no	no
&&	no	no
sessionConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_TESTING_REMOVE_LOGS	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
FileUtils	no	yes
.	no	no
forceDelete	no	yes
(	no	no
sessionLogDir	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
setApplicationName	no	no
(	no	no
String	no	yes
value	yes	yes
)	no	no
{	no	no
String	no	yes
oldName	yes	yes
=	no	no
sessionState	no	yes
.	no	no
getHiveVariables	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
,	no	no
value	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
oldName	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
oldName	yes	yes
.	no	no
equals	no	no
(	no	no
value	yes	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_LOGGING_OPERATION_ENABLED	no	no
)	no	no
)	no	no
{	no	no
initOperationLogRootDir	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
createBackgroundOperationPool	no	yes
(	no	no
)	no	no
;	no	no
addService	no	yes
(	no	no
operationManager	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SUPPORT_DYNAMIC_SERVICE_DISCOVERY	no	no
)	no	no
&&	no	no
!	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ACTIVE_PASSIVE_HA_ENABLE	no	no
)	no	no
&&	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
ConfVars	no	yes
.	no	no
HIVE_ZOOKEEPER_KILLQUERY_ENABLE	no	no
)	no	no
)	no	no
{	no	no
killQueryZookeeperManager	no	yes
=	no	no
new	no	no
KillQueryZookeeperManager	no	yes
(	no	no
operationManager	no	yes
,	no	no
hiveServer2	no	yes
)	no	no
;	no	no
addService	no	yes
(	no	no
killQueryZookeeperManager	no	yes
)	no	no
;	no	no
}	no	no
initSessionImplClassName	no	yes
(	no	no
)	no	no
;	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
registerOpenSesssionMetrics	no	yes
(	no	no
metrics	no	yes
)	no	no
;	no	no
registerActiveSesssionMetrics	no	yes
(	no	no
metrics	no	yes
)	no	no
;	no	no
}	no	no
userLimit	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER	no	yes
)	no	no
;	no	no
ipAddressLimit	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS	no	yes
)	no	no
;	no	no
userIpAddressLimit	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
createBackgroundOperationPool	no	no
(	no	no
)	no	no
{	no	no
int	no	no
poolSize	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_THREADS	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
createBackgroundOperationPool	no	no
(	no	no
)	no	no
{	no	no
int	no	no
poolSize	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_THREADS	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
poolSize	no	yes
)	no	no
;	no	no
int	no	no
poolQueueSize	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_WAIT_QUEUE_SIZE	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
createBackgroundOperationPool	no	no
(	no	no
)	no	no
{	no	no
int	no	no
poolSize	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_THREADS	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
poolSize	no	yes
)	no	no
;	no	no
int	no	no
poolQueueSize	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_WAIT_QUEUE_SIZE	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
poolQueueSize	no	yes
)	no	no
;	no	no
long	no	no
keepAliveTime	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ASYNC_EXEC_KEEPALIVE_TIME	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
session	yes	yes
=	no	no
null	no	no
;	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isOperationLogEnabled	no	no
)	no	no
{	no	no
session	yes	yes
.	no	no
setOperationLogSessionDir	no	yes
(	no	no
operationLogRootDir	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
executeSessionHooks	no	yes
(	no	no
session	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
session	yes	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
session	yes	yes
=	no	no
null	no	no
;	no	no

public	no	no
static	no	no
void	no	no
setProxyUserName	no	no
(	no	no
String	no	no
userName	yes	no
)	no	no
{	no	no

transport	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
host	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_BIND_HOST	no	yes
)	no	no
;	no	no
int	no	no
port	no	yes
=	no	no
conf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_PORT	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
host	no	yes
+	no	no
+	no	no
port	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
new	no	no
TSocket	no	yes
(	no	no
host	no	yes
,	no	no
port	no	yes
)	no	no
;	no	no
(	no	no
(	no	no
TSocket	no	yes
)	no	no
transport	no	yes
)	no	no
.	no	no
setTimeout	no	yes
(	no	no
(	no	no
int	no	no
)	no	no
conf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SERVER_READ_SOCKET_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
*	no	no
1000	no	no
)	no	no
;	no	no
try	no	no
{	no	no
(	no	no
(	no	no
TSocket	no	yes
)	no	no
transport	no	yes
)	no	no
.	no	no
getSocket	no	yes
(	no	no
)	no	no
.	no	no
setKeepAlive	no	yes
(	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SERVER_TCP_KEEP_ALIVE	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SocketException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SERVER_TCP_KEEP_ALIVE	no	yes
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
String	no	yes
userName	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_CLIENT_USER	no	yes
)	no	no
;	no	no
String	no	yes
passwd	no	yes
=	no	no
conf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_CLIENT_PASSWORD	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
transport	no	yes
=	no	no
PlainSaslHelper	no	yes
.	no	no
getPlainTransport	no	yes
(	no	no
userName	no	yes
,	no	no
passwd	no	yes
,	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SaslException	no	no
e	yes	yes
)	no	no
{	no	no

try	no	no
{	no	no
metrics	no	yes
.	no	no
incrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
OPEN_CONNECTIONS	no	yes
)	no	no
;	no	no
metrics	no	yes
.	no	no
incrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
CUMULATIVE_CONNECTION_COUNT	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
new	no	no
ThriftCLIServerContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
deleteContext	no	no
(	no	no
ServerContext	no	no
serverContext	no	yes
,	no	no
TProtocol	no	no
input	no	no
,	no	no
TProtocol	no	no
output	no	no
)	no	no
{	no	no
Metrics	no	yes
metrics	no	yes
=	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metrics	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
metrics	no	yes
.	no	no
decrementCounter	no	yes
(	no	no
MetricsConstant	no	yes
.	no	no
OPEN_CONNECTIONS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
ThriftCLIServerContext	no	yes
context	no	yes
=	no	no
(	no	no
ThriftCLIServerContext	no	yes
)	no	no
serverContext	no	yes
;	no	no
SessionHandle	no	yes
sessionHandle	yes	yes
=	no	no
context	no	yes
.	no	no
getSessionHandle	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
TOpenSessionResp	no	no
OpenSession	no	no
(	no	no
TOpenSessionReq	no	no
req	yes	no
)	no	no
throws	no	no
TException	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
req	no	yes
.	no	no
getClient_protocol	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TOpenSessionResp	no	yes
resp	no	yes
=	no	no
new	no	no
TOpenSessionResp	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
userName	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
userName	yes	yes
=	no	no
getUserName	no	yes
(	no	no
req	no	yes
)	no	no
;	no	no
final	no	no
SessionHandle	no	yes
sessionHandle	no	yes
=	no	no
getSessionHandle	no	yes
(	no	no
req	no	yes
,	no	no
resp	no	yes
,	no	no
userName	yes	yes
)	no	no
;	no	no
final	no	no
int	no	no
fetchSize	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_RESULTSET_DEFAULT_FETCH_SIZE	no	yes
)	no	no
;	no	no
resp	no	yes
.	no	no
setSessionHandle	no	yes
(	no	no
sessionHandle	no	yes
.	no	no
toTSessionHandle	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
resp	no	yes
.	no	no
setConfiguration	no	yes
(	no	no
Collections	no	yes
.	no	no
singletonMap	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_THRIFT_RESULTSET_DEFAULT_FETCH_SIZE	no	yes
.	no	no
varname	no	yes
,	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
fetchSize	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
resp	no	yes
.	no	no
setStatus	no	yes
(	no	no
OK_STATUS	no	yes
)	no	no
;	no	no
ThriftCLIServerContext	no	yes
context	no	yes
=	no	no
(	no	no
ThriftCLIServerContext	no	yes
)	no	no
currentServerContext	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
context	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
context	no	yes
.	no	no
setSessionHandle	no	yes
(	no	no
sessionHandle	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
userName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

SessionHandle	no	yes
sh	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
e	no	yes
:	no	no
req	no	yes
.	no	no
getConfiguration	no	no
(	no	no
)	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sb	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
sh	no	yes
=	no	no
new	no	no
SessionHandle	no	yes
(	no	no
req	no	yes
.	no	no
getSessionHandle	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
sh	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
e	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
cliService	no	yes
.	no	no
setApplicationName	no	yes
(	no	no
sh	no	yes
,	no	no
e	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
resp	no	yes
=	no	no
new	no	no
TSetClientInfoResp	no	yes
(	no	no
HiveSQLException	no	yes
.	no	no
toTStatus	no	yes
(	no	no
ex	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
sb	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
String	no	yes
getProxyUser	no	no
(	no	no
String	no	yes
realUser	no	no
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
sessionConf	no	no
,	no	no
String	no	yes
ipAddress	no	no
)	no	no
throws	no	no
HiveSQLException	no	no
{	no	no
String	no	yes
proxyUser	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
getTransportMode	no	no
(	no	no
)	no	no
==	no	no
HiveServer2TransportMode	no	no
.	no	no
http	no	no
)	no	no
{	no	no
proxyUser	yes	yes
=	no	no
SessionManager	no	yes
.	no	no
getProxyUserName	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
proxyUser	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
getTransportMode	no	no
(	no	no
)	no	no
==	no	no
HiveServer2TransportMode	no	no
.	no	no
http	no	no
)	no	no
{	no	no
proxyUser	yes	yes
=	no	no
SessionManager	no	yes
.	no	no
getProxyUserName	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUser	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
proxyUser	yes	yes
==	no	no
null	no	no
&&	no	no
sessionConf	no	yes
!=	no	no
null	no	no
&&	no	no
sessionConf	no	yes
.	no	no
containsKey	no	no
(	no	no
HiveAuthConstants	no	yes
.	no	no
HS2_PROXY_USER	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
proxyUserFromThriftBody	no	yes
=	no	no
sessionConf	no	yes
.	no	no
get	no	yes
(	no	no
HiveAuthConstants	no	yes
.	no	no
HS2_PROXY_USER	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
proxyUserFromThriftBody	no	yes
)	no	no
;	no	no
proxyUser	yes	yes
=	no	no
proxyUserFromThriftBody	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
proxyUser	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
realUser	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_SERVER2_ALLOW_USER_SUBSTITUTION	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
HiveAuthConstants	no	yes
.	no	no
AuthTypes	no	no
.	no	no
NONE	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
hiveConf	no	yes
.	no	no
getVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SERVER2_AUTHENTICATION	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
proxyUser	yes	yes
;	no	no
}	no	no
HiveAuthFactory	no	yes
.	no	no
verifyProxyAccess	no	yes
(	no	no
realUser	no	yes
,	no	no
proxyUser	yes	yes
,	no	no
ipAddress	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no

openConnection	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
public	no	no
void	no	no
onClosed	no	no
(	no	no
Connection	no	no
connection	no	yes
)	no	no
{	no	no
closeConnection	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
return	no	no
connection	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
boolean	no	no
useSsl	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_USE_SSL	no	yes
)	no	no
;	no	no
String	no	yes
schemeName	no	yes
=	no	no
useSsl	no	yes
?	no	no
:	no	no
;	no	no
if	no	no
(	no	no
useSsl	no	yes
)	no	no
{	no	no
String	no	yes
keyStorePath	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PATH	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
keyStorePassword	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
getPassword	no	yes
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PASSWORD	no	yes
.	no	no
varname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
keyStorePath	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PATH	no	yes
.	no	no
varname	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
SslContextFactory	no	yes
sslContextFactory	no	yes
=	no	no
new	no	no
SslContextFactory	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
excludedProtocols	yes	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SSL_PROTOCOL_BLACKLIST	no	yes
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
onClosed	no	no
(	no	no
Connection	no	no
connection	no	yes
)	no	no
{	no	no
closeConnection	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
return	no	no
connection	no	yes
;	no	no
}	no	no
}	no	no
;	no	no
boolean	no	no
useSsl	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_USE_SSL	no	yes
)	no	no
;	no	no
String	no	yes
schemeName	no	yes
=	no	no
useSsl	no	yes
?	no	no
:	no	no
;	no	no
if	no	no
(	no	no
useSsl	no	yes
)	no	no
{	no	no
String	no	yes
keyStorePath	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PATH	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
keyStorePassword	no	yes
=	no	no
ShimLoader	no	yes
.	no	no
getHadoopShims	no	yes
(	no	no
)	no	no
.	no	no
getPassword	no	yes
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PASSWORD	no	yes
.	no	no
varname	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
keyStorePath	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_SSL_KEYSTORE_PATH	no	yes
.	no	no
varname	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
SslContextFactory	no	yes
sslContextFactory	yes	yes
=	no	no
new	no	no
SslContextFactory	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
excludedProtocols	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
ConfVars	no	yes
.	no	no
HIVE_SSL_PROTOCOL_BLACKLIST	no	yes
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
excludedProtocols	no	yes
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
hiveConf	no	no
.	no	no
getBoolean	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_SERVER2_XSRF_FILTER_ENABLED	no	no
.	no	no
varname	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
continueProcessing	no	yes
=	no	no
Utils	no	yes
.	no	no
doXsrfFilter	no	yes
(	no	no
request	no	yes
,	no	no
response	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
continueProcessing	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
clientIpAddress	no	yes
=	no	no
request	no	yes
.	no	no
getRemoteAddr	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
clientIpAddress	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isCookieAuthEnabled	no	no
)	no	no
{	no	no
clientUserName	no	yes
=	no	no
validateCookie	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
requireNewCookie	no	yes
=	no	no
(	no	no
clientUserName	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
requireNewCookie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
SessionManager	no	yes
.	no	no
setIpAddress	no	yes
(	no	no
clientIpAddress	no	yes
)	no	no
;	no	no
String	no	yes
forwarded_for	yes	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
X_FORWARDED_FOR	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
forwarded_for	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

clientUserName	no	yes
=	no	no
validateCookie	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
requireNewCookie	no	yes
=	no	no
(	no	no
clientUserName	no	yes
==	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
requireNewCookie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
SessionManager	no	yes
.	no	no
setIpAddress	no	yes
(	no	no
clientIpAddress	yes	yes
)	no	no
;	no	no
String	no	yes
forwarded_for	no	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
X_FORWARDED_FOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
forwarded_for	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
X_FORWARDED_FOR	no	yes
,	no	no
forwarded_for	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
forwardedAddresses	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
forwarded_for	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SessionManager	no	yes
.	no	no
setForwardedAddresses	no	yes
(	no	no
forwardedAddresses	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
SessionManager	no	yes
.	no	no
setForwardedAddresses	no	yes
(	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
clientUserName	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
trustedDomain	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
boolean	no	no
useXff	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN_USE_XFF_HEADER	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
SessionManager	no	yes
.	no	no
setIpAddress	no	yes
(	no	no
clientIpAddress	no	yes
)	no	no
;	no	no
String	no	yes
forwarded_for	no	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
X_FORWARDED_FOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
forwarded_for	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
X_FORWARDED_FOR	no	yes
,	no	no
forwarded_for	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
forwardedAddresses	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
forwarded_for	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
SessionManager	no	yes
.	no	no
setForwardedAddresses	no	yes
(	no	no
forwardedAddresses	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
SessionManager	no	yes
.	no	no
setForwardedAddresses	no	yes
(	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
clientUserName	no	no
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
trustedDomain	yes	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
boolean	no	no
useXff	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN_USE_XFF_HEADER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
useXff	no	yes
&&	no	no
!	no	no
trustedDomain	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
clientIpAddress	no	yes
=	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
clientIpAddress	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
clientUserName	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
trustedDomain	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
boolean	no	no
useXff	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_TRUSTED_DOMAIN_USE_XFF_HEADER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
useXff	no	yes
&&	no	no
!	no	no
trustedDomain	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
clientIpAddress	no	yes
=	no	no
SessionManager	no	yes
.	no	no
getForwardedAddresses	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
clientIpAddress	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
remoteHostName	no	yes
=	no	no
InetAddress	no	yes
.	no	no
getByName	no	yes
(	no	no
clientIpAddress	no	yes
)	no	no
.	no	no
getCanonicalHostName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
trustedDomain	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
&&	no	no
PlainSaslHelper	no	no
.	no	no
isHostFromTrustedDomain	no	no
(	no	no
remoteHostName	no	yes
,	no	no
trustedDomain	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
remoteHostName	no	yes
+	no	no
+	no	no
trustedDomain	no	yes
)	no	no
;	no	no
clientUserName	yes	yes
=	no	no
doPasswdAuth	no	yes
(	no	no
request	no	yes
,	no	no
HiveAuthConstants	no	yes
.	no	no
AuthTypes	no	yes
.	no	no
NOSASL	no	yes
.	no	no
getAuthName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
isKerberosAuthMode	no	no
(	no	no
authType	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
delegationToken	no	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
HIVE_DELEGATION_TOKEN_HEADER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
delegationToken	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
delegationToken	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
clientUserName	yes	yes
=	no	no
doTokenAuth	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no

else	no	no
{	no	no
if	no	no
(	no	no
isKerberosAuthMode	no	no
(	no	no
authType	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
delegationToken	no	yes
=	no	no
request	no	yes
.	no	no
getHeader	no	yes
(	no	no
HIVE_DELEGATION_TOKEN_HEADER	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
delegationToken	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
!	no	no
delegationToken	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
clientUserName	yes	yes
=	no	no
doTokenAuth	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
clientUserName	yes	yes
=	no	no
doKerberosAuth	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
clientUserName	yes	yes
=	no	no
doPasswdAuth	no	yes
(	no	no
request	no	yes
,	no	no
authType	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
assert	no	yes
(	no	no
clientUserName	yes	yes
!=	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
clientUserName	yes	yes
)	no	no
;	no	no
SessionManager	no	yes
.	no	no
setUserName	no	yes
(	no	no
clientUserName	yes	yes
)	no	no
;	no	no
String	no	yes
doAsQueryParam	no	yes
=	no	no
getDoAsQueryParam	no	yes
(	no	no
request	no	yes
.	no	no
getQueryString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
doAsQueryParam	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionManager	no	yes
.	no	no
setProxyUserName	no	yes
(	no	no
doAsQueryParam	no	yes
)	no	no
;	no	no

}	no	no
assert	no	yes
(	no	no
clientUserName	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
clientUserName	no	yes
)	no	no
;	no	no
SessionManager	no	yes
.	no	no
setUserName	no	yes
(	no	no
clientUserName	no	yes
)	no	no
;	no	no
String	no	yes
doAsQueryParam	no	yes
=	no	no
getDoAsQueryParam	no	yes
(	no	no
request	yes	yes
.	no	no
getQueryString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
doAsQueryParam	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
SessionManager	no	yes
.	no	no
setProxyUserName	no	yes
(	no	no
doAsQueryParam	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
requireNewCookie	no	no
&&	no	no
!	no	no
authType	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
HiveAuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
NOSASL	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
cookieToken	no	yes
=	no	no
HttpAuthUtils	no	yes
.	no	no
createCookieToken	no	yes
(	no	no
clientUserName	no	yes
)	no	no
;	no	no
Cookie	no	yes
hs2Cookie	no	yes
=	no	no
createCookie	no	yes
(	no	no
signer	no	yes
.	no	no
signCookie	no	yes
(	no	no
cookieToken	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isHttpOnlyCookie	no	no
)	no	no
{	no	no
response	no	yes
.	no	no
setHeader	no	yes
(	no	no
,	no	no
getHttpOnlyCookieHeader	no	yes
(	no	no
hs2Cookie	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
response	no	yes
.	no	no
addCookie	no	yes
(	no	no
hs2Cookie	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
clientUserName	no	yes
)	no	no
;	no	no
}	no	no
super	no	no
.	no	no
doPost	no	yes
(	no	no
request	yes	yes
,	no	no
response	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
currName	no	no
.	no	no
equals	no	no
(	no	no
AUTH_COOKIE	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
currValue	no	yes
=	no	no
currCookie	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
currValue	no	yes
=	no	no
signer	no	yes
.	no	no
verifyAndExtract	no	yes
(	no	no
currValue	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalArgumentException	no	no
e	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
currValue	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
currValue	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
userName	yes	yes
=	no	no
HttpAuthUtils	no	yes
.	no	no
getUserNameFromCookieToken	no	yes
(	no	no
currValue	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
userName	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
currValue	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
String	no	no
validateCookie	no	no
(	no	no
HttpServletRequest	no	no
request	yes	yes
)	no	no
{	no	no
Cookie	no	yes
[	no	no
]	no	no
cookies	no	yes
=	no	no
request	yes	yes
.	no	no
getCookies	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cookies	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Cookie	no	no
createCookie	no	no
(	no	no
String	no	no
str	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
String	no	no
getDoAsQueryParam	no	no
(	no	no
String	no	no
queryString	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
updateEndpoint	no	no
(	no	no
final	no	no
ServiceRecord	no	no
srv	no	yes
,	no	no
final	no	no
String	no	yes
endpointName	no	yes
)	no	no
{	no	no
final	no	no
String	no	yes
instanceUri	no	yes
=	no	no
srv	no	yes
.	no	no
get	no	yes
(	no	no
INSTANCE_URI_CONFIG	no	yes
)	no	no
;	no	no
final	no	no
String	no	yes
[	no	no
]	no	no
tokens	no	yes
=	no	no
instanceUri	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
hostname	no	yes
=	no	no
tokens	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
final	no	no
int	no	no
port	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
tokens	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
Endpoint	no	yes
urlEndpoint	yes	yes
=	no	no
RegistryTypeUtils	no	yes
.	no	no
ipcEndpoint	no	yes
(	no	no
endpointName	no	yes
,	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hostname	no	yes
,	no	no
port	no	yes
)	no	no
)	no	no
;	no	no
srv	no	yes
.	no	no
addInternalEndpoint	no	yes
(	no	no
urlEndpoint	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
synchronized	no	no
HS2ActivePassiveHARegistry	no	yes
getClient	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
namespace	no	yes
=	no	no
HiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ACTIVE_PASSIVE_HA_REGISTRY_NAMESPACE	no	yes
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
!	no	no
StringUtils	no	yes
.	no	no
isBlank	no	yes
(	no	no
namespace	no	yes
)	no	no
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ACTIVE_PASSIVE_HA_REGISTRY_NAMESPACE	no	yes
.	no	no
varname	no	yes
+	no	no
)	no	no
;	no	no
String	no	yes
nsKey	yes	yes
=	no	no
ZkRegistryBase	no	yes
.	no	no
getRootNamespace	no	yes
(	no	no
conf	no	yes
,	no	no
null	no	no
,	no	no
namespace	no	yes
+	no	no
)	no	no
;	no	no
HS2ActivePassiveHARegistry	no	yes
registry	no	yes
=	no	no
hs2Registries	no	yes
.	no	no
get	no	yes
(	no	no
nsKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
registry	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
registry	no	yes
=	no	no
HS2ActivePassiveHARegistry	no	yes
.	no	no
create	no	yes
(	no	no
conf	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
registry	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
hs2Registries	no	yes
.	no	no
put	no	yes
(	no	no
nsKey	yes	yes
,	no	no
registry	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
logCompactionParameters	no	no
(	no	no
HiveConf	no	no
hiveConf	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
runWorkerIn	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_METASTORE_RUNWORKER_IN	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
logCompactionParameters	no	no
(	no	no
HiveConf	no	no
hiveConf	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
runWorkerIn	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_METASTORE_RUNWORKER_IN	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
runWorkerIn	no	yes
)	no	no
;	no	no
int	no	no
numWorkers	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
COMPACTOR_WORKER_THREADS	no	yes
)	no	no
;	no	no

boolean	no	no
publishConfigs	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ZOOKEEPER_PUBLISH_CONFIGS	no	yes
)	no	no
;	no	no
String	no	yes
instanceURI	no	yes
=	no	no
getServerInstanceURI	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
znodeData	no	yes
;	no	no
if	no	no
(	no	no
publishConfigs	no	yes
)	no	no
{	no	no
addConfsToPublish	no	yes
(	no	no
hiveConf	no	yes
,	no	no
confsToPublish	no	yes
,	no	no
getServerInstanceURI	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
znodeData	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
';'	no	no
)	no	no
.	no	no
withKeyValueSeparator	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
confsToPublish	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
znodeData	no	yes
=	no	no
instanceURI	no	yes
;	no	no
}	no	no
zooKeeperHelper	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getZKConfig	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
znodePathPrefix	no	yes
=	no	no
+	no	no
instanceURI	no	yes
+	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
;	no	no
zooKeeperHelper	no	yes
.	no	no
addServerInstanceToZooKeeper	no	yes
(	no	no
znodePathPrefix	no	yes
,	no	no
znodeData	no	yes
,	no	no
zooKeeperAclProvider	no	yes
,	no	no
new	no	no
DeRegisterWatcher	no	yes
(	no	no
zooKeeperHelper	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no

znodeData	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
';'	no	no
)	no	no
.	no	no
withKeyValueSeparator	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
confsToPublish	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
znodeData	no	yes
=	no	no
instanceURI	no	yes
;	no	no
}	no	no
zooKeeperHelper	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getZKConfig	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
znodePathPrefix	no	yes
=	no	no
+	no	no
instanceURI	no	yes
+	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
;	no	no
zooKeeperHelper	no	yes
.	no	no
addServerInstanceToZooKeeper	no	yes
(	no	no
znodePathPrefix	no	yes
,	no	no
znodeData	no	yes
,	no	no
zooKeeperAclProvider	no	yes
,	no	no
new	no	no
DeRegisterWatcher	no	yes
(	no	no
zooKeeperHelper	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
startPrivilegeSynchronizer	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

else	no	no
{	no	no
znodeData	no	yes
=	no	no
instanceURI	no	yes
;	no	no
}	no	no
zooKeeperHelper	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getZKConfig	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
znodePathPrefix	no	yes
=	no	no
+	no	no
instanceURI	no	yes
+	no	no
+	no	no
+	no	no
HiveVersionInfo	no	yes
.	no	no
getVersion	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
;	no	no
zooKeeperHelper	no	yes
.	no	no
addServerInstanceToZooKeeper	no	yes
(	no	no
znodePathPrefix	no	yes
,	no	no
znodeData	no	yes
,	no	no
zooKeeperAclProvider	no	yes
,	no	no
new	no	no
DeRegisterWatcher	no	yes
(	no	no
zooKeeperHelper	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
startPrivilegeSynchronizer	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no

catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
startPrivilegeSynchronizer	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
webServer	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
webServer	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
ServiceException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no

try	no	no
{	no	no
scheduledQueryService	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
MetricSink	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
tearDown	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hs2HARegistry	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hs2HARegistry	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
shutdownExecutor	no	yes
(	no	no
leaderActionsExecutorService	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
hs2HARegistry	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
webServer	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
}	no	no
MetricSink	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
tearDown	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hs2HARegistry	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hs2HARegistry	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
shutdownExecutor	no	yes
(	no	no
leaderActionsExecutorService	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
hs2HARegistry	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
webServer	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
MetricsFactory	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
hs2HARegistry	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
webServer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
webServer	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
MetricsFactory	no	yes
.	no	no
getInstance	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
MetricsFactory	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
serviceDiscovery	no	no
&&	no	no
!	no	no
activePassiveHA	no	no
)	no	no
{	no	no
try	no	no
{	no	no

PolicyProviderContainer	no	yes
policyContainer	yes	yes
=	no	no
new	no	no
PolicyProviderContainer	no	yes
(	no	no
)	no	no
;	no	no
HiveAuthorizer	no	yes
authorizer	no	yes
=	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getAuthorizerV2	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
authorizer	no	yes
.	no	no
getHivePolicyProvider	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
policyContainer	yes	yes
.	no	no
addAuthorizer	no	yes
(	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	yes
.	no	no
PRE_EVENT_LISTENERS	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
MetastoreConf	no	no
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	yes
.	no	no
PRE_EVENT_LISTENERS	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
)	no	no
&&	no	no
MetastoreConf	no	no
.	no	no
getVar	no	yes
(	no	no
hiveConf	no	yes
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	yes
.	no	no
HIVE_AUTHORIZATION_MANAGER	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
HiveMetastoreAuthorizationProvider	no	yes
>	no	no
providers	no	yes
=	no	no
HiveUtils	no	yes
.	no	no
getMetaStoreAuthorizeProviderManagers	no	yes
(	no	no
hiveConf	no	yes
,	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_METASTORE_AUTHORIZATION_MANAGER	no	yes
,	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HiveMetastoreAuthorizationProvider	no	yes
provider	no	yes
:	no	no
providers	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
provider	no	yes
.	no	no
getHivePolicyProvider	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
policyContainer	yes	yes
.	no	no
addAuthorizationProvider	no	yes
(	no	no
provider	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
policyContainer	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
setUpZooKeeperAuth	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
zKClientForPrivSync	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getZKConfig	no	yes
(	no	no
)	no	no
.	no	no
startZookeeperClient	no	yes
(	no	no
zooKeeperAclProvider	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
String	no	yes
rootNamespace	no	yes
=	no	no
hiveConf	no	yes
.	no	no
getVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SERVER2_ZOOKEEPER_NAMESPACE	no	yes
)	no	no
;	no	no
String	no	yes
path	no	yes
=	no	no
ZooKeeperHiveHelper	no	yes
.	no	no
ZOOKEEPER_PATH_SEPARATOR	no	yes
+	no	no
rootNamespace	no	yes
+	no	no
ZooKeeperHiveHelper	no	yes
.	no	no
ZOOKEEPER_PATH_SEPARATOR	no	yes
+	no	no
;	no	no
LeaderLatch	no	yes
privilegeSynchronizerLatch	no	yes
=	no	no
new	no	no
LeaderLatch	no	yes
(	no	no
zKClientForPrivSync	no	yes
,	no	no
path	no	yes
)	no	no
;	no	no

server	no	yes
.	no	no
init	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
server	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
JvmPauseMonitor	no	yes
pauseMonitor	no	yes
=	no	no
new	no	no
JvmPauseMonitor	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
pauseMonitor	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
+	no	no
,	no	no
t	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hiveConf	no	yes
.	no	no
getVar	no	no
(	no	no
ConfVars	no	no
.	no	no
HIVE_EXECUTION_ENGINE	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
SparkSessionManagerImpl	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
.	no	no
setup	no	yes
(	no	no
hiveConf	no	yes
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
throwable	no	no
)	no	no
{	no	no
if	no	no
(	no	no
server	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
server	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	yes
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
main	no	no
(	no	no
String	no	yes
[	no	no
]	no	no
args	no	yes
)	no	no
{	no	no
HiveConf	no	yes
.	no	no
setLoadHiveServer2Config	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ServerOptionsProcessor	no	yes
oproc	no	yes
=	no	no
new	no	no
ServerOptionsProcessor	no	yes
(	no	no
)	no	no
;	no	no
ServerOptionsProcessorResponse	no	yes
oprocResponse	no	yes
=	no	no
oproc	no	yes
.	no	no
parse	no	yes
(	no	no
args	no	yes
)	no	no
;	no	no
String	no	yes
initLog4jMessage	yes	yes
=	no	no
LogUtils	no	yes
.	no	no
initHiveLog4j	no	yes
(	no	no
)	no	no
;	no	no

GetApplicationsRequest	no	yes
gar	no	yes
=	no	no
GetApplicationsRequest	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no
gar	no	yes
.	no	no
setScope	no	yes
(	no	no
ApplicationsRequestScope	no	yes
.	no	no
OWN	no	yes
)	no	no
;	no	no
gar	no	yes
.	no	no
setApplicationTags	no	yes
(	no	no
Collections	no	yes
.	no	no
singleton	no	yes
(	no	no
tag	no	yes
)	no	no
)	no	no
;	no	no
ApplicationClientProtocol	no	yes
proxy	no	yes
=	no	no
ClientRMProxy	no	yes
.	no	no
createRMProxy	no	yes
(	no	no
conf	no	yes
,	no	no
ApplicationClientProtocol	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
GetApplicationsResponse	no	yes
apps	no	yes
=	no	no
proxy	no	yes
.	no	no
getApplications	no	yes
(	no	no
gar	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ApplicationReport	no	yes
>	no	no
appsList	no	yes
=	no	no
apps	no	yes
.	no	no
getApplicationList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ApplicationReport	no	yes
appReport	no	yes
:	no	no
appsList	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
doAsAdmin	no	no
)	no	no
{	no	no
childYarnJobs	yes	yes
.	no	no
add	no	yes
(	no	no
appReport	no	yes
.	no	no
getApplicationId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isNotBlank	no	no
(	no	no
doAs	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
appReport	no	yes
.	no	no
getApplicationTags	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
QueryState	no	no
.	no	no
USERID_TAG	no	no
+	no	no
+	no	no
doAs	no	no
)	no	no
)	no	no
{	no	no
childYarnJobs	yes	yes
.	no	no
add	no	yes
(	no	no
appReport	no	yes
.	no	no
getApplicationId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
childYarnJobs	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

private	no	no
void	no	no
killQuery	no	no
(	no	no
String	no	no
queryIdOrTag	yes	yes
,	no	no
String	no	no
errMsg	no	yes
,	no	no
HiveConf	no	no
conf	no	no
,	no	no
boolean	no	no
onlyLocal	no	no
,	no	no
String	no	no
doAs	no	no
,	no	no
boolean	no	no
doAsAdmin	no	no
)	no	no
throws	no	no
HiveException	no	no
{	no	no
errMsg	no	yes
=	no	no
StringUtils	no	yes
.	no	no
defaultString	no	yes
(	no	no
errMsg	no	yes
,	no	no
KillQueriesOperation	no	yes
.	no	no
KILL_QUERY_MESSAGE	no	yes
)	no	no
;	no	no
TagOrId	no	yes
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
UNKNOWN	no	yes
;	no	no
Set	no	yes
<	no	no
Operation	no	yes
>	no	no
operationsToKill	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
operationsToKill	no	yes
.	no	no
add	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
ID	no	yes
;	no	no

errMsg	no	yes
=	no	no
StringUtils	no	yes
.	no	no
defaultString	no	yes
(	no	no
errMsg	no	yes
,	no	no
KillQueriesOperation	no	yes
.	no	no
KILL_QUERY_MESSAGE	no	yes
)	no	no
;	no	no
TagOrId	no	yes
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
UNKNOWN	no	yes
;	no	no
Set	no	yes
<	no	no
Operation	no	yes
>	no	no
operationsToKill	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
operationsToKill	no	yes
.	no	no
add	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
ID	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
operationsToKill	no	yes
.	no	no
addAll	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationsByQueryTag	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
TAG	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
killOperations	no	yes
(	no	no
queryIdOrTag	yes	yes
,	no	no
errMsg	no	yes
,	no	no
conf	no	yes
,	no	no
tagOrId	no	yes
,	no	no
operationsToKill	no	yes
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

if	no	no
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
operationsToKill	no	yes
.	no	no
add	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationByQueryId	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
ID	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
operationsToKill	no	yes
.	no	no
addAll	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationsByQueryTag	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
TAG	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
killOperations	no	yes
(	no	no
queryIdOrTag	yes	yes
,	no	no
errMsg	no	yes
,	no	no
conf	no	yes
,	no	no
tagOrId	no	yes
,	no	no
operationsToKill	no	yes
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
onlyLocal	no	no
&&	no	no
killQueryZookeeperManager	no	no
!=	no	no
null	no	no
&&	no	no
conf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_ZOOKEEPER_KILLQUERY_ENABLE	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
operationsToKill	no	yes
.	no	no
addAll	no	yes
(	no	no
operationManager	no	yes
.	no	no
getOperationsByQueryTag	no	yes
(	no	no
queryIdOrTag	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tagOrId	no	yes
=	no	no
TagOrId	no	yes
.	no	no
TAG	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
operationsToKill	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
killOperations	no	yes
(	no	no
queryIdOrTag	yes	yes
,	no	no
errMsg	no	yes
,	no	no
conf	no	yes
,	no	no
tagOrId	no	yes
,	no	no
operationsToKill	no	yes
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
onlyLocal	no	no
&&	no	no
killQueryZookeeperManager	no	yes
!=	no	no
null	no	no
&&	no	no
conf	no	yes
.	no	no
getBoolVar	no	no
(	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_ZOOKEEPER_KILLQUERY_ENABLE	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
queryIdOrTag	yes	yes
)	no	no
;	no	no
killQueryZookeeperManager	no	yes
.	no	no
killQuery	no	yes
(	no	no
queryIdOrTag	yes	yes
,	no	no
SessionState	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
getAuthenticator	no	yes
(	no	no
)	no	no
.	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
isAdmin	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
killChildYarnJobs	no	yes
(	no	no
conf	no	yes
,	no	no
queryTag	no	yes
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
TAG	no	no
:	no	no
int	no	no
numCanceled	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Operation	no	no
operationToKill	no	no
:	no	no
operationsToKill	no	no
)	no	no
{	no	no
if	no	no
(	no	no
cancelOperation	no	no
(	no	no
operationToKill	no	no
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
,	no	no
errMsg	no	no
)	no	no
)	no	no
{	no	no
numCanceled	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
numCanceled	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveSQLException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
killChildYarnJobs	no	yes
(	no	no
conf	no	yes
,	no	no
queryIdOrTag	yes	yes
,	no	no
doAs	no	yes
,	no	no
doAsAdmin	no	yes
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
UNKNOWN	no	no
:	no	no
default	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
HiveSQLException	no	yes
e	yes	no
)	no	no
{	no	no

KillQueryZookeeperBarrier	no	yes
barrier	no	yes
=	no	no
new	no	no
KillQueryZookeeperBarrier	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
+	no	no
zkNameSpace	no	yes
,	no	no
ZKPaths	no	yes
.	no	no
getNodeFromPath	no	yes
(	no	no
pathChildrenCacheEvent	no	yes
.	no	no
getData	no	yes
(	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
KillQueryZookeeperData	no	yes
>	no	no
data	no	yes
=	no	no
barrier	no	yes
.	no	no
getKillQueryData	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
data	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
KillQueryZookeeperData	no	yes
killQuery	no	yes
=	no	no
data	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
killQuery	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
killQuery	no	yes
.	no	no
getRequestingServer	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
localKillQueryImpl	no	yes
.	no	no
isLocalQuery	no	no
(	no	no
killQuery	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
killQuery	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
barrier	no	yes
.	no	no
confirmProgress	no	yes
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
localKillQueryImpl	no	yes
.	no	no
killLocalQuery	no	yes
(	no	no
killQuery	no	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
killQuery	no	yes
.	no	no
getDoAs	no	yes
(	no	no
)	no	no
,	no	no
killQuery	no	yes
.	no	no
isDoAsAdmin	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
barrier	no	yes
.	no	no
confirmDone	no	yes
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

return	no	no
;	no	no
}	no	no
KillQueryZookeeperData	no	yes
killQuery	yes	yes
=	no	no
data	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
killQuery	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
killQuery	yes	yes
.	no	no
getRequestingServer	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
localKillQueryImpl	no	yes
.	no	no
isLocalQuery	no	no
(	no	no
killQuery	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
killQuery	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
barrier	no	yes
.	no	no
confirmProgress	no	yes
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
localKillQueryImpl	no	yes
.	no	no
killLocalQuery	no	yes
(	no	no
killQuery	yes	yes
.	no	no
getQueryId	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
killQuery	yes	yes
.	no	no
getDoAs	no	yes
(	no	no
)	no	no
,	no	no
killQuery	yes	yes
.	no	no
isDoAsAdmin	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
barrier	no	yes
.	no	no
confirmDone	no	yes
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
barrier	no	yes
.	no	no
confirmFailed	no	yes
(	no	no
getServerHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
void	no	no
cleanRawStore	no	no
(	no	no
)	no	no
{	no	no
Long	no	yes
threadId	no	yes
=	no	no
this	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
;	no	no
RawStore	no	yes
threadLocalRawStore	yes	yes
=	no	no
threadRawStoreMap	no	yes
.	no	no
get	no	yes
(	no	no
threadId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
threadLocalRawStore	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

setResponseHeaders	no	yes
(	no	no
response	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ObjectMapper	no	yes
mapper	no	yes
=	no	no
new	no	no
ObjectMapper	no	yes
(	no	no
)	no	no
;	no	no
FailoverResponse	no	yes
failoverResponse	no	yes
=	no	no
new	no	no
FailoverResponse	no	yes
(	no	no
)	no	no
;	no	no
AtomicBoolean	no	yes
isLeader	no	yes
=	no	no
(	no	no
AtomicBoolean	no	yes
)	no	no
context	no	yes
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isLeader	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
failoverResponse	no	yes
.	no	no
setSuccess	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
failoverResponse	no	yes
.	no	no
setMessage	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
mapper	no	yes
.	no	no
writerWithDefaultPrettyPrinter	no	yes
(	no	no
)	no	no
.	no	no
writeValue	no	yes
(	no	no
response	no	yes
.	no	no
getWriter	no	yes
(	no	no
)	no	no
,	no	no
failoverResponse	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_FORBIDDEN	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
HiveServer2	no	yes
.	no	no
FailoverHandlerCallback	no	yes
failoverHandler	no	yes
=	no	no
(	no	no
HiveServer2	no	yes
.	no	no
FailoverHandlerCallback	no	yes
)	no	no
context	no	yes
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

failoverResponse	no	yes
.	no	no
setSuccess	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
failoverResponse	no	yes
.	no	no
setMessage	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
mapper	no	yes
.	no	no
writerWithDefaultPrettyPrinter	no	yes
(	no	no
)	no	no
.	no	no
writeValue	no	yes
(	no	no
response	no	yes
.	no	no
getWriter	no	yes
(	no	no
)	no	no
,	no	no
failoverResponse	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_FORBIDDEN	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
HiveServer2	no	yes
.	no	no
FailoverHandlerCallback	no	yes
failoverHandler	no	yes
=	no	no
(	no	no
HiveServer2	no	yes
.	no	no
FailoverHandlerCallback	no	yes
)	no	no
context	no	yes
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
failoverHandler	no	yes
.	no	no
failover	no	yes
(	no	no
)	no	no
;	no	no
failoverResponse	no	yes
.	no	no
setSuccess	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
failoverResponse	no	yes
.	no	no
setMessage	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
mapper	no	yes
.	no	no
writerWithDefaultPrettyPrinter	no	yes
(	no	no
)	no	no
.	no	no
writeValue	no	yes
(	no	no
response	no	yes
.	no	no
getWriter	no	yes
(	no	no
)	no	no
,	no	no
failoverResponse	no	yes
)	no	no
;	no	no
response	no	yes
.	no	no
setStatus	no	yes
(	no	no
HttpServletResponse	no	yes
.	no	no
SC_OK	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
doGet	no	no
(	no	no
HttpServletRequest	no	no
request	no	yes
,	no	no
HttpServletResponse	no	no
response	no	no
)	no	no
throws	no	no
ServletException	no	no
,	no	no
IOException	no	no
{	no	no
String	no	yes
opId	yes	yes
=	no	no
(	no	no
String	no	yes
)	no	no
request	no	yes
.	no	no
getParameter	no	yes
(	no	no
)	no	no
;	no	no
ServletContext	no	yes
ctx	no	yes
=	no	no
getServletContext	no	yes
(	no	no
)	no	no
;	no	no
SessionManager	no	yes
sessionManager	no	yes
=	no	no
(	no	no
SessionManager	no	yes
)	no	no
ctx	no	yes
.	no	no
getAttribute	no	yes
(	no	no
)	no	no
;	no	no
OperationManager	no	yes
opManager	no	yes
=	no	no
sessionManager	no	yes
.	no	no
getOperationManager	no	yes
(	no	no
)	no	no
;	no	no
QueryInfo	no	yes
queryInfo	no	yes
=	no	no
opManager	no	yes
.	no	no
getQueryInfo	no	yes
(	no	no
opId	yes	yes
)	no	no
;	no	no
HiveConf	no	yes
hiveConf	no	yes
=	no	no
opManager	no	yes
.	no	no
getHiveConf	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
queryInfo	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

try	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
ApplicationId	no	yes
>	no	no
childJobs	no	yes
=	no	no
getYarnChildJobs	no	yes
(	no	no
tag	no	yes
,	no	no
timestamp	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
childJobs	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
childJobs	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
YarnClient	no	yes
yarnClient	no	yes
=	no	no
YarnClient	no	yes
.	no	no
createYarnClient	no	yes
(	no	no
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
init	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ApplicationId	no	yes
app	yes	yes
:	no	no
childJobs	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
app	yes	yes
)	no	no
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
killApplication	no	yes
(	no	no
app	yes	yes
)	no	no
;	no	no

private	no	no
Set	no	yes
<	no	no
ApplicationId	no	yes
>	no	no
getYarnChildJobs	no	no
(	no	no
String	no	no
tag	yes	no
,	no	no
long	no	no
timestamp	yes	no
)	no	no
{	no	no
Set	no	yes
<	no	no
ApplicationId	no	yes
>	no	no
childYarnJobs	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
ApplicationId	no	yes
>	no	no
(	no	no
)	no	no
;	no	no

aclEntries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
sourceStatus	no	yes
.	no	no
getAclEntries	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
removeBaseAclEntries	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
USER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getUserAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
GROUP	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getGroupAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
OTHER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getOtherAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recursion	no	no
)	no	no
{	no	no
fsShell	no	yes
.	no	no
setConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
group	no	yes
,	no	no
target	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
aclEntry	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

removeBaseAclEntries	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
USER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getUserAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
GROUP	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getGroupAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
OTHER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getOtherAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recursion	no	no
)	no	no
{	no	no
fsShell	no	yes
.	no	no
setConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
group	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
aclEntry	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
target	no	yes
+	no	no
+	no	no
)	no	no
;	no	no

run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
target	no	yes
+	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
permission	no	yes
=	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
sourcePerm	no	yes
.	no	no
toShort	no	yes
(	no	no
)	no	no
,	no	no
8	no	no
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
permission	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
targetGroup	no	no
==	no	no
null	no	no
||	no	no
!	no	no
group	no	yes
.	no	no
equals	no	no
(	no	no
targetGroup	no	no
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
setOwner	no	yes
(	no	no
target	no	yes
,	no	no
null	no	no
,	no	no
group	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
fs	no	yes
.	no	no
setAcl	no	yes
(	no	no
target	no	yes
,	no	no
aclEntries	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
static	no	no
void	no	no
run	no	no
(	no	no
FsShell	no	no
shell	no	no
,	no	no
String	no	no
[	no	no
]	no	no
command	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
run	no	yes
(	no	no
FsShell	no	no
shell	no	yes
,	no	no
String	no	no
[	no	no
]	no	no
command	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
ArrayUtils	no	yes
.	no	no
toString	no	yes
(	no	no
command	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
retval	yes	yes
=	no	no
shell	no	yes
.	no	no
run	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
Filter	no	yes
getXSRFFilter	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
filterClass	yes	yes
=	no	no
;	no	no
try	no	no
{	no	no
Class	no	yes
<	no	no
?	no	no
extends	no	no
Filter	no	yes
>	no	no
klass	no	yes
=	no	no
(	no	no
Class	no	yes
<	no	no
?	no	no
extends	no	no
Filter	no	yes
>	no	no
)	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
filterClass	yes	yes
)	no	no
;	no	no
Filter	no	yes
f	no	yes
=	no	no
klass	no	yes
.	no	no
newInstance	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
sparkLogDir	no	yes
=	no	no
sparkHome	no	yes
+	no	no
;	no	no
}	no	no
}	no	no
String	no	yes
osxTestOpts	no	yes
=	no	no
;	no	no
if	no	no
(	no	no
Strings	no	yes
.	no	no
nullToEmpty	no	yes
(	no	no
System	no	yes
.	no	no
getProperty	no	no
(	no	no
)	no	no
)	no	no
.	no	no
toLowerCase	no	no
(	no	no
)	no	no
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
osxTestOpts	no	yes
=	no	no
Strings	no	yes
.	no	no
nullToEmpty	no	yes
(	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
OSX_TEST_OPTS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
driverJavaOpts	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
skipNulls	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
+	no	no
sparkLogDir	no	yes
,	no	no
osxTestOpts	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
DRIVER_OPTS_KEY	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
executorJavaOpts	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
skipNulls	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
+	no	no
sparkLogDir	no	yes
,	no	no
osxTestOpts	no	yes
,	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
EXECUTOR_OPTS_KEY	no	yes
)	no	no
)	no	no
;	no	no
File	no	yes
properties	no	yes
=	no	no
File	no	yes
.	no	no
createTempFile	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
properties	no	yes
.	no	no
setReadable	no	no
(	no	no
false	no	no
)	no	no
||	no	no
!	no	no
properties	no	yes
.	no	no
setReadable	no	no
(	no	no
true	no	no
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
properties	no	yes
.	no	no
deleteOnExit	no	yes
(	no	no
)	no	no
;	no	no
Properties	no	yes
allProps	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
URL	no	yes
sparkDefaultsUrl	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getContextClassLoader	no	yes
(	no	no
)	no	no
.	no	no
getResource	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sparkDefaultsUrl	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

public	no	no
static	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
addToClassPath	no	no
(	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Long	no	no
>	no	no
newPaths	no	no
,	no	no
Configuration	no	no
conf	no	yes
,	no	no
File	no	no
localTmpDir	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
ClassLoader	no	yes
parentLoader	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getContextClassLoader	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
URL	no	yes
>	no	no
curPath	no	yes
=	no	no
getCurrentClassPaths	no	yes
(	no	no
parentLoader	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
localNewPaths	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
boolean	no	no
newPathAdded	no	yes
=	no	no
false	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
Long	no	no
>	no	no
entry	no	yes
:	no	no
newPaths	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
URL	no	yes
newUrl	yes	yes
=	no	no
urlFromPathString	no	yes
(	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
,	no	no
localTmpDir	no	yes
)	no	no
;	no	no
localNewPaths	no	yes
.	no	no
add	no	yes
(	no	no
newUrl	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
newUrl	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
curPath	no	yes
.	no	no
contains	no	no
(	no	no
newUrl	yes	yes
)	no	no
)	no	no
{	no	no
curPath	no	yes
.	no	no
add	no	yes
(	no	no
newUrl	yes	yes
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
indexOf	no	no
(	no	no
path	yes	yes
,	no	no
)	no	no
==	no	no
0	no	no
||	no	no
StringUtils	no	no
.	no	no
indexOf	no	no
(	no	no
path	yes	yes
,	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no
Path	no	yes
remoteFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no
Path	no	yes
localFile	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
localTmpDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
remoteFile	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Long	no	yes
currentTS	no	yes
=	no	no
downloadedFiles	no	yes
.	no	no
get	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentTS	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
currentTS	no	yes
=	no	no
-	no	no
1L	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
new	no	no
File	no	yes
(	no	no
localFile	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
exists	no	no
(	no	no
)	no	no
||	no	no
currentTS	no	yes
<	no	no
timeStamp	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
remoteFile	no	yes
+	no	no
+	no	no
localFile	no	yes
)	no	no
;	no	no
FileSystem	no	yes
remoteFS	no	yes
=	no	no
remoteFile	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
remoteFS	no	yes
.	no	no
copyToLocalFile	no	yes
(	no	no
remoteFile	no	yes
,	no	no
localFile	no	yes
)	no	no
;	no	no
downloadedFiles	no	yes
.	no	no
put	no	yes
(	no	no
path	yes	yes
,	no	no
timeStamp	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
urlFromPathString	no	yes
(	no	no
localFile	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
timeStamp	no	yes
,	no	no
conf	no	yes
,	no	no
localTmpDir	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
url	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
path	yes	yes
)	no	no
.	no	no
toURL	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
err	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
protected	no	no
Future	no	no
<	no	no
Void	no	yes
>	no	no
launchDriver	no	no
(	no	no
String	no	yes
isTesting	no	no
,	no	no
RpcServer	no	no
rpcServer	no	no
,	no	no
String	no	yes
clientId	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Callable	no	yes
<	no	no
Void	no	yes
>	no	no
runnable	no	yes
;	no	no
String	no	yes
cmd	yes	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
argv	no	yes
)	no	no
;	no	no

pb	no	yes
.	no	no
environment	no	yes
(	no	no
)	no	no
.	no	no
put	no	yes
(	no	no
,	no	no
isTesting	no	yes
)	no	no
;	no	no
}	no	no
final	no	no
Process	no	yes
child	no	yes
=	no	no
pb	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
threadName	no	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
childErrorLog	no	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedList	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
childOutLog	no	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedList	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
LogRedirector	no	yes
.	no	no
LogSourceCallback	no	yes
callback	no	yes
=	no	no
(	no	no
)	no	no
->	no	no
isAlive	no	yes
;	no	no
LogRedirector	no	yes
.	no	no
redirect	no	yes
(	no	no
+	no	no
threadName	no	yes
,	no	no
new	no	no
LogRedirector	no	yes
(	no	no
child	no	yes
.	no	no
getInputStream	no	yes
(	no	no
)	no	no
,	no	no
LOG	no	yes
,	no	no
childOutLog	no	yes
,	no	no
callback	no	yes
)	no	no
)	no	no
;	no	no
LogRedirector	no	yes
.	no	no
redirect	no	yes
(	no	no
+	no	no
threadName	no	yes
,	no	no
new	no	no
LogRedirector	no	yes
(	no	no
child	no	yes
.	no	no
getErrorStream	no	yes
(	no	no
)	no	no
,	no	no
LOG	no	yes
,	no	no
childErrorLog	no	yes
,	no	no
callback	no	yes
)	no	no
)	no	no
;	no	no
runnable	no	no
=	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
int	no	no
exitCode	no	yes
=	no	no
child	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitCode	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
childOutLog	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
line	no	yes
:	no	no
childOutLog	no	yes
)	no	no
{	no	no
Matcher	no	yes
m	yes	yes
=	no	no
YARN_APPLICATION_ID_REGEX	no	yes
.	no	no
matcher	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no

final	no	no
LogRedirector	no	yes
.	no	no
LogSourceCallback	no	yes
callback	no	yes
=	no	no
(	no	no
)	no	no
->	no	no
isAlive	no	yes
;	no	no
LogRedirector	no	yes
.	no	no
redirect	no	yes
(	no	no
+	no	no
threadName	no	yes
,	no	no
new	no	no
LogRedirector	no	yes
(	no	no
child	no	yes
.	no	no
getInputStream	no	yes
(	no	no
)	no	no
,	no	no
LOG	no	yes
,	no	no
childOutLog	no	yes
,	no	no
callback	no	yes
)	no	no
)	no	no
;	no	no
LogRedirector	no	yes
.	no	no
redirect	no	yes
(	no	no
+	no	no
threadName	no	yes
,	no	no
new	no	no
LogRedirector	no	yes
(	no	no
child	no	yes
.	no	no
getErrorStream	no	yes
(	no	no
)	no	no
,	no	no
LOG	no	yes
,	no	no
childErrorLog	no	yes
,	no	no
callback	no	yes
)	no	no
)	no	no
;	no	no
runnable	no	no
=	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
int	no	no
exitCode	no	yes
=	no	no
child	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitCode	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
synchronized	no	no
(	no	no
childOutLog	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
line	no	yes
:	no	no
childOutLog	no	yes
)	no	no
{	no	no
Matcher	no	yes
m	yes	yes
=	no	no
YARN_APPLICATION_ID_REGEX	no	yes
.	no	no
matcher	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
m	yes	yes
.	no	no
find	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
m	yes	yes
.	no	no
group	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
rpcServer	no	yes
.	no	no
setApplicationId	no	yes
(	no	no
m	yes	yes
.	no	no
group	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
synchronized	no	no
(	no	no
childErrorLog	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
line	no	yes
:	no	no
childErrorLog	no	yes
)	no	no
{	no	no

private	no	no
void	no	no
handleError	no	no
(	no	no
ChannelHandlerContext	no	no
ctx	no	no
,	no	no
Object	no	no
msg	yes	no
,	no	no
OutstandingRpc	no	no
rpc	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
msg	yes	no
instanceof	no	no
String	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
final	no	no
void	no	no
exceptionCaught	no	no
(	no	no
ChannelHandlerContext	no	no
ctx	no	no
,	no	no
Throwable	no	no
cause	yes	no
)	no	no
{	no	no

void	no	no
discardRpc	no	no
(	no	no
long	no	no
id	yes	no
)	no	no
{	no	no

YarnClient	no	yes
yarnClient	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
ApplicationId	no	yes
appId	no	yes
=	no	no
getApplicationIDFromString	no	yes
(	no	no
applicationId	no	yes
)	no	no
;	no	no
yarnClient	no	yes
=	no	no
YarnClient	no	yes
.	no	no
createYarnClient	no	yes
(	no	no
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
init	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
yarnClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
ApplicationReport	no	yes
appReport	no	yes
=	no	no
yarnClient	no	yes
.	no	no
getApplicationReport	no	yes
(	no	no
appId	no	yes
)	no	no
;	no	no
return	no	no
appReport	no	yes
!=	no	no
null	no	no
&&	no	no
appReport	no	yes
.	no	no
getYarnApplicationState	no	yes
(	no	no
)	no	no
==	no	no
YarnApplicationState	no	yes
.	no	no
ACCEPTED	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
applicationId	no	yes
+	no	no
+	no	no
ex	yes	yes
,	no	no
ex	yes	yes
)	no	no
;	no	no
return	no	no
false	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
yarnClient	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
yarnClient	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
Future	no	no
<	no	no
Rpc	no	yes
>	no	no
registerClient	no	no
(	no	no
final	no	no
String	no	no
clientId	yes	yes
,	no	no
String	no	no
secret	no	no
,	no	no
RpcDispatcher	no	no
serverDispatcher	no	no
,	no	no
long	no	no
clientTimeoutMs	no	no
,	no	no
YarnApplicationStateFinder	no	no
yarnApplicationStateFinder	no	no
)	no	no
{	no	no
final	no	no
Promise	no	yes
<	no	no
Rpc	no	yes
>	no	no
promise	no	yes
=	no	no
group	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
.	no	no
newPromise	no	yes
(	no	no
)	no	no
;	no	no
Runnable	no	no
timeout	no	no
=	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
applicationId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
yarnApplicationStateFinder	no	no
.	no	no
isApplicationAccepted	no	no
(	no	no
hiveConf	no	no
,	no	no
applicationId	no	yes
)	no	no
)	no	no
{	no	no
final	no	no
ClientInfo	no	yes
client	no	yes
=	no	no
pendingClients	no	yes
.	no	no
get	no	yes
(	no	no
clientId	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
client	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
exceptionCaught	no	no
(	no	no
ChannelHandlerContext	no	no
ctx	no	no
,	no	no
Throwable	no	no
cause	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isComplete	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
void	no	no
increment	no	no
(	no	no
String	no	no
groupName	yes	yes
,	no	no
String	no	no
counterName	yes	yes
,	no	no
long	no	no
value	no	no
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
getGroup	no	yes
(	no	no
groupName	yes	yes
)	no	no
.	no	no
getCounter	no	yes
(	no	no
counterName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
long	no	no
getValue	no	no
(	no	no
String	no	no
groupName	yes	yes
,	no	no
String	no	no
counterName	yes	yes
)	no	no
{	no	no
SparkCounter	no	yes
counter	no	yes
=	no	no
getGroup	no	yes
(	no	no
groupName	yes	yes
)	no	no
.	no	no
getCounter	no	yes
(	no	no
counterName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
counter	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

private	no	no
<	no	no
T	no	yes
extends	no	no
Serializable	no	no
>	no	no
JobHandle	no	yes
.	no	no
Listener	no	yes
<	no	no
T	no	yes
>	no	no
newListener	no	no
(	no	no
)	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
JobHandle	no	yes
.	no	no
Listener	no	yes
<	no	no
T	no	yes
>	no	no
listener	no	yes
=	no	no
mock	no	yes
(	no	no
JobHandle	no	yes
.	no	no
Listener	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
answerWhen	no	yes
(	no	no
listener	no	yes
,	no	no
)	no	no
.	no	no
onJobCancelled	no	yes
(	no	no
Mockito	no	yes
.	no	no
<	no	no
JobHandle	no	yes
<	no	no
T	no	yes
>>	no	no
any	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
answerWhen	no	yes
(	no	no
listener	no	yes
,	no	no
)	no	no
.	no	no
onJobQueued	no	yes
(	no	no
Mockito	no	yes
.	no	no
<	no	no
JobHandle	no	yes
<	no	no
T	no	yes
>>	no	no
any	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
answerWhen	no	yes
(	no	no
listener	no	yes
,	no	no
)	no	no
.	no	no
onJobStarted	no	yes
(	no	no
Mockito	no	yes
.	no	no
<	no	no
JobHandle	no	yes
<	no	no
T	no	yes
>>	no	no
any	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
answerWhen	no	yes
(	no	no
listener	no	yes
,	no	no
)	no	no
.	no	no
onJobSucceeded	no	yes
(	no	no
Mockito	no	yes
.	no	no
<	no	no
JobHandle	no	yes
<	no	no
T	no	yes
>>	no	no
any	no	yes
(	no	no
)	no	no
,	no	no
Mockito	no	yes
.	no	no
<	no	no
T	no	yes
>	no	no
any	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
answerWhen	no	yes
(	no	no
listener	no	yes
,	no	no
)	no	no
.	no	no
onSparkJobStarted	no	yes
(	no	no
Mockito	no	yes
.	no	no
<	no	no
JobHandle	no	yes
<	no	no
T	no	yes
>>	no	no
any	no	yes
(	no	no
)	no	no
,	no	no
Mockito	no	yes
.	no	no
anyInt	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Mockito	no	yes
.	no	no
doAnswer	no	no
(	no	no
new	no	no
Answer	no	no
<	no	no
Void	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
Void	no	no
answer	no	no
(	no	no
InvocationOnMock	no	no
invocation	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
JobHandleImpl	no	yes
arg	yes	yes
=	no	no
(	no	no
(	no	no
JobHandleImpl	no	yes
)	no	no
invocation	no	yes
.	no	no
getArguments	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no

protected	no	no
<	no	no
T	no	no
extends	no	no
Serializable	no	no
>	no	no
Listener	no	no
<	no	no
T	no	no
>	no	no
answerWhen	no	no
(	no	no
Listener	no	no
<	no	no
T	no	no
>	no	no
listener	no	no
,	no	no
final	no	no
String	no	no
logStr	yes	no
)	no	no
{	no	no
return	no	no
Mockito	no	no
.	no	no
doAnswer	no	no
(	no	no
new	no	no
Answer	no	no
<	no	no
Void	no	no
>	no	no
(	no	no
)	no	no
{	no	no
public	no	no
Void	no	no
answer	no	no
(	no	no
InvocationOnMock	no	no
invocation	no	yes
)	no	no
throws	no	no
Throwable	no	no
{	no	no
@	no	no
SuppressWarnings	no	yes
(	no	no
)	no	no
JobHandleImpl	no	yes
arg	yes	yes
=	no	no
(	no	no
(	no	no
JobHandleImpl	no	yes
)	no	no
invocation	no	yes
.	no	no
getArguments	no	yes
(	no	no
)	no	no
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no

RpcServer	no	yes
server0	no	yes
=	no	no
new	no	no
RpcServer	no	yes
(	no	no
config	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
server0	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
server0	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
>=	no	no
0	no	no
)	no	no
;	no	no
IOUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
server0	no	yes
)	no	no
;	no	no
config	no	yes
.	no	no
put	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_RPC_SERVER_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
RpcServer	no	yes
server1	no	yes
=	no	no
new	no	no
RpcServer	no	yes
(	no	no
config	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
+	no	no
server1	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
server1	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
>=	no	no
49152	no	no
&&	no	no
server1	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
<=	no	no
49333	no	no
)	no	no
;	no	no
IOUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
server1	no	yes
)	no	no
;	no	no
int	no	no
expectedPort	yes	yes
=	no	no
ServerUtils	no	yes
.	no	no
findFreePort	no	yes
(	no	no
)	no	no
;	no	no
RpcServer	no	yes
server2	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
RETRY_ACQUIRE_PORT_COUNT	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
try	no	no
{	no	no
config	no	yes
.	no	no
put	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_RPC_SERVER_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
expectedPort	yes	yes
)	no	no
)	no	no
;	no	no
server2	no	yes
=	no	no
new	no	no
RpcServer	no	yes
(	no	no
config	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
assertNotNull	no	yes
(	no	no
,	no	no
server2	no	yes
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
+	no	no
server2	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
expectedPort	yes	yes
,	no	no
server2	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
IOUtils	no	yes
.	no	no
closeQuietly	no	yes
(	no	no
server2	no	yes
)	no	no
;	no	no
config	no	yes
.	no	no
put	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_RPC_SERVER_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
)	no	no
;	no	no
try	no	no
{	no	no
autoClose	no	yes
(	no	no
new	no	no
RpcServer	no	yes
(	no	no
config	no	yes
,	no	no
hiveConf	no	yes
)	no	no
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalArgumentException	no	no
e	no	yes
)	no	no
{	no	no
assertEquals	no	yes
(	no	no
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_RPC_SERVER_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
expectedPort	yes	yes
=	no	no
ServerUtils	no	yes
.	no	no
findFreePort	no	yes
(	no	no
)	no	no
;	no	no
RpcServer	no	yes
server3	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	no
=	no	no
0	no	no
;	no	no
i	no	no
<	no	no
RETRY_ACQUIRE_PORT_COUNT	no	no
;	no	no
i	no	no
++	no	no
)	no	no
{	no	no
try	no	no
{	no	no
config	no	yes
.	no	no
put	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SPARK_RPC_SERVER_PORT	no	yes
.	no	no
varname	no	yes
,	no	no
String	no	yes
.	no	no
valueOf	no	yes
(	no	no
expectedPort	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
server3	no	yes
=	no	no
new	no	no
RpcServer	no	yes
(	no	no
config	no	yes
,	no	no
hiveConf	no	yes
)	no	no
;	no	no

server	no	yes
.	no	no
runPendingTasks	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
runPendingTasks	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
count	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
!	no	no
client	no	yes
.	no	no
outboundMessages	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Object	no	yes
readOutboundResult	no	yes
=	no	no
client	no	yes
.	no	no
readOutbound	no	yes
(	no	no
)	no	no
;	no	no
server	no	yes
.	no	no
writeInbound	no	yes
(	no	no
readOutboundResult	no	yes
)	no	no
;	no	no
count	yes	yes
++	no	no
;	no	no
}	no	no
server	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
count	yes	yes
)	no	no
;	no	no
count	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
!	no	no
server	no	yes
.	no	no
outboundMessages	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Object	no	yes
readOutboundResult	no	yes
=	no	no
server	no	yes
.	no	no
readOutbound	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
writeInbound	no	yes
(	no	no
readOutboundResult	no	yes
)	no	no
;	no	no
count	yes	yes
++	no	no
;	no	no
}	no	no
client	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no

zooKeeperClient	no	yes
=	no	no
startZookeeperClient	no	yes
(	no	no
zooKeeperAclProvider	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
pathPrefix	no	yes
=	no	no
ZOOKEEPER_PATH_SEPARATOR	no	yes
+	no	no
rootNamespace	no	yes
+	no	no
ZOOKEEPER_PATH_SEPARATOR	no	yes
+	no	no
znodePathPrefix	yes	yes
;	no	no
byte	no	no
[	no	no
]	no	no
znodeDataUTF8	no	yes
=	no	no
znodeData	yes	yes
.	no	no
getBytes	no	yes
(	no	no
StandardCharsets	no	yes
.	no	no
UTF_8	no	yes
)	no	no
;	no	no
znode	no	yes
=	no	no
new	no	no
PersistentNode	no	yes
(	no	no
zooKeeperClient	no	yes
,	no	no
CreateMode	no	yes
.	no	no
EPHEMERAL_SEQUENTIAL	no	yes
,	no	no
false	no	no
,	no	no
pathPrefix	no	yes
,	no	no
znodeDataUTF8	no	yes
)	no	no
;	no	no
znode	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
znodeCreationTimeout	no	yes
=	no	no
120	no	no
;	no	no
if	no	no
(	no	no
!	no	no
znode	no	yes
.	no	no
waitForInitialCreate	no	no
(	no	no
znodeCreationTimeout	no	yes
,	no	no
TimeUnit	no	no
.	no	no
SECONDS	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
znodeCreationTimeout	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
setDeregisteredWithZooKeeper	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
znodePath	no	yes
=	no	no
znode	no	yes
.	no	no
getActualPath	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
zooKeeperClient	no	yes
.	no	no
checkExists	no	no
(	no	no
)	no	no
.	no	no
usingWatcher	no	no
(	no	no
watcher	no	no
)	no	no
.	no	no
forPath	no	no
(	no	no
znodePath	no	yes
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
znodePathPrefix	yes	yes
+	no	no
+	no	no
znodeData	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
znodePath	no	yes
+	no	no
+	no	no
znodePathPrefix	yes	yes
+	no	no
+	no	no
znodeData	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no

public	no	no
CuratorFramework	no	yes
startZookeeperClient	no	no
(	no	no
ACLProvider	no	no
zooKeeperAclProvider	no	yes
,	no	no
boolean	no	no
addParentNode	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
CuratorFramework	no	yes
zkClient	no	yes
=	no	no
getNewZookeeperClient	no	yes
(	no	no
zooKeeperAclProvider	no	yes
)	no	no
;	no	no
zkClient	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
addParentNode	no	no
)	no	no
{	no	no
try	no	no
{	no	no
zkClient	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
.	no	no
creatingParentsIfNeeded	no	yes
(	no	no
)	no	no
.	no	no
withMode	no	yes
(	no	no
CreateMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
.	no	no
forPath	no	yes
(	no	no
ZooKeeperHiveHelper	no	yes
.	no	no
ZOOKEEPER_PATH_SEPARATOR	no	yes
+	no	no
rootNamespace	yes	yes
)	no	no
;	no	no

public	no	no
CuratorFramework	no	no
getNewZookeeperClient	no	no
(	no	no
ACLProvider	no	no
zooKeeperAclProvider	no	no
,	no	no
String	no	no
nameSpace	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
cacheFileMetadata	no	no
(	no	no
long	no	no
fileId	no	no
,	no	no
FileSystem	no	no
fs	no	yes
,	no	no
Path	no	no
path	yes	yes
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no
ByteBuffer	no	yes
[	no	no
]	no	no
cols	no	yes
=	no	no
fileFormatProxy	no	yes
.	no	no
getAddedColumnsToCache	no	yes
(	no	no
)	no	no
;	no	no
ByteBuffer	no	yes
[	no	no
]	no	no
vals	no	yes
=	no	no
(	no	no
cols	no	yes
==	no	no
null	no	no
)	no	no
?	no	no
null	no	no
:	no	no
new	no	no
ByteBuffer	no	yes
[	no	no
cols	no	yes
.	no	no
length	no	yes
]	no	no
;	no	no
ByteBuffer	no	yes
metadata	yes	yes
=	no	no
fileFormatProxy	no	yes
.	no	no
getMetadataToCache	no	yes
(	no	no
fs	no	yes
,	no	no
path	yes	yes
,	no	no
vals	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
getIfClientFilterEnabled	no	no
(	no	no
)	no	no
{	no	no
boolean	no	no
isEnabled	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
METASTORE_CLIENT_FILTER_ENABLED	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
open	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	yes
{	no	no
isConnected	no	yes
=	no	no
false	no	no
;	no	no
TTransportException	no	yes
tte	no	yes
=	no	no
null	no	no
;	no	no
MetaException	no	yes
recentME	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
useSSL	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_SSL	no	yes
)	no	no
;	no	no
boolean	no	no
useSasl	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_SASL	no	yes
)	no	no
;	no	no
String	no	yes
clientAuthMode	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
METASTORE_CLIENT_AUTH_MODE	no	yes
)	no	no
;	no	no
boolean	no	no
usePasswordAuth	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
useFramedTransport	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_FRAMED_TRANSPORT	no	yes
)	no	no
;	no	no
boolean	no	no
useCompactProtocol	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_COMPACT_PROTOCOL	no	yes
)	no	no
;	no	no
int	no	no
clientSocketTimeout	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CLIENT_SOCKET_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
clientAuthMode	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
usePasswordAuth	no	yes
=	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
clientAuthMode	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
attempt	no	no
=	no	no
0	no	no
;	no	no
!	no	no
isConnected	no	yes
&&	no	no
attempt	no	no
<	no	no
retries	no	no
;	no	no
++	no	no
attempt	no	no
)	no	no
{	no	no
for	no	no
(	no	no
URI	no	no
store	yes	no
:	no	no
metastoreUris	no	no
)	no	no
{	no	no

int	no	no
clientSocketTimeout	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CLIENT_SOCKET_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
clientAuthMode	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
usePasswordAuth	no	yes
=	no	no
.	no	no
equalsIgnoreCase	no	yes
(	no	no
clientAuthMode	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
int	no	no
attempt	no	no
=	no	no
0	no	no
;	no	no
!	no	no
isConnected	no	no
&&	no	no
attempt	no	no
<	no	no
retries	no	no
;	no	no
++	no	no
attempt	no	no
)	no	no
{	no	no
for	no	no
(	no	no
URI	no	no
store	no	yes
:	no	no
metastoreUris	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
store	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
useSSL	no	no
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
trustStorePath	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
SSL_TRUSTSTORE_PATH	no	yes
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
trustStorePath	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
ConfVars	no	yes
.	no	no
SSL_TRUSTSTORE_PATH	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
trustStorePassword	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getPassword	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
SSL_TRUSTSTORE_PASSWORD	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
SecurityUtils	no	yes
.	no	no
getSSLSocket	no	yes
(	no	no
store	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
store	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
clientSocketTimeout	no	yes
,	no	no
trustStorePath	no	yes
,	no	no
trustStorePassword	no	yes
)	no	no
;	no	no
final	no	no
int	no	no
newCount	yes	yes
=	no	no
connCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
else	no	no
if	no	no
(	no	no
useSasl	no	no
)	no	no
{	no	no
try	no	no
{	no	no
HadoopThriftAuthBridge	no	yes
.	no	no
Client	no	yes
authBridge	no	yes
=	no	no
HadoopThriftAuthBridge	no	yes
.	no	no
getBridge	no	yes
(	no	no
)	no	no
.	no	no
createClient	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tokenSig	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
TOKEN_SIGNATURE	no	yes
)	no	no
;	no	no
tokenStrForm	no	yes
=	no	no
SecurityUtils	no	yes
.	no	no
getTokenStrForm	no	yes
(	no	no
tokenSig	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tokenStrForm	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
transport	no	yes
=	no	no
authBridge	no	yes
.	no	no
createClientTransport	no	yes
(	no	no
null	no	no
,	no	no
store	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
tokenStrForm	no	yes
,	no	no
transport	no	yes
,	no	no
MetaStoreUtils	no	yes
.	no	no
getMetaStoreSaslProperties	no	yes
(	no	no
conf	no	yes
,	no	no
useSSL	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
principalConfig	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
KERBEROS_PRINCIPAL	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
authBridge	no	yes
.	no	no
createClientTransport	no	yes
(	no	no
principalConfig	no	yes
,	no	no
store	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
null	no	no
,	no	no
transport	no	yes
,	no	no
MetaStoreUtils	no	yes
.	no	no
getMetaStoreSaslProperties	no	yes
(	no	no
conf	no	yes
,	no	no
useSSL	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ioe	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
ioe	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
transport	no	yes
=	no	no
authBridge	no	yes
.	no	no
createClientTransport	no	yes
(	no	no
null	no	no
,	no	no
store	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
tokenStrForm	no	yes
,	no	no
transport	no	yes
,	no	no
MetaStoreUtils	no	yes
.	no	no
getMetaStoreSaslProperties	no	yes
(	no	no
conf	no	yes
,	no	no
useSSL	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
principalConfig	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
KERBEROS_PRINCIPAL	no	yes
)	no	no
;	no	no
transport	no	yes
=	no	no
authBridge	no	yes
.	no	no
createClientTransport	no	yes
(	no	no
principalConfig	no	yes
,	no	no
store	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
,	no	no
null	no	no
,	no	no
transport	no	yes
,	no	no
MetaStoreUtils	no	yes
.	no	no
getMetaStoreSaslProperties	no	yes
(	no	no
conf	no	yes
,	no	no
useSSL	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ioe	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
ioe	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
useFramedTransport	no	no
)	no	no
{	no	no
transport	no	yes
=	no	no
new	no	no
TFramedTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
final	no	no
TProtocol	no	yes
protocol	no	yes
;	no	no
if	no	no
(	no	no
useCompactProtocol	no	no
)	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TCompactProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
useFramedTransport	no	no
)	no	no
{	no	no
transport	no	yes
=	no	no
new	no	no
TFramedTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
final	no	no
TProtocol	no	yes
protocol	no	yes
;	no	no
if	no	no
(	no	no
useCompactProtocol	no	no
)	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TCompactProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TBinaryProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
client	no	yes
=	no	no
new	no	no
ThriftHiveMetastore	no	yes
.	no	no
Client	no	yes
(	no	no
protocol	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
transport	no	yes
.	no	no
isOpen	no	no
(	no	no
)	no	no
)	no	no
{	no	no
transport	no	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
int	no	no
newCount	no	yes
=	no	no
connCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
,	no	no
store	yes	yes
,	no	no
newCount	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isTraceEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

tbl	no	yes
.	no	no
setCatName	no	yes
(	no	no
getDefaultCatalog	no	yes
(	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
HiveMetaHook	no	yes
hook	no	yes
=	no	no
getHook	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hook	no	yes
.	no	no
preCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
create_table_with_environment_context	no	yes
(	no	no
tbl	no	yes
,	no	no
envContext	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hook	no	yes
.	no	no
commitCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
&&	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
hook	no	yes
.	no	no
rollbackCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
dropDatabase	no	no
(	no	no
String	no	yes
catalogName	no	yes
,	no	no
String	no	yes
dbName	yes	yes
,	no	no
boolean	no	no
deleteData	no	yes
,	no	no
boolean	no	no
ignoreUnknownDb	no	no
,	no	no
boolean	no	no
cascade	no	no
)	no	no
throws	no	no
NoSuchObjectException	no	no
,	no	no
InvalidOperationException	no	no
,	no	no
MetaException	no	no
,	no	no
TException	no	no
{	no	no
try	no	no
{	no	no
getDatabase	no	yes
(	no	no
catalogName	no	yes
,	no	no
dbName	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
ignoreUnknownDb	no	no
)	no	no
{	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
dbNameWithCatalog	no	yes
=	no	no
prependCatalogToDbName	no	yes
(	no	no
catalogName	no	yes
,	no	no
dbName	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cascade	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
materializedViews	no	yes
=	no	no
getTables	no	yes
(	no	no
dbName	yes	yes
,	no	no
,	no	no
TableType	no	yes
.	no	no
MATERIALIZED_VIEW	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
table	no	yes
:	no	no
materializedViews	no	yes
)	no	no
{	no	no
dropTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
table	no	yes
,	no	no
deleteData	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tableNameList	no	yes
=	no	no
getAllTables	no	yes
(	no	no
dbName	yes	yes
)	no	no
;	no	no
int	no	no
tableCount	yes	yes
=	no	no
tableNameList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
maxBatchSize	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
BATCH_RETRIEVE_MAX	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
Database	no	yes
getDatabase	no	no
(	no	no
String	no	no
catalogName	no	yes
,	no	no
String	no	no
databaseName	no	yes
)	no	no
throws	no	no
TException	no	no
{	no	no
long	no	no
t1	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
GetDatabaseRequest	no	yes
request	no	yes
=	no	no
new	no	no
GetDatabaseRequest	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
databaseName	no	yes
!=	no	no
null	no	no
)	no	no
request	no	yes
.	no	no
setName	no	yes
(	no	no
databaseName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
catalogName	no	yes
!=	no	no
null	no	no
)	no	no
request	no	yes
.	no	no
setCatalogName	no	yes
(	no	no
catalogName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
request	no	yes
.	no	no
setProcessorCapabilities	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
processorIdentifier	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
request	no	yes
.	no	no
setProcessorIdentifier	no	yes
(	no	no
processorIdentifier	no	yes
)	no	no
;	no	no
}	no	no
Database	no	yes
d	no	yes
=	no	no
client	no	yes
.	no	no
get_database_req	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
return	no	no
deepCopy	no	yes
(	no	no
FilterUtils	no	yes
.	no	no
filterDbIfEnabled	no	yes
(	no	no
isClientFilterEnabled	no	yes
,	no	no
filterHook	no	yes
,	no	no
d	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
long	no	no
diff	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
t1	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
GetTableRequest	no	yes
req	no	yes
=	no	no
new	no	no
GetTableRequest	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setCatName	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setCapabilities	no	yes
(	no	no
version	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setGetColumnStats	no	yes
(	no	no
getColumnStats	no	yes
)	no	no
;	no	no
req	no	yes
.	no	no
setValidWriteIdList	no	yes
(	no	no
getValidWriteIdList	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
getColumnStats	no	yes
)	no	no
{	no	no
req	no	yes
.	no	no
setEngine	no	yes
(	no	no
engine	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
!=	no	no
null	no	no
)	no	no
req	no	yes
.	no	no
setProcessorCapabilities	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
processorIdentifier	no	yes
!=	no	no
null	no	no
)	no	no
req	no	yes
.	no	no
setProcessorIdentifier	no	yes
(	no	no
processorIdentifier	no	yes
)	no	no
;	no	no
Table	no	yes
t	no	yes
=	no	no
client	no	yes
.	no	no
get_table_req	no	yes
(	no	no
req	no	yes
)	no	no
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
deepCopy	no	yes
(	no	no
FilterUtils	no	yes
.	no	no
filterTableIfEnabled	no	yes
(	no	no
isClientFilterEnabled	no	yes
,	no	no
filterHook	no	yes
,	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
long	no	no
diff	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
t1	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

req	no	yes
.	no	no
setCapabilities	no	yes
(	no	no
version	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
validWriteIdList	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
req	no	yes
.	no	no
setValidWriteIdList	no	yes
(	no	no
validWriteIdList	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
req	no	yes
.	no	no
setValidWriteIdList	no	yes
(	no	no
getValidWriteIdList	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
req	no	yes
.	no	no
setGetColumnStats	no	yes
(	no	no
getColumnStats	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
getColumnStats	no	yes
)	no	no
{	no	no
req	no	yes
.	no	no
setEngine	no	yes
(	no	no
engine	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
!=	no	no
null	no	no
)	no	no
req	no	yes
.	no	no
setProcessorCapabilities	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
processorIdentifier	no	yes
!=	no	no
null	no	no
)	no	no
req	no	yes
.	no	no
setProcessorIdentifier	no	yes
(	no	no
processorIdentifier	no	yes
)	no	no
;	no	no
Table	no	yes
t	no	yes
=	no	no
client	no	yes
.	no	no
get_table_req	no	yes
(	no	no
req	no	yes
)	no	no
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
deepCopy	no	yes
(	no	no
FilterUtils	no	yes
.	no	no
filterTableIfEnabled	no	yes
(	no	no
isClientFilterEnabled	no	yes
,	no	no
filterHook	no	yes
,	no	no
t	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
long	no	no
diff	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
t1	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
InterfaceAudience	no	no
.	no	no
LimitedPrivate	no	no
(	no	no
{	no	no
}	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
NotificationEventResponse	no	yes
getNextNotification	no	no
(	no	no
long	no	no
lastEventId	no	yes
,	no	no
int	no	no
maxEvents	no	yes
,	no	no
NotificationFilter	no	no
filter	no	no
)	no	no
throws	no	no
TException	no	no
{	no	no
NotificationEventRequest	no	yes
rqst	no	yes
=	no	no
new	no	no
NotificationEventRequest	no	yes
(	no	no
lastEventId	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
setMaxEvents	no	yes
(	no	no
maxEvents	no	yes
)	no	no
;	no	no
NotificationEventResponse	no	yes
rsp	no	yes
=	no	no
client	no	yes
.	no	no
get_next_notification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rsp	no	yes
!=	no	no
null	no	no
?	no	no
rsp	no	yes
.	no	no
getEventsSize	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
filtered	no	yes
=	no	no
new	no	no
NotificationEventResponse	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rsp	no	yes
!=	no	no
null	no	no
&&	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
nextEventId	no	yes
=	no	no
lastEventId	no	yes
+	no	no
1	no	no
;	no	no
long	no	no
prevEventId	no	yes
=	no	no
lastEventId	no	yes
;	no	no
for	no	no
(	no	no
NotificationEvent	no	no
e	yes	no
:	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
InterfaceAudience	no	no
.	no	no
LimitedPrivate	no	no
(	no	no
{	no	no
}	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
NotificationEventResponse	no	yes
getNextNotification	no	no
(	no	no
long	no	no
lastEventId	no	yes
,	no	no
int	no	no
maxEvents	no	yes
,	no	no
NotificationFilter	no	no
filter	no	no
)	no	no
throws	no	no
TException	no	no
{	no	no
NotificationEventRequest	no	yes
rqst	no	yes
=	no	no
new	no	no
NotificationEventRequest	no	yes
(	no	no
lastEventId	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
setMaxEvents	no	yes
(	no	no
maxEvents	no	yes
)	no	no
;	no	no
NotificationEventResponse	no	yes
rsp	no	yes
=	no	no
client	no	yes
.	no	no
get_next_notification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rsp	no	yes
!=	no	no
null	no	no
?	no	no
rsp	no	yes
.	no	no
getEventsSize	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
filtered	no	yes
=	no	no
new	no	no
NotificationEventResponse	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rsp	no	yes
!=	no	no
null	no	no
&&	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
nextEventId	no	yes
=	no	no
lastEventId	no	yes
+	no	no
1	no	no
;	no	no
long	no	no
prevEventId	yes	yes
=	no	no
lastEventId	no	yes
;	no	no
for	no	no
(	no	no
NotificationEvent	no	no
e	no	yes
:	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
!=	no	no
nextEventId	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
==	no	no
prevEventId	yes	yes
)	no	no
{	no	no

NotificationEventRequest	no	yes
rqst	no	yes
=	no	no
new	no	no
NotificationEventRequest	no	yes
(	no	no
lastEventId	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
setMaxEvents	no	yes
(	no	no
maxEvents	no	yes
)	no	no
;	no	no
NotificationEventResponse	no	yes
rsp	no	yes
=	no	no
client	no	yes
.	no	no
get_next_notification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
rsp	no	yes
!=	no	no
null	no	no
?	no	no
rsp	no	yes
.	no	no
getEventsSize	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
filtered	no	yes
=	no	no
new	no	no
NotificationEventResponse	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rsp	no	yes
!=	no	no
null	no	no
&&	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
nextEventId	yes	yes
=	no	no
lastEventId	no	yes
+	no	no
1	no	no
;	no	no
long	no	no
prevEventId	no	yes
=	no	no
lastEventId	no	yes
;	no	no
for	no	no
(	no	no
NotificationEvent	no	no
e	yes	yes
:	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
!=	no	no
nextEventId	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
==	no	no
prevEventId	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
+	no	no
,	no	no
prevEventId	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
REPL_EVENTS_WITH_DUPLICATE_ID_IN_METASTORE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

public	no	no
static	no	no
synchronized	no	no
void	no	no
init	no	no
(	no	no
)	no	no
{	no	no
if	no	no
(	no	no
mscLocalCache	yes	yes
!=	no	no
null	no	no
)	no	no
return	no	no
;	no	no
Configuration	no	yes
metaConf	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
newMetastoreConf	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
MAX_SIZE	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getSizeVar	no	yes
(	no	no
metaConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSC_CACHE_MAX_SIZE	no	yes
)	no	no
;	no	no
IS_CACHE_ENABLED	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
metaConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSC_CACHE_ENABLED	no	yes
)	no	no
;	no	no
RECORD_STATS	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
metaConf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
MSC_CACHE_RECORD_STATS	no	yes
)	no	no
;	no	no
initSizeEstimator	no	yes
(	no	no
)	no	no
;	no	no
initCache	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
int	no	no
getWeight	no	no
(	no	no
CacheKey	no	no
key	no	yes
,	no	no
Object	no	no
val	no	yes
)	no	no
{	no	no
ObjectEstimator	no	yes
keySizeEstimator	no	yes
=	no	no
sizeEstimator	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ObjectEstimator	no	yes
valSizeEstimator	no	yes
=	no	no
sizeEstimator	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
.	no	no
IDENTIFIER	no	yes
.	no	no
valueClass	no	yes
)	no	no
;	no	no
int	no	no
keySize	yes	yes
=	no	no
keySizeEstimator	no	yes
.	no	no
estimate	no	yes
(	no	no
key	no	yes
,	no	no
sizeEstimator	no	yes
)	no	no
;	no	no
int	no	no
valSize	yes	yes
=	no	no
valSizeEstimator	no	yes
.	no	no
estimate	no	yes
(	no	no
val	no	yes
,	no	no
sizeEstimator	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
initCache	no	no
(	no	no
)	no	no
{	no	no
int	no	no
initSize	no	yes
=	no	no
100	no	no
;	no	no
Caffeine	no	no
<	no	no
CacheKey	no	no
,	no	no
Object	no	no
>	no	no
cacheBuilder	no	no
=	no	no
Caffeine	no	no
.	no	no
newBuilder	no	no
(	no	no
)	no	no
.	no	no
initialCapacity	no	no
(	no	no
initSize	no	yes
)	no	no
.	no	no
maximumWeight	no	no
(	no	no
MAX_SIZE	no	no
)	no	no
.	no	no
weigher	no	no
(	no	no
HiveMetaStoreClientWithLocalCache	no	no
::	no	no
getWeight	no	no
)	no	no
.	no	no
removalListener	no	no
(	no	no
(	no	no
key	yes	no
,	no	no
val	yes	no
,	no	no
cause	yes	no
)	no	no
->	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
authenticate	no	no
(	no	no
String	no	no
authUser	yes	no
,	no	no
String	no	no
authPassword	no	no
)	no	no
throws	no	no
AuthenticationException	no	no
{	no	no
if	no	no
(	no	no
!	no	no
userName	no	no
.	no	no
equals	no	no
(	no	no
authUser	yes	no
)	no	no
)	no	no
{	no	no

FileSystem	no	yes
fs	no	yes
=	no	no
path	yes	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
isDirectory	no	no
(	no	no
path	yes	yes
)	no	no
)	no	no
{	no	no
FileStatus	no	yes
[	no	no
]	no	no
files	no	yes
=	no	no
fs	no	yes
.	no	no
listStatus	no	yes
(	no	no
path	yes	yes
,	no	no
hiddenFileFilter	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
FileStatus	no	yes
file	no	yes
:	no	no
files	no	yes
)	no	no
{	no	no
count	no	yes
+=	no	no
recycle	no	yes
(	no	no
file	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
,	no	no
type	no	yes
,	no	no
ifPurge	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
fileCheckSum	no	yes
=	no	no
checksumFor	no	yes
(	no	no
path	yes	yes
,	no	no
fs	no	yes
)	no	no
;	no	no
Path	no	yes
cmPath	yes	yes
=	no	no
getCMPath	no	yes
(	no	no
conf	no	yes
,	no	no
path	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
fileCheckSum	no	yes
,	no	no
getCmRoot	no	yes
(	no	no
path	yes	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
setTimes	no	yes
(	no	no
path	yes	yes
,	no	no
now	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
cmPath	yes	yes
)	no	no
&&	no	no
fileCheckSum	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
checksumFor	no	yes
(	no	no
cmPath	yes	yes
,	no	no
fs	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
type	no	yes
)	no	no
{	no	no

fs	no	yes
.	no	no
setTimes	no	yes
(	no	no
path	yes	yes
,	no	no
now	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
cmPath	yes	yes
)	no	no
&&	no	no
fileCheckSum	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
checksumFor	no	no
(	no	no
cmPath	yes	yes
,	no	no
fs	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
switch	no	no
(	no	no
type	no	no
)	no	no
{	no	no
case	no	no
MOVE	no	no
:	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
path	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
cmPath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Retry	no	no
<	no	no
Boolean	no	no
>	no	no
retriable	no	yes
=	no	no
new	no	no
Retry	no	no
<	no	no
Boolean	no	no
>	no	no
(	no	no
IOException	no	no
.	no	no
class	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
Boolean	no	no
execute	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
return	no	no
fs	no	yes
.	no	no
rename	no	yes
(	no	no
path	yes	yes
,	no	no
cmPath	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
;	no	no
try	no	no
{	no	no
success	no	yes
=	no	no
retriable	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

}	no	no
}	no	no
;	no	no
try	no	no
{	no	no
success	no	yes
=	no	no
retriable	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
util	no	yes
.	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
}	no	no
case	no	no
COPY	no	no
:	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
path	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
cmPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
FileUtils	no	yes
.	no	no
copy	no	yes
(	no	no
fs	no	yes
,	no	no
path	yes	yes
,	no	no
fs	no	yes
,	no	no
cmPath	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
default	no	no
:	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
success	no	yes
)	no	no
{	no	no
fs	no	yes
.	no	no
setOwner	no	yes
(	no	no
cmPath	no	yes
,	no	no
msUser	no	yes
,	no	no
msGroup	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
fs	no	yes
.	no	no
setXAttr	no	yes
(	no	no
cmPath	no	yes
,	no	no
ORIG_LOC_TAG	no	yes
,	no	no
path	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
.	no	no
getBytes	no	yes
(	no	no
StandardCharsets	no	yes
.	no	no
UTF_8	no	yes
)	no	no
)	no	no
;	no	no

public	no	no
static	no	no
String	no	yes
getReplPolicyIdString	no	no
(	no	no
Database	no	no
db	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
db	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
m	no	yes
=	no	no
db	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
m	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
(	no	no
m	no	yes
.	no	no
containsKey	no	no
(	no	no
SOURCE_OF_REPLICATION	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
replPolicyId	yes	yes
=	no	no
m	no	yes
.	no	no
get	no	yes
(	no	no
SOURCE_OF_REPLICATION	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
storageAuthCheck	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
if	no	no
(	no	no
path	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
false	no	no
;	no	no
}	no	no
final	no	no
FileStatus	no	yes
stat	no	yes
;	no	no
final	no	no
FileSystem	no	yes
fs	no	yes
;	no	no
try	no	no
{	no	no
fs	no	yes
=	no	no
getFs	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no
stat	no	yes
=	no	no
fs	no	yes
.	no	no
getFileStatus	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no
HdfsUtils	no	yes
.	no	no
checkFileAccess	no	yes
(	no	no
fs	no	yes
,	no	no
stat	no	yes
,	no	no
FsAction	no	yes
.	no	no
WRITE	no	yes
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
FileNotFoundException	no	no
fnfe	no	no
)	no	no
{	no	no
return	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
classLoader	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
classLoader	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
class	no	no
.	no	no
getClassLoader	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
hiveDefaultURL	no	yes
=	no	no
classLoader	no	yes
.	no	no
getResource	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveSiteURL	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
hiveSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hiveSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
hiveSiteURL	no	yes
)	no	no
;	no	no
}	no	no
hiveMetastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveMetastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
hiveMetastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
metastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
metastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ConfVars	no	no
var	yes	no
:	no	no
ConfVars	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
System	no	no
.	no	no
getProperty	no	no
(	no	no
var	yes	no
.	no	no
varname	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

if	no	no
(	no	no
hiveSiteURL	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
hiveSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
hiveSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
hiveSiteURL	no	yes
)	no	no
;	no	no
}	no	no
hiveMetastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveMetastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
hiveMetastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
metastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
addResource	no	yes
(	no	no
metastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ConfVars	no	no
var	no	yes
:	no	no
ConfVars	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
var	no	yes
.	no	no
varname	no	yes
+	no	no
+	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
)	no	no
;	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
System	no	yes
.	no	no
getProperties	no	no
(	no	no
)	no	no
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
.	no	no
stream	no	no
(	no	no
)	no	no
.	no	no
filter	no	no
(	no	no
s	yes	no
->	no	no
s	yes	no
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
s	yes	no
->	no	no
{	no	no

hiveMetastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
hiveMetastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
addResource	no	yes
(	no	no
hiveMetastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
metastoreSiteURL	no	yes
=	no	no
findConfigFile	no	yes
(	no	no
classLoader	no	yes
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
metastoreSiteURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conf	yes	yes
.	no	no
addResource	no	yes
(	no	no
metastoreSiteURL	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ConfVars	no	no
var	no	yes
:	no	no
ConfVars	no	no
.	no	no
values	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
var	no	yes
.	no	no
varname	no	yes
+	no	no
+	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
)	no	no
;	no	no
conf	yes	yes
.	no	no
set	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
,	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
var	no	yes
.	no	no
varname	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
System	no	yes
.	no	no
getProperties	no	no
(	no	no
)	no	no
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
.	no	no
stream	no	no
(	no	no
)	no	no
.	no	no
filter	no	no
(	no	no
s	no	yes
->	no	no
s	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
.	no	no
forEach	no	no
(	no	no
s	no	yes
->	no	no
{	no	no
String	no	yes
v	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
+	no	no
v	no	yes
)	no	no
;	no	no
conf	yes	yes
.	no	no
set	no	yes
(	no	no
s	no	yes
,	no	no
v	no	yes
)	no	no
;	no	no
}	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	yes	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
URI	no	yes
jarUri	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
jarUri	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
class	no	no
.	no	no
getProtectionDomain	no	yes
(	no	no
)	no	no
.	no	no
getCodeSource	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
jarUri	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
jarUri	no	yes
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
name	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

result	yes	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	yes	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	yes	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
,	no	no
name	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
URI	no	yes
jarUri	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
jarUri	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
class	no	no
.	no	no
getProtectionDomain	no	yes
(	no	no
)	no	no
.	no	no
getCodeSource	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
toURI	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
jarUri	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	yes	yes
=	no	no
seeIfConfAtThisLocation	no	yes
(	no	no
new	no	no
File	no	yes
(	no	no
jarUri	no	yes
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
,	no	no
name	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
result	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
name	no	yes
)	no	no
;	no	no

private	no	no
SearchResultHandler	no	no
execute	no	no
(	no	no
Collection	no	no
<	no	no
String	no	no
>	no	no
baseDns	yes	no
,	no	no
Query	no	no
query	yes	no
)	no	no
{	no	no
List	no	yes
<	no	no
NamingEnumeration	no	yes
<	no	no
SearchResult	no	yes
>>	no	no
searchResults	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
DirContext	no	no
createDirContext	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	yes
principal	yes	yes
,	no	no
String	no	yes
password	no	yes
)	no	no
throws	no	no
NamingException	no	no
{	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
env	no	yes
=	no	no
new	no	no
Hashtable	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
ldapUrl	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
METASTORE_PLAIN_LDAP_URL	no	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
INITIAL_CONTEXT_FACTORY	no	yes
,	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
PROVIDER_URL	no	yes
,	no	no
ldapUrl	yes	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_AUTHENTICATION	no	yes
,	no	no
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_CREDENTIALS	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
env	no	yes
.	no	no
put	no	yes
(	no	no
Context	no	yes
.	no	no
SECURITY_PRINCIPAL	no	yes
,	no	no
principal	yes	yes
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	no
,	no	no
Configuration	no	no
conf	no	no
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	yes
,	no	no
Configuration	no	no
conf	no	no
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
boolean	no	no
result	no	yes
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
purge	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
moveToTrash	no	no
(	no	no
FileSystem	no	no
fs	no	yes
,	no	no
Path	no	no
f	yes	yes
,	no	no
Configuration	no	no
conf	no	yes
,	no	no
boolean	no	no
purge	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
boolean	no	no
result	no	yes
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
purge	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
=	no	no
Trash	no	yes
.	no	no
moveToAppropriateTrash	no	yes
(	no	no
fs	no	yes
,	no	no
f	yes	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
f	yes	yes
)	no	no
;	no	no
return	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
ioe	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
ioe	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
result	no	yes
=	no	no
fs	no	yes
.	no	no
delete	no	yes
(	no	no
f	yes	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
result	no	yes
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
copy	no	no
(	no	no
FileSystem	no	no
srcFS	no	yes
,	no	no
Path	no	no
src	no	yes
,	no	no
FileSystem	no	no
dstFS	no	no
,	no	no
Path	no	no
dst	no	no
,	no	no
boolean	no	no
deleteSource	no	no
,	no	no
boolean	no	no
overwrite	no	no
,	no	no
Configuration	no	no
conf	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
boolean	no	no
copied	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
triedDistcp	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
srcFS	no	yes
.	no	no
getUri	no	no
(	no	no
)	no	no
.	no	no
getScheme	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ContentSummary	no	yes
srcContentSummary	yes	yes
=	no	no
srcFS	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
src	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcContentSummary	yes	yes
.	no	no
getFileCount	no	no
(	no	no
)	no	no
>	no	no
MetastoreConf	no	no
.	no	no
getLongVar	no	no
(	no	no
conf	yes	no
,	no	no
ConfVars	yes	no
.	no	no
REPL_COPYFILE_MAXNUMFILES	no	no
)	no	no
&&	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	no
(	no	no
)	no	no
>	no	no
MetastoreConf	no	no
.	no	no
getLongVar	no	no
(	no	no
conf	yes	no
,	no	no
ConfVars	yes	no
.	no	no
REPL_COPYFILE_MAXSIZE	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
copy	no	no
(	no	no
FileSystem	no	no
srcFS	no	yes
,	no	no
Path	no	no
src	no	yes
,	no	no
FileSystem	no	no
dstFS	no	no
,	no	no
Path	no	no
dst	no	no
,	no	no
boolean	no	no
deleteSource	no	no
,	no	no
boolean	no	no
overwrite	no	no
,	no	no
Configuration	no	no
conf	yes	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
boolean	no	no
copied	no	yes
=	no	no
false	no	no
;	no	no
boolean	no	no
triedDistcp	no	yes
=	no	no
false	no	no
;	no	no
if	no	no
(	no	no
srcFS	no	yes
.	no	no
getUri	no	no
(	no	no
)	no	no
.	no	no
getScheme	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ContentSummary	no	yes
srcContentSummary	yes	yes
=	no	no
srcFS	no	yes
.	no	no
getContentSummary	no	yes
(	no	no
src	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcContentSummary	yes	yes
.	no	no
getFileCount	no	no
(	no	no
)	no	no
>	no	no
MetastoreConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	yes	yes
,	no	no
ConfVars	yes	yes
.	no	no
REPL_COPYFILE_MAXNUMFILES	no	no
)	no	no
&&	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
>	no	no
MetastoreConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	yes	yes
,	no	no
ConfVars	yes	yes
.	no	no
REPL_COPYFILE_MAXSIZE	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
srcContentSummary	yes	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
MetastoreConf	no	yes
.	no	no
getLongVar	no	yes
(	no	no
conf	yes	yes
,	no	no
ConfVars	yes	yes
.	no	no
REPL_COPYFILE_MAXSIZE	no	yes
)	no	no
+	no	no
)	no	no
;	no	no

public	no	no
static	no	no
boolean	no	no
mkdir	no	no
(	no	no
FileSystem	no	no
fs	no	no
,	no	no
Path	no	no
f	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
rename	no	no
(	no	no
FileSystem	no	no
srcFs	no	no
,	no	no
FileSystem	no	no
destFs	no	no
,	no	no
Path	no	no
srcPath	yes	no
,	no	no
Path	no	no
destPath	yes	no
)	no	no
throws	no	no
IOException	no	no
{	no	no

@	no	no
VisibleForTesting	no	no
static	no	no
void	no	no
checkFileAccess	no	no
(	no	no
FileSystem	no	no
fs	no	yes
,	no	no
FileStatus	no	no
stat	no	no
,	no	no
FsAction	no	no
action	yes	no
,	no	no
UserGroupInformation	no	no
ugi	no	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
String	no	yes
user	yes	yes
=	no	no
ugi	no	yes
.	no	no
getShortUserName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
groups	no	yes
=	no	no
ugi	no	yes
.	no	no
getGroupNames	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
groups	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
superGroupName	yes	yes
=	no	no
fs	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
if	no	no
(	no	no
arrayContains	no	no
(	no	no
groups	no	yes
,	no	no
superGroupName	yes	yes
)	no	no
)	no	no
{	no	no

aclEntries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
sourceStatus	no	yes
.	no	no
getAclEntries	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
removeBaseAclEntries	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
USER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getUserAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
GROUP	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getGroupAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
OTHER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getOtherAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recursion	no	no
)	no	no
{	no	no
fsShell	no	yes
.	no	no
setConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
group	no	yes
,	no	no
target	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
aclEntry	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	no
)	no	no
{	no	no

removeBaseAclEntries	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
USER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getUserAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
GROUP	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getGroupAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
aclEntries	no	yes
.	no	no
add	no	yes
(	no	no
newAclEntry	no	yes
(	no	no
AclEntryScope	no	yes
.	no	no
ACCESS	no	yes
,	no	no
AclEntryType	no	yes
.	no	no
OTHER	no	yes
,	no	no
sourcePerm	no	yes
.	no	no
getOtherAction	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
recursion	no	no
)	no	no
{	no	no
fsShell	no	yes
.	no	no
setConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
group	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
aclEntry	no	yes
=	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
aclEntries	no	yes
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
target	no	yes
+	no	no
+	no	no
)	no	no
;	no	no

run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
aclEntry	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
target	no	yes
+	no	no
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
e	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
permission	no	yes
=	no	no
Integer	no	yes
.	no	no
toString	no	yes
(	no	no
sourcePerm	no	yes
.	no	no
toShort	no	yes
(	no	no
)	no	no
,	no	no
8	no	no
)	no	no
;	no	no
run	no	yes
(	no	no
fsShell	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
permission	no	yes
,	no	no
target	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
group	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
group	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
targetGroup	no	no
==	no	no
null	no	no
||	no	no
!	no	no
group	no	yes
.	no	no
equals	no	no
(	no	no
targetGroup	no	no
)	no	no
)	no	no
{	no	no
fs	no	yes
.	no	no
setOwner	no	yes
(	no	no
target	no	yes
,	no	no
null	no	no
,	no	no
group	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
aclEnabled	no	no
)	no	no
{	no	no
if	no	no
(	no	no
null	no	no
!=	no	no
aclEntries	no	yes
)	no	no
{	no	no
fs	no	yes
.	no	no
setAcl	no	yes
(	no	no
target	no	yes
,	no	no
aclEntries	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
static	no	no
void	no	no
run	no	no
(	no	no
FsShell	no	no
shell	no	no
,	no	no
String	no	no
[	no	no
]	no	no
command	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

private	no	no
static	no	no
void	no	no
run	no	yes
(	no	no
FsShell	no	no
shell	no	yes
,	no	no
String	no	no
[	no	no
]	no	no
command	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
ArrayUtils	no	yes
.	no	no
toString	no	yes
(	no	no
command	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
retval	yes	yes
=	no	no
shell	no	yes
.	no	no
run	no	yes
(	no	no
command	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
void	no	no
logAndThrowMetaException	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
exInfo	yes	yes
=	no	no
+	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

params	no	yes
.	no	no
setKeyStore	no	yes
(	no	no
keyStorePath	no	yes
,	no	no
keyStorePassWord	no	yes
)	no	no
;	no	no
InetSocketAddress	no	yes
serverAddress	no	yes
;	no	no
if	no	no
(	no	no
hiveHost	no	yes
==	no	no
null	no	no
||	no	no
hiveHost	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hiveHost	no	yes
,	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
TServerSocket	no	yes
thriftServerSocket	no	yes
=	no	no
TSSLTransportFactory	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
portNum	no	yes
,	no	no
0	no	no
,	no	no
serverAddress	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
sslVersionBlacklistLocal	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
sslVersion	no	yes
:	no	no
sslVersionBlacklist	no	no
)	no	no
{	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
add	no	yes
(	no	no
sslVersion	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SSLServerSocket	no	yes
sslServerSocket	no	yes
=	no	no
(	no	no
SSLServerSocket	no	yes
)	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
enabledProtocols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
protocol	yes	no
:	no	no
sslServerSocket	no	yes
.	no	no
getEnabledProtocols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
contains	no	no
(	no	no
protocol	yes	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
serverAddress	no	yes
=	no	no
new	no	no
InetSocketAddress	no	yes
(	no	no
hiveHost	no	yes
,	no	no
portNum	no	yes
)	no	no
;	no	no
}	no	no
TServerSocket	no	yes
thriftServerSocket	no	yes
=	no	no
TSSLTransportFactory	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
portNum	no	yes
,	no	no
0	no	no
,	no	no
serverAddress	no	yes
.	no	no
getAddress	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
instanceof	no	no
SSLServerSocket	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
sslVersionBlacklistLocal	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
sslVersion	no	yes
:	no	no
sslVersionBlacklist	no	no
)	no	no
{	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
add	no	yes
(	no	no
sslVersion	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
SSLServerSocket	no	yes
sslServerSocket	yes	yes
=	no	no
(	no	no
SSLServerSocket	no	yes
)	no	no
thriftServerSocket	no	yes
.	no	no
getServerSocket	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
enabledProtocols	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
protocol	no	yes
:	no	no
sslServerSocket	yes	yes
.	no	no
getEnabledProtocols	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
sslVersionBlacklistLocal	no	yes
.	no	no
contains	no	no
(	no	no
protocol	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
protocol	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
enabledProtocols	no	yes
.	no	no
add	no	yes
(	no	no
protocol	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
sslServerSocket	yes	yes
.	no	no
setEnabledProtocols	no	yes
(	no	no
enabledProtocols	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
)	no	no
;	no	no

public	no	no
AggrColStats	no	no
get	no	yes
(	no	no
String	no	no
catName	no	yes
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tblName	no	yes
,	no	no
String	no	no
colName	no	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
partNames	no	no
)	no	no
{	no	no
Key	no	yes
key	yes	yes
=	no	no
new	no	no
Key	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
colName	no	yes
)	no	no
;	no	no
AggrColStatsList	no	yes
candidateList	no	yes
=	no	no
cacheStore	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
candidateList	no	yes
==	no	no
null	no	no
)	no	no
||	no	no
(	no	no
candidateList	no	yes
.	no	no
nodes	no	no
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no

public	no	no
AggrColStats	no	yes
get	no	yes
(	no	no
String	no	no
catName	no	yes
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tblName	no	yes
,	no	no
String	no	no
colName	no	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
partNames	no	yes
)	no	no
{	no	no
Key	no	yes
key	no	yes
=	no	no
new	no	no
Key	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
colName	no	yes
)	no	no
;	no	no
AggrColStatsList	no	yes
candidateList	no	yes
=	no	no
cacheStore	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
candidateList	no	yes
==	no	no
null	no	no
)	no	no
||	no	no
(	no	no
candidateList	no	yes
.	no	no
nodes	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
key	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
AggrColStats	no	yes
match	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
isLocked	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
isLocked	no	yes
=	no	no
candidateList	no	yes
.	no	no
readLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
maxReaderWaitTime	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isLocked	no	yes
)	no	no
{	no	no
match	no	yes
=	no	no
findBestMatch	no	yes
(	no	no
partNames	no	yes
,	no	no
candidateList	no	yes
.	no	no
nodes	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
match	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
candidateList	no	yes
.	no	no
updateLastAccessTime	no	yes
(	no	no
)	no	no
;	no	no
cacheHits	yes	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
key	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
AggrColStats	no	yes
match	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
isLocked	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
isLocked	no	yes
=	no	no
candidateList	no	yes
.	no	no
readLock	no	yes
.	no	no
tryLock	no	yes
(	no	no
maxReaderWaitTime	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isLocked	no	yes
)	no	no
{	no	no
match	no	yes
=	no	no
findBestMatch	no	yes
(	no	no
partNames	no	yes
,	no	no
candidateList	no	yes
.	no	no
nodes	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
match	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
candidateList	no	yes
.	no	no
updateLastAccessTime	no	yes
(	no	no
)	no	no
;	no	no
cacheHits	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
cacheHits	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
cacheMisses	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
getHitRatio	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
cacheMisses	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
isLocked	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Iterator	no	no
<	no	no
AggrColStats	no	no
>	no	no
listIterator	no	yes
=	no	no
nodes	no	no
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
listIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
node	no	yes
=	no	no
listIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isExpired	no	no
(	no	no
node	no	yes
)	no	no
)	no	no
{	no	no
listIterator	no	yes
.	no	no
remove	no	yes
(	no	no
)	no	no
;	no	no
numRemovedTTL	yes	yes
++	no	no
;	no	no
currentNodes	no	yes
.	no	no
getAndDecrement	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
isLocked	no	no
)	no	no
{	no	no
candidateList	no	yes
.	no	no
writeLock	no	yes
.	no	no
unlock	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Thread	no	yes
.	no	no
yield	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
getCurrentNodes	no	no
(	no	no
)	no	no
/	no	no
maxCacheNodes	no	no
>	no	no
cleanUntil	no	no
)	no	no
{	no	no
evictOneNode	no	yes
(	no	no
)	no	no
;	no	no

TTransportFactory	no	yes
getAuthTransFactory	no	no
(	no	no
boolean	no	no
useSSL	no	yes
,	no	no
Configuration	no	no
conf	no	yes
)	no	no
throws	no	no
LoginException	no	yes
{	no	no
TTransportFactory	no	yes
transportFactory	no	yes
;	no	no
TSaslServerTransport	no	yes
.	no	no
Factory	no	yes
serverTransportFactory	yes	yes
;	no	no
if	no	no
(	no	no
isSASLWithKerberizedHadoop	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
useFramedTransport	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
serverTransportFactory	yes	yes
=	no	no
saslServer	no	yes
.	no	no
createSaslServerTransportFactory	no	yes
(	no	no
MetaStoreUtils	no	yes
.	no	no
getMetaStoreSaslProperties	no	yes
(	no	no
conf	no	yes
,	no	no
useSSL	no	yes
)	no	no
)	no	no
;	no	no
transportFactory	no	yes
=	no	no
saslServer	no	yes
.	no	no
wrapTransportFactoryInClientUGI	no	yes
(	no	no
serverTransportFactory	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TTransportException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
KERBEROS	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
}	no	no
else	no	no
if	no	no
(	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
NONE	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
LDAP	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
PAM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CUSTOM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CONFIG	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
MetaStorePlainSaslHelper	no	yes
.	no	no
init	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
KERBEROS	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
}	no	no
else	no	no
if	no	no
(	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
NONE	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
LDAP	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
PAM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CUSTOM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CONFIG	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
MetaStorePlainSaslHelper	no	yes
.	no	no
init	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
authTypeStr	yes	yes
+	no	no
+	no	no
serverTransportFactory	no	yes
)	no	no
;	no	no
serverTransportFactory	no	yes
.	no	no
addServerDefinition	no	yes
(	no	no
,	no	no
authTypeStr	yes	yes
,	no	no
null	no	no
,	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
,	no	no
new	no	no
MetaStorePlainSaslHelper	no	yes
.	no	no
PlainServerCallbackHandler	no	yes
(	no	no
authTypeStr	yes	yes
,	no	no
conf	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AuthenticationException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
+	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
+	no	no
authTypeStr	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
NONE	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
LDAP	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
PAM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CUSTOM	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
||	no	no
authTypeStr	yes	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
AuthConstants	no	no
.	no	no
AuthTypes	no	no
.	no	no
CONFIG	no	no
.	no	no
getAuthName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
useFramedTransport	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
LoginException	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
executeSetUGI	no	no
)	no	no
{	no	no

else	no	no
{	no	no
files	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
RemoteIterator	no	yes
<	no	no
LocatedFileStatus	no	yes
>	no	no
iter	no	yes
=	no	no
fs	no	yes
.	no	no
listFiles	no	yes
(	no	no
path	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LocatedFileStatus	no	yes
lfs	no	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lfs	no	yes
.	no	no
isDirectory	no	yes
(	no	no
)	no	no
)	no	no
continue	no	no
;	no	no
files	no	yes
.	no	no
add	no	yes
(	no	no
lfs	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
Path	no	yes
file	yes	yes
:	no	no
files	no	yes
)	no	no
{	no	no
long	no	no
fileId	yes	yes
;	no	no
if	no	no
(	no	no
!	no	no
(	no	no
fs	no	yes
instanceof	no	no
DistributedFileSystem	no	yes
)	no	no
)	no	no
return	no	no
;	no	no
try	no	no
{	no	no
fileId	yes	yes
=	no	no
HdfsUtils	no	yes
.	no	no
getFileId	no	yes
(	no	no
fs	no	yes
,	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
file	yes	yes
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
ex	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
location	no	yes
+	no	no
+	no	no
fs	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no

if	no	no
(	no	no
!	no	no
partKeysPartiallyEqual	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
replDataLocationChanged	no	no
||	no	no
(	no	no
rename	no	no
&&	no	no
!	no	no
oldt	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TableType	no	no
.	no	no
VIRTUAL_VIEW	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
compareTo	no	no
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
==	no	no
0	no	no
||	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
MetaStoreUtils	no	no
.	no	no
isExternalTable	no	no
(	no	no
oldt	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
srcPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replDataLocationChanged	no	no
)	no	no
{	no	no
destPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dataWasMoved	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
oldtRelativePath	no	yes
=	no	no
wh	no	yes
.	no	no
getDatabasePath	no	yes
(	no	no
olddb	no	yes
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
relativize	no	yes
(	no	no
srcPath	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
tableInSpecifiedLoc	no	yes
=	no	no
!	no	no
oldtRelativePath	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
name	yes	yes
)	no	no
&&	no	no
!	no	no
oldtRelativePath	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
name	yes	yes
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tableInSpecifiedLoc	no	yes
)	no	no
{	no	no
srcFs	no	yes
=	no	no
wh	no	yes
.	no	no
getFs	no	yes
(	no	no
srcPath	no	yes
)	no	no
;	no	no
Database	no	yes
db	no	yes
=	no	no
msdb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
catName	no	yes
,	no	no
newDbName	no	yes
)	no	no
;	no	no
assert	no	yes
(	no	no
isReplicated	no	yes
==	no	no
HiveMetaStore	no	yes
.	no	no
HMSHandler	no	yes
.	no	no
isDbReplicationTarget	no	yes
(	no	no
db	no	yes
)	no	no
)	no	no
;	no	no
Path	no	yes
databasePath	no	yes
=	no	no
constructRenamedPath	no	yes
(	no	no
wh	no	yes
.	no	no
getDatabasePath	no	yes
(	no	no
db	no	yes
)	no	no
,	no	no
srcPath	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
replDataLocationChanged	no	no
||	no	no
(	no	no
rename	no	no
&&	no	no
!	no	no
oldt	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TableType	no	no
.	no	no
VIRTUAL_VIEW	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
compareTo	no	no
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
==	no	no
0	no	no
||	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
MetaStoreUtils	no	no
.	no	no
isExternalTable	no	no
(	no	no
oldt	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
srcPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
replDataLocationChanged	no	no
)	no	no
{	no	no
destPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dataWasMoved	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
oldtRelativePath	no	yes
=	no	no
wh	no	yes
.	no	no
getDatabasePath	no	yes
(	no	no
olddb	no	yes
)	no	no
.	no	no
toUri	no	yes
(	no	no
)	no	no
.	no	no
relativize	no	yes
(	no	no
srcPath	no	yes
.	no	no
toUri	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
tableInSpecifiedLoc	no	yes
=	no	no
!	no	no
oldtRelativePath	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
name	yes	yes
)	no	no
&&	no	no
!	no	no
oldtRelativePath	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
name	yes	yes
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
tableInSpecifiedLoc	no	yes
)	no	no
{	no	no
srcFs	no	yes
=	no	no
wh	no	yes
.	no	no
getFs	no	yes
(	no	no
srcPath	no	yes
)	no	no
;	no	no
Database	no	yes
db	no	yes
=	no	no
msdb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
catName	yes	yes
,	no	no
newDbName	yes	yes
)	no	no
;	no	no
assert	no	yes
(	no	no
isReplicated	no	yes
==	no	no
HiveMetaStore	no	yes
.	no	no
HMSHandler	no	yes
.	no	no
isDbReplicationTarget	no	yes
(	no	no
db	no	yes
)	no	no
)	no	no
;	no	no
Path	no	yes
databasePath	no	yes
=	no	no
constructRenamedPath	no	yes
(	no	no
wh	no	yes
.	no	no
getDatabasePath	no	yes
(	no	no
db	no	yes
)	no	no
,	no	no
srcPath	no	yes
)	no	no
;	no	no
destPath	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
databasePath	no	yes
,	no	no
newTblName	yes	yes
)	no	no
;	no	no
destFs	no	yes
=	no	no
wh	no	yes
.	no	no
getFs	no	yes
(	no	no
destPath	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
isPartitionedTable	no	no
)	no	no
{	no	no
boolean	no	no
runPartitionMetadataUpdate	no	yes
=	no	no
(	no	no
cascade	no	yes
&&	no	no
!	no	no
MetaStoreServerUtils	no	yes
.	no	no
areSameColumns	no	yes
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
,	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
runPartitionMetadataUpdate	no	yes
|=	no	no
!	no	no
cascade	no	yes
&&	no	no
!	no	no
MetaStoreServerUtils	no	yes
.	no	no
arePrefixColumns	no	yes
(	no	no
oldt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
,	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
boolean	no	no
retainOnColRemoval	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
handler	no	yes
.	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
COLSTATS_RETAIN_ON_COLUMN_REMOVAL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
runPartitionMetadataUpdate	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
cascade	no	yes
||	no	no
retainOnColRemoval	no	yes
)	no	no
{	no	no
parts	no	yes
=	no	no
msdb	no	yes
.	no	no
getPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
part	no	yes
:	no	no
parts	no	yes
)	no	no
{	no	no
Partition	no	yes
oldPart	no	yes
=	no	no
new	no	no
Partition	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
FieldSchema	no	yes
>	no	no
oldCols	no	yes
=	no	no
part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
;	no	no
part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setCols	no	yes
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
updateOrGetPartitionColumnStats	no	yes
(	no	no
msdb	no	yes
,	no	no
catName	no	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
oldCols	no	yes
,	no	no
oldt	no	yes
,	no	no
part	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
colStats	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cascade	no	yes
)	no	no
{	no	no
msdb	no	yes
.	no	no
alterPartition	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
part	no	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
runPartitionMetadataUpdate	no	no
)	no	no
{	no	no
if	no	no
(	no	no
cascade	no	no
||	no	no
retainOnColRemoval	no	no
)	no	no
{	no	no
parts	no	yes
=	no	no
msdb	no	yes
.	no	no
getPartitions	no	yes
(	no	no
catName	yes	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
part	no	yes
:	no	no
parts	no	yes
)	no	no
{	no	no
Partition	no	yes
oldPart	no	yes
=	no	no
new	no	no
Partition	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
FieldSchema	no	yes
>	no	no
oldCols	no	yes
=	no	no
part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
;	no	no
part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setCols	no	yes
(	no	no
newt	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatistics	no	yes
>	no	no
colStats	no	yes
=	no	no
updateOrGetPartitionColumnStats	no	yes
(	no	no
msdb	no	yes
,	no	no
catName	yes	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
oldCols	no	yes
,	no	no
oldt	no	yes
,	no	no
part	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
colStats	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cascade	no	no
)	no	no
{	no	no
msdb	no	yes
.	no	no
alterPartition	no	yes
(	no	no
catName	yes	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
part	no	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
oldPart	no	yes
.	no	no
setParameters	no	yes
(	no	no
part	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
msdb	no	yes
.	no	no
alterPartition	no	yes
(	no	no
catName	yes	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
oldPart	no	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no

String	no	yes
newPartLoc	no	yes
;	no	no
Path	no	yes
srcPath	no	yes
=	no	no
null	no	no
;	no	no
Path	no	yes
destPath	no	yes
=	no	no
null	no	no
;	no	no
FileSystem	no	yes
srcFs	no	yes
;	no	no
FileSystem	no	yes
destFs	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
dataWasMoved	no	yes
=	no	no
false	no	no
;	no	no
Database	no	yes
db	no	yes
;	no	no
try	no	no
{	no	no
msdb	no	yes
.	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
msdb	no	yes
.	no	no
getTable	no	yes
(	no	no
DEFAULT_CATALOG_NAME	no	yes
,	no	no
dbname	no	yes
,	no	no
name	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tbl	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
InvalidObjectException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
oldPart	no	yes
=	no	no
msdb	no	yes
.	no	no
getPartition	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
,	no	no
name	no	yes
,	no	no
part_vals	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	yes	no
)	no	no
{	no	no

try	no	no
{	no	no
check_part	no	yes
=	no	no
msdb	no	yes
.	no	no
getPartition	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
,	no	no
name	no	yes
,	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
check_part	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
check_part	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AlreadyExistsException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
name	no	yes
+	no	no
+	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
tbl	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TableType	no	no
.	no	no
EXTERNAL_TABLE	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
db	no	yes
=	no	no
msdb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
)	no	no
;	no	no
destPath	yes	yes
=	no	no
wh	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
destPath	yes	yes
=	no	no
constructRenamedPath	no	yes
(	no	no
destPath	yes	yes
,	no	no
new	no	no
Path	no	yes
(	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
destPath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

catch	no	no
(	no	no
NoSuchObjectException	no	no
e	yes	yes
)	no	no
{	no	no
check_part	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
check_part	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AlreadyExistsException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
name	no	yes
+	no	no
+	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
tbl	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TableType	no	no
.	no	no
EXTERNAL_TABLE	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
db	no	yes
=	no	no
msdb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
)	no	no
;	no	no
destPath	yes	yes
=	no	no
wh	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
destPath	yes	yes
=	no	no
constructRenamedPath	no	yes
(	no	no
destPath	yes	yes
,	no	no
new	no	no
Path	no	yes
(	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
destPath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
newPartLoc	no	yes
=	no	no
destPath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
oldPartLoc	no	yes
=	no	no
oldPart	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
check_part	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
AlreadyExistsException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
name	no	yes
+	no	no
+	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
tbl	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
TableType	no	no
.	no	no
EXTERNAL_TABLE	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
db	no	yes
=	no	no
msdb	no	yes
.	no	no
getDatabase	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
)	no	no
;	no	no
destPath	yes	yes
=	no	no
wh	no	yes
.	no	no
getPartitionPath	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
,	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
destPath	yes	yes
=	no	no
constructRenamedPath	no	yes
(	no	no
destPath	yes	yes
,	no	no
new	no	no
Path	no	yes
(	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
+	no	no
dbname	no	yes
+	no	no
+	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
destPath	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
newPartLoc	no	yes
=	no	no
destPath	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
oldPartLoc	no	yes
=	no	no
oldPart	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
oldPartLoc	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
newPartLoc	no	yes
)	no	no
;	no	no

throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
destParentPath	no	yes
)	no	no
;	no	no
}	no	no
wh	no	yes
.	no	no
renameDir	no	yes
(	no	no
srcPath	yes	yes
,	no	no
destPath	yes	yes
,	no	no
ReplChangeManager	no	yes
.	no	no
shouldEnableCm	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
+	no	no
)	no	no
;	no	no
dataWasMoved	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
+	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	yes
me	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
,	no	no
me	no	yes
)	no	no
;	no	no
throw	no	no
me	no	yes
;	no	no
}	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
newPartLoc	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
oldPart	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetaStoreServerUtils	no	yes
.	no	no
requireCalStats	no	no
(	no	no
oldPart	no	yes
,	no	no
new_part	no	yes
,	no	no
tbl	no	yes
,	no	no
environmentContext	no	yes
)	no	no
)	no	no
{	no	no
MetaStoreServerUtils	no	yes
.	no	no
updatePartitionStatsFast	no	yes
(	no	no
new_part	no	yes
,	no	no
tbl	no	yes
,	no	no
wh	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
,	no	no
environmentContext	no	yes
,	no	no
false	no	no
)	no	no
;	no	no

wh	no	yes
.	no	no
renameDir	no	yes
(	no	no
srcPath	yes	yes
,	no	no
destPath	yes	yes
,	no	no
ReplChangeManager	no	yes
.	no	no
shouldEnableCm	no	yes
(	no	no
db	no	yes
,	no	no
tbl	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
+	no	no
)	no	no
;	no	no
dataWasMoved	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidOperationException	no	yes
(	no	no
+	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
me	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
srcPath	yes	yes
+	no	no
+	no	no
destPath	yes	yes
,	no	no
me	no	yes
)	no	no
;	no	no
throw	no	no
me	no	yes
;	no	no
}	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
newPartLoc	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
new_part	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
oldPart	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetaStoreServerUtils	no	yes
.	no	no
requireCalStats	no	no
(	no	no
oldPart	no	yes
,	no	no
new_part	no	yes
,	no	no
tbl	no	yes
,	no	no
environmentContext	no	yes
)	no	no
)	no	no
{	no	no
MetaStoreServerUtils	no	yes
.	no	no
updatePartitionStatsFast	no	yes
(	no	no
new_part	no	yes
,	no	no
tbl	no	yes
,	no	no
wh	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
,	no	no
environmentContext	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
newPartName	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
tbl	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
new_part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

if	no	no
(	no	no
cli	no	no
.	no	no
isVerbose	no	no
(	no	no
)	no	no
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
Object	no	no
,	no	no
Object	no	no
>	no	no
item	no	yes
:	no	no
hiveconf	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
item	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
(	no	no
String	no	yes
)	no	no
item	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
ConfVars	no	yes
.	no	no
THRIFT_URIS	no	yes
.	no	no
getHiveName	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
shutdownHookMgr	no	no
.	no	no
addShutdownHook	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
shutdownMsg	no	yes
=	no	no
;	no	no
HMSHandler	no	yes
.	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
shutdownMsg	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isCliVerbose	no	no
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
shutdownMsg	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
METRICS_ENABLED	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Metrics	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

shutdownHookMgr	no	no
.	no	no
addShutdownHook	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
String	no	yes
shutdownMsg	no	yes
=	no	no
;	no	no
HMSHandler	no	yes
.	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
shutdownMsg	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isCliVerbose	no	no
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
shutdownMsg	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	no
,	no	no
ConfVars	no	no
.	no	no
METRICS_ENABLED	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Metrics	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
{	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getVar	no	no
(	no	no
conf	no	no
,	no	no
ConfVars	no	no
.	no	no
THRIFT_SERVICE_DISCOVERY_MODE	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
zooKeeperHelper	no	yes
.	no	no
removeServerInstanceFromZooKeeper	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

private	no	no
static	no	no
boolean	no	no
isMetastoreHousekeepingLeader	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
String	no	yes
serverHost	no	no
)	no	no
{	no	no
String	no	yes
leaderHost	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	yes	yes
.	no	no
METASTORE_HOUSEKEEPING_LEADER_HOSTNAME	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
leaderHost	no	yes
==	no	no
null	no	no
||	no	no
leaderHost	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

pauseMonitor	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
+	no	no
,	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
while	no	no
(	no	no
!	no	no
startedServing	no	no
.	no	no
get	no	no
(	no	no
)	no	no
)	no	no
{	no	no
startCondition	no	yes
.	no	no
await	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isLeader	no	no
)	no	no
{	no	no
startCompactorInitiator	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
startCompactorCleaner	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
startRemoteOnlyTasks	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
startStatsUpdater	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
HiveMetaStore	no	yes
.	no	no
HMSHandler	no	yes
.	no	no
startAlwaysTaskThreads	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getVar	no	no
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_METASTORE_RUNWORKER_IN	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
startCompactorWorkers	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
startupShutdownMessage	no	no
(	no	no
Class	no	no
<	no	no
?	no	no
>	no	no
clazz	no	yes
,	no	no
String	no	yes
[	no	no
]	no	no
args	no	no
,	no	no
final	no	no
org	no	no
.	no	no
slf4j	no	no
.	no	no
Logger	no	no
LOG	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
hostname	no	yes
=	no	no
getHostname	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
classname	yes	yes
=	no	no
clazz	no	yes
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
;	no	no

}	no	no
fs	no	yes
=	no	no
partPath	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
CheckResult	no	yes
.	no	no
PartitionResult	no	yes
prFromMetastore	no	yes
=	no	no
new	no	no
CheckResult	no	yes
.	no	no
PartitionResult	no	yes
(	no	no
)	no	no
;	no	no
prFromMetastore	no	yes
.	no	no
setPartitionName	no	yes
(	no	no
getPartitionName	no	yes
(	no	no
table	no	yes
,	no	no
partition	yes	yes
)	no	no
)	no	no
;	no	no
prFromMetastore	no	yes
.	no	no
setTableName	no	yes
(	no	no
partition	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
fs	no	yes
.	no	no
exists	no	no
(	no	no
partPath	no	yes
)	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
getPartitionsNotOnFs	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
prFromMetastore	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
.	no	no
getCorrectPartitions	no	yes
(	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
prFromMetastore	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partitionExpirySeconds	yes	no
>	no	no
0	no	no
)	no	no
{	no	no
long	no	no
currentEpochSecs	yes	yes
=	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
getEpochSecond	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
createdTime	yes	yes
=	no	no
partition	yes	yes
.	no	no
getCreateTime	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
partitionAgeSeconds	yes	yes
=	no	no
currentEpochSecs	yes	yes
-	no	no
createdTime	yes	yes
;	no	no
if	no	no
(	no	no
partitionAgeSeconds	yes	yes
>	no	no
partitionExpirySeconds	yes	no
)	no	no
{	no	no
CheckResult	no	yes
.	no	no
PartitionResult	no	yes
pr	yes	yes
=	no	no
new	no	no
CheckResult	no	yes
.	no	no
PartitionResult	no	yes
(	no	no
)	no	no
;	no	no
pr	yes	yes
.	no	no
setPartitionName	no	yes
(	no	no
getPartitionName	no	yes
(	no	no
table	no	yes
,	no	no
partition	yes	yes
)	no	no
)	no	no
;	no	no

String	no	yes
visParts	no	yes
[	no	no
]	no	no
=	no	no
folder	no	yes
.	no	no
split	no	yes
(	no	no
VISIBILITY_PREFIX	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
visParts	no	yes
.	no	no
length	no	yes
>	no	no
1	no	no
)	no	no
{	no	no
visibilityId	no	yes
=	no	no
Long	no	yes
.	no	no
parseLong	no	yes
(	no	no
visParts	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
;	no	no
folder	no	yes
=	no	no
visParts	no	yes
[	no	no
0	no	no
]	no	no
;	no	no
}	no	no
if	no	no
(	no	no
folder	no	yes
.	no	no
startsWith	no	yes
(	no	no
BASE_PREFIX	no	yes
)	no	no
)	no	no
{	no	no
writeId	no	yes
=	no	no
Long	no	yes
.	no	no
parseLong	no	yes
(	no	no
folder	no	yes
.	no	no
substring	no	yes
(	no	no
BASE_PREFIX	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
folder	no	yes
.	no	no
startsWith	no	yes
(	no	no
DELTA_PREFIX	no	yes
)	no	no
||	no	no
folder	no	yes
.	no	no
startsWith	no	yes
(	no	no
DELETE_DELTA_PREFIX	no	yes
)	no	no
)	no	no
{	no	no
boolean	no	no
isDeleteDelta	no	yes
=	no	no
folder	no	yes
.	no	no
startsWith	no	yes
(	no	no
DELETE_DELTA_PREFIX	no	yes
)	no	no
;	no	no
String	no	yes
rest	no	yes
=	no	no
folder	no	yes
.	no	no
substring	no	yes
(	no	no
(	no	no
isDeleteDelta	no	yes
?	no	no
DELETE_DELTA_PREFIX	no	yes
:	no	no
DELTA_PREFIX	no	yes
)	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
nameParts	no	yes
=	no	no
rest	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
writeId	no	yes
=	no	no
Long	no	yes
.	no	no
parseLong	no	yes
(	no	no
nameParts	no	yes
.	no	no
length	no	yes
>	no	no
1	no	no
?	no	no
nameParts	no	yes
[	no	no
1	no	no
]	no	no
:	no	no
nameParts	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
writeId	no	yes
>	no	no
maxWriteId	yes	yes
)	no	no
{	no	no
maxWriteId	yes	yes
=	no	no
writeId	no	yes
;	no	no
}	no	no
if	no	no
(	no	no
visibilityId	no	yes
>	no	no
maxVisibilityId	yes	yes
)	no	no
{	no	no
maxVisibilityId	yes	yes
=	no	no
visibilityId	no	yes
;	no	no

@	no	no
VisibleForTesting	no	no
void	no	no
checkPartitionDirs	no	no
(	no	no
final	no	no
ExecutorService	no	no
executor	no	yes
,	no	no
final	no	no
Path	no	yes
basePath	no	yes
,	no	no
final	no	no
Set	no	no
<	no	no
Path	no	yes
>	no	no
result	no	yes
,	no	no
final	no	no
FileSystem	no	no
fs	no	yes
,	no	no
final	no	no
List	no	no
<	no	no
String	no	no
>	no	no
partColNames	no	yes
)	no	no
throws	no	no
MetastoreException	no	no
{	no	no
try	no	no
{	no	no
Queue	no	yes
<	no	no
Future	no	yes
<	no	no
Path	no	yes
>>	no	no
futures	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
ConcurrentLinkedQueue	no	yes
<	no	no
PathDepthInfo	no	yes
>	no	no
nextLevel	no	yes
=	no	no
new	no	no
ConcurrentLinkedQueue	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
nextLevel	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
PathDepthInfo	no	yes
(	no	no
basePath	no	yes
,	no	no
0	no	no
)	no	no
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
nextLevel	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ConcurrentLinkedQueue	no	yes
<	no	no
PathDepthInfo	no	yes
>	no	no
tempQueue	no	yes
=	no	no
new	no	no
ConcurrentLinkedQueue	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
!	no	no
nextLevel	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
futures	no	yes
.	no	no
add	no	yes
(	no	no
executor	no	yes
.	no	no
submit	no	yes
(	no	no
new	no	no
PathDepthInfoCallable	no	yes
(	no	no
nextLevel	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
,	no	no
partColNames	no	yes
,	no	no
fs	no	yes
,	no	no
tempQueue	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
!	no	no
futures	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
p	no	yes
=	no	no
futures	no	yes
.	no	no
poll	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
p	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
p	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
nextLevel	no	yes
=	no	no
tempQueue	no	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
trace	no	yes
(	no	no
+	no	no
queryTextDbParams	no	yes
+	no	no
+	no	no
params	no	yes
[	no	no
0	no	no
]	no	no
+	no	no
)	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
dbParams	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Object	no	yes
[	no	no
]	no	no
>	no	no
sqlResult2	no	yes
=	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
ensureList	no	yes
(	no	no
executeWithArray	no	yes
(	no	no
queryDbParams	no	yes
,	no	no
params	no	yes
,	no	no
queryTextDbParams	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
sqlResult2	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Object	no	yes
[	no	no
]	no	no
line	no	yes
:	no	no
sqlResult2	no	yes
)	no	no
{	no	no
dbParams	no	yes
.	no	no
put	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
line	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
,	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
line	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Database	no	yes
db	yes	yes
=	no	no
new	no	no
Database	no	yes
(	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setName	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
1	no	no
]	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setLocationUri	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
2	no	no
]	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setDescription	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
3	no	no
]	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setOwnerName	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
4	no	no
]	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
type	no	yes
=	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
5	no	no
]	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setOwnerType	no	yes
(	no	no
(	no	no
null	no	no
==	no	no
type	no	yes
||	no	no
type	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
?	no	no
null	no	no
:	no	no
PrincipalType	no	yes
.	no	no
valueOf	no	yes
(	no	no
type	no	yes
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setCatalogName	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlString	no	yes
(	no	no
dbline	no	yes
[	no	no
6	no	no
]	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setCreateTime	no	yes
(	no	no
MetastoreDirectSqlUtils	no	yes
.	no	no
extractSqlInt	no	yes
(	no	no
dbline	no	yes
[	no	no
7	no	no
]	no	no
)	no	no
)	no	no
;	no	no

partsFound	yes	yes
=	no	no
colStatsAggrCached	no	yes
.	no	no
getNumPartsCached	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
computePartsFound	no	yes
)	no	no
{	no	no
partsFound	yes	yes
=	no	no
partsFoundForPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partNames	no	yes
,	no	no
colNames	no	yes
,	no	no
engine	no	yes
)	no	no
;	no	no
computePartsFound	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
colNamesForDB	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
colNamesForDB	no	yes
.	no	no
add	no	yes
(	no	no
colName	no	yes
)	no	no
;	no	no
colStatsAggrFromDB	no	yes
=	no	no
columnStatisticsObjForPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partNames	no	yes
,	no	no
colNamesForDB	no	yes
,	no	no
engine	no	yes
,	no	no
partsFound	yes	yes
,	no	no
useDensityFunctionForNDVEstimation	yes	yes
,	no	no
ndvTuner	no	yes
,	no	no
enableBitVector	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
colStatsAggrFromDB	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ColumnStatisticsObj	no	yes
colStatsAggr	no	yes
=	no	no
colStatsAggrFromDB	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
colStatsList	yes	yes
.	no	no
add	no	yes
(	no	no
colStatsAggr	no	yes
)	no	no
;	no	no
aggrStatsCache	no	yes
.	no	no
add	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
colName	no	yes
,	no	no
partsFound	yes	yes
,	no	no
colStatsAggr	no	yes
,	no	no
bloomFilter	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no
partsFound	yes	yes
=	no	no
partsFoundForPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partNames	no	yes
,	no	no
colNames	no	yes
,	no	no
engine	no	yes
)	no	no
;	no	no
colStatsList	yes	yes
=	no	no
columnStatisticsObjForPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partNames	no	yes
,	no	no
colNames	no	yes
,	no	no
engine	no	yes
,	no	no
partsFound	yes	yes
,	no	no
useDensityFunctionForNDVEstimation	yes	yes
,	no	no
ndvTuner	no	yes
,	no	no
enableBitVector	no	yes
)	no	no
;	no	no

public	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
List	no	no
<	no	no
String	no	yes
>>	no	no
getColAndPartNamesWithStats	no	no
(	no	no
String	no	yes
catName	no	no
,	no	no
String	no	yes
dbName	no	no
,	no	no
String	no	yes
tableName	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
queryText	yes	yes
=	no	no
+	no	no
PARTITIONS	no	yes
+	no	no
+	no	no
PART_COL_STATS	no	yes
+	no	no
+	no	no
TBLS	no	yes
+	no	no
+	no	no
DBS	no	yes
+	no	no
+	no	no
TBLS	no	yes
+	no	no
+	no	no
DBS	no	yes
+	no	no
+	no	no
PARTITIONS	no	yes
+	no	no
+	no	no
TBLS	no	yes
+	no	no
+	no	no
PARTITIONS	no	yes
+	no	no
+	no	no
PART_COL_STATS	no	yes
+	no	no
+	no	no
PARTITIONS	no	yes
+	no	no
+	no	no
PART_COL_STATS	no	yes
+	no	no
+	no	no
DBS	no	yes
+	no	no
+	no	no
DBS	no	yes
+	no	no
+	no	no
TBLS	no	yes
+	no	no
+	no	no
PARTITIONS	no	yes
+	no	no
;	no	no

private	no	no
void	no	no
getStatsTableListResult	no	no
(	no	no
String	no	no
queryText	yes	no
,	no	no
List	no	no
<	no	no
org	no	no
.	no	no
apache	no	no
.	no	no
hadoop	no	no
.	no	no
hive	no	no
.	no	no
common	no	no
.	no	no
TableName	no	no
>	no	no
result	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Map	no	no
<	no	no
Table	no	no
,	no	no
List	no	no
<	no	no
String	no	no
>>	no	no
transform	no	no
(	no	no
List	no	no
<	no	no
Table	no	no
>	no	no
objects	yes	no
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
processorCapabilities	no	no
,	no	no
String	no	no
processorId	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Map	no	yes
<	no	no
Table	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
transform	no	no
(	no	no
List	no	yes
<	no	no
Table	no	yes
>	no	no
objects	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
processorCapabilities	no	no
,	no	no
String	no	yes
processorId	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
processorId	no	yes
+	no	no
+	no	no
objects	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Table	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
ret	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
Table	no	yes
,	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Table	no	yes
table	yes	yes
:	no	no
objects	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
generated	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
requiredReads	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
requiredWrites	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
defaultCatalog	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
table	yes	yes
.	no	no
getCatName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	yes	yes
,	no	no
generated	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tableType	yes	yes
=	no	no
table	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tCapabilities	yes	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
OBJCAPABILITIES	no	yes
)	no	no
;	no	no
int	no	no
numBuckets	yes	yes
=	no	no
table	yes	yes
.	no	no
isSetSd	no	yes
(	no	no
)	no	no
?	no	no
table	yes	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
:	no	no
0	no	no
;	no	no
boolean	no	no
isBucketed	yes	yes
=	no	no
(	no	no
numBuckets	yes	yes
>	no	no
0	no	no
)	no	no
?	no	no
true	no	no
:	no	no
false	no	no
;	no	no

generated	no	yes
.	no	no
addAll	no	yes
(	no	no
MQTLIST	no	yes
)	no	no
;	no	no
}	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
generated	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_NONE	yes	no
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
generated	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
continue	no	no
;	no	no
}	no	no
tCapabilities	no	yes
=	no	no
tCapabilities	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
requiredCapabilities	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
tCapabilities	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
tableType	no	yes
)	no	no
{	no	no
case	no	no
:	no	no
if	no	no
(	no	no
processorCapabilities	no	no
.	no	no
containsAll	no	no
(	no	no
requiredCapabilities	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tableType	no	yes
+	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READWRITE	no	yes
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
requiredCapabilities	no	yes
)	no	no
;	no	no
break	no	no
;	no	no

}	no	no
continue	no	no
;	no	no
}	no	no
tCapabilities	no	yes
=	no	no
tCapabilities	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
requiredCapabilities	yes	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
tCapabilities	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
tableType	no	yes
)	no	no
{	no	no
case	no	no
:	no	no
if	no	no
(	no	no
processorCapabilities	no	no
.	no	no
containsAll	no	no
(	no	no
requiredCapabilities	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tableType	no	yes
+	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READWRITE	no	yes
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
requiredCapabilities	yes	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
Table	no	yes
newTable	no	yes
=	no	no
new	no	no
Table	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
requiredCapabilities	yes	yes
.	no	no
contains	no	no
(	no	no
HIVEBUCKET2	no	no
)	no	no
&&	no	no
!	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEBUCKET2	no	no
)	no	no
)	no	no
{	no	no
StorageDescriptor	no	yes
newSd	no	yes
=	no	no
new	no	no
StorageDescriptor	no	yes
(	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
ACCEPTSUNMODIFIEDMETADATA	no	no
)	no	no
)	no	no
{	no	no
newSd	no	yes
.	no	no
setNumBuckets	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

tCapabilities	no	yes
=	no	no
tCapabilities	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
requiredCapabilities	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
tCapabilities	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
tableType	yes	yes
)	no	no
{	no	no
case	no	no
:	no	no
if	no	no
(	no	no
processorCapabilities	no	no
.	no	no
containsAll	no	no
(	no	no
requiredCapabilities	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
tableType	yes	yes
+	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READWRITE	no	yes
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
requiredCapabilities	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
Table	no	yes
newTable	no	yes
=	no	no
new	no	no
Table	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
requiredCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEBUCKET2	no	no
)	no	no
&&	no	no
!	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEBUCKET2	no	no
)	no	no
)	no	no
{	no	no
StorageDescriptor	no	yes
newSd	no	yes
=	no	no
new	no	no
StorageDescriptor	no	yes
(	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
ACCEPTSUNMODIFIEDMETADATA	no	no
)	no	no
)	no	no
{	no	no
newSd	no	yes
.	no	no
setNumBuckets	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
newTable	no	yes
.	no	no
setSd	no	yes
(	no	no
newSd	no	yes
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READONLY	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
missing	no	yes
=	no	no
diff	no	yes
(	no	no
requiredCapabilities	no	yes
,	no	no
processorCapabilities	no	yes
)	no	no
;	no	no
table	no	yes
.	no	no
setRequiredWriteCapabilities	no	yes
(	no	no
getWrites	no	yes
(	no	no
missing	no	yes
)	no	no
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
missing	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
txnal	no	no
!=	no	no
null	no	no
&&	no	no
txnal	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
txntype	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
TABLE_TRANSACTIONAL_PROPERTIES	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
hintList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
txntype	no	yes
!=	no	no
null	no	no
&&	no	no
txntype	no	yes
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
containsAll	no	no
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
)	no	no
||	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	yes	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READWRITE	no	yes
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
hintList	no	yes
)	no	no
;	no	no

table	yes	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READONLY	no	yes
)	no	no
;	no	no
table	yes	yes
.	no	no
setRequiredWriteCapabilities	no	yes
(	no	no
diff	no	yes
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
getWrites	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
hintList	no	yes
.	no	no
add	no	yes
(	no	no
HIVEMANAGEDINSERTWRITE	no	yes
)	no	no
;	no	no
hintList	no	yes
.	no	no
addAll	no	yes
(	no	no
diff	no	yes
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	yes	yes
,	no	no
hintList	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
CONNECTORREAD	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
table	yes	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READONLY	no	yes
)	no	no
;	no	no
table	yes	yes
.	no	no
setRequiredWriteCapabilities	no	yes
(	no	no
diff	no	yes
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
getWrites	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
hintList	no	yes
.	no	no
add	no	yes
(	no	no
CONNECTORREAD	no	yes
)	no	no
;	no	no
hintList	no	yes
.	no	no
addAll	no	yes
(	no	no
diff	no	yes
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
;	no	no
ret	no	yes
.	no	no
put	no	yes
(	no	no
table	yes	yes
,	no	no
hintList	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_NONE	no	yes
)	no	no
;	no	no
ret	yes	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
requiredCapabilities	no	yes
)	no	no
;	no	no
table	no	yes
.	no	no
setRequiredWriteCapabilities	no	yes
(	no	no
diff	no	yes
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
getWrites	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setRequiredReadCapabilities	no	yes
(	no	no
diff	no	yes
(	no	no
getReads	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
,	no	no
getReads	no	yes
(	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
containsAll	no	no
(	no	no
getWrites	no	yes
(	no	no
requiredCapabilities	no	yes
)	no	no
)	no	no
||	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
HIVEFULLACIDWRITE	no	yes
+	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
setAccessType	no	yes
(	no	no
ACCESSTYPE_READWRITE	no	yes
)	no	no
;	no	no
hintList	no	yes
.	no	no
add	no	yes
(	no	no
HIVEFULLACIDWRITE	no	yes
)	no	no
;	no	no
ret	yes	yes
.	no	no
put	no	yes
(	no	no
table	no	yes
,	no	no
hintList	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no

if	no	no
(	no	no
(	no	no
processorCapabilities	no	no
!=	no	no
null	no	no
&&	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
MANAGERAWMETADATA	no	no
)	no	no
)	no	no
||	no	no
!	no	no
defaultCatalog	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
table	no	yes
.	no	no
getCatName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
objects	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
processorId	no	yes
+	no	no
+	no	no
objects	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
ret	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
partBuckets	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
partition	no	yes
:	no	no
objects	no	yes
)	no	no
{	no	no
String	no	yes
tableName	no	yes
=	no	no
partition	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
partition	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
params	no	yes
==	no	no
null	no	no
)	no	no
params	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
tableType	no	yes
=	no	no
table	no	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tCapabilities	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
OBJCAPABILITIES	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
partBuckets	yes	yes
=	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
processorId	no	yes
+	no	no
+	no	no
objects	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
ret	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
partBuckets	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
partition	no	yes
:	no	no
objects	no	yes
)	no	no
{	no	no
String	no	yes
tableName	no	yes
=	no	no
partition	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
partition	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
params	no	yes
==	no	no
null	no	no
)	no	no
params	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
tableType	no	yes
=	no	no
table	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tCapabilities	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
OBJCAPABILITIES	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
partBuckets	no	yes
=	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getNumBuckets	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
partBuckets	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
partBuckets	no	yes
=	no	no
0	no	no
;	no	no

continue	no	no
;	no	no
}	no	no
switch	no	no
(	no	no
tableType	no	no
)	no	no
{	no	no
case	no	no
:	no	no
if	no	no
(	no	no
requiredCapabilities	no	no
.	no	no
contains	no	yes
(	no	no
HIVEBUCKET2	no	no
)	no	no
&&	no	no
!	no	no
processorCapabilities	no	yes
.	no	no
contains	no	yes
(	no	no
HIVEBUCKET2	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
newPartition	no	yes
=	no	no
new	no	no
Partition	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
StorageDescriptor	no	yes
newSd	no	yes
=	no	no
new	no	no
StorageDescriptor	no	yes
(	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
processorCapabilities	no	yes
.	no	no
contains	no	yes
(	no	no
ACCEPTSUNMODIFIEDMETADATA	no	yes
)	no	no
)	no	no
newSd	no	yes
.	no	no
setNumBuckets	no	yes
(	no	no
-	no	no
1	no	no
)	no	no
;	no	no
newPartition	no	yes
.	no	no
setSd	no	yes
(	no	no
newSd	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
ret	yes	yes
.	no	no
add	no	yes
(	no	no
newPartition	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
case	no	no
:	no	no
String	no	no
txnal	no	no
=	no	no
params	no	no
.	no	no
get	no	no
(	no	no
TABLE_IS_TRANSACTIONAL	no	no
)	no	no
;	no	no
if	no	no
(	no	no
txnal	no	no
==	no	no
null	no	no
||	no	no
txnal	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
processorCapabilities	no	yes
.	no	no
contains	no	yes
(	no	no
HIVEBUCKET2	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
newPartition	no	yes
=	no	no
new	no	no
Partition	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
StorageDescriptor	no	yes
newSd	no	yes
=	no	no
new	no	no
StorageDescriptor	no	yes
(	no	no
partition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
tableType	no	yes
=	no	no
newTable	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
txnal	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
txn_properties	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
isInsertAcid	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
Database	no	yes
db	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
db	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
get_database_core	no	yes
(	no	no
table	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
TableType	no	no
.	no	no
MANAGED_TABLE	no	no
.	no	no
name	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
tableType	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
txnal	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
TABLE_IS_TRANSACTIONAL	no	yes
)	no	no
;	no	no
txn_properties	no	yes
=	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
TABLE_TRANSACTIONAL_PROPERTIES	no	yes
)	no	no
;	no	no
isInsertAcid	no	yes
=	no	no
(	no	no
txn_properties	no	yes
!=	no	no
null	no	no
&&	no	no
txn_properties	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
TableType	no	yes
.	no	no
MANAGED_TABLE	no	no
.	no	no
name	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
tableType	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
txnal	no	yes
=	no	no
params	yes	yes
.	no	no
get	no	yes
(	no	no
TABLE_IS_TRANSACTIONAL	no	yes
)	no	no
;	no	no
txn_properties	no	yes
=	no	no
params	yes	yes
.	no	no
get	no	yes
(	no	no
TABLE_TRANSACTIONAL_PROPERTIES	no	yes
)	no	no
;	no	no
isInsertAcid	no	yes
=	no	no
(	no	no
txn_properties	no	yes
!=	no	no
null	no	no
&&	no	no
txn_properties	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
txnal	no	yes
==	no	no
null	no	no
||	no	no
txnal	no	yes
.	no	no
equalsIgnoreCase	no	yes
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
isInsertAcid	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
newTable	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
processorId	no	yes
)	no	no
;	no	no
newTable	no	yes
.	no	no
setTableType	no	yes
(	no	no
TableType	no	yes
.	no	no
EXTERNAL_TABLE	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
params	yes	yes
.	no	no
remove	no	yes
(	no	no
TABLE_IS_TRANSACTIONAL	no	yes
)	no	no
;	no	no
params	yes	yes
.	no	no
remove	no	yes
(	no	no
TABLE_TRANSACTIONAL_PROPERTIES	no	yes
)	no	no
;	no	no
params	yes	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
params	yes	yes
.	no	no
put	no	yes
(	no	no
EXTERNAL_TABLE_PURGE	no	yes
,	no	no
)	no	no
;	no	no
params	yes	yes
.	no	no
put	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
==	no	no
null	no	no
||	no	no
processorCapabilities	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
newTable	yes	yes
=	no	no
validateTablePaths	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isInsertAcid	no	no
)	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEMANAGEDINSERTWRITE	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
newTable	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
diff	no	yes
(	no	no
insertOnlyWriteList	no	yes
,	no	no
processorCapabilities	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
newTable	yes	yes
;	no	no
}	no	no
else	no	no
{	no	no

return	no	no
db	no	yes
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
processorId	no	yes
+	no	no
+	no	no
processorCapabilities	no	yes
+	no	no
,	no	no
db	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
db	no	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
,	no	no
db	no	yes
.	no	no
getManagedLocationUri	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
isTenantBasedStorage	no	no
)	no	no
{	no	no
Path	no	yes
locationPath	no	yes
=	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
db	no	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
whRootPath	no	yes
=	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
FileUtils	no	no
.	no	no
isSubdirectory	no	no
(	no	no
whRootPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
locationPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
!=	no	no
null	no	no
&&	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEMANAGEDINSERTWRITE	no	no
)	no	no
||	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
db	no	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
db	no	yes
.	no	no
setManagedLocationUri	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
db	no	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
extWhLocation	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultExternalDatabasePath	no	yes
(	no	no
db	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
extWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
db	no	yes
.	no	no
setLocationUri	no	yes
(	no	no
extWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	yes
!=	no	no
null	no	no
&&	no	no
(	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEMANAGEDINSERTWRITE	no	no
)	no	no
||	no	no
processorCapabilities	no	yes
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
mgdWhLocation	yes	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultDatabasePath	no	yes
(	no	no
db	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
isTenantBasedStorage	no	no
)	no	no
{	no	no
Path	no	yes
locationPath	no	yes
=	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
db	yes	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
whRootPath	no	yes
=	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
FileUtils	no	no
.	no	no
isSubdirectory	no	no
(	no	no
whRootPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
locationPath	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	no
!=	no	no
null	no	no
&&	no	no
(	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEMANAGEDINSERTWRITE	no	no
)	no	no
||	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
db	yes	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setManagedLocationUri	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
db	yes	yes
.	no	no
getLocationUri	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Path	no	yes
extWhLocation	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultExternalDatabasePath	no	yes
(	no	no
db	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
extWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setLocationUri	no	yes
(	no	no
extWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
processorCapabilities	no	no
!=	no	no
null	no	no
&&	no	no
(	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEMANAGEDINSERTWRITE	no	no
)	no	no
||	no	no
processorCapabilities	no	no
.	no	no
contains	no	no
(	no	no
HIVEFULLACIDWRITE	no	no
)	no	no
)	no	no
)	no	no
{	no	no
Path	no	yes
mgdWhLocation	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultDatabasePath	no	yes
(	no	no
db	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
mgdWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
db	yes	yes
.	no	no
setManagedLocationUri	no	yes
(	no	no
mgdWhLocation	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
diff	no	no
(	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
list1	yes	yes
,	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
list2	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
diffList	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
list2	no	yes
==	no	no
null	no	no
||	no	no
list2	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
list1	yes	yes
;	no	no
if	no	no
(	no	no
list1	yes	yes
==	no	no
null	no	no
||	no	no
list1	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
list2	no	yes
.	no	no
containsAll	no	yes
(	no	no
list1	yes	yes
)	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
diffList	yes	yes
.	no	no
addAll	no	yes
(	no	no
list2	no	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
diff	no	no
(	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
list1	no	yes
,	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
list2	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
diffList	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
list2	no	yes
==	no	no
null	no	no
||	no	no
list2	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
list1	no	yes
;	no	no
if	no	no
(	no	no
list1	no	yes
==	no	no
null	no	no
||	no	no
list1	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
list2	no	yes
.	no	no
containsAll	no	yes
(	no	no
list1	no	yes
)	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
diffList	yes	yes
.	no	no
addAll	no	yes
(	no	no
list2	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
diffList	yes	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
list1	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
diffList	yes	yes
.	no	no
retainAll	no	no
(	no	no
list1	no	yes
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
list2	no	yes
==	no	no
null	no	no
||	no	no
list2	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
list1	yes	yes
;	no	no
if	no	no
(	no	no
list1	yes	yes
==	no	no
null	no	no
||	no	no
list1	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
list2	no	yes
.	no	no
containsAll	no	yes
(	no	no
list1	yes	yes
)	no	no
)	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
diffList	yes	yes
.	no	no
addAll	no	yes
(	no	no
list2	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
diffList	yes	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
list1	yes	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
diffList	yes	yes
.	no	no
retainAll	no	no
(	no	no
list1	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
Arrays	no	yes
.	no	no
toString	no	yes
(	no	no
diffList	yes	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
diffList	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
list1	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
Collections	no	yes
.	no	no
emptyList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
list1	yes	yes
.	no	no
removeAll	no	yes
(	no	no
diffList	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
list1	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
list1	yes	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
list1	yes	yes
.	no	no
removeAll	no	yes
(	no	no
diffList	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
tableLocation	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Path	no	yes
path	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultTablePath	no	yes
(	no	no
db	no	yes
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
false	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
path	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
table	no	yes
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
tableLocation	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Path	no	yes
tablePath	no	yes
=	no	no
Path	no	yes
.	no	no
getPathWithoutSchemeAndAuthority	no	yes
(	no	no
new	no	no
Path	no	yes
(	no	no
tableLocation	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
FileUtils	no	no
.	no	no
isSubdirectory	no	no
(	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
tableLocation	yes	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
+	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
tableLocation	yes	yes
+	no	no
+	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
Path	no	yes
path	no	yes
=	no	no
hmsHandler	no	yes
.	no	no
getWh	no	yes
(	no	no
)	no	no
.	no	no
getDefaultManagedTablePath	no	yes
(	no	no
db	no	yes
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
setLocation	no	yes
(	no	no
path	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
else	no	no
{	no	no

private	no	no
boolean	no	no
closeTxn	no	no
(	no	no
String	no	no
qualifiedTableName	no	no
,	no	no
boolean	no	no
success	no	no
,	no	no
long	no	no
txnId	yes	no
)	no	no
{	no	no
boolean	no	no
ret	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
success	no	no
)	no	no
{	no	no
try	no	no
{	no	no

private	no	no
void	no	no
logResult	no	no
(	no	no
CheckResult	no	no
result	no	yes
)	no	no
{	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
TABLES_NOT_IN_METASTORE	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
result	no	yes
.	no	no
getTablesNotInMs	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
TABLES_MISSING_ON_FILESYSTEM	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
result	no	yes
.	no	no
getTablesNotOnFs	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
PARTITIONS_NOT_IN_METASTORE	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
result	no	yes
.	no	no
getPartitionsNotInMs	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
PARTITIONS_MISSING_FROM_FILESYSTEM	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
result	no	yes
.	no	no
getPartitionsNotOnFs	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
EXPIRED_PARTITIONS	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
result	no	yes
.	no	no
getExpiredPartitions	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no

FileSystem	no	yes
fs	no	yes
=	no	no
resFile	no	yes
.	no	no
getFileSystem	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
(	no	no
BufferedWriter	no	no
resultOut	no	yes
=	no	no
new	no	no
BufferedWriter	no	no
(	no	no
new	no	no
OutputStreamWriter	no	no
(	no	no
fs	no	yes
.	no	no
create	no	no
(	no	no
resFile	no	yes
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
firstWritten	no	yes
=	no	no
false	no	no
;	no	no
firstWritten	no	yes
|=	no	no
writeMsckResult	no	yes
(	no	no
result	no	yes
.	no	no
getTablesNotInMs	no	yes
(	no	no
)	no	no
,	no	no
TABLES_NOT_IN_METASTORE	no	yes
,	no	no
resultOut	no	yes
,	no	no
firstWritten	no	yes
)	no	no
;	no	no
firstWritten	no	yes
|=	no	no
writeMsckResult	no	yes
(	no	no
result	no	yes
.	no	no
getTablesNotOnFs	no	yes
(	no	no
)	no	no
,	no	no
TABLES_MISSING_ON_FILESYSTEM	no	yes
,	no	no
resultOut	no	yes
,	no	no
firstWritten	no	yes
)	no	no
;	no	no
firstWritten	no	yes
|=	no	no
writeMsckResult	no	yes
(	no	no
result	no	yes
.	no	no
getPartitionsNotInMs	no	yes
(	no	no
)	no	no
,	no	no
PARTITIONS_NOT_IN_METASTORE	no	yes
,	no	no
resultOut	no	yes
,	no	no
firstWritten	no	yes
)	no	no
;	no	no
firstWritten	no	yes
|=	no	no
writeMsckResult	no	yes
(	no	no
result	no	yes
.	no	no
getPartitionsNotOnFs	no	yes
(	no	no
)	no	no
,	no	no
PARTITIONS_MISSING_FROM_FILESYSTEM	no	yes
,	no	no
resultOut	no	yes
,	no	no
firstWritten	no	yes
)	no	no
;	no	no
firstWritten	no	yes
|=	no	no
writeMsckResult	no	yes
(	no	no
result	no	yes
.	no	no
getExpiredPartitions	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
EXPIRED_PARTITIONS_RETENTION	no	yes
,	no	no
partitionExpirySeconds	no	yes
)	no	no
,	no	no
resultOut	no	yes
,	no	no
firstWritten	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
rout	no	yes
:	no	no
repairOutput	no	no
)	no	no
{	no	no
if	no	no
(	no	no
firstWritten	no	yes
)	no	no
{	no	no
resultOut	no	yes
.	no	no
write	no	yes
(	no	no
terminator	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
firstWritten	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
resultOut	no	yes
.	no	no
write	no	yes
(	no	no
rout	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
LockRequest	no	no
createLockRequest	no	no
(	no	no
final	no	no
String	no	yes
dbName	yes	yes
,	no	no
final	no	no
String	no	yes
tableName	yes	yes
)	no	no
throws	no	no
TException	no	no
{	no	no
String	no	yes
username	yes	yes
=	no	no
getUserName	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
txnId	yes	yes
=	no	no
getMsc	no	yes
(	no	no
)	no	no
.	no	no
openTxn	no	yes
(	no	no
username	yes	yes
)	no	no
;	no	no
String	no	yes
agentInfo	yes	yes
=	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
LockRequestBuilder	no	yes
requestBuilder	no	yes
=	no	no
new	no	no
LockRequestBuilder	no	yes
(	no	no
agentInfo	yes	yes
)	no	no
;	no	no
requestBuilder	no	yes
.	no	no
setUser	no	yes
(	no	no
username	yes	yes
)	no	no
;	no	no
requestBuilder	no	yes
.	no	no
setTransactionId	no	yes
(	no	no
txnId	yes	yes
)	no	no
;	no	no
LockComponentBuilder	no	yes
lockCompBuilder	no	yes
=	no	no
new	no	no
LockComponentBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDbName	no	yes
(	no	no
dbName	yes	yes
)	no	no
.	no	no
setTableName	no	yes
(	no	no
tableName	yes	yes
)	no	no
.	no	no
setIsTransactional	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setExclusive	no	yes
(	no	no
)	no	no
.	no	no
setOperationType	no	yes
(	no	no
DataOperationType	no	yes
.	no	no
NO_TXN	no	yes
)	no	no
;	no	no
requestBuilder	no	yes
.	no	no
addLockComponent	no	yes
(	no	no
lockCompBuilder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
addMsgs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
currentBatchSize	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
CheckResult	no	no
.	no	no
PartitionResult	no	no
part	no	yes
:	no	no
batchWork	no	no
)	no	no
{	no	no
if	no	no
(	no	no
currentBatchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
break	no	no
;	no	no
}	no	no
Path	no	yes
tablePath	no	yes
=	no	no
MetaStoreServerUtils	no	yes
.	no	no
getPath	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
tablePath	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makeSpecFromName	no	yes
(	no	no
part	no	yes
.	no	no
getPartitionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Path	no	yes
location	no	yes
=	no	no
part	no	yes
.	no	no
getLocation	no	yes
(	no	no
tablePath	no	yes
,	no	no
partSpec	no	yes
)	no	no
;	no	no
Partition	no	yes
partition	no	yes
=	no	no
MetaStoreServerUtils	no	yes
.	no	no
createMetaPartitionObject	no	yes
(	no	no
table	no	yes
,	no	no
partSpec	no	yes
,	no	no
location	no	yes
)	no	no
;	no	no
partition	no	yes
.	no	no
setWriteId	no	yes
(	no	no
table	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partsToAdd	no	yes
.	no	no
add	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
lastBatch	no	yes
.	no	no
add	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
String	no	yes
msg	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
addMsgFormat	no	yes
,	no	no
part	no	yes
.	no	no
getPartitionName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
addMsgs	no	yes
.	no	no
add	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no

lastBatch	no	yes
.	no	no
add	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
dropMsgs	no	yes
.	no	no
add	no	yes
(	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
dropMsgFormat	no	yes
,	no	no
part	no	yes
.	no	no
getPartitionName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
currentBatchSize	no	yes
--	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Pair	no	yes
<	no	no
Integer	no	yes
,	no	no
byte	no	no
[	no	no
]	no	no
>>	no	no
partExprs	no	yes
=	no	no
getPartitionExpr	no	yes
(	no	no
dropParts	no	yes
)	no	no
;	no	no
metastoreClient	no	yes
.	no	no
dropPartitions	no	yes
(	no	no
table	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
partExprs	no	yes
,	no	no
dropOptions	no	yes
)	no	no
;	no	no
batchWork	no	yes
.	no	no
removeAll	no	yes
(	no	no
lastBatch	no	yes
)	no	no
;	no	no
repairOutput	no	yes
.	no	no
addAll	no	yes
(	no	no
dropMsgs	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
MetastoreException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
private	no	no
List	no	yes
<	no	no
Pair	no	yes
<	no	no
Integer	no	yes
,	no	no
byte	no	no
[	no	no
]	no	no
>>	no	no
getPartitionExpr	no	yes
(	no	no
final	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
parts	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
List	no	yes
<	no	no
Pair	no	yes
<	no	no
Integer	no	yes
,	no	no
byte	no	no
[	no	no
]	no	no
>>	no	no
expr	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
partName	yes	yes
=	no	no
parts	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makeSpecFromName	no	yes
(	no	no
partName	yes	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
filterPartitionsByExpr	no	no
(	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
partColumns	no	no
,	no	no
byte	no	no
[	no	no
]	no	no
expr	yes	yes
,	no	no
String	no	yes
defaultPartitionName	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
partitionNames	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
partExpr	no	yes
=	no	no
new	no	no
String	no	yes
(	no	no
expr	yes	yes
,	no	no
StandardCharsets	no	yes
.	no	no
UTF_8	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

String	no	yes
[	no	no
]	no	no
colAndValue	no	yes
=	no	no
part	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
key	no	yes
=	no	no
FileUtils	no	yes
.	no	no
unescapePathName	no	yes
(	no	no
colAndValue	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
;	no	no
String	no	yes
value	no	yes
=	no	no
FileUtils	no	yes
.	no	no
unescapePathName	no	yes
(	no	no
colAndValue	no	yes
[	no	no
1	no	no
]	no	no
.	no	no
substring	no	yes
(	no	no
1	no	no
,	no	no
colAndValue	no	yes
[	no	no
1	no	no
]	no	no
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
;	no	no
partValueSet	no	yes
.	no	no
add	no	yes
(	no	no
key	no	yes
+	no	no
+	no	no
value	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partNamesSeq	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
partition	no	yes
:	no	no
partitionNames	yes	yes
)	no	no
{	no	no
boolean	no	no
isMatch	no	yes
=	no	no
true	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
partnames	no	yes
=	no	no
partition	no	yes
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
part	no	yes
:	no	no
partnames	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
partValueSet	no	yes
.	no	no
contains	no	no
(	no	no
FileUtils	no	yes
.	no	no
unescapePathName	no	yes
(	no	no
part	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
isMatch	no	yes
=	no	no
false	no	no
;	no	no
break	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
isMatch	no	yes
)	no	no
{	no	no
partNamesSeq	no	yes
.	no	no
add	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
partitionNames	yes	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
private	no	no
void	no	no
initialize	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
pm	yes	yes
=	no	no
PersistenceManagerProvider	no	yes
.	no	no
getPersistenceManager	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
createCatalog	no	no
(	no	no
Catalog	no	no
cat	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
Catalog	no	no
getCatalog	no	no
(	no	no
String	no	no
catalogName	yes	no
)	no	no
throws	no	no
NoSuchObjectException	no	no
,	no	no
MetaException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
dropCatalog	no	no
(	no	no
String	no	no
catalogName	yes	no
)	no	no
throws	no	no
NoSuchObjectException	no	no
,	no	no
MetaException	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
dropDatabase	no	no
(	no	no
String	no	no
catName	yes	no
,	no	no
String	no	no
dbname	yes	no
)	no	no
throws	no	no
NoSuchObjectException	no	no
,	no	no
MetaException	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
dropType	no	no
(	no	no
String	no	no
typeName	yes	yes
)	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MType	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setUnique	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
MType	no	yes
type	no	yes
=	no	no
(	no	no
MType	no	yes
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
typeName	yes	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieve	no	yes
(	no	no
type	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
type	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pm	no	yes
.	no	no
deletePersistent	no	yes
(	no	no
type	no	yes
)	no	no
;	no	no
}	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JDOObjectNotFoundException	no	no
e	yes	no
)	no	no
{	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no

List	no	yes
<	no	no
MTablePrivilege	no	yes
>	no	no
tabGrants	no	yes
=	no	no
listAllTableGrants	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
tabGrants	no	yes
)	no	no
)	no	no
{	no	no
pm	no	yes
.	no	no
deletePersistentAll	no	yes
(	no	no
tabGrants	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
MTableColumnPrivilege	no	yes
>	no	no
tblColGrants	no	yes
=	no	no
listTableAllColumnGrants	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
tblColGrants	no	yes
)	no	no
)	no	no
{	no	no
pm	no	yes
.	no	no
deletePersistentAll	no	yes
(	no	no
tblColGrants	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
MPartitionPrivilege	no	yes
>	no	no
partGrants	no	yes
=	no	no
this	no	no
.	no	no
listTableAllPartitionGrants	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
partGrants	no	yes
)	no	no
)	no	no
{	no	no
pm	no	yes
.	no	no
deletePersistentAll	no	yes
(	no	no
partGrants	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
MPartitionColumnPrivilege	no	yes
>	no	no
partColGrants	no	yes
=	no	no
listTableAllPartitionColumnGrants	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
partColGrants	no	yes
)	no	no
)	no	no
{	no	no
pm	no	yes
.	no	no
deletePersistentAll	no	yes
(	no	no
partColGrants	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
deleteTableColumnStatistics	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
,	no	no
null	no	no
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchObjectException	no	no
e	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
isPartOfMaterializedView	no	no
(	no	no
String	no	yes
catName	no	no
,	no	no
String	no	yes
dbName	no	no
,	no	no
String	no	yes
tblName	no	no
)	no	no
{	no	no
boolean	no	no
committed	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
mViewList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
MCreationMetadata	no	yes
>	no	no
creationMetadata	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MCreationMetadata	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
Iterator	no	yes
<	no	no
MCreationMetadata	no	yes
>	no	no
iter	no	yes
=	no	no
creationMetadata	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iter	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
MCreationMetadata	no	yes
p	yes	yes
=	no	no
iter	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
MTable	no	yes
>	no	no
tables	no	yes
=	no	no
p	yes	yes
.	no	no
getTables	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
MTable	no	yes
table	yes	no
:	no	no
tables	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
dbName	no	no
.	no	no
equals	no	no
(	no	no
table	yes	no
.	no	no
getDatabase	no	no
(	no	no
)	no	no
.	no	no
getName	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
tblName	no	no
.	no	no
equals	no	no
(	no	no
table	yes	no
.	no	no
getTableName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

boolean	no	no
commited	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
TableMeta	no	yes
>	no	no
metas	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
filterBuilder	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
parameterVals	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
appendSimpleCondition	no	yes
(	no	no
filterBuilder	yes	yes
,	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
catName	no	yes
}	no	no
,	no	no
parameterVals	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
dbNames	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
dbNames	no	yes
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
appendPatternCondition	no	yes
(	no	no
filterBuilder	yes	yes
,	no	no
,	no	no
dbNames	no	yes
,	no	no
parameterVals	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
tableNames	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
tableNames	no	yes
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
appendPatternCondition	no	yes
(	no	no
filterBuilder	yes	yes
,	no	no
,	no	no
tableNames	no	yes
,	no	no
parameterVals	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
tableTypes	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
tableTypes	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
appendSimpleCondition	no	yes
(	no	no
filterBuilder	yes	yes
,	no	no
,	no	no
tableTypes	no	yes
.	no	no
toArray	no	yes
(	no	no
new	no	no
String	no	yes
[	no	no
0	no	no
]	no	no
)	no	no
,	no	no
parameterVals	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
AttachedMTableInfo	no	yes
getMTable	no	no
(	no	no
String	no	no
catName	yes	yes
,	no	no
String	no	no
db	yes	yes
,	no	no
String	no	no
table	yes	yes
,	no	no
boolean	no	no
retrieveCD	no	no
)	no	no
{	no	no
AttachedMTableInfo	no	yes
nmtbl	no	yes
=	no	no
new	no	no
AttachedMTableInfo	no	yes
(	no	no
)	no	no
;	no	no
MTable	no	yes
mtbl	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
commited	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
catName	yes	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
catName	yes	yes
)	no	no
;	no	no
db	yes	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
db	yes	yes
)	no	no
;	no	no
table	yes	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
table	yes	yes
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MTable	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setUnique	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
PartitionValuesResponse	no	yes
listPartitionValues	no	no
(	no	no
String	no	no
catName	no	yes
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tableName	no	yes
,	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
cols	no	yes
,	no	no
boolean	no	no
applyDistinct	no	yes
,	no	no
String	no	no
filter	no	yes
,	no	no
boolean	no	no
ascending	no	yes
,	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
order	no	no
,	no	no
long	no	no
maxParts	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
catName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
dbName	no	yes
=	no	no
dbName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
tableName	no	yes
=	no	no
tableName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
filter	no	yes
==	no	no
null	no	no
||	no	no
filter	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
PartitionValuesResponse	no	yes
response	no	yes
=	no	no
getDistinctValuesForPartitionsNoTxn	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
cols	no	yes
,	no	no
applyDistinct	no	yes
,	no	no
maxParts	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
response	no	yes
.	no	no
getPartitionValues	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
response	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
PartitionValuesResponse	no	yes
response	no	yes
=	no	no
extractPartitionNamesByFilter	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
filter	no	yes
,	no	no
cols	no	yes
,	no	no
ascending	no	yes
,	no	no
maxParts	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
response	no	yes
.	no	no
getPartitionValues	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
response	no	yes
.	no	no
getPartitionValues	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
response	no	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
t	yes	no
)	no	no
{	no	no

private	no	no
PartitionValuesResponse	no	no
extractPartitionNamesByFilter	no	no
(	no	no
String	no	no
catName	yes	no
,	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tableName	yes	no
,	no	no
String	no	no
filter	yes	no
,	no	no
List	no	no
<	no	no
FieldSchema	no	no
>	no	no
cols	yes	no
,	no	no
boolean	no	no
ascending	no	no
,	no	no
long	no	no
maxParts	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
NoSuchObjectException	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
MetaException	no	yes
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
filter	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partitionNames	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
partitions	no	yes
=	no	no
getPartitionsByFilter	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
filter	no	yes
,	no	no
(	no	no
short	no	no
)	no	no
maxParts	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partitions	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
partitionNames	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
partitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	no
partition	no	yes
:	no	no
partitions	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
tbl	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
partition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
partitionNames	yes	yes
.	no	no
add	no	yes
(	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
tbl	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
partition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
partitionNames	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
filter	no	yes
+	no	no
+	no	no
TableName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
ascending	no	no
)	no	no
{	no	no
partitionNames	yes	yes
.	no	no
sort	no	yes
(	no	no
Collections	no	yes
.	no	no
reverseOrder	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
PartitionValuesResponse	no	yes
response	no	yes
=	no	no
new	no	no
PartitionValuesResponse	no	yes
(	no	no
)	no	no
;	no	no
response	no	yes
.	no	no
setPartitionValues	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
partitionNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
catName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
dbName	no	yes
=	no	no
dbName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
tableName	no	yes
=	no	no
tableName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
MTable	no	yes
mtable	no	yes
=	no	no
getMTable	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
mtable	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
partNames	no	yes
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
params	yes	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
queryFilterString	no	yes
=	no	no
makeQueryFilterString	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
mtable	no	yes
,	no	no
filter	no	yes
,	no	no
params	yes	yes
)	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
+	no	no
+	no	no
queryFilterString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
maxParts	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
setRange	no	yes
(	no	no
0	no	no
,	no	no
maxParts	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filter	no	yes
,	no	no
queryFilterString	no	yes
)	no	no
;	no	no

Query	no	yes
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
+	no	no
+	no	no
queryFilterString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
maxParts	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
setRange	no	yes
(	no	no
0	no	no
,	no	no
maxParts	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filter	no	yes
,	no	no
queryFilterString	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
String	no	yes
parameterDeclaration	no	yes
=	no	no
makeParameterDeclarationStringObj	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
parameterDeclaration	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ascending	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
setOrdering	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
query	no	yes
.	no	no
setOrdering	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
query	no	yes
.	no	no
setResult	no	yes
(	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
names	no	yes
=	no	no
(	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
executeWithMap	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
partNames	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
names	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

mparts	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
results	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Object	no	yes
[	no	no
]	no	no
row	no	yes
:	no	no
results	no	yes
)	no	no
{	no	no
MPartition	no	yes
mpart	no	yes
=	no	no
new	no	no
MPartition	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Object	no	yes
val	no	yes
:	no	no
row	no	yes
)	no	no
{	no	no
MetaStoreServerUtils	no	yes
.	no	no
setNestedProperty	no	yes
(	no	no
mpart	no	yes
,	no	no
fieldNames	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
val	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
;	no	no
}	no	no
mparts	yes	yes
.	no	no
add	no	yes
(	no	no
mpart	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
List	no	yes
<	no	no
Object	no	yes
>	no	no
results	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
Object	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
executeWithMap	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
mparts	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
results	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Object	no	yes
row	no	yes
:	no	no
results	no	yes
)	no	no
{	no	no
MPartition	no	yes
mpart	no	yes
=	no	no
new	no	no
MPartition	no	yes
(	no	no
)	no	no
;	no	no
MetaStoreServerUtils	no	yes
.	no	no
setNestedProperty	no	yes
(	no	no
mpart	no	yes
,	no	no
fieldNames	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
,	no	no
row	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
mparts	yes	yes
.	no	no
add	no	yes
(	no	no
mpart	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
dropPartitionsNoTxn	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
partNames	no	yes
)	no	no
{	no	no
Pair	no	yes
<	no	no
Query	no	yes
,	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
queryWithParams	no	yes
=	no	no
getPartQueryWithParams	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
partNames	no	yes
)	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
queryWithParams	no	yes
.	no	no
getLeft	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setClass	no	yes
(	no	no
MPartition	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
long	no	no
deleted	yes	yes
=	no	no
query	no	yes
.	no	no
deletePersistentAll	no	yes
(	no	no
queryWithParams	no	yes
.	no	no
getRight	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
Pair	no	no
<	no	no
Query	no	yes
,	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>>	no	no
getPartQueryWithParams	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
partNames	no	yes
)	no	no
{	no	no
Query	no	yes
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
filterStr	yes	yes
=	no	no
getJDOFilterStrForPartitionNames	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
partNames	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
query	no	yes
.	no	no
setFilter	no	yes
(	no	no
filterStr	yes	yes
)	no	no
;	no	no

openTransaction	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
catName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
dbName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
params	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
queryFilterString	no	yes
=	no	no
makeQueryFilterString	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
null	no	no
,	no	no
filter	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MTable	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareImports	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setResult	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setResultClass	no	yes
(	no	no
java	no	yes
.	no	no
lang	no	yes
.	no	no
String	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
if	no	no
(	no	no
maxTables	no	yes
>=	no	no
0	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
setRange	no	yes
(	no	no
0	no	no
,	no	no
maxTables	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
filter	no	yes
,	no	no
queryFilterString	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
Object	no	yes
>	no	no
entry	yes	no
:	no	no
params	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
isTxn	no	no
&&	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
String	no	yes
errorMsg	no	yes
=	no	no
verifyStatsChangeCtx	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbname	yes	yes
,	no	no
name	yes	yes
)	no	no
,	no	no
oldp	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
newPart	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
newPart	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
,	no	no
validWriteIds	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
errorMsg	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
oldp	yes	yes
.	no	no
setParameters	no	yes
(	no	no
newPart	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
TableType	no	no
.	no	no
VIRTUAL_VIEW	no	no
.	no	no
name	yes	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
oldp	yes	yes
.	no	no
getTable	no	no
(	no	no
)	no	no
.	no	no
getTableType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
copyMSD	no	yes
(	no	no
newp	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
,	no	no
oldp	yes	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newp	no	yes
.	no	no
getCreateTime	no	yes
(	no	no
)	no	no
!=	no	no
oldp	yes	yes
.	no	no
getCreateTime	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
oldp	yes	yes
.	no	no
setCreateTime	no	yes
(	no	no
newp	no	yes
.	no	no
getCreateTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newp	no	yes
.	no	no
getLastAccessTime	no	yes
(	no	no
)	no	no
!=	no	no
oldp	yes	yes
.	no	no
getLastAccessTime	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
oldp	yes	yes
.	no	no
setLastAccessTime	no	yes
(	no	no
newp	no	yes
.	no	no
getLastAccessTime	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
isTxn	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
StatsSetupConst	no	yes
.	no	no
setBasicStatsState	no	yes
(	no	no
oldp	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
StatsSetupConst	no	yes
.	no	no
FALSE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
validWriteIds	no	yes
!=	no	no
null	no	no
&&	no	no
newPart	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no

Ref	no	yes
<	no	no
MColumnDescriptor	no	yes
>	no	no
oldCdRef	no	yes
=	no	no
new	no	no
Ref	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
tmpPart	no	yes
:	no	no
newParts	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tmpPartVals	no	yes
=	no	no
part_val_itr	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
writeId	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
tmpPart	no	yes
.	no	no
setWriteId	no	yes
(	no	no
writeId	no	yes
)	no	no
;	no	no
}	no	no
oldCdRef	no	yes
.	no	no
t	no	yes
=	no	no
null	no	no
;	no	no
Partition	no	yes
result	no	yes
=	no	no
alterPartitionNoTxn	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	no	yes
,	no	no
name	no	yes
,	no	no
tmpPartVals	no	yes
,	no	no
tmpPart	no	yes
,	no	no
queryWriteIdList	no	yes
,	no	no
oldCdRef	no	yes
)	no	no
;	no	no
results	no	yes
.	no	no
add	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
oldCdRef	no	yes
.	no	no
t	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
oldCds	no	yes
.	no	no
add	no	yes
(	no	no
oldCdRef	no	yes
.	no	no
t	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
MColumnDescriptor	no	yes
oldCd	no	yes
:	no	no
oldCds	no	yes
)	no	no
{	no	no
removeUnusedColumnDescriptor	no	yes
(	no	no
oldCd	no	yes
)	no	no
;	no	no
}	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
exception	no	yes
)	no	no
{	no	no
e	yes	yes
=	no	no
exception	no	yes
;	no	no

private	no	no
String	no	yes
createDbGuidAndPersist	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
MMetastoreDBProperties	no	yes
prop	no	yes
=	no	no
new	no	no
MMetastoreDBProperties	no	yes
(	no	no
)	no	no
;	no	no
prop	no	yes
.	no	no
setPropertykey	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
guid	yes	yes
=	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
String	no	yes
createDbGuidAndPersist	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
MMetastoreDBProperties	no	yes
prop	no	yes
=	no	no
new	no	no
MMetastoreDBProperties	no	yes
(	no	no
)	no	no
;	no	no
prop	no	yes
.	no	no
setPropertykey	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
guid	yes	yes
=	no	no
UUID	no	yes
.	no	no
randomUUID	no	yes
(	no	no
)	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
guid	yes	yes
)	no	no
;	no	no
prop	no	yes
.	no	no
setPropertyValue	no	yes
(	no	no
guid	yes	yes
)	no	no
;	no	no
prop	no	yes
.	no	no
setDescription	no	yes
(	no	no
+	no	no
LocalDateTime	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
format	no	yes
(	no	no
DateTimeFormatter	no	yes
.	no	no
ofPattern	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
makePersistent	no	yes
(	no	no
prop	no	yes
)	no	no
;	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
success	no	yes
)	no	no
{	no	no

private	no	no
String	no	yes
getGuidFromDB	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MMetastoreDBProperties	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
names	no	yes
=	no	no
(	no	no
Collection	no	yes
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
uuids	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Iterator	no	no
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
i	no	yes
=	no	no
names	no	yes
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
String	no	yes
uuid	yes	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
.	no	no
getPropertyValue	no	yes
(	no	no
)	no	no
;	no	no

Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MMetastoreDBProperties	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
Collection	no	yes
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
names	no	yes
=	no	no
(	no	no
Collection	no	yes
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
uuids	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Iterator	no	no
<	no	no
MMetastoreDBProperties	no	yes
>	no	no
i	no	yes
=	no	no
names	no	yes
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
String	no	yes
uuid	no	yes
=	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
.	no	no
getPropertyValue	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
uuid	no	yes
)	no	no
;	no	no
uuids	yes	yes
.	no	no
add	no	yes
(	no	no
uuid	no	yes
)	no	no
;	no	no
}	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
uuids	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
uuids	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
MRoleMap	no	yes
>	no	no
listMSecurityPrincipalMembershipRole	no	no
(	no	no
final	no	no
String	no	no
roleName	no	yes
,	no	no
final	no	no
PrincipalType	no	no
principalType	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
this	no	no
.	no	no
currentTransaction	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
(	no	no
Query	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	no
(	no	no
MRoleMap	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
MRoleMap	no	yes
>	no	no
mRoleMemebership	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MRoleMap	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
roleName	no	yes
,	no	no
principalType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mRoleMemebership	yes	yes
)	no	no
;	no	no

throw	no	no
new	no	no
MetaException	no	yes
(	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
break	no	no
;	no	no
case	no	no
TABLE	no	no
:	no	no
grants	no	yes
=	no	no
listTableGrantsAll	no	no
(	no	no
catName	no	yes
,	no	no
objToRefresh	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
objToRefresh	no	yes
.	no	no
getObjectName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
case	no	no
COLUMN	no	no
:	no	no
Preconditions	no	no
.	no	no
checkArgument	no	no
(	no	no
objToRefresh	no	yes
.	no	no
getColumnName	no	no
(	no	no
)	no	no
==	no	no
null	no	no
,	no	no
)	no	no
;	no	no
grants	no	yes
=	no	no
getTableAllColumnGrants	no	yes
(	no	no
catName	no	yes
,	no	no
objToRefresh	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
objToRefresh	no	yes
.	no	no
getObjectName	no	yes
(	no	no
)	no	no
,	no	no
authorizer	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
objToRefresh	no	yes
.	no	no
getObjectType	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
revokePrivilegeSet	yes	yes
.	no	no
addAll	no	yes
(	no	no
grants	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
grantPrivileges	no	no
.	no	no
getPrivileges	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
HiveObjectPrivilege	no	no
grantPrivilege	no	yes
:	no	no
grantPrivileges	no	no
.	no	no
getPrivileges	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
revokePrivilegeSet	yes	yes
.	no	no
contains	no	no
(	no	no
grantPrivilege	no	yes
)	no	no
)	no	no
{	no	no
revokePrivilegeSet	yes	yes
.	no	no
remove	no	yes
(	no	no
grantPrivilege	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
grantPrivilegeSet	no	yes
.	no	no
add	no	yes
(	no	no
grantPrivilege	no	yes
)	no	no
;	no	no

default	no	no
:	no	no
throw	no	no
new	no	no
MetaException	no	no
(	no	no
+	no	no
objToRefresh	no	no
.	no	no
getObjectType	no	no
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
revokePrivilegeSet	no	yes
.	no	no
addAll	no	yes
(	no	no
grants	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
grantPrivileges	no	no
.	no	no
getPrivileges	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
HiveObjectPrivilege	no	no
grantPrivilege	no	yes
:	no	no
grantPrivileges	no	no
.	no	no
getPrivileges	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
revokePrivilegeSet	no	yes
.	no	no
contains	no	no
(	no	no
grantPrivilege	no	yes
)	no	no
)	no	no
{	no	no
revokePrivilegeSet	no	yes
.	no	no
remove	no	yes
(	no	no
grantPrivilege	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
grantPrivilegeSet	yes	yes
.	no	no
add	no	yes
(	no	no
grantPrivilege	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
revokePrivilegeSet	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
revokePrivilegeSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
PrivilegeBag	no	yes
remainingRevokePrivileges	no	yes
=	no	no
new	no	no
PrivilegeBag	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HiveObjectPrivilege	no	no
revokePrivilege	no	yes
:	no	no
revokePrivilegeSet	no	yes
)	no	no
{	no	no
remainingRevokePrivileges	no	yes
.	no	no
addToPrivileges	no	yes
(	no	no
revokePrivilege	no	yes
)	no	no
;	no	no
}	no	no
revokePrivileges	no	yes
(	no	no
remainingRevokePrivileges	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

private	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
listPrincipalAllDBGrant	no	no
(	no	no
String	no	no
principalName	no	yes
,	no	no
PrincipalType	no	no
principalType	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
final	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
mSecurityDBList	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
this	no	no
.	no	no
currentTransaction	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
principalName	no	yes
!=	no	no
null	no	no
&&	no	no
principalType	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
(	no	no
Query	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	no
(	no	no
MDBPrivilege	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
mSecurityDBList	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
principalName	no	yes
,	no	no
principalType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mSecurityDBList	yes	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
listPrincipalAllDBGrant	no	no
(	no	no
String	no	no
principalName	no	yes
,	no	no
PrincipalType	no	no
principalType	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
final	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
mSecurityDBList	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
this	no	no
.	no	no
currentTransaction	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
principalName	no	yes
!=	no	no
null	no	no
&&	no	no
principalType	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
(	no	no
Query	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	no
(	no	no
MDBPrivilege	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
)	no	no
{	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
mSecurityDBList	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
principalName	no	yes
,	no	no
principalType	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mSecurityDBList	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
mSecurityDBList	yes	yes
)	no	no
;	no	no
return	no	no
Collections	no	yes
.	no	no
unmodifiableList	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
mSecurityDBList	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
try	no	no
(	no	no
Query	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	no
(	no	no
MDBPrivilege	no	yes
.	no	no
class	no	no
)	no	no
)	no	no
{	no	no
mSecurityDBList	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mSecurityDBList	yes	yes
)	no	no
;	no	no

String	no	yes
queryStr	no	yes
=	no	no
+	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MTableColumnPrivilege	no	yes
.	no	no
class	no	no
,	no	no
queryStr	no	yes
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
mPrivs	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MTableColumnPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
executeWithArray	no	yes
(	no	no
tableName	no	yes
,	no	no
dbName	no	yes
,	no	no
catName	no	yes
,	no	no
authorizer	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
queryStr	no	yes
=	no	no
+	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MTableColumnPrivilege	no	yes
.	no	no
class	no	no
,	no	no
queryStr	no	yes
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
mPrivs	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MTableColumnPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
executeWithArray	no	yes
(	no	no
tableName	no	yes
,	no	no
dbName	no	yes
,	no	no
catName	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mPrivs	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
mTblColPrivilegeList	no	yes
.	no	no
addAll	no	yes
(	no	no
mPrivs	yes	yes
)	no	no
;	no	no

dbName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
catName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
final	no	no
Query	no	yes
query	no	yes
;	no	no
final	no	no
String	no	yes
[	no	no
]	no	no
args	no	yes
;	no	no
if	no	no
(	no	no
authorizer	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MDBPrivilege	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
args	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
dbName	no	yes
,	no	no
catName	no	yes
,	no	no
authorizer	no	yes
}	no	no
;	no	no
}	no	no
else	no	no
{	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MDBPrivilege	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
args	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
dbName	no	yes
,	no	no
catName	no	yes
}	no	no
;	no	no
}	no	no
try	no	no
(	no	no
Query	no	yes
q	no	no
=	no	no
query	no	yes
)	no	no
{	no	no
final	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
mSecurityDBList	yes	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MDBPrivilege	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
executeWithArray	no	yes
(	no	no
args	no	yes
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
mSecurityDBList	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
writeMTableColumnStatistics	no	no
(	no	no
Table	no	no
table	yes	no
,	no	no
MTableColumnStatistics	no	no
mStatsObj	no	yes
,	no	no
MTableColumnStatistics	no	no
oldStats	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
this	no	no
.	no	no
currentTransaction	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
colName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getColName	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
writeMPartitionColumnStatistics	no	no
(	no	no
Table	no	no
table	no	no
,	no	no
Partition	no	no
partition	no	no
,	no	no
MPartitionColumnStatistics	no	no
mStatsObj	no	yes
,	no	no
MPartitionColumnStatistics	no	no
oldStats	no	no
)	no	no
{	no	no
String	no	yes
catName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dbName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tableName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
partName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getPartitionName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
colName	yes	yes
=	no	no
mStatsObj	no	yes
.	no	no
getColName	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
this	no	no
.	no	no
currentTransaction	no	yes
.	no	no
isActive	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

writeMTableColumnStatistics	no	yes
(	no	no
table	no	yes
,	no	no
mStatsObj	no	yes
,	no	no
oldStats	no	yes
.	no	no
get	no	yes
(	no	no
statsObj	no	yes
.	no	no
getColName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
dbname	yes	yes
=	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
name	yes	yes
=	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
MTable	no	yes
oldt	no	yes
=	no	no
getMTable	no	yes
(	no	no
catName	no	yes
,	no	no
dbname	yes	yes
,	no	no
name	yes	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
newParams	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StatsSetupConst	no	yes
.	no	no
setColumnStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
colNames	no	yes
)	no	no
;	no	no
boolean	no	no
isTxn	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
oldt	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isTxn	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
StatsSetupConst	no	yes
.	no	no
setBasicStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
FALSE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
errorMsg	no	yes
=	no	no
verifyStatsChangeCtx	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbname	yes	yes
,	no	no
name	yes	yes
)	no	no
,	no	no
oldt	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
newParams	no	yes
,	no	no
writeId	no	yes
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
errorMsg	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isCurrentStatsValidForTheQuery	no	no
(	no	no
oldt	no	yes
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no

throw	no	no
new	no	no
NoSuchObjectException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
ColumnStatisticsObj	no	no
statsObj	no	yes
:	no	no
statsObjs	no	no
)	no	no
{	no	no
MPartitionColumnStatistics	no	yes
mStatsObj	no	yes
=	no	no
StatObjectConverter	no	yes
.	no	no
convertToMPartitionColumnStatistics	no	yes
(	no	no
mPartition	no	yes
,	no	no
statsDesc	yes	yes
,	no	no
statsObj	no	yes
,	no	no
colStats	no	yes
.	no	no
getEngine	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
writeMPartitionColumnStatistics	no	yes
(	no	no
table	no	yes
,	no	no
partition	no	yes
,	no	no
mStatsObj	no	yes
,	no	no
oldStats	no	yes
.	no	no
get	no	yes
(	no	no
statsObj	no	yes
.	no	no
getColName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
newParams	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
mPartition	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
StatsSetupConst	no	yes
.	no	no
setColumnStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
colNames	no	yes
)	no	no
;	no	no
boolean	no	no
isTxn	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
isTxn	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
StatsSetupConst	no	yes
.	no	no
setBasicStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
FALSE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
errorMsg	no	yes
=	no	no
verifyStatsChangeCtx	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
statsDesc	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
statsDesc	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
,	no	no
mPartition	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
newParams	no	yes
,	no	no
writeId	no	yes
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
errorMsg	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isCurrentStatsValidForTheQuery	no	no
(	no	no
mPartition	no	yes
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MTableColumnStatistics	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setResult	no	yes
(	no	no
)	no	no
;	no	no
Collection	no	yes
names	no	yes
=	no	no
(	no	no
Collection	no	yes
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
engines	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Iterator	no	no
i	no	yes
=	no	no
names	no	yes
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
engines	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
e	no	yes
:	no	no
engines	no	yes
)	no	no
{	no	no
ColumnStatistics	no	yes
cs	no	yes
=	no	no
getTableColumnStatisticsInternal	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
colNames	no	yes
,	no	no
e	no	yes
,	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
committed	yes	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no

try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MPartitionColumnStatistics	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
setResult	no	yes
(	no	no
)	no	no
;	no	no
Collection	no	yes
names	no	yes
=	no	no
(	no	no
Collection	no	yes
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
engines	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Iterator	no	no
i	no	yes
=	no	no
names	no	yes
.	no	no
iterator	no	no
(	no	no
)	no	no
;	no	no
i	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
;	no	no
)	no	no
{	no	no
engines	no	yes
.	no	no
add	no	yes
(	no	no
(	no	no
String	no	yes
)	no	no
i	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
e	no	yes
:	no	no
engines	no	yes
)	no	no
{	no	no
List	no	yes
<	no	no
ColumnStatistics	no	yes
>	no	no
cs	no	yes
=	no	no
getPartitionColumnStatisticsInternal	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
partNames	no	yes
,	no	no
colNames	no	yes
,	no	no
e	no	yes
,	no	no
true	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
cs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	yes
(	no	no
cs	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
committed	yes	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no

return	no	no
null	no	no
;	no	no
}	no	no
Table	no	yes
table	no	yes
=	no	no
getTable	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
boolean	no	no
isTxn	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
table	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isTxn	no	yes
&&	no	no
!	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
GetPartitionsFilterSpec	no	yes
fs	no	yes
=	no	no
new	no	no
GetPartitionsFilterSpec	no	yes
(	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
setFilterMode	no	yes
(	no	no
PartitionFilterMode	no	yes
.	no	no
BY_NAMES	no	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
setFilters	no	yes
(	no	no
partNames	no	yes
)	no	no
;	no	no
GetPartitionsProjectionSpec	no	yes
ps	no	yes
=	no	no
new	no	no
GetPartitionsProjectionSpec	no	yes
(	no	no
)	no	no
;	no	no
ps	no	yes
.	no	no
setIncludeParamKeyPattern	no	yes
(	no	no
StatsSetupConst	no	yes
.	no	no
COLUMN_STATS_ACCURATE	no	yes
+	no	no
'%'	no	no
)	no	no
;	no	no
ps	no	yes
.	no	no
setFieldList	no	yes
(	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
parts	no	yes
=	no	no
getPartitionSpecsByFilterAndProjection	no	yes
(	no	no
table	no	yes
,	no	no
ps	no	yes
,	no	no
fs	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
part	no	yes
:	no	no
parts	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isCurrentStatsValidForTheQuery	no	no
(	no	no
part	no	yes
,	no	no
part	no	yes
.	no	no
getWriteId	no	no
(	no	no
)	no	no
,	no	no
writeIdList	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
partName	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
table	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
@	no	no
Override	no	no
protected	no	no
Integer	no	no
getSqlResult	no	no
(	no	no
GetHelper	no	no
<	no	no
Integer	no	no
>	no	no
ctx	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
directSql	no	yes
.	no	no
deleteColumnStatsState	no	yes
(	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
0	no	no
;	no	no
}	no	no
@	no	no
Override	no	no
protected	no	no
Integer	no	no
getJdoResult	no	no
(	no	no
GetHelper	no	no
<	no	no
Integer	no	no
>	no	no
ctx	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
NoSuchObjectException	no	no
{	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
parts	no	yes
=	no	no
getPartitions	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Partition	no	yes
part	no	yes
:	no	no
parts	no	yes
)	no	no
{	no	no
Partition	no	yes
newPart	no	yes
=	no	no
new	no	no
Partition	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
StatsSetupConst	no	yes
.	no	no
clearColumnStatsState	no	yes
(	no	no
newPart	no	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
alterPartition	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
newPart	no	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
parts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InvalidObjectException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
-	no	no
1	no	no
;	no	no
}	no	no
}	no	no
}	no	no
.	no	no
run	no	no
(	no	no
true	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
getAllTokenIdentifiers	no	no
(	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
committed	yes	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tokenIdents	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MDelegationToken	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
MDelegationToken	no	yes
>	no	no
tokens	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MDelegationToken	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
tokens	no	yes
)	no	no
;	no	no
committed	yes	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
MDelegationToken	no	yes
token	no	yes
:	no	no
tokens	no	yes
)	no	no
{	no	no
tokenIdents	no	yes
.	no	no
add	no	yes
(	no	no
token	no	yes
.	no	no
getTokenIdentifier	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
return	no	no
tokenIdents	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
committed	yes	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
MMasterKey	no	yes
>	no	no
keys	no	yes
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MMasterKey	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
keys	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MMasterKey	no	yes
>	no	no
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
pm	no	yes
.	no	no
retrieveAll	no	yes
(	no	no
keys	no	yes
)	no	no
;	no	no
committed	yes	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
masterKeys	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
keys	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
]	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
keys	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
masterKeys	no	yes
[	no	no
i	no	yes
]	no	no
=	no	no
keys	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
.	no	no
getMasterKey	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	no
masterKeys	no	yes
;	no	no
}	no	no
finally	no	no
{	no	no

private	no	no
synchronized	no	no
void	no	no
checkSchema	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	yes
{	no	no
if	no	no
(	no	no
isSchemaVerified	no	no
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
boolean	no	no
strictValidation	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
ConfVars	no	yes
.	no	no
SCHEMA_VERIFICATION	no	yes
)	no	no
;	no	no
String	no	yes
dbSchemaVer	yes	yes
=	no	no
getMetaStoreSchemaVersion	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreSchemaInfo	no	yes
metastoreSchemaInfo	no	yes
=	no	no
MetaStoreSchemaInfoFactory	no	yes
.	no	no
get	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
hiveSchemaVer	no	yes
=	no	no
metastoreSchemaInfo	no	yes
.	no	no
getHiveSchemaVersion	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dbSchemaVer	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
strictValidation	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
,	no	no
ConfVars	no	yes
.	no	no
SCHEMA_VERIFICATION	no	yes
,	no	no
hiveSchemaVer	no	yes
)	no	no
;	no	no
setMetaStoreSchemaVersion	no	yes
(	no	no
hiveSchemaVer	no	yes
,	no	no
+	no	no
USER	no	yes
+	no	no
+	no	no
HOSTNAME	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
metastoreSchemaInfo	no	yes
.	no	no
isVersionCompatible	no	no
(	no	no
hiveSchemaVer	no	yes
,	no	no
dbSchemaVer	yes	yes
)	no	no
)	no	no
{	no	no

String	no	yes
dbSchemaVer	yes	yes
=	no	no
getMetaStoreSchemaVersion	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreSchemaInfo	no	yes
metastoreSchemaInfo	no	yes
=	no	no
MetaStoreSchemaInfoFactory	no	yes
.	no	no
get	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
hiveSchemaVer	yes	yes
=	no	no
metastoreSchemaInfo	no	yes
.	no	no
getHiveSchemaVersion	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dbSchemaVer	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
strictValidation	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
,	no	no
ConfVars	yes	yes
.	no	no
SCHEMA_VERIFICATION	no	yes
,	no	no
hiveSchemaVer	yes	yes
)	no	no
;	no	no
setMetaStoreSchemaVersion	no	yes
(	no	no
hiveSchemaVer	yes	yes
,	no	no
+	no	no
USER	no	yes
+	no	no
+	no	no
HOSTNAME	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
metastoreSchemaInfo	no	yes
.	no	no
isVersionCompatible	no	no
(	no	no
hiveSchemaVer	yes	yes
,	no	no
dbSchemaVer	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
dbSchemaVer	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
strictValidation	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
hiveSchemaVer	yes	yes
+	no	no
+	no	no
dbSchemaVer	yes	yes
+	no	no
)	no	no
;	no	no

private	no	no
void	no	no
debugLog	no	no
(	no	no
final	no	no
String	no	no
message	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isTraceEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

MNotificationNextId	no	yes
mNotificationNextId	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
needToPersistId	no	yes
;	no	no
if	no	no
(	no	no
CollectionUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
ids	no	yes
)	no	no
)	no	no
{	no	no
mNotificationNextId	no	yes
=	no	no
new	no	no
MNotificationNextId	no	yes
(	no	no
1L	no	no
)	no	no
;	no	no
needToPersistId	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
mNotificationNextId	no	yes
=	no	no
ids	no	yes
.	no	no
iterator	no	yes
(	no	no
)	no	no
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
needToPersistId	no	yes
=	no	no
false	no	no
;	no	no
}	no	no
entry	no	yes
.	no	no
setEventId	no	yes
(	no	no
mNotificationNextId	no	yes
.	no	no
getNextEventId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
mNotificationNextId	no	yes
.	no	no
incrementEventId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
needToPersistId	no	yes
)	no	no
{	no	no
pm	no	yes
.	no	no
makePersistent	no	yes
(	no	no
mNotificationNextId	no	yes
)	no	no
;	no	no
}	no	no
pm	no	yes
.	no	no
makePersistent	no	yes
(	no	no
translateThriftToDb	no	yes
(	no	no
entry	no	yes
)	no	no
)	no	no
;	no	no
commited	no	yes
=	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
cleanNotificationEvents	no	no
(	no	no
int	no	no
olderThan	no	yes
)	no	no
{	no	no
boolean	no	no
commited	no	yes
=	no	no
false	no	no
;	no	no
Query	no	yes
query	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
openTransaction	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
tmp	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
/	no	no
1000	no	no
-	no	no
olderThan	no	yes
;	no	no
int	no	no
tooOld	yes	yes
=	no	no
(	no	no
tmp	no	yes
>	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
)	no	no
?	no	no
0	no	no
:	no	no
(	no	no
int	no	no
)	no	no
tmp	no	yes
;	no	no
query	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MNotificationLog	no	yes
.	no	no
class	no	no
,	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
declareParameters	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
max_events	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
EVENT_CLEAN_MAX_EVENTS	no	yes
)	no	no
;	no	no
max_events	no	yes
=	no	no
max_events	no	yes
>	no	no
0	no	no
?	no	no
max_events	no	yes
:	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
query	no	yes
.	no	no
setRange	no	yes
(	no	no
0	no	no
,	no	no
max_events	no	yes
)	no	no
;	no	no
query	no	yes
.	no	no
setOrdering	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
MNotificationLog	no	yes
>	no	no
toBeRemoved	no	yes
=	no	no
(	no	no
List	no	yes
)	no	no
query	no	yes
.	no	no
execute	no	yes
(	no	no
tooOld	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
toBeRemoved	no	yes
==	no	no
null	no	no
||	no	no
toBeRemoved	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

if	no	no
(	no	no
colName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
colName	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
colName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
type	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
type	no	yes
=	no	no
normalizeIdentifier	no	yes
(	no	no
type	no	yes
)	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
parameters	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
3	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sql	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
colName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sql	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
parameters	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
colName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
colNamespace	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sql	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
parameters	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
colNamespace	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
type	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sql	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
parameters	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
checkForConstraintException	no	no
(	no	no
Exception	no	no
e	yes	no
,	no	no
String	no	no
msg	yes	no
)	no	no
throws	no	no
AlreadyExistsException	no	no
{	no	no
if	no	no
(	no	no
getConstraintException	no	no
(	no	no
e	yes	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
addRuntimeStat	no	no
(	no	no
RuntimeStat	no	no
stat	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
isCurrentStatsValidForTheQuery	no	no
(	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
statsParams	yes	no
,	no	no
long	no	no
statsWriteId	yes	no
,	no	no
String	no	no
queryValidWriteIdList	yes	no
,	no	no
boolean	no	no
isCompleteStatsWriter	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no

private	no	no
void	no	no
recoverInvalidScheduledQueryState	no	no
(	no	no
int	no	no
timeoutSecs	no	yes
)	no	no
{	no	no
int	no	no
maxLastUpdateTime	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
/	no	no
1000	no	no
)	no	no
-	no	no
timeoutSecs	no	yes
;	no	no
Query	no	yes
q	no	yes
=	no	no
pm	no	yes
.	no	no
newQuery	no	yes
(	no	no
MScheduledQuery	no	yes
.	no	no
class	no	no
)	no	no
;	no	no
q	no	yes
.	no	no
setFilter	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
MScheduledQuery	no	yes
>	no	no
results	no	yes
=	no	no
(	no	no
List	no	yes
<	no	no
MScheduledQuery	no	yes
>	no	no
)	no	no
q	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
MScheduledQuery	no	yes
e	yes	yes
:	no	no
results	no	yes
)	no	no
{	no	no
Integer	no	yes
lastUpdateTime	no	yes
=	no	no
e	yes	yes
.	no	no
getActiveExecution	no	yes
(	no	no
)	no	no
.	no	no
getLastUpdateTime	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lastUpdateTime	no	yes
==	no	no
null	no	no
||	no	no
lastUpdateTime	no	yes
<	no	no
maxLastUpdateTime	no	yes
)	no	no
{	no	no

String	no	yes
dbPattern	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PARTITION_MANAGEMENT_DATABASE_PATTERN	no	yes
)	no	no
;	no	no
String	no	yes
tablePattern	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PARTITION_MANAGEMENT_TABLE_PATTERN	no	yes
)	no	no
;	no	no
String	no	yes
tableTypes	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PARTITION_MANAGEMENT_TABLE_TYPES	no	yes
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
tableTypesSet	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tableTypesList	no	yes
;	no	no
if	no	no
(	no	no
tableTypes	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
tableTypesList	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
type	no	yes
:	no	no
tableTypes	no	yes
.	no	no
split	no	no
(	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
tableTypesSet	no	yes
.	no	no
add	no	yes
(	no	no
TableType	no	yes
.	no	no
valueOf	no	yes
(	no	no
type	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalArgumentException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
tableTypesList	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
tableTypesSet	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
TableMeta	no	yes
>	no	no
foundTableMetas	yes	yes
=	no	no
msc	no	yes
.	no	no
getTableMeta	no	yes
(	no	no
catalogName	yes	yes
,	no	no
dbPattern	yes	yes
,	no	no
tablePattern	yes	yes
,	no	no
tableTypesList	no	yes
)	no	no
;	no	no

try	no	no
{	no	no
tableTypesSet	no	yes
.	no	no
add	no	yes
(	no	no
TableType	no	yes
.	no	no
valueOf	no	yes
(	no	no
type	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
.	no	no
toUpperCase	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IllegalArgumentException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
type	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
tableTypesList	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
tableTypesSet	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
TableMeta	no	yes
>	no	no
foundTableMetas	no	yes
=	no	no
msc	no	yes
.	no	no
getTableMeta	no	yes
(	no	no
catalogName	no	yes
,	no	no
dbPattern	no	yes
,	no	no
tablePattern	no	yes
,	no	no
tableTypesList	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
catalogName	no	yes
,	no	no
dbPattern	no	yes
,	no	no
tablePattern	no	yes
,	no	no
foundTableMetas	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TableMeta	no	yes
tableMeta	no	yes
:	no	no
foundTableMetas	no	yes
)	no	no
{	no	no
Table	no	yes
table	no	yes
=	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
tableMeta	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
,	no	no
tableMeta	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tableMeta	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitionDiscoveryEnabled	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
tblBeingReplicatedInto	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
candidateTables	yes	yes
.	no	no
add	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
candidateTables	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
int	no	no
threadPoolSize	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PARTITION_MANAGEMENT_TASK_THREAD_POOL_SIZE	no	yes
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
candidateTables	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
threadPoolSize	no	yes
)	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

Table	no	yes
table	no	yes
=	no	no
msc	no	yes
.	no	no
getTable	no	yes
(	no	no
tableMeta	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
,	no	no
tableMeta	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tableMeta	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitionDiscoveryEnabled	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
tblBeingReplicatedInto	no	no
(	no	no
table	no	yes
.	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
candidateTables	no	yes
.	no	no
add	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
candidateTables	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
int	no	no
threadPoolSize	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
PARTITION_MANAGEMENT_TASK_THREAD_POOL_SIZE	no	yes
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
candidateTables	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
threadPoolSize	no	yes
)	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
CountDownLatch	no	yes
countDownLatch	no	yes
=	no	no
new	no	no
CountDownLatch	no	yes
(	no	no
candidateTables	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
candidateTables	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
setupMsckPathInvalidation	no	yes
(	no	no
)	no	no
;	no	no
Configuration	no	yes
msckConf	no	yes
=	no	no
Msck	no	yes
.	no	no
getMsckConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Table	no	yes
table	no	yes
:	no	no
candidateTables	no	yes
)	no	no
{	no	no
qualifiedTableName	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getCatalogQualifiedTableName	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
long	no	no
retentionSeconds	no	yes
=	no	no
getRetentionPeriodInSeconds	no	yes
(	no	no
table	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
qualifiedTableName	yes	yes
,	no	no
retentionSeconds	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
LOG	no	yes
.	no	no
isInfoEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
prop	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
key	yes	yes
:	no	no
prop	no	yes
.	no	no
stringPropertyNames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
key	yes	yes
.	no	no
equals	no	no
(	no	no
propsFromConf	no	yes
.	no	no
get	no	no
(	no	no
key	yes	yes
)	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
MetastoreConf	no	no
.	no	no
isPrintable	no	no
(	no	no
key	yes	yes
)	no	no
)	no	no
{	no	no
String	no	yes
oldVal	no	yes
=	no	no
prop	no	yes
.	no	no
getProperty	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
String	no	yes
newVal	no	yes
=	no	no
propsFromConf	no	yes
.	no	no
getProperty	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
key	yes	yes
.	no	no
equals	no	no
(	no	no
ConfVars	no	no
.	no	no
CONNECT_URL_KEY	no	no
.	no	no
getVarname	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
oldVal	no	yes
=	no	no
MetaStoreServerUtils	no	yes
.	no	no
anonymizeConnectionURL	no	yes
(	no	no
oldVal	no	yes
)	no	no
;	no	no
newVal	no	yes
=	no	no
MetaStoreServerUtils	no	yes
.	no	no
anonymizeConnectionURL	no	yes
(	no	no
newVal	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
key	yes	yes
,	no	no
oldVal	no	yes
,	no	no
newVal	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

}	no	no
else	no	no
{	no	no
try	no	no
{	no	no
DataSource	no	yes
ds	no	yes
=	no	no
dsp	no	yes
.	no	no
create	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
Object	no	yes
,	no	no
Object	no	yes
>	no	no
dsProperties	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
dsProperties	no	yes
.	no	no
putAll	no	yes
(	no	no
prop	no	yes
)	no	no
;	no	no
dsProperties	no	yes
.	no	no
put	no	yes
(	no	no
PropertyNames	no	yes
.	no	no
PROPERTY_CONNECTION_FACTORY	no	yes
,	no	no
ds	no	yes
)	no	no
;	no	no
dsProperties	no	yes
.	no	no
put	no	yes
(	no	no
PropertyNames	no	yes
.	no	no
PROPERTY_CONNECTION_FACTORY2	no	yes
,	no	no
ds	no	yes
)	no	no
;	no	no
dsProperties	no	yes
.	no	no
put	no	yes
(	no	no
ConfVars	no	yes
.	no	no
MANAGER_FACTORY_CLASS	no	yes
.	no	no
getVarname	no	yes
(	no	no
)	no	no
,	no	no
)	no	no
;	no	no
pmf	no	yes
=	no	no
JDOHelper	no	yes
.	no	no
getPersistenceManagerFactory	no	yes
(	no	no
dsProperties	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
pmf	no	yes
=	no	no
JDOHelper	no	yes
.	no	no
getPersistenceManagerFactory	no	yes
(	no	no
prop	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
DataStoreCache	no	yes
dsc	no	yes
=	no	no
pmf	no	yes
.	no	no
getDataStoreCache	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dsc	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
String	no	yes
objTypes	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CACHE_PINOBJTYPES	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
clearClr	no	no
(	no	no
ClassLoaderResolver	no	no
clr	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
if	no	no
(	no	no
clr	no	yes
instanceof	no	no
ClassLoaderResolverImpl	no	yes
)	no	no
{	no	no
ClassLoaderResolverImpl	no	yes
clri	no	yes
=	no	no
(	no	no
ClassLoaderResolverImpl	no	yes
)	no	no
clr	no	yes
;	no	no
int	no	no
resourcesCleared	yes	yes
=	no	no
clearFieldMap	no	yes
(	no	no
clri	no	yes
,	no	no
)	no	no
;	no	no
int	no	no
loadedClassesCleared	yes	yes
=	no	no
clearFieldMap	no	yes
(	no	no
clri	no	yes
,	no	no
)	no	no
;	no	no
int	no	no
unloadedClassesCleared	yes	yes
=	no	no
clearFieldMap	no	yes
(	no	no
clri	no	yes
,	no	no
)	no	no
;	no	no

@	no	no
SuppressWarnings	no	no
(	no	no
)	no	no
private	no	no
static	no	no
Properties	no	yes
getDataSourceProps	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
Properties	no	yes
prop	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
correctAutoStartMechanism	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
ConfVars	no	no
var	no	yes
:	no	no
MetastoreConf	no	yes
.	no	no
dataNucleusAndJdoConfs	no	no
)	no	no
{	no	no
String	no	yes
confVal	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getAsString	no	yes
(	no	no
conf	no	yes
,	no	no
var	no	yes
)	no	no
;	no	no
String	no	yes
varName	yes	yes
=	no	no
var	no	yes
.	no	no
getVarname	no	yes
(	no	no
)	no	no
;	no	no
Object	no	yes
prevVal	yes	yes
=	no	no
prop	no	yes
.	no	no
setProperty	no	yes
(	no	no
varName	yes	yes
,	no	no
confVal	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
MetastoreConf	no	yes
.	no	no
isPrintable	no	no
(	no	no
varName	yes	yes
)	no	no
)	no	no
{	no	no

Object	no	yes
prevVal	no	yes
=	no	no
prop	no	yes
.	no	no
setProperty	no	yes
(	no	no
varName	no	yes
,	no	no
confVal	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
MetastoreConf	no	yes
.	no	no
isPrintable	no	no
(	no	no
varName	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
varName	no	yes
,	no	no
prevVal	no	yes
,	no	no
confVal	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
passwordProvider	no	yes
=	no	no
passwordProvider	no	yes
!=	no	no
null	no	no
?	no	no
passwordProvider	no	yes
:	no	no
Suppliers	no	no
.	no	no
memoize	no	no
(	no	no
(	no	no
)	no	no
->	no	no
{	no	no
try	no	no
{	no	no
return	no	no
MetastoreConf	no	yes
.	no	no
getPassword	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
PWD	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
err	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
err	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
err	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
)	no	no
;	no	no
String	no	yes
passwd	no	yes
=	no	no
passwordProvider	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
org	no	no
.	no	no
apache	no	no
.	no	no
commons	no	no
.	no	no
lang3	no	no
.	no	no
StringUtils	no	no
.	no	no
isNotEmpty	no	no
(	no	no
passwd	no	yes
)	no	no
)	no	no
{	no	no
prop	no	yes
.	no	no
setProperty	no	yes
(	no	no
ConfVars	no	yes
.	no	no
PWD	no	yes
.	no	no
getVarname	no	yes
(	no	no
)	no	no
,	no	no
passwd	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
Object	no	yes
,	no	no
Object	no	yes
>	no	no
e	yes	no
:	no	no
prop	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
MetastoreConf	no	yes
.	no	no
isPrintable	no	no
(	no	no
e	yes	no
.	no	no
getKey	no	no
(	no	no
)	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
correctAutoStartMechanism	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
final	no	no
String	no	yes
autoStartKey	yes	yes
=	no	no
;	no	no
final	no	no
String	no	yes
autoStartIgnore	yes	yes
=	no	no
;	no	no
String	no	yes
currentAutoStartVal	no	yes
=	no	no
conf	no	yes
.	no	no
get	no	yes
(	no	no
autoStartKey	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentAutoStartVal	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

return	no	no
s	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
myRetryLimit	no	yes
--	no	no
;	no	no
boolean	no	no
retriable	no	yes
=	no	no
isRetriableException	no	yes
(	no	no
e	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
myRetryLimit	no	yes
>	no	no
0	no	no
&&	no	no
retriable	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
myRetryLimit	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
retryInterval	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
ie	no	yes
)	no	no
;	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
retriable	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

baseHandler	no	yes
.	no	no
setConf	no	yes
(	no	no
getActiveConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Object	no	yes
object	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
isStarted	no	yes
=	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
object	no	yes
=	no	no
method	no	yes
.	no	no
invoke	no	yes
(	no	no
baseHandler	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
isStarted	no	yes
)	no	no
{	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
new	no	no
Result	no	yes
(	no	no
object	no	yes
,	no	no
retryCount	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UndeclaredThrowableException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no

boolean	no	no
isStarted	no	yes
=	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
object	no	yes
=	no	no
method	no	yes
.	no	no
invoke	no	yes
(	no	no
baseHandler	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
isStarted	no	yes
)	no	no
{	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
new	no	no
Result	no	yes
(	no	no
object	no	yes
,	no	no
retryCount	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UndeclaredThrowableException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

}	no	no
return	no	no
new	no	no
Result	no	yes
(	no	no
object	no	yes
,	no	no
retryCount	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UndeclaredThrowableException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvocationTargetException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no

}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvocationTargetException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
||	no	no
e	yes	yes
.	no	no
getTargetException	no	no
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
)	no	no
{	no	no
String	no	yes
methodName	no	yes
=	no	no
method	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvocationTargetException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
||	no	no
e	yes	yes
.	no	no
getTargetException	no	no
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
)	no	no
{	no	no
String	no	yes
methodName	no	yes
=	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvocationTargetException	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
||	no	no
e	yes	yes
.	no	no
getTargetException	no	no
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
)	no	no
{	no	no
String	no	yes
methodName	no	yes
=	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
||	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NucleusException	no	no
)	no	no
{	no	no
caughtException	no	yes
=	no	no
e	yes	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no

else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	no	yes
)	no	no
)	no	no
;	no	no
throw	no	no
e	no	yes
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InvocationTargetException	no	no
e	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	yes	yes
=	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
||	no	no
e	no	yes
.	no	no
getTargetException	no	no
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
)	no	no
{	no	no
String	no	yes
methodName	no	yes
=	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
||	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NucleusException	no	no
)	no	no
{	no	no
caughtException	yes	yes
=	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
DeadlineException	no	no
)	no	no
{	no	no

if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
)	no	no
{	no	no
caughtException	yes	yes
=	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
||	no	no
e	no	yes
.	no	no
getTargetException	no	no
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NoSuchObjectException	no	no
)	no	no
{	no	no
String	no	yes
methodName	no	yes
=	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
methodName	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
MetaException	no	no
&&	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
javax	no	no
.	no	no
jdo	no	no
.	no	no
JDOException	no	no
||	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
NucleusException	no	no
)	no	no
{	no	no
caughtException	yes	yes
=	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
DeadlineException	no	no
)	no	no
{	no	no
Deadline	no	yes
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
method	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
ExceptionUtils	no	yes
.	no	no
getStackTrace	no	yes
(	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
e	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
RawStore	no	yes
ms	no	yes
=	no	no
HiveMetaStore	no	yes
.	no	no
HMSHandler	no	yes
.	no	no
getMSForConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
int	no	no
maxRetainSecs	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
RUNTIME_STATS_MAX_AGE	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
int	no	no
deleteCnt	yes	yes
=	no	no
ms	no	yes
.	no	no
deleteRuntimeStats	no	yes
(	no	no
maxRetainSecs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deleteCnt	yes	yes
>	no	no
0L	no	no
)	no	no
{	no	no

try	no	no
{	no	no
fn	no	yes
.	no	no
process	no	yes
(	no	no
msg	no	yes
.	no	no
seqid	no	yes
,	no	no
in	no	yes
,	no	no
out	no	yes
,	no	no
iface	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TException	no	yes
te	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
te	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
;	no	no
try	no	no
{	no	no
clientUgi	yes	yes
.	no	no
doAs	no	yes
(	no	no
pvea	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
RuntimeException	no	yes
rte	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
rte	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
instanceof	no	no
TException	no	yes
)	no	no
{	no	no
throw	no	no
(	no	no
TException	no	yes
)	no	no
rte	no	yes
.	no	no
getCause	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
rte	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
ie	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
makeAcid	no	no
(	no	no
Table	no	no
newTable	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
if	no	no
(	no	no
newTable	yes	no
.	no	no
getParameters	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
newTable	yes	no
.	no	no
getParameters	no	no
(	no	no
)	no	no
.	no	no
containsKey	no	no
(	no	no
hive_metastoreConstants	yes	no
.	no	no
TABLE_IS_TRANSACTIONAL	no	no
)	no	no
)	no	no
{	no	no

boolean	no	no
makeAcid	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CREATE_TABLES_AS_ACID	no	yes
)	no	no
&&	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_SUPPORT_CONCURRENCY	no	yes
)	no	no
&&	no	no
.	no	no
equals	no	yes
(	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_TXN_MANAGER	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
makeAcid	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
conformToAcid	no	no
(	no	no
newTable	yes	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
newTable	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
TableType	no	no
.	no	no
MANAGED_TABLE	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
.	no	no
equalsIgnoreCase	no	no
(	no	no
newTable	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
newTable	yes	yes
)	no	no
+	no	no
+	no	no
newTable	yes	yes
.	no	no
getTableType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
newTable	yes	yes
.	no	no
getSd	no	no
(	no	no
)	no	no
.	no	no
getSortColsSize	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
newTable	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
parameters	no	yes
=	no	no
newTable	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
parameters	no	yes
==	no	no
null	no	no
||	no	no
parameters	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
parameters	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
}	no	no
parameters	no	yes
.	no	no
put	no	yes
(	no	no
hive_metastoreConstants	no	yes
.	no	no
TABLE_IS_TRANSACTIONAL	no	yes
,	no	no
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
static	no	no
long	no	no
updateUsingNotificationEvents	no	no
(	no	no
RawStore	no	no
rawStore	no	no
,	no	no
long	no	no
lastEventId	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
CREATE_FUNCTION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
DROP_FUNCTION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
CREATE_ISCHEMA_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
ALTER_ISCHEMA_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
DROP_ISCHEMA_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
ADD_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
ALTER_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
DROP_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
resp	no	yes
=	no	no
rawStore	no	yes
.	no	no
getNextNotification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
resp	no	yes
==	no	no
null	no	no
||	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
lastEventId	no	yes
;	no	no
}	no	no
List	no	yes
<	no	no
NotificationEvent	no	yes
>	no	no
eventList	yes	yes
=	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
;	no	no

rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
DROP_ISCHEMA_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
ADD_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
ALTER_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
addToEventTypeSkipList	no	yes
(	no	no
MessageBuilder	no	yes
.	no	no
DROP_SCHEMA_VERSION_EVENT	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
resp	no	yes
=	no	no
rawStore	no	yes
.	no	no
getNextNotification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
resp	no	yes
==	no	no
null	no	no
||	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
lastEventId	yes	yes
;	no	no
}	no	no
List	no	yes
<	no	no
NotificationEvent	no	yes
>	no	no
eventList	no	yes
=	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
eventList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
NotificationEvent	no	yes
event	no	yes
:	no	no
eventList	no	yes
)	no	no
{	no	no
long	no	no
eventId	yes	yes
=	no	no
event	no	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
eventId	yes	yes
<=	no	no
lastEventId	yes	yes
)	no	no
{	no	no

Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
resp	no	yes
=	no	no
rawStore	no	yes
.	no	no
getNextNotification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
resp	no	yes
==	no	no
null	no	no
||	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
lastEventId	no	yes
;	no	no
}	no	no
List	no	yes
<	no	no
NotificationEvent	no	yes
>	no	no
eventList	no	yes
=	no	no
resp	no	yes
.	no	no
getEvents	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
eventList	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
NotificationEvent	no	yes
event	yes	yes
:	no	no
eventList	no	yes
)	no	no
{	no	no
long	no	no
eventId	no	yes
=	no	no
event	yes	yes
.	no	no
getEventId	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
eventId	no	yes
<=	no	no
lastEventId	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
lastEventId	no	yes
+	no	no
+	no	no
eventId	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
lastEventId	no	yes
+	no	no
+	no	no
eventId	no	yes
)	no	no
;	no	no
}	no	no
lastEventId	no	yes
=	no	no
eventId	no	yes
;	no	no
String	no	yes
message	no	yes
=	no	no
event	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	no
catName	yes	yes
:	no	no
catalogsToCache	no	no
)	no	no
{	no	no
catalogs	no	yes
.	no	no
add	no	yes
(	no	no
rawStore	no	yes
.	no	no
getCatalog	no	yes
(	no	no
catName	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
sharedCache	no	yes
.	no	no
populateCatalogsInCache	no	yes
(	no	no
catalogs	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
|	no	no
NoSuchObjectException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
sleepTime	no	yes
)	no	no
;	no	no
sleepTime	no	yes
=	no	no
sleepTime	no	yes
*	no	no
2	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
timerEx	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
timerEx	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
continue	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Database	no	yes
>	no	no
databases	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
catName	yes	yes
:	no	no
catalogsToCache	no	no
)	no	no
{	no	no
try	no	no
{	no	no

LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
catName	no	yes
+	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
sharedCache	no	yes
.	no	no
populateDatabasesInCache	no	yes
(	no	no
databases	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numberOfDatabasesCachedSoFar	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Database	no	no
db	no	yes
:	no	no
databases	no	yes
)	no	no
{	no	no
String	no	yes
catName	no	yes
=	no	no
StringUtils	no	yes
.	no	no
normalizeIdentifier	no	yes
(	no	no
db	no	yes
.	no	no
getCatalogName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
StringUtils	no	yes
.	no	no
normalizeIdentifier	no	yes
(	no	no
db	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tblNames	no	yes
;	no	no
try	no	no
{	no	no
tblNames	no	yes
=	no	no
rawStore	no	yes
.	no	no
getAllTables	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
DatabaseName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
tblsPendingPrewarm	no	yes
.	no	no
addTableNamesForPrewarming	no	yes
(	no	no
tblNames	no	yes
)	no	no
;	no	no
int	no	no
totalTablesToCache	no	yes
=	no	no
tblNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

partCols	no	yes
.	no	no
add	no	yes
(	no	no
fs	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partVals	no	yes
.	no	no
add	no	yes
(	no	no
defaultPartitionValue	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
defaultPartitionName	no	yes
=	no	no
FileUtils	no	yes
.	no	no
makePartName	no	yes
(	no	no
partCols	no	yes
,	no	no
partVals	no	yes
)	no	no
;	no	no
partNames	no	yes
.	no	no
remove	no	yes
(	no	no
defaultPartitionName	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
aggrStatsAllButDefaultPartition	no	yes
=	no	no
rawStore	no	yes
.	no	no
get_aggr_stats_for	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partNames	no	yes
,	no	no
colNames	no	yes
,	no	no
CacheUtils	no	yes
.	no	no
HIVE_ENGINE	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setAggrStatsAllButDefaultPartition	no	yes
(	no	no
aggrStatsAllButDefaultPartition	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
tableColStats	no	yes
=	no	no
rawStore	no	yes
.	no	no
getTableColumnStatistics	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	no	yes
,	no	no
CacheUtils	no	yes
.	no	no
HIVE_ENGINE	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setTableColStats	no	yes
(	no	no
tableColStats	no	yes
)	no	no
;	no	no
}	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
primaryKeys	no	yes
=	no	no
rawStore	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no

Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setAggrStatsAllButDefaultPartition	no	yes
(	no	no
aggrStatsAllButDefaultPartition	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
tableColStats	no	yes
=	no	no
rawStore	no	yes
.	no	no
getTableColumnStatistics	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	no	yes
,	no	no
CacheUtils	no	yes
.	no	no
HIVE_ENGINE	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setTableColStats	no	yes
(	no	no
tableColStats	no	yes
)	no	no
;	no	no
}	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
primaryKeys	no	yes
=	no	no
rawStore	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setPrimaryKeys	no	yes
(	no	no
primaryKeys	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
foreignKeys	no	yes
=	no	no
rawStore	no	yes
.	no	no
getForeignKeys	no	yes
(	no	no
catName	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setForeignKeys	no	yes
(	no	no
foreignKeys	no	yes
)	no	no
;	no	no

}	no	no
else	no	no
{	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
tableColStats	no	yes
=	no	no
rawStore	no	yes
.	no	no
getTableColumnStatistics	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
,	no	no
colNames	no	yes
,	no	no
CacheUtils	no	yes
.	no	no
HIVE_ENGINE	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setTableColStats	no	yes
(	no	no
tableColStats	no	yes
)	no	no
;	no	no
}	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
primaryKeys	no	yes
=	no	no
rawStore	no	yes
.	no	no
getPrimaryKeys	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setPrimaryKeys	no	yes
(	no	no
primaryKeys	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
foreignKeys	no	yes
=	no	no
rawStore	no	yes
.	no	no
getForeignKeys	no	yes
(	no	no
catName	no	yes
,	no	no
null	no	no
,	no	no
null	no	no
,	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
stopTimer	no	yes
(	no	no
)	no	no
;	no	no
cacheObjects	no	yes
.	no	no
setForeignKeys	no	yes
(	no	no
foreignKeys	no	yes
)	no	no
;	no	no
Deadline	no	yes
.	no	no
startTimer	no	yes
(	no	no
)	no	no
;	no	no
uniqueConstraints	no	yes
=	no	no
rawStore	no	yes
.	no	no
getUniqueConstraints	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
!	no	no
shouldCacheTable	no	no
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Table	no	yes
table	yes	yes
=	no	no
sharedCache	no	yes
.	no	no
getTableFromCache	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
table	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
boolean	no	no
isTxn	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
isTransactionalTable	no	yes
(	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isTxn	no	yes
&&	no	no
validWriteIds	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
areTxnStatsSupported	no	no
)	no	no
{	no	no
StatsSetupConst	no	yes
.	no	no
setBasicStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
FALSE	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
errorMsg	no	yes
=	no	no
ObjectStore	no	yes
.	no	no
verifyStatsChangeCtx	no	yes
(	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
,	no	no
table	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
,	no	no
newParams	no	yes
,	no	no
writeId	no	yes
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
errorMsg	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
ObjectStore	no	yes
.	no	no
isCurrentStatsValidForTheQuery	no	no
(	no	no
newParams	no	yes
,	no	no
table	yes	yes
.	no	no
getWriteId	no	no
(	no	no
)	no	no
,	no	no
validWriteIds	no	yes
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no
StatsSetupConst	no	yes
.	no	no
setBasicStatsState	no	yes
(	no	no
newParams	no	yes
,	no	no
StatsSetupConst	no	yes
.	no	no
FALSE	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
table	no	no
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
rawStore	no	yes
.	no	no
get_aggr_stats_for	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
partNames	yes	yes
,	no	no
colNames	yes	yes
,	no	no
engine	no	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
allPartNames	no	yes
=	no	no
rawStore	no	yes
.	no	no
listPartitionNames	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
(	no	no
short	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
StatsType	no	yes
type	no	yes
=	no	no
StatsType	no	yes
.	no	no
PARTIAL	no	yes
;	no	no
if	no	no
(	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
allPartNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
colStats	no	yes
=	no	no
sharedCache	no	yes
.	no	no
getAggrStatsFromCache	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	yes	yes
,	no	no
StatsType	no	yes
.	no	no
ALL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
AggrStats	no	yes
(	no	no
colStats	no	yes
,	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
type	no	yes
=	no	no
StatsType	no	yes
.	no	no
ALL	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
(	no	no
allPartNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
defaultPartitionName	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
ConfVars	no	yes
.	no	no
DEFAULTPARTITIONNAME	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
partNames	yes	yes
.	no	no
contains	no	no
(	no	no
defaultPartitionName	no	yes
)	no	no
)	no	no
{	no	no
colStats	no	yes
=	no	no
sharedCache	no	yes
.	no	no
getAggrStatsFromCache	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	yes	yes
,	no	no
StatsType	no	yes
.	no	no
ALLBUTDEFAULT	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
AggrStats	no	yes
(	no	no
colStats	no	yes
,	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
allPartNames	no	yes
=	no	no
rawStore	no	yes
.	no	no
listPartitionNames	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
(	no	no
short	no	no
)	no	no
-	no	no
1	no	no
)	no	no
;	no	no
StatsType	no	yes
type	no	yes
=	no	no
StatsType	no	yes
.	no	no
PARTIAL	no	yes
;	no	no
if	no	no
(	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
allPartNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
colStats	no	yes
=	no	no
sharedCache	no	yes
.	no	no
getAggrStatsFromCache	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	yes	yes
,	no	no
StatsType	no	yes
.	no	no
ALL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
AggrStats	no	yes
(	no	no
colStats	no	yes
,	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
type	no	yes
=	no	no
StatsType	no	yes
.	no	no
ALL	no	yes
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
(	no	no
allPartNames	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
-	no	no
1	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
defaultPartitionName	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
getConf	no	yes
(	no	no
)	no	no
,	no	no
ConfVars	no	yes
.	no	no
DEFAULTPARTITIONNAME	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
partNames	yes	yes
.	no	no
contains	no	no
(	no	no
defaultPartitionName	no	yes
)	no	no
)	no	no
{	no	no
colStats	no	yes
=	no	no
sharedCache	no	yes
.	no	no
getAggrStatsFromCache	no	yes
(	no	no
catName	yes	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
colNames	yes	yes
,	no	no
StatsType	no	yes
.	no	no
ALLBUTDEFAULT	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStats	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
AggrStats	no	yes
(	no	no
colStats	no	yes
,	no	no
partNames	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
type	no	yes
=	no	no
StatsType	no	yes
.	no	no
ALLBUTDEFAULT	no	yes
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
tblName	yes	yes
,	no	no
partNames	yes	yes
,	no	no
colNames	yes	yes
)	no	no
;	no	no

for	no	no
(	no	no
String	no	yes
partName	yes	yes
:	no	no
partNames	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partValue	no	yes
=	no	no
partNameToVals	no	yes
(	no	no
partName	yes	yes
)	no	no
;	no	no
SharedCache	no	yes
.	no	no
ColumStatsWithWriteId	no	yes
colStatsWriteId	no	yes
=	no	no
sharedCache	no	yes
.	no	no
getPartitionColStatsFromCache	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partValue	no	yes
,	no	no
colName	yes	yes
,	no	no
writeIdList	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStatsWriteId	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
colStatsWriteId	no	yes
.	no	no
getColumnStatisticsObj	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
ColumnStatisticsObj	no	yes
colStatsForPart	no	yes
=	no	no
colStatsWriteId	no	yes
.	no	no
getColumnStatisticsObj	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partNameToWriteId	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
partNameToWriteId	no	yes
.	no	no
put	no	yes
(	no	no
partValue	no	yes
,	no	no
colStatsWriteId	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ColStatsObjWithSourceInfo	no	yes
colStatsWithPartInfo	no	yes
=	no	no
new	no	no
ColStatsObjWithSourceInfo	no	yes
(	no	no
colStatsForPart	no	yes
,	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partName	yes	yes
)	no	no
;	no	no
colStatsWithPartInfoList	no	yes
.	no	no
add	no	yes
(	no	no
colStatsWithPartInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStatsAggregator	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
colStatsAggregator	no	yes
=	no	no
ColumnStatsAggregatorFactory	no	yes
.	no	no
getColumnStatsAggregator	no	yes
(	no	no
colStatsForPart	no	yes
.	no	no
getStatsData	no	yes
(	no	no
)	no	no
.	no	no
getSetField	no	yes
(	no	no
)	no	no
,	no	no
useDensityFunctionForNDVEstimation	no	yes
,	no	no
ndvTuner	no	yes
)	no	no
;	no	no
}	no	no
partsFoundForColumn	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no

if	no	no
(	no	no
colStatsWriteId	no	yes
.	no	no
getColumnStatisticsObj	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
ColumnStatisticsObj	no	yes
colStatsForPart	no	yes
=	no	no
colStatsWriteId	no	yes
.	no	no
getColumnStatisticsObj	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partNameToWriteId	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
partNameToWriteId	no	yes
.	no	no
put	no	yes
(	no	no
partValue	no	yes
,	no	no
colStatsWriteId	no	yes
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
ColStatsObjWithSourceInfo	no	yes
colStatsWithPartInfo	no	yes
=	no	no
new	no	no
ColStatsObjWithSourceInfo	no	yes
(	no	no
colStatsForPart	no	yes
,	no	no
catName	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partName	no	yes
)	no	no
;	no	no
colStatsWithPartInfoList	no	yes
.	no	no
add	no	yes
(	no	no
colStatsWithPartInfo	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
colStatsAggregator	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
colStatsAggregator	no	yes
=	no	no
ColumnStatsAggregatorFactory	no	yes
.	no	no
getColumnStatsAggregator	no	yes
(	no	no
colStatsForPart	no	yes
.	no	no
getStatsData	no	yes
(	no	no
)	no	no
.	no	no
getSetField	no	yes
(	no	no
)	no	no
,	no	no
useDensityFunctionForNDVEstimation	no	yes
,	no	no
ndvTuner	no	yes
)	no	no
;	no	no
}	no	no
partsFoundForColumn	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
partName	no	yes
,	no	no
colName	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
colStatsWithPartInfoList	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
colStatsMap	no	yes
.	no	no
put	no	yes
(	no	no
colStatsAggregator	no	yes
,	no	no
colStatsWithPartInfoList	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partsFoundForColumn	no	yes
<	no	no
partsFound	no	yes
)	no	no
{	no	no
partsFound	no	yes
=	no	no
partsFoundForColumn	no	yes
;	no	no

static	no	no
boolean	no	no
isNotInBlackList	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
)	no	no
{	no	no
String	no	yes
str	yes	yes
=	no	no
TableName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Pattern	no	no
pattern	yes	no
:	no	no
blacklistPatterns	no	no
)	no	no
{	no	no

static	no	no
boolean	no	no
isNotInBlackList	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
)	no	no
{	no	no
String	no	yes
str	no	yes
=	no	no
TableName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Pattern	no	no
pattern	no	yes
:	no	no
blacklistPatterns	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
str	no	yes
,	no	no
pattern	no	yes
)	no	no
;	no	no
Matcher	no	yes
matcher	yes	yes
=	no	no
pattern	no	yes
.	no	no
matcher	yes	yes
(	no	no
str	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
matcher	yes	yes
.	no	no
matches	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
isInWhitelist	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
)	no	no
{	no	no
String	no	yes
str	yes	yes
=	no	no
TableName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Pattern	no	no
pattern	yes	no
:	no	no
whitelistPatterns	no	no
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
isInWhitelist	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
)	no	no
{	no	no
String	no	yes
str	no	yes
=	no	no
TableName	no	yes
.	no	no
getQualified	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
Pattern	no	no
pattern	no	yes
:	no	no
whitelistPatterns	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
str	no	yes
,	no	no
pattern	no	yes
)	no	no
;	no	no
Matcher	no	yes
matcher	yes	yes
=	no	no
pattern	no	yes
.	no	no
matcher	yes	yes
(	no	no
str	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
matcher	yes	yes
.	no	no
matches	no	no
(	no	no
)	no	no
)	no	no
{	no	no

static	no	no
boolean	no	no
shouldCacheTable	no	no
(	no	no
String	no	no
catName	no	no
,	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tblName	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isNotInBlackList	no	no
(	no	no
catName	no	no
,	no	no
dbName	yes	no
,	no	no
tblName	yes	no
)	no	no
)	no	no
{	no	no

Class	no	yes
<	no	no
?	no	no
>	no	no
clazz	no	yes
=	no	no
TableWrapper	no	yes
.	no	no
class	no	no
;	no	no
Field	no	yes
[	no	no
]	no	no
fields	no	yes
=	no	no
clazz	no	yes
.	no	no
getDeclaredFields	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
size	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
Field	no	yes
field	no	yes
:	no	no
fields	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
field	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
ConcurrentHashMap	no	no
.	no	no
class	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
if	no	no
(	no	no
field	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
SharedCache	no	no
.	no	no
class	no	no
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
try	no	no
{	no	no
field	no	yes
.	no	no
setAccessible	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
Object	no	yes
val	no	yes
=	no	no
field	no	yes
.	no	no
get	no	yes
(	no	no
this	no	no
)	no	no
;	no	no
ObjectEstimator	no	yes
oe	no	yes
=	no	no
getMemorySizeEstimator	no	yes
(	no	no
field	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
oe	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
size	no	yes
+=	no	no
oe	no	yes
.	no	no
estimate	no	yes
(	no	no
val	no	yes
,	no	no
sizeEstimators	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	no
)	no	no
{	no	no

public	no	no
Partition	no	yes
getPartition	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
partVals	yes	yes
,	no	no
SharedCache	no	no
sharedCache	no	no
)	no	no
{	no	no
Partition	no	yes
part	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tableLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
PartitionWrapper	no	yes
wrapper	no	yes
=	no	no
partitionCache	no	yes
.	no	no
get	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildPartitionCacheKey	no	yes
(	no	no
partVals	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
wrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

mn	no	yes
=	no	no
MemberName	no	yes
.	no	no
PRIMARY_KEY_CACHE	no	yes
;	no	no
constraintClass	no	yes
=	no	no
SQLPrimaryKey	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
this	no	no
.	no	no
foreignKeyCache	no	yes
.	no	no
containsKey	no	no
(	no	no
name	yes	yes
)	no	no
)	no	no
{	no	no
constraint	no	yes
=	no	no
this	no	no
.	no	no
foreignKeyCache	no	yes
.	no	no
remove	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
mn	no	yes
=	no	no
MemberName	no	yes
.	no	no
FOREIGN_KEY_CACHE	no	yes
;	no	no
constraintClass	no	yes
=	no	no
SQLForeignKey	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
this	no	no
.	no	no
notNullConstraintCache	no	yes
.	no	no
containsKey	no	no
(	no	no
name	yes	yes
)	no	no
)	no	no
{	no	no
constraint	no	yes
=	no	no
this	no	no
.	no	no
notNullConstraintCache	no	yes
.	no	no
remove	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
mn	no	yes
=	no	no
MemberName	no	yes
.	no	no
NOTNULL_CONSTRAINT_CACHE	no	yes
;	no	no
constraintClass	no	yes
=	no	no
SQLNotNullConstraint	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
this	no	no
.	no	no
uniqueConstraintCache	no	yes
.	no	no
containsKey	no	no
(	no	no
name	yes	yes
)	no	no
)	no	no
{	no	no
constraint	no	yes
=	no	no
this	no	no
.	no	no
uniqueConstraintCache	no	yes
.	no	no
remove	no	yes
(	no	no
name	yes	yes
)	no	no
;	no	no
mn	no	yes
=	no	no
MemberName	no	yes
.	no	no
UNIQUE_CONSTRAINT_CACHE	no	yes
;	no	no
constraintClass	no	yes
=	no	no
SQLUniqueConstraint	no	yes
.	no	no
class	no	no
;	no	no
}	no	no
if	no	no
(	no	no
constraint	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
alterPartitionAndStats	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
partVals	yes	yes
,	no	no
SharedCache	no	no
sharedCache	no	no
,	no	no
long	no	no
writeId	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
parameters	no	no
,	no	no
List	no	no
<	no	no
ColumnStatisticsObj	no	no
>	no	no
colStatsObjs	no	no
)	no	no
{	no	no
try	no	no
{	no	no
tableLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
PartitionWrapper	no	yes
partitionWrapper	no	yes
=	no	no
partitionCache	no	yes
.	no	no
get	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildPartitionCacheKey	no	yes
(	no	no
partVals	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
partitionWrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

try	no	no
{	no	no
tableLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
tbl	no	yes
=	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
partName	no	yes
:	no	no
partNames	no	no
)	no	no
{	no	no
ColumnStatisticsDesc	no	yes
csd	no	yes
=	no	no
new	no	no
ColumnStatisticsDesc	no	yes
(	no	no
false	no	no
,	no	no
tbl	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
tbl	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
csd	no	yes
.	no	no
setCatName	no	yes
(	no	no
tbl	no	yes
.	no	no
getCatName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
csd	no	yes
.	no	no
setPartName	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
csd	no	yes
.	no	no
setLastAnalyzed	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
statObject	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partVal	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
getPartValuesFromPartName	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
colName	yes	yes
:	no	no
colNames	no	no
)	no	no
{	no	no
ColumnStatisticsObj	no	yes
statisticsObj	no	yes
=	no	no
partitionColStatsCache	no	yes
.	no	no
get	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildPartitonColStatsCacheKey	no	yes
(	no	no
partVal	yes	yes
,	no	no
colName	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
statisticsObj	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
statObject	no	yes
.	no	no
add	no	yes
(	no	no
statisticsObj	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

else	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
colName	no	yes
+	no	no
+	no	no
partVal	no	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
ColumnStatistics	no	yes
columnStatistics	no	yes
=	no	no
new	no	no
ColumnStatistics	no	yes
(	no	no
csd	no	yes
,	no	no
statObject	no	yes
)	no	no
;	no	no
columnStatistics	no	yes
.	no	no
setEngine	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
HIVE_ENGINE	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
writeIdList	yes	no
!=	no	no
null	no	no
&&	no	no
TxnUtils	no	no
.	no	no
isTransactionalTable	no	no
(	no	no
getParameters	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
columnStatistics	no	yes
.	no	no
setIsStatsCompliant	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
txnStatSupported	no	no
)	no	no
{	no	no
columnStatistics	no	yes
.	no	no
setIsStatsCompliant	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
PartitionWrapper	no	yes
wrapper	no	yes
=	no	no
partitionCache	no	yes
.	no	no
get	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildPartitionCacheKey	no	yes
(	no	no
partVal	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
wrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
columnStatistics	no	yes
.	no	no
setIsStatsCompliant	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Partition	no	yes
partition	yes	yes
=	no	no
wrapper	no	yes
.	no	no
getPartition	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
compareAndSetMemberCacheUpdated	no	no
(	no	no
MemberName	no	no
.	no	no
PARTITION_COL_STATS_CACHE	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partVal	no	yes
;	no	no
try	no	no
{	no	no
partVal	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makeValsFromName	no	yes
(	no	no
cs	no	yes
.	no	no
getStatsDesc	no	yes
(	no	no
)	no	no
.	no	no
getPartName	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
colStatsObjs	no	yes
=	no	no
cs	no	yes
.	no	no
getStatsObj	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ColumnStatisticsObj	no	yes
colStatObj	no	yes
:	no	no
colStatsObjs	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
compareAndSetMemberCacheUpdated	no	no
(	no	no
MemberName	no	no
.	no	no
PARTITION_COL_STATS_CACHE	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
getTable	no	yes
(	no	no
)	no	no
.	no	no
getTableName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
key	no	yes
=	no	no
CacheUtils	no	yes
.	no	no
buildPartitonColStatsCacheKey	no	yes
(	no	no
partVal	no	yes
,	no	no
colStatObj	no	yes
.	no	no
getColName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
newPartitionColStatsCache	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
colStatObj	no	yes
.	no	no
deepCopy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
statsSize	no	yes
+=	no	no
getObjectSize	no	yes
(	no	no
ColumnStatisticsObj	no	yes
.	no	no
class	no	no
,	no	no
colStatObj	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
void	no	no
refreshAggrPartitionColStats	no	no
(	no	no
AggrStats	no	no
aggrStatsAllPartitions	no	no
,	no	no
AggrStats	no	no
aggrStatsAllButDefaultPartition	no	no
,	no	no
SharedCache	no	no
sharedCache	no	yes
,	no	no
Map	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
,	no	no
Long	no	no
>	no	no
partNameToWriteId	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>>	no	no
newAggrColStatsCache	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
String	no	yes
,	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
tableLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
statsSize	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
partNameToWriteId	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
,	no	no
Long	no	no
>	no	no
partValuesWriteIdSet	no	yes
:	no	no
partNameToWriteId	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
partValues	yes	yes
=	no	no
partValuesWriteIdSet	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
Partition	no	yes
partition	no	yes
=	no	no
getPartition	no	yes
(	no	no
partValues	yes	yes
,	no	no
sharedCache	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
partition	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
alterTableAndStatsInCache	no	no
(	no	no
String	no	no
catName	no	yes
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tblName	yes	yes
,	no	no
long	no	no
writeId	no	no
,	no	no
List	no	no
<	no	no
ColumnStatisticsObj	no	no
>	no	no
colStatsObjs	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
String	no	no
>	no	no
newParams	no	no
)	no	no
{	no	no
try	no	no
{	no	no
cacheLock	no	yes
.	no	no
writeLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
TableWrapper	no	yes
tblWrapper	no	yes
=	no	no
tableCache	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildTableKey	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tblWrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
ColumnStatistics	no	no
getTableColStatsFromCache	no	no
(	no	no
String	no	no
catName	no	yes
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tblName	yes	yes
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
colNames	no	no
,	no	no
String	no	no
validWriteIds	no	no
,	no	no
boolean	no	no
areTxnStatsSupported	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
cacheLock	no	yes
.	no	no
readLock	no	yes
(	no	no
)	no	no
.	no	no
lock	no	yes
(	no	no
)	no	no
;	no	no
TableWrapper	no	yes
tblWrapper	no	yes
=	no	no
tableCache	no	yes
.	no	no
getIfPresent	no	yes
(	no	no
CacheUtils	no	yes
.	no	no
buildTableKey	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
tblWrapper	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

public	no	no
void	no	no
printCacheStats	no	no
(	no	no
)	no	no
{	no	no
CacheStats	no	yes
cs	yes	yes
=	no	no
tableCache	no	yes
.	no	no
stats	no	yes
(	no	no
)	no	no
;	no	no

if	no	no
(	no	no
ndvEstimator	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ndvEstimator	no	yes
=	no	no
NumDistinctValueEstimatorFactory	no	yes
.	no	no
getEmptyNumDistinctValueEstimator	no	yes
(	no	no
ndvEstimator	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
colName	yes	yes
+	no	no
+	no	no
(	no	no
ndvEstimator	no	yes
!=	no	no
null	no	no
)	no	no
)	no	no
;	no	no
ColumnStatisticsData	no	yes
columnStatisticsData	no	yes
=	no	no
new	no	no
ColumnStatisticsData	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
doAllPartitionContainStats	no	no
||	no	no
colStatsWithSourceInfo	no	no
.	no	no
size	no	no
(	no	no
)	no	no
<	no	no
2	no	no
)	no	no
{	no	no
StringColumnStatsDataInspector	no	yes
aggregateData	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
ColStatsObjWithSourceInfo	no	no
csp	no	yes
:	no	no
colStatsWithSourceInfo	no	no
)	no	no
{	no	no
ColumnStatisticsObj	no	yes
cso	no	yes
=	no	no
csp	no	yes
.	no	no
getColStatsObj	no	yes
(	no	no
)	no	no
;	no	no
StringColumnStatsDataInspector	no	yes
newData	no	yes
=	no	no
stringInspectorFromStats	no	yes
(	no	no
cso	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ndvEstimator	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ndvEstimator	no	yes
.	no	no
mergeEstimators	no	yes
(	no	no
newData	no	yes
.	no	no
getNdvEstimator	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
aggregateData	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
aggregateData	no	yes
=	no	no
newData	no	yes
.	no	no
deepCopy	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
aggregateData	no	yes
.	no	no
setMaxColLen	no	yes
(	no	no
Math	no	yes
.	no	no
max	no	yes
(	no	no
aggregateData	no	yes
.	no	no
getMaxColLen	no	yes
(	no	no
)	no	no
,	no	no
newData	no	yes
.	no	no
getMaxColLen	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
merge	no	no
(	no	no
ColumnStatisticsObj	no	no
aggregateColStats	yes	no
,	no	no
ColumnStatisticsObj	no	no
newColStats	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
RawStore	no	yes
ms	no	yes
=	no	no
HiveMetaStore	no	yes
.	no	no
HMSHandler	no	yes
.	no	no
getMSForConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
long	no	no
deleteCnt	yes	yes
=	no	no
ms	no	yes
.	no	no
cleanupEvents	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
deleteCnt	yes	yes
>	no	no
0L	no	no
)	no	no
{	no	no

private	no	no
static	no	no
Method	no	yes
requiredMethod	no	no
(	no	no
Class	no	no
clazz	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
MessageEncoder	no	yes
.	no	no
class	no	no
.	no	no
isAssignableFrom	no	no
(	no	no
clazz	no	yes
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
Method	no	yes
methodInstance	no	yes
=	no	no
clazz	no	yes
.	no	no
getMethod	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
MessageEncoder	no	yes
.	no	no
class	no	no
.	no	no
isAssignableFrom	no	no
(	no	no
methodInstance	no	yes
.	no	no
getReturnType	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
int	no	no
modifiers	no	yes
=	no	no
methodInstance	no	yes
.	no	no
getModifiers	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
Modifier	no	no
.	no	no
isStatic	no	no
(	no	no
modifiers	no	yes
)	no	no
&&	no	no
Modifier	no	no
.	no	no
isPublic	no	no
(	no	no
modifiers	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
methodInstance	no	yes
;	no	no
}	no	no
throw	no	no
new	no	no
NoSuchMethodException	no	yes
(	no	no
+	no	no
clazz	no	yes
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
throw	no	no
new	no	no
NoSuchMethodException	no	yes
(	no	no
+	no	no
MessageEncoder	no	yes
.	no	no
class	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
NoSuchMethodException	no	yes
e	no	yes
)	no	no
{	no	no
String	no	yes
message	yes	yes
=	no	no
clazz	no	yes
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
message	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
String	no	yes
message	yes	yes
=	no	no
clazz	no	yes
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
MessageEncoder	no	yes
.	no	no
class	no	no
.	no	no
getCanonicalName	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
MessageEncoder	no	no
getInstance	no	no
(	no	no
String	no	no
messageFormat	yes	yes
)	no	no
throws	no	no
InvocationTargetException	no	no
,	no	no
IllegalAccessException	no	no
{	no	no
Method	no	yes
methodInstance	no	yes
=	no	no
registry	no	yes
.	no	no
get	no	yes
(	no	no
messageFormat	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
methodInstance	no	yes
==	no	no
null	no	no
)	no	no
{	no	no

try	no	no
{	no	no
json	no	yes
=	no	no
jsonWriter	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
registry	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
JsonProcessingException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
Path	no	yes
tmpFile	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tmpFile	no	yes
=	no	no
Files	no	yes
.	no	no
createTempFile	no	yes
(	no	no
metricsDir	no	yes
,	no	no
,	no	no
,	no	no
FILE_ATTRS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no

}	no	no
Path	no	yes
tmpFile	yes	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
tmpFile	yes	yes
=	no	no
Files	no	yes
.	no	no
createTempFile	no	yes
(	no	no
metricsDir	no	yes
,	no	no
,	no	no
,	no	no
FILE_ATTRS	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	yes
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no

catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	no
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	yes	yes
,	no	no
e	no	yes
)	no	no
;	no	no
return	no	no
;	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SecurityException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	no
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	no	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no

}	no	no
catch	no	no
(	no	no
UnsupportedOperationException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
try	no	no
(	no	no
BufferedWriter	no	no
bw	no	yes
=	no	no
Files	no	yes
.	no	no
newBufferedWriter	no	no
(	no	no
tmpFile	yes	yes
,	no	no
StandardCharsets	no	no
.	no	no
UTF_8	no	no
)	no	no
)	no	no
{	no	no
bw	no	yes
.	no	no
write	no	yes
(	no	no
json	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
tmpFile	yes	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Files	no	yes
.	no	no
move	no	yes
(	no	no
tmpFile	yes	yes
,	no	no
path	no	yes
,	no	no
StandardCopyOption	no	yes
.	no	no
ATOMIC_MOVE	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
tmpFile	yes	yes
,	no	no
path	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no

public	no	no
void	no	no
perfLogBegin	no	no
(	no	no
String	no	no
callerName	yes	no
,	no	no
String	no	no
method	yes	yes
)	no	no
{	no	no
long	no	no
startTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
startTimes	no	yes
.	no	no
put	no	yes
(	no	no
method	yes	yes
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
startTime	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Long	no	yes
startTime	no	yes
=	no	no
startTimes	no	yes
.	no	no
get	no	yes
(	no	no
method	no	yes
)	no	no
;	no	no
long	no	no
endTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
endTimes	no	yes
.	no	no
put	no	yes
(	no	no
method	no	yes
,	no	no
Long	no	yes
.	no	no
valueOf	no	yes
(	no	no
endTime	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
duration	no	yes
=	no	no
startTime	no	yes
==	no	no
null	no	no
?	no	no
-	no	no
1	no	no
:	no	no
endTime	no	yes
-	no	no
startTime	no	yes
.	no	no
longValue	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
method	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
startTime	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
startTime	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
endTime	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
startTime	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
duration	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
callerName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
additionalInfo	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
additionalInfo	no	yes
)	no	no
;	no	no
}	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
doDelete	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
int	no	no
nDeletedTokens	yes	yes
=	no	no
0	no	no
;	no	no
List	no	yes
<	no	no
DelegationTokenIdentifier	no	yes
>	no	no
allDelegationTokenIDs	yes	yes
=	no	no
getAllDelegationTokenIDs	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
DelegationTokenIdentifier	no	yes
tokenId	no	no
:	no	no
Iterables	no	no
.	no	no
filter	no	no
(	no	no
allDelegationTokenIDs	yes	yes
,	no	no
selectForDeletion	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
(	no	no
++	no	no
nDeletedTokens	yes	yes
%	no	no
batchSize	no	no
)	no	no
==	no	no
0	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
DelegationTokenIdentifier	no	yes
cancelToken	no	no
(	no	no
Token	no	no
<	no	no
DelegationTokenIdentifier	no	yes
>	no	no
token	no	yes
,	no	no
String	no	no
canceller	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
DelegationTokenIdentifier	no	yes
id	yes	yes
=	no	no
getTokenIdentifier	no	yes
(	no	no
token	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
protected	no	no
void	no	no
logUpdateMasterKey	no	no
(	no	no
DelegationKey	no	yes
key	yes	yes
)	no	no
throws	no	no
IOException	no	no
{	no	no
int	no	no
keySeq	no	yes
=	no	no
this	no	no
.	no	no
tokenStore	no	yes
.	no	no
addMasterKey	no	yes
(	no	no
encodeWritable	no	yes
(	no	no
key	yes	yes
)	no	no
)	no	no
;	no	no
DelegationKey	no	yes
keyWithSeq	no	yes
=	no	no
new	no	no
DelegationKey	no	yes
(	no	no
keySeq	no	yes
,	no	no
key	yes	yes
.	no	no
getExpiryDate	no	yes
(	no	no
)	no	no
,	no	no
key	yes	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
keyStr	no	yes
=	no	no
encodeWritable	no	yes
(	no	no
keyWithSeq	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
tokenStore	no	yes
.	no	no
updateMasterKey	no	yes
(	no	no
keySeq	no	yes
,	no	no
keyStr	no	yes
)	no	no
;	no	no
decodeWritable	no	yes
(	no	no
key	yes	yes
,	no	no
keyStr	no	yes
)	no	no
;	no	no

public	no	no
void	no	no
ensurePath	no	no
(	no	no
String	no	yes
path	no	yes
,	no	no
List	no	no
<	no	no
ACL	no	no
>	no	no
acl	no	yes
)	no	no
throws	no	no
TokenStoreException	no	no
{	no	no
try	no	no
{	no	no
CuratorFramework	no	yes
zk	no	yes
=	no	no
getSession	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
node	yes	yes
=	no	no
zk	no	yes
.	no	no
create	no	yes
(	no	no
)	no	no
.	no	no
creatingParentsIfNeeded	no	yes
(	no	no
)	no	no
.	no	no
withMode	no	yes
(	no	no
CreateMode	no	yes
.	no	no
PERSISTENT	no	yes
)	no	no
.	no	no
withACL	no	yes
(	no	no
acl	no	yes
)	no	no
.	no	no
forPath	no	yes
(	no	no
path	no	yes
)	no	no
;	no	no

public	no	no
String	no	no
addLimitClause	no	no
(	no	no
int	no	no
numRows	no	no
,	no	no
String	no	no
noSelectsqlQuery	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
switch	no	no
(	no	no
dbProduct	no	no
)	no	no
{	no	no
case	no	no
DERBY	no	no
:	no	no
return	no	no
+	no	no
noSelectsqlQuery	no	no
+	no	no
+	no	no
numRows	no	no
+	no	no
;	no	no
case	no	no
MYSQL	no	no
:	no	no
case	no	no
POSTGRES	no	no
:	no	no
return	no	no
+	no	no
noSelectsqlQuery	no	no
+	no	no
+	no	no
numRows	no	no
;	no	no
case	no	no
ORACLE	no	no
:	no	no
return	no	no
+	no	no
noSelectsqlQuery	no	no
+	no	no
+	no	no
numRows	no	no
;	no	no
case	no	no
SQLSERVER	no	no
:	no	no
return	no	no
+	no	no
numRows	no	no
+	no	no
+	no	no
noSelectsqlQuery	no	no
;	no	no
default	no	no
:	no	no
String	no	no
msg	yes	no
=	no	no
+	no	no
dbProduct	no	no
+	no	no
;	no	no

public	no	no
String	no	yes
createTxnLockStatement	no	no
(	no	no
boolean	no	no
shared	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
txnLockTable	no	yes
=	no	no
;	no	no
switch	no	no
(	no	no
dbProduct	no	no
)	no	no
{	no	no
case	no	no
MYSQL	no	no
:	no	no
return	no	no
+	no	no
txnLockTable	no	yes
+	no	no
+	no	no
(	no	no
shared	no	no
?	no	no
:	no	no
)	no	no
;	no	no
case	no	no
POSTGRES	no	no
:	no	no
case	no	no
DERBY	no	no
:	no	no
case	no	no
ORACLE	no	no
:	no	no
return	no	no
+	no	no
txnLockTable	no	yes
+	no	no
+	no	no
(	no	no
shared	no	no
?	no	no
:	no	no
)	no	no
+	no	no
;	no	no
case	no	no
SQLSERVER	no	no
:	no	no
return	no	no
+	no	no
txnLockTable	no	yes
+	no	no
+	no	no
(	no	no
shared	no	no
?	no	no
:	no	no
)	no	no
+	no	no
;	no	no
default	no	no
:	no	no
String	no	yes
msg	yes	no
=	no	no
+	no	no
dbProduct	no	no
+	no	no
;	no	no

objectStore	no	yes
.	no	no
setConf	no	yes
(	no	no
MetastoreConf	no	yes
.	no	no
newMetastoreConf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetaToolTask	no	yes
task	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
cl	no	yes
.	no	no
isListFSRoot	no	no
(	no	no
)	no	no
)	no	no
{	no	no
task	no	yes
=	no	no
new	no	no
MetaToolTaskListFSRoot	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
cl	no	yes
.	no	no
isExecuteJDOQL	no	no
(	no	no
)	no	no
)	no	no
{	no	no
task	no	yes
=	no	no
new	no	no
MetaToolTaskExecuteJDOQLQuery	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
cl	no	yes
.	no	no
isUpdateLocation	no	no
(	no	no
)	no	no
)	no	no
{	no	no
task	no	yes
=	no	no
new	no	no
MetaToolTaskUpdateLocation	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
task	no	yes
.	no	no
setObjectStore	no	yes
(	no	no
objectStore	no	yes
)	no	no
;	no	no
task	no	yes
.	no	no
setCommandLine	no	yes
(	no	no
cl	no	yes
)	no	no
;	no	no
task	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

logAndPrintToStdout	no	yes
(	no	no
+	no	no
url	no	yes
)	no	no
;	no	no
logAndPrintToStdout	no	yes
(	no	no
+	no	no
driver	no	yes
)	no	no
;	no	no
logAndPrintToStdout	no	yes
(	no	no
+	no	no
userName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
MetastoreConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	no
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	no
.	no	no
HIVE_IN_TEST	no	no
)	no	no
)	no	no
{	no	no
logAndPrintToStdout	no	yes
(	no	no
+	no	no
password	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
(	no	no
userName	no	yes
==	no	no
null	no	no
)	no	no
||	no	no
userName	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
Class	no	yes
.	no	no
forName	no	yes
(	no	no
driver	no	yes
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
DriverManager	no	yes
.	no	no
getConnection	no	yes
(	no	no
url	no	yes
,	no	no
userName	no	yes
,	no	no
password	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
schema	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conn	no	yes
.	no	no
setSchema	no	yes
(	no	no
schema	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
conn	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
|	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ClassNotFoundException	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
logAndPrintToStdout	no	no
(	no	no
String	no	no
msg	yes	no
)	no	no
{	no	no

CommandBuilder	no	yes
builder	no	yes
=	no	no
new	no	no
CommandBuilder	no	yes
(	no	no
conf	no	yes
,	no	no
url	no	yes
,	no	no
driver	no	yes
,	no	no
userName	no	yes
,	no	no
passWord	no	yes
,	no	no
sqlScriptFile	no	yes
)	no	no
.	no	no
setVerbose	no	yes
(	no	no
verbose	no	yes
)	no	no
;	no	no
SqlLine	no	yes
sqlLine	no	yes
=	no	no
new	no	no
SqlLine	no	yes
(	no	no
)	no	no
;	no	no
ByteArrayOutputStream	no	yes
outputForLog	yes	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
!	no	no
verbose	no	yes
)	no	no
{	no	no
OutputStream	no	yes
out	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
out	no	yes
=	no	no
outputForLog	yes	yes
=	no	no
new	no	no
ByteArrayOutputStream	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
out	no	yes
=	no	no
new	no	no
NullOutputStream	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
sqlLine	no	yes
.	no	no
setOutputStream	no	yes
(	no	no
new	no	no
PrintStream	no	yes
(	no	no
out	no	yes
)	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
setProperty	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
builder	no	yes
.	no	no
buildToLog	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
SqlLine	no	yes
.	no	no
Status	no	yes
status	no	yes
=	no	no
sqlLine	no	yes
.	no	no
begin	no	yes
(	no	no
builder	no	yes
.	no	no
buildToRun	no	yes
(	no	no
)	no	no
,	no	no
null	no	no
,	no	no
false	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
&&	no	no
outputForLog	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
logAndPrintToError	no	no
(	no	no
String	no	no
errmsg	yes	no
)	no	no
{	no	no

Object	no	yes
updateLocation	no	yes
=	no	no
location	no	yes
==	no	no
null	no	no
?	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
)	no	no
:	no	no
+	no	no
location	no	yes
+	no	no
;	no	no
Object	no	yes
updateDescription	no	yes
=	no	no
description	no	yes
==	no	no
null	no	no
?	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
)	no	no
:	no	no
+	no	no
description	no	yes
+	no	no
;	no	no
String	no	yes
update	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
UPDATE_CATALOG_STMT	no	yes
)	no	no
,	no	no
updateLocation	no	yes
,	no	no
updateDescription	no	yes
,	no	no
catName	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
update	no	yes
)	no	no
;	no	no
int	no	no
count	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
update	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
count	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
+	no	no
catName	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
conn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
)	no	no
{	no	no
conn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

try	no	no
{	no	no
conn	no	yes
.	no	no
setAutoCommit	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
ifNotExists	no	no
&&	no	no
catalogExists	no	no
(	no	no
stmt	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
int	no	no
catNum	no	yes
=	no	no
getNextCatalogId	no	yes
(	no	no
stmt	no	yes
)	no	no
;	no	no
addCatalog	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
catNum	no	yes
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
)	no	no
{	no	no
conn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no

private	no	no
boolean	no	no
catalogExists	no	no
(	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
CATALOG_EXISTS_QUERY	no	yes
)	no	no
,	no	no
catName	no	yes
)	no	no
;	no	no

private	no	no
int	no	no
getNextCatalogId	no	no
(	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
HiveMetaException	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
NEXT_CATALOG_ID_QUERY	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
addCatalog	no	no
(	no	no
Connection	no	no
conn	no	no
,	no	no
Statement	no	no
stmt	no	no
,	no	no
int	no	no
catNum	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
update	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
ADD_CATALOG_STMT	no	yes
)	no	no
,	no	no
catNum	no	yes
,	no	no
catName	no	yes
,	no	no
description	no	yes
,	no	no
location	no	yes
)	no	no
;	no	no

try	no	no
(	no	no
Statement	no	no
stmt	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
initTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
conflicts	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
DB_CONFLICTS_STMT	no	yes
)	no	no
,	no	no
fromCatalog	no	yes
,	no	no
toCatalog	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
conflicts	no	yes
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
conflicts	no	yes
)	no	no
;	no	no
boolean	no	no
cleanMerge	no	yes
=	no	no
true	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cleanMerge	no	yes
=	no	no
false	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
+	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
+	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
cleanMerge	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
conn	no	yes
.	no	no
setAutoCommit	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
String	no	yes
insert	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
ADD_AUTOPURGE_TO_TABLE	no	yes
)	no	no
,	no	no
,	no	no
,	no	no
,	no	no
fromCatalog	no	yes
)	no	no
;	no	no

while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
cleanMerge	no	yes
=	no	no
false	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
+	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
+	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
cleanMerge	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
exit	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
conn	no	yes
.	no	no
setAutoCommit	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
String	no	yes
insert	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
ADD_AUTOPURGE_TO_TABLE	no	yes
)	no	no
,	no	no
,	no	no
,	no	no
,	no	no
fromCatalog	no	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
fromCatalog	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
insert	yes	yes
)	no	no
;	no	no
prevTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
count	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
insert	yes	yes
)	no	no
;	no	no
curTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
count	no	yes
+	no	no
+	no	no
(	no	no
curTime	no	yes
-	no	no
prevTime	no	yes
)	no	no
)	no	no
;	no	no
insert	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
ADD_AUTOPURGE_TO_TABLE	no	yes
)	no	no
,	no	no
,	no	no
,	no	no
,	no	no
fromCatalog	no	yes
)	no	no
;	no	no

count	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
insert	no	yes
)	no	no
;	no	no
curTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
(	no	no
curTime	no	yes
-	no	no
prevTime	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
update	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
CONVERT_TABLE_TO_EXTERNAL	no	yes
)	no	no
,	no	no
,	no	no
,	no	no
fromCatalog	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
fromCatalog	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
update	no	yes
)	no	no
;	no	no
prevTime	no	yes
=	no	no
curTime	no	yes
;	no	no
count	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
update	no	yes
)	no	no
;	no	no
curTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
count	yes	yes
+	no	no
+	no	no
(	no	no
curTime	no	yes
-	no	no
prevTime	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
merge	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
MERGE_CATALOG_STMT	no	yes
)	no	no
,	no	no
toCatalog	yes	yes
,	no	no
fromCatalog	yes	yes
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
fromCatalog	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
merge	no	yes
)	no	no
;	no	no
prevTime	no	yes
=	no	no
curTime	no	yes
;	no	no
count	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
merge	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
count	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
count	no	yes
+	no	no
+	no	no
fromCatalog	no	yes
+	no	no
+	no	no
toCatalog	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
schemaTool	no	no
.	no	no
isDryRun	no	no
(	no	no
)	no	no
)	no	no
{	no	no
conn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
conn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
(	no	no
curTime	no	yes
-	no	no
initTime	no	yes
)	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
updateCatalogNameInTable	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
String	no	yes
tableName	no	yes
,	no	no
String	no	yes
catColName	no	yes
,	no	no
String	no	yes
dbColName	no	yes
,	no	no
String	no	yes
fromCatName	no	yes
,	no	no
String	no	yes
toCatName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
boolean	no	no
zeroUpdatesOk	no	no
)	no	no
throws	no	no
HiveMetaException	no	no
,	no	no
SQLException	no	no
{	no	no
String	no	yes
update	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
UPDATE_CATALOG_NAME_STMT	no	yes
)	no	no
,	no	no
tableName	no	yes
,	no	no
catColName	no	yes
,	no	no
toCatName	no	yes
,	no	no
catColName	no	yes
,	no	no
fromCatName	no	yes
,	no	no
dbColName	no	yes
,	no	no
dbName	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
updateTableId	no	no
(	no	no
Statement	no	no
stmt	no	yes
)	no	no
throws	no	no
SQLException	no	no
,	no	no
HiveMetaException	no	no
{	no	no
long	no	no
oldDbId	no	yes
=	no	no
getDbId	no	yes
(	no	no
stmt	no	yes
,	no	no
fromDb	no	yes
,	no	no
fromCat	no	yes
)	no	no
;	no	no
long	no	no
newDbId	no	yes
=	no	no
getDbId	no	yes
(	no	no
stmt	no	yes
,	no	no
toDb	no	yes
,	no	no
toCat	no	yes
)	no	no
;	no	no
String	no	yes
update	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
UPDATE_TABLE_ID_STMT	no	yes
)	no	no
,	no	no
newDbId	no	yes
,	no	no
oldDbId	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no

private	no	no
long	no	no
getDbId	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
String	no	yes
db	no	yes
,	no	no
String	no	yes
catalog	no	yes
)	no	no
throws	no	no
SQLException	no	no
,	no	no
HiveMetaException	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
DB_ID_QUERY	no	yes
)	no	no
,	no	no
db	no	yes
,	no	no
catalog	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
updateDbNameForTable	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
String	no	yes
tableName	no	yes
,	no	no
String	no	yes
tableColumnName	no	yes
,	no	no
String	no	yes
fromCat	no	yes
,	no	no
String	no	yes
toCat	no	yes
,	no	no
String	no	yes
fromDb	no	yes
,	no	no
String	no	yes
toDb	no	yes
,	no	no
String	no	yes
hiveTblName	no	yes
)	no	no
throws	no	no
HiveMetaException	no	no
,	no	no
SQLException	no	no
{	no	no
String	no	yes
update	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
schemaTool	no	yes
.	no	no
quote	no	yes
(	no	no
UPDATE_DB_NAME_STMT	no	yes
)	no	no
,	no	no
tableName	no	yes
,	no	no
toCat	no	yes
,	no	no
toDb	no	yes
,	no	no
fromCat	no	yes
,	no	no
fromDb	no	yes
,	no	no
tableColumnName	no	yes
,	no	no
hiveTblName	no	yes
)	no	no
;	no	no

return	no	no
false	no	no
;	no	no
}	no	no
Connection	no	yes
hmsConn	no	yes
=	no	no
schemaTool	no	yes
.	no	no
getConnectionToMetastore	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
version	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
dbTables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
schema	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
schema	no	yes
=	no	no
hmsConn	no	yes
.	no	no
getSchema	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLFeatureNotSupportedException	no	no
e	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
DatabaseMetaData	no	yes
metadata	no	yes
=	no	no
conn	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
metadata	no	yes
.	no	no
getTables	no	yes
(	no	no
null	no	no
,	no	no
schema	no	yes
,	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
table	yes	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
;	no	no

dbTables	no	yes
.	no	no
add	no	yes
(	no	no
table	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
table	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
rs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
rs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
schemaTables	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
subScripts	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
baseDir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
getMetaStoreScriptDir	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
schemaFile	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
getMetaStoreScriptDir	no	yes
(	no	no
)	no	no
,	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
generateInitFileName	no	yes
(	no	no
version	no	yes
)	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no

finally	no	no
{	no	no
if	no	no
(	no	no
rs	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
rs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
HiveMetaException	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
schemaTables	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
subScripts	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
baseDir	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
getMetaStoreScriptDir	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getParent	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
schemaFile	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
getMetaStoreScriptDir	no	yes
(	no	no
)	no	no
,	no	no
schemaTool	no	yes
.	no	no
getMetaStoreSchemaInfo	no	yes
(	no	no
)	no	no
.	no	no
generateInitFileName	no	yes
(	no	no
version	no	yes
)	no	no
)	no	no
.	no	no
getPath	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
schemaFile	no	yes
)	no	no
;	no	no
subScripts	no	yes
.	no	no
addAll	no	yes
(	no	no
findCreateTable	no	yes
(	no	no
schemaFile	no	yes
,	no	no
schemaTables	yes	yes
)	no	no
)	no	no
;	no	no
while	no	no
(	no	no
subScripts	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
schemaFile	no	yes
=	no	no
baseDir	no	yes
+	no	no
+	no	no
schemaTool	no	yes
.	no	no
getDbType	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
subScripts	no	yes
.	no	no
remove	no	yes
(	no	no
0	no	no
)	no	no
;	no	no

String	no	yes
subScript	no	yes
=	no	no
sp	no	yes
.	no	no
getScriptName	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
subScript	no	yes
+	no	no
)	no	no
;	no	no
subs	no	yes
.	no	no
add	no	yes
(	no	no
subScript	no	yes
)	no	no
;	no	no
continue	no	no
;	no	no
}	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
line	no	yes
=	no	no
line	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Matcher	no	yes
matcher	no	yes
=	no	no
regexp	no	yes
.	no	no
matcher	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
matcher	no	yes
.	no	no
find	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
table	yes	yes
=	no	no
matcher	no	yes
.	no	no
group	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
schemaTool	no	no
.	no	no
getDbType	no	no
(	no	no
)	no	no
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
{	no	no
table	yes	yes
=	no	no
table	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
handle	no	yes
=	no	no
txnHandler	no	yes
.	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
TxnStore	no	yes
.	no	no
MUTEX_KEY	no	yes
.	no	no
HouseKeeper	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
cleanTheHouse	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
performTask	no	no
(	no	no
FailableRunnable	no	no
<	no	no
MetaException	no	no
>	no	no
task	no	yes
,	no	no
String	no	no
description	yes	no
)	no	no
{	no	no
long	no	no
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
Functions	no	yes
.	no	no
run	no	yes
(	no	no
task	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
isAliveCounter	yes	yes
++	no	no
;	no	no
txnHandler	no	yes
.	no	no
countOpenTxns	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
now	no	yes
-	no	no
lastLogTime	no	no
>	no	no
LOG_INTERVAL_MS	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
handle	no	yes
=	no	no
txnHandler	no	yes
.	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
TxnStore	no	yes
.	no	no
MUTEX_KEY	no	yes
.	no	no
TxnCleaner	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
long	no	no
start	yes	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
txnHandler	no	yes
.	no	no
cleanEmptyAbortedAndCommittedTxns	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
Set	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
findPotentialCompactions	no	no
(	no	no
int	no	no
abortedThreshold	no	no
,	no	no
long	no	no
abortedTimeThreshold	no	no
,	no	no
long	no	no
checkInterval	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Set	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
response	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
(	no	no
checkInterval	no	yes
>	no	no
0	no	no
?	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
quoteChar	no	yes
(	no	no
ATTEMPTED_STATE	no	yes
)	no	no
+	no	no
+	no	no
quoteChar	no	yes
(	no	no
FAILED_STATE	no	yes
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
isWithinCheckInterval	no	yes
(	no	no
,	no	no
checkInterval	no	yes
)	no	no
:	no	no
)	no	no
;	no	no

try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
(	no	no
checkInterval	no	yes
>	no	no
0	no	no
?	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
quoteChar	no	yes
(	no	no
ATTEMPTED_STATE	no	yes
)	no	no
+	no	no
+	no	no
quoteChar	no	yes
(	no	no
FAILED_STATE	no	yes
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
isWithinCheckInterval	no	yes
(	no	no
,	no	no
checkInterval	no	yes
)	no	no
:	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
CompactionInfo	no	yes
info	no	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
response	no	yes
.	no	no
add	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
rs	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
checkAbortedTimeThreshold	no	yes
=	no	no
abortedTimeThreshold	no	yes
>=	no	no
0	no	no
;	no	no
final	no	no
String	no	yes
sCheckAborted	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
+	no	no
(	no	no
checkAbortedTimeThreshold	no	yes
?	no	no
:	no	no
+	no	no
abortedThreshold	no	yes
)	no	no
;	no	no

boolean	no	no
checkAbortedTimeThreshold	no	yes
=	no	no
abortedTimeThreshold	no	yes
>=	no	no
0	no	no
;	no	no
final	no	no
String	no	yes
sCheckAborted	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
+	no	no
(	no	no
checkAbortedTimeThreshold	no	yes
?	no	no
:	no	no
+	no	no
abortedThreshold	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sCheckAborted	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
sCheckAborted	no	yes
)	no	no
;	no	no
long	no	no
systemTime	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
boolean	no	no
pastTimeThreshold	no	yes
=	no	no
checkAbortedTimeThreshold	no	yes
&&	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
4	no	no
)	no	no
+	no	no
abortedTimeThreshold	no	yes
<	no	no
systemTime	no	yes
;	no	no
int	no	no
numAbortedTxns	no	yes
=	no	no
rs	no	yes
.	no	no
getInt	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numAbortedTxns	no	yes
>	no	no
abortedThreshold	no	yes
||	no	no
pastTimeThreshold	no	yes
)	no	no
{	no	no
CompactionInfo	no	yes
info	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
tooManyAborts	no	yes
=	no	no
numAbortedTxns	no	yes
>	no	no
abortedThreshold	no	yes
;	no	no
info	yes	yes
.	no	no
hasOldAbort	no	yes
=	no	no
pastTimeThreshold	no	yes
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
CompactionInfo	no	no
findNextToCompact	no	no
(	no	no
String	no	yes
workerId	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
updStmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
;	no	no

if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
updStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
do	no	no
{	no	no
CompactionInfo	no	yes
info	no	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
id	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
type	no	yes
=	no	no
dbCompactionType2ThriftType	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
.	no	no
charAt	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
properties	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
workerId	no	yes
+	no	no
+	no	no
+	no	no
now	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
info	no	yes
.	no	no
id	no	yes
+	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
;	no	no

do	no	no
{	no	no
CompactionInfo	no	yes
info	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
id	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
type	no	yes
=	no	no
dbCompactionType2ThriftType	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
.	no	no
charAt	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
properties	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
s	no	yes
=	no	no
+	no	no
workerId	no	yes
+	no	no
+	no	no
+	no	no
now	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
info	yes	yes
.	no	no
id	no	yes
+	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCount	no	yes
=	no	no
updStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
updCount	no	yes
==	no	no
1	no	no
)	no	no
{	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
info	yes	yes
;	no	no

info	yes	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
type	no	yes
=	no	no
dbCompactionType2ThriftType	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
.	no	no
charAt	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
properties	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
long	no	no
now	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
s	no	yes
=	no	no
+	no	no
workerId	no	yes
+	no	no
+	no	no
+	no	no
now	no	yes
+	no	no
+	no	no
WORKING_STATE	yes	yes
+	no	no
+	no	no
info	yes	yes
.	no	no
id	no	yes
+	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCount	yes	yes
=	no	no
updStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
updCount	yes	yes
==	no	no
1	no	no
)	no	no
{	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
info	yes	yes
;	no	no
}	no	no
if	no	no
(	no	no
updCount	yes	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
info	yes	yes
)	no	no
;	no	no
continue	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
void	no	no
markCompacted	no	no
(	no	no
CompactionInfo	no	no
info	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
READY_FOR_CLEANING	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
info	no	yes
.	no	no
id	no	yes
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
void	no	no
markCompacted	no	no
(	no	no
CompactionInfo	no	no
info	yes	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
READY_FOR_CLEANING	yes	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
info	yes	yes
.	no	no
id	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCnt	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
updCnt	yes	yes
!=	no	no
1	no	no
)	no	no
{	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
READY_FOR_CLEANING	no	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
info	no	yes
.	no	no
id	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCnt	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
updCnt	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
READY_FOR_CLEANING	no	yes
+	no	no
+	no	no
info	no	yes
+	no	no
+	no	no
updCnt	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
List	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
findReadyToClean	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
CompactionInfo	no	yes
>	no	no
rc	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
READY_FOR_CLEANING	no	yes
+	no	no
;	no	no

while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
CompactionInfo	no	yes
info	yes	yes
=	no	no
new	no	no
CompactionInfo	no	yes
(	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
id	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
dbname	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
tableName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
3	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
partName	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
.	no	no
charAt	no	no
(	no	no
0	no	no
)	no	no
)	no	no
{	no	no
case	no	no
MAJOR_TYPE	no	no
:	no	no
info	yes	yes
.	no	no
type	no	no
=	no	no
CompactionType	no	no
.	no	no
MAJOR	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MINOR_TYPE	no	no
:	no	no
info	yes	yes
.	no	no
type	no	no
=	no	no
CompactionType	no	no
.	no	no
MINOR	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
MetaException	no	no
(	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
}	no	no
info	yes	yes
.	no	no
runAs	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
info	yes	yes
.	no	no
highestWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
7	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

switch	no	no
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
.	no	no
charAt	no	no
(	no	no
0	no	no
)	no	no
)	no	no
{	no	no
case	no	no
MAJOR_TYPE	no	no
:	no	no
info	no	yes
.	no	no
type	no	no
=	no	no
CompactionType	no	no
.	no	no
MAJOR	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MINOR_TYPE	no	no
:	no	no
info	no	yes
.	no	no
type	no	no
=	no	no
CompactionType	no	no
.	no	no
MINOR	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
throw	no	no
new	no	no
MetaException	no	no
(	no	no
+	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
}	no	no
info	no	yes
.	no	no
runAs	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
;	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
7	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
info	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
rc	no	yes
.	no	no
add	no	yes
(	no	no
info	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
rc	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
CannotRetry	no	no
public	no	no
void	no	no
markCleaned	no	no
(	no	no
CompactionInfo	no	no
info	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
info	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
info	no	yes
=	no	no
CompactionInfo	no	yes
.	no	no
loadFullFromCompactionQueue	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
info	no	yes
.	no	no
id	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no

try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
info	yes	yes
.	no	no
id	no	yes
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
info	yes	yes
=	no	no
CompactionInfo	no	yes
.	no	no
loadFullFromCompactionQueue	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
info	yes	yes
.	no	no
id	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
info	yes	yes
.	no	no
id	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCount	yes	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no

else	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
info	no	yes
.	no	no
id	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
info	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCount	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
updCount	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
info	no	yes
+	no	no
+	no	no
updCount	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
info	no	yes
.	no	no
state	no	yes
=	no	no
SUCCEEDED_STATE	no	yes
;	no	no

info	no	yes
.	no	no
state	no	yes
=	no	no
SUCCEEDED_STATE	no	yes
;	no	no
long	no	no
enqueueTime	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
CompactionInfo	no	yes
.	no	no
insertIntoCompletedCompactions	no	yes
(	no	no
pStmt	no	yes
,	no	no
info	no	yes
,	no	no
enqueueTime	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
+	no	no
+	no	no
enqueueTime	no	yes
)	no	no
;	no	no
updCount	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
s	yes	yes
+=	no	no
;	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
highestWriteId	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
s	yes	yes
+=	no	no
;	no	no
}	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
int	no	no
paramCount	no	yes
=	no	no
1	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
+	no	no
enqueueTime	no	yes
)	no	no
;	no	no
updCount	yes	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
s	no	yes
=	no	no
+	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
s	no	yes
+=	no	no
;	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
s	no	yes
+=	no	no
;	no	no
}	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
int	no	no
paramCount	no	yes
=	no	no
1	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
partName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
)	no	no
;	no	no

pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
partName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
!=	no	no
0	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
updCount	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	no
(	no	no
)	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
updCount	no	yes
+	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
highestWriteId	no	yes
!=	no	no
0	no	no
)	no	no
s	yes	yes
+=	no	no
;	no	no
if	no	no
(	no	no
info	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
s	yes	yes
+=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
paramCount	no	yes
=	no	no
1	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
paramCount	no	yes
++	no	no
,	no	no
info	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
void	no	no
cleanTxnToWriteIdTable	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
void	no	no
cleanTxnToWriteIdTable	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	yes
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
minUncommitedTxnid	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
minUncommitedTxnid	no	yes
;	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
minUncommitedTxnid	yes	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
s	no	yes
=	no	no
+	no	no
minUncommitedTxnid	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no

dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
minUncommitedTxnid	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
s	no	yes
=	no	no
+	no	no
minUncommitedTxnid	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rc	no	yes
+	no	no
+	no	no
minUncommitedTxnid	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
SafeToRetry	no	no
public	no	no
void	no	no
cleanEmptyAbortedAndCommittedTxns	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
lowWaterMark	no	yes
=	no	no
getOpenTxnTimeoutLowBoundaryTxnId	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
COMMITTED	no	yes
+	no	no
+	no	no
+	no	no
lowWaterMark	no	yes
;	no	no

String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
ABORTED	no	yes
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
COMMITTED	no	yes
+	no	no
+	no	no
+	no	no
lowWaterMark	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnids	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
txnids	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
txnids	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
<=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
txnids	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
txnids	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnids	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
txnids	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
txnids	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
<=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
txnids	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
txnids	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

return	no	no
;	no	no
}	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
txnids	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
txnids	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rc	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
txnids	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
revokeFromLocalWorkers	no	no
(	no	no
String	no	yes
hostname	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
hostname	no	yes
+	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
revokeFromLocalWorkers	no	no
(	no	no
String	no	yes
hostname	yes	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
hostname	yes	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updated	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
revokeTimedoutWorkers	no	no
(	no	no
long	no	no
timeout	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
long	no	no
latestValidStart	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
-	no	no
timeout	no	yes
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
latestValidStart	no	yes
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
revokeTimedoutWorkers	no	no
(	no	no
long	no	no
timeout	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
long	no	no
latestValidStart	yes	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
-	no	no
timeout	no	yes
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
latestValidStart	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updated	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
revokeTimedoutWorkers	no	no
(	no	no
long	no	no
timeout	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
long	no	no
latestValidStart	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
-	no	no
timeout	no	yes
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
INITIATED_STATE	no	yes
+	no	no
+	no	no
WORKING_STATE	no	yes
+	no	no
+	no	no
latestValidStart	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updated	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
updated	no	yes
+	no	no
+	no	no
INITIATED_RESPONSE	no	yes
+	no	no
+	no	no
+	no	no
latestValidStart	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
List	no	no
<	no	no
String	no	no
>	no	no
findColumnsWithStats	no	no
(	no	no
CompactionInfo	no	no
ci	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
String	no	yes
quote	no	yes
=	no	no
getIdentifierQuoteString	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
StringBuilder	no	yes
bldr	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
bldr	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
bldr	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
bldr	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
ci	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
ci	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
ci	no	yes
.	no	no
partName	no	yes
)	no	no
;	no	no

StringBuilder	no	yes
bldr	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
bldr	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
(	no	no
ci	yes	yes
.	no	no
partName	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
bldr	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quote	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	no	yes
=	no	no
bldr	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
ci	yes	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
ci	yes	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
ci	yes	yes
.	no	no
partName	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
columns	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
columns	yes	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
updateCompactorState	no	no
(	no	no
CompactionInfo	no	no
ci	no	yes
,	no	no
long	no	no
compactionTxnId	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sqlText	yes	yes
=	no	no
+	no	no
ci	no	yes
.	no	no
highestWriteId	no	yes
+	no	no
+	no	no
quoteString	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
)	no	no
+	no	no
+	no	no
ci	no	yes
.	no	no
id	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
updateCompactorState	no	no
(	no	no
CompactionInfo	no	no
ci	no	yes
,	no	no
long	no	no
compactionTxnId	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sqlText	yes	yes
=	no	no
+	no	no
ci	no	yes
.	no	no
highestWriteId	no	yes
+	no	no
+	no	no
quoteString	no	yes
(	no	no
ci	no	yes
.	no	no
runAs	no	yes
)	no	no
+	no	no
+	no	no
ci	no	yes
.	no	no
id	no	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sqlText	yes	yes
)	no	no
;	no	no
}	no	no
int	no	no
updCount	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
sqlText	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
updCount	no	yes
!=	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
ci	no	yes
)	no	no
;	no	no
}	no	no
sqlText	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
)	no	no
+	no	no
+	no	no
+	no	no
+	no	no
compactionTxnId	no	yes
+	no	no
+	no	no
quoteString	no	yes
(	no	no
ci	no	yes
.	no	no
dbname	no	yes
)	no	no
+	no	no
+	no	no
quoteString	no	yes
(	no	no
ci	no	yes
.	no	no
tableName	no	yes
)	no	no
+	no	no
+	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
==	no	no
null	no	no
?	no	no
:	no	no
quoteString	no	yes
(	no	no
ci	no	yes
.	no	no
partName	no	yes
)	no	no
+	no	no
)	no	no
+	no	no
ci	no	yes
.	no	no
highestWriteId	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
COMPACT	no	yes
+	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

checkForDeletion	no	yes
(	no	no
deleteSet	no	yes
,	no	no
ci	no	yes
,	no	no
rc	no	yes
)	no	no
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
deleteSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
questions	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
deleteSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
deleteSet	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
questions	no	yes
.	no	no
add	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
counts	no	yes
=	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClauseStrings	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
questions	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
int	no	no
totalCount	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
queries	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
String	no	yes
query	yes	yes
=	no	no
queries	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
;	no	no

pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
ci	no	yes
.	no	no
dbname	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
ci	no	yes
.	no	no
tableName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
ci	no	yes
.	no	no
partName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
pStmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
ci	no	yes
.	no	no
partName	no	yes
)	no	no
;	no	no
}	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numFailed	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
numTotal	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
failedThreshold	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
COMPACTOR_INITIATOR_FAILED_THRESHOLD	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
&&	no	no
++	no	no
numTotal	no	yes
<=	no	no
failedThreshold	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
getString	no	no
(	no	no
1	no	no
)	no	no
.	no	no
charAt	no	no
(	no	no
0	no	no
)	no	no
==	no	no
FAILED_STATE	no	no
)	no	no
{	no	no
numFailed	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no
numFailed	no	yes
--	no	no
;	no	no
}	no	no
}	no	no
return	no	no
numFailed	no	yes
==	no	no
failedThreshold	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
numFailed	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
numTotal	no	yes
=	no	no
0	no	no
;	no	no
int	no	no
failedThreshold	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
COMPACTOR_INITIATOR_FAILED_THRESHOLD	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
&&	no	no
++	no	no
numTotal	no	yes
<=	no	no
failedThreshold	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
getString	no	no
(	no	no
1	no	no
)	no	no
.	no	no
charAt	no	no
(	no	no
0	no	no
)	no	no
==	no	no
FAILED_STATE	no	no
)	no	no
{	no	no
numFailed	no	yes
++	no	no
;	no	no
}	no	no
else	no	no
{	no	no
numFailed	no	yes
--	no	no
;	no	no
}	no	no
}	no	no
return	no	no
numFailed	no	yes
==	no	no
failedThreshold	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
checkRetryable	no	yes
(	no	no
dbConn	no	yes
,	no	no
e	yes	yes
,	no	no
+	no	no
ci	no	yes
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
CannotRetry	no	no
public	no	no
void	no	no
markFailed	no	no
(	no	no
CompactionInfo	no	no
ci	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
errorMessage	no	yes
=	no	no
ci	no	yes
.	no	no
errorMessage	no	yes
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
ci	no	yes
.	no	no
id	no	yes
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ci	no	yes
=	no	no
CompactionInfo	no	yes
.	no	no
loadFullFromCompactionQueue	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	yes	yes
)	no	no
;	no	no

if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ci	yes	yes
=	no	no
CompactionInfo	no	yes
.	no	no
loadFullFromCompactionQueue	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
pStmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
ci	yes	yes
.	no	no
id	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
updCnt	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
id	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
ci	yes	yes
.	no	no
id	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
id	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
ci	yes	yes
.	no	no
id	no	yes
=	no	no
generateCompactionQueueId	no	yes
(	no	no
stmt	no	yes
)	no	no
;	no	no
ci	yes	yes
.	no	no
state	no	yes
=	no	no
ATTEMPTED_STATE	no	yes
;	no	no
if	no	no
(	no	no
ci	yes	yes
.	no	no
type	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
ci	yes	yes
.	no	no
type	no	yes
=	no	no
CompactionType	no	yes
.	no	no
MINOR	no	yes
;	no	no

ci	yes	yes
.	no	no
start	no	yes
=	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
+	no	no
ci	yes	yes
.	no	no
id	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
ci	yes	yes
.	no	no
state	no	yes
=	no	no
FAILED_STATE	no	yes
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
,	no	no
stmt	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	yes
(	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
errorMessage	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
ci	yes	yes
.	no	no
errorMessage	no	yes
=	no	no
errorMessage	no	yes
;	no	no
}	no	no
CompactionInfo	no	yes
.	no	no
insertIntoCompletedCompactions	no	yes
(	no	no
pStmt	no	yes
,	no	no
ci	yes	yes
,	no	no
getDbTime	no	yes
(	no	no
dbConn	no	yes
)	no	no
)	no	no
;	no	no
int	no	no
updCount	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
updCount	no	yes
+	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
setHadoopJobId	no	no
(	no	no
String	no	yes
hadoopJobId	yes	yes
,	no	no
long	no	no
id	yes	yes
)	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
quoteString	no	yes
(	no	no
hadoopJobId	yes	yes
)	no	no
+	no	no
+	no	no
id	yes	yes
;	no	no

Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
quoteString	no	yes
(	no	no
hadoopJobId	yes	yes
)	no	no
+	no	no
+	no	no
id	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
+	no	no
hadoopJobId	yes	yes
+	no	no
+	no	no
id	yes	yes
)	no	no
;	no	no
int	no	no
updateCount	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
stmt	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
hadoopJobId	yes	yes
+	no	no
+	no	no
id	yes	yes
+	no	no
+	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
checkRetryable	no	yes
(	no	no
dbConn	no	yes
,	no	no
e	yes	yes
,	no	no
+	no	no
hadoopJobId	yes	yes
+	no	no
+	no	no
id	yes	yes
+	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
long	no	no
findMinOpenTxnIdForCleaner	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
query	yes	yes
=	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
long	no	no
numOpenTxns	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numOpenTxns	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
query	no	yes
=	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
+	no	no
+	no	no
quoteChar	no	yes
(	no	no
READY_FOR_CLEANING	no	yes
)	no	no
+	no	no
;	no	no
}	no	no
else	no	no
{	no	no
query	no	yes
=	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
return	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
synchronized	no	no
void	no	no
prepDb	no	no
(	no	no
Configuration	no	no
conf	yes	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
Connection	no	yes
conn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
conn	no	yes
=	no	no
getConnection	no	yes
(	no	no
conf	yes	yes
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
conn	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseProductName	no	yes
(	no	no
)	no	no
;	no	no
DatabaseProduct	no	yes
dbProduct	no	yes
=	no	no
DatabaseProduct	no	yes
.	no	no
determineDatabaseProduct	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
checkDbPrepared	no	no
(	no	no
stmt	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
schemaRootPath	no	yes
=	no	no
getSchemaRootPath	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreSchemaInfo	no	yes
metaStoreSchemaInfo	no	yes
=	no	no
MetaStoreSchemaInfoFactory	no	yes
.	no	no
get	no	yes
(	no	no
conf	yes	yes
,	no	no
schemaRootPath	no	yes
,	no	no
DatabaseProduct	no	yes
.	no	no
getHiveSchemaPostfix	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
initFile	yes	yes
=	no	no
metaStoreSchemaInfo	no	yes
.	no	no
generateInitFileName	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
try	no	no
(	no	no
InputStream	no	no
is	no	no
=	no	no
new	no	no
FileInputStream	no	no
(	no	no
metaStoreSchemaInfo	no	yes
.	no	no
getMetaStoreScriptDir	no	no
(	no	no
)	no	no
+	no	no
File	no	no
.	no	no
separator	no	no
+	no	no
initFile	yes	yes
)	no	no
)	no	no
{	no	no

DatabaseProduct	no	yes
dbProduct	no	yes
=	no	no
DatabaseProduct	no	yes
.	no	no
determineDatabaseProduct	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
checkDbPrepared	no	no
(	no	no
stmt	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
String	no	yes
schemaRootPath	no	yes
=	no	no
getSchemaRootPath	no	yes
(	no	no
)	no	no
;	no	no
IMetaStoreSchemaInfo	no	yes
metaStoreSchemaInfo	no	yes
=	no	no
MetaStoreSchemaInfoFactory	no	yes
.	no	no
get	no	yes
(	no	no
conf	no	yes
,	no	no
schemaRootPath	no	yes
,	no	no
DatabaseProduct	no	yes
.	no	no
getHiveSchemaPostfix	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
initFile	no	yes
=	no	no
metaStoreSchemaInfo	no	yes
.	no	no
generateInitFileName	no	yes
(	no	no
null	no	no
)	no	no
;	no	no
try	no	no
(	no	no
InputStream	no	no
is	no	yes
=	no	no
new	no	no
FileInputStream	no	no
(	no	no
metaStoreSchemaInfo	no	yes
.	no	no
getMetaStoreScriptDir	no	no
(	no	no
)	no	no
+	no	no
File	no	no
.	no	no
separator	no	no
+	no	no
initFile	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
initFile	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
)	no	no
)	no	no
;	no	no
importSQL	no	yes
(	no	no
stmt	no	yes
,	no	no
is	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
conn	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
conn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
re	yes	no
)	no	no
{	no	no

success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
success	no	yes
&=	no	no
truncateTable	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
,	no	no
)	no	no
;	no	no
try	no	no
{	no	no
resetTxnSequence	no	yes
(	no	no
conn	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

static	no	no
void	no	no
executeQueriesInBatchNoCount	no	no
(	no	no
DatabaseProduct	no	no
dbProduct	no	no
,	no	no
Statement	no	no
stmt	no	no
,	no	no
List	no	no
<	no	no
String	no	no
>	no	no
queries	no	no
,	no	no
int	no	no
batchSize	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
dbProduct	no	no
==	no	no
ORACLE	no	no
)	no	no
{	no	no
int	no	no
queryCounter	no	yes
=	no	no
0	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	no
query	yes	no
:	no	no
queries	no	no
)	no	no
{	no	no

static	no	no
void	no	no
executeQueriesInBatchNoCount	no	no
(	no	no
DatabaseProduct	no	no
dbProduct	no	no
,	no	no
Statement	no	no
stmt	no	no
,	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
queries	no	no
,	no	no
int	no	no
batchSize	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
dbProduct	no	no
==	no	no
ORACLE	no	no
)	no	no
{	no	no
int	no	no
queryCounter	no	yes
=	no	no
0	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
queryCounter	no	yes
++	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
query	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
queryCounter	no	yes
%	no	no
batchSize	no	no
==	no	no
0	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
batch	yes	yes
=	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
queryCounter	no	yes
++	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
query	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
queryCounter	no	yes
%	no	no
batchSize	no	no
==	no	no
0	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
batch	yes	yes
=	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
batch	yes	yes
)	no	no
;	no	no
stmt	no	yes
.	no	no
execute	no	yes
(	no	no
batch	yes	yes
)	no	no
;	no	no
sb	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
queryCounter	no	yes
%	no	no
batchSize	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
batch	yes	yes
=	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no

static	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
executeQueriesInBatch	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
List	no	yes
<	no	no
String	no	no
>	no	no
queries	no	no
,	no	no
int	no	no
batchSize	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
affectedRowsByQuery	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
queryCounter	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
query	yes	no
:	no	no
queries	no	no
)	no	no
{	no	no

static	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
executeQueriesInBatch	no	no
(	no	no
Statement	no	no
stmt	no	yes
,	no	no
List	no	yes
<	no	no
String	no	no
>	no	no
queries	no	no
,	no	no
int	no	no
batchSize	yes	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
List	no	yes
<	no	no
Integer	no	yes
>	no	no
affectedRowsByQuery	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
queryCounter	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
queries	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
queryCounter	no	yes
++	no	no
;	no	no
stmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
queryCounter	no	yes
%	no	no
batchSize	yes	no
==	no	no
0	no	no
)	no	no
{	no	no

public	no	no
static	no	no
boolean	no	no
supportsGetGeneratedKeys	no	no
(	no	no
DatabaseProduct	no	no
dbProduct	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
switch	no	no
(	no	no
dbProduct	no	no
)	no	no
{	no	no
case	no	no
DERBY	no	no
:	no	no
case	no	no
SQLSERVER	no	no
:	no	no
return	no	no
false	no	no
;	no	no
case	no	no
ORACLE	no	no
:	no	no
case	no	no
MYSQL	no	no
:	no	no
case	no	no
POSTGRES	no	no
:	no	no
return	no	no
true	no	no
;	no	no
case	no	no
OTHER	no	no
:	no	no
default	no	no
:	no	no
String	no	no
msg	yes	no
=	no	no
+	no	no
dbProduct	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
;	no	no

public	no	no
void	no	no
setConf	no	no
(	no	no
Configuration	no	no
conf	no	yes
)	no	no
{	no	no
this	no	no
.	no	no
conf	no	yes
=	no	no
conf	no	yes
;	no	no
synchronized	no	no
(	no	no
TxnHandler	no	no
.	no	no
class	no	no
)	no	no
{	no	no
if	no	no
(	no	no
connPool	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
int	no	no
maxPoolSize	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECTION_POOLING_MAX_CONNECTIONS	no	yes
)	no	no
;	no	no
long	no	no
getConnectionTimeoutMs	no	yes
=	no	no
30000	no	no
;	no	no
connPool	no	yes
=	no	no
setupJdbcConnectionPool	no	yes
(	no	no
conf	no	yes
,	no	no
maxPoolSize	no	yes
,	no	no
getConnectionTimeoutMs	no	yes
)	no	no
;	no	no
connPoolMutex	no	yes
=	no	no
setupJdbcConnectionPool	no	yes
(	no	no
conf	no	yes
,	no	no
maxPoolSize	no	yes
+	no	no
MUTEX_KEY	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
.	no	no
length	no	yes
,	no	no
getConnectionTimeoutMs	no	yes
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
determineDatabaseProduct	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
sqlGenerator	no	yes
=	no	no
new	no	no
SQLGenerator	no	yes
(	no	no
dbProduct	no	yes
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
closeDbConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
numOpenTxns	no	yes
=	no	no
Metrics	no	yes
.	no	no
getOrCreateGauge	no	yes
(	no	no
MetricsConstants	no	yes
.	no	no
NUM_OPEN_TXNS	no	yes
)	no	no
;	no	no
timeout	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
TXN_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
retryInterval	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HMS_HANDLER_INTERVAL	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
retryLimit	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HMS_HANDLER_ATTEMPTS	no	yes
)	no	no
;	no	no
deadlockRetryInterval	no	yes
=	no	no
retryInterval	no	yes
/	no	no
10	no	no
;	no	no
maxOpenTxns	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
MAX_OPEN_TXNS	no	yes
)	no	no
;	no	no
maxBatchSize	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getIntVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
JDBC_MAX_BATCH_SIZE	no	yes
)	no	no
;	no	no
openTxnTimeOutMillis	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
TXN_OPENTXN_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
transactionalListeners	no	yes
=	no	no
MetaStoreServerUtils	no	yes
.	no	no
getMetaStoreListeners	no	yes
(	no	no
TransactionalMetaStoreEventListener	no	yes
.	no	no
class	no	no
,	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
TRANSACTIONAL_EVENT_LISTENERS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	no	yes
)	no	no
{	no	no

private	no	no
OpenTxnList	no	no
getOpenTxnsList	no	no
(	no	no
boolean	no	no
infoFields	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
OpenTxn	no	yes
>	no	no
txnInfos	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
txnsQuery	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
infoFields	no	yes
?	no	no
OpenTxn	no	yes
.	no	no
OPEN_TXNS_INFO_QUERY	no	yes
:	no	no
OpenTxn	no	yes
.	no	no
OPEN_TXNS_QUERY	no	yes
,	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
;	no	no

stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
OpenTxn	no	yes
>	no	no
txnInfos	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
txnsQuery	no	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
infoFields	no	yes
?	no	no
OpenTxn	no	yes
.	no	no
OPEN_TXNS_INFO_QUERY	no	yes
:	no	no
OpenTxn	no	yes
.	no	no
OPEN_TXNS_QUERY	no	yes
,	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
txnsQuery	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
txnsQuery	no	yes
)	no	no
;	no	no
long	no	no
hwm	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
openTxnLowBoundary	yes	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
txnId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
long	no	no
age	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
4	no	no
)	no	no
;	no	no
hwm	no	yes
=	no	no
txnId	no	yes
;	no	no
if	no	no
(	no	no
age	no	yes
<	no	no
getOpenTxnTimeOutMillis	no	no
(	no	no
)	no	no
)	no	no
{	no	no
openTxnLowBoundary	yes	yes
++	no	no
;	no	no
while	no	no
(	no	no
txnId	no	yes
>	no	no
openTxnLowBoundary	yes	yes
)	no	no
{	no	no
txnInfos	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
OpenTxn	no	yes
(	no	no
openTxnLowBoundary	yes	yes
,	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
,	no	no
TxnType	no	yes
.	no	no
DEFAULT	no	yes
)	no	no
)	no	no
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
openTxnLowBoundary	no	yes
)	no	no
)	no	no
;	no	no
openTxnLowBoundary	no	yes
++	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
openTxnLowBoundary	no	yes
=	no	no
txnId	no	yes
;	no	no
}	no	no
TxnStatus	no	yes
state	no	yes
=	no	no
TxnStatus	no	yes
.	no	no
fromString	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
state	no	yes
==	no	no
TxnStatus	no	yes
.	no	no
COMMITTED	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
OpenTxn	no	yes
txnInfo	no	yes
=	no	no
new	no	no
OpenTxn	no	yes
(	no	no
txnId	no	yes
,	no	no
state	no	yes
,	no	no
TxnType	no	yes
.	no	no
findByValue	no	yes
(	no	no
rs	no	yes
.	no	no
getInt	no	yes
(	no	no
3	no	no
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
infoFields	no	no
)	no	no
{	no	no
txnInfo	no	yes
.	no	no
setUser	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
5	no	no
)	no	no
)	no	no
;	no	no
txnInfo	no	yes
.	no	no
setHost	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
6	no	no
)	no	no
)	no	no
;	no	no
txnInfo	no	yes
.	no	no
setStartedTime	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
7	no	no
)	no	no
)	no	no
;	no	no
txnInfo	no	yes
.	no	no
setLastHeartBeatTime	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
8	no	no
)	no	no
)	no	no
;	no	no
}	no	no
txnInfos	yes	yes
.	no	no
add	no	yes
(	no	no
txnInfo	no	yes
)	no	no
;	no	no
}	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

int	no	no
numTxns	no	yes
=	no	no
rqst	no	yes
.	no	no
getNum_txns	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numTxns	no	yes
<=	no	no
0	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
numTxns	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
acquireTxnLock	no	yes
(	no	no
stmt	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
StopWatch	no	yes
generateTransactionWatch	no	yes
=	no	no
new	no	no
StopWatch	no	yes
(	no	no
)	no	no
;	no	no
generateTransactionWatch	no	yes
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnIds	yes	yes
=	no	no
openTxns	no	yes
(	no	no
dbConn	no	yes
,	no	no
rqst	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no

protected	no	no
long	no	no
getOpenTxnTimeoutLowBoundaryTxnId	no	no
(	no	no
Connection	no	no
dbConn	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
SQLException	no	no
{	no	no
long	no	no
maxTxnId	no	yes
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
+	no	no
+	no	no
openTxnTimeOutMillis	no	yes
+	no	no
;	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	no
=	no	no
dbConn	no	no
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
long	no	no
getHighWaterMark	no	no
(	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
getTargetTxnIdList	no	no
(	no	no
String	no	yes
replPolicy	yes	yes
,	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
sourceTxnIdList	no	yes
,	no	no
Connection	no	no
dbConn	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
inQueries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
targetTxnIdList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
suffix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
inQueries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
sourceTxnIdList	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
replPolicy	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
inQueries	no	yes
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
long	no	no
getTargetTxnId	no	no
(	no	no
String	no	no
replPolicy	yes	yes
,	no	no
long	no	no
sourceTxnId	yes	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
targetTxnIds	no	yes
=	no	no
getTargetTxnIdList	no	yes
(	no	no
replPolicy	yes	yes
,	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
sourceTxnId	yes	yes
)	no	no
,	no	no
dbConn	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
targetTxnIds	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
deleteReplTxnMapEntry	no	no
(	no	no
Connection	no	no
dbConn	no	no
,	no	no
long	no	no
sourceTxnId	no	yes
,	no	no
String	no	yes
replPolicy	yes	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
sourceTxnId	no	yes
+	no	no
;	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pst	no	no
=	no	no
sqlGenerator	no	no
.	no	no
prepareStmtWithParameters	no	no
(	no	no
dbConn	no	no
,	no	no
s	yes	yes
,	no	no
Arrays	no	no
.	no	no
asList	no	no
(	no	no
replPolicy	yes	no
)	no	no
)	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
abortTxns	no	no
(	no	no
AbortTxnsRequest	no	no
rqst	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnIds	no	yes
=	no	no
rqst	no	yes
.	no	no
getTxn_ids	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
TxnType	no	yes
.	no	no
READ_ONLY	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
Long	no	yes
,	no	no
TxnType	no	yes
>	no	no
nonReadOnlyTxns	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

private	no	no
ResultSet	no	no
checkForWriteConflict	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
long	no	no
txnid	no	yes
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
writeConflictQuery	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addLimitClause	no	yes
(	no	no
1	no	no
,	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
txnid	no	yes
+	no	no
+	no	no
txnid	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
UPDATE	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
DELETE	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
UPDATE	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
DELETE	no	yes
+	no	no
)	no	no
;	no	no

private	no	no
void	no	no
moveTxnComponentsToCompleted	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
long	no	no
txnid	no	yes
,	no	no
char	no	no
isUpdateDelete	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
isUpdateDelete	no	yes
+	no	no
+	no	no
txnid	no	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
COMPACT	no	yes
;	no	no

private	no	no
void	no	no
moveTxnComponentsToCompleted	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
long	no	no
txnid	yes	yes
,	no	no
char	no	no
isUpdateDelete	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
isUpdateDelete	no	yes
+	no	no
+	no	no
txnid	yes	yes
+	no	no
+	no	no
OperationType	no	yes
.	no	no
COMPACT	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
stmt	no	no
.	no	no
executeUpdate	no	no
(	no	no
s	no	yes
)	no	no
)	no	no
<	no	no
1	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
Long	no	yes
>	no	no
abortedWriteIds	no	yes
=	no	no
getAbortedWriteIds	no	yes
(	no	no
validWriteIdList	no	yes
)	no	no
;	no	no
int	no	no
numAbortedWrites	no	yes
=	no	no
abortedWriteIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
PreparedStatement	no	yes
>	no	no
insertPreparedStmts	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sql	yes	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
sql	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
PreparedStatement	no	yes
>	no	no
insertPreparedStmts	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
sql	no	yes
=	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
sql	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sql	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no

rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
validWriteIdList	no	yes
+	no	no
+	no	no
dbName	no	yes
+	no	no
+	no	no
tblName	no	yes
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
numAbortedWrites	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnIds	no	yes
=	no	no
openTxns	no	yes
(	no	no
dbConn	no	yes
,	no	no
new	no	no
OpenTxnRequest	no	yes
(	no	no
numAbortedWrites	no	yes
,	no	no
rqst	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
rqst	no	yes
.	no	no
getHostName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
numAbortedWrites	no	yes
==	no	no
txnIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
rows	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
paramsList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
long	no	no
txn	yes	yes
:	no	no
txnIds	no	yes
)	no	no
{	no	no
long	no	no
writeId	yes	yes
=	no	no
abortedWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
++	no	no
)	no	no
;	no	no
rows	no	yes
.	no	no
add	no	yes
(	no	no
txn	yes	yes
+	no	no
+	no	no
writeId	yes	yes
)	no	no
;	no	no
paramsList	no	yes
.	no	no
add	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
List	no	yes
<	no	no
String	no	yes
>>	no	no
paramsList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
long	no	no
txn	no	yes
:	no	no
txnIds	no	yes
)	no	no
{	no	no
long	no	no
writeId	no	yes
=	no	no
abortedWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
++	no	no
)	no	no
;	no	no
rows	no	yes
.	no	no
add	no	yes
(	no	no
txn	no	yes
+	no	no
+	no	no
writeId	no	yes
)	no	no
;	no	no
paramsList	no	yes
.	no	no
add	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
writeId	no	yes
+	no	no
+	no	no
txn	no	yes
)	no	no
;	no	no
}	no	no
insertPreparedStmts	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
createInsertValuesPreparedStmt	no	yes
(	no	no
dbConn	no	yes
,	no	no
,	no	no
rows	no	yes
,	no	no
paramsList	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
PreparedStatement	no	no
pst	no	yes
:	no	no
insertPreparedStmts	no	yes
)	no	no
{	no	no
pst	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
int	no	no
numAborts	no	yes
=	no	no
abortTxns	no	yes
(	no	no
dbConn	no	yes
,	no	no
txnIds	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
numAborts	no	yes
==	no	no
numAbortedWrites	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
nextWriteId	no	yes
=	no	no
validWriteIdList	no	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no
sql	yes	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
nextWriteId	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no

for	no	no
(	no	no
long	no	no
txn	no	yes
:	no	no
txnIds	no	yes
)	no	no
{	no	no
long	no	no
writeId	no	yes
=	no	no
abortedWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
++	no	no
)	no	no
;	no	no
rows	no	yes
.	no	no
add	no	yes
(	no	no
txn	no	yes
+	no	no
+	no	no
writeId	no	yes
)	no	no
;	no	no
paramsList	no	yes
.	no	no
add	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
writeId	no	yes
+	no	no
+	no	no
txn	no	yes
)	no	no
;	no	no
}	no	no
insertPreparedStmts	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
createInsertValuesPreparedStmt	no	yes
(	no	no
dbConn	no	yes
,	no	no
,	no	no
rows	no	yes
,	no	no
paramsList	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
PreparedStatement	no	no
pst	no	yes
:	no	no
insertPreparedStmts	no	yes
)	no	no
{	no	no
pst	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
int	no	no
numAborts	no	yes
=	no	no
abortTxns	no	yes
(	no	no
dbConn	no	yes
,	no	no
txnIds	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
numAborts	no	yes
==	no	no
numAbortedWrites	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
nextWriteId	no	yes
=	no	no
validWriteIdList	yes	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
;	no	no
sql	no	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
nextWriteId	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
sql	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sql	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no

private	no	no
TableValidWriteIds	no	no
getValidWriteIdsForTable	no	no
(	no	no
Connection	no	no
dbConn	no	yes
,	no	no
String	no	yes
fullTableName	no	yes
,	no	no
ValidTxnList	no	no
validTxnList	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
names	yes	yes
=	no	no
TxnUtils	no	yes
.	no	no
getDbTableName	no	yes
(	no	no
fullTableName	no	yes
)	no	no
;	no	no
assert	no	yes
(	no	no
names	yes	yes
.	no	no
length	no	yes
==	no	no
2	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
names	yes	yes
[	no	no
0	yes	no
]	no	no
,	no	no
names	yes	yes
[	no	no
1	yes	no
]	no	no
)	no	no
;	no	no
try	no	no
{	no	no
long	no	no
writeIdHwm	no	yes
=	no	no
0	yes	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
invalidWriteIdList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
long	no	no
minOpenWriteId	no	yes
=	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
BitSet	no	yes
abortedBits	no	yes
=	no	no
new	no	no
BitSet	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
txnHwm	no	yes
=	no	no
validTxnList	no	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
txnHwm	no	yes
)	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

long	no	no
writeIdHwm	no	yes
=	no	no
0	yes	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
invalidWriteIdList	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
long	no	no
minOpenWriteId	no	yes
=	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
BitSet	no	yes
abortedBits	no	yes
=	no	no
new	no	no
BitSet	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
txnHwm	no	yes
=	no	no
validTxnList	no	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
txnHwm	no	yes
)	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
names	yes	yes
[	no	no
0	yes	no
]	no	no
)	no	no
,	no	no
quoteString	no	yes
(	no	no
names	yes	yes
[	no	no
1	yes	no
]	no	no
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writeIdHwm	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	yes	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
writeIdHwm	no	yes
<=	no	no
0	yes	no
)	no	no
{	no	no
s	yes	yes
=	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writeIdHwm	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	yes	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
writeIdHwm	no	yes
<=	no	no
0	yes	no
)	no	no
{	no	no
s	yes	yes
=	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
names	yes	yes
[	no	no
0	yes	no
]	no	no
)	no	no
,	no	no
quoteString	no	yes
(	no	no
names	yes	yes
[	no	no
1	yes	no
]	no	no
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writeIdHwm	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	yes	no
)	no	no
;	no	no
}	no	no
}	no	no
boolean	no	no
foundValidUncompactedWrite	no	yes
=	no	no
false	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
writeIdHwm	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
TxnToWriteId	no	yes
>	no	no
txnToWriteIds	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TxnToWriteId	no	yes
>	no	no
srcTxnToWriteIds	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rqst	yes	yes
.	no	no
isSetReplPolicy	no	no
(	no	no
)	no	no
)	no	no
{	no	no
srcTxnToWriteIds	no	yes
=	no	no
rqst	yes	yes
.	no	no
getSrcTxnToWriteIdList	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
srcTxnIds	yes	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
rqst	yes	yes
.	no	no
isSetSrcTxnToWriteIdList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
!	no	no
rqst	yes	yes
.	no	no
isSetTxnIds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
!	no	no
srcTxnToWriteIds	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TxnToWriteId	no	yes
txnToWriteId	no	yes
:	no	no
srcTxnToWriteIds	no	yes
)	no	no
{	no	no
srcTxnIds	yes	yes
.	no	no
add	no	yes
(	no	no
txnToWriteId	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
txnIds	no	yes
=	no	no
getTargetTxnIdList	no	yes
(	no	no
rqst	yes	yes
.	no	no
getReplPolicy	no	yes
(	no	no
)	no	no
,	no	no
srcTxnIds	yes	yes
,	no	no
dbConn	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcTxnIds	yes	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
txnIds	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no

for	no	no
(	no	no
TxnToWriteId	no	no
txnToWriteId	no	yes
:	no	no
srcTxnToWriteIds	no	no
)	no	no
{	no	no
srcTxnIds	no	yes
.	no	no
add	no	yes
(	no	no
txnToWriteId	no	yes
.	no	no
getTxnId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
txnIds	no	yes
=	no	no
getTargetTxnIdList	no	yes
(	no	no
rqst	no	yes
.	no	no
getReplPolicy	no	yes
(	no	no
)	no	no
,	no	no
srcTxnIds	no	yes
,	no	no
dbConn	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
srcTxnIds	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
!=	no	no
txnIds	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
srcTxnIds	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
rqst	no	yes
.	no	no
getReplPolicy	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
new	no	no
AllocateTableWriteIdsResponse	no	yes
(	no	no
txnToWriteIds	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
assert	no	yes
(	no	no
!	no	no
rqst	no	yes
.	no	no
isSetSrcTxnToWriteIdList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
rqst	no	yes
.	no	no
isSetTxnIds	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
txnIds	no	yes
=	no	no
rqst	no	yes
.	no	no
getTxnIds	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
txnIds	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
txnIds	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isTxnsOpenAndNotReadOnly	no	no
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
errorMsg	yes	yes
=	no	no
+	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
+	no	no
+	no	no
getAbortedAndReadOnlyTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
+	no	no
getCommittedTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no

txnIds	no	yes
=	no	no
rqst	no	yes
.	no	no
getTxnIds	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
txnIds	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
1	no	no
)	no	no
{	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
txnIds	no	yes
)	no	no
;	no	no
}	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	yes
=	no	no
dbConn	no	no
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isTxnsOpenAndNotReadOnly	no	no
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
)	no	no
{	no	no
String	no	yes
errorMsg	no	yes
=	no	no
+	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
+	no	no
+	no	no
getAbortedAndReadOnlyTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
+	no	no
getCommittedTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
long	no	no
allocatedTxnsCount	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
writeId	no	yes
;	no	no

String	no	yes
errorMsg	no	yes
=	no	no
+	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
+	no	no
+	no	no
getAbortedAndReadOnlyTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
+	no	no
getCommittedTxns	no	yes
(	no	no
txnIds	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
errorMsg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
long	no	no
allocatedTxnsCount	no	yes
=	no	no
0	no	no
;	no	no
long	no	no
writeId	yes	yes
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	no	yes
,	no	no
tblName	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	yes
)	no	no
{	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
query	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no

for	no	no
(	no	no
String	no	no
query	no	yes
:	no	no
queries	no	no
)	no	no
{	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
query	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
txnId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
writeId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
txnToWriteIds	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
TxnToWriteId	no	yes
(	no	no
txnId	no	yes
,	no	no
writeId	no	yes
)	no	no
)	no	no
;	no	no
allocatedTxnsCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
writeId	no	yes
+	no	no
+	no	no
txnId	no	yes
)	no	no
;	no	no
}	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
numOfWriteIds	no	yes
=	no	no
txnIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
(	no	no
allocatedTxnsCount	no	yes
==	no	no
0	no	no
)	no	no
||	no	no
(	no	no
numOfWriteIds	no	yes
==	no	no
allocatedTxnsCount	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
allocatedTxnsCount	no	yes
==	no	no
numOfWriteIds	no	yes
)	no	no
{	no	no
return	no	no
new	no	no
AllocateTableWriteIdsResponse	no	yes
(	no	no
txnToWriteIds	no	yes
)	no	no
;	no	no

txnToWriteIds	no	yes
.	no	no
add	no	yes
(	no	no
new	no	no
TxnToWriteId	no	yes
(	no	no
txnId	no	yes
,	no	no
writeId	no	yes
)	no	no
)	no	no
;	no	no
allocatedTxnsCount	no	yes
++	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
writeId	no	yes
+	no	no
+	no	no
txnId	no	yes
)	no	no
;	no	no
}	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
numOfWriteIds	no	yes
=	no	no
txnIds	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
assert	no	yes
(	no	no
(	no	no
allocatedTxnsCount	no	yes
==	no	no
0	no	no
)	no	no
||	no	no
(	no	no
numOfWriteIds	no	yes
==	no	no
allocatedTxnsCount	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
allocatedTxnsCount	no	yes
==	no	no
numOfWriteIds	no	yes
)	no	no
{	no	no
return	no	no
new	no	no
AllocateTableWriteIdsResponse	no	yes
(	no	no
txnToWriteIds	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
srcWriteId	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
rqst	no	no
.	no	no
isSetReplPolicy	no	no
(	no	no
)	no	no
)	no	no
{	no	no
assert	no	yes
(	no	no
srcTxnToWriteIds	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
srcWriteId	no	yes
=	no	no
srcTxnToWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
allocatedTxnsCount	no	no
==	no	no
numOfWriteIds	no	yes
)	no	no
{	no	no
return	no	no
new	no	no
AllocateTableWriteIdsResponse	no	yes
(	no	no
txnToWriteIds	no	yes
)	no	no
;	no	no
}	no	no
long	no	no
srcWriteId	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
rqst	no	no
.	no	no
isSetReplPolicy	no	no
(	no	no
)	no	no
)	no	no
{	no	no
assert	no	yes
(	no	no
srcTxnToWriteIds	no	yes
!=	no	no
null	no	no
)	no	no
;	no	no
srcWriteId	no	yes
=	no	no
srcTxnToWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writeId	no	yes
=	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
?	no	no
srcWriteId	no	yes
:	no	no
1	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
(	no	no
writeId	no	yes
+	no	no
numOfWriteIds	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no

srcWriteId	no	yes
=	no	no
srcTxnToWriteIds	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
getWriteId	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
)	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
writeId	no	yes
=	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
?	no	no
srcWriteId	no	yes
:	no	no
1	no	no
;	no	no
s	yes	yes
=	no	no
+	no	no
(	no	no
writeId	no	yes
+	no	no
numOfWriteIds	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
nextWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no

closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
long	no	no
nextWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
writeId	yes	yes
=	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
?	no	no
srcWriteId	no	yes
:	no	no
nextWriteId	no	yes
;	no	no
s	no	yes
=	no	no
+	no	no
(	no	no
writeId	yes	yes
+	no	no
numOfWriteIds	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
&&	no	no
(	no	no
srcWriteId	no	yes
!=	no	no
nextWriteId	no	yes
)	no	no
)	no	no
{	no	no
s	no	yes
=	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no

long	no	no
nextWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
writeId	no	yes
=	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
?	no	no
srcWriteId	no	yes
:	no	no
nextWriteId	no	yes
;	no	no
s	no	yes
=	no	no
+	no	no
(	no	no
writeId	no	yes
+	no	no
numOfWriteIds	no	yes
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
srcWriteId	no	yes
>	no	no
0	no	no
)	no	no
&&	no	no
(	no	no
srcWriteId	no	yes
!=	no	no
nextWriteId	no	yes
)	no	no
)	no	no
{	no	no
s	no	yes
=	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	no	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	no	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	no
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	no
(	no	no
TXN_TO_WRITE_ID_INSERT_QUERY	yes	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
long	no	no
txnId	no	no
:	no	no
txnIds	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
srcWriteId	no	no
>	no	no
0	no	no
)	no	no
&&	no	no
(	no	no
srcWriteId	no	no
!=	no	no
nextWriteId	no	no
)	no	no
)	no	no
{	no	no
s	no	yes
=	no	no
;	no	no
closeStmt	no	yes
(	no	no
pStmt	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no
pStmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
prepareStatement	no	no
(	no	no
TXN_TO_WRITE_ID_INSERT_QUERY	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
long	no	no
txnId	no	yes
:	no	no
txnIds	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
txnId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
dbName	yes	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
tblName	yes	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
4	no	no
,	no	no
writeId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
MaxAllocatedTableWriteIdResponse	no	no
getMaxAllocatedTableWrited	no	no
(	no	no
MaxAllocatedTableWriteIdRequest	no	no
rqst	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
dbName	yes	yes
=	no	no
rqst	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
tableName	yes	yes
=	no	no
rqst	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
SELECT_NWI_NEXT_FROM_NEXT_WRITE_ID	yes	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no

String	no	yes
tableName	yes	yes
=	no	no
rqst	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pStmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
pStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
SELECT_NWI_NEXT_FROM_NEXT_WRITE_ID	no	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
SELECT_NWI_NEXT_FROM_NEXT_WRITE_ID	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pStmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
maxWriteId	no	yes
=	no	no
0l	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
maxWriteId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
-	no	no
1	no	no
;	no	no
}	no	no
return	no	no
new	no	no
MaxAllocatedTableWriteIdResponse	no	yes
(	no	no
maxWriteId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
void	no	no
seedWriteId	no	no
(	no	no
SeedTableWriteIdsRequest	no	no
rqst	yes	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
Long	no	yes
.	no	no
toString	no	yes
(	no	no
rqst	yes	yes
.	no	no
getSeedWriteId	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
rqst	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
rqst	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
minOpenTxn	yes	yes
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
minOpenTxn	yes	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
wasNull	no	no
(	no	no
)	no	no
)	no	no
{	no	no
minOpenTxn	yes	yes
=	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
}	no	no
long	no	no
lowWaterMark	yes	yes
=	no	no
getOpenTxnTimeoutLowBoundaryTxnId	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
long	no	no
commitHighWaterMark	no	yes
=	no	no
Long	no	yes
.	no	no
min	no	yes
(	no	no
minOpenTxn	yes	yes
,	no	no
lowWaterMark	yes	yes
+	no	no
1	no	no
)	no	no
;	no	no

ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
minOpenTxn	no	yes
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
minOpenTxn	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
wasNull	no	no
(	no	no
)	no	no
)	no	no
{	no	no
minOpenTxn	no	yes
=	no	no
Long	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
}	no	no
long	no	no
lowWaterMark	no	yes
=	no	no
getOpenTxnTimeoutLowBoundaryTxnId	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
long	no	no
commitHighWaterMark	no	yes
=	no	no
Long	no	yes
.	no	no
min	no	yes
(	no	no
minOpenTxn	no	yes
,	no	no
lowWaterMark	no	yes
+	no	no
1	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
minOpenTxn	no	yes
,	no	no
lowWaterMark	no	yes
)	no	no
;	no	no
int	no	no
delCnt	yes	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
+	no	no
commitHighWaterMark	no	yes
)	no	no
;	no	no

currentTblValidWriteIdsList	no	yes
.	no	no
add	no	yes
(	no	no
getValidWriteIdsForTable	no	yes
(	no	no
dbConn	no	yes
,	no	no
fullTableName	no	yes
,	no	no
currentValidTxnList	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
final	no	no
ValidTxnWriteIdList	no	yes
currentValidReaderWriteIdList	no	yes
=	no	no
TxnCommonUtils	no	yes
.	no	no
createValidTxnWriteIdList	no	yes
(	no	no
currentValidTxnList	no	yes
.	no	no
getHighWatermark	no	yes
(	no	no
)	no	no
,	no	no
currentTblValidWriteIdsList	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
query	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
query	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
fullyQualifiedName	yes	yes
:	no	no
creationMetadata	no	no
.	no	no
getTablesUsed	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ValidWriteIdList	no	yes
tblValidWriteIdList	no	yes
=	no	no
validReaderWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
fullyQualifiedName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
tblValidWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
fullyQualifiedName	yes	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
ValidWriteIdList	no	yes
currentTblValidWriteIdList	no	yes
=	no	no
currentValidReaderWriteIdList	no	yes
.	no	no
getTableValidWriteIdList	no	yes
(	no	no
fullyQualifiedName	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
currentTblValidWriteIdList	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
fullyQualifiedName	yes	yes
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
LockResponse	no	no
lockMaterializationRebuild	no	no
(	no	no
String	no	no
dbName	yes	no
,	no	no
String	no	no
tableName	yes	no
,	no	no
long	no	no
txnId	yes	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
txnId	no	yes
)	no	no
,	no	no
TableName	no	yes
.	no	no
getDbTable	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
TxnStore	no	yes
.	no	no
MutexAPI	no	yes
.	no	no
LockHandle	no	yes
handle	no	yes
=	no	no
null	no	no
;	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
handle	no	yes
=	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
MUTEX_KEY	no	yes
.	no	no
MaterializationRebuild	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
String	no	yes
selectQ	no	yes
=	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
selectQ	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
selectQ	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no

ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
handle	no	yes
=	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
MUTEX_KEY	no	yes
.	no	no
MaterializationRebuild	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
;	no	no
String	no	yes
selectQ	no	yes
=	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
selectQ	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
selectQ	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
dbName	yes	yes
+	no	no
+	no	no
tableName	yes	yes
+	no	no
)	no	no
;	no	no
return	no	no
new	no	no
LockResponse	no	yes
(	no	no
txnId	no	yes
,	no	no
LockState	no	yes
.	no	no
NOT_ACQUIRED	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
insertQ	yes	yes
=	no	no
+	no	no
+	no	no
txnId	no	yes
+	no	no
+	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
toEpochMilli	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
closeStmt	no	yes
(	no	no
pst	no	yes
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
heartbeatLockMaterializationRebuild	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
tableName	yes	yes
,	no	no
long	no	no
txnId	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
toEpochMilli	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
txnId	no	yes
+	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
heartbeatLockMaterializationRebuild	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
tableName	yes	yes
,	no	no
long	no	no
txnId	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
+	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
toEpochMilli	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
txnId	no	yes
+	no	no
+	no	no
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	no	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
+	no	no
,	no	no
quoteString	no	yes
(	no	no
dbName	yes	yes
)	no	no
,	no	no
quoteString	no	yes
(	no	no
tableName	yes	yes
)	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
pst	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
long	no	no
cleanupMaterializationRebuildLocks	no	no
(	no	no
ValidTxnList	no	no
validTxnList	no	no
,	no	no
long	no	no
timeout	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
long	no	no
cnt	no	yes
=	no	no
0L	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnIds	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
long	no	no
timeoutTime	no	yes
=	no	no
Instant	no	yes
.	no	no
now	no	yes
(	no	no
)	no	no
.	no	no
toEpochMilli	no	yes
(	no	no
)	no	no
-	no	no
timeout	no	yes
;	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
selectQ	yes	yes
=	no	no
;	no	no

try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
selectQ	no	yes
=	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
selectQ	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
selectQ	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
lastHeartbeat	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
2	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lastHeartbeat	no	yes
<	no	no
timeoutTime	no	no
)	no	no
{	no	no
long	no	no
txnId	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
validTxnList	no	no
.	no	no
isTxnValid	no	no
(	no	no
txnId	no	yes
)	no	no
||	no	no
validTxnList	no	no
.	no	no
isTxnAborted	no	no
(	no	no
txnId	no	yes
)	no	no
)	no	no
{	no	no
txnIds	no	yes
.	no	no
add	no	yes
(	no	no
txnId	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
txnIds	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
deleteQ	yes	yes
=	no	no
+	no	no
+	no	no
StringUtils	no	yes
.	no	no
join	no	yes
(	no	no
,	no	no
txnIds	no	yes
)	no	no
+	no	no
;	no	no

long	no	no
txnid	no	yes
=	no	no
rqst	yes	yes
.	no	no
getTxnid	no	yes
(	no	no
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isValidTxn	no	no
(	no	no
txnid	no	yes
)	no	no
)	no	no
{	no	no
TxnRecord	no	yes
txnRecord	no	yes
=	no	no
lockTransactionRecord	no	yes
(	no	no
stmt	no	yes
,	no	no
txnid	no	yes
,	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
txnRecord	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
ensureValidTxn	no	yes
(	no	no
dbConn	no	yes
,	no	no
txnid	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
shouldNeverHappen	no	yes
(	no	no
txnid	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
insertTxnComponents	no	yes
(	no	no
txnid	no	yes
,	no	no
rqst	yes	yes
,	no	no
dbConn	no	yes
)	no	no
;	no	no
long	no	no
tempExtLockId	no	yes
=	no	no
insertHiveLocksWithTemporaryExtLockId	no	yes
(	no	no
txnid	no	yes
,	no	no
dbConn	no	yes
,	no	no
rqst	yes	yes
)	no	no
;	no	no
long	no	no
extLockId	no	yes
=	no	no
getNextLockIdForUpdate	no	yes
(	no	no
dbConn	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
incrementLockIdAndUpdateHiveLocks	no	yes
(	no	no
stmt	no	yes
,	no	no
extLockId	no	yes
,	no	no
tempExtLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
return	no	no
new	no	no
ConnectionLockIdPair	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

long	no	no
tempExtLockId	no	yes
=	no	no
insertHiveLocksWithTemporaryExtLockId	no	yes
(	no	no
txnid	no	yes
,	no	no
dbConn	no	yes
,	no	no
rqst	yes	yes
)	no	no
;	no	no
long	no	no
extLockId	no	yes
=	no	no
getNextLockIdForUpdate	no	yes
(	no	no
dbConn	no	yes
,	no	no
stmt	no	yes
)	no	no
;	no	no
incrementLockIdAndUpdateHiveLocks	no	yes
(	no	no
stmt	no	yes
,	no	no
extLockId	no	yes
,	no	no
tempExtLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
return	no	no
new	no	no
ConnectionLockIdPair	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
rqst	yes	yes
,	no	no
getMessage	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
checkRetryable	no	yes
(	no	no
dbConn	no	yes
,	no	no
e	yes	yes
,	no	no
+	no	no
rqst	yes	yes
+	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
closeStmt	no	yes
(	no	no
stmt	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
)	no	no
{	no	no
closeDbConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no

private	no	no
long	no	no
getNextLockIdForUpdate	no	no
(	no	no
Connection	no	no
dbConn	no	no
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
incrementLockIdAndUpdateHiveLocks	no	no
(	no	no
Statement	no	no
stmt	no	no
,	no	no
long	no	no
extLockId	no	yes
,	no	no
long	no	no
tempId	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
String	no	yes
incrCmd	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
INCREMENT_NEXT_LOCK_ID_QUERY	no	yes
,	no	no
(	no	no
extLockId	no	yes
+	no	no
1	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
updateLocksCmd	yes	yes
=	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
UPDATE_HIVE_LOCKS_EXT_ID_QUERY	no	yes
,	no	no
extLockId	no	yes
,	no	no
tempId	no	yes
)	no	no
;	no	no

}	no	no
if	no	no
(	no	no
!	no	no
shouldUpdateTxnComponent	no	no
(	no	no
txnid	no	yes
,	no	no
rqst	no	no
,	no	no
lc	no	yes
)	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
String	no	yes
dbName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
tblName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
partName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
Long	no	yes
>	no	no
writeId	no	yes
=	no	no
getWriteId	no	yes
(	no	no
writeIdCache	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
txnid	no	yes
,	no	no
dbConn	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
txnid	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
partName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
OperationType	no	yes
.	no	no
fromDataOperationType	no	yes
(	no	no
lc	no	yes
.	no	no
getOperationType	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSqlConst	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setObject	no	yes
(	no	no
6	no	no
,	no	no
writeId	no	yes
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
insertCounter	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
insertCounter	no	yes
%	no	no
maxBatchSize	yes	no
==	no	no
0	no	no
)	no	no
{	no	no

}	no	no
String	no	yes
dbName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
tblName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
partName	no	yes
=	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
Long	no	yes
>	no	no
writeId	no	yes
=	no	no
getWriteId	no	yes
(	no	no
writeIdCache	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
txnid	no	yes
,	no	no
dbConn	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
txnid	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
partName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
OperationType	no	yes
.	no	no
fromDataOperationType	no	yes
(	no	no
lc	no	yes
.	no	no
getOperationType	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
getSqlConst	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setObject	no	yes
(	no	no
6	no	no
,	no	no
writeId	no	yes
.	no	no
orElse	no	yes
(	no	no
null	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
insertCounter	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
insertCounter	no	yes
%	no	no
maxBatchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
TXN_COMPONENTS_INSERT_QUERY	yes	yes
+	no	no
+	no	no
maxBatchSize	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
executeBatch	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
Optional	no	no
<	no	no
Long	no	no
>	no	no
getWriteIdFromDb	no	no
(	no	no
long	no	no
txnid	no	yes
,	no	no
Connection	no	no
dbConn	no	no
,	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tblName	no	yes
)	no	no
throws	no	no
SQLException	no	no
{	no	no
if	no	no
(	no	no
tblName	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
SELECT_WRITE_ID_QUERY	yes	no
)	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
1	no	no
,	no	no
dbName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
tblName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
3	no	no
,	no	no
txnid	no	yes
)	no	no
;	no	no

}	no	no
intLockId	no	yes
++	no	no
;	no	no
String	no	yes
lockType	no	yes
=	no	no
LockTypeUtil	no	yes
.	no	no
getEncodingAsStr	no	yes
(	no	no
lc	no	yes
.	no	no
getType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
tempExtLockId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
intLockId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
3	no	no
,	no	no
txnid	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
6	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
7	no	no
,	no	no
Character	no	yes
.	no	no
toString	no	yes
(	no	no
LOCK_WAITING	no	yes
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
8	no	no
,	no	no
lockType	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
9	no	no
,	no	no
rqst	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
10	no	no
,	no	no
rqst	no	yes
.	no	no
getHostname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
11	no	no
,	no	no
rqst	no	yes
.	no	no
getAgentInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
intLockId	no	yes
%	no	no
maxBatchSize	yes	no
==	no	no
0	no	no
)	no	no
{	no	no

pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
tempExtLockId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
2	no	no
,	no	no
intLockId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
3	no	no
,	no	no
txnid	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
6	no	no
,	no	no
normalizeCase	no	yes
(	no	no
lc	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
7	no	no
,	no	no
Character	no	yes
.	no	no
toString	no	yes
(	no	no
LOCK_WAITING	no	yes
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
8	no	no
,	no	no
lockType	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
9	no	no
,	no	no
rqst	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
10	no	no
,	no	no
rqst	no	yes
.	no	no
getHostname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
11	no	no
,	no	no
rqst	no	yes
.	no	no
getAgentInfo	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
intLockId	no	yes
%	no	no
maxBatchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
insertLocksQuery	yes	yes
+	no	no
+	no	no
maxBatchSize	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
executeBatch	no	yes
(	no	no
)	no	no
;	no	no

try	no	no
{	no	no
try	no	no
{	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
dbConn	no	yes
.	no	no
isClosed	no	no
(	no	no
)	no	no
)	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
checkLock	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	yes	yes
,	no	no
txnId	yes	yes
,	no	no
zeroWaitReadEnabled	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
extLockId	yes	yes
,	no	no
txnId	yes	yes
,	no	no
getMessage	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
checkRetryable	no	yes
(	no	no
dbConn	no	yes
,	no	no
e	yes	yes
,	no	no
+	no	no
extLockId	yes	yes
+	no	no
+	no	no
txnId	yes	yes
+	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
unlockInternal	no	yes
(	no	no
)	no	no
;	no	no
closeDbConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RetryException	no	no
e	yes	yes
)	no	no
{	no	no

LockInfo	no	yes
lockInfo	no	yes
=	no	no
getLockFromLockId	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
.	no	no
orElseThrow	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
new	no	no
NoSuchLockException	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
extLockId	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lockInfo	no	yes
.	no	no
txnId	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
heartbeatTxn	no	yes
(	no	no
dbConn	no	yes
,	no	no
lockInfo	no	yes
.	no	no
txnId	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
heartbeatLock	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
checkLock	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
,	no	no
lockInfo	no	yes
.	no	no
txnId	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
rqst	yes	yes
,	no	no
getMessage	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
rollbackDBConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
checkRetryable	no	yes
(	no	no
dbConn	no	yes
,	no	no
e	yes	yes
,	no	no
+	no	no
rqst	yes	yes
+	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
extLockId	no	yes
)	no	no
+	no	no
+	no	no
StringUtils	no	yes
.	no	no
stringifyException	no	yes
(	no	no
e	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
closeDbConn	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
unlockInternal	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RetryException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
unlock	no	no
(	no	no
UnlockRequest	no	no
rqst	no	yes
)	no	no
throws	no	no
TxnOpenException	no	no
,	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
extLockId	no	yes
=	no	no
rqst	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
extLockId	no	yes
+	no	no
+	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
;	no	no

@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
unlock	no	no
(	no	no
UnlockRequest	no	no
rqst	no	yes
)	no	no
throws	no	no
TxnOpenException	no	no
,	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
extLockId	yes	yes
=	no	no
rqst	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
extLockId	yes	yes
+	no	no
+	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
<	no	no
1	no	no
)	no	no
{	no	no

try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
long	no	no
extLockId	no	yes
=	no	no
rqst	yes	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
extLockId	no	yes
+	no	no
+	no	no
+	no	no
LOCK_WAITING	yes	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
extLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
LockInfo	no	yes
>	no	no
optLockInfo	no	yes
=	no	no
getLockFromLockId	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
optLockInfo	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no

dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
extLockId	no	yes
+	no	no
+	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
extLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
LockInfo	no	yes
>	no	no
optLockInfo	no	yes
=	no	no
getLockFromLockId	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
optLockInfo	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
rqst	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
LockInfo	no	yes
lockInfo	no	yes
=	no	no
optLockInfo	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isValidTxn	no	no
(	no	no
lockInfo	no	yes
.	no	no
txnId	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
lockInfo	no	yes
;	no	no

int	no	no
rc	no	yes
=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rc	no	yes
<	no	no
1	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
extLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
Optional	no	yes
<	no	no
LockInfo	no	yes
>	no	no
optLockInfo	no	yes
=	no	no
getLockFromLockId	no	yes
(	no	no
dbConn	no	yes
,	no	no
extLockId	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
optLockInfo	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
rqst	no	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
LockInfo	no	yes
lockInfo	no	yes
=	no	no
optLockInfo	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isValidTxn	no	no
(	no	no
lockInfo	no	yes
.	no	no
txnId	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
lockInfo	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
TxnOpenException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
lockInfo	no	yes
;	no	no

if	no	no
(	no	no
!	no	no
optLockInfo	no	yes
.	no	no
isPresent	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
LOCK_WAITING	no	yes
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
rqst	yes	yes
.	no	no
getLockid	no	yes
(	no	no
)	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
LockInfo	no	yes
lockInfo	no	yes
=	no	no
optLockInfo	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
isValidTxn	no	no
(	no	no
lockInfo	no	yes
.	no	no
txnId	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
lockInfo	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
TxnOpenException	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
String	no	yes
msg	no	yes
=	no	no
+	no	no
lockInfo	no	yes
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
extLockId	no	yes
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	yes	no
)	no	no
{	no	no

params	no	yes
.	no	no
add	no	yes
(	no	no
dbName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
tableName	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
tableName	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
filter	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
filter	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
filter	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
tableName	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
partName	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
partName	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
filter	no	yes
.	no	no
length	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
filter	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
filter	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
partName	no	yes
)	no	no
;	no	no
}	no	no
String	no	yes
whereClause	no	yes
=	no	no
filter	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
whereClause	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
s	yes	yes
=	no	no
s	yes	yes
+	no	no
+	no	no
whereClause	no	yes
;	no	no
}	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
s	yes	yes
,	no	no
params	no	yes
)	no	no
;	no	no

Set	no	yes
<	no	no
Long	no	yes
>	no	no
nosuch	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
Long	no	yes
>	no	no
aborted	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
rsp	no	yes
.	no	no
setNosuch	no	yes
(	no	no
nosuch	no	yes
)	no	no
;	no	no
rsp	no	yes
.	no	no
setAborted	no	yes
(	no	no
aborted	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
numTxnsToHeartbeat	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
(	no	no
rqst	no	yes
.	no	no
getMax	no	yes
(	no	no
)	no	no
-	no	no
rqst	no	yes
.	no	no
getMin	no	yes
(	no	no
)	no	no
+	no	no
1	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
txnIds	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
numTxnsToHeartbeat	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
long	no	no
txn	no	yes
=	no	no
rqst	no	yes
.	no	no
getMin	no	yes
(	no	no
)	no	no
;	no	no
txn	no	yes
<=	no	no
rqst	no	yes
.	no	no
getMax	no	yes
(	no	no
)	no	no
;	no	no
txn	no	yes
++	no	no
)	no	no
{	no	no
txnIds	no	yes
.	no	no
add	no	yes
(	no	no
txn	no	yes
)	no	no
;	no	no
}	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
+	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
+	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
)	no	no
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
,	no	no
txnIds	no	yes
,	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
int	no	no
updateCnt	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

long	no	no
generateCompactionQueueId	no	no
(	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
long	no	no
getTxnIdForWriteId	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
String	no	yes
tblName	yes	yes
,	no	no
long	no	no
writeId	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
PreparedStatement	no	yes
pst	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
String	no	yes
query	yes	yes
=	no	no
+	no	no
+	no	no
writeId	no	yes
;	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
query	yes	yes
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
)	no	no
)	no	no
;	no	no

lockInternal	no	yes
(	no	no
)	no	no
;	no	no
handle	no	yes
=	no	no
getMutexAPI	no	yes
(	no	no
)	no	no
.	no	no
acquireLock	no	yes
(	no	no
MUTEX_KEY	no	yes
.	no	no
CompactionScheduler	no	yes
.	no	no
name	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
long	no	no
id	no	yes
=	no	no
generateCompactionQueueId	no	yes
(	no	no
stmt	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sb	yes	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quoteChar	no	yes
(	no	no
INITIATED_STATE	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quoteChar	no	yes
(	no	no
WORKING_STATE	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rqst	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
sb	yes	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	no	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
sb	yes	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no

List	no	yes
<	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
sb	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quoteChar	no	yes
(	no	no
INITIATED_STATE	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
quoteChar	no	yes
(	no	no
WORKING_STATE	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	yes	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	yes	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rqst	yes	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
sb	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
add	no	yes
(	no	no
rqst	yes	yes
.	no	no
getPartitionname	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
pst	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
prepareStmtWithParameters	no	yes
(	no	no
dbConn	no	yes
,	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
,	no	no
params	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sb	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
pst	no	yes
.	no	no
executeQuery	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
long	no	no
enqueuedId	yes	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
String	no	yes
state	yes	yes
=	no	no
compactorStateToResponse	no	yes
(	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
2	no	no
)	no	no
.	no	no
charAt	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no

@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
ShowCompactResponse	no	yes
showCompact	no	no
(	no	no
ShowCompactRequest	no	no
rqst	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
ShowCompactResponse	no	yes
response	no	yes
=	no	no
new	no	no
ShowCompactResponse	no	yes
(	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no

OperationType	no	yes
ot	no	yes
=	no	no
OperationType	no	yes
.	no	no
UPDATE	no	yes
;	no	no
if	no	no
(	no	no
rqst	no	yes
.	no	no
isSetOperationType	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ot	no	yes
=	no	no
OperationType	no	yes
.	no	no
fromDataOperationType	no	yes
(	no	no
rqst	no	yes
.	no	no
getOperationType	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Long	no	yes
writeId	no	yes
=	no	no
rqst	no	yes
.	no	no
getWriteid	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
TXN_COMPONENTS_INSERT_QUERY	yes	no
)	no	no
)	no	no
{	no	no
int	no	no
insertCounter	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
partName	no	yes
:	no	no
rqst	no	yes
.	no	no
getPartitionnames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
rqst	no	yes
.	no	no
getTxnid	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
normalizeCase	no	yes
(	no	no
rqst	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
normalizeCase	no	yes
(	no	no
rqst	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
partName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
ot	no	yes
.	no	no
getSqlConst	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setObject	no	yes
(	no	no
6	no	no
,	no	no
writeId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
insertCounter	no	yes
++	no	no
;	no	no

}	no	no
Long	no	yes
writeId	no	yes
=	no	no
rqst	no	yes
.	no	no
getWriteid	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
TXN_COMPONENTS_INSERT_QUERY	yes	yes
)	no	no
)	no	no
{	no	no
int	no	no
insertCounter	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	no
partName	no	yes
:	no	no
rqst	no	yes
.	no	no
getPartitionnames	no	no
(	no	no
)	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
rqst	no	yes
.	no	no
getTxnid	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
2	no	no
,	no	no
normalizeCase	no	yes
(	no	no
rqst	no	yes
.	no	no
getDbname	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
3	no	no
,	no	no
normalizeCase	no	yes
(	no	no
rqst	no	yes
.	no	no
getTablename	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
4	no	no
,	no	no
partName	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setString	no	yes
(	no	no
5	no	no
,	no	no
ot	no	yes
.	no	no
getSqlConst	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setObject	no	yes
(	no	no
6	no	no
,	no	no
writeId	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
addBatch	no	yes
(	no	no
)	no	no
;	no	no
insertCounter	no	yes
++	no	no
;	no	no
if	no	no
(	no	no
insertCounter	no	yes
%	no	no
maxBatchSize	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
TXN_COMPONENTS_INSERT_QUERY	yes	yes
+	no	no
+	no	no
maxBatchSize	no	yes
)	no	no
;	no	no
pstmt	no	yes
.	no	no
executeBatch	no	yes
(	no	no
)	no	no
;	no	no

final	no	no
String	no	yes
defaultCatalog	no	yes
=	no	no
getDefaultCatalog	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
dbName	yes	yes
;	no	no
String	no	yes
tblName	no	yes
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
buff	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
switch	no	no
(	no	no
type	no	no
)	no	no
{	no	no
case	no	no
DATABASE	no	no
:	no	no
{	no	no
dbName	yes	yes
=	no	no
db	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
defaultCatalog	no	yes
.	no	no
equals	no	no
(	no	no
db	yes	yes
.	no	no
getCatalogName	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no

queries	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
dbName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
queries	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
dbName	no	yes
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
buff	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
queries	no	yes
.	no	no
add	no	yes
(	no	no
buff	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
case	no	no
TABLE	no	no
:	no	no
{	no	no
dbName	no	yes
=	no	no
table	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
;	no	no
tblName	yes	yes
=	no	no
table	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
VisibleForTesting	no	no
public	no	no
int	no	no
numLocksInLockTable	no	no
(	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
;	no	no

}	no	no
if	no	no
(	no	no
DatabaseProduct	no	no
.	no	no
isDeadlock	no	no
(	no	no
dbProduct	no	no
,	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
deadlockCnt	no	yes
++	no	no
<	no	no
ALLOWED_REPEATED_DEADLOCKS	no	yes
)	no	no
{	no	no
long	no	no
waitInterval	no	yes
=	no	no
deadlockRetryInterval	no	yes
*	no	no
deadlockCnt	no	yes
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
caller	yes	yes
+	no	no
+	no	no
waitInterval	no	yes
+	no	no
+	no	no
(	no	no
ALLOWED_REPEATED_DEADLOCKS	no	yes
-	no	no
deadlockCnt	no	yes
+	no	no
1	no	no
)	no	no
+	no	no
)	no	no
;	no	no
try	no	no
{	no	no
Thread	no	yes
.	no	no
sleep	no	yes
(	no	no
waitInterval	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
ie	no	no
)	no	no
{	no	no
}	no	no
sendRetrySignal	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
caller	yes	yes
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
isRetryable	no	no
(	no	no
conf	no	no
,	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
sendRetrySignal	no	yes
=	no	no
waitForRetry	no	yes
(	no	no
caller	yes	yes
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
retryOnDuplicateKey	no	no
&&	no	no
isDuplicateKeyError	no	no
(	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
sendRetrySignal	no	yes
=	no	no
waitForRetry	no	yes
(	no	no
caller	yes	yes
,	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no

protected	no	no
long	no	no
getDbTime	no	no
(	no	no
Connection	no	no
conn	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
stmt	no	yes
=	no	no
conn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
;	no	no
switch	no	no
(	no	no
dbProduct	no	no
)	no	no
{	no	no
case	no	no
DERBY	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MYSQL	no	no
:	no	no
case	no	no
POSTGRES	no	no
:	no	no
case	no	no
SQLSERVER	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
case	no	no
ORACLE	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
String	no	yes
msg	yes	no
=	no	no
+	no	no
dbProduct	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
;	no	no

case	no	no
DERBY	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MYSQL	no	no
:	no	no
case	no	no
POSTGRES	no	no
:	no	no
case	no	no
SQLSERVER	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
case	no	no
ORACLE	no	no
:	no	no
s	no	yes
=	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
dbProduct	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
msg	yes	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
throw	no	no
new	no	no
MetaException	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
rs	no	yes
.	no	no
getTimestamp	no	yes
(	no	no
1	no	no
)	no	no
.	no	no
getTime	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
e	no	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
e	no	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
;	no	no

protected	no	no
String	no	yes
isWithinCheckInterval	no	no
(	no	no
String	no	yes
expr	no	no
,	no	no
long	no	no
interval	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
String	no	yes
condition	no	yes
;	no	no
switch	no	no
(	no	no
dbProduct	no	no
)	no	no
{	no	no
case	no	no
DERBY	no	no
:	no	no
condition	no	yes
=	no	no
+	no	no
expr	no	no
+	no	no
+	no	no
interval	no	no
;	no	no
break	no	no
;	no	no
case	no	no
MYSQL	no	no
:	no	no
case	no	no
POSTGRES	no	no
:	no	no
condition	no	yes
=	no	no
expr	no	no
+	no	no
+	no	no
interval	no	no
+	no	no
;	no	no
break	no	no
;	no	no
case	no	no
SQLSERVER	no	no
:	no	no
condition	no	yes
=	no	no
+	no	no
expr	no	no
+	no	no
+	no	no
interval	no	no
;	no	no
break	no	no
;	no	no
case	no	no
ORACLE	no	no
:	no	no
condition	no	yes
=	no	no
expr	no	no
+	no	no
+	no	no
interval	no	no
+	no	no
;	no	no
break	no	no
;	no	no
default	no	no
:	no	no
String	no	yes
msg	yes	no
=	no	no
+	no	no
dbProduct	no	no
.	no	no
toString	no	no
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
determineDatabaseProduct	no	yes
(	no	no
Connection	no	no
conn	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
dbProduct	no	yes
!=	no	no
null	no	no
)	no	no
return	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
s	no	yes
=	no	no
conn	no	yes
.	no	no
getMetaData	no	yes
(	no	no
)	no	no
.	no	no
getDatabaseProductName	no	yes
(	no	no
)	no	no
;	no	no
dbProduct	no	yes
=	no	no
DatabaseProduct	no	yes
.	no	no
determineDatabaseProduct	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
dbProduct	no	yes
==	no	no
DatabaseProduct	no	yes
.	no	no
OTHER	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
s	no	yes
+	no	no
;	no	no

String	no	yes
msg	no	yes
=	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
writeSet	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
txnId	yes	yes
)	no	no
+	no	no
+	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
4	no	no
)	no	no
)	no	no
+	no	no
+	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
5	no	no
)	no	no
+	no	no
+	no	no
resourceName	no	yes
+	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
abortTxns	no	no
(	no	no
dbConn	no	yes
,	no	no
Collections	no	no
.	no	no
singletonList	no	no
(	no	no
writeSet	no	yes
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
.	no	no
txnId	yes	yes
)	no	no
,	no	no
false	no	no
)	no	no
!=	no	no
1	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
msg	no	yes
+	no	no
)	no	no
;	no	no
}	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
TxnAbortedException	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
}	no	no
close	no	yes
(	no	no
rs	no	yes
,	no	no
stmt	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
queryStr	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
+	no	no
extLockId	yes	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
extLockId	yes	yes
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
+	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
whereStr	no	yes
=	no	no
{	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
sharedRead	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
exclusive	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
exclusive	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
sharedRead	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
sharedWrite	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
exclWrite	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
exclusive	no	yes
(	no	no
)	no	no
+	no	no
,	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
exclWrite	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
LockTypeUtil	no	yes
.	no	no
sharedRead	no	yes
(	no	no
)	no	no
}	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
subQuery	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
subCond	no	yes
:	no	no
whereStr	no	yes
)	no	no
{	no	no
subQuery	no	yes
.	no	no
add	no	yes
(	no	no
+	no	no
sqlGenerator	no	yes
.	no	no
addLimitClause	no	yes
(	no	no
1	no	no
,	no	no
queryStr	no	yes
+	no	no
subCond	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
join	no	yes
(	no	no
,	no	no
subQuery	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no

}	no	no
String	no	yes
query	no	yes
=	no	no
String	no	yes
.	no	no
join	no	yes
(	no	no
,	no	no
subQuery	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LockInfo	no	yes
blockedBy	yes	yes
=	no	no
new	no	no
LockInfo	no	yes
(	no	no
rs	no	yes
)	no	no
;	no	no
long	no	no
intLockId	yes	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
)	no	no
;	no	no
char	no	no
lockChar	no	yes
=	no	no
rs	no	yes
.	no	no
getString	no	yes
(	no	no
)	no	no
.	no	no
charAt	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
JavaUtils	no	yes
.	no	no
lockIdToString	no	yes
(	no	no
extLockId	yes	yes
)	no	no
,	no	no
intLockId	yes	yes
,	no	no
JavaUtils	no	yes
.	no	no
txnIdToString	no	yes
(	no	no
txnId	no	yes
)	no	no
,	no	no
blockedBy	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
zeroWaitReadEnabled	no	no
&&	no	no
isValidTxn	no	no
(	no	no
txnId	no	yes
)	no	no
)	no	no
{	no	no
LockType	no	yes
lockType	no	yes
=	no	no
LockTypeUtil	no	yes
.	no	no
getLockTypeFromEncoding	no	yes
(	no	no
lockChar	no	yes
)	no	no
.	no	no
orElseThrow	no	yes
(	no	no
(	no	no
)	no	no
->	no	no
new	no	no
MetaException	no	yes
(	no	no
+	no	no
lockChar	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
lockType	no	yes
==	no	no
LockType	no	yes
.	no	no
SHARED_READ	no	no
)	no	no
{	no	no
String	no	yes
cleanupQuery	no	yes
=	no	no
+	no	no
extLockId	yes	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
cleanupQuery	no	yes
+	no	no
)	no	no
;	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
cleanupQuery	no	yes
)	no	no
;	no	no

private	no	no
TxnStatus	no	no
findTxnState	no	no
(	no	no
long	no	no
txnid	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
txnid	no	yes
;	no	no

private	no	no
TxnStatus	no	no
findTxnState	no	no
(	no	no
long	no	no
txnid	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
txnid	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	yes	yes
+	no	no
)	no	no
;	no	no
try	no	no
(	no	no
ResultSet	no	no
rs	no	no
=	no	no
stmt	no	no
.	no	no
executeQuery	no	no
(	no	no
s	yes	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
rs	no	no
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addLimitClause	no	yes
(	no	no
1	no	no
,	no	no
+	no	no
txnid	no	yes
)	no	no
;	no	no

private	no	no
boolean	no	no
isTxnsOpenAndNotReadOnly	no	no
(	no	no
List	no	yes
<	no	no
Long	no	no
>	no	no
txnIds	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
+	no	no
TxnType	no	yes
.	no	no
READ_ONLY	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
long	no	no
count	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

private	no	no
String	no	yes
getAbortedAndReadOnlyTxns	no	no
(	no	no
List	no	yes
<	no	no
Long	no	no
>	no	no
txnIds	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
StringBuilder	no	yes
txnInfo	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

private	no	no
String	no	yes
getCommittedTxns	no	no
(	no	no
List	no	yes
<	no	no
Long	no	no
>	no	no
txnIds	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
,	no	no
txnIds	no	yes
,	no	no
,	no	no
false	no	no
,	no	no
false	no	no
)	no	no
;	no	no
StringBuilder	no	yes
txnInfo	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
ensureValidTxn	no	no
(	no	no
Connection	no	no
dbConn	no	no
,	no	no
long	no	no
txnid	no	yes
,	no	no
Statement	no	no
stmt	no	no
)	no	no
throws	no	no
SQLException	no	no
,	no	no
NoSuchTxnException	no	no
,	no	no
TxnAbortedException	no	no
{	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
txnid	no	yes
;	no	no

private	no	no
Optional	no	no
<	no	no
LockInfo	no	no
>	no	no
getLockFromLockId	no	no
(	no	no
Connection	no	no
dbConn	no	no
,	no	no
long	no	no
extLockId	yes	yes
)	no	no
throws	no	no
MetaException	no	no
,	no	no
SQLException	no	no
{	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
SELECT_LOCKS_FOR_LOCK_ID_QUERY	yes	no
)	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
extLockId	yes	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
LockInfo	no	yes
>	no	no
getLocksFromLockId	no	no
(	no	no
Connection	no	no
dbConn	no	no
,	no	no
long	no	no
extLockId	yes	yes
)	no	no
throws	no	no
MetaException	no	no
,	no	no
SQLException	no	no
{	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
SELECT_LOCKS_FOR_LOCK_ID_QUERY	yes	no
)	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
LockInfo	no	yes
>	no	no
locks	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
extLockId	yes	yes
)	no	no
;	no	no

private	no	no
void	no	no
timeOutLocks	no	no
(	no	no
Connection	no	no
dbConn	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
Long	no	yes
>	no	no
timedOutLockIds	no	yes
=	no	no
new	no	no
TreeSet	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
try	no	no
(	no	no
PreparedStatement	no	no
pstmt	no	yes
=	no	no
dbConn	no	no
.	no	no
prepareStatement	no	no
(	no	no
String	no	no
.	no	no
format	no	no
(	no	no
SELECT_TIMED_OUT_LOCKS_QUERY	yes	no
,	no	no
TxnDbUtil	no	no
.	no	no
getEpochFn	no	no
(	no	no
dbProduct	no	no
)	no	no
)	no	no
)	no	no
)	no	no
{	no	no
pstmt	no	yes
.	no	no
setLong	no	yes
(	no	no
1	no	no
,	no	no
timeout	no	yes
)	no	no
;	no	no

timedOutLockIds	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
timedOutLockIds	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
timedOutLockIds	no	yes
,	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	no
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
int	no	no
deletedLocks	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	yes	no
:	no	no
queries	no	yes
)	no	no
{	no	no

if	no	no
(	no	no
timedOutLockIds	yes	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
queries	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
prefix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
StringBuilder	no	yes
suffix	no	yes
=	no	no
new	no	no
StringBuilder	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
)	no	no
.	no	no
append	no	yes
(	no	no
timeout	no	yes
)	no	no
;	no	no
prefix	no	yes
.	no	no
append	no	yes
(	no	no
)	no	no
;	no	no
TxnUtils	no	yes
.	no	no
buildQueryWithINClause	no	yes
(	no	no
conf	no	yes
,	no	no
queries	no	yes
,	no	no
prefix	no	yes
,	no	no
suffix	no	yes
,	no	no
timedOutLockIds	yes	yes
,	no	no
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
try	no	no
(	no	no
Statement	no	no
stmt	no	yes
=	no	no
dbConn	no	no
.	no	no
createStatement	no	no
(	no	no
)	no	no
)	no	no
{	no	no
int	no	no
deletedLocks	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
query	no	yes
:	no	no
queries	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
query	no	yes
+	no	no
)	no	no
;	no	no
deletedLocks	yes	yes
+=	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
query	no	yes
)	no	no
;	no	no

@	no	no
RetrySemantics	no	no
.	no	no
Idempotent	no	no
public	no	no
void	no	no
performTimeOuts	no	no
(	no	no
)	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
timeOutLocks	no	yes
(	no	no
dbConn	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
+	no	no
+	no	no
TxnDbUtil	no	yes
.	no	no
getEpochFn	no	yes
(	no	no
dbProduct	no	yes
)	no	no
+	no	no
+	no	no
timeout	no	yes
+	no	no
+	no	no
TxnType	no	yes
.	no	no
REPL_CREATED	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
s	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addLimitClause	no	yes
(	no	no
10	no	no
*	no	no
TIMED_OUT_TXN_ABORT_BATCH_SIZE	no	yes
,	no	no
s	yes	yes
)	no	no
;	no	no

List	no	yes
<	no	no
Long	no	yes
>	no	no
currentBatch	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
TIMED_OUT_TXN_ABORT_BATCH_SIZE	no	yes
)	no	no
;	no	no
timedOutTxns	no	yes
.	no	no
add	no	yes
(	no	no
currentBatch	no	yes
)	no	no
;	no	no
do	no	no
{	no	no
if	no	no
(	no	no
currentBatch	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
TIMED_OUT_TXN_ABORT_BATCH_SIZE	no	yes
)	no	no
{	no	no
currentBatch	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
TIMED_OUT_TXN_ABORT_BATCH_SIZE	no	yes
)	no	no
;	no	no
timedOutTxns	no	yes
.	no	no
add	no	yes
(	no	no
currentBatch	no	yes
)	no	no
;	no	no
}	no	no
currentBatch	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
close	no	yes
(	no	no
rs	no	yes
,	no	no
stmt	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
int	no	no
numTxnsAborted	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
List	no	yes
<	no	no
Long	no	yes
>	no	no
batchToAbort	yes	yes
:	no	no
timedOutTxns	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
abortTxns	no	no
(	no	no
dbConn	no	yes
,	no	no
batchToAbort	yes	yes
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
==	no	no
batchToAbort	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numTxnsAborted	no	yes
+=	no	no
batchToAbort	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no

currentBatch	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
TIMED_OUT_TXN_ABORT_BATCH_SIZE	no	yes
)	no	no
;	no	no
timedOutTxns	no	yes
.	no	no
add	no	yes
(	no	no
currentBatch	no	yes
)	no	no
;	no	no
}	no	no
currentBatch	no	yes
.	no	no
add	no	yes
(	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
}	no	no
while	no	no
(	no	no
rs	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
close	no	yes
(	no	no
rs	no	yes
,	no	no
stmt	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
int	no	no
numTxnsAborted	yes	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
List	no	no
<	no	no
Long	no	no
>	no	no
batchToAbort	no	yes
:	no	no
timedOutTxns	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
abortTxns	no	no
(	no	no
dbConn	no	yes
,	no	no
batchToAbort	no	yes
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
==	no	no
batchToAbort	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
numTxnsAborted	yes	yes
+=	no	no
batchToAbort	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
Collections	no	yes
.	no	no
sort	no	yes
(	no	no
batchToAbort	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
batchToAbort	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
@	no	no
RetrySemantics	no	no
.	no	no
ReadOnly	no	no
public	no	no
void	no	no
countOpenTxns	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	yes	yes
=	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
;	no	no

Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
s	no	yes
=	no	no
+	no	no
TxnStatus	no	yes
.	no	no
OPEN	no	yes
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
s	no	yes
+	no	no
)	no	no
;	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
s	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
Long	no	yes
numOpen	no	yes
=	no	no
rs	no	yes
.	no	no
getLong	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numOpen	no	yes
>	no	no
Integer	yes	no
.	no	no
MAX_VALUE	no	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
LockHandle	no	no
acquireLock	no	no
(	no	no
String	no	yes
key	no	yes
)	no	no
throws	no	no
MetaException	no	no
{	no	no
Connection	no	yes
dbConn	no	yes
=	no	no
null	no	no
;	no	no
Statement	no	yes
stmt	no	yes
=	no	no
null	no	no
;	no	no
ResultSet	no	yes
rs	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
try	no	no
{	no	no
String	no	yes
sqlStmt	yes	yes
=	no	no
sqlGenerator	no	yes
.	no	no
addForUpdateClause	no	yes
(	no	no
+	no	no
quoteString	no	yes
(	no	no
key	no	yes
)	no	no
+	no	no
)	no	no
;	no	no
lockInternal	no	yes
(	no	no
)	no	no
;	no	no
dbConn	no	yes
=	no	no
getDbConn	no	yes
(	no	no
Connection	no	yes
.	no	no
TRANSACTION_READ_COMMITTED	no	yes
,	no	no
connPoolMutex	no	yes
)	no	no
;	no	no
stmt	no	yes
=	no	no
dbConn	no	yes
.	no	no
createStatement	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

try	no	no
{	no	no
stmt	no	yes
.	no	no
executeUpdate	no	yes
(	no	no
+	no	no
quoteString	no	yes
(	no	no
key	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
dbConn	no	yes
.	no	no
commit	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
SQLException	no	no
ex	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
isDuplicateKeyError	no	no
(	no	no
ex	no	yes
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
quoteString	no	yes
(	no	no
key	yes	yes
)	no	no
+	no	no
+	no	no
getMessage	no	yes
(	no	no
ex	no	yes
)	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
}	no	no
dbConn	no	yes
.	no	no
rollback	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
rs	no	yes
=	no	no
stmt	no	yes
.	no	no
executeQuery	no	yes
(	no	no
sqlStmt	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
rs	no	yes
.	no	no
next	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IllegalStateException	no	yes
(	no	no
+	no	no
quoteString	no	yes
(	no	no
key	yes	yes
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
Semaphore	no	yes
derbySemaphore	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
dbProduct	no	no
==	no	no
DatabaseProduct	no	no
.	no	no
DERBY	no	no
)	no	no
{	no	no
derbyKey2Lock	no	yes
.	no	no
putIfAbsent	no	yes
(	no	no
key	yes	yes
,	no	no
new	no	no
Semaphore	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
;	no	no
derbySemaphore	no	yes
=	no	no
derbyKey2Lock	no	yes
.	no	no
get	no	yes
(	no	no
key	yes	yes
)	no	no
;	no	no
derbySemaphore	no	yes
.	no	no
acquire	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
acquireTxnLock	no	no
(	no	no
Statement	no	no
stmt	no	yes
,	no	no
boolean	no	no
shared	yes	yes
)	no	no
throws	no	no
SQLException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
sqlStmt	no	yes
=	no	no
sqlGenerator	no	yes
.	no	no
createTxnLockStatement	no	yes
(	no	no
shared	yes	yes
)	no	no
;	no	no
stmt	no	yes
.	no	no
execute	no	yes
(	no	no
sqlStmt	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
aggrPartitionStats	no	no
(	no	no
Map	no	no
<	no	no
ColumnStatsAggregator	no	no
,	no	no
List	no	yes
<	no	no
ColStatsObjWithSourceInfo	no	no
>>	no	no
colStatsMap	yes	yes
,	no	no
final	no	no
List	no	yes
<	no	no
String	no	no
>	no	no
partNames	no	no
,	no	no
final	no	no
boolean	no	no
areAllPartsFound	no	no
,	no	no
final	no	no
boolean	no	no
useDensityFunctionForNDVEstimation	no	no
,	no	no
final	no	no
double	no	no
ndvTuner	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
aggrColStatObjs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
numProcessors	yes	yes
=	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
availableProcessors	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
colStatsMap	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numProcessors	yes	yes
)	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>>	no	no
futures	no	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no

List	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
aggrColStatObjs	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
numProcessors	no	yes
=	no	no
Runtime	no	yes
.	no	no
getRuntime	no	yes
(	no	no
)	no	no
.	no	no
availableProcessors	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
ExecutorService	no	yes
pool	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
colStatsMap	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numProcessors	no	yes
)	no	no
,	no	no
new	no	no
ThreadFactoryBuilder	no	yes
(	no	no
)	no	no
.	no	no
setDaemon	no	yes
(	no	no
true	no	no
)	no	no
.	no	no
setNameFormat	no	yes
(	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
final	no	no
List	no	yes
<	no	no
Future	no	yes
<	no	no
ColumnStatisticsObj	no	yes
>>	no	no
futures	no	yes
=	no	no
Lists	no	yes
.	no	no
newLinkedList	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
colStatsMap	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
numProcessors	no	yes
)	no	no
)	no	no
;	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
ColumnStatsAggregator	no	yes
,	no	no
List	no	yes
<	no	no
ColStatsObjWithSourceInfo	no	yes
>>	no	no
entry	no	yes
:	no	no
colStatsMap	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
futures	no	yes
.	no	no
add	no	no
(	no	no
pool	no	yes
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
ColumnStatisticsObj	no	yes
call	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
List	no	yes
<	no	no
ColStatsObjWithSourceInfo	no	yes
>	no	no
colStatWithSourceInfo	no	yes
=	no	no
entry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
ColumnStatsAggregator	no	yes
aggregator	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ColumnStatisticsObj	no	yes
statsObj	no	yes
=	no	no
aggregator	no	yes
.	no	no
aggregate	no	yes
(	no	no
colStatWithSourceInfo	no	yes
,	no	no
partNames	no	yes
,	no	no
areAllPartsFound	no	yes
)	no	no
;	no	no
return	no	no
statsObj	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	no
)	no	no
{	no	no

ColumnStatsAggregator	no	yes
aggregator	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
ColumnStatisticsObj	no	yes
statsObj	no	yes
=	no	no
aggregator	no	yes
.	no	no
aggregate	no	yes
(	no	no
colStatWithSourceInfo	no	yes
,	no	no
partNames	no	yes
,	no	no
areAllPartsFound	no	yes
)	no	no
;	no	no
return	no	no
statsObj	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
MetaException	no	no
e	yes	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
e	yes	yes
.	no	no
getMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
throw	no	no
e	yes	yes
;	no	no
}	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
}	no	no
pool	no	yes
.	no	no
shutdown	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
futures	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
for	no	no
(	no	no
Future	no	no
<	no	no
ColumnStatisticsObj	no	yes
>	no	no
future	no	yes
:	no	no
futures	no	no
)	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
aggrColStatObjs	no	yes
.	no	no
add	no	yes
(	no	no
future	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
|	no	no
ExecutionException	no	no
e	yes	yes
)	no	no
{	no	no

Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
params	no	yes
=	no	no
tbl	yes	yes
.	no	no
getParameters	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
updateStats	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
(	no	no
params	no	yes
!=	no	no
null	no	no
)	no	no
&&	no	no
params	no	yes
.	no	no
containsKey	no	no
(	no	no
StatsSetupConst	yes	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
)	no	no
)	no	no
{	no	no
updateStats	no	yes
=	no	no
!	no	no
Boolean	no	yes
.	no	no
valueOf	no	yes
(	no	no
params	no	yes
.	no	no
get	no	yes
(	no	no
StatsSetupConst	yes	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
)	no	no
)	no	no
;	no	no
params	no	yes
.	no	no
remove	no	yes
(	no	no
StatsSetupConst	yes	yes
.	no	no
DO_NOT_UPDATE_STATS	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
updateStats	no	yes
||	no	no
newDir	no	no
||	no	no
tbl	yes	yes
.	no	no
getPartitionKeysSize	no	no
(	no	no
)	no	no
!=	no	no
0	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
forceRecompute	no	no
&&	no	no
params	no	yes
!=	no	no
null	no	no
&&	no	no
containsAllFastStats	no	no
(	no	no
params	no	yes
)	no	no
)	no	no
{	no	no
return	no	no
;	no	no
}	no	no
List	no	yes
<	no	no
FileStatus	no	yes
>	no	no
fileStatus	no	yes
=	no	no
wh	no	yes
.	no	no
getFileStatusesForUnpartitionedTable	no	yes
(	no	no
db	no	yes
,	no	no
tbl	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
params	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
params	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
tbl	yes	yes
.	no	no
setParameters	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
tbl	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
populateQuickStats	no	yes
(	no	no
fileStatus	no	yes
,	no	no
params	no	yes
)	no	no
;	no	no

public	no	no
static	no	no
String	no	yes
getPartitionName	no	no
(	no	no
Path	no	yes
tablePath	yes	no
,	no	no
Path	no	yes
partitionPath	no	yes
,	no	no
Set	no	no
<	no	no
String	no	yes
>	no	no
partCols	yes	no
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partitionColToTypeMap	no	no
)	no	no
{	no	no
String	no	yes
result	no	yes
=	no	no
null	no	no
;	no	no
Path	no	yes
currPath	no	yes
=	no	no
partitionPath	no	yes
;	no	no

LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
tablePath	no	yes
+	no	no
+	no	no
partCols	no	yes
)	no	no
;	no	no
while	no	no
(	no	no
currPath	yes	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
tablePath	no	yes
.	no	no
equals	no	no
(	no	no
currPath	yes	yes
)	no	no
)	no	no
{	no	no
String	no	yes
[	no	no
]	no	no
parts	no	yes
=	no	no
currPath	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
.	no	no
split	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
parts	no	yes
.	no	no
length	no	no
>	no	no
0	no	no
)	no	no
{	no	no
if	no	no
(	no	no
parts	no	yes
.	no	no
length	no	no
!=	no	no
2	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
currPath	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
return	no	no
result	no	yes
;	no	no
}	no	no
String	no	yes
partitionName	no	yes
=	no	no
parts	no	yes
[	no	no
0	no	no
]	no	no
.	no	no
toLowerCase	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
partitionValue	no	yes
=	no	no
parts	no	yes
[	no	no
1	no	no
]	no	no
;	no	no
if	no	no
(	no	no
partCols	no	yes
.	no	no
contains	no	no
(	no	no
partitionName	no	yes
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
result	no	yes
=	no	no
partitionName	no	yes
+	no	no
+	no	no
getNormalisedPartitionValue	no	yes
(	no	no
partitionValue	no	yes
,	no	no
partitionColToTypeMap	no	yes
.	no	no
get	no	yes
(	no	no
partitionName	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
result	no	yes
=	no	no
partitionName	no	yes
+	no	no
+	no	no
getNormalisedPartitionValue	no	yes
(	no	no
partitionValue	no	yes
,	no	no
partitionColToTypeMap	no	yes
.	no	no
get	no	yes
(	no	no
partitionName	no	yes
)	no	no
)	no	no
+	no	no
Path	no	yes
.	no	no
SEPARATOR	no	yes
+	no	no
result	no	yes
;	no	no
}	no	no
}	no	no
}	no	no
currPath	yes	yes
=	no	no
currPath	yes	yes
.	no	no
getParent	no	yes
(	no	no
)	no	no
;	no	no

public	no	no
static	no	no
String	no	no
getNormalisedPartitionValue	no	no
(	no	no
String	no	no
partitionValue	yes	no
,	no	no
String	no	no
type	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
open	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
{	no	no
isConnected	no	yes
=	no	no
false	no	no
;	no	no
TTransportException	no	yes
tte	no	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
useSSL	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_SSL	no	yes
)	no	no
;	no	no
boolean	no	no
useSasl	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_SASL	no	yes
)	no	no
;	no	no
boolean	no	no
useFramedTransport	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_FRAMED_TRANSPORT	no	yes
)	no	no
;	no	no
boolean	no	no
useCompactProtocol	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_COMPACT_PROTOCOL	no	yes
)	no	no
;	no	no
int	no	no
clientSocketTimeout	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CLIENT_SOCKET_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
attempt	no	no
=	no	no
0	no	no
;	no	no
!	no	no
isConnected	no	yes
&&	no	no
attempt	no	no
<	no	no
retries	no	no
;	no	no
++	no	no
attempt	no	no
)	no	no
{	no	no
for	no	no
(	no	no
URI	no	no
store	yes	no
:	no	no
metastoreUris	no	no
)	no	no
{	no	no

final	no	no
TProtocol	no	yes
protocol	no	yes
;	no	no
if	no	no
(	no	no
useCompactProtocol	no	no
)	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TCompactProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TBinaryProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
client	no	yes
=	no	no
new	no	no
ThriftHiveMetastore	no	yes
.	no	no
Client	no	yes
(	no	no
protocol	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
transport	no	yes
.	no	no
isOpen	no	no
(	no	no
)	no	no
)	no	no
{	no	no
transport	no	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
connCount	no	yes
.	no	no
incrementAndGet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
isConnected	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
TTransportException	no	no
e	yes	yes
)	no	no
{	no	no
tte	no	yes
=	no	no
e	yes	yes
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	yes	yes
)	no	no
;	no	no

Table	no	yes
tbl	no	yes
=	no	no
request	no	yes
.	no	no
getTable	no	yes
(	no	no
)	no	no
;	no	no
HiveMetaHook	no	yes
hook	no	yes
=	no	no
getHook	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hook	no	yes
.	no	no
preCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
boolean	no	no
success	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
client	no	yes
.	no	no
create_table_req	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
hook	no	yes
.	no	no
commitCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
success	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
if	no	no
(	no	no
!	no	no
success	no	yes
&&	no	no
(	no	no
hook	no	yes
!=	no	no
null	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
hook	no	yes
.	no	no
rollbackCreateTable	no	yes
(	no	no
tbl	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

@	no	no
InterfaceAudience	no	no
.	no	no
LimitedPrivate	no	no
(	no	no
{	no	no
}	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
NotificationEventResponse	no	yes
getNextNotification	no	no
(	no	no
long	no	no
lastEventId	no	yes
,	no	no
int	no	no
maxEvents	no	yes
,	no	no
NotificationFilter	no	no
filter	no	no
)	no	no
throws	no	no
TException	no	no
{	no	no
NotificationEventRequest	no	yes
rqst	no	yes
=	no	no
new	no	no
NotificationEventRequest	no	yes
(	no	no
lastEventId	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
setMaxEvents	no	yes
(	no	no
maxEvents	no	yes
)	no	no
;	no	no
NotificationEventResponse	no	yes
rsp	yes	yes
=	no	no
client	no	yes
.	no	no
get_next_notification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no

@	no	no
InterfaceAudience	no	no
.	no	no
LimitedPrivate	no	no
(	no	no
{	no	no
}	no	no
)	no	no
@	no	no
Override	no	no
public	no	no
NotificationEventResponse	no	yes
getNextNotification	no	no
(	no	no
long	no	no
lastEventId	no	yes
,	no	no
int	no	no
maxEvents	no	yes
,	no	no
NotificationFilter	no	no
filter	no	no
)	no	no
throws	no	no
TException	no	no
{	no	no
NotificationEventRequest	no	yes
rqst	no	yes
=	no	no
new	no	no
NotificationEventRequest	no	yes
(	no	no
lastEventId	no	yes
)	no	no
;	no	no
rqst	no	yes
.	no	no
setMaxEvents	no	yes
(	no	no
maxEvents	no	yes
)	no	no
;	no	no
NotificationEventResponse	no	yes
rsp	no	yes
=	no	no
client	no	yes
.	no	no
get_next_notification	no	yes
(	no	no
rqst	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
rsp	no	yes
.	no	no
getEventsSize	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
NotificationEventResponse	no	yes
filtered	no	yes
=	no	no
new	no	no
NotificationEventResponse	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
rsp	no	yes
!=	no	no
null	no	no
&&	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
long	no	no
nextEventId	yes	yes
=	no	no
lastEventId	no	yes
+	no	no
1	no	no
;	no	no
for	no	no
(	no	no
NotificationEvent	no	no
e	yes	no
:	no	no
rsp	no	yes
.	no	no
getEvents	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
e	yes	no
.	no	no
getEventId	no	no
(	no	no
)	no	no
!=	no	no
nextEventId	yes	yes
)	no	no
{	no	no

jdbcUrl	yes	yes
=	no	no
+	no	no
TMP_DIR	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
MetaStoreServerUtils	no	yes
.	no	no
JUNIT_DATABASE_PREFIX	no	yes
+	no	no
+	no	no
metaStorePort	yes	yes
+	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
,	no	no
jdbcUrl	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	no
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
THRIFT_SERVICE_DISCOVERY_MODE	no	no
)	no	no
.	no	no
trim	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
THRIFT_URIS	no	yes
,	no	no
+	no	no
metaStorePort	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
createTransactionalTables	no	no
)	no	no
{	no	no
Configuration	no	yes
txnInitConf	no	yes
=	no	no
new	no	no
Configuration	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
TxnDbUtil	no	yes
.	no	no
setConfValues	no	yes
(	no	no
txnInitConf	no	yes
)	no	no
;	no	no
TxnDbUtil	no	yes
.	no	no
prepDb	no	yes
(	no	no
txnInitConf	no	yes
)	no	no
;	no	no
}	no	no
MetaStoreTestUtils	no	yes
.	no	no
startMetaStore	no	yes
(	no	no
metaStorePort	yes	yes
,	no	no
bridge	no	yes
,	no	no
conf	no	yes
,	no	no
withHouseKeepingThreads	no	yes
,	no	no
waitForHouseKeepers	no	yes
)	no	no
;	no	no
Warehouse	no	yes
wh	no	yes
=	no	no
new	no	no
Warehouse	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
wh	no	yes
.	no	no
isDir	no	no
(	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
FileSystem	no	yes
fs	no	yes
=	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
.	no	no
getFileSystem	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
fs	no	yes
.	no	no
mkdirs	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
fs	no	yes
.	no	no
setPermission	no	yes
(	no	no
wh	no	yes
.	no	no
getWhRoot	no	yes
(	no	no
)	no	no
,	no	no
new	no	no
FsPermission	no	yes
(	no	no
FsAction	no	yes
.	no	no
ALL	no	yes
,	no	no
FsAction	no	yes
.	no	no
ALL	no	yes
,	no	no
FsAction	no	yes
.	no	no
ALL	no	yes
)	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
warehouseDir	yes	yes
)	no	no
;	no	no

String	no	yes
uri	no	yes
;	no	no
if	no	no
(	no	no
msHost	no	yes
!=	no	no
null	no	no
&&	no	no
!	no	no
msHost	no	yes
.	no	no
trim	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
uri	no	yes
=	no	no
msHost	no	yes
;	no	no
}	no	no
else	no	no
{	no	no
uri	no	yes
=	no	no
InetAddress	no	yes
.	no	no
getLocalHost	no	yes
(	no	no
)	no	no
.	no	no
getHostName	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
uri	no	yes
=	no	no
uri	no	yes
+	no	no
+	no	no
port	no	yes
;	no	no
int	no	no
retries	no	yes
=	no	no
0	no	no
;	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
try	no	no
{	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
serverUris	no	yes
=	no	no
zkHelper	no	yes
.	no	no
getServerUris	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
serverUris	no	yes
.	no	no
equals	no	no
(	no	no
Collections	no	no
.	no	no
singletonList	no	no
(	no	no
uri	no	yes
)	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
uri	no	yes
+	no	no
+	no	no
serverUris	no	yes
)	no	no
;	no	no
}	no	no
return	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
retries	no	yes
++	no	no
>	no	no
60	no	no
)	no	no
{	no	no

private	no	no
void	no	no
failInThread	no	no
(	no	no
String	no	no
msg	yes	no
,	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no
isFailed	no	yes
=	no	no
true	no	no
;	no	no
if	no	no
(	no	no
e	yes	no
!=	no	no
null	no	no
)	no	no
{	no	no

@	no	no
BeforeClass	no	no
public	no	no
static	no	no
void	no	no
startMetaStoreServer	no	no
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
conf	no	yes
.	no	no
set	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
MetaStoreTestUtils	no	yes
.	no	no
setConfForStandloneMode	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
BATCH_RETRIEVE_MAX	no	yes
,	no	no
2	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setLongVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
LIMIT_PARTITION_REQUEST	no	yes
,	no	no
100	no	no
)	no	no
;	no	no
port	yes	yes
=	no	no
MetaStoreTestUtils	no	yes
.	no	no
startMetaStoreWithRetry	no	yes
(	no	no
HadoopThriftAuthBridge	no	yes
.	no	no
getBridge	no	yes
(	no	no
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no

Partition	no	yes
retp	no	yes
=	no	no
client	no	yes
.	no	no
add_partition	no	yes
(	no	no
part	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
part	no	yes
,	no	no
retp	no	yes
)	no	no
;	no	no
Partition	no	yes
retp2	no	yes
=	no	no
client	no	yes
.	no	no
add_partition	no	yes
(	no	no
part2	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
part2	no	yes
,	no	no
retp2	no	yes
)	no	no
;	no	no
Partition	no	yes
retp3	no	yes
=	no	no
client	no	yes
.	no	no
add_partition	no	yes
(	no	no
part3	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
part3	no	yes
,	no	no
retp3	no	yes
)	no	no
;	no	no
Partition	no	yes
retp4	no	yes
=	no	no
client	no	yes
.	no	no
add_partition	no	yes
(	no	no
part4	no	yes
)	no	no
;	no	no
assertNotNull	no	yes
(	no	no
+	no	no
part4	no	yes
,	no	no
retp4	no	yes
)	no	no
;	no	no
Partition	no	yes
part_get	no	yes
=	no	no
client	no	yes
.	no	no
getPartition	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
part	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
adjust	no	yes
(	no	no
client	no	yes
,	no	no
part	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
isThriftClient	no	yes
)	no	no
;	no	no
adjust	no	yes
(	no	no
client	no	yes
,	no	no
part2	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
isThriftClient	no	yes
)	no	no
;	no	no
adjust	no	yes
(	no	no
client	no	yes
,	no	no
part3	no	yes
,	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
isThriftClient	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
,	no	no
part	no	yes
.	no	no
equals	no	yes
(	no	no
part_get	no	yes
)	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
vals6	no	yes
=	no	no
makeVals	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
Partition	no	yes
part6	no	yes
=	no	no
makePartitionObject	no	yes
(	no	no
dbName	yes	yes
,	no	no
tblName	yes	yes
,	no	no
vals6	no	yes
,	no	no
tbl	no	yes
,	no	no
)	no	no
;	no	no

Table	no	yes
tbl	no	yes
=	no	no
client	no	yes
.	no	no
getTable	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
GetPartitionsRequest	no	yes
request	no	yes
=	no	no
new	no	no
GetPartitionsRequest	no	yes
(	no	no
)	no	no
;	no	no
GetPartitionsProjectionSpec	no	yes
projectSpec	no	yes
=	no	no
new	no	no
GetPartitionsProjectionSpec	no	yes
(	no	no
)	no	no
;	no	no
projectSpec	no	yes
.	no	no
setFieldList	no	yes
(	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
)	no	no
)	no	no
;	no	no
projectSpec	no	yes
.	no	no
setExcludeParamKeyPattern	no	yes
(	no	no
)	no	no
;	no	no
GetPartitionsFilterSpec	no	yes
filter	no	yes
=	no	no
new	no	no
GetPartitionsFilterSpec	no	yes
(	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setDbName	no	yes
(	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setTblName	no	yes
(	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setFilterSpec	no	yes
(	no	no
filter	no	yes
)	no	no
;	no	no
request	no	yes
.	no	no
setProjectionSpec	no	yes
(	no	no
projectSpec	no	yes
)	no	no
;	no	no
GetPartitionsResponse	no	yes
response	no	yes
;	no	no
try	no	no
{	no	no
response	no	yes
=	no	no
client	no	yes
.	no	no
getPartitionsWithSpecs	no	yes
(	no	no
request	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	yes
)	no	no
{	no	no
ex	yes	yes
.	no	no
printStackTrace	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
void	no	no
checkFilter	no	no
(	no	no
HiveMetaStoreClient	no	no
client	no	no
,	no	no
String	no	no
dbName	no	no
,	no	no
String	no	no
tblName	no	no
,	no	no
String	no	no
filter	yes	no
,	no	no
int	no	no
expectedCount	no	no
)	no	no
throws	no	no
TException	no	no
{	no	no

}	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
expectedDates	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
>	no	no
(	no	no
nDates	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
nDates	no	yes
;	no	no
++	no	no
i	no	yes
)	no	no
{	no	no
expectedDates	no	yes
.	no	no
add	no	yes
(	no	no
datePrefix	no	yes
+	no	no
i	no	yes
)	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
expectedDates	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
,	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
expectedDates	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
,	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
partitionSpecProxy	no	yes
=	no	no
hmsc	no	yes
.	no	no
listPartitionSpecsByFilter	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
clear	no	yes
(	no	no
)	no	no
;	no	no
iterator	no	yes
=	no	no
partitionSpecProxy	no	yes
.	no	no
getPartitionIterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
iterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
partition	no	yes
=	no	no
iterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
partition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
1	no	no
)	no	no
)	no	no
.	no	no
add	no	yes
(	no	no
partition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
.	no	no
get	no	yes
(	no	no
0	no	no
)	no	no
)	no	no
;	no	no
}	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
0	no	no
,	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertArrayEquals	no	yes
(	no	no
,	no	no
expectedDates	no	yes
.	no	no
toArray	no	yes
(	no	no
)	no	no
,	no	no
locationToDateMap	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
.	no	no
toArray	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

StorageDescriptor	no	yes
targetTableSd	no	yes
=	no	no
new	no	no
StorageDescriptor	no	yes
(	no	no
targetTable	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
targetTableSd	no	yes
.	no	no
setLocation	no	yes
(	no	no
targetTableSd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
.	no	no
replace	no	yes
(	no	no
tableName	no	yes
,	no	no
targetTableName	no	yes
)	no	no
)	no	no
;	no	no
hmsc	no	yes
.	no	no
createTable	no	yes
(	no	no
targetTable	no	yes
)	no	no
;	no	no
PartitionSpecProxy	no	yes
partitionsForAddition	no	yes
=	no	no
hmsc	no	yes
.	no	no
listPartitionSpecsByFilter	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
partitionsForAddition	no	yes
.	no	no
setTableName	no	yes
(	no	no
targetTableName	no	yes
)	no	no
;	no	no
partitionsForAddition	no	yes
.	no	no
setRootLocation	no	yes
(	no	no
targetTableSd	no	yes
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
partitionsForAddition	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
hmsc	no	yes
.	no	no
add_partitions_pspec	no	yes
(	no	no
partitionsForAddition	no	yes
)	no	no
)	no	no
;	no	no
PartitionSpecProxy	no	yes
clonedPartitions	no	yes
=	no	no
hmsc	no	yes
.	no	no
listPartitionSpecs	no	yes
(	no	no
dbName	no	yes
,	no	no
targetTableName	no	yes
,	no	no
-	no	no
1	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
partitionsForAddition	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
clonedPartitions	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
PartitionSpecProxy	no	yes
.	no	no
PartitionIterator	no	yes
sourceIterator	no	yes
=	no	no
partitionsForAddition	no	yes
.	no	no
getPartitionIterator	no	yes
(	no	no
)	no	no
,	no	no
targetIterator	no	yes
=	no	no
clonedPartitions	no	yes
.	no	no
getPartitionIterator	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
targetIterator	no	yes
.	no	no
hasNext	no	no
(	no	no
)	no	no
)	no	no
{	no	no
Partition	no	yes
sourcePartition	no	yes
=	no	no
sourceIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
=	no	no
targetIterator	no	yes
.	no	no
next	no	yes
(	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Assert	no	yes
.	no	no
assertEquals	no	yes
(	no	no
,	no	no
sourcePartition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
,	no	no
targetPartition	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

@	no	no
Test	no	no
public	no	no
void	no	no
testDatabaseOps	no	no
(	no	no
)	no	no
throws	no	no
MetaException	no	no
,	no	no
InvalidObjectException	no	no
,	no	no
NoSuchObjectException	no	no
{	no	no
String	no	yes
catName	no	yes
=	no	no
;	no	no
createTestCatalog	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
Database	no	yes
db1	no	yes
=	no	no
new	no	no
Database	no	yes
(	no	no
DB1	no	yes
,	no	no
,	no	no
,	no	no
null	no	no
)	no	no
;	no	no
Database	no	yes
db2	no	yes
=	no	no
new	no	no
Database	no	yes
(	no	no
DB2	no	yes
,	no	no
,	no	no
,	no	no
null	no	no
)	no	no
;	no	no
db1	no	yes
.	no	no
setCatalogName	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
db2	no	yes
.	no	no
setCatalogName	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no
objectStore	no	yes
.	no	no
createDatabase	no	yes
(	no	no
db1	no	yes
)	no	no
;	no	no
objectStore	no	yes
.	no	no
createDatabase	no	yes
(	no	no
db2	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
databases	yes	yes
=	no	no
objectStore	no	yes
.	no	no
getAllDatabases	no	yes
(	no	no
catName	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
misbehave	no	no
(	no	no
)	no	no
throws	no	no
RuntimeException	no	yes
{	no	no
TestObjectStoreInitRetry	yes	yes
.	no	no
debugTrace	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
TestObjectStoreInitRetry	yes	yes
.	no	no
getInjectConnectFailure	no	no
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
TestObjectStoreInitRetry	yes	yes
.	no	no
decrementInjectConnectFailure	no	yes
(	no	no
)	no	no
;	no	no
RuntimeException	no	yes
re	yes	yes
=	no	no
new	no	no
JDOCanRetryException	no	yes
(	no	no
)	no	no
;	no	no

MetastoreConf	no	yes
.	no	no
setTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
HMS_HANDLER_INTERVAL	no	yes
,	no	no
1	no	no
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECTION_DRIVER	no	yes
,	no	no
FakeDerby	no	yes
.	no	no
class	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
TRY_DIRECT_SQL	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
String	no	yes
jdbcUrl	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
)	no	no
;	no	no
jdbcUrl	no	yes
=	no	no
jdbcUrl	no	yes
.	no	no
replace	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
MetastoreConf	no	yes
.	no	no
setVar	no	yes
(	no	no
conf	no	yes
,	no	no
ConfVars	no	yes
.	no	no
CONNECT_URL_KEY	no	yes
,	no	no
jdbcUrl	no	yes
)	no	no
;	no	no
MetaStoreTestUtils	no	yes
.	no	no
setConfForStandloneMode	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
FakeDerby	no	yes
fd	no	yes
=	no	no
new	no	no
FakeDerby	no	yes
(	no	no
)	no	no
;	no	no
ObjectStore	no	yes
objStore	no	yes
=	no	no
new	no	no
ObjectStore	no	yes
(	no	no
)	no	no
;	no	no
Exception	no	yes
savE	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
setInjectConnectFailure	no	yes
(	no	no
5	no	no
)	no	no
;	no	no
objStore	no	yes
.	no	no
setConf	no	yes
(	no	no
conf	no	yes
)	no	no
;	no	no
Assert	no	yes
.	no	no
fail	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	yes
e	yes	no
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
boolean	no	no
getPartitionsByExpr	no	no
(	no	no
String	no	yes
catName	no	yes
,	no	no
String	no	yes
dbName	no	yes
,	no	no
String	no	yes
tblName	no	yes
,	no	no
byte	no	no
[	no	no
]	no	no
expr	no	yes
,	no	no
String	no	yes
defaultPartitionName	no	yes
,	no	no
short	no	no
maxParts	no	yes
,	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
result	no	yes
)	no	no
throws	no	no
TException	no	no
{	no	no
List	no	yes
<	no	no
Partition	no	yes
>	no	no
ormParts	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
boolean	no	no
sqlResult	no	yes
=	no	no
getPartitionsByExprInternal	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
,	no	no
maxParts	no	yes
,	no	no
result	no	yes
,	no	no
true	no	no
,	no	no
false	no	no
)	no	no
;	no	no
boolean	no	no
ormResult	no	yes
=	no	no
getPartitionsByExprInternal	no	yes
(	no	no
catName	no	yes
,	no	no
dbName	no	yes
,	no	no
tblName	no	yes
,	no	no
expr	no	yes
,	no	no
defaultPartitionName	no	yes
,	no	no
maxParts	no	yes
,	no	no
ormParts	no	yes
,	no	no
false	no	no
,	no	no
true	no	no
)	no	no
;	no	no
if	no	no
(	no	no
sqlResult	no	yes
!=	no	no
ormResult	no	yes
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
sqlResult	no	yes
+	no	no
+	no	no
ormResult	no	yes
;	no	no

private	no	no
ProcessResults	no	no
runCmd	no	no
(	no	no
String	no	no
[	no	no
]	no	no
cmd	yes	no
,	no	no
long	no	no
secondsToWait	no	no
)	no	no
throws	no	no
IOException	no	no
,	no	no
InterruptedException	no	no
{	no	no

private	no	no
int	no	no
runCmdAndPrintStreams	no	no
(	no	no
String	no	no
[	no	no
]	no	no
cmd	no	yes
,	no	no
long	no	no
secondsToWait	no	yes
)	no	no
throws	no	no
InterruptedException	no	no
,	no	no
IOException	no	no
{	no	no
ProcessResults	no	yes
results	yes	yes
=	no	no
runCmd	no	yes
(	no	no
cmd	no	yes
,	no	no
secondsToWait	no	yes
)	no	no
;	no	no

private	no	no
int	no	no
runCmdAndPrintStreams	no	no
(	no	no
String	no	no
[	no	no
]	no	no
cmd	no	yes
,	no	no
long	no	no
secondsToWait	no	yes
)	no	no
throws	no	no
InterruptedException	no	no
,	no	no
IOException	no	no
{	no	no
ProcessResults	no	yes
results	yes	yes
=	no	no
runCmd	no	yes
(	no	no
cmd	no	yes
,	no	no
secondsToWait	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
results	yes	yes
.	no	no
stdout	no	yes
)	no	no
;	no	no

static	no	no
void	no	no
saveData	no	no
(	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
DescriptiveStatistics	no	no
>	no	no
result	no	no
,	no	no
String	no	no
location	yes	yes
,	no	no
TimeUnit	no	no
scale	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
Path	no	yes
dir	no	yes
=	no	no
Paths	no	yes
.	no	no
get	no	yes
(	no	no
location	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
dir	no	yes
.	no	no
toFile	no	no
(	no	no
)	no	no
.	no	no
exists	no	no
(	no	no
)	no	no
)	no	no
{	no	no

static	no	no
DescriptiveStatistics	no	no
benchmarkListManyPartitions	no	no
(	no	no
@	no	no
NotNull	no	no
MicroBenchmark	no	no
bench	no	no
,	no	no
@	no	no
NotNull	no	no
BenchData	no	no
data	no	yes
,	no	no
int	no	no
howMany	yes	yes
)	no	no
{	no	no
final	no	no
HMSClient	no	yes
client	no	yes
=	no	no
data	no	yes
.	no	no
getClient	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
data	no	yes
.	no	no
dbName	no	yes
;	no	no
String	no	yes
tableName	no	yes
=	no	no
data	no	yes
.	no	no
tableName	no	yes
;	no	no
BenchmarkUtils	no	yes
.	no	no
createPartitionedTable	no	yes
(	no	no
client	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
addManyPartitions	no	yes
(	no	no
client	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
)	no	no
,	no	no
howMany	yes	yes
)	no	no
;	no	no

static	no	no
DescriptiveStatistics	no	no
benchmarkGetPartitions	no	no
(	no	no
@	no	no
NotNull	no	no
MicroBenchmark	no	no
bench	no	no
,	no	no
@	no	no
NotNull	no	no
BenchData	no	no
data	no	yes
,	no	no
int	no	no
howMany	yes	yes
)	no	no
{	no	no
final	no	no
HMSClient	no	yes
client	no	yes
=	no	no
data	no	yes
.	no	no
getClient	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
dbName	no	yes
=	no	no
data	no	yes
.	no	no
dbName	no	yes
;	no	no
String	no	yes
tableName	no	yes
=	no	no
data	no	yes
.	no	no
tableName	no	yes
;	no	no
BenchmarkUtils	no	yes
.	no	no
createPartitionedTable	no	yes
(	no	no
client	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
addManyPartitions	no	yes
(	no	no
client	no	yes
,	no	no
dbName	no	yes
,	no	no
tableName	no	yes
,	no	no
null	no	no
,	no	no
Collections	no	yes
.	no	no
singletonList	no	yes
(	no	no
)	no	no
,	no	no
howMany	yes	yes
)	no	no
;	no	no

private	no	no
BenchmarkSuite	no	no
runAll	no	no
(	no	no
List	no	no
<	no	no
String	no	no
>	no	no
names	no	no
)	no	no
{	no	no
if	no	no
(	no	no
doSanitize	no	no
)	no	no
{	no	no
names	no	no
.	no	no
forEach	no	no
(	no	no
name	yes	no
->	no	no
{	no	no

private	no	no
void	no	no
addResource	no	no
(	no	no
Configuration	no	no
conf	no	no
,	no	no
@	no	no
NotNull	no	no
String	no	no
r	yes	yes
)	no	no
throws	no	no
MalformedURLException	no	no
{	no	no
File	no	yes
f	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
confDir	no	yes
+	no	no
+	no	no
r	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
f	no	yes
.	no	no
exists	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
f	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
TTransport	no	no
open	no	no
(	no	no
Configuration	no	no
conf	no	yes
,	no	no
@	no	no
NotNull	no	no
URI	no	no
uri	yes	no
)	no	no
throws	no	no
TException	no	no
,	no	no
IOException	no	no
,	no	no
LoginException	no	no
{	no	no
boolean	no	no
useSSL	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
USE_SSL	no	yes
)	no	no
;	no	no
boolean	no	no
useSasl	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_SASL	no	yes
)	no	no
;	no	no
boolean	no	no
useFramedTransport	yes	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_FRAMED_TRANSPORT	no	yes
)	no	no
;	no	no
boolean	no	no
useCompactProtocol	no	yes
=	no	no
MetastoreConf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
USE_THRIFT_COMPACT_PROTOCOL	no	yes
)	no	no
;	no	no
int	no	no
clientSocketTimeout	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
MetastoreConf	no	yes
.	no	no
getTimeVar	no	yes
(	no	no
conf	no	yes
,	no	no
MetastoreConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
CLIENT_SOCKET_TIMEOUT	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no

transport	no	yes
=	no	no
new	no	no
TFramedTransport	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
final	no	no
TProtocol	no	yes
protocol	no	yes
;	no	no
if	no	no
(	no	no
useCompactProtocol	yes	no
)	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TCompactProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
protocol	no	yes
=	no	no
new	no	no
TBinaryProtocol	no	yes
(	no	no
transport	no	yes
)	no	no
;	no	no
}	no	no
client	no	yes
=	no	no
new	no	no
ThriftHiveMetastore	no	yes
.	no	no
Client	no	yes
(	no	no
protocol	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
transport	no	yes
.	no	no
isOpen	no	no
(	no	no
)	no	no
)	no	no
{	no	no
transport	no	yes
.	no	no
open	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
useSasl	no	no
&&	no	no
MetastoreConf	no	no
.	no	no
getBoolVar	no	no
(	no	no
conf	no	no
,	no	no
MetastoreConf	no	no
.	no	no
ConfVars	no	no
.	no	no
EXECUTE_SET_UGI	no	no
)	no	no
)	no	no
{	no	no
try	no	no
{	no	no
UserGroupInformation	no	yes
ugi	no	yes
=	no	no
SecurityUtils	no	yes
.	no	no
getUGI	no	yes
(	no	no
)	no	no
;	no	no
client	no	yes
.	no	no
set_ugi	no	yes
(	no	no
ugi	no	yes
.	no	no
getUserName	no	yes
(	no	no
)	no	no
,	no	no
Arrays	no	yes
.	no	no
asList	no	yes
(	no	no
ugi	no	yes
.	no	no
getGroupNames	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
LoginException	no	no
e	no	no
)	no	no
{	no	no

if	no	no
(	no	no
host	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
host	no	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
ENV_SERVER	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
host	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
host	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
PROP_HOST	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
host	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
host	no	yes
=	no	no
DEFAULT_HOST	no	yes
;	no	no
}	no	no
host	no	yes
=	no	no
host	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
(	no	no
portString	no	yes
==	no	no
null	no	no
||	no	no
portString	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
||	no	no
portString	no	yes
.	no	no
equals	no	no
(	no	no
)	no	no
)	no	no
&&	no	no
!	no	no
host	no	yes
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
portString	no	yes
=	no	no
System	no	yes
.	no	no
getenv	no	yes
(	no	no
ENV_PORT	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
portString	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
portString	no	yes
=	no	no
System	no	yes
.	no	no
getProperty	no	yes
(	no	no
PROP_PORT	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
Integer	no	yes
port	no	yes
=	no	no
Constants	no	yes
.	no	no
HMS_DEFAULT_PORT	no	yes
;	no	no
if	no	no
(	no	no
portString	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
port	no	yes
=	no	no
Integer	no	yes
.	no	no
parseInt	no	yes
(	no	no
portString	no	yes
)	no	no
;	no	no
}	no	no
HostAndPort	no	yes
hp	yes	yes
=	no	no
HostAndPort	no	yes
.	no	no
fromString	no	yes
(	no	no
host	no	yes
)	no	no
.	no	no
withDefaultPort	no	yes
(	no	no
port	no	yes
)	no	no
;	no	no

private	no	no
final	no	no
static	no	no
void	no	no
assertInvalidOrder	no	no
(	no	no
DiskRangeList	no	no
ref	no	yes
,	no	no
DiskRangeList	no	no
prev	no	yes
,	no	no
DiskRangeList	no	no
next	no	yes
)	no	no
{	no	no
String	no	yes
error	yes	yes
=	no	no
+	no	no
prev	no	yes
+	no	no
+	no	no
next	no	yes
+	no	no
+	no	no
stringifyDiskRanges	no	yes
(	no	no
ref	no	yes
)	no	no
;	no	no

catch	no	no
(	no	no
URISyntaxException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
StreamingException	no	yes
(	no	no
+	no	no
location	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
throw	no	no
new	no	no
StreamingException	no	yes
(	no	no
+	no	no
location	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
this	no	no
.	no	no
inputColumns	no	yes
=	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
FieldSchema	no	yes
::	no	no
getName	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
inputTypes	no	yes
=	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getCols	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
FieldSchema	no	yes
::	no	no
getType	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
conn	no	no
.	no	no
isPartitionedTable	no	no
(	no	no
)	no	no
&&	no	no
conn	no	no
.	no	no
isDynamicPartitioning	no	no
(	no	no
)	no	no
)	no	no
{	no	no
this	no	no
.	no	no
partitionColumns	no	yes
=	no	no
table	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
FieldSchema	no	yes
::	no	no
getName	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
this	no	no
.	no	no
inputColumns	no	yes
.	no	no
addAll	no	yes
(	no	no
partitionColumns	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
inputTypes	no	yes
.	no	no
addAll	no	yes
(	no	no
table	no	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
FieldSchema	no	yes
::	no	no
getType	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
toList	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
}	no	no
this	no	no
.	no	no
fullyQualifiedTableName	no	yes
=	no	no
Warehouse	no	yes
.	no	no
getQualifiedName	no	yes
(	no	no
table	no	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
table	no	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
outFormatName	yes	yes
=	no	no
this	no	no
.	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getOutputFormat	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
this	no	no
.	no	no
acidOutputFormat	no	yes
=	no	no
(	no	no
AcidOutputFormat	no	yes
<	no	no
?	no	no
,	no	no
?	no	no
>	no	no
)	no	no
ReflectionUtils	no	yes
.	no	no
newInstance	no	yes
(	no	no
JavaUtils	no	yes
.	no	no
loadClass	no	yes
(	no	no
outFormatName	yes	yes
)	no	no
,	no	no
conf	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no

protected	no	no
void	no	no
setupMemoryMonitoring	no	no
(	no	no
)	no	no
{	no	no
this	no	no
.	no	no
autoFlush	yes	yes
=	no	no
conf	no	yes
.	no	no
getBoolVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_STREAMING_AUTO_FLUSH_ENABLED	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
memoryUsageThreshold	yes	yes
=	no	no
conf	no	yes
.	no	no
getFloatVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_HEAP_MEMORY_MONITOR_USAGE_THRESHOLD	no	yes
)	no	no
;	no	no
this	no	no
.	no	no
ingestSizeThreshold	no	yes
=	no	no
conf	no	yes
.	no	no
getSizeVar	no	yes
(	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_STREAMING_AUTO_FLUSH_CHECK_INTERVAL_SIZE	no	yes
)	no	no
;	no	no

heapMemoryMonitor	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
boolean	no	no
haveError	no	yes
=	no	no
false	no	no
;	no	no
String	no	yes
partition	no	yes
=	no	no
null	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
logStats	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
List	no	no
<	no	no
RecordUpdater	no	no
>>	no	no
entry	no	yes
:	no	no
updaters	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
partition	no	yes
=	no	no
entry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
partition	no	yes
)	no	no
;	no	no
}	no	no
for	no	no
(	no	no
RecordUpdater	no	no
updater	yes	yes
:	no	no
entry	no	yes
.	no	no
getValue	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
updater	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
updater	yes	yes
.	no	no
close	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	no
)	no	no
{	no	no
haveError	no	yes
=	no	no
true	no	no
;	no	no

return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
lowMemoryCanary	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
lowMemoryCanary	no	yes
.	no	no
get	no	no
(	no	no
)	no	no
&&	no	no
ingestSizeBytes	no	no
>	no	no
ingestSizeThreshold	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
,	no	no
LlapUtil	no	yes
.	no	no
humanReadableByteCount	no	yes
(	no	no
ingestSizeThreshold	yes	yes
)	no	no
)	no	no
;	no	no
}	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
conn	no	yes
.	no	no
getConnectionStats	no	yes
(	no	no
)	no	no
.	no	no
incrementAutoFlushCount	no	yes
(	no	no
)	no	no
;	no	no
lowMemoryCanary	no	yes
.	no	no
set	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
{	no	no
if	no	no
(	no	no
ingestSizeBytes	no	no
>	no	no
ingestSizeThreshold	yes	yes
)	no	no
{	no	no
MemoryMXBean	no	yes
mxBean	no	yes
=	no	no
ManagementFactory	no	yes
.	no	no
getMemoryMXBean	no	yes
(	no	no
)	no	no
;	no	no
MemoryUsage	no	yes
heapUsage	no	yes
=	no	no
mxBean	no	yes
.	no	no
getHeapMemoryUsage	no	yes
(	no	no
)	no	no
;	no	no
float	no	no
memUsedFraction	yes	yes
=	no	no
(	no	no
(	no	no
float	no	no
)	no	no
heapUsage	no	yes
.	no	no
getUsed	no	yes
(	no	no
)	no	no
/	no	no
(	no	no
float	no	no
)	no	no
heapUsage	no	yes
.	no	no
getMax	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
memUsedFraction	yes	yes
>	no	no
memoryUsageThreshold	no	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	yes
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

if	no	no
(	no	no
partitionValues	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
destLocation	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
table	no	yes
.	no	no
getSd	no	yes
(	no	no
)	no	no
.	no	no
getLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
PartitionInfo	no	yes
partitionInfo	no	yes
=	no	no
conn	no	yes
.	no	no
createPartitionIfNotExists	no	yes
(	no	no
partitionValues	no	yes
)	no	no
;	no	no
updatedPartitions	no	yes
.	no	no
add	no	yes
(	no	no
partitionInfo	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
destLocation	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
partitionInfo	no	yes
.	no	no
getPartitionLocation	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
partitionPaths	no	yes
.	no	no
put	no	yes
(	no	no
key	no	yes
,	no	no
destLocation	no	yes
)	no	no
;	no	no
}	no	no
updaters	no	yes
.	no	no
computeIfAbsent	no	yes
(	no	no
key	no	yes
,	no	no
k	no	yes
->	no	no
initializeBuckets	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
recordUpdater	no	yes
=	no	no
updaters	no	yes
.	no	no
get	no	yes
(	no	no
key	no	yes
)	no	no
.	no	no
get	no	yes
(	no	no
bucketId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
StreamingException	no	no
e	yes	yes
)	no	no
{	no	no
throw	no	no
new	no	no
StreamingIOFailure	no	yes
(	no	no
+	no	no
partitionValues	no	yes
+	no	no
+	no	no
conn	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
recordUpdater	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
try	no	no
{	no	no
recordUpdater	no	yes
=	no	no
createRecordUpdater	no	yes
(	no	no
partitionValues	no	yes
,	no	no
destLocation	no	yes
,	no	no
bucketId	no	yes
,	no	no
curBatchMinWriteId	no	yes
,	no	no
curBatchMaxWriteId	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	yes	yes
)	no	no
{	no	no

@	no	no
Override	no	no
public	no	no
PartitionInfo	no	yes
createPartitionIfNotExists	no	no
(	no	no
final	no	no
List	no	no
<	no	no
String	no	yes
>	no	no
partitionValues	no	yes
)	no	no
throws	no	no
StreamingException	no	no
{	no	no
String	no	yes
partLocation	no	yes
=	no	no
null	no	no
;	no	no
String	no	yes
partName	yes	yes
=	no	no
null	no	no
;	no	no
boolean	no	no
exists	no	yes
=	no	no
false	no	no
;	no	no
try	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
partSpec	no	yes
=	no	no
Warehouse	no	yes
.	no	no
makeSpecFromValues	no	yes
(	no	no
tableObject	yes	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
partitionValues	no	yes
)	no	no
;	no	no
Path	no	yes
location	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
tableObject	yes	yes
.	no	no
getDataLocation	no	yes
(	no	no
)	no	no
,	no	no
Warehouse	no	yes
.	no	no
makePartPath	no	yes
(	no	no
partSpec	no	yes
)	no	no
)	no	no
;	no	no
location	no	yes
=	no	no
new	no	no
Path	no	yes
(	no	no
Utilities	no	yes
.	no	no
getQualifiedPath	no	yes
(	no	no
conf	no	yes
,	no	no
location	no	yes
)	no	no
)	no	no
;	no	no
partLocation	no	yes
=	no	no
location	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
;	no	no
partName	yes	yes
=	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
tableObject	yes	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
partitionValues	no	yes
)	no	no
;	no	no
Partition	no	yes
partition	no	yes
=	no	no
org	no	yes
.	no	no
apache	no	yes
.	no	no
hadoop	no	yes
.	no	no
hive	no	yes
.	no	no
ql	no	yes
.	no	no
metadata	no	yes
.	no	no
Partition	no	yes
.	no	no
createMetaPartitionObject	no	yes
(	no	no
tableObject	yes	yes
,	no	no
partSpec	no	yes
,	no	no
location	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
getMSC	no	yes
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
return	no	no
new	no	no
PartitionInfo	no	yes
(	no	no
partName	yes	yes
,	no	no
partLocation	no	yes
,	no	no
false	no	no
)	no	no
;	no	no
}	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
add_partition	no	yes
(	no	no
partition	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
void	no	no
validateTable	no	no
(	no	no
)	no	no
throws	no	no
InvalidTable	no	yes
,	no	no
ConnectionError	no	no
{	no	no
try	no	no
{	no	no
tableObject	no	yes
=	no	no
new	no	no
Table	no	yes
(	no	no
getMSC	no	yes
(	no	no
)	no	no
.	no	no
getTable	no	yes
(	no	no
database	no	yes
,	no	no
table	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
toConnectionInfoString	no	yes
(	no	no
)	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidTable	no	yes
(	no	no
database	no	yes
,	no	no
table	no	yes
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
AcidUtils	no	no
.	no	no
isFullAcidTable	no	no
(	no	no
tableObject	no	yes
)	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
+	no	no
this	no	no
+	no	no
)	no	no
;	no	no
throw	no	no
new	no	no
InvalidTable	no	yes
(	no	no
database	no	yes
,	no	no
table	no	yes
,	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
tableObject	no	yes
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
tableObject	no	yes
.	no	no
getPartitionKeys	no	no
(	no	no
)	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
setPartitionedTable	no	yes
(	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
setPartitionedTable	no	yes
(	no	no
false	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
isPartitionedTable	no	no
(	no	no
)	no	no
&&	no	no
(	no	no
staticPartitionValues	no	no
!=	no	no
null	no	no
&&	no	no
!	no	no
staticPartitionValues	no	no
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
errMsg	yes	yes
=	no	no
this	no	no
.	no	no
toString	no	yes
(	no	no
)	no	no
+	no	no
;	no	no

private	no	no
void	no	no
beginNextTransaction	no	no
(	no	no
)	no	no
throws	no	no
StreamingException	no	no
{	no	no
if	no	no
(	no	no
currentTransactionBatch	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
currentTransactionBatch	yes	yes
=	no	no
createNewTransactionBatch	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
setHiveConf	no	no
(	no	no
HiveConf	no	no
conf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
var	yes	no
,	no	no
String	no	no
value	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
setHiveConf	no	no
(	no	no
HiveConf	no	no
conf	no	no
,	no	no
HiveConf	no	no
.	no	no
ConfVars	no	no
var	yes	no
,	no	no
boolean	no	no
value	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
static	no	no
void	no	no
setHiveConf	no	no
(	no	no
HiveConf	no	no
conf	no	no
,	no	no
String	no	no
var	yes	no
)	no	no
{	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
+	no	no
bucketCount	no	yes
+	no	no
+	no	no
tableLoc	no	yes
+	no	no
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
+	no	no
tableLoc3	no	yes
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
+	no	no
bucketCount	no	yes
+	no	no
+	no	no
tableLoc2	no	yes
+	no	no
)	no	no
;	no	no
String	no	yes
[	no	no
]	no	no
records	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
}	no	no
;	no	no
StrictDelimitedInputWriter	no	yes
wr	no	yes
=	no	no
StrictDelimitedInputWriter	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
withFieldDelimiter	no	yes
(	no	no
','	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
HiveStreamingConnection	no	yes
connection	no	yes
=	no	no
HiveStreamingConnection	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
withDatabase	no	yes
(	no	no
)	no	no
.	no	no
withTable	no	yes
(	no	no
)	no	no
.	no	no
withAgentInfo	no	yes
(	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
withRecordWriter	no	yes
(	no	no
wr	no	yes
)	no	no
.	no	no
withHiveConf	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
beginTransaction	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
record	no	yes
:	no	no
records	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
write	no	yes
(	no	no
record	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res1	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
re	yes	no
:	no	no
res1	no	yes
)	no	no
{	no	no

String	no	yes
[	no	no
]	no	no
records	no	yes
=	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
,	no	no
}	no	no
;	no	no
StrictDelimitedInputWriter	no	yes
wr	no	yes
=	no	no
StrictDelimitedInputWriter	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
withFieldDelimiter	no	yes
(	no	no
','	no	no
)	no	no
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
HiveStreamingConnection	no	yes
connection	no	yes
=	no	no
HiveStreamingConnection	no	yes
.	no	no
newBuilder	no	yes
(	no	no
)	no	no
.	no	no
withDatabase	no	yes
(	no	no
)	no	no
.	no	no
withTable	no	yes
(	no	no
)	no	no
.	no	no
withAgentInfo	no	yes
(	no	no
+	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
withRecordWriter	no	yes
(	no	no
wr	no	yes
)	no	no
.	no	no
withHiveConf	no	yes
(	no	no
conf	no	yes
)	no	no
.	no	no
connect	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
beginTransaction	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
record	no	yes
:	no	no
records	no	yes
)	no	no
{	no	no
connection	no	yes
.	no	no
write	no	yes
(	no	no
record	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res1	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
re	no	yes
:	no	no
res1	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
error	no	yes
(	no	no
re	no	yes
)	no	no
;	no	no
}	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res2	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
s	yes	no
:	no	no
res2	no	yes
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
runDDL	no	no
(	no	no
IDriver	no	no
driver	no	no
,	no	no
String	no	no
sql	yes	no
)	no	no
{	no	no

connection	no	yes
.	no	no
write	no	yes
(	no	no
record	no	yes
.	no	no
getBytes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
connection	no	yes
.	no	no
commitTransaction	no	yes
(	no	no
)	no	no
;	no	no
connection	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res1	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
re	no	yes
:	no	no
res1	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
out	no	yes
.	no	no
println	no	yes
(	no	no
re	no	yes
)	no	no
;	no	no
assertTrue	no	yes
(	no	no
re	no	yes
.	no	no
endsWith	no	yes
(	no	no
)	no	no
||	no	no
re	no	yes
.	no	no
endsWith	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
driver	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
records	no	yes
.	no	no
length	no	yes
,	no	no
res	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
runDDL	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
res	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
assertEquals	no	yes
(	no	no
records	no	yes
.	no	no
length	no	yes
,	no	no
res	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ArrayList	no	yes
<	no	no
String	no	yes
>	no	no
res2	no	yes
=	no	no
queryTable	no	yes
(	no	no
driver	no	yes
,	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
s	yes	no
:	no	no
res2	no	yes
)	no	no
{	no	no

private	no	no
static	no	no
boolean	no	no
runDDL	no	no
(	no	no
IDriver	no	no
driver	no	no
,	no	no
String	no	no
sql	yes	no
)	no	no
{	no	no

@	no	no
RequestMapping	no	no
(	no	no
value	no	no
=	no	no
,	no	no
method	no	no
=	no	no
RequestMethod	no	no
.	no	no
POST	no	no
)	no	no
public	no	no
@	no	no
ResponseBody	no	no
TestStartResponse	no	no
testStart	no	no
(	no	no
@	no	no
RequestBody	no	no
TestStartRequest	no	no
startRequest	yes	no
,	no	no
BindingResult	no	no
result	no	no
)	no	no
{	no	no

@	no	no
RequestMapping	no	no
(	no	no
value	no	no
=	no	no
,	no	no
method	no	no
=	no	no
RequestMethod	no	no
.	no	no
POST	no	no
)	no	no
public	no	no
@	no	no
ResponseBody	no	no
TestStartResponse	no	yes
testStart	no	no
(	no	no
@	no	no
RequestBody	no	no
TestStartRequest	no	no
startRequest	no	yes
,	no	no
BindingResult	no	no
result	no	yes
)	no	no
{	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
startRequest	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TestStartResponse	no	yes
startResponse	yes	yes
=	no	no
doStartTest	no	yes
(	no	no
startRequest	no	yes
,	no	no
result	no	yes
)	no	no
;	no	no

File	no	yes
outputFile	no	yes
=	no	no
testExecution	yes	yes
.	no	no
getOutputFile	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
outputFile	no	yes
==	no	no
null	no	no
||	no	no
logsRequest	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
>	no	no
outputFile	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
return	no	no
new	no	no
TestLogResponse	no	yes
(	no	no
Status	no	yes
.	no	no
illegalArgument	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
RandomAccessFile	no	yes
fileHandle	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
fileHandle	no	yes
=	no	no
new	no	no
RandomAccessFile	no	yes
(	no	no
outputFile	no	yes
,	no	no
)	no	no
;	no	no
long	no	no
offset	no	yes
=	no	no
logsRequest	no	yes
.	no	no
getOffset	no	yes
(	no	no
)	no	no
;	no	no
fileHandle	no	yes
.	no	no
seek	no	yes
(	no	no
offset	no	yes
)	no	no
;	no	no
int	no	no
readLength	no	yes
=	no	no
0	no	no
;	no	no
if	no	no
(	no	no
offset	no	yes
<	no	no
fileHandle	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
{	no	no
readLength	no	yes
=	no	no
(	no	no
int	no	no
)	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
fileHandle	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
-	no	no
offset	no	yes
,	no	no
logsRequest	no	yes
.	no	no
getLength	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
byte	no	no
[	no	no
]	no	no
buffer	no	yes
=	no	no
new	no	no
byte	no	no
[	no	no
readLength	no	yes
]	no	no
;	no	no
fileHandle	no	yes
.	no	no
readFully	no	yes
(	no	no
buffer	no	yes
)	no	no
;	no	no
offset	no	yes
+=	no	no
readLength	no	yes
;	no	no
return	no	no
new	no	no
TestLogResponse	no	yes
(	no	no
Status	no	yes
.	no	no
ok	no	yes
(	no	no
)	no	no
,	no	no
offset	no	yes
,	no	no
new	no	no
String	no	yes
(	no	no
buffer	no	yes
,	no	no
Charsets	no	yes
.	no	no
UTF_8	no	yes
)	no	no
)	no	no
;	no	no

test	no	yes
=	no	no
mTestQueue	no	yes
.	no	no
poll	no	yes
(	no	no
30	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
execute	no	no
)	no	no
{	no	no
terminateExecutionContext	no	yes
(	no	no
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
if	no	no
(	no	no
test	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
terminateExecutionContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
test	no	yes
.	no	no
setStatus	no	yes
(	no	no
Status	no	yes
.	no	no
inProgress	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
test	no	yes
.	no	no
setDequeueTime	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
mExecutionContext	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
mExecutionContext	no	yes
=	no	no
createExceutionContext	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
test	no	yes
.	no	no
setExecutionStartTime	no	yes
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
TestStartRequest	no	yes
startRequest	no	yes
=	no	no
test	no	yes
.	no	no
getStartRequest	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
profile	no	yes
=	no	no
startRequest	no	yes
.	no	no
getProfile	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
profileConfFile	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mExecutionContextConfiguration	no	yes
.	no	no
getProfileDirectory	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
profile	no	yes
)	no	no
)	no	no
;	no	no

Context	no	yes
ctx	no	yes
=	no	no
builder	no	yes
.	no	no
build	no	yes
(	no	no
)	no	no
;	no	no
TestConfiguration	no	yes
testConfiguration	no	yes
=	no	no
TestConfiguration	no	yes
.	no	no
withContext	no	yes
(	no	no
ctx	no	yes
,	no	no
logger	no	yes
)	no	no
;	no	no
testConfiguration	no	yes
.	no	no
setPatch	no	yes
(	no	no
startRequest	no	yes
.	no	no
getPatchURL	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
testConfiguration	no	yes
.	no	no
setJiraName	no	yes
(	no	no
startRequest	no	yes
.	no	no
getJiraName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
testConfiguration	no	yes
.	no	no
setClearLibraryCache	no	yes
(	no	no
startRequest	no	yes
.	no	no
isClearLibraryCache	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
LocalCommandFactory	no	yes
localCommandFactory	no	yes
=	no	no
new	no	no
LocalCommandFactory	no	yes
(	no	no
logger	no	yes
)	no	no
;	no	no
PTest	no	yes
ptest	no	yes
=	no	no
mPTestBuilder	no	yes
.	no	no
build	no	yes
(	no	no
testConfiguration	no	yes
,	no	no
mExecutionContext	no	yes
,	no	no
test	no	yes
.	no	no
getStartRequest	no	yes
(	no	no
)	no	no
.	no	no
getTestHandle	no	yes
(	no	no
)	no	no
,	no	no
logDir	no	yes
,	no	no
localCommandFactory	no	yes
,	no	no
new	no	no
SSHCommandExecutor	no	yes
(	no	no
logger	no	yes
)	no	no
,	no	no
new	no	no
RSyncCommandExecutor	no	yes
(	no	no
logger	no	yes
,	no	no
mExecutionContextConfiguration	no	yes
.	no	no
getMaxRsyncThreads	no	yes
(	no	no
)	no	no
,	no	no
localCommandFactory	no	yes
)	no	no
,	no	no
logger	no	yes
)	no	no
;	no	no
int	no	no
result	no	yes
=	no	no
ptest	no	yes
.	no	no
run	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
==	no	no
Constants	no	no
.	no	no
EXIT_CODE_SUCCESS	no	no
)	no	no
{	no	no
test	no	yes
.	no	no
setStatus	no	yes
(	no	no
Status	no	yes
.	no	no
ok	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
test	no	yes
.	no	no
setStatus	no	yes
(	no	no
Status	no	yes
.	no	no
failed	no	yes
(	no	no
+	no	no
result	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
logStream	no	yes
.	no	no
flush	no	yes
(	no	no
)	no	no
;	no	no
mExecutionContext	no	yes
.	no	no
replaceBadHosts	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
replaceBadHosts	no	no
(	no	no
int	no	no
expectedNumHosts	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Set	no	yes
<	no	no
Host	no	yes
>	no	no
goodHosts	no	yes
=	no	no
Sets	no	yes
.	no	no
newHashSet	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
HostExecutor	no	no
hostExecutor	yes	no
:	no	no
ImmutableList	no	no
.	no	no
copyOf	no	no
(	no	no
hostExecutors	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
hostExecutor	yes	no
.	no	no
isBad	no	no
(	no	no
)	no	no
)	no	no
{	no	no

else	no	no
{	no	no
goodHosts	no	yes
.	no	no
add	no	yes
(	no	no
hostExecutor	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
while	no	no
(	no	no
hostExecutors	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
<	no	no
expectedNumHosts	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
>	no	no
FOUR_HOURS	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
+	no	no
hostExecutors	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
expectedNumHosts	no	yes
)	no	no
;	no	no
}	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
hostExecutors	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
expectedNumHosts	no	yes
+	no	no
)	no	no
;	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
.	no	no
sleep	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
executionContext	no	yes
.	no	no
replaceBadHosts	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Host	no	no
host	yes	yes
:	no	no
executionContext	no	yes
.	no	no
getHosts	no	no
(	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
goodHosts	no	yes
.	no	no
contains	no	no
(	no	no
host	yes	yes
)	no	no
)	no	no
{	no	no
HostExecutor	no	yes
hostExecutor	no	yes
=	no	no
hostExecutorBuilder	no	yes
.	no	no
build	no	yes
(	no	no
host	yes	yes
)	no	no
;	no	no
initalizeHost	no	yes
(	no	no
hostExecutor	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
hostExecutor	no	yes
.	no	no
isBad	no	no
(	no	no
)	no	no
)	no	no
{	no	no
executionContext	no	yes
.	no	no
addBadHost	no	yes
(	no	no
hostExecutor	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

batch	no	yes
=	no	no
parallelWorkQueue	no	yes
.	no	no
poll	no	yes
(	no	no
mNumPollSeconds	no	yes
,	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
mShutdown	no	yes
)	no	no
{	no	no
mLogger	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
mHost	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
batch	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
numParallelBatchesProcessed	no	yes
++	no	no
;	no	no
sw	no	yes
.	no	no
reset	no	yes
(	no	no
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
if	no	no
(	no	no
!	no	no
executeTestBatch	no	no
(	no	no
drone	no	no
,	no	no
batch	no	yes
,	no	no
failedTestResults	no	yes
)	no	no
)	no	no
{	no	no
failedTestResults	no	yes
.	no	no
add	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
sw	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
batch	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
getHost	no	yes
(	no	no
)	no	no
.	no	no
toShortString	no	yes
(	no	no
)	no	no
,	no	no
sw	no	yes
.	no	no
elapsed	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
while	no	no
(	no	no
!	no	no
mShutdown	no	yes
&&	no	no
!	no	no
parallelWorkQueue	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AbortDroneException	no	no
ex	yes	no
)	no	no
{	no	no

if	no	no
(	no	no
!	no	no
executeTestBatch	no	no
(	no	no
drone	no	yes
,	no	no
batch	no	yes
,	no	no
failedTestResults	no	yes
)	no	no
)	no	no
{	no	no
failedTestResults	no	yes
.	no	no
add	no	yes
(	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
sw	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
new	no	no
Object	no	yes
[	no	no
]	no	no
{	no	no
batch	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
getHost	no	yes
(	no	no
)	no	no
.	no	no
toShortString	no	yes
(	no	no
)	no	no
,	no	no
sw	no	yes
.	no	no
elapsed	no	yes
(	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
}	no	no
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
while	no	no
(	no	no
!	no	no
mShutdown	no	yes
&&	no	no
!	no	no
parallelWorkQueue	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
AbortDroneException	no	no
ex	no	yes
)	no	no
{	no	no
mDrones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	no	yes
)	no	no
;	no	no
mLogger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
ex	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
batch	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
parallelWorkQueue	no	yes
.	no	no
add	no	yes
(	no	no
batch	no	yes
)	no	no
,	no	no
+	no	no
batch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
mShutdown	no	yes
)	no	no
{	no	no
mLogger	no	yes
.	no	no
warn	no	yes
(	no	no
+	no	no
mHost	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

String	no	yes
scriptName	no	yes
=	no	no
+	no	no
batch	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
+	no	no
;	no	no
File	no	yes
script	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mLocalScratchDirectory	no	yes
,	no	no
scriptName	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVariables	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
mTemplateDefaults	no	yes
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	yes	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
batch	yes	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
batch	yes	yes
.	no	no
getTestArguments	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	yes	yes
.	no	no
getLocalDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	yes	yes
.	no	no
getLocalLogDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkArgument	no	yes
(	no	no
StringUtils	no	yes
.	no	no
isNotBlank	no	yes
(	no	no
batch	yes	yes
.	no	no
getTestModuleRelativeDir	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
batch	yes	yes
.	no	no
getTestModuleRelativeDir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
command	yes	yes
=	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
+	no	no
script	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
,	no	no
templateVariables	no	yes
)	no	no
;	no	no
Templates	no	yes
.	no	no
writeTemplateResult	no	yes
(	no	no
,	no	no
script	no	yes
,	no	no
templateVariables	no	yes
)	no	no
;	no	no
copyToDroneFromLocal	no	yes
(	no	no
drone	yes	yes
,	no	no
script	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
,	no	no
+	no	no
scriptName	no	yes
)	no	no
;	no	no
script	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
;	no	no
Stopwatch	no	yes
sw	no	yes
=	no	no
Stopwatch	no	yes
.	no	no
createStarted	no	yes
(	no	no
)	no	no
;	no	no

@	no	no
Override	no	no
public	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
RemoteCommandResult	no	yes
>>	no	no
call	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
List	no	yes
<	no	no
Drone	no	yes
>	no	no
drones	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
mDrones	no	yes
)	no	no
;	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
RemoteCommandResult	no	yes
>>	no	no
results	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
resolvedLocalLocation	yes	yes
=	no	no
Files	no	yes
.	no	no
simplifyPath	no	yes
(	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
localFile	no	yes
,	no	no
mTemplateDefaults	no	yes
)	no	no
)	no	no
;	no	no
String	no	yes
remoteStagingLocation	yes	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Drone	no	yes
drone	no	yes
:	no	no
ImmutableList	no	no
.	no	no
copyOf	no	no
(	no	no
mDrones	no	yes
)	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
remoteStagingLocation	yes	yes
==	no	no
null	no	no
,	no	no
)	no	no
;	no	no
final	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVariables	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
mTemplateDefaults	no	yes
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getLocalDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
resolvedRemoteLocation	no	yes
=	no	no
Files	no	yes
.	no	no
simplifyPath	no	yes
(	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
remoteFile	no	yes
,	no	no
templateVariables	no	yes
)	no	no
)	no	no
;	no	no
RSyncResult	no	yes
result	no	yes
=	no	no
new	no	no
RSyncCommand	no	yes
(	no	no
mRSyncCommandExecutor	no	yes
,	no	no
drone	no	yes
.	no	no
getPrivateKey	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
,	no	no
resolvedLocalLocation	yes	yes
,	no	no
resolvedRemoteLocation	no	yes
,	no	no
RSyncCommand	no	yes
.	no	no
Type	no	yes
.	no	no
FROM_LOCAL	no	yes
)	no	no
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
.	no	no
getExitCode	no	no
(	no	no
)	no	no
==	no	no
Constants	no	no
.	no	no
EXIT_CODE_SUCCESS	no	no
)	no	no
{	no	no
remoteStagingLocation	yes	yes
=	no	no
resolvedRemoteLocation	no	yes
;	no	no
drones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	no	yes
)	no	no
;	no	no

String	no	yes
remoteStagingLocation	no	yes
=	no	no
null	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Drone	no	no
drone	yes	yes
:	no	no
ImmutableList	no	no
.	no	no
copyOf	no	no
(	no	no
mDrones	no	yes
)	no	no
)	no	no
{	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
remoteStagingLocation	no	yes
==	no	no
null	no	no
,	no	no
)	no	no
;	no	no
final	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVariables	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
mTemplateDefaults	no	yes
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	yes	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	yes	yes
.	no	no
getLocalDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
resolvedRemoteLocation	no	yes
=	no	no
Files	no	yes
.	no	no
simplifyPath	no	yes
(	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
remoteFile	no	yes
,	no	no
templateVariables	no	yes
)	no	no
)	no	no
;	no	no
RSyncResult	no	yes
result	yes	yes
=	no	no
new	no	no
RSyncCommand	no	yes
(	no	no
mRSyncCommandExecutor	no	yes
,	no	no
drone	yes	yes
.	no	no
getPrivateKey	no	yes
(	no	no
)	no	no
,	no	no
drone	yes	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
drone	yes	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
drone	yes	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
,	no	no
resolvedLocalLocation	no	yes
,	no	no
resolvedRemoteLocation	no	yes
,	no	no
RSyncCommand	no	yes
.	no	no
Type	no	yes
.	no	no
FROM_LOCAL	no	yes
)	no	no
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	yes	yes
.	no	no
getExitCode	no	no
(	no	no
)	no	no
==	no	no
Constants	no	no
.	no	no
EXIT_CODE_SUCCESS	no	no
)	no	no
{	no	no
remoteStagingLocation	no	yes
=	no	no
resolvedRemoteLocation	no	yes
;	no	no
drones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	yes	yes
)	no	no
;	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
resolvedLocalLocation	no	yes
+	no	no
+	no	no
remoteStagingLocation	no	yes
)	no	no
;	no	no
break	no	no
;	no	no
}	no	no
else	no	no
{	no	no
mDrones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	yes	yes
)	no	no
;	no	no

private	no	no
ListenableFuture	no	no
<	no	no
SSHResult	no	yes
>	no	no
exec	no	no
(	no	no
final	no	no
String	no	yes
cmd	no	yes
,	no	no
final	no	no
boolean	no	no
reportErrors	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
return	no	no
mExecutor	no	no
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
SSHResult	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
SSHResult	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
for	no	no
(	no	no
final	no	no
Drone	no	no
drone	no	yes
:	no	no
ImmutableList	no	no
.	no	no
copyOf	no	no
(	no	no
mDrones	no	yes
)	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVariables	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
mTemplateDefaults	no	yes
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getLocalDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
command	yes	yes
=	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
cmd	no	yes
,	no	no
templateVariables	no	yes
)	no	no
;	no	no
SSHResult	no	yes
result	no	yes
=	no	no
new	no	no
SSHCommand	no	yes
(	no	no
mSSHCommandExecutor	no	yes
,	no	no
drone	no	yes
.	no	no
getPrivateKey	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
,	no	no
command	yes	yes
,	no	no
reportErrors	no	yes
)	no	no
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
reportErrors	no	yes
&&	no	no
result	no	yes
.	no	no
getExitCode	no	no
(	no	no
)	no	no
==	no	no
Constants	no	no
.	no	no
EXIT_CODE_UNKNOWN	no	no
)	no	no
{	no	no
mDrones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	no	yes
)	no	no
;	no	no

private	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
RemoteCommandResult	no	yes
>>	no	no
execInstances	no	no
(	no	no
List	no	yes
<	no	no
Drone	no	no
>	no	no
drones	no	no
,	no	no
final	no	no
String	no	yes
cmd	no	yes
)	no	no
throws	no	no
InterruptedException	no	no
,	no	no
IOException	no	no
{	no	no
List	no	yes
<	no	no
ListenableFuture	no	yes
<	no	no
RemoteCommandResult	no	yes
>>	no	no
result	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
final	no	no
Drone	no	no
drone	no	yes
:	no	no
ImmutableList	no	no
.	no	no
copyOf	no	no
(	no	no
drones	no	no
)	no	no
)	no	no
{	no	no
result	no	yes
.	no	no
add	no	no
(	no	no
mExecutor	no	no
.	no	no
submit	no	no
(	no	no
new	no	no
Callable	no	no
<	no	no
RemoteCommandResult	no	yes
>	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
RemoteCommandResult	no	yes
call	no	yes
(	no	no
)	no	no
throws	no	no
Exception	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVariables	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
mTemplateDefaults	no	yes
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getInstanceName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVariables	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
drone	no	yes
.	no	no
getLocalDirectory	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
String	no	yes
command	yes	yes
=	no	no
Templates	no	yes
.	no	no
getTemplateResult	no	yes
(	no	no
cmd	no	yes
,	no	no
templateVariables	no	yes
)	no	no
;	no	no
SSHResult	no	yes
result	no	yes
=	no	no
new	no	no
SSHCommand	no	yes
(	no	no
mSSHCommandExecutor	no	yes
,	no	no
drone	no	yes
.	no	no
getPrivateKey	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getUser	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
drone	no	yes
.	no	no
getInstance	no	yes
(	no	no
)	no	no
,	no	no
command	yes	yes
,	no	no
true	no	no
)	no	no
.	no	no
call	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
result	no	yes
.	no	no
getExitCode	no	no
(	no	no
)	no	no
!=	no	no
Constants	no	no
.	no	no
EXIT_CODE_SUCCESS	no	no
)	no	no
{	no	no
mDrones	no	yes
.	no	no
remove	no	yes
(	no	no
drone	no	yes
)	no	no
;	no	no

httpClient	no	yes
.	no	no
getCredentialsProvider	no	yes
(	no	no
)	no	no
.	no	no
setCredentials	no	yes
(	no	no
new	no	no
AuthScope	no	yes
(	no	no
apiURL	no	yes
.	no	no
getHost	no	yes
(	no	no
)	no	no
,	no	no
apiURL	no	yes
.	no	no
getPort	no	yes
(	no	no
)	no	no
,	no	no
AuthScope	no	yes
.	no	no
ANY_REALM	no	yes
)	no	no
,	no	no
new	no	no
UsernamePasswordCredentials	no	yes
(	no	no
mUser	no	yes
,	no	no
mPassword	no	yes
)	no	no
)	no	no
;	no	no
BasicHttpContext	no	yes
localcontext	no	yes
=	no	no
new	no	no
BasicHttpContext	no	yes
(	no	no
)	no	no
;	no	no
localcontext	no	yes
.	no	no
setAttribute	no	yes
(	no	no
,	no	no
new	no	no
BasicScheme	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
httpClient	no	yes
.	no	no
addRequestInterceptor	no	yes
(	no	no
new	no	no
PreemptiveAuth	no	yes
(	no	no
)	no	no
,	no	no
0	no	no
)	no	no
;	no	no
HttpPost	no	yes
request	no	yes
=	no	no
new	no	no
HttpPost	no	yes
(	no	no
url	no	yes
)	no	no
;	no	no
ObjectMapper	no	yes
mapper	no	yes
=	no	no
new	no	no
ObjectMapper	no	yes
(	no	no
)	no	no
;	no	no
StringEntity	no	yes
params	no	yes
=	no	no
new	no	no
StringEntity	no	yes
(	no	no
mapper	no	yes
.	no	no
writeValueAsString	no	yes
(	no	no
new	no	no
Body	no	yes
(	no	no
comments	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
addHeader	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
request	no	yes
.	no	no
setEntity	no	yes
(	no	no
params	no	yes
)	no	no
;	no	no
HttpResponse	no	yes
httpResponse	no	yes
=	no	no
httpClient	no	yes
.	no	no
execute	no	yes
(	no	no
request	no	yes
,	no	no
localcontext	no	yes
)	no	no
;	no	no
StatusLine	no	yes
statusLine	no	yes
=	no	no
httpResponse	no	yes
.	no	no
getStatusLine	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
statusLine	no	yes
.	no	no
getStatusCode	no	yes
(	no	no
)	no	no
!=	no	no
201	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
RuntimeException	no	yes
(	no	no
statusLine	no	yes
.	no	no
getStatusCode	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
statusLine	no	yes
.	no	no
getReasonPhrase	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
httpResponse	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

}	no	no
else	no	no
{	no	no
name	no	yes
=	no	no
name	no	yes
+	no	no
+	no	no
attributes	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
else	no	no
if	no	no
(	no	no
name	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
qName	no	no
)	no	no
||	no	no
.	no	no
equals	no	no
(	no	no
qName	no	no
)	no	no
)	no	no
{	no	no
failedOrErrored	no	yes
=	no	no
true	no	no
;	no	no
}	no	no
else	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
qName	no	no
)	no	no
)	no	no
{	no	no
name	no	yes
=	no	no
null	no	no
;	no	no
}	no	no
}	no	no
}	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
endElement	no	no
(	no	no
String	no	no
uri	no	no
,	no	no
String	no	no
localName	no	no
,	no	no
String	no	no
qName	no	no
)	no	no
{	no	no
if	no	no
(	no	no
.	no	no
equals	no	no
(	no	no
qName	no	no
)	no	no
)	no	no
{	no	no
if	no	no
(	no	no
name	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
executedTests	no	yes
.	no	no
add	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
failedOrErrored	no	yes
)	no	no
{	no	no
failedTests	no	yes
.	no	no
add	no	yes
(	no	no
name	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
}	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
awaitProcessCompletion	no	no
(	no	no
)	no	no
throws	no	no
InterruptedException	no	no
{	no	no
synchronized	no	no
(	no	no
process	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
exitCode	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
exitCode	no	yes
=	no	no
process	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
stopwatch	no	yes
.	no	no
isRunning	no	no
(	no	no
)	no	no
)	no	no
{	no	no
stopwatch	no	yes
.	no	no
stop	no	yes
(	no	no
)	no	no
;	no	no
this	no	no
.	no	no
elapsedTimeInMs	no	yes
=	no	no
stopwatch	no	yes
.	no	no
elapsed	no	yes
(	no	no
TimeUnit	yes	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
logDirs	no	no
!=	no	no
null	no	no
&&	no	no
logDirs	no	no
.	no	no
length	no	no
>	no	no
0	no	no
)	no	no
{	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ProfileLogs	no	yes
>	no	no
profiles	no	yes
=	no	no
Maps	no	yes
.	no	no
newHashMap	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
File	no	yes
logDir	no	yes
:	no	no
logDirs	no	no
)	no	no
{	no	no
String	no	yes
name	no	yes
=	no	no
logDir	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
name	no	yes
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
profile	no	yes
=	no	no
name	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
name	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ProfileLogs	no	yes
logs	yes	yes
=	no	no
profiles	no	yes
.	no	no
get	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
logs	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
logs	yes	yes
=	no	no
new	no	no
ProfileLogs	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
profiles	no	yes
.	no	no
put	no	yes
(	no	no
profile	no	yes
,	no	no
logs	yes	yes
)	no	no
;	no	no
}	no	no
logs	yes	yes
.	no	no
dirs	no	yes
.	no	no
add	no	yes
(	no	no
logDir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
profile	no	yes
:	no	no
profiles	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ProfileLogs	no	yes
logs	yes	yes
=	no	no
profiles	no	yes
.	no	no
get	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
logs	yes	yes
.	no	no
dirs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
mMaxDirectoriesPerProfile	no	no
)	no	no
{	no	no
File	no	yes
oldest	yes	yes
=	no	no
logs	yes	yes
.	no	no
getOldest	no	yes
(	no	no
)	no	no
;	no	no

String	no	yes
name	no	yes
=	no	no
logDir	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
name	no	yes
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
profile	no	yes
=	no	no
name	no	yes
.	no	no
substring	no	yes
(	no	no
0	no	no
,	no	no
name	no	yes
.	no	no
lastIndexOf	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
ProfileLogs	no	yes
logs	no	yes
=	no	no
profiles	no	yes
.	no	no
get	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
logs	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
logs	no	yes
=	no	no
new	no	no
ProfileLogs	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
profiles	no	yes
.	no	no
put	no	yes
(	no	no
profile	no	yes
,	no	no
logs	no	yes
)	no	no
;	no	no
}	no	no
logs	no	yes
.	no	no
dirs	no	yes
.	no	no
add	no	yes
(	no	no
logDir	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
for	no	no
(	no	no
String	no	yes
profile	no	yes
:	no	no
profiles	no	yes
.	no	no
keySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
ProfileLogs	no	yes
logs	no	yes
=	no	no
profiles	no	yes
.	no	no
get	no	yes
(	no	no
profile	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
logs	no	yes
.	no	no
dirs	no	yes
.	no	no
size	no	no
(	no	no
)	no	no
>	no	no
mMaxDirectoriesPerProfile	no	no
)	no	no
{	no	no
File	no	yes
oldest	no	yes
=	no	no
logs	no	yes
.	no	no
getOldest	no	yes
(	no	no
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
oldest	no	yes
+	no	no
+	no	no
logs	no	yes
.	no	no
dirs	no	yes
)	no	no
;	no	no
FileUtils	no	yes
.	no	no
deleteQuietly	no	yes
(	no	no
oldest	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
t	yes	no
)	no	no
{	no	no

public	no	no
int	no	no
run	no	no
(	no	no
)	no	no
{	no	no
int	no	no
result	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
error	no	yes
=	no	no
false	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
messages	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
elapsedTimes	no	yes
=	no	no
Maps	no	yes
.	no	no
newTreeMap	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
mConfiguration	yes	yes
)	no	no
;	no	no

public	no	no
int	no	no
run	no	no
(	no	no
)	no	no
{	no	no
int	no	no
result	no	yes
=	no	no
0	no	no
;	no	no
boolean	no	no
error	no	yes
=	no	no
false	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
messages	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
elapsedTimes	no	yes
=	no	no
Maps	no	yes
.	no	no
newTreeMap	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
mConfiguration	no	yes
)	no	no
;	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
mConfiguration	no	yes
.	no	no
getContext	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Phase	no	no
phase	no	yes
:	no	no
mPhases	no	no
)	no	no
{	no	no
String	no	yes
msg	yes	yes
=	no	no
+	no	no
phase	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no

messages	no	yes
.	no	no
add	no	yes
(	no	no
msg	no	yes
)	no	no
;	no	no
long	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
try	no	no
{	no	no
phase	no	yes
.	no	no
execute	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
long	no	no
elapsedTime	no	yes
=	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
.	no	no
convert	no	yes
(	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
perfMetrics	no	yes
=	no	no
phase	no	yes
.	no	no
getPerfMetrics	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
perfMetrics	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
mLogger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
phase	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Entry	no	no
<	no	no
String	no	yes
,	no	no
Long	no	yes
>	no	no
perfEntry	no	yes
:	no	no
perfMetrics	no	yes
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no
elapsedTimes	no	yes
.	no	no
put	no	yes
(	no	no
phase	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
+	no	no
+	no	no
perfEntry	no	yes
.	no	no
getKey	no	yes
(	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
.	no	no
convert	no	yes
(	no	no
perfEntry	no	yes
.	no	no
getValue	no	yes
(	no	no
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
)	no	no
;	no	no
}	no	no
}	no	no
elapsedTimes	no	yes
.	no	no
put	no	yes
(	no	no
phase	no	yes
.	no	no
getClass	no	yes
(	no	no
)	no	no
.	no	no
getSimpleName	no	yes
(	no	no
)	no	no
,	no	no
elapsedTime	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
!	no	no
mFailedTests	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
TestsFailedException	no	yes
(	no	no
mFailedTests	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Throwable	no	no
throwable	yes	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
main	no	no
(	no	no
String	no	no
[	no	no
]	no	no
args	yes	no
)	no	no
throws	no	no
Exception	no	no
{	no	no

execLocally	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
mPatchFile	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
File	no	yes
smartApplyPatch	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mScratchDir	no	yes
,	no	no
)	no	no
;	no	no
PrintWriter	no	yes
writer	no	yes
=	no	no
new	no	no
PrintWriter	no	yes
(	no	no
smartApplyPatch	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
writer	no	yes
.	no	no
write	no	yes
(	no	no
Templates	no	yes
.	no	no
readResource	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
writer	no	yes
.	no	no
checkError	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
smartApplyPatch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
execLocally	no	yes
(	no	no
+	no	no
mPatchFile	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
start	no	yes
;	no	no
long	no	no
elapsedTime	no	yes
;	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
sourcePrepScript	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mScratchDir	no	yes
,	no	no
)	no	no
;	no	no

PrintWriter	no	yes
writer	no	yes
=	no	no
new	no	no
PrintWriter	no	yes
(	no	no
smartApplyPatch	no	yes
)	no	no
;	no	no
try	no	no
{	no	no
writer	no	yes
.	no	no
write	no	yes
(	no	no
Templates	no	yes
.	no	no
readResource	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
writer	no	yes
.	no	no
checkError	no	no
(	no	no
)	no	no
)	no	no
{	no	no
throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
smartApplyPatch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
execLocally	no	yes
(	no	no
+	no	no
mPatchFile	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
start	no	yes
;	no	no
long	no	no
elapsedTime	no	yes
;	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
sourcePrepScript	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mScratchDir	no	yes
,	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sourcePrepScript	yes	yes
)	no	no
;	no	no
Templates	no	yes
.	no	no
writeTemplateResult	no	yes
(	no	no
,	no	no
sourcePrepScript	yes	yes
,	no	no
getTemplateDefaults	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execLocally	no	yes
(	no	no
+	no	no
sourcePrepScript	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

throw	no	no
new	no	no
IOException	no	yes
(	no	no
+	no	no
smartApplyPatch	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
finally	no	no
{	no	no
writer	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
execLocally	no	yes
(	no	no
+	no	no
mPatchFile	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
}	no	no
long	no	no
start	no	yes
;	no	no
long	no	no
elapsedTime	yes	yes
;	no	no
start	no	yes
=	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
;	no	no
File	no	yes
sourcePrepScript	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
mScratchDir	no	yes
,	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
sourcePrepScript	no	yes
)	no	no
;	no	no
Templates	no	yes
.	no	no
writeTemplateResult	no	yes
(	no	no
,	no	no
sourcePrepScript	no	yes
,	no	no
getTemplateDefaults	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execLocally	no	yes
(	no	no
+	no	no
sourcePrepScript	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
sourcePrepScript	no	yes
+	no	no
+	no	no
sourcePrepScript	no	yes
.	no	no
delete	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
execHostsIgnoreErrors	no	yes
(	no	no
)	no	no
;	no	no
execHostsIgnoreErrors	no	yes
(	no	no
)	no	no
;	no	no
elapsedTime	yes	yes
=	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
.	no	no
convert	no	yes
(	no	no
(	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
-	no	no
start	no	yes
)	no	no
,	no	no
TimeUnit	no	yes
.	no	no
MILLISECONDS	no	yes
)	no	no
;	no	no

if	no	no
(	no	no
mPatchURL	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
boolean	no	no
patchUrlWasSeen	no	yes
=	no	no
patchUrls	no	yes
.	no	no
asMap	no	yes
(	no	no
)	no	no
.	no	no
containsKey	no	yes
(	no	no
mPatchURL	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
patchUrlWasSeen	no	yes
)	no	no
{	no	no
patchUrls	no	yes
.	no	no
put	no	yes
(	no	no
mPatchURL	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
else	no	no
{	no	no
throw	no	no
new	no	no
Exception	no	yes
(	no	no
+	no	no
mPatchURL	no	yes
+	no	no
+	no	no
)	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
mPatchFile	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
mPatchFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
FileReader	no	yes
fr	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
fr	no	yes
=	no	no
new	no	no
FileReader	no	yes
(	no	no
mPatchFile	no	yes
)	no	no
;	no	no
BufferedReader	no	yes
br	no	yes
=	no	no
new	no	no
BufferedReader	no	yes
(	no	no
fr	no	yes
)	no	no
;	no	no
String	no	yes
line	yes	yes
;	no	no
while	no	no
(	no	no
(	no	no
line	yes	yes
=	no	no
br	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
if	no	no
(	no	no
line	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
)	no	no
{	no	no

File	no	yes
yetusExecScript	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
yetusBuildScratchDir	no	yes
,	no	no
YETUS_EXEC_SCRIPT	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
String	no	yes
>	no	no
templateVars	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
putAll	no	yes
(	no	no
getTemplateDefaults	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mWorkingDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getJiraName	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mPatchFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getJiraUrl	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getJiraUser	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
conf	no	yes
.	no	no
getJiraPassword	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mOutputDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
buildUrl	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_LOG_FILE	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_OUTPUT_FOLDER	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mLogFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
yetusBuildScratchDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mOutputDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
buildUrl	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_LOG_FILE	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_OUTPUT_FOLDER	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mLogFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
yetusBuildScratchDir	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
yetusExecScript	yes	yes
)	no	no
;	no	no
Templates	no	yes
.	no	no
writeTemplateResult	no	yes
(	no	no
YETUS_EXEC_VM	no	yes
,	no	no
yetusExecScript	yes	yes
,	no	no
templateVars	no	yes
)	no	no
;	no	no
Process	no	yes
proc	no	yes
=	no	no
new	no	no
ProcessBuilder	no	yes
(	no	no
)	no	no
.	no	no
command	no	yes
(	no	no
,	no	no
yetusExecScript	yes	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
exitCode	no	yes
=	no	no
proc	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitCode	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no

templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
buildUrl	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_LOG_FILE	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
YETUS_OUTPUT_FOLDER	no	yes
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
mLogFile	no	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
templateVars	no	yes
.	no	no
put	no	yes
(	no	no
,	no	no
yetusBuildScratchDir	yes	yes
.	no	no
getAbsolutePath	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
yetusExecScript	no	yes
)	no	no
;	no	no
Templates	no	yes
.	no	no
writeTemplateResult	no	yes
(	no	no
YETUS_EXEC_VM	no	yes
,	no	no
yetusExecScript	no	yes
,	no	no
templateVars	no	yes
)	no	no
;	no	no
Process	no	yes
proc	no	yes
=	no	no
new	no	no
ProcessBuilder	no	yes
(	no	no
)	no	no
.	no	no
command	no	yes
(	no	no
,	no	no
yetusExecScript	no	yes
.	no	no
getPath	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
start	no	yes
(	no	no
)	no	no
;	no	no
int	no	no
exitCode	no	yes
=	no	no
proc	no	yes
.	no	no
waitFor	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
exitCode	no	yes
==	no	no
0	no	no
)	no	no
{	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
error	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no

private	no	no
List	no	no
<	no	no
QFileTestBatch	no	no
>	no	no
createQFileTestBatches	no	no
(	no	no
String	no	no
driver	yes	no
,	no	no
String	no	no
queryFilesProperty	no	no
,	no	no
File	no	no
directory	no	no
,	no	no
int	no	no
batchSize	no	no
,	no	no
boolean	no	no
isParallel	no	no
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
excluded	no	no
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
included	no	no
,	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
isolated	no	no
)	no	no
{	no	no

Properties	no	yes
properties	no	yes
=	no	no
new	no	no
Properties	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
path	yes	yes
=	no	no
sourceDirectory	no	yes
+	no	no
File	no	yes
.	no	no
separator	no	yes
+	no	no
propFiles	no	yes
.	no	no
get	no	yes
(	no	no
propFile	no	yes
)	no	no
;	no	no
FileInputStream	no	yes
fis	no	yes
=	no	no
null	no	no
;	no	no
try	no	no
{	no	no
fis	no	yes
=	no	no
new	no	no
FileInputStream	no	yes
(	no	no
path	yes	yes
)	no	no
;	no	no
properties	no	yes
.	no	no
load	no	yes
(	no	no
fis	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
logger	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
throw	no	no
new	no	no
IllegalArgumentException	no	yes
(	no	no
+	no	no
path	yes	yes
)	no	no
;	no	no
}	no	no
finally	no	no
{	no	no
try	no	no
{	no	no
if	no	no
(	no	no
fis	no	yes
!=	no	no
null	no	no
)	no	no
{	no	no
fis	no	yes
.	no	no
close	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
IOException	no	no
e	no	yes
)	no	no
{	no	no
}	no	no
}	no	no
propertyMap	no	yes
.	no	no
put	no	yes
(	no	no
propFile	no	yes
,	no	no
properties	no	yes
)	no	no
;	no	no

private	no	no
void	no	no
expandTestProperties	no	no
(	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
tests	no	no
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
Properties	no	no
>	no	no
propMap	no	no
)	no	no
{	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
toRemove	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
toAdd	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
String	no	yes
pattern	no	yes
=	no	no
;	no	no
Pattern	no	yes
r	no	yes
=	no	no
Pattern	no	yes
.	no	no
compile	no	yes
(	no	no
pattern	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
test	yes	yes
:	no	no
tests	no	no
)	no	no
{	no	no
Matcher	no	yes
m	no	yes
=	no	no
r	no	yes
.	no	no
matcher	no	yes
(	no	no
test	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
m	no	yes
.	no	no
find	no	no
(	no	no
)	no	no
)	no	no
{	no	no
toRemove	no	yes
.	no	no
add	no	yes
(	no	no
test	yes	yes
)	no	no
;	no	no

private	no	no
Collection	no	no
<	no	no
TestBatch	no	no
>	no	no
parse	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
RootConfig	no	yes
rootConfig	yes	yes
=	no	no
getRootConfig	no	yes
(	no	no
unitRootContext	no	yes
)	no	no
;	no	no

private	no	no
Collection	no	no
<	no	no
TestBatch	no	no
>	no	no
parse	no	no
(	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
RootConfig	no	yes
rootConfig	no	yes
=	no	no
getRootConfig	no	yes
(	no	no
unitRootContext	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
rootConfig	no	yes
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ModuleConfig	no	yes
>	no	no
moduleConfigs	yes	yes
=	no	no
extractModuleConfigs	no	yes
(	no	no
)	no	no
;	no	no

private	no	no
Collection	no	no
<	no	no
TestBatch	no	yes
>	no	no
createTestBatches	no	no
(	no	no
LinkedHashMap	no	no
<	no	no
String	no	no
,	no	no
LinkedHashSet	no	no
<	no	no
TestInfo	no	no
>>	no	no
allTests	no	no
,	no	no
RootConfig	no	no
rootConfig	no	no
,	no	no
Map	no	no
<	no	no
String	no	no
,	no	no
ModuleConfig	no	no
>	no	no
moduleConfigs	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
TestBatch	no	yes
>	no	no
testBatches	no	yes
=	no	no
new	no	no
LinkedList	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
Map	no	no
.	no	no
Entry	no	no
<	no	no
String	no	no
,	no	no
LinkedHashSet	no	no
<	no	no
TestInfo	no	no
>>	no	no
entry	yes	no
:	no	no
allTests	no	no
.	no	no
entrySet	no	no
(	no	no
)	no	no
)	no	no
{	no	no

private	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ModuleConfig	no	yes
>	no	no
extractModuleConfigs	no	no
(	no	no
)	no	no
{	no	no
Collection	no	yes
<	no	no
String	no	yes
>	no	no
modules	no	yes
=	no	no
extractConfiguredModules	no	yes
(	no	no
)	no	no
;	no	no
Map	no	yes
<	no	no
String	no	yes
,	no	no
ModuleConfig	no	yes
>	no	no
result	no	yes
=	no	no
new	no	no
HashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
moduleName	no	yes
:	no	no
modules	no	yes
)	no	no
{	no	no
Context	no	yes
moduleContext	no	yes
=	no	no
new	no	no
Context	no	yes
(	no	no
unitModuleContext	no	yes
.	no	no
getSubProperties	no	yes
(	no	no
Joiner	no	yes
.	no	no
on	no	yes
(	no	no
)	no	no
.	no	no
join	no	yes
(	no	no
moduleName	no	yes
,	no	no
)	no	no
)	no	no
)	no	no
;	no	no
ModuleConfig	no	yes
moduleConfig	yes	yes
=	no	no
getModuleConfig	no	yes
(	no	no
moduleContext	no	yes
,	no	no
moduleName	no	yes
,	no	no
DEFAULT_PROP_BATCH_SIZE_NOT_SPECIFIED	no	yes
)	no	no
;	no	no

String	no	yes
srcDirString	no	yes
=	no	no
sourceDirectory	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
TestDir	no	yes
>	no	no
unitTestsDirs	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
propDirectoriies	no	yes
=	no	no
unitRootContext	no	yes
.	no	no
getString	no	yes
(	no	no
PROP_DIRECTORIES	no	yes
,	no	no
DEFAULT_PROP_DIRECTORIES	no	yes
)	no	no
;	no	no
Iterable	no	yes
<	no	no
String	no	yes
>	no	no
propDirectoriesIterable	no	yes
=	no	no
VALUE_SPLITTER	no	yes
.	no	no
split	no	yes
(	no	no
propDirectoriies	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
unitTestDir	no	yes
:	no	no
propDirectoriesIterable	no	yes
)	no	no
{	no	no
File	no	yes
unitTestParent	no	yes
=	no	no
new	no	no
File	no	yes
(	no	no
sourceDirectory	no	yes
,	no	no
unitTestDir	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
unitTestParent	no	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
||	no	no
inTest	no	no
)	no	no
{	no	no
String	no	yes
absUnitTestDir	yes	yes
=	no	no
unitTestParent	no	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
absUnitTestDir	yes	yes
.	no	no
startsWith	no	yes
(	no	no
srcDirString	no	yes
)	no	no
,	no	no
+	no	no
absUnitTestDir	yes	yes
+	no	no
+	no	no
srcDirString	no	yes
)	no	no
;	no	no
String	no	yes
modulePath	yes	yes
=	no	no
absUnitTestDir	yes	yes
.	no	no
substring	no	yes
(	no	no
srcDirString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
modulePath	yes	yes
=	no	no
stripEndAndStart	no	yes
(	no	no
modulePath	yes	yes
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
!	no	no
modulePath	yes	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
modulePath	yes	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
modulePath	yes	yes
)	no	no
)	no	no
{	no	no
modulePath	yes	yes
=	no	no
PREFIX_TOP_LEVEL	no	yes
;	no	no
}	no	no
String	no	yes
moduleName	yes	yes
=	no	no
getModuleNameFromPathPrefix	no	yes
(	no	no
modulePath	yes	yes
)	no	no
;	no	no

List	no	yes
<	no	no
TestDir	no	yes
>	no	no
unitTestsDirs	no	yes
=	no	no
Lists	no	yes
.	no	no
newArrayList	no	yes
(	no	no
)	no	no
;	no	no
String	no	yes
propDirectoriies	no	yes
=	no	no
unitRootContext	no	yes
.	no	no
getString	no	yes
(	no	no
PROP_DIRECTORIES	no	yes
,	no	no
DEFAULT_PROP_DIRECTORIES	no	yes
)	no	no
;	no	no
Iterable	no	yes
<	no	no
String	no	yes
>	no	no
propDirectoriesIterable	no	yes
=	no	no
VALUE_SPLITTER	no	yes
.	no	no
split	no	yes
(	no	no
propDirectoriies	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
String	no	yes
unitTestDir	no	yes
:	no	no
propDirectoriesIterable	no	yes
)	no	no
{	no	no
File	no	yes
unitTestParent	yes	yes
=	no	no
new	no	no
File	no	yes
(	no	no
sourceDirectory	no	yes
,	no	no
unitTestDir	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
unitTestParent	yes	yes
.	no	no
isDirectory	no	no
(	no	no
)	no	no
||	no	no
inTest	no	no
)	no	no
{	no	no
String	no	yes
absUnitTestDir	no	yes
=	no	no
unitTestParent	yes	yes
.	no	no
getCanonicalPath	no	yes
(	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
absUnitTestDir	no	yes
.	no	no
startsWith	no	yes
(	no	no
srcDirString	no	yes
)	no	no
,	no	no
+	no	no
absUnitTestDir	no	yes
+	no	no
+	no	no
srcDirString	no	yes
)	no	no
;	no	no
String	no	yes
modulePath	no	yes
=	no	no
absUnitTestDir	no	yes
.	no	no
substring	no	yes
(	no	no
srcDirString	no	yes
.	no	no
length	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
modulePath	no	yes
=	no	no
stripEndAndStart	no	yes
(	no	no
modulePath	no	yes
,	no	no
)	no	no
;	no	no
Preconditions	no	yes
.	no	no
checkState	no	yes
(	no	no
!	no	no
modulePath	no	yes
.	no	no
startsWith	no	yes
(	no	no
)	no	no
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
,	no	no
modulePath	no	yes
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
StringUtils	no	no
.	no	no
isEmpty	no	no
(	no	no
modulePath	no	yes
)	no	no
)	no	no
{	no	no
modulePath	no	yes
=	no	no
PREFIX_TOP_LEVEL	no	yes
;	no	no
}	no	no
String	no	yes
moduleName	yes	yes
=	no	no
getModuleNameFromPathPrefix	no	yes
(	no	no
modulePath	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
info	no	yes
(	no	no
,	no	no
modulePath	no	yes
,	no	no
absUnitTestDir	no	yes
,	no	no
moduleName	yes	yes
)	no	no
;	no	no

private	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
LinkedHashSet	no	yes
<	no	no
TestInfo	no	yes
>>	no	no
generateFullTestSet	no	no
(	no	no
RootConfig	no	no
rootConfig	no	yes
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
ModuleConfig	no	no
>	no	no
moduleConfigs	no	no
,	no	no
List	no	no
<	no	no
TestDir	no	no
>	no	no
unitTestDirs	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
LinkedHashSet	no	yes
<	no	no
TestInfo	no	yes
>>	no	no
result	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TestDir	no	no
unitTestDir	yes	no
:	no	no
unitTestDirs	no	no
)	no	no
{	no	no
for	no	no
(	no	no
File	no	no
classFile	no	yes
:	no	no
fileListProvider	no	no
.	no	no
listFiles	no	no
(	no	no
unitTestDir	yes	no
.	no	no
path	no	no
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
className	yes	yes
=	no	no
classFile	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
className	yes	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
className	yes	yes
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
testName	no	yes
=	no	no
className	yes	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
String	no	yes
pathPrefix	yes	yes
=	no	no
getPathPrefix	no	yes
(	no	no
classFile	no	yes
,	no	no
rootConfig	no	yes
.	no	no
subDirForPrefix	no	yes
)	no	no
;	no	no
String	no	yes
moduleName	yes	yes
=	no	no
getModuleNameFromPathPrefix	no	yes
(	no	no
pathPrefix	yes	yes
)	no	no
;	no	no

private	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
LinkedHashSet	no	yes
<	no	no
TestInfo	no	yes
>>	no	no
generateFullTestSet	no	no
(	no	no
RootConfig	no	no
rootConfig	no	yes
,	no	no
Map	no	no
<	no	no
String	no	yes
,	no	no
ModuleConfig	no	yes
>	no	no
moduleConfigs	no	yes
,	no	no
List	no	no
<	no	no
TestDir	no	no
>	no	no
unitTestDirs	no	no
)	no	no
throws	no	no
IOException	no	no
{	no	no
LinkedHashMap	no	yes
<	no	no
String	no	yes
,	no	no
LinkedHashSet	no	yes
<	no	no
TestInfo	no	yes
>>	no	no
result	no	yes
=	no	no
new	no	no
LinkedHashMap	no	yes
<	no	no
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
TestDir	no	no
unitTestDir	no	yes
:	no	no
unitTestDirs	no	no
)	no	no
{	no	no
for	no	no
(	no	no
File	no	no
classFile	no	yes
:	no	no
fileListProvider	no	no
.	no	no
listFiles	no	no
(	no	no
unitTestDir	no	yes
.	no	no
path	no	yes
,	no	no
new	no	no
String	no	yes
[	no	no
]	no	no
{	no	no
}	no	no
,	no	no
true	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
className	no	yes
=	no	no
classFile	no	yes
.	no	no
getName	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
className	no	yes
.	no	no
startsWith	no	no
(	no	no
)	no	no
&&	no	no
!	no	no
className	no	yes
.	no	no
contains	no	no
(	no	no
)	no	no
)	no	no
{	no	no
String	no	yes
testName	no	yes
=	no	no
className	no	yes
.	no	no
replaceAll	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
String	no	yes
pathPrefix	no	yes
=	no	no
getPathPrefix	no	yes
(	no	no
classFile	no	yes
,	no	no
rootConfig	no	yes
.	no	no
subDirForPrefix	no	yes
)	no	no
;	no	no
String	no	yes
moduleName	no	yes
=	no	no
getModuleNameFromPathPrefix	no	yes
(	no	no
pathPrefix	no	yes
)	no	no
;	no	no
logger	no	yes
.	no	no
debug	no	yes
(	no	no
,	no	no
unitTestDir	no	yes
.	no	no
path	no	yes
,	no	no
className	no	yes
,	no	no
pathPrefix	no	yes
,	no	no
moduleName	no	yes
)	no	no
;	no	no
ModuleConfig	no	yes
moduleConfig	no	yes
=	no	no
moduleConfigs	no	yes
.	no	no
get	no	yes
(	no	no
moduleName	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
moduleConfig	no	yes
==	no	no
null	no	no
)	no	no
{	no	no
moduleConfig	no	yes
=	no	no
FAKE_MODULE_CONFIG	no	yes
;	no	no
}	no	no
TestInfo	no	yes
testInfo	yes	yes
=	no	no
checkAndGetTestInfo	no	yes
(	no	no
moduleName	no	yes
,	no	no
pathPrefix	no	yes
,	no	no
testName	no	yes
,	no	no
rootConfig	no	yes
,	no	no
moduleConfig	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
testInfo	yes	yes
!=	no	no
null	no	no
)	no	no
{	no	no

rejectReason	yes	yes
=	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
if	no	no
(	no	no
moduleConfig	no	yes
.	no	no
exclude	no	no
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
)	no	no
{	no	no
rejectReason	yes	yes
=	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
boolean	no	no
containsInclude	no	yes
=	no	no
!	no	no
rootConfig	no	yes
.	no	no
include	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
||	no	no
!	no	no
moduleConfig	no	yes
.	no	no
include	no	yes
.	no	no
isEmpty	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
containsInclude	no	yes
)	no	no
{	no	no
if	no	no
(	no	no
!	no	no
(	no	no
rootConfig	no	yes
.	no	no
include	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
||	no	no
moduleConfig	no	yes
.	no	no
include	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
)	no	no
)	no	no
{	no	no
rejectReason	yes	yes
=	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
excludedProvided	no	no
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
)	no	no
{	no	no
rejectReason	yes	yes
=	no	no
;	no	no
return	no	no
null	no	no
;	no	no
}	no	no
testInfo	no	yes
=	no	no
new	no	no
TestInfo	no	yes
(	no	no
moduleName	no	yes
,	no	no
moduleRelDir	no	yes
,	no	no
testName	yes	yes
,	no	no
rootConfig	no	yes
.	no	no
skipBatching	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
||	no	no
moduleConfig	no	yes
.	no	no
skipBatching	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
,	no	no
rootConfig	no	yes
.	no	no
isolate	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
||	no	no
moduleConfig	no	yes
.	no	no
isolate	no	yes
.	no	no
contains	no	yes
(	no	no
testName	yes	yes
)	no	no
)	no	no
;	no	no
return	no	no
testInfo	no	yes
;	no	no

String	no	yes
host	no	yes
=	no	no
null	no	no
;	no	no
mHostLog	no	yes
.	no	no
seek	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
while	no	no
(	no	no
(	no	no
host	no	yes
=	no	no
mHostLog	no	yes
.	no	no
readLine	no	no
(	no	no
)	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no
hosts	no	yes
.	no	no
add	no	yes
(	no	no
host	no	yes
.	no	no
trim	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
if	no	no
(	no	no
!	no	no
hosts	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
terminate	no	yes
(	no	no
hosts	no	yes
,	no	no
true	no	no
)	no	no
;	no	no
}	no	no
mHostLog	no	yes
.	no	no
seek	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
mHostLog	no	yes
.	no	no
setLength	no	yes
(	no	no
0	no	no
)	no	no
;	no	no
Thread	no	no
thread	no	no
=	no	no
new	no	no
Thread	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
while	no	no
(	no	no
true	no	no
)	no	no
{	no	no
try	no	no
{	no	no
TimeUnit	no	yes
.	no	no
MINUTES	no	yes
.	no	no
sleep	no	yes
(	no	no
60	no	no
)	no	no
;	no	no
performBackgroundWork	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

try	no	no
{	no	no
result	yes	yes
.	no	no
addAll	no	yes
(	no	no
mCloudComputeService	no	yes
.	no	no
createNodes	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
mMaxHostsPerCreateRequest	no	yes
,	no	no
numRequired	no	yes
)	no	no
)	no	no
)	no	no
;	no	no
Set	no	yes
<	no	no
String	no	yes
>	no	no
newAddresses	no	yes
=	no	no
new	no	no
HashSet	no	yes
<	no	no
String	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
NodeMetadata	no	no
node	no	yes
:	no	no
result	yes	yes
)	no	no
{	no	no
newAddresses	no	yes
.	no	no
addAll	no	yes
(	no	no
node	no	yes
.	no	no
getPublicAddresses	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
synchronized	no	no
(	no	no
mTerminatedHosts	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
String	no	yes
newAddress	no	yes
:	no	no
newAddresses	no	yes
)	no	no
{	no	no
mTerminatedHosts	no	yes
.	no	no
remove	no	yes
(	no	no
newAddress	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RunNodesException	no	no
e	no	yes
)	no	no
{	no	no
error	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
terminateInternal	no	yes
(	no	no
e	no	yes
.	no	no
getNodeErrors	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	yes	yes
.	no	no
addAll	no	yes
(	no	no
e	no	yes
.	no	no
getSuccessfulNodes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	yes	yes
=	no	no
verifyHosts	no	yes
(	no	no
result	yes	yes
)	no	no
;	no	no
for	no	no
(	no	no
NodeMetadata	no	no
node	no	yes
:	no	no
result	yes	yes
)	no	no
{	no	no

synchronized	no	no
(	no	no
mTerminatedHosts	no	yes
)	no	no
{	no	no
for	no	no
(	no	no
String	no	no
newAddress	no	yes
:	no	no
newAddresses	no	no
)	no	no
{	no	no
mTerminatedHosts	no	yes
.	no	no
remove	no	yes
(	no	no
newAddress	no	yes
)	no	no
;	no	no
}	no	no
}	no	no
}	no	no
catch	no	no
(	no	no
RunNodesException	no	no
e	no	yes
)	no	no
{	no	no
error	no	yes
=	no	no
true	no	no
;	no	no
LOG	no	yes
.	no	no
warn	no	yes
(	no	no
,	no	no
e	no	yes
)	no	no
;	no	no
terminateInternal	no	yes
(	no	no
e	no	yes
.	no	no
getNodeErrors	no	yes
(	no	no
)	no	no
.	no	no
keySet	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
result	no	yes
.	no	no
addAll	no	yes
(	no	no
e	no	yes
.	no	no
getSuccessfulNodes	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
result	no	yes
=	no	no
verifyHosts	no	yes
(	no	no
result	no	yes
)	no	no
;	no	no
for	no	no
(	no	no
NodeMetadata	no	no
node	no	yes
:	no	no
result	no	yes
)	no	no
{	no	no
mLiveHosts	no	yes
.	no	no
put	no	yes
(	no	no
publicIpOrHostname	no	yes
(	no	no
node	no	yes
)	no	no
,	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
result	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
numRequired	no	yes
=	no	no
numHosts	no	yes
-	no	no
result	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
;	no	no
if	no	no
(	no	no
numRequired	no	yes
>	no	no
0	no	no
)	no	no
{	no	no
long	no	no
sleepTime	yes	yes
=	no	no
mRetrySleepInterval	no	yes
;	no	no

private	no	no
Set	no	yes
<	no	no
NodeMetadata	no	yes
>	no	no
verifyHosts	no	no
(	no	no
Set	no	yes
<	no	no
?	no	no
extends	no	no
NodeMetadata	no	yes
>	no	no
hosts	no	yes
)	no	no
throws	no	no
CreateHostsFailedException	no	no
{	no	no
final	no	no
Set	no	yes
<	no	no
NodeMetadata	no	yes
>	no	no
result	no	yes
=	no	no
Collections	no	yes
.	no	no
synchronizedSet	no	yes
(	no	no
new	no	no
HashSet	no	yes
<	no	no
NodeMetadata	no	yes
>	no	no
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
hosts	no	yes
.	no	no
isEmpty	no	no
(	no	no
)	no	no
)	no	no
{	no	no
persistHostnamesToLog	no	yes
(	no	no
hosts	no	yes
)	no	no
;	no	no
ExecutorService	no	yes
executorService	no	yes
=	no	no
Executors	no	yes
.	no	no
newFixedThreadPool	no	yes
(	no	no
Math	no	yes
.	no	no
min	no	yes
(	no	no
hosts	no	yes
.	no	no
size	no	yes
(	no	no
)	no	no
,	no	no
25	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
for	no	no
(	no	no
final	no	no
NodeMetadata	no	yes
node	yes	yes
:	no	no
hosts	no	yes
)	no	no
{	no	no
executorService	no	yes
.	no	no
submit	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
String	no	yes
ip	no	yes
=	no	no
publicIpOrHostname	no	yes
(	no	no
node	yes	yes
)	no	no
;	no	no
SSHCommand	no	yes
command	yes	yes
=	no	no
new	no	no
SSHCommand	no	yes
(	no	no
mSSHCommandExecutor	no	yes
,	no	no
mPrivateKey	no	yes
,	no	no
mUser	no	yes
,	no	no
ip	no	yes
,	no	no
0	no	no
,	no	no
,	no	no
true	no	no
)	no	no
;	no	no
mSSHCommandExecutor	no	yes
.	no	no
execute	no	yes
(	no	no
command	yes	yes
)	no	no
;	no	no
if	no	no
(	no	no
command	yes	yes
.	no	no
getExitCode	no	no
(	no	no
)	no	no
==	no	no
Constants	no	no
.	no	no
EXIT_CODE_UNKNOWN	no	no
||	no	no
command	yes	yes
.	no	no
getException	no	no
(	no	no
)	no	no
!=	no	no
null	no	no
)	no	no
{	no	no

private	no	no
void	no	no
terminateInternal	no	no
(	no	no
final	no	no
NodeMetadata	no	no
node	yes	no
)	no	no
{	no	no

LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
node	yes	yes
)	no	no
;	no	no
mLiveHosts	no	yes
.	no	no
remove	no	yes
(	no	no
publicIpOrHostname	no	yes
(	no	no
node	yes	yes
)	no	no
)	no	no
;	no	no
mTerminationExecutor	no	no
.	no	no
submit	no	no
(	no	no
new	no	no
Runnable	no	no
(	no	no
)	no	no
{	no	no
@	no	no
Override	no	no
public	no	no
void	no	no
run	no	no
(	no	no
)	no	no
{	no	no
try	no	no
{	no	no
TimeUnit	no	yes
.	no	no
SECONDS	no	yes
.	no	no
sleep	no	yes
(	no	no
mRetrySleepInterval	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
InterruptedException	no	no
e	yes	no
)	no	no
{	no	no
Thread	no	yes
.	no	no
currentThread	no	yes
(	no	no
)	no	no
.	no	no
interrupt	no	yes
(	no	no
)	no	no
;	no	no
}	no	no
try	no	no
{	no	no
String	no	yes
ip	no	yes
=	no	no
publicIpOrHostname	no	yes
(	no	no
node	yes	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
ip	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
mTerminatedHosts	no	yes
.	no	no
containsKey	no	no
(	no	no
ip	no	yes
)	no	no
)	no	no
{	no	no
mTerminatedHosts	no	yes
.	no	no
put	no	yes
(	no	no
ip	no	yes
,	no	no
System	no	yes
.	no	no
currentTimeMillis	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
mCloudComputeService	no	yes
.	no	no
destroyNode	no	yes
(	no	no
node	yes	yes
.	no	no
getId	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	no
)	no	no
{	no	no

private	no	no
void	no	no
terminate	no	no
(	no	no
Set	no	no
<	no	no
String	no	no
>	no	no
hosts	yes	no
,	no	no
boolean	no	no
warnIfHostsNotFound	no	no
)	no	no
{	no	no

List	no	yes
<	no	no
Method	no	yes
>	no	no
udfMethods	no	yes
=	no	no
new	no	no
ArrayList	no	yes
<	no	no
Method	no	yes
>	no	no
(	no	no
)	no	no
;	no	no
int	no	no
leastConversionCost	no	yes
=	no	no
Integer	no	yes
.	no	no
MAX_VALUE	no	yes
;	no	no
for	no	no
(	no	no
Method	no	yes
m	yes	yes
:	no	no
mlist	no	no
)	no	no
{	no	no
List	no	yes
<	no	no
TypeInfo	no	yes
>	no	no
argumentsAccepted	yes	yes
=	no	no
TypeInfoUtils	no	yes
.	no	no
getParameterTypeInfos	no	yes
(	no	no
m	yes	yes
,	no	no
argumentsPassed	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
argumentsAccepted	yes	yes
==	no	no
null	no	no
)	no	no
{	no	no
continue	no	no
;	no	no
}	no	no
boolean	no	no
match	yes	yes
=	no	no
(	no	no
argumentsAccepted	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
==	no	no
argumentsPassed	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
int	no	no
conversionCost	no	yes
=	no	no
0	no	no
;	no	no
for	no	no
(	no	no
int	no	no
i	no	yes
=	no	no
0	no	no
;	no	no
i	no	yes
<	no	no
argumentsPassed	yes	yes
.	no	no
size	no	yes
(	no	no
)	no	no
&&	no	no
match	yes	yes
;	no	no
i	no	yes
++	no	no
)	no	no
{	no	no
int	no	no
cost	no	yes
=	no	no
matchCost	no	yes
(	no	no
argumentsPassed	yes	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
argumentsAccepted	yes	yes
.	no	no
get	no	yes
(	no	no
i	no	yes
)	no	no
,	no	no
exact	no	yes
)	no	no
;	no	no
if	no	no
(	no	no
cost	no	yes
==	no	no
-	no	no
1	no	no
)	no	no
{	no	no
match	yes	yes
=	no	no
false	no	no
;	no	no
}	no	no
else	no	no
{	no	no
conversionCost	no	yes
+=	no	no
cost	no	yes
;	no	no
}	no	no
}	no	no
if	no	no
(	no	no
LOG	no	no
.	no	no
isDebugEnabled	no	no
(	no	no
)	no	no
)	no	no
{	no	no

public	no	no
static	no	no
void	no	no
main	no	no
(	no	no
String	no	no
[	no	no
]	no	no
args	no	yes
)	no	no
throws	no	no
Exception	no	no
{	no	no
Options	no	yes
cmdLineOptions	no	yes
=	no	no
createCommandLineOptions	no	yes
(	no	no
)	no	no
;	no	no
CommandLineParser	no	yes
parser	no	yes
=	no	no
new	no	no
GnuParser	no	yes
(	no	no
)	no	no
;	no	no
CommandLine	no	yes
line	no	yes
;	no	no
try	no	no
{	no	no
line	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
cmdLineOptions	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ParseException	no	no
e	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
printAndExit	no	yes
(	no	no
cmdLineOptions	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
hasOption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HelpFormatter	no	yes
formatter	no	yes
=	no	no
new	no	no
HelpFormatter	no	yes
(	no	no
)	no	no
;	no	no
formatter	no	yes
.	no	no
printHelp	no	yes
(	no	no
,	no	no
cmdLineOptions	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
RunOptions	no	yes
runOptions	yes	yes
=	no	no
RunOptions	no	yes
.	no	no
fromCommandLine	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no

CommandLine	no	yes
line	no	yes
;	no	no
try	no	no
{	no	no
line	no	yes
=	no	no
parser	no	yes
.	no	no
parse	no	yes
(	no	no
cmdLineOptions	no	yes
,	no	no
args	no	yes
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
ParseException	no	no
e	no	yes
)	no	no
{	no	no
System	no	yes
.	no	no
err	no	yes
.	no	no
println	no	yes
(	no	no
+	no	no
e	no	yes
.	no	no
getLocalizedMessage	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
printAndExit	no	yes
(	no	no
cmdLineOptions	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
if	no	no
(	no	no
line	no	yes
.	no	no
hasOption	no	no
(	no	no
)	no	no
)	no	no
{	no	no
HelpFormatter	no	yes
formatter	no	yes
=	no	no
new	no	no
HelpFormatter	no	yes
(	no	no
)	no	no
;	no	no
formatter	no	yes
.	no	no
printHelp	no	yes
(	no	no
,	no	no
cmdLineOptions	no	yes
)	no	no
;	no	no
return	no	no
;	no	no
}	no	no
RunOptions	no	yes
runOptions	no	yes
=	no	no
RunOptions	no	yes
.	no	no
fromCommandLine	no	yes
(	no	no
line	no	yes
)	no	no
;	no	no
LOG	no	yes
.	no	no
info	no	yes
(	no	no
+	no	no
runOptions	no	yes
.	no	no
toString	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
String	no	yes
hiveVer	no	yes
=	no	no
HiveVersionInfo	yes	yes
.	no	no
getShortVersion	no	yes
(	no	no
)	no	no
;	no	no

tableRegexOption	no	yes
.	no	no
setArgs	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
tableRegexOption	no	yes
.	no	no
setArgName	no	yes
(	no	no
)	no	no
;	no	no
cmdLineOptions	no	yes
.	no	no
addOption	no	yes
(	no	no
tableRegexOption	no	yes
)	no	no
;	no	no
Option	no	yes
tableTypeOption	no	yes
=	no	no
new	no	no
Option	no	yes
(	no	no
,	no	no
String	no	yes
.	no	no
format	no	yes
(	no	no
+	no	no
,	no	no
Arrays	no	yes
.	no	no
stream	no	yes
(	no	no
TableType	no	yes
.	no	no
values	no	yes
(	no	no
)	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
Enum	no	yes
::	no	no
name	no	yes
)	no	no
.	no	no
collect	no	yes
(	no	no
Collectors	no	yes
.	no	no
joining	no	yes
(	no	no
)	no	no
)	no	no
)	no	no
)	no	no
;	no	no
tableTypeOption	no	yes
.	no	no
setLongOpt	no	yes
(	no	no
)	no	no
;	no	no
tableTypeOption	no	yes
.	no	no
setArgs	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
tableTypeOption	no	yes
.	no	no
setArgName	no	yes
(	no	no
)	no	no
;	no	no
cmdLineOptions	no	yes
.	no	no
addOption	no	yes
(	no	no
tableTypeOption	no	yes
)	no	no
;	no	no
Option	no	yes
tablePoolSizeOption	no	yes
=	no	no
new	no	no
Option	no	yes
(	no	no
,	no	no
)	no	no
;	no	no
tablePoolSizeOption	no	yes
.	no	no
setLongOpt	no	yes
(	no	no
)	no	no
;	no	no
tablePoolSizeOption	no	yes
.	no	no
setArgs	no	yes
(	no	no
1	no	no
)	no	no
;	no	no
tablePoolSizeOption	no	yes
.	no	no
setArgName	no	yes
(	no	no
)	no	no
;	no	no
cmdLineOptions	no	yes
.	no	no
addOption	no	yes
(	no	no
tablePoolSizeOption	no	yes
)	no	no
;	no	no
return	no	no
cmdLineOptions	no	yes
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
ex	yes	no
)	no	no
{	no	no

compactTablesState	no	yes
=	no	no
databases	no	yes
.	no	no
stream	no	yes
(	no	no
)	no	no
.	no	no
map	no	yes
(	no	no
dbName	no	yes
->	no	no
processDatabase	no	yes
(	no	no
dbName	no	yes
,	no	no
processTablePool	no	yes
,	no	no
runOptions	no	yes
)	no	no
)	no	no
.	no	no
reduce	no	yes
(	no	no
CompactTablesState	no	yes
::	no	no
merge	no	yes
)	no	no
.	no	no
orElse	no	yes
(	no	no
CompactTablesState	no	yes
.	no	no
empty	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
}	no	no
catch	no	no
(	no	no
Exception	no	no
e	yes	yes
)	no	no
{	no	no
if	no	no
(	no	no
isAccessControlException	no	no
(	no	no
e	yes	yes
)	no	no
)	no	no
{	no	no
exceptionMsg	no	yes
=	no	no
+	no	no
+	no	no
+	no	no
HiveConf	no	yes
.	no	no
ConfVars	no	yes
.	no	no
HIVE_METASTORE_AUTHORIZATION_AUTH_READS	no	yes
.	no	no
varname	no	yes
+	no	no
+	no	no
;	no	no
}	no	no
throw	no	no
new	no	no
HiveException	no	yes
(	no	no
exceptionMsg	no	yes
,	no	no
e	yes	yes
)	no	no
;	no	no
}	no	no
makeCompactionScript	no	yes
(	no	no
compactTablesState	no	yes
,	no	no
runOptions	no	yes
.	no	no
getOutputDir	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
if	no	no
(	no	no
runOptions	no	yes
.	no	no
isExecute	no	no
(	no	no
)	no	no
)	no	no
{	no	no
while	no	no
(	no	no
compactTablesState	no	yes
.	no	no
getMetaInfo	no	yes
(	no	no
)	no	no
.	no	no
getCompactionIds	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
>	no	no
0	no	no
)	no	no
{	no	no
LOG	no	yes
.	no	no
debug	no	yes
(	no	no
+	no	no
compactTablesState	no	yes
.	no	no
getMetaInfo	no	yes
(	no	no
)	no	no
.	no	no
getCompactionIds	no	yes
(	no	no
)	no	no
.	no	no
size	no	yes
(	no	no
)	no	no
+	no	no
)	no	no
;	no	no
ShowCompactResponse	no	yes
resp	no	yes
=	no	no
hms	no	yes
.	no	no
showCompactions	no	yes
(	no	no
)	no	no
;	no	no
for	no	no
(	no	no
ShowCompactResponseElement	no	no
e	yes	yes
:	no	no
resp	no	yes
.	no	no
getCompacts	no	no
(	no	no
)	no	no
)	no	no
{	no	no
final	no	no
String	no	yes
state	no	yes
=	no	no
e	yes	yes
.	no	no
getState	no	yes
(	no	no
)	no	no
;	no	no
boolean	no	no
removed	no	yes
;	no	no
switch	no	no
(	no	no
state	no	yes
)	no	no
{	no	no
case	no	no
TxnStore	no	no
.	no	no
CLEANING_RESPONSE	no	no
:	no	no
case	no	no
TxnStore	no	no
.	no	no
SUCCEEDED_RESPONSE	no	no
:	no	no
removed	no	yes
=	no	no
compactTablesState	no	yes
.	no	no
getMetaInfo	no	yes
(	no	no
)	no	no
.	no	no
getCompactionIds	no	yes
(	no	no
)	no	no
.	no	no
remove	no	no
(	no	no
e	yes	yes
.	no	no
getId	no	no
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
CompactTablesState	no	no
processDatabase	no	no
(	no	no
String	no	yes
dbName	yes	yes
,	no	no
ForkJoinPool	no	no
threadPool	no	no
,	no	no
RunOptions	no	no
runOptions	no	yes
)	no	no
{	no	no
try	no	no
{	no	no
IMetaStoreClient	no	yes
hms	no	yes
=	no	no
metaStoreClient	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
List	no	yes
<	no	no
String	no	yes
>	no	no
tables	yes	yes
;	no	no
if	no	no
(	no	no
runOptions	no	yes
.	no	no
getTableType	no	no
(	no	no
)	no	no
==	no	no
null	no	no
)	no	no
{	no	no
tables	yes	yes
=	no	no
hms	no	yes
.	no	no
getTables	no	yes
(	no	no
dbName	yes	yes
,	no	no
runOptions	no	yes
.	no	no
getTableRegex	no	yes
(	no	no
)	no	no
)	no	no
;	no	no

private	no	no
CompactTablesState	no	no
processTable	no	no
(	no	no
String	no	no
dbName	no	yes
,	no	no
String	no	no
tableName	no	yes
,	no	no
RunOptions	no	no
runOptions	no	no
)	no	no
{	no	no
try	no	no
{	no	no
IMetaStoreClient	no	yes
hms	no	yes
=	no	no
metaStoreClient	no	yes
.	no	no
get	no	yes
(	no	no
)	no	no
;	no	no
final	no	no
CompactionMetaInfo	no	yes
compactionMetaInfo	no	yes
=	no	no
new	no	no
CompactionMetaInfo	no	yes
(	no	no
)	no	no
;	no	no
Table	no	yes
t	yes	yes
=	no	no
hms	no	yes
.	no	no
getTable	no	yes
(	no	no
dbName	no	yes
,	no	no
tableName	no	yes
)	no	no
;	no	no

private	no	no
static	no	no
void	no	no
scheduleCompaction	no	no
(	no	no
Table	no	no
t	yes	yes
,	no	no
Partition	no	no
p	no	yes
,	no	no
IMetaStoreClient	no	no
db	no	yes
,	no	no
CompactionMetaInfo	no	no
compactionMetaInfo	no	no
)	no	no
throws	no	no
HiveException	no	no
,	no	no
MetaException	no	no
{	no	no
String	no	yes
partName	no	yes
=	no	no
p	no	yes
==	no	no
null	no	no
?	no	no
null	no	no
:	no	no
Warehouse	no	yes
.	no	no
makePartName	no	yes
(	no	no
t	yes	yes
.	no	no
getPartitionKeys	no	yes
(	no	no
)	no	no
,	no	no
p	no	yes
.	no	no
getValues	no	yes
(	no	no
)	no	no
)	no	no
;	no	no
try	no	no
{	no	no
CompactionResponse	no	yes
resp	yes	yes
=	no	no
db	no	yes
.	no	no
compact2	no	yes
(	no	no
t	yes	yes
.	no	no
getDbName	no	yes
(	no	no
)	no	no
,	no	no
t	yes	yes
.	no	no
getTableName	no	yes
(	no	no
)	no	no
,	no	no
partName	no	yes
,	no	no
CompactionType	no	yes
.	no	no
MAJOR	no	yes
,	no	no
null	no	no
)	no	no
;	no	no
if	no	no
(	no	no
!	no	no
resp	yes	yes
.	no	no
isAccepted	no	no
(	no	no
)	no	no
)	no	no
{	no	no

